!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT_UNLESS_DENIED	src/ap/ap_config.h	/^		ACCEPT_UNLESS_DENIED = 0,$/;"	e	enum:hostapd_bss_config::__anon3
ACCESS_NETWORK_QUERY_PROTOCOL	src/common/ieee802_11_defs.h	/^	ACCESS_NETWORK_QUERY_PROTOCOL = 0,$/;"	e	enum:adv_proto_id
ACCOUNTING_H	src/ap/accounting.h	16;"	d
ACCT_DEFAULT_UPDATE_INTERVAL	src/ap/accounting.c	33;"	d	file:
ACK_FINISHED	src/tls/tlsv1_client_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED, ACK_FINISHED,$/;"	e	enum:tlsv1_client::__anon108
ADVERTISE_DOWN	src/wps/wps_upnp_i.h	/^	ADVERTISE_DOWN = 1,$/;"	e	enum:advertisement_type_enum
ADVERTISE_UP	src/wps/wps_upnp_i.h	/^	ADVERTISE_UP = 0,$/;"	e	enum:advertisement_type_enum
ADV_PROTO_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	/^	ADV_PROTO_VENDOR_SPECIFIC = 221$/;"	e	enum:adv_proto_id
AESOBJS	hostapd/Android.mk	/^AESOBJS = # none so far$/;"	m
AESOBJS	hostapd/Makefile	/^AESOBJS = # none so far$/;"	m
AES_BLOCK_SIZE	src/crypto/aes.h	18;"	d
AES_H	src/crypto/aes.h	16;"	d
AES_I_H	src/crypto/aes_i.h	16;"	d
AES_PRIV_SIZE	src/crypto/aes_i.h	118;"	d
AES_SMALL_TABLES	src/crypto/aes_i.h	21;"	d
AES_WRAP_H	src/crypto/aes_wrap.h	23;"	d
AID_WORDS	src/ap/hostapd.h	76;"	d
AKA_AUTN_LEN	src/utils/pcsc_funcs.c	83;"	d	file:
AKA_AUTS_LEN	src/utils/pcsc_funcs.c	84;"	d	file:
AKA_RAND_LEN	src/utils/pcsc_funcs.c	82;"	d	file:
ALL	hostapd/Makefile	/^ALL=hostapd hostapd_cli$/;"	m
ALLOC_MAGIC	src/utils/os_unix.c	36;"	d	file:
ALLOW	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
ANDROID_LOG_NAME	src/utils/wpa_debug.c	36;"	d	file:
ANON_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
ANQP_3GPP_CELLULAR_NETWORK	src/common/ieee802_11_defs.h	/^	ANQP_3GPP_CELLULAR_NETWORK = 264,$/;"	e	enum:anqp_info_id
ANQP_AP_CIVIC_LOCATION	src/common/ieee802_11_defs.h	/^	ANQP_AP_CIVIC_LOCATION = 266,$/;"	e	enum:anqp_info_id
ANQP_AP_GEOSPATIAL_LOCATION	src/common/ieee802_11_defs.h	/^	ANQP_AP_GEOSPATIAL_LOCATION = 265,$/;"	e	enum:anqp_info_id
ANQP_AP_LOCATION_PUBLIC_URI	src/common/ieee802_11_defs.h	/^	ANQP_AP_LOCATION_PUBLIC_URI = 267,$/;"	e	enum:anqp_info_id
ANQP_CAPABILITY_LIST	src/common/ieee802_11_defs.h	/^	ANQP_CAPABILITY_LIST = 257,$/;"	e	enum:anqp_info_id
ANQP_DOMAIN_NAME	src/common/ieee802_11_defs.h	/^	ANQP_DOMAIN_NAME = 268,$/;"	e	enum:anqp_info_id
ANQP_EMERGENCY_ALERT_URI	src/common/ieee802_11_defs.h	/^	ANQP_EMERGENCY_ALERT_URI = 269,$/;"	e	enum:anqp_info_id
ANQP_EMERGENCY_CALL_NUMBER	src/common/ieee802_11_defs.h	/^	ANQP_EMERGENCY_CALL_NUMBER = 259,$/;"	e	enum:anqp_info_id
ANQP_EMERGENCY_NAI	src/common/ieee802_11_defs.h	/^	ANQP_EMERGENCY_NAI = 271,$/;"	e	enum:anqp_info_id
ANQP_IP_ADDR_TYPE_AVAILABILITY	src/common/ieee802_11_defs.h	/^	ANQP_IP_ADDR_TYPE_AVAILABILITY = 262,$/;"	e	enum:anqp_info_id
ANQP_NAI_REALM	src/common/ieee802_11_defs.h	/^	ANQP_NAI_REALM = 263,$/;"	e	enum:anqp_info_id
ANQP_NETWORK_AUTH_TYPE	src/common/ieee802_11_defs.h	/^	ANQP_NETWORK_AUTH_TYPE = 260,$/;"	e	enum:anqp_info_id
ANQP_QUERY_LIST	src/common/ieee802_11_defs.h	/^	ANQP_QUERY_LIST = 256,$/;"	e	enum:anqp_info_id
ANQP_ROAMING_CONSORTIUM	src/common/ieee802_11_defs.h	/^	ANQP_ROAMING_CONSORTIUM = 261,$/;"	e	enum:anqp_info_id
ANQP_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	/^	ANQP_VENDOR_SPECIFIC = 56797$/;"	e	enum:anqp_info_id
ANQP_VENUE_NAME	src/common/ieee802_11_defs.h	/^	ANQP_VENUE_NAME = 258,$/;"	e	enum:anqp_info_id
ANS1_TAG_RELATIVE_OID	src/tls/asn1.h	30;"	d
ANY_ID	src/eap_common/eap_sim_common.h	/^	NO_ID_REQ, ANY_ID, FULLAUTH_ID, PERMANENT_ID$/;"	e	enum:eap_sim_id_req
ANonce	src/ap/wpa_auth_i.h	/^	u8 ANonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_state_machine	access:public
APPLE80211_H	src/drivers/Apple80211.h	2;"	d
APPLE80211_VALUE_BSSID	src/drivers/MobileApple80211.h	/^	APPLE80211_VALUE_BSSID = 9$/;"	e	enum:__anon87
APPLE80211_VALUE_SSID	src/drivers/MobileApple80211.h	/^	APPLE80211_VALUE_SSID = 1,$/;"	e	enum:__anon87
AP_DEAUTH_DELAY	src/ap/sta_info.h	128;"	d
AP_DISASSOC_DELAY	src/ap/sta_info.h	127;"	d
AP_DRV_OPS	src/ap/ap_drv_ops.h	16;"	d
AP_LIST_H	src/ap/ap_list.h	18;"	d
AP_MAC_CMD_FLUSH	src/drivers/driver_hostap.h	/^       AP_MAC_CMD_POLICY_DENY = 2, AP_MAC_CMD_FLUSH = 3,$/;"	e	enum:__anon75
AP_MAC_CMD_KICKALL	src/drivers/driver_hostap.h	/^       AP_MAC_CMD_KICKALL = 4 };$/;"	e	enum:__anon75
AP_MAC_CMD_POLICY_ALLOW	src/drivers/driver_hostap.h	/^enum { AP_MAC_CMD_POLICY_OPEN = 0, AP_MAC_CMD_POLICY_ALLOW = 1,$/;"	e	enum:__anon75
AP_MAC_CMD_POLICY_DENY	src/drivers/driver_hostap.h	/^       AP_MAC_CMD_POLICY_DENY = 2, AP_MAC_CMD_FLUSH = 3,$/;"	e	enum:__anon75
AP_MAC_CMD_POLICY_OPEN	src/drivers/driver_hostap.h	/^enum { AP_MAC_CMD_POLICY_OPEN = 0, AP_MAC_CMD_POLICY_ALLOW = 1,$/;"	e	enum:__anon75
AP_MAX_INACTIVITY	src/ap/sta_info.h	126;"	d
AP_MAX_INACTIVITY_AFTER_DEAUTH	src/ap/sta_info.h	133;"	d
AP_MAX_INACTIVITY_AFTER_DISASSOC	src/ap/sta_info.h	131;"	d
AP_STA_CONNECTED	src/common/wpa_ctrl.h	144;"	d
AP_STA_DISCONNECTED	src/common/wpa_ctrl.h	145;"	d
ASEL_CAPABILITY_ANT_INDICES_FEEDBACK_BASED_TX_AS_CAP	src/common/ieee802_11_defs.h	600;"	d
ASEL_CAPABILITY_ANT_INDICES_FEEDBACK_CAP	src/common/ieee802_11_defs.h	602;"	d
ASEL_CAPABILITY_ASEL_CAPABLE	src/common/ieee802_11_defs.h	598;"	d
ASEL_CAPABILITY_EXPLICIT_CSI_FEEDBACK_BASED_TX_AS_CAP	src/common/ieee802_11_defs.h	599;"	d
ASEL_CAPABILITY_EXPLICIT_CSI_FEEDBACK_CAP	src/common/ieee802_11_defs.h	601;"	d
ASEL_CAPABILITY_RX_AS_CAP	src/common/ieee802_11_defs.h	603;"	d
ASEL_CAPABILITY_TX_SOUND_PPDUS_CAP	src/common/ieee802_11_defs.h	604;"	d
ASN1_CLASS_APPLICATION	src/tls/asn1.h	47;"	d
ASN1_CLASS_CONTEXT_SPECIFIC	src/tls/asn1.h	48;"	d
ASN1_CLASS_PRIVATE	src/tls/asn1.h	49;"	d
ASN1_CLASS_UNIVERSAL	src/tls/asn1.h	46;"	d
ASN1_H	src/tls/asn1.h	16;"	d
ASN1_MAX_OID_LEN	src/tls/asn1.h	58;"	d
ASN1_TAG_BITSTRING	src/tls/asn1.h	21;"	d
ASN1_TAG_BMPSTRING	src/tls/asn1.h	44;"	d
ASN1_TAG_BOOLEAN	src/tls/asn1.h	19;"	d
ASN1_TAG_ENUMERATED	src/tls/asn1.h	28;"	d
ASN1_TAG_EOC	src/tls/asn1.h	18;"	d
ASN1_TAG_EXTERNAL	src/tls/asn1.h	26;"	d
ASN1_TAG_GENERALIZEDTIME	src/tls/asn1.h	39;"	d
ASN1_TAG_GENERALSTRING	src/tls/asn1.h	42;"	d
ASN1_TAG_GRAPHICSTRING	src/tls/asn1.h	40;"	d
ASN1_TAG_IA5STRING	src/tls/asn1.h	37;"	d
ASN1_TAG_INTEGER	src/tls/asn1.h	20;"	d
ASN1_TAG_NULL	src/tls/asn1.h	23;"	d
ASN1_TAG_NUMERICSTRING	src/tls/asn1.h	33;"	d
ASN1_TAG_OBJECT_DESCRIPTOR	src/tls/asn1.h	25;"	d
ASN1_TAG_OCTETSTRING	src/tls/asn1.h	22;"	d
ASN1_TAG_OID	src/tls/asn1.h	24;"	d
ASN1_TAG_PRINTABLESTRING	src/tls/asn1.h	34;"	d
ASN1_TAG_REAL	src/tls/asn1.h	27;"	d
ASN1_TAG_SEQUENCE	src/tls/asn1.h	31;"	d
ASN1_TAG_SET	src/tls/asn1.h	32;"	d
ASN1_TAG_TG1STRING	src/tls/asn1.h	35;"	d
ASN1_TAG_UNIVERSALSTRING	src/tls/asn1.h	43;"	d
ASN1_TAG_UTCTIME	src/tls/asn1.h	38;"	d
ASN1_TAG_UTF8STRING	src/tls/asn1.h	29;"	d
ASN1_TAG_VIDEOTEXSTRING	src/tls/asn1.h	36;"	d
ASN1_TAG_VISIBLESTRING	src/tls/asn1.h	41;"	d
ATH_WPS_IE	src/drivers/driver_atheros.c	35;"	d	file:
ATIMWindow	src/drivers/driver_ndis.c	/^	ULONG ATIMWindow;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
ATIMWindow	src/drivers/driver_ralink.h	/^   ULONG                           ATIMWindow;         \/\/ units are Kusec$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
ATTR_802_1X_ENABLED	src/wps/wps_defs.h	/^	ATTR_802_1X_ENABLED = 0x1062,$/;"	e	enum:wps_attribute
ATTR_APPLICATION_EXT	src/wps/wps_defs.h	/^	ATTR_APPLICATION_EXT = 0x1058,$/;"	e	enum:wps_attribute
ATTR_APPSESSIONKEY	src/wps/wps_defs.h	/^	ATTR_APPSESSIONKEY = 0x1063,$/;"	e	enum:wps_attribute
ATTR_AP_CHANNEL	src/wps/wps_defs.h	/^	ATTR_AP_CHANNEL = 0x1001,$/;"	e	enum:wps_attribute
ATTR_AP_SETUP_LOCKED	src/wps/wps_defs.h	/^	ATTR_AP_SETUP_LOCKED = 0x1057,$/;"	e	enum:wps_attribute
ATTR_ASSOC_STATE	src/wps/wps_defs.h	/^	ATTR_ASSOC_STATE = 0x1002,$/;"	e	enum:wps_attribute
ATTR_AUTHENTICATOR	src/wps/wps_defs.h	/^	ATTR_AUTHENTICATOR = 0x1005,$/;"	e	enum:wps_attribute
ATTR_AUTH_TYPE	src/wps/wps_defs.h	/^	ATTR_AUTH_TYPE = 0x1003,$/;"	e	enum:wps_attribute
ATTR_AUTH_TYPE_FLAGS	src/wps/wps_defs.h	/^	ATTR_AUTH_TYPE_FLAGS = 0x1004,$/;"	e	enum:wps_attribute
ATTR_CONFIG_ERROR	src/wps/wps_defs.h	/^	ATTR_CONFIG_ERROR = 0x1009,$/;"	e	enum:wps_attribute
ATTR_CONFIG_METHODS	src/wps/wps_defs.h	/^	ATTR_CONFIG_METHODS = 0x1008,$/;"	e	enum:wps_attribute
ATTR_CONFIRM_URL4	src/wps/wps_defs.h	/^	ATTR_CONFIRM_URL4 = 0x100a,$/;"	e	enum:wps_attribute
ATTR_CONFIRM_URL6	src/wps/wps_defs.h	/^	ATTR_CONFIRM_URL6 = 0x100b,$/;"	e	enum:wps_attribute
ATTR_CONN_TYPE	src/wps/wps_defs.h	/^	ATTR_CONN_TYPE = 0x100c,$/;"	e	enum:wps_attribute
ATTR_CONN_TYPE_FLAGS	src/wps/wps_defs.h	/^	ATTR_CONN_TYPE_FLAGS = 0x100d,$/;"	e	enum:wps_attribute
ATTR_CRED	src/wps/wps_defs.h	/^	ATTR_CRED = 0x100e,$/;"	e	enum:wps_attribute
ATTR_DEV_NAME	src/wps/wps_defs.h	/^	ATTR_DEV_NAME = 0x1011,$/;"	e	enum:wps_attribute
ATTR_DEV_PASSWORD_ID	src/wps/wps_defs.h	/^	ATTR_DEV_PASSWORD_ID = 0x1012,$/;"	e	enum:wps_attribute
ATTR_EAP_IDENTITY	src/wps/wps_defs.h	/^	ATTR_EAP_IDENTITY = 0x104d,$/;"	e	enum:wps_attribute
ATTR_EAP_TYPE	src/wps/wps_defs.h	/^	ATTR_EAP_TYPE = 0x1059,$/;"	e	enum:wps_attribute
ATTR_ENCR_SETTINGS	src/wps/wps_defs.h	/^	ATTR_ENCR_SETTINGS = 0x1018,$/;"	e	enum:wps_attribute
ATTR_ENCR_TYPE	src/wps/wps_defs.h	/^	ATTR_ENCR_TYPE = 0x100f,$/;"	e	enum:wps_attribute
ATTR_ENCR_TYPE_FLAGS	src/wps/wps_defs.h	/^	ATTR_ENCR_TYPE_FLAGS = 0x1010,$/;"	e	enum:wps_attribute
ATTR_ENROLLEE_NONCE	src/wps/wps_defs.h	/^	ATTR_ENROLLEE_NONCE = 0x101a,$/;"	e	enum:wps_attribute
ATTR_EXTENSIBILITY_TEST	src/wps/wps_defs.h	/^	ATTR_EXTENSIBILITY_TEST = 0x10fa \/* _NOT_ defined in the spec *\/$/;"	e	enum:wps_attribute
ATTR_E_HASH1	src/wps/wps_defs.h	/^	ATTR_E_HASH1 = 0x1014,$/;"	e	enum:wps_attribute
ATTR_E_HASH2	src/wps/wps_defs.h	/^	ATTR_E_HASH2 = 0x1015,$/;"	e	enum:wps_attribute
ATTR_E_SNONCE1	src/wps/wps_defs.h	/^	ATTR_E_SNONCE1 = 0x1016,$/;"	e	enum:wps_attribute
ATTR_E_SNONCE2	src/wps/wps_defs.h	/^	ATTR_E_SNONCE2 = 0x1017,$/;"	e	enum:wps_attribute
ATTR_FEATURE_ID	src/wps/wps_defs.h	/^	ATTR_FEATURE_ID = 0x101b,$/;"	e	enum:wps_attribute
ATTR_IDENTITY	src/wps/wps_defs.h	/^	ATTR_IDENTITY = 0x101c,$/;"	e	enum:wps_attribute
ATTR_IDENTITY_PROOF	src/wps/wps_defs.h	/^	ATTR_IDENTITY_PROOF = 0x101d,$/;"	e	enum:wps_attribute
ATTR_IV	src/wps/wps_defs.h	/^	ATTR_IV = 0x1060,$/;"	e	enum:wps_attribute
ATTR_KEY_ID	src/wps/wps_defs.h	/^	ATTR_KEY_ID = 0x101f,$/;"	e	enum:wps_attribute
ATTR_KEY_LIFETIME	src/wps/wps_defs.h	/^	ATTR_KEY_LIFETIME = 0x1051,$/;"	e	enum:wps_attribute
ATTR_KEY_PROVIDED_AUTO	src/wps/wps_defs.h	/^	ATTR_KEY_PROVIDED_AUTO = 0x1061,$/;"	e	enum:wps_attribute
ATTR_KEY_WRAP_AUTH	src/wps/wps_defs.h	/^	ATTR_KEY_WRAP_AUTH = 0x101e,$/;"	e	enum:wps_attribute
ATTR_MAC_ADDR	src/wps/wps_defs.h	/^	ATTR_MAC_ADDR = 0x1020,$/;"	e	enum:wps_attribute
ATTR_MANUFACTURER	src/wps/wps_defs.h	/^	ATTR_MANUFACTURER = 0x1021,$/;"	e	enum:wps_attribute
ATTR_MODEL_NAME	src/wps/wps_defs.h	/^	ATTR_MODEL_NAME = 0x1023,$/;"	e	enum:wps_attribute
ATTR_MODEL_NUMBER	src/wps/wps_defs.h	/^	ATTR_MODEL_NUMBER = 0x1024,$/;"	e	enum:wps_attribute
ATTR_MSG_COUNTER	src/wps/wps_defs.h	/^	ATTR_MSG_COUNTER = 0x104e,$/;"	e	enum:wps_attribute
ATTR_MSG_TYPE	src/wps/wps_defs.h	/^	ATTR_MSG_TYPE = 0x1022,$/;"	e	enum:wps_attribute
ATTR_NETWORK_INDEX	src/wps/wps_defs.h	/^	ATTR_NETWORK_INDEX = 0x1026,$/;"	e	enum:wps_attribute
ATTR_NETWORK_KEY	src/wps/wps_defs.h	/^	ATTR_NETWORK_KEY = 0x1027,$/;"	e	enum:wps_attribute
ATTR_NETWORK_KEY_INDEX	src/wps/wps_defs.h	/^	ATTR_NETWORK_KEY_INDEX = 0x1028,$/;"	e	enum:wps_attribute
ATTR_NEW_DEVICE_NAME	src/wps/wps_defs.h	/^	ATTR_NEW_DEVICE_NAME = 0x1029,$/;"	e	enum:wps_attribute
ATTR_NEW_PASSWORD	src/wps/wps_defs.h	/^	ATTR_NEW_PASSWORD = 0x102a,$/;"	e	enum:wps_attribute
ATTR_OOB_DEVICE_PASSWORD	src/wps/wps_defs.h	/^	ATTR_OOB_DEVICE_PASSWORD = 0x102c,$/;"	e	enum:wps_attribute
ATTR_OS_VERSION	src/wps/wps_defs.h	/^	ATTR_OS_VERSION = 0x102d,$/;"	e	enum:wps_attribute
ATTR_PERMITTED_CFG_METHODS	src/wps/wps_defs.h	/^	ATTR_PERMITTED_CFG_METHODS = 0x1052,$/;"	e	enum:wps_attribute
ATTR_PORTABLE_DEV	src/wps/wps_defs.h	/^	ATTR_PORTABLE_DEV = 0x1056,$/;"	e	enum:wps_attribute
ATTR_POWER_LEVEL	src/wps/wps_defs.h	/^	ATTR_POWER_LEVEL = 0x102f,$/;"	e	enum:wps_attribute
ATTR_PRIMARY_DEV_TYPE	src/wps/wps_defs.h	/^	ATTR_PRIMARY_DEV_TYPE = 0x1054,$/;"	e	enum:wps_attribute
ATTR_PSK_CURRENT	src/wps/wps_defs.h	/^	ATTR_PSK_CURRENT = 0x1030,$/;"	e	enum:wps_attribute
ATTR_PSK_MAX	src/wps/wps_defs.h	/^	ATTR_PSK_MAX = 0x1031,$/;"	e	enum:wps_attribute
ATTR_PUBKEY_HASH	src/wps/wps_defs.h	/^	ATTR_PUBKEY_HASH = 0x104f,$/;"	e	enum:wps_attribute
ATTR_PUBLIC_KEY	src/wps/wps_defs.h	/^	ATTR_PUBLIC_KEY = 0x1032,$/;"	e	enum:wps_attribute
ATTR_RADIO_ENABLE	src/wps/wps_defs.h	/^	ATTR_RADIO_ENABLE = 0x1033,$/;"	e	enum:wps_attribute
ATTR_REBOOT	src/wps/wps_defs.h	/^	ATTR_REBOOT = 0x1034,$/;"	e	enum:wps_attribute
ATTR_REGISTRAR_CURRENT	src/wps/wps_defs.h	/^	ATTR_REGISTRAR_CURRENT = 0x1035,$/;"	e	enum:wps_attribute
ATTR_REGISTRAR_ESTABLISHED	src/wps/wps_defs.h	/^	ATTR_REGISTRAR_ESTABLISHED = 0x1036,$/;"	e	enum:wps_attribute
ATTR_REGISTRAR_LIST	src/wps/wps_defs.h	/^	ATTR_REGISTRAR_LIST = 0x1037,$/;"	e	enum:wps_attribute
ATTR_REGISTRAR_MAX	src/wps/wps_defs.h	/^	ATTR_REGISTRAR_MAX = 0x1038,$/;"	e	enum:wps_attribute
ATTR_REGISTRAR_NONCE	src/wps/wps_defs.h	/^	ATTR_REGISTRAR_NONCE = 0x1039,$/;"	e	enum:wps_attribute
ATTR_REKEY_KEY	src/wps/wps_defs.h	/^	ATTR_REKEY_KEY = 0x1050,$/;"	e	enum:wps_attribute
ATTR_REQUESTED_DEV_TYPE	src/wps/wps_defs.h	/^	ATTR_REQUESTED_DEV_TYPE = 0x106a,$/;"	e	enum:wps_attribute
ATTR_REQUEST_TYPE	src/wps/wps_defs.h	/^	ATTR_REQUEST_TYPE = 0x103a,$/;"	e	enum:wps_attribute
ATTR_RESPONSE_TYPE	src/wps/wps_defs.h	/^	ATTR_RESPONSE_TYPE = 0x103b,$/;"	e	enum:wps_attribute
ATTR_RF_BANDS	src/wps/wps_defs.h	/^	ATTR_RF_BANDS = 0x103c,$/;"	e	enum:wps_attribute
ATTR_R_HASH1	src/wps/wps_defs.h	/^	ATTR_R_HASH1 = 0x103d,$/;"	e	enum:wps_attribute
ATTR_R_HASH2	src/wps/wps_defs.h	/^	ATTR_R_HASH2 = 0x103e,$/;"	e	enum:wps_attribute
ATTR_R_SNONCE1	src/wps/wps_defs.h	/^	ATTR_R_SNONCE1 = 0x103f,$/;"	e	enum:wps_attribute
ATTR_R_SNONCE2	src/wps/wps_defs.h	/^	ATTR_R_SNONCE2 = 0x1040,$/;"	e	enum:wps_attribute
ATTR_SECONDARY_DEV_TYPE_LIST	src/wps/wps_defs.h	/^	ATTR_SECONDARY_DEV_TYPE_LIST = 0x1055,$/;"	e	enum:wps_attribute
ATTR_SELECTED_REGISTRAR	src/wps/wps_defs.h	/^	ATTR_SELECTED_REGISTRAR = 0x1041,$/;"	e	enum:wps_attribute
ATTR_SELECTED_REGISTRAR_CONFIG_METHODS	src/wps/wps_defs.h	/^	ATTR_SELECTED_REGISTRAR_CONFIG_METHODS = 0x1053,$/;"	e	enum:wps_attribute
ATTR_SERIAL_NUMBER	src/wps/wps_defs.h	/^	ATTR_SERIAL_NUMBER = 0x1042,$/;"	e	enum:wps_attribute
ATTR_SSID	src/wps/wps_defs.h	/^	ATTR_SSID = 0x1045,$/;"	e	enum:wps_attribute
ATTR_TOTAL_NETWORKS	src/wps/wps_defs.h	/^	ATTR_TOTAL_NETWORKS = 0x1046,$/;"	e	enum:wps_attribute
ATTR_UUID_E	src/wps/wps_defs.h	/^	ATTR_UUID_E = 0x1047,$/;"	e	enum:wps_attribute
ATTR_UUID_R	src/wps/wps_defs.h	/^	ATTR_UUID_R = 0x1048,$/;"	e	enum:wps_attribute
ATTR_VENDOR_EXT	src/wps/wps_defs.h	/^	ATTR_VENDOR_EXT = 0x1049,$/;"	e	enum:wps_attribute
ATTR_VERSION	src/wps/wps_defs.h	/^	ATTR_VERSION = 0x104a,$/;"	e	enum:wps_attribute
ATTR_WEPTRANSMITKEY	src/wps/wps_defs.h	/^	ATTR_WEPTRANSMITKEY = 0x1064,$/;"	e	enum:wps_attribute
ATTR_WPS_STATE	src/wps/wps_defs.h	/^	ATTR_WPS_STATE = 0x1044,$/;"	e	enum:wps_attribute
ATTR_X509_CERT	src/wps/wps_defs.h	/^	ATTR_X509_CERT = 0x104c,$/;"	e	enum:wps_attribute
ATTR_X509_CERT_REQ	src/wps/wps_defs.h	/^	ATTR_X509_CERT_REQ = 0x104b,$/;"	e	enum:wps_attribute
AUTHENTICATION_FAILED	src/eap_common/ikev2_common.h	/^	AUTHENTICATION_FAILED = 24,$/;"	e	enum:__anon124
AUTHSRV_H	src/ap/authsrv.h	16;"	d
AUTH_AES_XCBC_96	src/eap_common/ikev2_common.h	/^	AUTH_AES_XCBC_96 = 5$/;"	e	enum:__anon119
AUTH_DES_MAC	src/eap_common/ikev2_common.h	/^	AUTH_DES_MAC = 3,$/;"	e	enum:__anon119
AUTH_DSS_SIGN	src/eap_common/ikev2_common.h	/^	AUTH_DSS_SIGN = 3$/;"	e	enum:__anon123
AUTH_HMAC_MD5_96	src/eap_common/ikev2_common.h	/^	AUTH_HMAC_MD5_96 = 1,$/;"	e	enum:__anon119
AUTH_HMAC_SHA1_96	src/eap_common/ikev2_common.h	/^	AUTH_HMAC_SHA1_96 = 2,$/;"	e	enum:__anon119
AUTH_KEY_TX_KEY_TRANSMIT	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_KEY_TX_NO_KEY_TRANSMIT, AUTH_KEY_TX_KEY_TRANSMIT$/;"	e	enum:eapol_state_machine::__anon69
AUTH_KEY_TX_NO_KEY_TRANSMIT	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_KEY_TX_NO_KEY_TRANSMIT, AUTH_KEY_TX_KEY_TRANSMIT$/;"	e	enum:eapol_state_machine::__anon69
AUTH_KPDK_MD5	src/eap_common/ikev2_common.h	/^	AUTH_KPDK_MD5 = 4,$/;"	e	enum:__anon119
AUTH_PAE_ABORTING	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_ABORTING, AUTH_PAE_HELD, AUTH_PAE_FORCE_AUTH,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_AUTHENTICATED	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_AUTHENTICATING, AUTH_PAE_AUTHENTICATED,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_AUTHENTICATING	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_AUTHENTICATING, AUTH_PAE_AUTHENTICATED,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_CONNECTING	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_PAE_INITIALIZE, AUTH_PAE_DISCONNECTED, AUTH_PAE_CONNECTING,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_DEFAULT_quietPeriod	src/eapol_auth/eapol_auth_sm_i.h	85;"	d
AUTH_PAE_DEFAULT_reAuthMax	src/eapol_auth/eapol_auth_sm_i.h	87;"	d
AUTH_PAE_DISCONNECTED	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_PAE_INITIALIZE, AUTH_PAE_DISCONNECTED, AUTH_PAE_CONNECTING,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_FORCE_AUTH	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_ABORTING, AUTH_PAE_HELD, AUTH_PAE_FORCE_AUTH,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_FORCE_UNAUTH	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_FORCE_UNAUTH, AUTH_PAE_RESTART } auth_pae_state;    \/\/ Authenticator PAE状态机$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_HELD	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_ABORTING, AUTH_PAE_HELD, AUTH_PAE_FORCE_AUTH,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_INITIALIZE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_PAE_INITIALIZE, AUTH_PAE_DISCONNECTED, AUTH_PAE_CONNECTING,$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PAE_RESTART	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_FORCE_UNAUTH, AUTH_PAE_RESTART } auth_pae_state;    \/\/ Authenticator PAE状态机$/;"	e	enum:eapol_state_machine::__anon66
AUTH_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
AUTH_RSA_SIGN	src/eap_common/ikev2_common.h	/^	AUTH_RSA_SIGN = 1,$/;"	e	enum:__anon123
AUTH_SHARED_KEY_MIC	src/eap_common/ikev2_common.h	/^	AUTH_SHARED_KEY_MIC = 2,$/;"	e	enum:__anon123
AVP_FLAGS_MANDATORY	src/eap_common/eap_ttls.h	35;"	d
AVP_FLAGS_VENDOR	src/eap_common/eap_ttls.h	34;"	d
AVP_PAD	src/eap_common/eap_ttls.h	37;"	d
Addr	src/drivers/driver_ralink.h	/^    UCHAR        Addr[MAC_ADDR_LEN];$/;"	m	struct:_MLME_DEAUTH_REQ_STRUCT	access:public
Anonce	src/rsn_supp/tdls.c	/^	u8 Anonce[WPA_NONCE_LEN]; \/* Responder Nonce in TDLS *\/$/;"	m	struct:wpa_tdls_ftie	file:	access:public
Apple80211Associate	src/drivers/MobileApple80211.c	/^int Apple80211Associate(Apple80211Ref handle, CFDictionaryRef bss,$/;"	f	signature:(Apple80211Ref handle, CFDictionaryRef bss, CFStringRef password)
Apple80211Associate	src/drivers/MobileApple80211.h	/^int Apple80211Associate(Apple80211Ref handle, CFDictionaryRef bss,$/;"	p	signature:(Apple80211Ref handle, CFDictionaryRef bss, CFStringRef password)
Apple80211AssociateAndCopyInfo	src/drivers/MobileApple80211.c	/^int Apple80211AssociateAndCopyInfo(Apple80211Ref handle, CFDictionaryRef bss,$/;"	f	signature:(Apple80211Ref handle, CFDictionaryRef bss, CFStringRef password, CFDictionaryRef *info)
Apple80211AssociateAndCopyInfo	src/drivers/MobileApple80211.h	/^int Apple80211AssociateAndCopyInfo(Apple80211Ref handle, CFDictionaryRef bss,$/;"	p	signature:(Apple80211Ref handle, CFDictionaryRef bss, CFStringRef password, CFDictionaryRef *info)
Apple80211BindToInterface	src/drivers/MobileApple80211.c	/^int Apple80211BindToInterface(Apple80211Ref handle,$/;"	f	signature:(Apple80211Ref handle, CFStringRef interface)
Apple80211BindToInterface	src/drivers/MobileApple80211.h	/^int Apple80211BindToInterface(Apple80211Ref handle,$/;"	p	signature:(Apple80211Ref handle, CFStringRef interface)
Apple80211Close	src/drivers/MobileApple80211.c	/^int Apple80211Close(Apple80211Ref ctx)$/;"	f	signature:(Apple80211Ref ctx)
Apple80211Close	src/drivers/MobileApple80211.h	/^int Apple80211Close(Apple80211Ref ctx);$/;"	p	signature:(Apple80211Ref ctx)
Apple80211CopyValue	src/drivers/MobileApple80211.c	/^int Apple80211CopyValue(Apple80211Ref handle, int field, CFDictionaryRef arg2,$/;"	f	signature:(Apple80211Ref handle, int field, CFDictionaryRef arg2, void *value)
Apple80211CopyValue	src/drivers/MobileApple80211.h	/^int Apple80211CopyValue(Apple80211Ref handle, int field, CFDictionaryRef arg2,$/;"	p	signature:(Apple80211Ref handle, int field, CFDictionaryRef arg2, void *value)
Apple80211GetIfListCopy	src/drivers/MobileApple80211.c	/^int Apple80211GetIfListCopy(Apple80211Ref handle, CFArrayRef *list)$/;"	f	signature:(Apple80211Ref handle, CFArrayRef *list)
Apple80211GetIfListCopy	src/drivers/MobileApple80211.h	/^int Apple80211GetIfListCopy(Apple80211Ref handle, CFArrayRef *list);$/;"	p	signature:(Apple80211Ref handle, CFArrayRef *list)
Apple80211GetInfoCopy	src/drivers/MobileApple80211.c	/^int Apple80211GetInfoCopy(Apple80211Ref handle,$/;"	f	signature:(Apple80211Ref handle, CFDictionaryRef *info)
Apple80211GetInfoCopy	src/drivers/MobileApple80211.h	/^int Apple80211GetInfoCopy(Apple80211Ref handle,$/;"	p	signature:(Apple80211Ref handle, CFDictionaryRef *info)
Apple80211GetInterfaceNameCopy	src/drivers/MobileApple80211.c	/^int Apple80211GetInterfaceNameCopy(Apple80211Ref handle,$/;"	f	signature:(Apple80211Ref handle, CFStringRef *name)
Apple80211GetInterfaceNameCopy	src/drivers/MobileApple80211.h	/^int Apple80211GetInterfaceNameCopy(Apple80211Ref handle,$/;"	p	signature:(Apple80211Ref handle, CFStringRef *name)
Apple80211GetPower	src/drivers/MobileApple80211.c	/^int Apple80211GetPower(Apple80211Ref handle, char *pwr)$/;"	f	signature:(Apple80211Ref handle, char *pwr)
Apple80211GetPower	src/drivers/MobileApple80211.h	/^int Apple80211GetPower(Apple80211Ref handle, char *pwr);$/;"	p	signature:(Apple80211Ref handle, char *pwr)
Apple80211Open	src/drivers/MobileApple80211.c	/^int Apple80211Open(Apple80211Ref *ctx)$/;"	f	signature:(Apple80211Ref *ctx)
Apple80211Open	src/drivers/MobileApple80211.h	/^int Apple80211Open(Apple80211Ref *ctx);$/;"	p	signature:(Apple80211Ref *ctx)
Apple80211Ref	src/drivers/MobileApple80211.h	/^typedef struct Apple80211 *Apple80211Ref;$/;"	t	typeref:struct:Apple80211
Apple80211Scan	src/drivers/MobileApple80211.c	/^int Apple80211Scan(Apple80211Ref handle, CFArrayRef *list,$/;"	f	signature:(Apple80211Ref handle, CFArrayRef *list, CFDictionaryRef parameters)
Apple80211Scan	src/drivers/MobileApple80211.h	/^int Apple80211Scan(Apple80211Ref handle, CFArrayRef *list,$/;"	p	signature:(Apple80211Ref handle, CFArrayRef *list, CFDictionaryRef parameters)
Apple80211SetPower	src/drivers/MobileApple80211.c	/^int Apple80211SetPower(Apple80211Ref handle, char pwr)$/;"	f	signature:(Apple80211Ref handle, char pwr)
Apple80211SetPower	src/drivers/MobileApple80211.h	/^int Apple80211SetPower(Apple80211Ref handle, char pwr);$/;"	p	signature:(Apple80211Ref handle, char pwr)
AssociationId	src/drivers/driver_ndis.c	/^	USHORT AssociationId;$/;"	m	struct:NDIS_802_11_AI_RESFI	file:	access:public
AssociationId	src/drivers/driver_ralink.h	/^    USHORT AssociationId;$/;"	m	struct:_NDIS_802_11_AI_RESFI	access:public
AuthModeSupported	src/drivers/driver_ndis.c	/^	NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_ENCRYPTION	file:	access:public
AuthenticationEncryptionSupported	src/drivers/driver_ndis.c	/^		AuthenticationEncryptionSupported[1];$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
AuthenticationRequest	src/ap/wpa_auth_i.h	/^	Boolean AuthenticationRequest;$/;"	m	struct:wpa_state_machine	access:public
Authorized	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { Unauthorized = 2, Authorized = 1 } PortState;    \/\/ 受控端口当前状态：未授权状态、授权状态$/;"	e	enum:__anon64
Authorized	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Unauthorized, Authorized } PortStatus;$/;"	e	enum:__anon22
Auto	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { ForceUnauthorized = 1, ForceAuthorized = 3, Auto = 2 }$/;"	e	enum:__anon63
Auto	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Auto, ForceUnauthorized, ForceAuthorized } PortControl;$/;"	e	enum:__anon23
AvailableRequestFixedIEs	src/drivers/driver_ndis.c	/^	USHORT AvailableRequestFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
AvailableRequestFixedIEs	src/drivers/driver_ralink.h	/^    USHORT                  AvailableRequestFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
AvailableResponseFixedIEs	src/drivers/driver_ndis.c	/^	USHORT AvailableResponseFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
AvailableResponseFixedIEs	src/drivers/driver_ralink.h	/^    USHORT                  AvailableResponseFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
BASE64_H	src/utils/base64.h	16;"	d
BCHECK	hostapd/Makefile	/^BCHECK=..\/src\/drivers\/build.hostapd$/;"	m
BEACON_H	src/ap/beacon.h	17;"	d
BEACON_HEAD_BUF_SIZE	src/ap/beacon.c	451;"	d	file:
BEACON_TAIL_BUF_SIZE	src/ap/beacon.c	452;"	d	file:
BE_AUTH_DEFAULT_serverTimeout	src/eapol_auth/eapol_auth_sm_i.h	108;"	d
BE_AUTH_FAIL	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_IDLE	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_IGNORE	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_IGNORE$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_INITIALIZE	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_REQUEST	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { BE_AUTH_REQUEST, BE_AUTH_RESPONSE, BE_AUTH_SUCCESS,$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_RESPONSE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { BE_AUTH_REQUEST, BE_AUTH_RESPONSE, BE_AUTH_SUCCESS,$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_SUCCESS	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { BE_AUTH_REQUEST, BE_AUTH_RESPONSE, BE_AUTH_SUCCESS,$/;"	e	enum:eapol_state_machine::__anon67
BE_AUTH_TIMEOUT	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
BIGNUM_H	src/tls/bignum.h	16;"	d
BIO_from_keystore	src/crypto/tls_openssl.c	/^static BIO * BIO_from_keystore(const char *key)$/;"	f	file:	signature:(const char *key)
BIT	src/utils/common.h	430;"	d
BN_FAST_MP_MONTGOMERY_REDUCE_C	src/tls/libtommath.c	38;"	d	file:
BN_FAST_S_MP_SQR_C	src/tls/libtommath.c	43;"	d	file:
BN_MP_ABS_C	src/tls/libtommath.c	50;"	d	file:
BN_MP_CLEAR_MULTI_C	src/tls/libtommath.c	49;"	d	file:
BN_MP_DIV_SMALL	src/tls/libtommath.c	47;"	d	file:
BN_MP_EXPTMOD_FAST_C	src/tls/libtommath.c	36;"	d	file:
BN_MP_INIT_MULTI_C	src/tls/libtommath.c	48;"	d	file:
BN_MP_INVMOD_C	src/tls/libtommath.c	21;"	d	file:
BN_MP_INVMOD_SLOW_C	src/tls/libtommath.c	25;"	d	file:
BN_MP_MONTGOMERY_CALC_NORMALIZATION_C	src/tls/libtommath.c	39;"	d	file:
BN_MP_MONTGOMERY_SETUP_C	src/tls/libtommath.c	37;"	d	file:
BN_MP_MUL_2_C	src/tls/libtommath.c	40;"	d	file:
BN_MP_MUL_D_C	src/tls/libtommath.c	33;"	d	file:
BN_S_MP_EXPTMOD_C	src/tls/libtommath.c	22;"	d	file:
BN_S_MP_MUL_DIGS_C	src/tls/libtommath.c	24;"	d	file:
BN_S_MP_MUL_HIGH_DIGS_C	src/tls/libtommath.c	27;"	d	file:
BN_S_MP_SQR_C	src/tls/libtommath.c	26;"	d	file:
BOOLEAN	src/drivers/driver_ralink.h	91;"	d
BOTH_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:BSSID_INFO	file:	access:public
BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:NDIS_802_11_REMOVE_KEY	file:	access:public
BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:PMKID_CANDIDATE	file:	access:public
BSSID	src/drivers/driver_ralink.h	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:_BSSID_INFO	access:public
BSSID	src/drivers/driver_ralink.h	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:_PMKID_CANDIDATE	access:public
BSSID	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS BSSID;      $/;"	m	struct:_NDIS_802_11_REMOVE_KEY	access:public
BSSID	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:_NDIS_802_11_KEY	access:public
BSSIDInfo	src/drivers/driver_ndis.c	/^	BSSID_INFO BSSIDInfo[1];$/;"	m	struct:NDIS_802_11_PMKID	file:	access:public
BSSIDInfo	src/drivers/driver_ralink.h	/^	BSSID_INFO BSSIDInfo[1];$/;"	m	struct:_NDIS_802_11_PMKID	access:public
BSSIDInfoCount	src/drivers/driver_ndis.c	/^	ULONG BSSIDInfoCount;$/;"	m	struct:NDIS_802_11_PMKID	file:	access:public
BSSIDInfoCount	src/drivers/driver_ralink.h	/^	ULONG BSSIDInfoCount;$/;"	m	struct:_NDIS_802_11_PMKID	access:public
BSSID_INFO	src/drivers/driver_ndis.c	/^typedef struct BSSID_INFO {$/;"	s	file:
BSSID_INFO	src/drivers/driver_ndis.c	/^} BSSID_INFO;$/;"	t	typeref:struct:BSSID_INFO	file:
BSSID_INFO	src/drivers/driver_ralink.h	/^} BSSID_INFO, *PBSSID_INFO;$/;"	t	typeref:struct:_BSSID_INFO
BSSID_INFO::BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:BSSID_INFO	file:	access:public
BSSID_INFO::PMKID	src/drivers/driver_ndis.c	/^	NDIS_802_11_PMKID_VALUE PMKID;$/;"	m	struct:BSSID_INFO	file:	access:public
BSS_MEMBERSHIP_SELECTOR_HT_PHY	src/common/ieee802_11_defs.h	634;"	d
BUILD_CONFIG_H	src/utils/build_config.h	22;"	d
BatchEnding	src/eap_peer/tncc.c	/^	TNC_Result (*BatchEnding)($/;"	m	struct:tnc_if_imc	file:	access:public
BatchEnding	src/eap_server/tncs.c	/^	TNC_Result (*BatchEnding)($/;"	m	struct:tnc_if_imv	file:	access:public
BeaconInterval	src/drivers/driver_ndis.c	/^	USHORT BeaconInterval;$/;"	m	struct:NDIS_802_11_FIXED_IEs	file:	access:public
BeaconInterval	src/drivers/driver_ralink.h	/^    USHORT BeaconInterval;$/;"	m	struct:_NDIS_802_11_FIXED_IEs	access:public
BeaconPeriod	src/drivers/driver_ndis.c	/^	ULONG BeaconPeriod;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
BeaconPeriod	src/drivers/driver_ralink.h	/^   ULONG                           BeaconPeriod;       \/\/ units are Kusec$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
BeginHandshake	src/eap_peer/tncc.c	/^	TNC_Result (*BeginHandshake)($/;"	m	struct:tnc_if_imc	file:	access:public
BindingIndex	src/drivers/driver_ndis.c	/^	ULONG BindingIndex;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
Boolean	src/common/defs.h	/^typedef enum { FALSE = 0, TRUE = 1 } Boolean;$/;"	t	typeref:enum:__anon62
Both	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { Both = 0, In = 1 } ControlledDirection;          \/\/ 受控方向：双向受控、输入受控$/;"	e	enum:__anon65
Bssid	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS Bssid;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:	access:public
Bssid	src/drivers/driver_ndis.c	/^	NDIS_WLAN_BSSID_EX Bssid[1];$/;"	m	struct:NDIS_802_11_BSSID_LIST_EX	file:	access:public
Bssid	src/drivers/driver_ralink.h	/^    NDIS_WLAN_BSSID_EX      Bssid[1];$/;"	m	struct:_NDIS_802_11_BSSID_LIST_EX	access:public
Bssid	src/drivers/driver_ralink.h	/^   NDIS_WLAN_BSSID Bssid[1];$/;"	m	struct:_NDIS_802_11_BSSID_LIST	access:public
BstrAlloc	src/drivers/ndis_events.c	44;"	d	file:
BstrFree	src/drivers/ndis_events.c	45;"	d	file:
CALG_HMAC	src/crypto/crypto_cryptoapi.c	33;"	d	file:
CC	hostapd/Makefile	/^CC=gcc$/;"	m
CERTIFICATE_VERIFY	src/tls/tlsv1_server_i.h	/^		CERTIFICATE_VERIFY, CHANGE_CIPHER_SPEC, CLIENT_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
CERT_ENCODING_ARL	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_ARL = 8,$/;"	e	enum:__anon122
CERT_ENCODING_CRL	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_CRL = 7,$/;"	e	enum:__anon122
CERT_ENCODING_DNS_SIGNED_KEY	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_DNS_SIGNED_KEY = 3,$/;"	e	enum:__anon122
CERT_ENCODING_HASH_AND_URL_X509_BUNDLE	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_HASH_AND_URL_X509_BUNDLE = 13$/;"	e	enum:__anon122
CERT_ENCODING_HASH_AND_URL_X509_CERT	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_HASH_AND_URL_X509_CERT = 12,$/;"	e	enum:__anon122
CERT_ENCODING_KERBEROS_TOKEN	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_KERBEROS_TOKEN = 6,$/;"	e	enum:__anon122
CERT_ENCODING_PGP_CERT	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_PGP_CERT = 2,$/;"	e	enum:__anon122
CERT_ENCODING_PKCS7_X509	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_PKCS7_X509 = 1,$/;"	e	enum:__anon122
CERT_ENCODING_RAW_RSA_KEY	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_RAW_RSA_KEY = 11,$/;"	e	enum:__anon122
CERT_ENCODING_SPKI_CERT	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_SPKI_CERT = 9,$/;"	e	enum:__anon122
CERT_ENCODING_X509_CERT_ATTR	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_X509_CERT_ATTR = 10,$/;"	e	enum:__anon122
CERT_ENCODING_X509_CERT_SIGN	src/eap_common/ikev2_common.h	/^	CERT_ENCODING_X509_CERT_SIGN = 4,$/;"	e	enum:__anon122
CERT_STORE_OPEN_EXISTING_FLAG	src/crypto/tls_openssl.c	137;"	d	file:
CERT_STORE_READONLY_FLAG	src/crypto/tls_openssl.c	136;"	d	file:
CERT_SYSTEM_STORE_CURRENT_USER	src/crypto/tls_openssl.c	135;"	d	file:
CFLAGS	hostapd/Makefile	/^CFLAGS = -MMD -O2 -Wall -g$/;"	m
CHALLENGE	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
CHALLENGE	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
CHALLENGE	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
CHALLENGE	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
CHALLENGE	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
CHALLENGE_LEN	src/eap_server/eap_server_md5.c	23;"	d	file:
CHALLENGE_LEN	src/eap_server/eap_server_mschapv2.c	50;"	d	file:
CHANGE_CIPHER_SPEC	src/tls/tlsv1_client_i.h	/^		SERVER_HELLO_DONE, CLIENT_KEY_EXCHANGE, CHANGE_CIPHER_SPEC,$/;"	e	enum:tlsv1_client::__anon108
CHANGE_CIPHER_SPEC	src/tls/tlsv1_server_i.h	/^		CERTIFICATE_VERIFY, CHANGE_CIPHER_SPEC, CLIENT_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
CHAP	hostapd/Android.mk	/^CHAP=y$/;"	m
CHAP	hostapd/Makefile	/^CHAP=y$/;"	m
CHAP_H	src/eap_common/chap.h	16;"	d
CHAP_MD5_LEN	src/eap_common/chap.h	18;"	d
CHAR	src/drivers/driver_ralink.h	77;"	d
CHAR_BIT	src/tls/libtommath.c	18;"	d	file:
CHILD_SA	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
CHILD_SA	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
CIPHER_CCMP	src/common/defs.h	/^	CIPHER_CCMP,$/;"	e	enum:wpa_cipher
CIPHER_NONE	src/common/defs.h	/^	CIPHER_NONE,$/;"	e	enum:wpa_cipher
CIPHER_TKIP	src/common/defs.h	/^	CIPHER_TKIP,$/;"	e	enum:wpa_cipher
CIPHER_WEP104	src/common/defs.h	/^	CIPHER_WEP104$/;"	e	enum:wpa_cipher
CIPHER_WEP40	src/common/defs.h	/^	CIPHER_WEP40,$/;"	e	enum:wpa_cipher
CK_LEN	src/utils/pcsc_funcs.c	87;"	d	file:
CLEAR_EAP_ID	src/eap_peer/eap_aka.c	234;"	d	file:
CLEAR_EAP_ID	src/eap_peer/eap_sim.c	265;"	d	file:
CLEAR_END_LINE	src/utils/edit.c	49;"	d	file:
CLEAR_PSEUDONYM	src/eap_peer/eap_aka.c	232;"	d	file:
CLEAR_PSEUDONYM	src/eap_peer/eap_sim.c	263;"	d	file:
CLEAR_REAUTH_ID	src/eap_peer/eap_aka.c	233;"	d	file:
CLEAR_REAUTH_ID	src/eap_peer/eap_sim.c	264;"	d	file:
CLIENT_CERTIFICATE	src/tls/tlsv1_server_i.h	/^		SERVER_HELLO_DONE, CLIENT_CERTIFICATE, CLIENT_KEY_EXCHANGE,$/;"	e	enum:tlsv1_server::__anon105
CLIENT_FINISHED	src/tls/tlsv1_server_i.h	/^		CERTIFICATE_VERIFY, CHANGE_CIPHER_SPEC, CLIENT_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
CLIENT_HELLO	src/tls/tlsv1_client_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_client::__anon108
CLIENT_HELLO	src/tls/tlsv1_server_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_server::__anon105
CLIENT_KEY_EXCHANGE	src/tls/tlsv1_client_i.h	/^		SERVER_HELLO_DONE, CLIENT_KEY_EXCHANGE, CHANGE_CIPHER_SPEC,$/;"	e	enum:tlsv1_client::__anon108
CLIENT_KEY_EXCHANGE	src/tls/tlsv1_server_i.h	/^		SERVER_HELLO_DONE, CLIENT_CERTIFICATE, CLIENT_KEY_EXCHANGE,$/;"	e	enum:tlsv1_server::__anon105
CMD_BUF_LEN	src/utils/edit.c	23;"	d	file:
CMD_BUF_LEN	src/utils/edit_simple.c	22;"	d	file:
COBJMACROS	src/drivers/ndis_events.c	20;"	d	file:
COMMON_H	src/utils/common.h	16;"	d
COMPACT_MACSTR	src/utils/common.h	426;"	d
CONFIG_ANSI_C_EXTRA	src/utils/build_config.h	28;"	d
CONFIG_ANSI_C_EXTRA	src/utils/build_config.h	58;"	d
CONFIG_BACKEND_FILE	src/utils/build_config.h	62;"	d
CONFIG_BACKEND_FILE	src/utils/build_config.h	80;"	d
CONFIG_CRYPTO	hostapd/Android.mk	/^CONFIG_CRYPTO=internal$/;"	m
CONFIG_CRYPTO	hostapd/Makefile	/^CONFIG_CRYPTO=internal$/;"	m
CONFIG_CRYPTO_INTERNAL	src/utils/build_config.h	101;"	d
CONFIG_CRYPTO_INTERNAL	src/utils/build_config.h	52;"	d
CONFIG_CRYPTO_INTERNAL	src/utils/build_config.h	64;"	d
CONFIG_CTRL_IFACE	src/utils/build_config.h	33;"	d
CONFIG_CTRL_IFACE	src/utils/build_config.h	83;"	d
CONFIG_CTRL_IFACE_CLIENT_DIR	src/common/wpa_ctrl.c	68;"	d	file:
CONFIG_CTRL_IFACE_CLIENT_PREFIX	src/common/wpa_ctrl.c	71;"	d	file:
CONFIG_CTRL_IFACE_NAMED_PIPE	src/utils/build_config.h	34;"	d
CONFIG_CTRL_IFACE_UNIX	src/utils/build_config.h	84;"	d
CONFIG_DEBUG_FILE	src/utils/build_config.h	37;"	d
CONFIG_DEBUG_FILE	src/utils/build_config.h	85;"	d
CONFIG_DNET_PCAP	src/drivers/drivers.mak	/^CONFIG_DNET_PCAP=y$/;"	m
CONFIG_DNET_PCAP	src/drivers/drivers.mk	/^CONFIG_DNET_PCAP=y$/;"	m
CONFIG_DRIVER_NDIS	src/utils/build_config.h	35;"	d
CONFIG_DRIVER_OSX	src/utils/build_config.h	79;"	d
CONFIG_EAP	hostapd/Android.mk	/^CONFIG_EAP=y$/;"	m
CONFIG_EAP	hostapd/Makefile	/^CONFIG_EAP=y$/;"	m
CONFIG_EAP_MSCHAPV2	hostapd/Android.mk	/^CONFIG_EAP_MSCHAPV2=y$/;"	m
CONFIG_EAP_MSCHAPV2	hostapd/Makefile	/^CONFIG_EAP_MSCHAPV2=y$/;"	m
CONFIG_EAP_SIM_COMMON	hostapd/Android.mk	/^CONFIG_EAP_SIM_COMMON=y$/;"	m
CONFIG_EAP_SIM_COMMON	hostapd/Makefile	/^CONFIG_EAP_SIM_COMMON=y$/;"	m
CONFIG_ELOOP	hostapd/Makefile	/^CONFIG_ELOOP=eloop$/;"	m
CONFIG_FILE_H	hostapd/config_file.h	16;"	d
CONFIG_INTERNAL_AES	hostapd/Android.mk	/^CONFIG_INTERNAL_AES=y$/;"	m
CONFIG_INTERNAL_AES	hostapd/Makefile	/^CONFIG_INTERNAL_AES=y$/;"	m
CONFIG_INTERNAL_DES	hostapd/Android.mk	/^CONFIG_INTERNAL_DES=y$/;"	m
CONFIG_INTERNAL_DES	hostapd/Makefile	/^CONFIG_INTERNAL_DES=y$/;"	m
CONFIG_INTERNAL_DH_GROUP5	hostapd/Android.mk	/^CONFIG_INTERNAL_DH_GROUP5=y$/;"	m
CONFIG_INTERNAL_DH_GROUP5	hostapd/Makefile	/^CONFIG_INTERNAL_DH_GROUP5=y$/;"	m
CONFIG_INTERNAL_LIBTOMMATH	src/utils/build_config.h	100;"	d
CONFIG_INTERNAL_LIBTOMMATH	src/utils/build_config.h	51;"	d
CONFIG_INTERNAL_LIBTOMMATH	src/utils/build_config.h	63;"	d
CONFIG_INTERNAL_MD4	hostapd/Android.mk	/^CONFIG_INTERNAL_MD4=y$/;"	m
CONFIG_INTERNAL_MD4	hostapd/Makefile	/^CONFIG_INTERNAL_MD4=y$/;"	m
CONFIG_INTERNAL_MD5	hostapd/Android.mk	/^CONFIG_INTERNAL_MD5=y$/;"	m
CONFIG_INTERNAL_MD5	hostapd/Makefile	/^CONFIG_INTERNAL_MD5=y$/;"	m
CONFIG_INTERNAL_RC4	hostapd/Android.mk	/^CONFIG_INTERNAL_RC4=y$/;"	m
CONFIG_INTERNAL_RC4	hostapd/Makefile	/^CONFIG_INTERNAL_RC4=y$/;"	m
CONFIG_INTERNAL_SHA1	hostapd/Android.mk	/^CONFIG_INTERNAL_SHA1=y$/;"	m
CONFIG_INTERNAL_SHA1	hostapd/Makefile	/^CONFIG_INTERNAL_SHA1=y$/;"	m
CONFIG_INTERNAL_SHA256	hostapd/Android.mk	/^CONFIG_INTERNAL_SHA256=y$/;"	m
CONFIG_INTERNAL_SHA256	hostapd/Makefile	/^CONFIG_INTERNAL_SHA256=y$/;"	m
CONFIG_L2_FREEBSD	src/drivers/drivers.mak	/^CONFIG_L2_FREEBSD=y$/;"	m
CONFIG_L2_FREEBSD	src/drivers/drivers.mk	/^CONFIG_L2_FREEBSD=y$/;"	m
CONFIG_L2_PACKET	hostapd/Android.mk	/^CONFIG_L2_PACKET=y$/;"	m
CONFIG_L2_PACKET	hostapd/Makefile	/^CONFIG_L2_PACKET=y$/;"	m
CONFIG_L2_PACKET	src/drivers/drivers.mak	/^CONFIG_L2_PACKET=freebsd$/;"	m
CONFIG_L2_PACKET	src/drivers/drivers.mak	/^CONFIG_L2_PACKET=linux$/;"	m
CONFIG_L2_PACKET	src/drivers/drivers.mak	/^CONFIG_L2_PACKET=pcap$/;"	m
CONFIG_L2_PACKET	src/drivers/drivers.mk	/^CONFIG_L2_PACKET=freebsd$/;"	m
CONFIG_L2_PACKET	src/drivers/drivers.mk	/^CONFIG_L2_PACKET=linux$/;"	m
CONFIG_L2_PACKET	src/drivers/drivers.mk	/^CONFIG_L2_PACKET=pcap$/;"	m
CONFIG_NATIVE_WINDOWS	src/utils/build_config.h	27;"	d
CONFIG_NDIS_EVENTS_INTEGRATED	src/utils/build_config.h	36;"	d
CONFIG_NO_ACCOUNTING	hostapd/Android.mk	/^CONFIG_NO_ACCOUNTING=y$/;"	m
CONFIG_NO_ACCOUNTING	hostapd/Makefile	/^CONFIG_NO_ACCOUNTING=y$/;"	m
CONFIG_NO_HOSTAPD_LOGGER	src/utils/build_config.h	60;"	d
CONFIG_NO_STDOUT_DEBUG	src/utils/build_config.h	61;"	d
CONFIG_NO_WPA_MSG	src/utils/build_config.h	59;"	d
CONFIG_OPENSSL_TICKET_OVERRIDE	src/crypto/tls_openssl.c	52;"	d	file:
CONFIG_OS	hostapd/Android.mk	/^CONFIG_OS=unix$/;"	m
CONFIG_OS	hostapd/Android.mk	/^CONFIG_OS=win32$/;"	m
CONFIG_OS	hostapd/Makefile	/^CONFIG_OS=unix$/;"	m
CONFIG_OS	hostapd/Makefile	/^CONFIG_OS=win32$/;"	m
CONFIG_TLS	hostapd/Android.mk	/^CONFIG_TLS=openssl$/;"	m
CONFIG_TLS	hostapd/Makefile	/^CONFIG_TLS=openssl$/;"	m
CONFIG_TLS_INTERNAL_CLIENT	src/utils/build_config.h	50;"	d
CONFIG_TLS_INTERNAL_CLIENT	src/utils/build_config.h	99;"	d
CONFIG_WINPCAP	src/drivers/drivers.mak	/^CONFIG_WINPCAP=y$/;"	m
CONFIG_WINPCAP	src/drivers/drivers.mk	/^CONFIG_WINPCAP=y$/;"	m
CONFIG_WINPCAP	src/utils/build_config.h	29;"	d
CONFIG_WIRELESS_EXTENSION	src/drivers/drivers.mak	/^CONFIG_WIRELESS_EXTENSION=y$/;"	m
CONFIG_WIRELESS_EXTENSION	src/drivers/drivers.mk	/^CONFIG_WIRELESS_EXTENSION=y$/;"	m
CONFIG_WPS	src/utils/build_config.h	95;"	d
CONFIRM	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
CONFIRM	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	e	enum:eap_vendor_test_data::__anon176	file:
CONFIRM	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
CONFIRM	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
CONTINUE	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
CONTINUE	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
CONTINUE	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gtc_data::__anon141	file:
CONTINUE	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_identity_data::__anon129	file:
CONTINUE	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	e	enum:eap_md5_data::__anon142	file:
CONTINUE	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
CONTINUE	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
CREATE_CHILD_SA	src/eap_common/ikev2_common.h	/^	CREATE_CHILD_SA = 36,$/;"	e	enum:__anon113
CRYPTO_BINDING	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
CRYPTO_CIPHER_ALG_3DES	src/crypto/crypto.h	/^	CRYPTO_CIPHER_NULL = 0, CRYPTO_CIPHER_ALG_AES, CRYPTO_CIPHER_ALG_3DES,$/;"	e	enum:crypto_cipher_alg
CRYPTO_CIPHER_ALG_AES	src/crypto/crypto.h	/^	CRYPTO_CIPHER_NULL = 0, CRYPTO_CIPHER_ALG_AES, CRYPTO_CIPHER_ALG_3DES,$/;"	e	enum:crypto_cipher_alg
CRYPTO_CIPHER_ALG_DES	src/crypto/crypto.h	/^	CRYPTO_CIPHER_ALG_DES, CRYPTO_CIPHER_ALG_RC2, CRYPTO_CIPHER_ALG_RC4$/;"	e	enum:crypto_cipher_alg
CRYPTO_CIPHER_ALG_RC2	src/crypto/crypto.h	/^	CRYPTO_CIPHER_ALG_DES, CRYPTO_CIPHER_ALG_RC2, CRYPTO_CIPHER_ALG_RC4$/;"	e	enum:crypto_cipher_alg
CRYPTO_CIPHER_ALG_RC4	src/crypto/crypto.h	/^	CRYPTO_CIPHER_ALG_DES, CRYPTO_CIPHER_ALG_RC2, CRYPTO_CIPHER_ALG_RC4$/;"	e	enum:crypto_cipher_alg
CRYPTO_CIPHER_NULL	src/crypto/crypto.h	/^	CRYPTO_CIPHER_NULL = 0, CRYPTO_CIPHER_ALG_AES, CRYPTO_CIPHER_ALG_3DES,$/;"	e	enum:crypto_cipher_alg
CRYPTO_H	src/crypto/crypto.h	28;"	d
CRYPTO_HASH_ALG_HMAC_MD5	src/crypto/crypto.h	/^	CRYPTO_HASH_ALG_HMAC_MD5, CRYPTO_HASH_ALG_HMAC_SHA1$/;"	e	enum:crypto_hash_alg
CRYPTO_HASH_ALG_HMAC_SHA1	src/crypto/crypto.h	/^	CRYPTO_HASH_ALG_HMAC_MD5, CRYPTO_HASH_ALG_HMAC_SHA1$/;"	e	enum:crypto_hash_alg
CRYPTO_HASH_ALG_MD5	src/crypto/crypto.h	/^	CRYPTO_HASH_ALG_MD5, CRYPTO_HASH_ALG_SHA1,$/;"	e	enum:crypto_hash_alg
CRYPTO_HASH_ALG_SHA1	src/crypto/crypto.h	/^	CRYPTO_HASH_ALG_MD5, CRYPTO_HASH_ALG_SHA1,$/;"	e	enum:crypto_hash_alg
CRYPT_IPSEC_HMAC_KEY	src/crypto/crypto_cryptoapi.c	413;"	d	file:
CTRL_DIR_FORCE_BOTH	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { CTRL_DIR_FORCE_BOTH, CTRL_DIR_IN_OR_BOTH } ctrl_dir_state;   \/\/ 受控方向状态机$/;"	e	enum:eapol_state_machine::__anon71
CTRL_DIR_IN_OR_BOTH	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { CTRL_DIR_FORCE_BOTH, CTRL_DIR_IN_OR_BOTH } ctrl_dir_state;   \/\/ 受控方向状态机$/;"	e	enum:eapol_state_machine::__anon71
CTRL_IFACE_AP_H	src/ap/ctrl_iface_ap.h	16;"	d
CTRL_IFACE_H	hostapd/ctrl_iface.h	16;"	d
CTRL_IFACE_SOCKET	src/common/wpa_ctrl.c	34;"	d	file:
CandidateList	src/drivers/driver_ndis.c	/^	PMKID_CANDIDATE CandidateList[1];$/;"	m	struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:	access:public
CandidateList	src/drivers/driver_ralink.h	/^	PMKID_CANDIDATE CandidateList[1];$/;"	m	struct:_NDIS_802_11_PMKID_CANDIDATE_LIST	access:public
Capabilities	src/drivers/driver_ndis.c	/^	USHORT Capabilities;$/;"	m	struct:NDIS_802_11_AI_REQFI	file:	access:public
Capabilities	src/drivers/driver_ndis.c	/^	USHORT Capabilities;$/;"	m	struct:NDIS_802_11_AI_RESFI	file:	access:public
Capabilities	src/drivers/driver_ndis.c	/^	USHORT Capabilities;$/;"	m	struct:NDIS_802_11_FIXED_IEs	file:	access:public
Capabilities	src/drivers/driver_ralink.h	/^    USHORT Capabilities;$/;"	m	struct:_NDIS_802_11_AI_REQFI	access:public
Capabilities	src/drivers/driver_ralink.h	/^    USHORT Capabilities;$/;"	m	struct:_NDIS_802_11_AI_RESFI	access:public
Capabilities	src/drivers/driver_ralink.h	/^    USHORT Capabilities;$/;"	m	struct:_NDIS_802_11_FIXED_IEs	access:public
Ch	src/crypto/sha256-internal.c	86;"	d	file:
ClientTimeout	src/eap_peer/eap_i.h	/^	int ClientTimeout;$/;"	m	struct:eap_sm	access:public
Configuration	src/drivers/driver_ndis.c	/^	NDIS_802_11_CONFIGURATION Configuration;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
Configuration	src/drivers/driver_ralink.h	/^    NDIS_802_11_CONFIGURATION           Configuration;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
Configuration	src/drivers/driver_ralink.h	/^   NDIS_802_11_CONFIGURATION           Configuration;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
ControlledDirection	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { Both = 0, In = 1 } ControlledDirection;          \/\/ 受控方向：双向受控、输入受控$/;"	t	typeref:enum:__anon65
Counter	src/ap/wpa_auth_i.h	/^	u8 Counter[WPA_NONCE_LEN];$/;"	m	struct:wpa_group	access:public
Counter	src/eapol_auth/eapol_auth_sm_i.h	/^typedef unsigned int Counter;$/;"	t
CryptImportPublicKeyInfo	src/crypto/crypto_cryptoapi.c	/^(*CryptImportPublicKeyInfo)(HCRYPTPROV hCryptProv, DWORD dwCertEncodingType,$/;"	v	file:
CurrentAPAddress	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS CurrentAPAddress;$/;"	m	struct:NDIS_802_11_AI_REQFI	file:	access:public
CurrentAPAddress	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS  CurrentAPAddress;$/;"	m	struct:_NDIS_802_11_AI_REQFI	access:public
DECISION_COND_SUCC	src/eap_peer/eap_i.h	/^	DECISION_FAIL, DECISION_COND_SUCC, DECISION_UNCOND_SUCC$/;"	e	enum:__anon182
DECISION_CONTINUE	src/eap_server/eap_i.h	/^		DECISION_SUCCESS, DECISION_FAILURE, DECISION_CONTINUE,$/;"	e	enum:eap_sm::__anon157
DECISION_FAIL	src/eap_peer/eap_i.h	/^	DECISION_FAIL, DECISION_COND_SUCC, DECISION_UNCOND_SUCC$/;"	e	enum:__anon182
DECISION_FAILURE	src/eap_server/eap_i.h	/^		DECISION_SUCCESS, DECISION_FAILURE, DECISION_CONTINUE,$/;"	e	enum:eap_sm::__anon157
DECISION_PASSTHROUGH	src/eap_server/eap_i.h	/^		DECISION_PASSTHROUGH$/;"	e	enum:eap_sm::__anon157
DECISION_SUCCESS	src/eap_server/eap_i.h	/^		DECISION_SUCCESS, DECISION_FAILURE, DECISION_CONTINUE,$/;"	e	enum:eap_sm::__anon157
DECISION_UNCOND_SUCC	src/eap_peer/eap_i.h	/^	DECISION_FAIL, DECISION_COND_SUCC, DECISION_UNCOND_SUCC$/;"	e	enum:__anon182
DEFINE_DL_LIST	src/utils/list.h	98;"	d
DEFS_H	src/common/defs.h	16;"	d
DENY_UNLESS_ACCEPTED	src/ap/ap_config.h	/^		DENY_UNLESS_ACCEPTED = 1,$/;"	e	enum:hostapd_bss_config::__anon3
DES_I_H	src/crypto/des_i.h	16;"	d
DES_cblock	src/crypto/crypto_openssl.c	31;"	d	file:
DES_ecb_encrypt	src/crypto/crypto_openssl.c	33;"	d	file:
DES_key_schedule	src/crypto/crypto_openssl.c	30;"	d	file:
DES_set_key	src/crypto/crypto_openssl.c	32;"	d	file:
DEV_PW_DEFAULT	src/wps/wps_defs.h	/^	DEV_PW_DEFAULT = 0x0000,$/;"	e	enum:wps_dev_password_id
DEV_PW_MACHINE_SPECIFIED	src/wps/wps_defs.h	/^	DEV_PW_MACHINE_SPECIFIED = 0x0002,$/;"	e	enum:wps_dev_password_id
DEV_PW_PUSHBUTTON	src/wps/wps_defs.h	/^	DEV_PW_PUSHBUTTON = 0x0004,$/;"	e	enum:wps_dev_password_id
DEV_PW_REGISTRAR_SPECIFIED	src/wps/wps_defs.h	/^	DEV_PW_REGISTRAR_SPECIFIED = 0x0005$/;"	e	enum:wps_dev_password_id
DEV_PW_REKEY	src/wps/wps_defs.h	/^	DEV_PW_REKEY = 0x0003,$/;"	e	enum:wps_dev_password_id
DEV_PW_USER_SPECIFIED	src/wps/wps_defs.h	/^	DEV_PW_USER_SPECIFIED = 0x0001,$/;"	e	enum:wps_dev_password_id
DH_GROUP	src/crypto/dh_groups.c	516;"	d	file:
DH_GROUP1_768BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP1_768BIT_MODP = 1, \/* RFC 4306 *\/$/;"	e	enum:__anon120
DH_GROUP2_1024BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP2_1024BIT_MODP = 2, \/* RFC 4306 *\/$/;"	e	enum:__anon120
DH_GROUP5_1536BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP5_1536BIT_MODP = 5, \/* RFC 3526 *\/$/;"	e	enum:__anon120
DH_GROUP5_2048BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP5_2048BIT_MODP = 14, \/* RFC 3526 *\/$/;"	e	enum:__anon120
DH_GROUP5_3072BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP5_3072BIT_MODP = 15, \/* RFC 3526 *\/$/;"	e	enum:__anon120
DH_GROUP5_4096BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP5_4096BIT_MODP = 16, \/* RFC 3526 *\/$/;"	e	enum:__anon120
DH_GROUP5_6144BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP5_6144BIT_MODP = 17, \/* RFC 3526 *\/$/;"	e	enum:__anon120
DH_GROUP5_8192BIT_MODP	src/eap_common/ikev2_common.h	/^	DH_GROUP5_8192BIT_MODP = 18 \/* RFC 3526 *\/$/;"	e	enum:__anon120
DH_GROUP5_H	src/crypto/dh_group5.h	16;"	d
DH_GROUPS_H	src/crypto/dh_groups.h	16;"	d
DIGIT_BIT	src/tls/libtommath.c	72;"	d	file:
DLSYM	src/drivers/MobileApple80211.c	137;"	d	file:
DONE	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
DONE	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
DONE	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
DONE	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
DONE	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
DONE	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
DOT11_BSS_TYPE	src/drivers/driver_ndis.c	/^} DOT11_BSS_TYPE, * PDOT11_BSS_TYPE;$/;"	t	typeref:enum:_DOT11_BSS_TYPE	file:
DOT11_MAC_ADDRESS	src/drivers/driver_ndis.c	/^typedef UCHAR DOT11_MAC_ADDRESS[6];$/;"	t	file:
DOT11_SCAN_REQUEST_V2	src/drivers/driver_ndis.c	/^} DOT11_SCAN_REQUEST_V2, * PDOT11_SCAN_REQUEST_V2;$/;"	t	typeref:struct:_DOT11_SCAN_REQUEST_V2	file:
DOT11_SCAN_TYPE	src/drivers/driver_ndis.c	/^} DOT11_SCAN_TYPE, * PDOT11_SCAN_TYPE;$/;"	t	typeref:enum:_DOT11_SCAN_TYPE	file:
DRIVER_H	src/drivers/driver.h	24;"	d
DRIVER_NDIS_H	src/drivers/driver_ndis.h	16;"	d
DRIVER_TEST_UNIX	src/drivers/driver_test.c	27;"	d	file:
DRIVER_WEXT_H	src/drivers/driver_wext.h	16;"	d
DRV_AP_CFLAGS	src/drivers/drivers.mak	/^DRV_AP_CFLAGS =$/;"	m
DRV_AP_CFLAGS	src/drivers/drivers.mk	/^DRV_AP_CFLAGS =$/;"	m
DRV_AP_LIBS	src/drivers/drivers.mak	/^DRV_AP_LIBS =$/;"	m
DRV_AP_LIBS	src/drivers/drivers.mk	/^DRV_AP_LIBS =$/;"	m
DRV_AP_OBJS	src/drivers/drivers.mak	/^DRV_AP_OBJS =$/;"	m
DRV_AP_OBJS	src/drivers/drivers.mk	/^DRV_AP_OBJS =$/;"	m
DRV_BOTH_CFLAGS	src/drivers/drivers.mak	/^DRV_BOTH_CFLAGS := $(DRV_CFLAGS) $(DRV_WPA_CFLAGS) $(DRV_AP_CFLAGS)$/;"	m
DRV_BOTH_CFLAGS	src/drivers/drivers.mk	/^DRV_BOTH_CFLAGS := $(DRV_CFLAGS) $(DRV_WPA_CFLAGS) $(DRV_AP_CFLAGS)$/;"	m
DRV_BOTH_LDFLAGS	src/drivers/drivers.mak	/^DRV_BOTH_LDFLAGS := $(DRV_LDFLAGS) $(DRV_WPA_LDFLAGS) $(DRV_AP_LDFLAGS)$/;"	m
DRV_BOTH_LDFLAGS	src/drivers/drivers.mk	/^DRV_BOTH_LDFLAGS := $(DRV_LDFLAGS) $(DRV_WPA_LDFLAGS) $(DRV_AP_LDFLAGS)$/;"	m
DRV_BOTH_LIBS	src/drivers/drivers.mak	/^DRV_BOTH_LIBS := $(DRV_LIBS) $(DRV_WPA_LIBS) $(DRV_AP_LIBS)$/;"	m
DRV_BOTH_LIBS	src/drivers/drivers.mk	/^DRV_BOTH_LIBS := $(DRV_LIBS) $(DRV_WPA_LIBS) $(DRV_AP_LIBS)$/;"	m
DRV_BOTH_OBJS	src/drivers/drivers.mak	/^DRV_BOTH_OBJS := $(DRV_OBJS) $(DRV_WPA_OBJS) $(DRV_AP_OBJS)$/;"	m
DRV_BOTH_OBJS	src/drivers/drivers.mk	/^DRV_BOTH_OBJS := $(DRV_OBJS) $(DRV_WPA_OBJS) $(DRV_AP_OBJS)$/;"	m
DRV_CFLAGS	src/drivers/drivers.mak	/^DRV_CFLAGS =$/;"	m
DRV_CFLAGS	src/drivers/drivers.mk	/^DRV_CFLAGS =$/;"	m
DRV_LIBS	src/drivers/drivers.mak	/^DRV_LIBS =$/;"	m
DRV_LIBS	src/drivers/drivers.mk	/^DRV_LIBS =$/;"	m
DRV_MAX_SEC_DEV_TYPES	src/drivers/driver.h	890;"	d
DRV_OBJS	src/drivers/drivers.mak	/^DRV_OBJS =$/;"	m
DRV_OBJS	src/drivers/drivers.mk	/^DRV_OBJS =$/;"	m
DRV_WPA_CFLAGS	src/drivers/drivers.mak	/^DRV_WPA_CFLAGS =$/;"	m
DRV_WPA_CFLAGS	src/drivers/drivers.mk	/^DRV_WPA_CFLAGS =$/;"	m
DRV_WPA_LIBS	src/drivers/drivers.mak	/^DRV_WPA_LIBS =$/;"	m
DRV_WPA_LIBS	src/drivers/drivers.mk	/^DRV_WPA_LIBS =$/;"	m
DRV_WPA_OBJS	src/drivers/drivers.mak	/^DRV_WPA_OBJS =$/;"	m
DRV_WPA_OBJS	src/drivers/drivers.mk	/^DRV_WPA_OBJS =$/;"	m
DSConfig	src/drivers/driver_ndis.c	/^	ULONG DSConfig;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
DSConfig	src/drivers/driver_ralink.h	/^   ULONG                           DSConfig;           \/\/ Frequency, units are kHz$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
DUMP_STATE_H	hostapd/dump_state.h	16;"	d
DVLAN_CLEAN_BR	src/ap/ap_config.h	92;"	d
DVLAN_CLEAN_VLAN	src/ap/ap_config.h	93;"	d
DVLAN_CLEAN_VLAN_PORT	src/ap/ap_config.h	94;"	d
DVLAN_CLEAN_WLAN_PORT	src/ap/ap_config.h	95;"	d
DYNAMIC_VLAN_DISABLED	src/ap/ap_config.h	71;"	d
DYNAMIC_VLAN_OPTIONAL	src/ap/ap_config.h	72;"	d
DYNAMIC_VLAN_REQUIRED	src/ap/ap_config.h	73;"	d
Data	src/drivers/driver_ndis.c	/^    UCHAR Data[sizeof(ULONG)];$/;"	m	struct:_NDISUIO_QUERY_OID	file:	access:public
Data	src/drivers/driver_ndis.c	/^    UCHAR Data[sizeof(ULONG)];$/;"	m	struct:_NDISUIO_SET_OID	file:	access:public
DeauthenticationRequest	src/ap/wpa_auth_i.h	/^	Boolean DeauthenticationRequest;$/;"	m	struct:wpa_state_machine	access:public
DeviceDescrLength	src/drivers/driver_ndis.c	/^	ULONG DeviceDescrLength;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
DeviceDescrOffset	src/drivers/driver_ndis.c	/^	ULONG DeviceDescrOffset;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
DeviceNameLength	src/drivers/driver_ndis.c	/^	ULONG DeviceNameLength;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
DeviceNameOffset	src/drivers/driver_ndis.c	/^	ULONG DeviceNameOffset;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
Disconnect	src/ap/wpa_auth_i.h	/^	Boolean Disconnect;$/;"	m	struct:wpa_state_machine	access:public
DwellTime	src/drivers/driver_ndis.c	/^	ULONG DwellTime;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
DwellTime	src/drivers/driver_ralink.h	/^   ULONG           DwellTime;         \/\/ units are Kusec$/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
E	hostapd/Makefile	/^E=echo$/;"	m
E	hostapd/Makefile	/^E=true$/;"	m
E2S	src/drivers/driver_common.c	35;"	d	file:
E2S	src/drivers/driver_common.c	88;"	d	file:
EAPOLKeyPairwise	src/ap/wpa_auth_i.h	/^	Boolean EAPOLKeyPairwise;$/;"	m	struct:wpa_state_machine	access:public
EAPOLKeyReceived	src/ap/wpa_auth_i.h	/^	Boolean EAPOLKeyReceived;$/;"	m	struct:wpa_state_machine	access:public
EAPOLKeyRequest	src/ap/wpa_auth_i.h	/^	Boolean EAPOLKeyRequest;$/;"	m	struct:wpa_state_machine	access:public
EAPOL_AUTH_REAUTHENTICATE	src/eapol_auth/eapol_auth_sm.h	/^	EAPOL_AUTH_REAUTHENTICATE$/;"	e	enum:eapol_event
EAPOL_AUTH_SM_CHANGE	src/eapol_auth/eapol_auth_sm.h	/^	EAPOL_AUTH_SM_CHANGE,$/;"	e	enum:eapol_event
EAPOL_AUTH_SM_H	src/eapol_auth/eapol_auth_sm.h	17;"	d
EAPOL_AUTH_SM_I_H	src/eapol_auth/eapol_auth_sm_i.h	17;"	d
EAPOL_CB_FAILURE	src/eapol_supp/eapol_supp_sm.c	/^	enum { EAPOL_CB_IN_PROGRESS = 0, EAPOL_CB_SUCCESS, EAPOL_CB_FAILURE }$/;"	e	enum:eapol_sm::__anon21	file:
EAPOL_CB_IN_PROGRESS	src/eapol_supp/eapol_supp_sm.c	/^	enum { EAPOL_CB_IN_PROGRESS = 0, EAPOL_CB_SUCCESS, EAPOL_CB_FAILURE }$/;"	e	enum:eapol_sm::__anon21	file:
EAPOL_CB_SUCCESS	src/eapol_supp/eapol_supp_sm.c	/^	enum { EAPOL_CB_IN_PROGRESS = 0, EAPOL_CB_SUCCESS, EAPOL_CB_FAILURE }$/;"	e	enum:eapol_sm::__anon21	file:
EAPOL_COMMON_H	src/common/eapol_common.h	16;"	d
EAPOL_KEY_TYPE_RC4	src/common/eapol_common.h	/^enum { EAPOL_KEY_TYPE_RC4 = 1, EAPOL_KEY_TYPE_RSN = 2,$/;"	e	enum:__anon61
EAPOL_KEY_TYPE_RSN	src/common/eapol_common.h	/^enum { EAPOL_KEY_TYPE_RC4 = 1, EAPOL_KEY_TYPE_RSN = 2,$/;"	e	enum:__anon61
EAPOL_KEY_TYPE_WPA	src/common/eapol_common.h	/^       EAPOL_KEY_TYPE_WPA = 254 };$/;"	e	enum:__anon61
EAPOL_LOGGER_DEBUG	src/eapol_auth/eapol_auth_sm.h	/^	EAPOL_LOGGER_DEBUG, EAPOL_LOGGER_INFO, EAPOL_LOGGER_WARNING$/;"	e	enum:__anon72
EAPOL_LOGGER_INFO	src/eapol_auth/eapol_auth_sm.h	/^	EAPOL_LOGGER_DEBUG, EAPOL_LOGGER_INFO, EAPOL_LOGGER_WARNING$/;"	e	enum:__anon72
EAPOL_LOGGER_WARNING	src/eapol_auth/eapol_auth_sm.h	/^	EAPOL_LOGGER_DEBUG, EAPOL_LOGGER_INFO, EAPOL_LOGGER_WARNING$/;"	e	enum:__anon72
EAPOL_REQUIRE_KEY_BROADCAST	src/eapol_supp/eapol_supp_sm.h	38;"	d
EAPOL_REQUIRE_KEY_UNICAST	src/eapol_supp/eapol_supp_sm.h	37;"	d
EAPOL_SM_FROM_PMKSA_CACHE	src/eapol_auth/eapol_auth_sm.h	23;"	d
EAPOL_SM_PREAUTH	src/eapol_auth/eapol_auth_sm.h	20;"	d
EAPOL_SM_USES_WPA	src/eapol_auth/eapol_auth_sm.h	22;"	d
EAPOL_SM_WAIT_START	src/eapol_auth/eapol_auth_sm.h	21;"	d
EAPOL_SUPP_SM_H	src/eapol_supp/eapol_supp_sm.h	16;"	d
EAPOL_VERSION	src/common/eapol_common.h	35;"	d
EAPOL_altAccept	src/eap_peer/eap.h	/^	EAPOL_altAccept,$/;"	e	enum:eapol_bool_var
EAPOL_altReject	src/eap_peer/eap.h	/^	EAPOL_altReject$/;"	e	enum:eapol_bool_var
EAPOL_eapFail	src/eap_peer/eap.h	/^	EAPOL_eapFail,$/;"	e	enum:eapol_bool_var
EAPOL_eapNoResp	src/eap_peer/eap.h	/^	EAPOL_eapNoResp,$/;"	e	enum:eapol_bool_var
EAPOL_eapReq	src/eap_peer/eap.h	/^	EAPOL_eapReq,$/;"	e	enum:eapol_bool_var
EAPOL_eapResp	src/eap_peer/eap.h	/^	EAPOL_eapResp,$/;"	e	enum:eapol_bool_var
EAPOL_eapRestart	src/eap_peer/eap.h	/^	EAPOL_eapRestart,$/;"	e	enum:eapol_bool_var
EAPOL_eapSuccess	src/eap_peer/eap.h	/^	EAPOL_eapSuccess,$/;"	e	enum:eapol_bool_var
EAPOL_idleWhile	src/eap_peer/eap.h	/^	EAPOL_idleWhile$/;"	e	enum:eapol_int_var
EAPOL_portEnabled	src/eap_peer/eap.h	/^	EAPOL_portEnabled,$/;"	e	enum:eapol_bool_var
EAP_AAA_IDLE	src/eap_server/eap_i.h	/^		EAP_AAA_REQUEST, EAP_AAA_RESPONSE, EAP_AAA_IDLE,$/;"	e	enum:eap_sm::__anon155
EAP_AAA_REQUEST	src/eap_server/eap_i.h	/^		EAP_AAA_REQUEST, EAP_AAA_RESPONSE, EAP_AAA_IDLE,$/;"	e	enum:eap_sm::__anon155
EAP_AAA_RESPONSE	src/eap_server/eap_i.h	/^		EAP_AAA_REQUEST, EAP_AAA_RESPONSE, EAP_AAA_IDLE,$/;"	e	enum:eap_sm::__anon155
EAP_AKA_AUTN_LEN	hostapd/hlr_auc_gw.c	88;"	d	file:
EAP_AKA_AUTN_LEN	src/eap_common/eap_sim_common.h	64;"	d
EAP_AKA_AUTS_LEN	hostapd/hlr_auc_gw.c	89;"	d	file:
EAP_AKA_AUTS_LEN	src/eap_common/eap_sim_common.h	65;"	d
EAP_AKA_BIDDING_FLAG_D	src/eap_common/eap_sim_common.h	181;"	d
EAP_AKA_CHECKCODE_LEN	src/eap_common/eap_sim_common.h	72;"	d
EAP_AKA_CK_LEN	hostapd/hlr_auc_gw.c	92;"	d	file:
EAP_AKA_CK_LEN	src/eap_common/eap_sim_common.h	68;"	d
EAP_AKA_IK_LEN	hostapd/hlr_auc_gw.c	91;"	d	file:
EAP_AKA_IK_LEN	src/eap_common/eap_sim_common.h	67;"	d
EAP_AKA_MAX_FAST_REAUTHS	src/eap_common/eap_sim_common.h	69;"	d
EAP_AKA_MAX_RES_LEN	src/eap_common/eap_sim_common.h	71;"	d
EAP_AKA_MIN_RES_LEN	src/eap_common/eap_sim_common.h	70;"	d
EAP_AKA_PERMANENT_PREFIX	src/eap_server/eap_sim_db.h	24;"	d
EAP_AKA_PRIME_CHECKCODE_LEN	src/eap_common/eap_sim_common.h	75;"	d
EAP_AKA_PRIME_KDF	src/eap_common/eap_sim_common.h	178;"	d
EAP_AKA_PRIME_KDF_MAX	src/eap_common/eap_sim_common.h	205;"	d
EAP_AKA_PRIME_K_AUT_LEN	src/eap_common/eap_sim_common.h	74;"	d
EAP_AKA_PRIME_K_RE_LEN	src/eap_common/eap_sim_common.h	76;"	d
EAP_AKA_PRIME_PERMANENT_PREFIX	src/eap_server/eap_sim_db.h	27;"	d
EAP_AKA_PRIME_PSEUDONYM_PREFIX	src/eap_server/eap_sim_db.h	28;"	d
EAP_AKA_PRIME_REAUTH_ID_PREFIX	src/eap_server/eap_sim_db.h	29;"	d
EAP_AKA_PSEUDONYM_PREFIX	src/eap_server/eap_sim_db.h	25;"	d
EAP_AKA_RAND_LEN	hostapd/hlr_auc_gw.c	87;"	d	file:
EAP_AKA_RAND_LEN	src/eap_common/eap_sim_common.h	63;"	d
EAP_AKA_REAUTH_ID_PREFIX	src/eap_server/eap_sim_db.h	26;"	d
EAP_AKA_RES_MAX_LEN	hostapd/hlr_auc_gw.c	90;"	d	file:
EAP_AKA_RES_MAX_LEN	src/eap_common/eap_sim_common.h	66;"	d
EAP_AKA_SUBTYPE_AUTHENTICATION_REJECT	src/eap_common/eap_sim_common.h	53;"	d
EAP_AKA_SUBTYPE_CHALLENGE	src/eap_common/eap_sim_common.h	52;"	d
EAP_AKA_SUBTYPE_CLIENT_ERROR	src/eap_common/eap_sim_common.h	58;"	d
EAP_AKA_SUBTYPE_IDENTITY	src/eap_common/eap_sim_common.h	55;"	d
EAP_AKA_SUBTYPE_NOTIFICATION	src/eap_common/eap_sim_common.h	56;"	d
EAP_AKA_SUBTYPE_REAUTHENTICATION	src/eap_common/eap_sim_common.h	57;"	d
EAP_AKA_SUBTYPE_SYNCHRONIZATION_FAILURE	src/eap_common/eap_sim_common.h	54;"	d
EAP_AKA_UNABLE_TO_PROCESS_PACKET	src/eap_common/eap_sim_common.h	61;"	d
EAP_CLIENT_TIMEOUT_DEFAULT	src/eap_peer/eap.c	40;"	d	file:
EAP_CODE_FAILURE	src/eap_common/eap_defs.h	/^       EAP_CODE_FAILURE = 4 };$/;"	e	enum:__anon110
EAP_CODE_REQUEST	src/eap_common/eap_defs.h	/^enum { EAP_CODE_REQUEST = 1, EAP_CODE_RESPONSE = 2, EAP_CODE_SUCCESS = 3,$/;"	e	enum:__anon110
EAP_CODE_RESPONSE	src/eap_common/eap_defs.h	/^enum { EAP_CODE_REQUEST = 1, EAP_CODE_RESPONSE = 2, EAP_CODE_SUCCESS = 3,$/;"	e	enum:__anon110
EAP_CODE_SUCCESS	src/eap_common/eap_defs.h	/^enum { EAP_CODE_REQUEST = 1, EAP_CODE_RESPONSE = 2, EAP_CODE_SUCCESS = 3,$/;"	e	enum:__anon110
EAP_COMMON_H	src/eap_common/eap_common.h	16;"	d
EAP_CONFIG_FLAGS_PASSWORD_NTHASH	src/eap_peer/eap_config.h	627;"	d
EAP_CONFIG_H	src/eap_peer/eap_config.h	16;"	d
EAP_COPY	src/eap_server/eap_server.c	88;"	d	file:
EAP_DEFS_H	src/eap_common/eap_defs.h	16;"	d
EAP_DISABLED	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
EAP_DISABLED	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
EAP_DISCARD	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
EAP_DISCARD	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
EAP_DISCARD2	src/eap_server/eap_i.h	/^		EAP_RECEIVED2, EAP_DISCARD2, EAP_SEND_REQUEST2,$/;"	e	enum:eap_sm::__anon155
EAP_EMSK_LEN	src/eap_common/eap_defs.h	87;"	d
EAP_FAILURE	src/eap_peer/eap_i.h	/^		EAP_FAILURE$/;"	e	enum:eap_sm::__anon184
EAP_FAILURE	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
EAP_FAILURE2	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE2, EAP_FAILURE2, EAP_SUCCESS2$/;"	e	enum:eap_sm::__anon155
EAP_FAST	src/utils/build_config.h	75;"	d
EAP_FAST_CMK_LEN	src/eap_common/eap_fast_common.h	22;"	d
EAP_FAST_H	src/eap_common/eap_fast_common.h	16;"	d
EAP_FAST_KEY_LEN	src/eap_common/eap_fast_common.h	19;"	d
EAP_FAST_PAC_BINARY_FORMAT_VERSION	src/eap_peer/eap_fast_pac.c	46;"	d	file:
EAP_FAST_PAC_BINARY_MAGIC	src/eap_peer/eap_fast_pac.c	45;"	d	file:
EAP_FAST_PAC_H	src/eap_peer/eap_fast_pac.h	16;"	d
EAP_FAST_PAC_KEY_LEN	src/eap_common/eap_fast_common.h	59;"	d
EAP_FAST_PROV_AUTH	src/eap_peer/eap_fast.c	54;"	d	file:
EAP_FAST_PROV_UNAUTH	src/eap_peer/eap_fast.c	53;"	d	file:
EAP_FAST_SIMCK_LEN	src/eap_common/eap_fast_common.h	20;"	d
EAP_FAST_SKS_LEN	src/eap_common/eap_fast_common.h	21;"	d
EAP_FAST_VERSION	src/eap_common/eap_fast_common.h	18;"	d
EAP_GET_METHOD	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
EAP_GPSK_CIPHER_AES	src/eap_common/eap_gpsk_common.h	37;"	d
EAP_GPSK_CIPHER_RESERVED	src/eap_common/eap_gpsk_common.h	36;"	d
EAP_GPSK_CIPHER_SHA256	src/eap_common/eap_gpsk_common.h	38;"	d
EAP_GPSK_COMMON_H	src/eap_common/eap_gpsk_common.h	16;"	d
EAP_GPSK_FAIL_AUTHENTICATION_FAILURE	src/eap_common/eap_gpsk_common.h	27;"	d
EAP_GPSK_FAIL_AUTHORIZATION_FAILURE	src/eap_common/eap_gpsk_common.h	28;"	d
EAP_GPSK_FAIL_PSK_NOT_FOUND	src/eap_common/eap_gpsk_common.h	26;"	d
EAP_GPSK_MAX_MIC_LEN	src/eap_common/eap_gpsk_common.h	33;"	d
EAP_GPSK_MAX_PK_LEN	src/eap_common/eap_gpsk_common.h	32;"	d
EAP_GPSK_MAX_SK_LEN	src/eap_common/eap_gpsk_common.h	31;"	d
EAP_GPSK_OPCODE_FAIL	src/eap_common/eap_gpsk_common.h	22;"	d
EAP_GPSK_OPCODE_GPSK_1	src/eap_common/eap_gpsk_common.h	18;"	d
EAP_GPSK_OPCODE_GPSK_2	src/eap_common/eap_gpsk_common.h	19;"	d
EAP_GPSK_OPCODE_GPSK_3	src/eap_common/eap_gpsk_common.h	20;"	d
EAP_GPSK_OPCODE_GPSK_4	src/eap_common/eap_gpsk_common.h	21;"	d
EAP_GPSK_OPCODE_PROTECTED_FAIL	src/eap_common/eap_gpsk_common.h	23;"	d
EAP_GPSK_PK_LEN_AES	src/eap_common/eap_gpsk_common.c	200;"	d	file:
EAP_GPSK_PK_LEN_SHA256	src/eap_common/eap_gpsk_common.c	236;"	d	file:
EAP_GPSK_RAND_LEN	src/eap_common/eap_gpsk_common.h	30;"	d
EAP_GPSK_SK_LEN_AES	src/eap_common/eap_gpsk_common.c	199;"	d	file:
EAP_GPSK_SK_LEN_SHA256	src/eap_common/eap_gpsk_common.c	235;"	d	file:
EAP_GPSK_VENDOR_IETF	src/eap_common/eap_gpsk_common.h	35;"	d
EAP_GTC	src/utils/build_config.h	43;"	d
EAP_GTC	src/utils/build_config.h	72;"	d
EAP_GTC	src/utils/build_config.h	91;"	d
EAP_H	src/eap_peer/eap.h	16;"	d
EAP_H	src/eap_server/eap.h	16;"	d
EAP_IDENTITY	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
EAP_IDLE	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
EAP_IDLE	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
EAP_IDLE2	src/eap_server/eap_i.h	/^		EAP_INITIALIZE_PASSTHROUGH, EAP_IDLE2, EAP_RETRANSMIT2,$/;"	e	enum:eap_sm::__anon155
EAP_IKEV2_COMMON_H	src/eap_common/eap_ikev2_common.h	16;"	d
EAP_INITIALIZE	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
EAP_INITIALIZE	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
EAP_INITIALIZE_PASSTHROUGH	src/eap_server/eap_i.h	/^		EAP_INITIALIZE_PASSTHROUGH, EAP_IDLE2, EAP_RETRANSMIT2,$/;"	e	enum:eap_sm::__anon155
EAP_INTEGRITY_CHECK	src/eap_server/eap_i.h	/^		EAP_INTEGRITY_CHECK, EAP_METHOD_RESPONSE, EAP_METHOD_REQUEST,$/;"	e	enum:eap_sm::__anon155
EAP_I_H	src/eap_peer/eap_i.h	16;"	d
EAP_I_H	src/eap_server/eap_i.h	16;"	d
EAP_LEAP	src/utils/build_config.h	45;"	d
EAP_LEAP	src/utils/build_config.h	74;"	d
EAP_LEAP	src/utils/build_config.h	93;"	d
EAP_MAX_AUTH_ROUNDS	src/eap_peer/eap.c	39;"	d	file:
EAP_MAX_AUTH_ROUNDS	src/eap_server/eap_server.c	36;"	d	file:
EAP_MAX_METHODS	src/eap_server/eap.h	25;"	d
EAP_MD5	src/utils/build_config.h	38;"	d
EAP_MD5	src/utils/build_config.h	67;"	d
EAP_MD5	src/utils/build_config.h	86;"	d
EAP_METHOD	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
EAP_METHODS_H	src/eap_peer/eap_methods.h	16;"	d
EAP_METHOD_REQUEST	src/eap_server/eap_i.h	/^		EAP_INTEGRITY_CHECK, EAP_METHOD_RESPONSE, EAP_METHOD_REQUEST,$/;"	e	enum:eap_sm::__anon155
EAP_METHOD_RESPONSE	src/eap_server/eap_i.h	/^		EAP_INTEGRITY_CHECK, EAP_METHOD_RESPONSE, EAP_METHOD_REQUEST,$/;"	e	enum:eap_sm::__anon155
EAP_MSCHAPv2	src/utils/build_config.h	40;"	d
EAP_MSCHAPv2	src/utils/build_config.h	69;"	d
EAP_MSCHAPv2	src/utils/build_config.h	88;"	d
EAP_MSK_LEN	src/eap_common/eap_defs.h	86;"	d
EAP_NAK	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
EAP_NOTIFICATION	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
EAP_OTP	src/utils/build_config.h	44;"	d
EAP_OTP	src/utils/build_config.h	73;"	d
EAP_OTP	src/utils/build_config.h	92;"	d
EAP_PAX_ADE_CLIENT_CHANNEL_BINDING	src/eap_common/eap_pax_common.h	72;"	d
EAP_PAX_ADE_SERVER_CHANNEL_BINDING	src/eap_common/eap_pax_common.h	73;"	d
EAP_PAX_ADE_VENDOR_SPECIFIC	src/eap_common/eap_pax_common.h	71;"	d
EAP_PAX_AK_LEN	src/eap_common/eap_pax_common.h	79;"	d
EAP_PAX_CK_LEN	src/eap_common/eap_pax_common.h	81;"	d
EAP_PAX_COMMON_H	src/eap_common/eap_pax_common.h	16;"	d
EAP_PAX_DH_GROUP_2048_MODP	src/eap_common/eap_pax_common.h	60;"	d
EAP_PAX_DH_GROUP_3072_MODP	src/eap_common/eap_pax_common.h	61;"	d
EAP_PAX_DH_GROUP_NIST_ECC_P_256	src/eap_common/eap_pax_common.h	62;"	d
EAP_PAX_DH_GROUP_NONE	src/eap_common/eap_pax_common.h	59;"	d
EAP_PAX_FLAGS_AI	src/eap_common/eap_pax_common.h	52;"	d
EAP_PAX_FLAGS_CE	src/eap_common/eap_pax_common.h	51;"	d
EAP_PAX_FLAGS_MF	src/eap_common/eap_pax_common.h	50;"	d
EAP_PAX_HMAC_SHA256_128	src/eap_common/eap_pax_common.h	56;"	d
EAP_PAX_ICK_LEN	src/eap_common/eap_pax_common.h	82;"	d
EAP_PAX_ICV_LEN	src/eap_common/eap_pax_common.h	78;"	d
EAP_PAX_MAC_HMAC_SHA1_128	src/eap_common/eap_pax_common.h	55;"	d
EAP_PAX_MAC_LEN	src/eap_common/eap_pax_common.h	77;"	d
EAP_PAX_MK_LEN	src/eap_common/eap_pax_common.h	80;"	d
EAP_PAX_OP_ACK	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_ACK = 0x21$/;"	e	enum:__anon125
EAP_PAX_OP_SEC_1	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_SEC_1 = 0x11,$/;"	e	enum:__anon125
EAP_PAX_OP_SEC_2	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_SEC_2 = 0x12,$/;"	e	enum:__anon125
EAP_PAX_OP_SEC_3	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_SEC_3 = 0x13,$/;"	e	enum:__anon125
EAP_PAX_OP_SEC_4	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_SEC_4 = 0x14,$/;"	e	enum:__anon125
EAP_PAX_OP_SEC_5	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_SEC_5 = 0x15,$/;"	e	enum:__anon125
EAP_PAX_OP_STD_1	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_STD_1 = 0x01,$/;"	e	enum:__anon125
EAP_PAX_OP_STD_2	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_STD_2 = 0x02,$/;"	e	enum:__anon125
EAP_PAX_OP_STD_3	src/eap_common/eap_pax_common.h	/^	EAP_PAX_OP_STD_3 = 0x03,$/;"	e	enum:__anon125
EAP_PAX_PUBLIC_KEY_EL_GAMAL_NIST_ECC	src/eap_common/eap_pax_common.h	68;"	d
EAP_PAX_PUBLIC_KEY_NONE	src/eap_common/eap_pax_common.h	65;"	d
EAP_PAX_PUBLIC_KEY_RSAES_OAEP	src/eap_common/eap_pax_common.h	66;"	d
EAP_PAX_PUBLIC_KEY_RSA_PKCS1_V1_5	src/eap_common/eap_pax_common.h	67;"	d
EAP_PAX_RAND_LEN	src/eap_common/eap_pax_common.h	76;"	d
EAP_PEAP	src/utils/build_config.h	41;"	d
EAP_PEAP	src/utils/build_config.h	70;"	d
EAP_PEAP	src/utils/build_config.h	89;"	d
EAP_PEAP_COMMON_H	src/eap_common/eap_peap_common.h	16;"	d
EAP_PEAP_VERSION	src/eap_peer/eap_peap.c	33;"	d	file:
EAP_PEAP_VERSION	src/eap_server/eap_server_peap.c	33;"	d	file:
EAP_PEER_METHOD_INTERFACE_VERSION	src/eap_peer/eap_i.h	228;"	d
EAP_PICK_UP_METHOD	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE, EAP_PICK_UP_METHOD,$/;"	e	enum:eap_sm::__anon155
EAP_PROPOSE_METHOD	src/eap_server/eap_i.h	/^		EAP_PROPOSE_METHOD, EAP_SELECT_ACTION, EAP_SEND_REQUEST,$/;"	e	enum:eap_sm::__anon155
EAP_PSK_AK_LEN	src/eap_common/eap_psk_common.h	23;"	d
EAP_PSK_COMMON_H	src/eap_common/eap_psk_common.h	16;"	d
EAP_PSK_E_FLAG	src/eap_common/eap_psk_common.h	29;"	d
EAP_PSK_FLAGS_GET_T	src/eap_common/eap_psk_common.h	31;"	d
EAP_PSK_FLAGS_SET_T	src/eap_common/eap_psk_common.h	32;"	d
EAP_PSK_KDK_LEN	src/eap_common/eap_psk_common.h	24;"	d
EAP_PSK_MAC_LEN	src/eap_common/eap_psk_common.h	20;"	d
EAP_PSK_PSK_LEN	src/eap_common/eap_psk_common.h	22;"	d
EAP_PSK_RAND_LEN	src/eap_common/eap_psk_common.h	19;"	d
EAP_PSK_R_FLAG_CONT	src/eap_common/eap_psk_common.h	26;"	d
EAP_PSK_R_FLAG_DONE_FAILURE	src/eap_common/eap_psk_common.h	28;"	d
EAP_PSK_R_FLAG_DONE_SUCCESS	src/eap_common/eap_psk_common.h	27;"	d
EAP_PSK_TEK_LEN	src/eap_common/eap_psk_common.h	21;"	d
EAP_PWD_COMMON_H	src/eap_common/eap_pwd_common.h	16;"	d
EAP_PWD_DEFAULT_PRF	src/eap_common/eap_pwd_common.h	62;"	d
EAP_PWD_DEFAULT_RAND_FUNC	src/eap_common/eap_pwd_common.h	60;"	d
EAP_PWD_GET_EXCHANGE	src/eap_common/eap_pwd_common.h	53;"	d
EAP_PWD_GET_LENGTH_BIT	src/eap_common/eap_pwd_common.h	49;"	d
EAP_PWD_GET_MORE_BIT	src/eap_common/eap_pwd_common.h	51;"	d
EAP_PWD_OPCODE_COMMIT_EXCH	src/eap_common/eap_pwd_common.h	47;"	d
EAP_PWD_OPCODE_CONFIRM_EXCH	src/eap_common/eap_pwd_common.h	48;"	d
EAP_PWD_OPCODE_ID_EXCH	src/eap_common/eap_pwd_common.h	46;"	d
EAP_PWD_PREP_MS	src/eap_common/eap_pwd_common.h	66;"	d
EAP_PWD_PREP_NONE	src/eap_common/eap_pwd_common.h	65;"	d
EAP_PWD_SET_EXCHANGE	src/eap_common/eap_pwd_common.h	54;"	d
EAP_PWD_SET_LENGTH_BIT	src/eap_common/eap_pwd_common.h	50;"	d
EAP_PWD_SET_MORE_BIT	src/eap_common/eap_pwd_common.h	52;"	d
EAP_PWD_group	src/eap_common/eap_pwd_common.h	/^} EAP_PWD_group;$/;"	t	typeref:struct:group_definition_
EAP_RECEIVED	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
EAP_RECEIVED	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
EAP_RECEIVED2	src/eap_server/eap_i.h	/^		EAP_RECEIVED2, EAP_DISCARD2, EAP_SEND_REQUEST2,$/;"	e	enum:eap_sm::__anon155
EAP_REGISTER_H	hostapd/eap_register.h	16;"	d
EAP_RETRANSMIT	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
EAP_RETRANSMIT	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
EAP_RETRANSMIT2	src/eap_server/eap_i.h	/^		EAP_INITIALIZE_PASSTHROUGH, EAP_IDLE2, EAP_RETRANSMIT2,$/;"	e	enum:eap_sm::__anon155
EAP_SAKE_AT_ANY_ID_REQ	src/eap_common/eap_sake_common.h	33;"	d
EAP_SAKE_AT_ENCR_DATA	src/eap_common/eap_sake_common.h	35;"	d
EAP_SAKE_AT_IV	src/eap_common/eap_sake_common.h	36;"	d
EAP_SAKE_AT_MIC_P	src/eap_common/eap_sake_common.h	28;"	d
EAP_SAKE_AT_MIC_S	src/eap_common/eap_sake_common.h	27;"	d
EAP_SAKE_AT_MSK_LIFE	src/eap_common/eap_sake_common.h	39;"	d
EAP_SAKE_AT_NEXT_TMPID	src/eap_common/eap_sake_common.h	38;"	d
EAP_SAKE_AT_PADDING	src/eap_common/eap_sake_common.h	37;"	d
EAP_SAKE_AT_PEERID	src/eap_common/eap_sake_common.h	30;"	d
EAP_SAKE_AT_PERM_ID_REQ	src/eap_common/eap_sake_common.h	34;"	d
EAP_SAKE_AT_RAND_P	src/eap_common/eap_sake_common.h	26;"	d
EAP_SAKE_AT_RAND_S	src/eap_common/eap_sake_common.h	25;"	d
EAP_SAKE_AT_SERVERID	src/eap_common/eap_sake_common.h	29;"	d
EAP_SAKE_AT_SPI_P	src/eap_common/eap_sake_common.h	32;"	d
EAP_SAKE_AT_SPI_S	src/eap_common/eap_sake_common.h	31;"	d
EAP_SAKE_COMMON_H	src/eap_common/eap_sake_common.h	16;"	d
EAP_SAKE_MIC_LEN	src/eap_common/eap_sake_common.h	42;"	d
EAP_SAKE_RAND_LEN	src/eap_common/eap_sake_common.h	41;"	d
EAP_SAKE_ROOT_SECRET_LEN	src/eap_common/eap_sake_common.h	43;"	d
EAP_SAKE_SMS_LEN	src/eap_common/eap_sake_common.h	44;"	d
EAP_SAKE_SUBTYPE_AUTH_REJECT	src/eap_common/eap_sake_common.h	22;"	d
EAP_SAKE_SUBTYPE_CHALLENGE	src/eap_common/eap_sake_common.h	20;"	d
EAP_SAKE_SUBTYPE_CONFIRM	src/eap_common/eap_sake_common.h	21;"	d
EAP_SAKE_SUBTYPE_IDENTITY	src/eap_common/eap_sake_common.h	23;"	d
EAP_SAKE_TEK_AUTH_LEN	src/eap_common/eap_sake_common.h	45;"	d
EAP_SAKE_TEK_CIPHER_LEN	src/eap_common/eap_sake_common.h	46;"	d
EAP_SAKE_TEK_LEN	src/eap_common/eap_sake_common.h	47;"	d
EAP_SAKE_VERSION	src/eap_common/eap_sake_common.h	18;"	d
EAP_SELECT_ACTION	src/eap_server/eap_i.h	/^		EAP_PROPOSE_METHOD, EAP_SELECT_ACTION, EAP_SEND_REQUEST,$/;"	e	enum:eap_sm::__anon155
EAP_SEND_REQUEST	src/eap_server/eap_i.h	/^		EAP_PROPOSE_METHOD, EAP_SELECT_ACTION, EAP_SEND_REQUEST,$/;"	e	enum:eap_sm::__anon155
EAP_SEND_REQUEST2	src/eap_server/eap_i.h	/^		EAP_RECEIVED2, EAP_DISCARD2, EAP_SEND_REQUEST2,$/;"	e	enum:eap_sm::__anon155
EAP_SEND_RESPONSE	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
EAP_SERVER_METHODS_H	src/eap_server/eap_methods.h	16;"	d
EAP_SERVER_METHOD_INTERFACE_VERSION	src/eap_server/eap_i.h	66;"	d
EAP_SIM_AT_ANY_ID_REQ	src/eap_common/eap_sim_common.h	151;"	d
EAP_SIM_AT_AUTN	src/eap_common/eap_sim_common.h	143;"	d
EAP_SIM_AT_AUTS	src/eap_common/eap_sim_common.h	145;"	d
EAP_SIM_AT_BIDDING	src/eap_common/eap_sim_common.h	168;"	d
EAP_SIM_AT_CHECKCODE	src/eap_common/eap_sim_common.h	166;"	d
EAP_SIM_AT_CLIENT_ERROR_CODE	src/eap_common/eap_sim_common.h	159;"	d
EAP_SIM_AT_COUNTER	src/eap_common/eap_sim_common.h	156;"	d
EAP_SIM_AT_COUNTER_TOO_SMALL	src/eap_common/eap_sim_common.h	157;"	d
EAP_SIM_AT_ENCR_DATA	src/eap_common/eap_sim_common.h	163;"	d
EAP_SIM_AT_FULLAUTH_ID_REQ	src/eap_common/eap_sim_common.h	155;"	d
EAP_SIM_AT_IDENTITY	src/eap_common/eap_sim_common.h	152;"	d
EAP_SIM_AT_IV	src/eap_common/eap_sim_common.h	162;"	d
EAP_SIM_AT_KDF	src/eap_common/eap_sim_common.h	161;"	d
EAP_SIM_AT_KDF_INPUT	src/eap_common/eap_sim_common.h	160;"	d
EAP_SIM_AT_MAC	src/eap_common/eap_sim_common.h	149;"	d
EAP_SIM_AT_NEXT_PSEUDONYM	src/eap_common/eap_sim_common.h	164;"	d
EAP_SIM_AT_NEXT_REAUTH_ID	src/eap_common/eap_sim_common.h	165;"	d
EAP_SIM_AT_NONCE_MT	src/eap_common/eap_sim_common.h	147;"	d
EAP_SIM_AT_NONCE_S	src/eap_common/eap_sim_common.h	158;"	d
EAP_SIM_AT_NOTIFICATION	src/eap_common/eap_sim_common.h	150;"	d
EAP_SIM_AT_PADDING	src/eap_common/eap_sim_common.h	146;"	d
EAP_SIM_AT_PERMANENT_ID_REQ	src/eap_common/eap_sim_common.h	148;"	d
EAP_SIM_AT_RAND	src/eap_common/eap_sim_common.h	142;"	d
EAP_SIM_AT_RES	src/eap_common/eap_sim_common.h	144;"	d
EAP_SIM_AT_RESULT_IND	src/eap_common/eap_sim_common.h	167;"	d
EAP_SIM_AT_SELECTED_VERSION	src/eap_common/eap_sim_common.h	154;"	d
EAP_SIM_AT_VERSION_LIST	src/eap_common/eap_sim_common.h	153;"	d
EAP_SIM_COMMON_H	src/eap_common/eap_sim_common.h	16;"	d
EAP_SIM_DB	src/ap/authsrv.c	30;"	d	file:
EAP_SIM_DB_AKA	src/eap_server/eap_sim_db.h	/^	EAP_SIM_DB_AKA,$/;"	e	enum:eap_sim_db_method
EAP_SIM_DB_AKA_PRIME	src/eap_server/eap_sim_db.h	/^	EAP_SIM_DB_AKA_PRIME$/;"	e	enum:eap_sim_db_method
EAP_SIM_DB_FAILURE	src/eap_server/eap_sim_db.h	48;"	d
EAP_SIM_DB_H	src/eap_server/eap_sim_db.h	16;"	d
EAP_SIM_DB_PENDING	src/eap_server/eap_sim_db.h	49;"	d
EAP_SIM_DB_SIM	src/eap_server/eap_sim_db.h	/^	EAP_SIM_DB_SIM,$/;"	e	enum:eap_sim_db_method
EAP_SIM_GENERAL_FAILURE_AFTER_AUTH	src/eap_common/eap_sim_common.h	171;"	d
EAP_SIM_GENERAL_FAILURE_BEFORE_AUTH	src/eap_common/eap_sim_common.h	174;"	d
EAP_SIM_INIT_LEN	src/eap_common/eap_sim_common.c	976;"	d	file:
EAP_SIM_INSUFFICIENT_NUM_OF_CHAL	src/eap_common/eap_sim_common.h	43;"	d
EAP_SIM_IV_LEN	src/eap_common/eap_sim_common.h	25;"	d
EAP_SIM_KC_LEN	src/eap_common/eap_sim_common.h	26;"	d
EAP_SIM_KEYING_DATA_LEN	src/eap_common/eap_sim_common.h	24;"	d
EAP_SIM_K_AUT_LEN	src/eap_common/eap_sim_common.h	22;"	d
EAP_SIM_K_ENCR_LEN	src/eap_common/eap_sim_common.h	23;"	d
EAP_SIM_MAC_LEN	src/eap_common/eap_sim_common.h	20;"	d
EAP_SIM_MAX_CHAL	hostapd/hlr_auc_gw.c	85;"	d	file:
EAP_SIM_MAX_CHAL	src/eap_common/eap_sim_common.h	48;"	d
EAP_SIM_MAX_FAST_REAUTHS	src/eap_common/eap_sim_common.h	46;"	d
EAP_SIM_MK_LEN	src/eap_common/eap_sim_common.h	21;"	d
EAP_SIM_NONCE_MT_LEN	src/eap_common/eap_sim_common.h	19;"	d
EAP_SIM_NONCE_S_LEN	src/eap_common/eap_sim_common.h	18;"	d
EAP_SIM_NOT_SUBSCRIBED	src/eap_common/eap_sim_common.h	173;"	d
EAP_SIM_PERMANENT_PREFIX	src/eap_server/eap_sim_db.h	21;"	d
EAP_SIM_PSEUDONYM_PREFIX	src/eap_server/eap_sim_db.h	22;"	d
EAP_SIM_RAND_NOT_FRESH	src/eap_common/eap_sim_common.h	44;"	d
EAP_SIM_REAUTH_ID_PREFIX	src/eap_server/eap_sim_db.h	23;"	d
EAP_SIM_SRES_LEN	src/eap_common/eap_sim_common.h	27;"	d
EAP_SIM_SUBTYPE_CHALLENGE	src/eap_common/eap_sim_common.h	35;"	d
EAP_SIM_SUBTYPE_CLIENT_ERROR	src/eap_common/eap_sim_common.h	38;"	d
EAP_SIM_SUBTYPE_NOTIFICATION	src/eap_common/eap_sim_common.h	36;"	d
EAP_SIM_SUBTYPE_REAUTHENTICATION	src/eap_common/eap_sim_common.h	37;"	d
EAP_SIM_SUBTYPE_START	src/eap_common/eap_sim_common.h	34;"	d
EAP_SIM_SUCCESS	src/eap_common/eap_sim_common.h	175;"	d
EAP_SIM_TEMPORARILY_DENIED	src/eap_common/eap_sim_common.h	172;"	d
EAP_SIM_UNABLE_TO_PROCESS_PACKET	src/eap_common/eap_sim_common.h	41;"	d
EAP_SIM_UNSUPPORTED_VERSION	src/eap_common/eap_sim_common.h	42;"	d
EAP_SIM_VERSION	src/eap_common/eap_sim_common.h	31;"	d
EAP_SUCCESS	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
EAP_SUCCESS	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
EAP_SUCCESS2	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE2, EAP_FAILURE2, EAP_SUCCESS2$/;"	e	enum:eap_sm::__anon155
EAP_TIMEOUT_FAILURE	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE, EAP_PICK_UP_METHOD,$/;"	e	enum:eap_sm::__anon155
EAP_TIMEOUT_FAILURE2	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE2, EAP_FAILURE2, EAP_SUCCESS2$/;"	e	enum:eap_sm::__anon155
EAP_TLS	src/utils/build_config.h	39;"	d
EAP_TLS	src/utils/build_config.h	68;"	d
EAP_TLS	src/utils/build_config.h	87;"	d
EAP_TLS_COMMON_H	src/eap_peer/eap_tls_common.h	16;"	d
EAP_TLS_COMMON_H	src/eap_server/eap_tls_common.h	16;"	d
EAP_TLS_FLAGS_LENGTH_INCLUDED	src/eap_peer/eap_tls_common.h	76;"	d
EAP_TLS_FLAGS_LENGTH_INCLUDED	src/eap_server/eap_tls_common.h	63;"	d
EAP_TLS_FLAGS_MORE_FRAGMENTS	src/eap_peer/eap_tls_common.h	77;"	d
EAP_TLS_FLAGS_MORE_FRAGMENTS	src/eap_server/eap_tls_common.h	64;"	d
EAP_TLS_FLAGS_START	src/eap_peer/eap_tls_common.h	78;"	d
EAP_TLS_FLAGS_START	src/eap_server/eap_tls_common.h	65;"	d
EAP_TLS_KEY_LEN	src/eap_peer/eap_tls_common.h	82;"	d
EAP_TLS_KEY_LEN	src/eap_server/eap_tls_common.h	69;"	d
EAP_TLS_VERSION_MASK	src/eap_peer/eap_tls_common.h	79;"	d
EAP_TLS_VERSION_MASK	src/eap_server/eap_tls_common.h	66;"	d
EAP_TLV_ACTION_NEGOTIATE_EAP	src/eap_common/eap_tlv_common.h	116;"	d
EAP_TLV_ACTION_PROCESS_TLV	src/eap_common/eap_tlv_common.h	115;"	d
EAP_TLV_CALLED_STATION_ID_TLV	src/eap_common/eap_tlv_common.h	30;"	d
EAP_TLV_CALLING_STATION_ID_TLV	src/eap_common/eap_tlv_common.h	29;"	d
EAP_TLV_COMMON_H	src/eap_common/eap_tlv_common.h	16;"	d
EAP_TLV_CONNECTION_BINDING_TLV	src/eap_common/eap_tlv_common.h	22;"	d
EAP_TLV_CRYPTO_BINDING_SUBTYPE_REQUEST	src/eap_common/eap_tlv_common.h	112;"	d
EAP_TLV_CRYPTO_BINDING_SUBTYPE_RESPONSE	src/eap_common/eap_tlv_common.h	113;"	d
EAP_TLV_CRYPTO_BINDING_TLV	src/eap_common/eap_tlv_common.h	28;"	d
EAP_TLV_EAP_PAYLOAD_TLV	src/eap_common/eap_tlv_common.h	25;"	d
EAP_TLV_ERROR_CODE_TLV	src/eap_common/eap_tlv_common.h	21;"	d
EAP_TLV_IDENTITY_TYPE_TLV	src/eap_common/eap_tlv_common.h	33;"	d
EAP_TLV_INTERMEDIATE_RESULT_TLV	src/eap_common/eap_tlv_common.h	26;"	d
EAP_TLV_NAK_TLV	src/eap_common/eap_tlv_common.h	20;"	d
EAP_TLV_NAS_PORT_TYPE_TLV	src/eap_common/eap_tlv_common.h	31;"	d
EAP_TLV_PAC_TLV	src/eap_common/eap_tlv_common.h	27;"	d
EAP_TLV_PKCS7_TLV	src/eap_common/eap_tlv_common.h	36;"	d
EAP_TLV_REQUEST_ACTION_TLV	src/eap_common/eap_tlv_common.h	35;"	d
EAP_TLV_RESULT_FAILURE	src/eap_common/eap_tlv_common.h	39;"	d
EAP_TLV_RESULT_SUCCESS	src/eap_common/eap_tlv_common.h	38;"	d
EAP_TLV_RESULT_TLV	src/eap_common/eap_tlv_common.h	19;"	d
EAP_TLV_SERVER_IDENTIFIER_TLV	src/eap_common/eap_tlv_common.h	32;"	d
EAP_TLV_SERVER_TRUSTED_ROOT_TLV	src/eap_common/eap_tlv_common.h	34;"	d
EAP_TLV_TYPE_MANDATORY	src/eap_common/eap_tlv_common.h	41;"	d
EAP_TLV_TYPE_MASK	src/eap_common/eap_tlv_common.h	42;"	d
EAP_TLV_URI_TLV	src/eap_common/eap_tlv_common.h	24;"	d
EAP_TLV_VENDOR_SPECIFIC_TLV	src/eap_common/eap_tlv_common.h	23;"	d
EAP_TNC	src/utils/build_config.h	46;"	d
EAP_TNC	src/utils/build_config.h	94;"	d
EAP_TNC_FLAGS_LENGTH_INCLUDED	src/eap_peer/eap_tnc.c	34;"	d	file:
EAP_TNC_FLAGS_LENGTH_INCLUDED	src/eap_server/eap_server_tnc.c	40;"	d	file:
EAP_TNC_FLAGS_MORE_FRAGMENTS	src/eap_peer/eap_tnc.c	35;"	d	file:
EAP_TNC_FLAGS_MORE_FRAGMENTS	src/eap_server/eap_server_tnc.c	41;"	d	file:
EAP_TNC_FLAGS_START	src/eap_peer/eap_tnc.c	36;"	d	file:
EAP_TNC_FLAGS_START	src/eap_server/eap_server_tnc.c	42;"	d	file:
EAP_TNC_VERSION	src/eap_peer/eap_tnc.c	39;"	d	file:
EAP_TNC_VERSION	src/eap_server/eap_server_tnc.c	45;"	d	file:
EAP_TNC_VERSION_MASK	src/eap_peer/eap_tnc.c	37;"	d	file:
EAP_TNC_VERSION_MASK	src/eap_server/eap_server_tnc.c	43;"	d	file:
EAP_TTLS	src/utils/build_config.h	42;"	d
EAP_TTLS	src/utils/build_config.h	71;"	d
EAP_TTLS	src/utils/build_config.h	90;"	d
EAP_TTLS_AUTH_CHAP	src/eap_server/eap.h	28;"	d
EAP_TTLS_AUTH_MSCHAP	src/eap_server/eap.h	29;"	d
EAP_TTLS_AUTH_MSCHAPV2	src/eap_server/eap.h	30;"	d
EAP_TTLS_AUTH_PAP	src/eap_server/eap.h	27;"	d
EAP_TTLS_CHAP_CHALLENGE_LEN	src/eap_common/eap_ttls.h	68;"	d
EAP_TTLS_CHAP_PASSWORD_LEN	src/eap_common/eap_ttls.h	69;"	d
EAP_TTLS_H	src/eap_common/eap_ttls.h	16;"	d
EAP_TTLS_MSCHAPV2_CHALLENGE_LEN	src/eap_common/eap_ttls.h	64;"	d
EAP_TTLS_MSCHAPV2_RESPONSE_LEN	src/eap_common/eap_ttls.h	65;"	d
EAP_TTLS_MSCHAP_CHALLENGE_LEN	src/eap_common/eap_ttls.h	66;"	d
EAP_TTLS_MSCHAP_RESPONSE_LEN	src/eap_common/eap_ttls.h	67;"	d
EAP_TTLS_PHASE2_CHAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_CHAP$/;"	e	enum:eap_ttls_data::phase2_types	file:
EAP_TTLS_PHASE2_EAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_EAP,$/;"	e	enum:eap_ttls_data::phase2_types	file:
EAP_TTLS_PHASE2_MSCHAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_MSCHAP,$/;"	e	enum:eap_ttls_data::phase2_types	file:
EAP_TTLS_PHASE2_MSCHAPV2	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_MSCHAPV2,$/;"	e	enum:eap_ttls_data::phase2_types	file:
EAP_TTLS_PHASE2_PAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_PAP,$/;"	e	enum:eap_ttls_data::phase2_types	file:
EAP_TTLS_VERSION	src/eap_peer/eap_ttls.c	29;"	d	file:
EAP_TTLS_VERSION	src/eap_server/eap_server_ttls.c	27;"	d	file:
EAP_TYPE_AKA	src/eap_common/eap_defs.h	/^	EAP_TYPE_AKA = 23 \/* RFC 4187 *\/,$/;"	e	enum:__anon111
EAP_TYPE_AKA_PRIME	src/eap_common/eap_defs.h	/^	EAP_TYPE_AKA_PRIME = 50 \/* RFC 5448 *\/,$/;"	e	enum:__anon111
EAP_TYPE_EXPANDED	src/eap_common/eap_defs.h	/^	EAP_TYPE_EXPANDED = 254 \/* RFC 3748 *\/$/;"	e	enum:__anon111
EAP_TYPE_FAST	src/eap_common/eap_defs.h	/^	EAP_TYPE_FAST = 43 \/* RFC 4851 *\/,$/;"	e	enum:__anon111
EAP_TYPE_GPSK	src/eap_common/eap_defs.h	/^	EAP_TYPE_GPSK = 51 \/* RFC 5433 *\/,$/;"	e	enum:__anon111
EAP_TYPE_GTC	src/eap_common/eap_defs.h	/^	EAP_TYPE_GTC = 6, \/* RFC 3748 *\/$/;"	e	enum:__anon111
EAP_TYPE_IDENTITY	src/eap_common/eap_defs.h	/^	EAP_TYPE_IDENTITY = 1 \/* RFC 3748 *\/,$/;"	e	enum:__anon111
EAP_TYPE_IKEV2	src/eap_common/eap_defs.h	/^	EAP_TYPE_IKEV2 = 49 \/* RFC 5106 *\/,$/;"	e	enum:__anon111
EAP_TYPE_LEAP	src/eap_common/eap_defs.h	/^	EAP_TYPE_LEAP = 17 \/* Cisco proprietary *\/,$/;"	e	enum:__anon111
EAP_TYPE_MD5	src/eap_common/eap_defs.h	/^	EAP_TYPE_MD5 = 4, \/* RFC 3748 *\/$/;"	e	enum:__anon111
EAP_TYPE_MSCHAPV2	src/eap_common/eap_defs.h	/^	EAP_TYPE_MSCHAPV2 = 26 \/* draft-kamath-pppext-eap-mschapv2-00.txt *\/,$/;"	e	enum:__anon111
EAP_TYPE_NAK	src/eap_common/eap_defs.h	/^	EAP_TYPE_NAK = 3 \/* Response only, RFC 3748 *\/,$/;"	e	enum:__anon111
EAP_TYPE_NONE	src/eap_common/eap_defs.h	/^	EAP_TYPE_NONE = 0,$/;"	e	enum:__anon111
EAP_TYPE_NOTIFICATION	src/eap_common/eap_defs.h	/^	EAP_TYPE_NOTIFICATION = 2 \/* RFC 3748 *\/,$/;"	e	enum:__anon111
EAP_TYPE_OTP	src/eap_common/eap_defs.h	/^	EAP_TYPE_OTP = 5 \/* RFC 3748 *\/,$/;"	e	enum:__anon111
EAP_TYPE_PAX	src/eap_common/eap_defs.h	/^	EAP_TYPE_PAX = 46 \/* RFC 4746 *\/,$/;"	e	enum:__anon111
EAP_TYPE_PEAP	src/eap_common/eap_defs.h	/^	EAP_TYPE_PEAP = 25 \/* draft-josefsson-pppext-eap-tls-eap-06.txt *\/,$/;"	e	enum:__anon111
EAP_TYPE_PSK	src/eap_common/eap_defs.h	/^	EAP_TYPE_PSK = 47 \/* RFC 4764 *\/,$/;"	e	enum:__anon111
EAP_TYPE_PWD	src/eap_common/eap_defs.h	/^	EAP_TYPE_PWD = 52 \/* RFC 5931 *\/,$/;"	e	enum:__anon111
EAP_TYPE_SAKE	src/eap_common/eap_defs.h	/^	EAP_TYPE_SAKE = 48 \/* RFC 4763 *\/,$/;"	e	enum:__anon111
EAP_TYPE_SIM	src/eap_common/eap_defs.h	/^	EAP_TYPE_SIM = 18 \/* RFC 4186 *\/,$/;"	e	enum:__anon111
EAP_TYPE_TLS	src/eap_common/eap_defs.h	/^	EAP_TYPE_TLS = 13 \/* RFC 2716 *\/,$/;"	e	enum:__anon111
EAP_TYPE_TLV	src/eap_common/eap_defs.h	/^	EAP_TYPE_TLV = 33 \/* draft-josefsson-pppext-eap-tls-eap-07.txt *\/,$/;"	e	enum:__anon111
EAP_TYPE_TNC	src/eap_common/eap_defs.h	/^	EAP_TYPE_TNC = 38 \/* TNC IF-T v1.0-r3; note: tentative assignment;$/;"	e	enum:__anon111
EAP_TYPE_TTLS	src/eap_common/eap_defs.h	/^	EAP_TYPE_TTLS = 21 \/* RFC 5281 *\/,$/;"	e	enum:__anon111
EAP_USER_MAX_METHODS	src/ap/ap_config.h	108;"	d
EAP_VENDOR_ID	src/eap_peer/eap_vendor_test.c	28;"	d	file:
EAP_VENDOR_ID	src/eap_server/eap_server_vendor_test.c	21;"	d	file:
EAP_VENDOR_IETF	src/eap_common/eap_defs.h	/^	EAP_VENDOR_IETF = 0,$/;"	e	enum:__anon112
EAP_VENDOR_MICROSOFT	src/eap_common/eap_defs.h	/^	EAP_VENDOR_MICROSOFT = 0x000137 \/* Microsoft *\/,$/;"	e	enum:__anon112
EAP_VENDOR_TYPE	src/eap_peer/eap_vendor_test.c	29;"	d	file:
EAP_VENDOR_TYPE	src/eap_server/eap_server_vendor_test.c	22;"	d	file:
EAP_VENDOR_TYPE_WSC	src/eap_common/eap_wsc_common.h	18;"	d
EAP_VENDOR_WFA	src/eap_common/eap_defs.h	/^	EAP_VENDOR_WFA = 0x00372A \/* Wi-Fi Alliance *\/$/;"	e	enum:__anon112
EAP_WSC	src/utils/build_config.h	96;"	d
EAP_WSC_COMMON_H	src/eap_common/eap_wsc_common.h	16;"	d
EAP_state	src/eap_peer/eap_i.h	/^	} EAP_state;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon184	access:public
EAP_state	src/eap_server/eap_i.h	/^	} EAP_state;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon155	access:public
EDIT_H	src/utils/edit.h	16;"	d
EDIT_KEY_ALT_DOWN	src/utils/edit.c	/^	EDIT_KEY_ALT_DOWN,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_LEFT	src/utils/edit.c	/^	EDIT_KEY_ALT_LEFT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_RIGHT	src/utils/edit.c	/^	EDIT_KEY_ALT_RIGHT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_SHIFT_DOWN	src/utils/edit.c	/^	EDIT_KEY_ALT_SHIFT_DOWN,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_SHIFT_LEFT	src/utils/edit.c	/^	EDIT_KEY_ALT_SHIFT_LEFT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_SHIFT_RIGHT	src/utils/edit.c	/^	EDIT_KEY_ALT_SHIFT_RIGHT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_SHIFT_UP	src/utils/edit.c	/^	EDIT_KEY_ALT_SHIFT_UP,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ALT_UP	src/utils/edit.c	/^	EDIT_KEY_ALT_UP,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_BACKSPACE	src/utils/edit.c	/^	EDIT_KEY_BACKSPACE,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_A	src/utils/edit.c	/^	EDIT_KEY_CTRL_A,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_B	src/utils/edit.c	/^	EDIT_KEY_CTRL_B,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_D	src/utils/edit.c	/^	EDIT_KEY_CTRL_D,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_DOWN	src/utils/edit.c	/^	EDIT_KEY_CTRL_DOWN,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_E	src/utils/edit.c	/^	EDIT_KEY_CTRL_E,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_F	src/utils/edit.c	/^	EDIT_KEY_CTRL_F,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_G	src/utils/edit.c	/^	EDIT_KEY_CTRL_G,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_H	src/utils/edit.c	/^	EDIT_KEY_CTRL_H,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_J	src/utils/edit.c	/^	EDIT_KEY_CTRL_J,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_K	src/utils/edit.c	/^	EDIT_KEY_CTRL_K,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_L	src/utils/edit.c	/^	EDIT_KEY_CTRL_L,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_LEFT	src/utils/edit.c	/^	EDIT_KEY_CTRL_LEFT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_N	src/utils/edit.c	/^	EDIT_KEY_CTRL_N,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_O	src/utils/edit.c	/^	EDIT_KEY_CTRL_O,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_P	src/utils/edit.c	/^	EDIT_KEY_CTRL_P,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_R	src/utils/edit.c	/^	EDIT_KEY_CTRL_R,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_RIGHT	src/utils/edit.c	/^	EDIT_KEY_CTRL_RIGHT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_T	src/utils/edit.c	/^	EDIT_KEY_CTRL_T,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_U	src/utils/edit.c	/^	EDIT_KEY_CTRL_U,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_UP	src/utils/edit.c	/^	EDIT_KEY_CTRL_UP,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_V	src/utils/edit.c	/^	EDIT_KEY_CTRL_V,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_CTRL_W	src/utils/edit.c	/^	EDIT_KEY_CTRL_W,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_DELETE	src/utils/edit.c	/^	EDIT_KEY_DELETE,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_DOWN	src/utils/edit.c	/^	EDIT_KEY_DOWN,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_END	src/utils/edit.c	/^	EDIT_KEY_END,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_ENTER	src/utils/edit.c	/^	EDIT_KEY_ENTER,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_EOF	src/utils/edit.c	/^	EDIT_KEY_EOF$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F1	src/utils/edit.c	/^	EDIT_KEY_F1,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F10	src/utils/edit.c	/^	EDIT_KEY_F10,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F11	src/utils/edit.c	/^	EDIT_KEY_F11,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F12	src/utils/edit.c	/^	EDIT_KEY_F12,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F2	src/utils/edit.c	/^	EDIT_KEY_F2,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F3	src/utils/edit.c	/^	EDIT_KEY_F3,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F4	src/utils/edit.c	/^	EDIT_KEY_F4,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F5	src/utils/edit.c	/^	EDIT_KEY_F5,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F6	src/utils/edit.c	/^	EDIT_KEY_F6,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F7	src/utils/edit.c	/^	EDIT_KEY_F7,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F8	src/utils/edit.c	/^	EDIT_KEY_F8,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_F9	src/utils/edit.c	/^	EDIT_KEY_F9,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_HOME	src/utils/edit.c	/^	EDIT_KEY_HOME,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_INSERT	src/utils/edit.c	/^	EDIT_KEY_INSERT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_LEFT	src/utils/edit.c	/^	EDIT_KEY_LEFT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_NONE	src/utils/edit.c	/^	EDIT_KEY_NONE = 256,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_PAGE_DOWN	src/utils/edit.c	/^	EDIT_KEY_PAGE_DOWN,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_PAGE_UP	src/utils/edit.c	/^	EDIT_KEY_PAGE_UP,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_RIGHT	src/utils/edit.c	/^	EDIT_KEY_RIGHT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_SHIFT_DOWN	src/utils/edit.c	/^	EDIT_KEY_SHIFT_DOWN,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_SHIFT_LEFT	src/utils/edit.c	/^	EDIT_KEY_SHIFT_LEFT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_SHIFT_RIGHT	src/utils/edit.c	/^	EDIT_KEY_SHIFT_RIGHT,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_SHIFT_UP	src/utils/edit.c	/^	EDIT_KEY_SHIFT_UP,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_TAB	src/utils/edit.c	/^	EDIT_KEY_TAB,$/;"	e	enum:edit_key_code	file:
EDIT_KEY_UP	src/utils/edit.c	/^	EDIT_KEY_UP,$/;"	e	enum:edit_key_code	file:
ELOOP_ALL_CTX	src/utils/eloop.h	29;"	d
ELOOP_H	src/utils/eloop.h	24;"	d
EMERGENCY_ALERT_SYSTEM	src/common/ieee802_11_defs.h	/^	EMERGENCY_ALERT_SYSTEM = 3,$/;"	e	enum:adv_proto_id
ENCR_3DES	src/eap_common/ikev2_common.h	/^	ENCR_3DES = 3,$/;"	e	enum:__anon117
ENCR_3IDEA	src/eap_common/ikev2_common.h	/^	ENCR_3IDEA = 8,$/;"	e	enum:__anon117
ENCR_AES_CBC	src/eap_common/ikev2_common.h	/^	ENCR_AES_CBC = 12,$/;"	e	enum:__anon117
ENCR_AES_CTR	src/eap_common/ikev2_common.h	/^	ENCR_AES_CTR = 13$/;"	e	enum:__anon117
ENCR_BLOWFISH	src/eap_common/ikev2_common.h	/^	ENCR_BLOWFISH = 7,$/;"	e	enum:__anon117
ENCR_CAST	src/eap_common/ikev2_common.h	/^	ENCR_CAST = 6,$/;"	e	enum:__anon117
ENCR_DES	src/eap_common/ikev2_common.h	/^	ENCR_DES = 2,$/;"	e	enum:__anon117
ENCR_DES_IV32	src/eap_common/ikev2_common.h	/^	ENCR_DES_IV32 = 9,$/;"	e	enum:__anon117
ENCR_DES_IV64	src/eap_common/ikev2_common.h	/^	ENCR_DES_IV64 = 1,$/;"	e	enum:__anon117
ENCR_IDEA	src/eap_common/ikev2_common.h	/^	ENCR_IDEA = 5,$/;"	e	enum:__anon117
ENCR_NULL	src/eap_common/ikev2_common.h	/^	ENCR_NULL = 11,$/;"	e	enum:__anon117
ENCR_RC5	src/eap_common/ikev2_common.h	/^	ENCR_RC5 = 4,$/;"	e	enum:__anon117
EPOCHFILETIME	src/utils/os_win32.c	33;"	d	file:
ERP_INFO_BARKER_PREAMBLE_MODE	src/common/ieee802_11_defs.h	546;"	d
ERP_INFO_NON_ERP_PRESENT	src/common/ieee802_11_defs.h	544;"	d
ERP_INFO_USE_PROTECTION	src/common/ieee802_11_defs.h	545;"	d
ERROR_ACCT_DISABLED	src/eap_peer/eap_mschapv2.c	74;"	d	file:
ERROR_ACCT_DISABLED	src/eap_server/eap_server_mschapv2.c	40;"	d	file:
ERROR_AUTHENTICATION_FAILURE	src/eap_peer/eap_mschapv2.c	77;"	d	file:
ERROR_AUTHENTICATION_FAILURE	src/eap_server/eap_server_mschapv2.c	43;"	d	file:
ERROR_CHANGING_PASSWORD	src/eap_peer/eap_mschapv2.c	78;"	d	file:
ERROR_CHANGING_PASSWORD	src/eap_server/eap_server_mschapv2.c	44;"	d	file:
ERROR_NO_DIALIN_PERMISSION	src/eap_peer/eap_mschapv2.c	76;"	d	file:
ERROR_NO_DIALIN_PERMISSION	src/eap_server/eap_server_mschapv2.c	42;"	d	file:
ERROR_PASSWD_EXPIRED	src/eap_peer/eap_mschapv2.c	75;"	d	file:
ERROR_PASSWD_EXPIRED	src/eap_server/eap_server_mschapv2.c	41;"	d	file:
ERROR_RESTRICTED_LOGON_HOURS	src/eap_peer/eap_mschapv2.c	73;"	d	file:
ERROR_RESTRICTED_LOGON_HOURS	src/eap_server/eap_server_mschapv2.c	39;"	d	file:
ESTABLISHED	src/tls/tlsv1_client_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_client::__anon108
ESTABLISHED	src/tls/tlsv1_server_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_server::__anon105
ETH_ALEN	src/utils/common.h	328;"	d
ETH_P_80211_ENCAP	src/utils/common.h	337;"	d
ETH_P_80211_RAW	src/drivers/driver_atheros.c	44;"	d	file:
ETH_P_80211_RAW	src/drivers/driver_madwifi.c	52;"	d	file:
ETH_P_ALL	src/utils/common.h	334;"	d
ETH_P_EAPOL	src/utils/common.h	343;"	d
ETH_P_PAE	src/utils/common.h	340;"	d
ETH_P_PREAUTH	src/ap/preauth_auth.c	33;"	d	file:
ETH_P_RRB	src/utils/common.h	349;"	d
ETH_P_RSN_PREAUTH	src/utils/common.h	346;"	d
EVENT_ADAPTER_ARRIVAL	src/drivers/driver_ndis_.c	/^		   EVENT_MEDIA_SPECIFIC, EVENT_ADAPTER_ARRIVAL,$/;"	e	enum:event_types	file:
EVENT_ADAPTER_ARRIVAL	src/drivers/ndis_events.c	/^		   EVENT_ADAPTER_ARRIVAL, EVENT_ADAPTER_REMOVAL };$/;"	e	enum:event_types	file:
EVENT_ADAPTER_REMOVAL	src/drivers/driver_ndis_.c	/^		   EVENT_ADAPTER_REMOVAL };$/;"	e	enum:event_types	file:
EVENT_ADAPTER_REMOVAL	src/drivers/ndis_events.c	/^		   EVENT_ADAPTER_ARRIVAL, EVENT_ADAPTER_REMOVAL };$/;"	e	enum:event_types	file:
EVENT_ASSOC	src/drivers/driver.h	/^	EVENT_ASSOC,$/;"	e	enum:wpa_event_type
EVENT_ASSOCINFO	src/drivers/driver.h	/^	EVENT_ASSOCINFO,$/;"	e	enum:wpa_event_type
EVENT_ASSOC_REJECT	src/drivers/driver.h	/^	EVENT_ASSOC_REJECT,$/;"	e	enum:wpa_event_type
EVENT_ASSOC_TIMED_OUT	src/drivers/driver.h	/^	EVENT_ASSOC_TIMED_OUT,$/;"	e	enum:wpa_event_type
EVENT_AUTH	src/drivers/driver.h	/^	EVENT_AUTH,$/;"	e	enum:wpa_event_type
EVENT_AUTH_TIMED_OUT	src/drivers/driver.h	/^	EVENT_AUTH_TIMED_OUT,$/;"	e	enum:wpa_event_type
EVENT_BEST_CHANNEL	src/drivers/driver.h	/^	EVENT_BEST_CHANNEL,$/;"	e	enum:wpa_event_type
EVENT_CANCEL_REMAIN_ON_CHANNEL	src/drivers/driver.h	/^	EVENT_CANCEL_REMAIN_ON_CHANNEL,$/;"	e	enum:wpa_event_type
EVENT_CHANNEL_LIST_CHANGED	src/drivers/driver.h	/^	EVENT_CHANNEL_LIST_CHANGED,$/;"	e	enum:wpa_event_type
EVENT_CONNECT	src/drivers/driver_ndis_.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT,$/;"	e	enum:event_types	file:
EVENT_CONNECT	src/drivers/ndis_events.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT, EVENT_MEDIA_SPECIFIC,$/;"	e	enum:event_types	file:
EVENT_DEAUTH	src/drivers/driver.h	/^	EVENT_DEAUTH,$/;"	e	enum:wpa_event_type
EVENT_DELAY_MSEC	src/wps/wps_upnp_event.c	38;"	d	file:
EVENT_DELAY_SECONDS	src/wps/wps_upnp_event.c	37;"	d	file:
EVENT_DISASSOC	src/drivers/driver.h	/^	EVENT_DISASSOC,$/;"	e	enum:wpa_event_type
EVENT_DISCONNECT	src/drivers/driver_ndis_.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT,$/;"	e	enum:event_types	file:
EVENT_DISCONNECT	src/drivers/ndis_events.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT, EVENT_MEDIA_SPECIFIC,$/;"	e	enum:event_types	file:
EVENT_DRIVER_CLIENT_POLL_OK	src/drivers/driver.h	/^	EVENT_DRIVER_CLIENT_POLL_OK$/;"	e	enum:wpa_event_type
EVENT_DRIVER_GTK_REKEY	src/drivers/driver.h	/^	EVENT_DRIVER_GTK_REKEY,$/;"	e	enum:wpa_event_type
EVENT_EAPOL_RX	src/drivers/driver.h	/^	EVENT_EAPOL_RX,$/;"	e	enum:wpa_event_type
EVENT_FT_RESPONSE	src/drivers/driver.h	/^	EVENT_FT_RESPONSE,$/;"	e	enum:wpa_event_type
EVENT_FT_RRB_RX	src/drivers/driver.h	/^	EVENT_FT_RRB_RX,$/;"	e	enum:wpa_event_type
EVENT_IBSS_PEER_LOST	src/drivers/driver.h	/^	EVENT_IBSS_PEER_LOST,$/;"	e	enum:wpa_event_type
EVENT_IBSS_RSN_START	src/drivers/driver.h	/^	EVENT_IBSS_RSN_START,$/;"	e	enum:wpa_event_type
EVENT_INTERFACE_ADDED	src/drivers/driver.h	/^			EVENT_INTERFACE_ADDED, EVENT_INTERFACE_REMOVED$/;"	e	enum:wpa_event_data::interface_status::__anon90
EVENT_INTERFACE_DISABLED	src/drivers/driver.h	/^	EVENT_INTERFACE_DISABLED,$/;"	e	enum:wpa_event_type
EVENT_INTERFACE_ENABLED	src/drivers/driver.h	/^	EVENT_INTERFACE_ENABLED,$/;"	e	enum:wpa_event_type
EVENT_INTERFACE_REMOVED	src/drivers/driver.h	/^			EVENT_INTERFACE_ADDED, EVENT_INTERFACE_REMOVED$/;"	e	enum:wpa_event_data::interface_status::__anon90
EVENT_INTERFACE_STATUS	src/drivers/driver.h	/^	EVENT_INTERFACE_STATUS,$/;"	e	enum:wpa_event_type
EVENT_INTERFACE_UNAVAILABLE	src/drivers/driver.h	/^	EVENT_INTERFACE_UNAVAILABLE,$/;"	e	enum:wpa_event_type
EVENT_MEDIA_SPECIFIC	src/drivers/driver_ndis_.c	/^		   EVENT_MEDIA_SPECIFIC, EVENT_ADAPTER_ARRIVAL,$/;"	e	enum:event_types	file:
EVENT_MEDIA_SPECIFIC	src/drivers/ndis_events.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT, EVENT_MEDIA_SPECIFIC,$/;"	e	enum:event_types	file:
EVENT_MICHAEL_MIC_FAILURE	src/drivers/driver.h	/^	EVENT_MICHAEL_MIC_FAILURE,$/;"	e	enum:wpa_event_type
EVENT_MLME_RX	src/drivers/driver.h	/^	EVENT_MLME_RX,$/;"	e	enum:wpa_event_type
EVENT_NEW_STA	src/drivers/driver.h	/^	EVENT_NEW_STA,$/;"	e	enum:wpa_event_type
EVENT_P2P_DEV_FOUND	src/drivers/driver.h	/^	EVENT_P2P_DEV_FOUND,$/;"	e	enum:wpa_event_type
EVENT_P2P_GO_NEG_COMPLETED	src/drivers/driver.h	/^	EVENT_P2P_GO_NEG_COMPLETED,$/;"	e	enum:wpa_event_type
EVENT_P2P_GO_NEG_REQ_RX	src/drivers/driver.h	/^	EVENT_P2P_GO_NEG_REQ_RX,$/;"	e	enum:wpa_event_type
EVENT_P2P_PROV_DISC_REQUEST	src/drivers/driver.h	/^	EVENT_P2P_PROV_DISC_REQUEST,$/;"	e	enum:wpa_event_type
EVENT_P2P_PROV_DISC_RESPONSE	src/drivers/driver.h	/^	EVENT_P2P_PROV_DISC_RESPONSE,$/;"	e	enum:wpa_event_type
EVENT_P2P_SD_REQUEST	src/drivers/driver.h	/^	EVENT_P2P_SD_REQUEST,$/;"	e	enum:wpa_event_type
EVENT_P2P_SD_RESPONSE	src/drivers/driver.h	/^	EVENT_P2P_SD_RESPONSE,$/;"	e	enum:wpa_event_type
EVENT_PMKID_CANDIDATE	src/drivers/driver.h	/^	EVENT_PMKID_CANDIDATE,$/;"	e	enum:wpa_event_type
EVENT_REMAIN_ON_CHANNEL	src/drivers/driver.h	/^	EVENT_REMAIN_ON_CHANNEL,$/;"	e	enum:wpa_event_type
EVENT_RX_ACTION	src/drivers/driver.h	/^	EVENT_RX_ACTION,$/;"	e	enum:wpa_event_type
EVENT_RX_FROM_UNKNOWN	src/drivers/driver.h	/^	EVENT_RX_FROM_UNKNOWN,$/;"	e	enum:wpa_event_type
EVENT_RX_MGMT	src/drivers/driver.h	/^	EVENT_RX_MGMT,$/;"	e	enum:wpa_event_type
EVENT_RX_PROBE_REQ	src/drivers/driver.h	/^	EVENT_RX_PROBE_REQ,$/;"	e	enum:wpa_event_type
EVENT_SCAN_RESULTS	src/drivers/driver.h	/^	EVENT_SCAN_RESULTS,$/;"	e	enum:wpa_event_type
EVENT_SCHED_SCAN_STOPPED	src/drivers/driver.h	/^	EVENT_SCHED_SCAN_STOPPED,$/;"	e	enum:wpa_event_type
EVENT_SIGNAL_CHANGE	src/drivers/driver.h	/^	EVENT_SIGNAL_CHANGE,$/;"	e	enum:wpa_event_type
EVENT_STATION_LOW_ACK	src/drivers/driver.h	/^	EVENT_STATION_LOW_ACK,$/;"	e	enum:wpa_event_type
EVENT_STKSTART	src/drivers/driver.h	/^	EVENT_STKSTART,$/;"	e	enum:wpa_event_type
EVENT_TDLS	src/drivers/driver.h	/^	EVENT_TDLS,$/;"	e	enum:wpa_event_type
EVENT_TX_STATUS	src/drivers/driver.h	/^	EVENT_TX_STATUS,$/;"	e	enum:wpa_event_type
EVENT_TYPE_EXCEPTION	src/utils/eloop.h	/^	EVENT_TYPE_EXCEPTION$/;"	e	enum:__anon28
EVENT_TYPE_READ	src/utils/eloop.h	/^	EVENT_TYPE_READ = 0,$/;"	e	enum:__anon28
EVENT_TYPE_WRITE	src/utils/eloop.h	/^	EVENT_TYPE_WRITE,$/;"	e	enum:__anon28
EVENT_UNPROT_DEAUTH	src/drivers/driver.h	/^	EVENT_UNPROT_DEAUTH,$/;"	e	enum:wpa_event_type
EVENT_UNPROT_DISASSOC	src/drivers/driver.h	/^	EVENT_UNPROT_DISASSOC,$/;"	e	enum:wpa_event_type
EVENT_WPS_BUTTON_PUSHED	src/drivers/driver.h	/^	EVENT_WPS_BUTTON_PUSHED,$/;"	e	enum:wpa_event_type
EXTRACT_LEN	src/crypto/random.c	48;"	d	file:
EXT_HT_CAP_INFO_HTC_SUPPORTED	src/common/ieee802_11_defs.h	574;"	d
EXT_HT_CAP_INFO_MCS_FEEDBACK_OFFSET	src/common/ieee802_11_defs.h	573;"	d
EXT_HT_CAP_INFO_PCO	src/common/ieee802_11_defs.h	571;"	d
EXT_HT_CAP_INFO_RD_RESPONDER	src/common/ieee802_11_defs.h	575;"	d
EXT_HT_CAP_INFO_TRANS_TIME_OFFSET	src/common/ieee802_11_defs.h	572;"	d
EapDecision	src/eap_peer/eap_i.h	/^} EapDecision;$/;"	t	typeref:enum:__anon182
EapMethodState	src/eap_peer/eap_i.h	/^} EapMethodState;$/;"	t	typeref:enum:__anon183
EapType	src/eap_common/eap_defs.h	/^} EapType;$/;"	t	typeref:enum:__anon111
EncryptStatusSupported	src/drivers/driver_ndis.c	/^	NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_ENCRYPTION	file:	access:public
F1	src/crypto/md4-internal.c	187;"	d	file:
F1	src/crypto/md5-internal.c	197;"	d	file:
F2	src/crypto/md4-internal.c	188;"	d	file:
F2	src/crypto/md5-internal.c	198;"	d	file:
F3	src/crypto/md4-internal.c	189;"	d	file:
F3	src/crypto/md5-internal.c	199;"	d	file:
F4	src/crypto/md5-internal.c	200;"	d	file:
FAIL	src/drivers/driver_nl80211.c	4971;"	d	file:
FAIL	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
FAIL	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
FAIL	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
FAIL	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
FAIL	src/eap_server/eap_server_tnc.c	/^		FAIL$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
FAIL	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
FAILED	src/tls/tlsv1_client_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_client::__anon108
FAILED	src/tls/tlsv1_server_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_server::__anon105
FAILED_CP_REQUIRED	src/eap_common/ikev2_common.h	/^	FAILED_CP_REQUIRED = 37,$/;"	e	enum:__anon124
FAILURE	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
FAILURE	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
FAILURE	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
FAILURE	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
FAILURE	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
FAILURE	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
FAILURE	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
FAILURE	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
FAILURE	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gtc_data::__anon141	file:
FAILURE	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_identity_data::__anon129	file:
FAILURE	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	e	enum:eap_md5_data::__anon142	file:
FAILURE	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
FAILURE	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
FAILURE	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
FAILURE	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
FAILURE	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
FAILURE	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
FAILURE	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
FAILURE	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
FAILURE	src/eap_server/eap_server_ttls.c	/^		PHASE2_MSCHAPV2_RESP, SUCCESS, FAILURE$/;"	e	enum:eap_ttls_data::__anon126	file:
FAILURE	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
FAILURE	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sim_db_pending::__anon148	file:
FAILURE_REQ	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
FAILURE_REQ	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
FALSE	src/common/defs.h	/^typedef enum { FALSE = 0, TRUE = 1 } Boolean;$/;"	e	enum:__anon62
FALSE	src/common/defs.h	19;"	d
FHConfig	src/drivers/driver_ndis.c	/^	NDIS_802_11_CONFIGURATION_FH FHConfig;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
FHConfig	src/drivers/driver_ralink.h	/^   NDIS_802_11_CONFIGURATION_FH    FHConfig;$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
FLAG_CHUNK	src/wps/ndef.c	23;"	d	file:
FLAG_ID_LENGTH_PRESENT	src/wps/ndef.c	25;"	d	file:
FLAG_MESSAGE_BEGIN	src/wps/ndef.c	21;"	d	file:
FLAG_MESSAGE_END	src/wps/ndef.c	22;"	d	file:
FLAG_SHORT_RECORD	src/wps/ndef.c	24;"	d	file:
FLAG_TNF_RFC2046	src/wps/ndef.c	26;"	d	file:
FRAG_ACK	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
FRAG_ACK	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
FRAG_ACK	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
FRAG_ACK	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
FRAG_ACK	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	e	enum:eap_ssl_data::__anon138
FREED_MAGIC	src/utils/os_unix.c	37;"	d	file:
FSCTL_NDISUIO_BASE	src/drivers/driver_ndis.c	403;"	d	file:
FSCTL_NDISUIO_BASE	src/l2_packet/l2_packet_ndis.c	39;"	d	file:
FTIE_SUBELEM_GTK	src/common/wpa_common.h	289;"	d
FTIE_SUBELEM_IGTK	src/common/wpa_common.h	291;"	d
FTIE_SUBELEM_R0KH_ID	src/common/wpa_common.h	290;"	d
FTIE_SUBELEM_R1KH_ID	src/common/wpa_common.h	288;"	d
FT_PACKET_R0KH_R1KH_PULL	src/ap/wpa_auth.h	44;"	d
FT_PACKET_R0KH_R1KH_PUSH	src/ap/wpa_auth.h	46;"	d
FT_PACKET_R0KH_R1KH_RESP	src/ap/wpa_auth.h	45;"	d
FT_PACKET_REQUEST	src/ap/wpa_auth.h	41;"	d
FT_PACKET_RESPONSE	src/ap/wpa_auth.h	42;"	d
FT_R0KH_ID_MAX_LEN	src/common/wpa_common.h	131;"	d
FT_R0KH_R1KH_PULL_DATA_LEN	src/ap/wpa_auth.h	48;"	d
FT_R0KH_R1KH_PUSH_DATA_LEN	src/ap/wpa_auth.h	50;"	d
FT_R0KH_R1KH_RESP_DATA_LEN	src/ap/wpa_auth.h	49;"	d
FT_R1KH_ID_LEN	src/common/wpa_common.h	132;"	d
FULLAUTH_ID	src/eap_common/eap_sim_common.h	/^	NO_ID_REQ, ANY_ID, FULLAUTH_ID, PERMANENT_ID$/;"	e	enum:eap_sim_id_req
Flags	src/drivers/driver_ndis.c	/^	ULONG Flags;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:	access:public
Flags	src/drivers/driver_ndis.c	/^	ULONG Flags;$/;"	m	struct:PMKID_CANDIDATE	file:	access:public
Flags	src/drivers/driver_ralink.h	/^	ULONG Flags;$/;"	m	struct:_PMKID_CANDIDATE	access:public
ForceAuthorized	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { ForceUnauthorized = 1, ForceAuthorized = 3, Auto = 2 }$/;"	e	enum:__anon63
ForceAuthorized	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Auto, ForceUnauthorized, ForceAuthorized } PortControl;$/;"	e	enum:__anon23
ForceUnauthorized	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { ForceUnauthorized = 1, ForceAuthorized = 3, Auto = 2 }$/;"	e	enum:__anon63
ForceUnauthorized	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Auto, ForceUnauthorized, ForceAuthorized } PortControl;$/;"	e	enum:__anon23
GAS_H	src/common/gas.h	17;"	d
GETPARAM	src/drivers/driver_bsd.c	1455;"	d	file:
GETPARAM	src/drivers/driver_bsd.c	1515;"	d	file:
GETU32	src/crypto/aes_i.h	108;"	d
GETU32	src/crypto/aes_i.h	111;"	d
GInit	src/ap/wpa_auth_i.h	/^	Boolean GInit;$/;"	m	struct:wpa_group	access:public
GKeyDoneStations	src/ap/wpa_auth_i.h	/^	int GKeyDoneStations;$/;"	m	struct:wpa_group	access:public
GM	src/ap/wpa_auth_i.h	/^	int GN, GM;$/;"	m	struct:wpa_group	access:public
GMK	src/ap/wpa_auth_i.h	/^	u8 GMK[WPA_GMK_LEN];$/;"	m	struct:wpa_group	access:public
GM_igtk	src/ap/wpa_auth_i.h	/^	int GN_igtk, GM_igtk;$/;"	m	struct:wpa_group	access:public
GN	src/ap/wpa_auth_i.h	/^	int GN, GM;$/;"	m	struct:wpa_group	access:public
GNUTLS_INTERNAL_STRUCTURE_HACK	src/crypto/tls_gnutls.c	35;"	d	file:
GN_igtk	src/ap/wpa_auth_i.h	/^	int GN_igtk, GM_igtk;$/;"	m	struct:wpa_group	access:public
GNonce	src/ap/wpa_auth_i.h	/^	u8 GNonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_group	access:public
GPSK_1	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
GPSK_1	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
GPSK_3	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
GPSK_3	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
GSM_RAND_LEN	src/eap_common/eap_sim_common.h	29;"	d
GTK	src/ap/wpa_auth_i.h	/^	u8 GTK[2][WPA_GTK_MAX_LEN];$/;"	m	struct:wpa_group	access:public
GTKAuthenticator	src/ap/wpa_auth_i.h	/^	Boolean GTKAuthenticator;$/;"	m	struct:wpa_group	access:public
GTKReKey	src/ap/wpa_auth_i.h	/^	Boolean GTKReKey;$/;"	m	struct:wpa_group	access:public
GTK_len	src/ap/wpa_auth_i.h	/^	int GTK_len;$/;"	m	struct:wpa_group	access:public
GTimeoutCtr	src/ap/wpa_auth_i.h	/^	int GTimeoutCtr;$/;"	m	struct:wpa_state_machine	access:public
GUpdateStationKeys	src/ap/wpa_auth_i.h	/^	Boolean GUpdateStationKeys;$/;"	m	struct:wpa_state_machine	access:public
Gamma0	src/crypto/sha256-internal.c	92;"	d	file:
Gamma1	src/crypto/sha256-internal.c	93;"	d	file:
HAPD_BROADCAST	src/ap/drv_callbacks.c	307;"	d	file:
HIDDEN_SSID_ZERO_CONTENTS	src/drivers/driver.h	/^	HIDDEN_SSID_ZERO_CONTENTS$/;"	e	enum:hide_ssid
HIDDEN_SSID_ZERO_LEN	src/drivers/driver.h	/^	HIDDEN_SSID_ZERO_LEN,$/;"	e	enum:hide_ssid
HISTORY_MAX	src/utils/edit.c	30;"	d	file:
HOBJS	hostapd/Android.mk	/^HOBJS =$/;"	m
HOSTAPD_ACL_ACCEPT	src/ap/ieee802_11_auth.h	/^	HOSTAPD_ACL_ACCEPT = 1,$/;"	e	enum:__anon11
HOSTAPD_ACL_ACCEPT_TIMEOUT	src/ap/ieee802_11_auth.h	/^	HOSTAPD_ACL_ACCEPT_TIMEOUT = 3$/;"	e	enum:__anon11
HOSTAPD_ACL_PENDING	src/ap/ieee802_11_auth.h	/^	HOSTAPD_ACL_PENDING = 2,$/;"	e	enum:__anon11
HOSTAPD_ACL_REJECT	src/ap/ieee802_11_auth.h	/^	HOSTAPD_ACL_REJECT = 0,$/;"	e	enum:__anon11
HOSTAPD_CHAN_DISABLED	src/drivers/driver.h	30;"	d
HOSTAPD_CHAN_HT40	src/drivers/driver.h	36;"	d
HOSTAPD_CHAN_HT40MINUS	src/drivers/driver.h	35;"	d
HOSTAPD_CHAN_HT40PLUS	src/drivers/driver.h	34;"	d
HOSTAPD_CHAN_NO_IBSS	src/drivers/driver.h	32;"	d
HOSTAPD_CHAN_PASSIVE_SCAN	src/drivers/driver.h	31;"	d
HOSTAPD_CHAN_RADAR	src/drivers/driver.h	33;"	d
HOSTAPD_CONFIG_H	src/ap/ap_config.h	16;"	d
HOSTAPD_H	src/ap/hostapd.h	16;"	d
HOSTAPD_LEVEL_DEBUG	src/utils/wpa_debug.h	/^	HOSTAPD_LEVEL_DEBUG = 1,$/;"	e	enum:hostapd_logger_level
HOSTAPD_LEVEL_DEBUG_VERBOSE	src/utils/wpa_debug.h	/^	HOSTAPD_LEVEL_DEBUG_VERBOSE = 0,$/;"	e	enum:hostapd_logger_level
HOSTAPD_LEVEL_INFO	src/utils/wpa_debug.h	/^	HOSTAPD_LEVEL_INFO = 2,$/;"	e	enum:hostapd_logger_level
HOSTAPD_LEVEL_NOTICE	src/utils/wpa_debug.h	/^	HOSTAPD_LEVEL_NOTICE = 3,$/;"	e	enum:hostapd_logger_level
HOSTAPD_LEVEL_WARNING	src/utils/wpa_debug.h	/^	HOSTAPD_LEVEL_WARNING = 4$/;"	e	enum:hostapd_logger_level
HOSTAPD_MAX_SSID_LEN	src/ap/ap_config.h	37;"	d
HOSTAPD_MODE_FLAG_HT_INFO_KNOWN	src/drivers/driver.h	63;"	d
HOSTAPD_MODE_IEEE80211A	src/common/defs.h	/^	HOSTAPD_MODE_IEEE80211A,$/;"	e	enum:hostapd_hw_mode
HOSTAPD_MODE_IEEE80211B	src/common/defs.h	/^	HOSTAPD_MODE_IEEE80211B,$/;"	e	enum:hostapd_hw_mode
HOSTAPD_MODE_IEEE80211G	src/common/defs.h	/^	HOSTAPD_MODE_IEEE80211G,$/;"	e	enum:hostapd_hw_mode
HOSTAPD_MODULE_DRIVER	src/utils/wpa_debug.h	262;"	d
HOSTAPD_MODULE_IAPP	src/utils/wpa_debug.h	263;"	d
HOSTAPD_MODULE_IEEE80211	src/utils/wpa_debug.h	258;"	d
HOSTAPD_MODULE_IEEE8021X	src/utils/wpa_debug.h	259;"	d
HOSTAPD_MODULE_MLME	src/utils/wpa_debug.h	264;"	d
HOSTAPD_MODULE_RADIUS	src/utils/wpa_debug.h	260;"	d
HOSTAPD_MODULE_WPA	src/utils/wpa_debug.h	261;"	d
HOSTAPD_MTU	src/drivers/driver_hostap.c	41;"	d	file:
HOSTAPD_RATE_BASIC	src/ap/hostapd.h	39;"	d
HOSTAP_ANTSEL_DIVERSITY	src/drivers/driver_hostap.h	/^enum { HOSTAP_ANTSEL_DO_NOT_TOUCH = 0, HOSTAP_ANTSEL_DIVERSITY = 1,$/;"	e	enum:__anon74
HOSTAP_ANTSEL_DO_NOT_TOUCH	src/drivers/driver_hostap.h	/^enum { HOSTAP_ANTSEL_DO_NOT_TOUCH = 0, HOSTAP_ANTSEL_DIVERSITY = 1,$/;"	e	enum:__anon74
HOSTAP_ANTSEL_HIGH	src/drivers/driver_hostap.h	/^       HOSTAP_ANTSEL_LOW = 2, HOSTAP_ANTSEL_HIGH = 3 };$/;"	e	enum:__anon74
HOSTAP_ANTSEL_LOW	src/drivers/driver_hostap.h	/^       HOSTAP_ANTSEL_LOW = 2, HOSTAP_ANTSEL_HIGH = 3 };$/;"	e	enum:__anon74
HOSTAP_CRYPT_ALG_NAME_LEN	src/drivers/driver_hostap.h	156;"	d
HOSTAP_CRYPT_ERR_CARD_CONF_FAILED	src/drivers/driver_hostap.h	214;"	d
HOSTAP_CRYPT_ERR_CRYPT_INIT_FAILED	src/drivers/driver_hostap.h	211;"	d
HOSTAP_CRYPT_ERR_KEY_SET_FAILED	src/drivers/driver_hostap.h	212;"	d
HOSTAP_CRYPT_ERR_TX_KEY_SET_FAILED	src/drivers/driver_hostap.h	213;"	d
HOSTAP_CRYPT_ERR_UNKNOWN_ADDR	src/drivers/driver_hostap.h	210;"	d
HOSTAP_CRYPT_ERR_UNKNOWN_ALG	src/drivers/driver_hostap.h	209;"	d
HOSTAP_CRYPT_FLAG_PERMANENT	src/drivers/driver_hostap.h	207;"	d
HOSTAP_CRYPT_FLAG_SET_TX_KEY	src/drivers/driver_hostap.h	206;"	d
HOSTAP_DRIVER_H	src/drivers/driver_hostap.h	16;"	d
HTTPREAD_BODYBUF_DELTA	src/wps/httpread.c	51;"	d	file:
HTTPREAD_EVENT_ERROR	src/wps/httpread.h	/^	HTTPREAD_EVENT_ERROR = 3      \/* misc. error, esp malloc error *\/$/;"	e	enum:httpread_event
HTTPREAD_EVENT_FILE_READY	src/wps/httpread.h	/^	HTTPREAD_EVENT_FILE_READY = 1,        \/* including reply ready *\/$/;"	e	enum:httpread_event
HTTPREAD_EVENT_TIMEOUT	src/wps/httpread.h	/^	HTTPREAD_EVENT_TIMEOUT = 2,$/;"	e	enum:httpread_event
HTTPREAD_H	src/wps/httpread.h	17;"	d
HTTPREAD_HDR_TYPE_CONNECT	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_CONNECT = 8,      \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_DELETE	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_DELETE = 6,       \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_GET	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_GET = 2,          \/* hdr begins with GET<sp> *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_HEAD	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_HEAD = 3,         \/* hdr begins with HEAD<sp> *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_M_POST	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_M_POST = 11,      \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_M_SEARCH	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_M_SEARCH = 10,    \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_NOTIFY	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_NOTIFY = 9,       \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_POST	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_POST = 4,         \/* hdr begins with POST<sp> *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_PUT	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_PUT = 5,          \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_REPLY	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_REPLY = 1,        \/* hdr begins w\/ HTTP\/ *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_SUBSCRIBE	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_SUBSCRIBE = 12,   \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_TRACE	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_TRACE = 7,        \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_UNKNOWN	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_UNKNOWN = 0,      \/* none of the following *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HDR_TYPE_UNSUBSCRIBE	src/wps/httpread.h	/^	HTTPREAD_HDR_TYPE_UNSUBSCRIBE = 13, \/* hdr begins with ... *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_HEADER_MAX_SIZE	src/wps/httpread.c	50;"	d	file:
HTTPREAD_N_HDR_TYPES	src/wps/httpread.h	/^	HTTPREAD_N_HDR_TYPES    \/* keep last *\/$/;"	e	enum:httpread_hdr_type
HTTPREAD_READBUF_SIZE	src/wps/httpread.c	49;"	d	file:
HTTP_BAD_REQUEST	src/wps/http.h	/^	HTTP_BAD_REQUEST = 400,$/;"	e	enum:http_reply_code
HTTP_CLIENT_FAILED	src/wps/http_client.h	/^	HTTP_CLIENT_FAILED,$/;"	e	enum:http_client_event
HTTP_CLIENT_H	src/wps/http_client.h	16;"	d
HTTP_CLIENT_INVALID_REPLY	src/wps/http_client.h	/^	HTTP_CLIENT_INVALID_REPLY,$/;"	e	enum:http_client_event
HTTP_CLIENT_OK	src/wps/http_client.h	/^	HTTP_CLIENT_OK,$/;"	e	enum:http_client_event
HTTP_CLIENT_TIMEOUT	src/wps/http_client.h	/^	HTTP_CLIENT_TIMEOUT,$/;"	e	enum:http_client_event
HTTP_CLIENT_TIMEOUT_SEC	src/wps/http_client.c	24;"	d	file:
HTTP_H	src/wps/http.h	12;"	d
HTTP_INTERNAL_SERVER_ERROR	src/wps/http.h	/^	HTTP_INTERNAL_SERVER_ERROR = 500,$/;"	e	enum:http_reply_code
HTTP_NOT_FOUND	src/wps/http.h	/^	HTTP_NOT_FOUND = 404,$/;"	e	enum:http_reply_code
HTTP_OK	src/wps/http.h	/^	HTTP_OK = 200,$/;"	e	enum:http_reply_code
HTTP_PRECONDITION_FAILED	src/wps/http.h	/^	HTTP_PRECONDITION_FAILED = 412,$/;"	e	enum:http_reply_code
HTTP_SERVER_H	src/wps/http_server.h	16;"	d
HTTP_SERVER_MAX_CONNECTIONS	src/wps/http_server.c	25;"	d	file:
HTTP_SERVER_MAX_REQ_LEN	src/wps/http_server.c	24;"	d	file:
HTTP_SERVER_TIMEOUT	src/wps/http_server.c	23;"	d	file:
HTTP_UNIMPLEMENTED	src/wps/http.h	/^	HTTP_UNIMPLEMENTED = 501,$/;"	e	enum:http_reply_code
HT_CAP_INFO_40MHZ_INTOLERANT	src/common/ieee802_11_defs.h	567;"	d
HT_CAP_INFO_DELAYED_BA	src/common/ieee802_11_defs.h	563;"	d
HT_CAP_INFO_DSSS_CCK40MHZ	src/common/ieee802_11_defs.h	565;"	d
HT_CAP_INFO_GREEN_FIELD	src/common/ieee802_11_defs.h	555;"	d
HT_CAP_INFO_LDPC_CODING_CAP	src/common/ieee802_11_defs.h	549;"	d
HT_CAP_INFO_LSIG_TXOP_PROTECT_SUPPORT	src/common/ieee802_11_defs.h	568;"	d
HT_CAP_INFO_MAX_AMSDU_SIZE	src/common/ieee802_11_defs.h	564;"	d
HT_CAP_INFO_PSMP_SUPP	src/common/ieee802_11_defs.h	566;"	d
HT_CAP_INFO_RX_STBC_1	src/common/ieee802_11_defs.h	560;"	d
HT_CAP_INFO_RX_STBC_12	src/common/ieee802_11_defs.h	561;"	d
HT_CAP_INFO_RX_STBC_123	src/common/ieee802_11_defs.h	562;"	d
HT_CAP_INFO_RX_STBC_MASK	src/common/ieee802_11_defs.h	559;"	d
HT_CAP_INFO_SHORT_GI20MHZ	src/common/ieee802_11_defs.h	556;"	d
HT_CAP_INFO_SHORT_GI40MHZ	src/common/ieee802_11_defs.h	557;"	d
HT_CAP_INFO_SMPS_DISABLED	src/common/ieee802_11_defs.h	554;"	d
HT_CAP_INFO_SMPS_DYNAMIC	src/common/ieee802_11_defs.h	553;"	d
HT_CAP_INFO_SMPS_MASK	src/common/ieee802_11_defs.h	551;"	d
HT_CAP_INFO_SMPS_STATIC	src/common/ieee802_11_defs.h	552;"	d
HT_CAP_INFO_SUPP_CHANNEL_WIDTH_SET	src/common/ieee802_11_defs.h	550;"	d
HT_CAP_INFO_TX_STBC	src/common/ieee802_11_defs.h	558;"	d
HT_INFO_HT_PARAM_CTRL_ACCESS_ONLY	src/common/ieee802_11_defs.h	611;"	d
HT_INFO_HT_PARAM_REC_TRANS_CHNL_WIDTH	src/common/ieee802_11_defs.h	609;"	d
HT_INFO_HT_PARAM_RIFS_MODE	src/common/ieee802_11_defs.h	610;"	d
HT_INFO_HT_PARAM_SECONDARY_CHNL_ABOVE	src/common/ieee802_11_defs.h	607;"	d
HT_INFO_HT_PARAM_SECONDARY_CHNL_BELOW	src/common/ieee802_11_defs.h	608;"	d
HT_INFO_HT_PARAM_SECONDARY_CHNL_OFF_MASK	src/common/ieee802_11_defs.h	606;"	d
HT_INFO_HT_PARAM_SRV_INTERVAL_GRANULARITY	src/common/ieee802_11_defs.h	612;"	d
HT_INFO_OPERATION_MODE_NON_GF_DEVS_PRESENT	src/common/ieee802_11_defs.h	623;"	d
HT_INFO_OPERATION_MODE_NON_HT_STA_PRESENT	src/common/ieee802_11_defs.h	625;"	d
HT_INFO_OPERATION_MODE_OP_MODE_MASK	src/common/ieee802_11_defs.h	620;"	d
HT_INFO_OPERATION_MODE_OP_MODE_OFFSET	src/common/ieee802_11_defs.h	622;"	d
HT_INFO_OPERATION_MODE_TRANSMIT_BURST_LIMIT	src/common/ieee802_11_defs.h	624;"	d
HT_INFO_STBC_PARAM_DUAL_BEACON	src/common/ieee802_11_defs.h	627;"	d
HT_INFO_STBC_PARAM_DUAL_STBC_PROTECT	src/common/ieee802_11_defs.h	628;"	d
HT_INFO_STBC_PARAM_LSIG_TXOP_PROTECT_ALLOWED	src/common/ieee802_11_defs.h	630;"	d
HT_INFO_STBC_PARAM_PCO_ACTIVE	src/common/ieee802_11_defs.h	631;"	d
HT_INFO_STBC_PARAM_PCO_PHASE	src/common/ieee802_11_defs.h	632;"	d
HT_INFO_STBC_PARAM_SECONDARY_BCN	src/common/ieee802_11_defs.h	629;"	d
HW_FEATURES_H	src/ap/hw_features.h	17;"	d
H_Final	src/eap_common/eap_pwd_common.c	/^void H_Final(HMAC_CTX *ctx, u8 *digest)$/;"	f	signature:(HMAC_CTX *ctx, u8 *digest)
H_Final	src/eap_common/eap_pwd_common.h	/^void H_Final(HMAC_CTX *, u8 *);$/;"	p	signature:(HMAC_CTX *, u8 *)
H_Init	src/eap_common/eap_pwd_common.c	/^void H_Init(HMAC_CTX *ctx)$/;"	f	signature:(HMAC_CTX *ctx)
H_Init	src/eap_common/eap_pwd_common.h	/^void H_Init(HMAC_CTX *);$/;"	p	signature:(HMAC_CTX *)
H_Update	src/eap_common/eap_pwd_common.c	/^void H_Update(HMAC_CTX *ctx, const u8 *data, int len)$/;"	f	signature:(HMAC_CTX *ctx, const u8 *data, int len)
H_Update	src/eap_common/eap_pwd_common.h	/^void H_Update(HMAC_CTX *, const u8 *, int);$/;"	p	signature:(HMAC_CTX *, const u8 *, int)
HighPart	src/drivers/driver_ralink.h	/^        LONG HighPart;$/;"	m	struct:_LARGE_INTEGER::__anon88	access:public
HighPart	src/drivers/driver_ralink.h	/^        LONG HighPart;$/;"	m	struct:_LARGE_INTEGER::__anon89	access:public
HopPattern	src/drivers/driver_ndis.c	/^	ULONG HopPattern;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
HopPattern	src/drivers/driver_ralink.h	/^   ULONG           HopPattern;        \/\/ As defined by 802.11, MSB set $/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
HopSet	src/drivers/driver_ndis.c	/^	ULONG HopSet;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
HopSet	src/drivers/driver_ralink.h	/^   ULONG           HopSet;            \/\/ to one if non-802.11$/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
IAPP_CACHE_STALE_CACHE	src/ap/iapp.c	/^	IAPP_CACHE_STALE_CACHE = 1,$/;"	e	enum:__anon10	file:
IAPP_CACHE_SUCCESSFUL	src/ap/iapp.c	/^	IAPP_CACHE_SUCCESSFUL = 0,$/;"	e	enum:__anon10	file:
IAPP_CMD_ACK_Security_Block	src/ap/iapp.c	/^	IAPP_CMD_ACK_Security_Block = 4,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_CMD_ADD_notify	src/ap/iapp.c	/^	IAPP_CMD_ADD_notify = 0,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_CMD_CACHE_notify	src/ap/iapp.c	/^	IAPP_CMD_CACHE_notify = 5,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_CMD_CACHE_response	src/ap/iapp.c	/^	IAPP_CMD_CACHE_response = 6,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_CMD_MOVE_notify	src/ap/iapp.c	/^	IAPP_CMD_MOVE_notify = 1,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_CMD_MOVE_response	src/ap/iapp.c	/^	IAPP_CMD_MOVE_response = 2,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_CMD_Send_Security_Block	src/ap/iapp.c	/^	IAPP_CMD_Send_Security_Block = 3,$/;"	e	enum:IAPP_COMMAND	file:
IAPP_COMMAND	src/ap/iapp.c	/^enum IAPP_COMMAND {$/;"	g	file:
IAPP_H	src/ap/iapp.h	16;"	d
IAPP_MOVE_DENIED	src/ap/iapp.c	/^	IAPP_MOVE_DENIED = 1,$/;"	e	enum:__anon9	file:
IAPP_MOVE_STALE_MOVE	src/ap/iapp.c	/^	IAPP_MOVE_STALE_MOVE = 2,$/;"	e	enum:__anon9	file:
IAPP_MOVE_SUCCESSFUL	src/ap/iapp.c	/^	IAPP_MOVE_SUCCESSFUL = 0,$/;"	e	enum:__anon9	file:
IAPP_MULTICAST	src/ap/iapp.c	59;"	d	file:
IAPP_TCP_PORT	src/ap/iapp.c	61;"	d	file:
IAPP_UDP_PORT	src/ap/iapp.c	60;"	d	file:
IAPP_VERSION	src/ap/iapp.c	71;"	d	file:
IDENTITY	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
IDENTITY	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
IDENTITY	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
ID_DER_ASN1_DN	src/eap_common/ikev2_common.h	/^	ID_DER_ASN1_DN = 9,$/;"	e	enum:__anon121
ID_DER_ASN1_GN	src/eap_common/ikev2_common.h	/^	ID_DER_ASN1_GN= 10,$/;"	e	enum:__anon121
ID_FQDN	src/eap_common/ikev2_common.h	/^	ID_FQDN = 2,$/;"	e	enum:__anon121
ID_IPV4_ADDR	src/eap_common/ikev2_common.h	/^	ID_IPV4_ADDR = 1,$/;"	e	enum:__anon121
ID_IPV6_ADDR	src/eap_common/ikev2_common.h	/^	ID_IPV6_ADDR = 5,$/;"	e	enum:__anon121
ID_KEY_ID	src/eap_common/ikev2_common.h	/^	ID_KEY_ID = 11$/;"	e	enum:__anon121
ID_RFC822_ADDR	src/eap_common/ikev2_common.h	/^	ID_RFC822_ADDR = 3,$/;"	e	enum:__anon121
IDi	src/eap_peer/ikev2.h	/^	u8 *IDi;$/;"	m	struct:ikev2_responder_data	access:public
IDi	src/eap_server/ikev2.h	/^	u8 *IDi;$/;"	m	struct:ikev2_initiator_data	access:public
IDi_len	src/eap_peer/ikev2.h	/^	size_t IDi_len;$/;"	m	struct:ikev2_responder_data	access:public
IDi_len	src/eap_server/ikev2.h	/^	size_t IDi_len;$/;"	m	struct:ikev2_initiator_data	access:public
IDi_type	src/eap_peer/ikev2.h	/^	u8 IDi_type;$/;"	m	struct:ikev2_responder_data	access:public
IDr	src/eap_peer/ikev2.h	/^	u8 *IDr;$/;"	m	struct:ikev2_responder_data	access:public
IDr	src/eap_server/ikev2.h	/^	u8 *IDr;$/;"	m	struct:ikev2_initiator_data	access:public
IDr_len	src/eap_peer/ikev2.h	/^	size_t IDr_len;$/;"	m	struct:ikev2_responder_data	access:public
IDr_len	src/eap_server/ikev2.h	/^	size_t IDr_len;$/;"	m	struct:ikev2_initiator_data	access:public
IDr_type	src/eap_server/ikev2.h	/^	u8 IDr_type;$/;"	m	struct:ikev2_initiator_data	access:public
IEEE80211RADIOTAP_H	src/utils/radiotap.h	39;"	d
IEEE80211_BSSID_FROMDS	src/common/ieee802_11_defs.h	386;"	d
IEEE80211_CAP_ESS	src/drivers/driver.h	117;"	d
IEEE80211_CAP_IBSS	src/drivers/driver.h	118;"	d
IEEE80211_CAP_PRIVACY	src/drivers/driver.h	119;"	d
IEEE80211_CHAN_2GHZ	src/utils/radiotap.h	208;"	d
IEEE80211_CHAN_5GHZ	src/utils/radiotap.h	209;"	d
IEEE80211_CHAN_CCK	src/utils/radiotap.h	206;"	d
IEEE80211_CHAN_DYN	src/utils/radiotap.h	211;"	d
IEEE80211_CHAN_GFSK	src/utils/radiotap.h	212;"	d
IEEE80211_CHAN_OFDM	src/utils/radiotap.h	207;"	d
IEEE80211_CHAN_PASSIVE	src/utils/radiotap.h	210;"	d
IEEE80211_CHAN_TURBO	src/utils/radiotap.h	205;"	d
IEEE80211_CIPHER_AES_CCM	src/drivers/driver_bsd.c	1384;"	d	file:
IEEE80211_CIPHER_AES_CCM	src/drivers/driver_bsd.c	1422;"	d	file:
IEEE80211_CIPHER_TKIP	src/drivers/driver_bsd.c	1383;"	d	file:
IEEE80211_CIPHER_TKIP	src/drivers/driver_bsd.c	1421;"	d	file:
IEEE80211_CIPHER_WEP	src/drivers/driver_bsd.c	1382;"	d	file:
IEEE80211_CIPHER_WEP	src/drivers/driver_bsd.c	1420;"	d	file:
IEEE80211_CRYPTO_AES_CCM	src/drivers/driver_bsd.c	1387;"	d	file:
IEEE80211_CRYPTO_AES_CCM	src/drivers/driver_bsd.c	1425;"	d	file:
IEEE80211_CRYPTO_TKIP	src/drivers/driver_bsd.c	1386;"	d	file:
IEEE80211_CRYPTO_TKIP	src/drivers/driver_bsd.c	1424;"	d	file:
IEEE80211_CRYPTO_WEP	src/drivers/driver_bsd.c	1385;"	d	file:
IEEE80211_CRYPTO_WEP	src/drivers/driver_bsd.c	1423;"	d	file:
IEEE80211_C_HOSTAP	src/drivers/driver_bsd.c	1388;"	d	file:
IEEE80211_C_HOSTAP	src/drivers/driver_bsd.c	1426;"	d	file:
IEEE80211_C_WPA1	src/drivers/driver_bsd.c	1389;"	d	file:
IEEE80211_C_WPA1	src/drivers/driver_bsd.c	1427;"	d	file:
IEEE80211_C_WPA2	src/drivers/driver_bsd.c	1390;"	d	file:
IEEE80211_C_WPA2	src/drivers/driver_bsd.c	1428;"	d	file:
IEEE80211_DA_FROMDS	src/common/ieee802_11_defs.h	385;"	d
IEEE80211_FC	src/common/ieee802_11_defs.h	391;"	d
IEEE80211_HDRLEN	src/common/ieee802_11_defs.h	389;"	d
IEEE80211_MAX_SUPP_RATES	src/rsn_supp/tdls.c	91;"	d	file:
IEEE80211_MODE_AP	src/drivers/driver.h	115;"	d
IEEE80211_MODE_IBSS	src/drivers/driver.h	114;"	d
IEEE80211_MODE_INFRA	src/drivers/driver.h	113;"	d
IEEE80211_RADIOTAP_ANTENNA	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_ANTENNA = 11,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_CHANNEL	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_CHANNEL = 3,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DATA_RETRIES	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DATA_RETRIES = 17,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTNOISE	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTNOISE = 6,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTSIGNAL	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTSIGNAL = 5,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_TX_POWER	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_TX_POWER = 10,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTNOISE	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTNOISE = 13,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTSIGNAL	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTSIGNAL = 12,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_TX_ATTENUATION	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_DB_TX_ATTENUATION = 9,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_EXT	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_EXT = 31$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FHSS	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_FHSS = 4,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FLAGS	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_FLAGS = 1,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_F_CFP	src/utils/radiotap.h	215;"	d
IEEE80211_RADIOTAP_F_DATAPAD	src/utils/radiotap.h	229;"	d
IEEE80211_RADIOTAP_F_FCS	src/utils/radiotap.h	228;"	d
IEEE80211_RADIOTAP_F_FRAG	src/utils/radiotap.h	225;"	d
IEEE80211_RADIOTAP_F_RX_BADFCS	src/utils/radiotap.h	234;"	d
IEEE80211_RADIOTAP_F_SHORTPRE	src/utils/radiotap.h	218;"	d
IEEE80211_RADIOTAP_F_TX_CTS	src/utils/radiotap.h	239;"	d
IEEE80211_RADIOTAP_F_TX_FAIL	src/utils/radiotap.h	237;"	d
IEEE80211_RADIOTAP_F_TX_RTS	src/utils/radiotap.h	240;"	d
IEEE80211_RADIOTAP_F_WEP	src/utils/radiotap.h	222;"	d
IEEE80211_RADIOTAP_LOCK_QUALITY	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_LOCK_QUALITY = 7,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RATE	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_RATE = 2,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RTS_RETRIES	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_RTS_RETRIES = 16,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RX_FLAGS	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_RX_FLAGS = 14,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TSFT	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_TSFT = 0,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_ATTENUATION	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_TX_ATTENUATION = 8,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_FLAGS	src/utils/radiotap.h	/^	IEEE80211_RADIOTAP_TX_FLAGS = 15,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_SA_FROMDS	src/common/ieee802_11_defs.h	387;"	d
IEEE80211_TX_QUEUE_DATA0	hostapd/config_file.c	/^	IEEE80211_TX_QUEUE_DATA0 = 0, \/* used for EDCA AC_VO data *\/$/;"	e	enum:__anon1	file:
IEEE80211_TX_QUEUE_DATA1	hostapd/config_file.c	/^	IEEE80211_TX_QUEUE_DATA1 = 1, \/* used for EDCA AC_VI data *\/$/;"	e	enum:__anon1	file:
IEEE80211_TX_QUEUE_DATA2	hostapd/config_file.c	/^	IEEE80211_TX_QUEUE_DATA2 = 2, \/* used for EDCA AC_BE data *\/$/;"	e	enum:__anon1	file:
IEEE80211_TX_QUEUE_DATA3	hostapd/config_file.c	/^	IEEE80211_TX_QUEUE_DATA3 = 3 \/* used for EDCA AC_BK data *\/$/;"	e	enum:__anon1	file:
IEEE8021X_EAPOL	src/utils/build_config.h	30;"	d
IEEE8021X_EAPOL	src/utils/build_config.h	65;"	d
IEEE8021X_EAPOL	src/utils/build_config.h	81;"	d
IEEE8021X_ENCR_KEY_LEN	src/eapol_supp/eapol_supp_sm.c	644;"	d	file:
IEEE8021X_KEY_INDEX_FLAG	src/eapol_supp/eapol_supp_sm.c	152;"	d	file:
IEEE8021X_KEY_INDEX_MASK	src/eapol_supp/eapol_supp_sm.c	153;"	d	file:
IEEE8021X_KEY_IV_LEN	src/eapol_supp/eapol_supp_sm.c	150;"	d	file:
IEEE8021X_KEY_SIGN_LEN	src/eapol_supp/eapol_supp_sm.c	149;"	d	file:
IEEE8021X_REPLAY_COUNTER_LEN	src/eapol_supp/eapol_supp_sm.c	148;"	d	file:
IEEE8021X_SIGN_KEY_LEN	src/eapol_supp/eapol_supp_sm.c	645;"	d	file:
IEEE802_11_AUTH_H	src/ap/ieee802_11_auth.h	16;"	d
IEEE802_11_COMMON_H	src/common/ieee802_11_common.h	16;"	d
IEEE802_11_DEFS_H	src/common/ieee802_11_defs.h	17;"	d
IEEE802_11_H	src/ap/ieee802_11.h	16;"	d
IEEE802_1X_H	src/ap/ieee802_1x.h	16;"	d
IEEE802_1X_TYPE_EAPOL_ENCAPSULATED_ASF_ALERT	src/common/eapol_common.h	/^       IEEE802_1X_TYPE_EAPOL_ENCAPSULATED_ASF_ALERT = 4$/;"	e	enum:__anon60
IEEE802_1X_TYPE_EAPOL_KEY	src/common/eapol_common.h	/^       IEEE802_1X_TYPE_EAPOL_KEY = 3,$/;"	e	enum:__anon60
IEEE802_1X_TYPE_EAPOL_LOGOFF	src/common/eapol_common.h	/^       IEEE802_1X_TYPE_EAPOL_LOGOFF = 2,$/;"	e	enum:__anon60
IEEE802_1X_TYPE_EAPOL_START	src/common/eapol_common.h	/^       IEEE802_1X_TYPE_EAPOL_START = 1,$/;"	e	enum:__anon60
IEEE802_1X_TYPE_EAP_PACKET	src/common/eapol_common.h	/^enum { IEEE802_1X_TYPE_EAP_PACKET = 0,$/;"	e	enum:__anon60
IELength	src/drivers/driver_ndis.c	/^	ULONG IELength;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
IELength	src/drivers/driver_ralink.h	/^    ULONG                               IELength;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
IEs	src/drivers/driver_ndis.c	/^	UCHAR IEs[1];$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
IEs	src/drivers/driver_ralink.h	/^    UCHAR                               IEs[1];$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
IFF_DORMANT	src/drivers/driver_nl80211.c	157;"	d	file:
IFF_DORMANT	src/drivers/priv_netlink.h	27;"	d
IFF_LOWER_UP	src/drivers/driver_nl80211.c	154;"	d	file:
IFF_LOWER_UP	src/drivers/priv_netlink.h	24;"	d
IFLA_IFNAME	src/drivers/priv_netlink.h	31;"	d
IFLA_LINKMODE	src/drivers/priv_netlink.h	40;"	d
IFLA_OPERSTATE	src/drivers/priv_netlink.h	37;"	d
IFLA_WIRELESS	src/drivers/priv_netlink.h	34;"	d
IFNAMSIZ	src/utils/common.h	331;"	d
IF_OPER_DORMANT	src/drivers/driver_nl80211.c	161;"	d	file:
IF_OPER_DORMANT	src/drivers/priv_netlink.h	41;"	d
IF_OPER_UP	src/drivers/driver_nl80211.c	164;"	d	file:
IF_OPER_UP	src/drivers/priv_netlink.h	42;"	d
IF_TNCCS_END	src/eap_peer/tncc.c	43;"	d	file:
IF_TNCCS_END	src/eap_server/tncs.c	36;"	d	file:
IF_TNCCS_START	src/eap_peer/tncc.c	36;"	d	file:
IF_TNCCS_START	src/eap_server/tncs.c	29;"	d	file:
IGTK	src/ap/wpa_auth_i.h	/^	u8 IGTK[2][WPA_IGTK_LEN];$/;"	m	struct:wpa_group	access:public
IKEV2_COMMON_H	src/eap_common/ikev2_common.h	16;"	d
IKEV2_DONE	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
IKEV2_DONE	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
IKEV2_FAILED	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
IKEV2_FLAGS_ICV_INCLUDED	src/eap_common/eap_ikev2_common.h	22;"	d
IKEV2_FLAGS_ICV_INCLUDED	src/eap_common/eap_ikev2_common.h	26;"	d
IKEV2_FLAGS_LENGTH_INCLUDED	src/eap_common/eap_ikev2_common.h	20;"	d
IKEV2_FLAGS_LENGTH_INCLUDED	src/eap_common/eap_ikev2_common.h	24;"	d
IKEV2_FLAGS_MORE_FRAGMENTS	src/eap_common/eap_ikev2_common.h	21;"	d
IKEV2_FLAGS_MORE_FRAGMENTS	src/eap_common/eap_ikev2_common.h	25;"	d
IKEV2_FRAGMENT_SIZE	src/eap_common/eap_ikev2_common.h	29;"	d
IKEV2_H	src/eap_peer/ikev2.h	16;"	d
IKEV2_H	src/eap_server/ikev2.h	16;"	d
IKEV2_HDR_INITIATOR	src/eap_common/ikev2_common.h	97;"	d
IKEV2_HDR_RESPONSE	src/eap_common/ikev2_common.h	99;"	d
IKEV2_HDR_VERSION	src/eap_common/ikev2_common.h	98;"	d
IKEV2_MAX_HASH_LEN	src/eap_common/ikev2_common.h	260;"	d
IKEV2_MjVer	src/eap_common/ikev2_common.h	77;"	d
IKEV2_MnVer	src/eap_common/ikev2_common.h	78;"	d
IKEV2_NONCE_MAX_LEN	src/eap_common/ikev2_common.h	23;"	d
IKEV2_NONCE_MIN_LEN	src/eap_common/ikev2_common.h	22;"	d
IKEV2_PAYLOAD_AUTHENTICATION	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_AUTHENTICATION = 39,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_CERTIFICATE	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_CERTIFICATE = 37,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_CERT_REQ	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_CERT_REQ = 38,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_ENCRYPTED	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_ENCRYPTED = 46,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_FLAGS_CRITICAL	src/eap_common/ikev2_common.h	102;"	d
IKEV2_PAYLOAD_IDi	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_IDi = 35,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_IDr	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_IDr = 36,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_KEY_EXCHANGE	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_KEY_EXCHANGE = 34,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_NEXT_FAST_ID	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_NEXT_FAST_ID = 121$/;"	e	enum:__anon114
IKEV2_PAYLOAD_NONCE	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_NONCE = 40,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_NOTIFICATION	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_NOTIFICATION = 41,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_NO_NEXT_PAYLOAD	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_NO_NEXT_PAYLOAD = 0,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_SA	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_SA = 33,$/;"	e	enum:__anon114
IKEV2_PAYLOAD_VENDOD_ID	src/eap_common/ikev2_common.h	/^	IKEV2_PAYLOAD_VENDOD_ID = 43,$/;"	e	enum:__anon114
IKEV2_PROTOCOL_AH	src/eap_common/ikev2_common.h	/^	IKEV2_PROTOCOL_AH = 2,$/;"	e	enum:__anon115
IKEV2_PROTOCOL_ESP	src/eap_common/ikev2_common.h	/^	IKEV2_PROTOCOL_ESP = 3$/;"	e	enum:__anon115
IKEV2_PROTOCOL_IKE	src/eap_common/ikev2_common.h	/^	IKEV2_PROTOCOL_IKE = 1, \/* IKE is the only one allowed for EAP-IKEv2 *\/$/;"	e	enum:__anon115
IKEV2_PROTOCOL_RESERVED	src/eap_common/ikev2_common.h	/^	IKEV2_PROTOCOL_RESERVED = 0,$/;"	e	enum:__anon115
IKEV2_SPI_LEN	src/eap_common/ikev2_common.h	30;"	d
IKEV2_TRANSFORM_DH	src/eap_common/ikev2_common.h	/^	IKEV2_TRANSFORM_DH = 4,$/;"	e	enum:__anon116
IKEV2_TRANSFORM_ENCR	src/eap_common/ikev2_common.h	/^	IKEV2_TRANSFORM_ENCR = 1,$/;"	e	enum:__anon116
IKEV2_TRANSFORM_ESN	src/eap_common/ikev2_common.h	/^	IKEV2_TRANSFORM_ESN = 5$/;"	e	enum:__anon116
IKEV2_TRANSFORM_INTEG	src/eap_common/ikev2_common.h	/^	IKEV2_TRANSFORM_INTEG = 3,$/;"	e	enum:__anon116
IKEV2_TRANSFORM_PRF	src/eap_common/ikev2_common.h	/^	IKEV2_TRANSFORM_PRF = 2,$/;"	e	enum:__anon116
IKEV2_VERSION	src/eap_common/ikev2_common.h	80;"	d
IKEV2_VERSION	src/eap_common/ikev2_common.h	82;"	d
IKE_SA_AUTH	src/eap_common/ikev2_common.h	/^	IKE_SA_AUTH = 35,$/;"	e	enum:__anon113
IKE_SA_INIT	src/eap_common/ikev2_common.h	/^	IKE_SA_INIT = 34,$/;"	e	enum:__anon113
IK_LEN	src/utils/pcsc_funcs.c	86;"	d	file:
IMV_Action_Recommendation	src/eap_server/tncs.c	/^enum IMV_Action_Recommendation {$/;"	g	file:
IMV_Evaluation_Result	src/eap_server/tncs.c	/^enum IMV_Evaluation_Result {$/;"	g	file:
INCLUDES	hostapd/Android.mk	/^INCLUDES = $(LOCAL_PATH)$/;"	m
INCLUDES_H	src/utils/includes.h	20;"	d
INFORMATION	src/eap_common/ikev2_common.h	/^	INFORMATION = 37$/;"	e	enum:__anon113
INIT	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	e	enum:eap_vendor_test_data::__anon176	file:
INIT	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
INT	src/drivers/driver_ralink.h	78;"	d
INTERNAL_ADDRESS_FAILURE	src/eap_common/ikev2_common.h	/^	INTERNAL_ADDRESS_FAILURE = 36,$/;"	e	enum:__anon124
INTERWORKING_ANO_ACCESS_NETWORK_MASK	src/common/ieee802_11_defs.h	295;"	d
INTERWORKING_ANO_ASRA	src/common/ieee802_11_defs.h	297;"	d
INTERWORKING_ANO_ESR	src/common/ieee802_11_defs.h	298;"	d
INTERWORKING_ANO_INTERNET	src/common/ieee802_11_defs.h	296;"	d
INTERWORKING_ANO_UESA	src/common/ieee802_11_defs.h	299;"	d
INTERWORKING_ANT_CHARGEABLE_PUBLIC	src/common/ieee802_11_defs.h	303;"	d
INTERWORKING_ANT_EMERGENCY_SERVICES	src/common/ieee802_11_defs.h	306;"	d
INTERWORKING_ANT_FREE_PUBLIC	src/common/ieee802_11_defs.h	304;"	d
INTERWORKING_ANT_PERSONAL_DEVICE	src/common/ieee802_11_defs.h	305;"	d
INTERWORKING_ANT_PRIVATE	src/common/ieee802_11_defs.h	301;"	d
INTERWORKING_ANT_PRIVATE_WITH_GUEST	src/common/ieee802_11_defs.h	302;"	d
INTERWORKING_ANT_TEST	src/common/ieee802_11_defs.h	307;"	d
INTERWORKING_ANT_WILDCARD	src/common/ieee802_11_defs.h	308;"	d
INTERWORKING_AP	src/common/wpa_ctrl.h	133;"	d
INTERWORKING_NO_MATCH	src/common/wpa_ctrl.h	134;"	d
INTFCTL_ENABLED	src/drivers/driver_ndis.c	2374;"	d	file:
INTFS_KEY_TABLE	src/drivers/driver_ndis.c	/^} INTFS_KEY_TABLE, *PINTFS_KEY_TABLE;$/;"	t	typeref:struct:__anon95	file:
INTF_ALL	src/drivers/driver_ndis.c	2371;"	d	file:
INTF_ALL_FLAGS	src/drivers/driver_ndis.c	2372;"	d	file:
INTF_CTLFLAGS	src/drivers/driver_ndis.c	2373;"	d	file:
INTF_ENTRY	src/drivers/driver_ndis.c	/^} INTF_ENTRY, *PINTF_ENTRY;$/;"	t	typeref:struct:__anon97	file:
INTF_KEY_ENTRY	src/drivers/driver_ndis.c	/^} INTF_KEY_ENTRY, *PINTF_KEY_ENTRY;$/;"	t	typeref:struct:__anon94	file:
INVALID_IKE_SPI	src/eap_common/ikev2_common.h	/^	INVALID_IKE_SPI = 4,$/;"	e	enum:__anon124
INVALID_KE_PAYLOAD	src/eap_common/ikev2_common.h	/^	INVALID_KE_PAYLOAD = 17,$/;"	e	enum:__anon124
INVALID_MAJOR_VERSION	src/eap_common/ikev2_common.h	/^	INVALID_MAJOR_VERSION = 5,$/;"	e	enum:__anon124
INVALID_MESSAGE_ID	src/eap_common/ikev2_common.h	/^	INVALID_MESSAGE_ID = 9,$/;"	e	enum:__anon124
INVALID_SELECTORS	src/eap_common/ikev2_common.h	/^	INVALID_SELECTORS = 39$/;"	e	enum:__anon124
INVALID_SPI	src/eap_common/ikev2_common.h	/^	INVALID_SPI = 11,$/;"	e	enum:__anon124
INVALID_SYNTAX	src/eap_common/ikev2_common.h	/^	INVALID_SYNTAX = 7,$/;"	e	enum:__anon124
IOCTL_NDISUIO_BIND_WAIT	src/drivers/driver_ndis.c	428;"	d	file:
IOCTL_NDISUIO_OPEN_DEVICE	src/drivers/driver_ndis.c	408;"	d	file:
IOCTL_NDISUIO_QUERY_BINDING	src/drivers/driver_ndis.c	424;"	d	file:
IOCTL_NDISUIO_QUERY_OID_VALUE	src/drivers/driver_ndis.c	412;"	d	file:
IOCTL_NDISUIO_SET_ETHER_TYPE	src/drivers/driver_ndis.c	420;"	d	file:
IOCTL_NDISUIO_SET_ETHER_TYPE	src/l2_packet/l2_packet_ndis.c	42;"	d	file:
IOCTL_NDISUIO_SET_OID_VALUE	src/drivers/driver_ndis.c	416;"	d	file:
IP_ADDR_H	src/utils/ip_addr.h	16;"	d
ISOLATE	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
IWEVASSOCREQIE	src/drivers/wireless_copy.h	395;"	d
IWEVASSOCRESPIE	src/drivers/wireless_copy.h	404;"	d
IWEVCUSTOM	src/drivers/wireless_copy.h	383;"	d
IWEVEXPIRED	src/drivers/wireless_copy.h	385;"	d
IWEVFIRST	src/drivers/wireless_copy.h	415;"	d
IWEVGENIE	src/drivers/wireless_copy.h	386;"	d
IWEVMICHAELMICFAILURE	src/drivers/wireless_copy.h	392;"	d
IWEVPMKIDCAND	src/drivers/wireless_copy.h	411;"	d
IWEVQUAL	src/drivers/wireless_copy.h	382;"	d
IWEVREGISTERED	src/drivers/wireless_copy.h	384;"	d
IWEVTXDROP	src/drivers/wireless_copy.h	381;"	d
IW_AUTH_80211_AUTH_ALG	src/drivers/wireless_copy.h	598;"	d
IW_AUTH_ALG_LEAP	src/drivers/wireless_copy.h	627;"	d
IW_AUTH_ALG_OPEN_SYSTEM	src/drivers/wireless_copy.h	625;"	d
IW_AUTH_ALG_SHARED_KEY	src/drivers/wireless_copy.h	626;"	d
IW_AUTH_CIPHER_AES_CMAC	src/drivers/wireless_copy.h	618;"	d
IW_AUTH_CIPHER_CCMP	src/drivers/wireless_copy.h	616;"	d
IW_AUTH_CIPHER_GROUP	src/drivers/wireless_copy.h	594;"	d
IW_AUTH_CIPHER_GROUP_MGMT	src/drivers/wireless_copy.h	603;"	d
IW_AUTH_CIPHER_NONE	src/drivers/wireless_copy.h	613;"	d
IW_AUTH_CIPHER_PAIRWISE	src/drivers/wireless_copy.h	593;"	d
IW_AUTH_CIPHER_TKIP	src/drivers/wireless_copy.h	615;"	d
IW_AUTH_CIPHER_WEP104	src/drivers/wireless_copy.h	617;"	d
IW_AUTH_CIPHER_WEP40	src/drivers/wireless_copy.h	614;"	d
IW_AUTH_DROP_UNENCRYPTED	src/drivers/wireless_copy.h	597;"	d
IW_AUTH_FLAGS	src/drivers/wireless_copy.h	587;"	d
IW_AUTH_INDEX	src/drivers/wireless_copy.h	586;"	d
IW_AUTH_KEY_MGMT	src/drivers/wireless_copy.h	595;"	d
IW_AUTH_KEY_MGMT_802_1X	src/drivers/wireless_copy.h	621;"	d
IW_AUTH_KEY_MGMT_PSK	src/drivers/wireless_copy.h	622;"	d
IW_AUTH_MFP	src/drivers/wireless_copy.h	604;"	d
IW_AUTH_MFP_DISABLED	src/drivers/wireless_copy.h	635;"	d
IW_AUTH_MFP_OPTIONAL	src/drivers/wireless_copy.h	636;"	d
IW_AUTH_MFP_REQUIRED	src/drivers/wireless_copy.h	637;"	d
IW_AUTH_PRIVACY_INVOKED	src/drivers/wireless_copy.h	602;"	d
IW_AUTH_ROAMING_CONTROL	src/drivers/wireless_copy.h	601;"	d
IW_AUTH_ROAMING_DISABLE	src/drivers/wireless_copy.h	631;"	d
IW_AUTH_ROAMING_ENABLE	src/drivers/wireless_copy.h	630;"	d
IW_AUTH_RX_UNENCRYPTED_EAPOL	src/drivers/wireless_copy.h	600;"	d
IW_AUTH_TKIP_COUNTERMEASURES	src/drivers/wireless_copy.h	596;"	d
IW_AUTH_WPA_ENABLED	src/drivers/wireless_copy.h	599;"	d
IW_AUTH_WPA_VERSION	src/drivers/wireless_copy.h	592;"	d
IW_AUTH_WPA_VERSION_DISABLED	src/drivers/wireless_copy.h	607;"	d
IW_AUTH_WPA_VERSION_WPA	src/drivers/wireless_copy.h	608;"	d
IW_AUTH_WPA_VERSION_WPA2	src/drivers/wireless_copy.h	609;"	d
IW_CUSTOM_MAX	src/drivers/wireless_copy.h	574;"	d
IW_ENCODE_ALG_AES_CMAC	src/drivers/wireless_copy.h	647;"	d
IW_ENCODE_ALG_CCMP	src/drivers/wireless_copy.h	645;"	d
IW_ENCODE_ALG_NONE	src/drivers/wireless_copy.h	642;"	d
IW_ENCODE_ALG_PMK	src/drivers/wireless_copy.h	646;"	d
IW_ENCODE_ALG_TKIP	src/drivers/wireless_copy.h	644;"	d
IW_ENCODE_ALG_WEP	src/drivers/wireless_copy.h	643;"	d
IW_ENCODE_DISABLED	src/drivers/wireless_copy.h	505;"	d
IW_ENCODE_ENABLED	src/drivers/wireless_copy.h	506;"	d
IW_ENCODE_EXT_GROUP_KEY	src/drivers/wireless_copy.h	651;"	d
IW_ENCODE_EXT_RX_SEQ_VALID	src/drivers/wireless_copy.h	650;"	d
IW_ENCODE_EXT_SET_TX_KEY	src/drivers/wireless_copy.h	652;"	d
IW_ENCODE_EXT_TX_SEQ_VALID	src/drivers/wireless_copy.h	649;"	d
IW_ENCODE_FLAGS	src/drivers/wireless_copy.h	503;"	d
IW_ENCODE_INDEX	src/drivers/wireless_copy.h	502;"	d
IW_ENCODE_MODE	src/drivers/wireless_copy.h	504;"	d
IW_ENCODE_NOKEY	src/drivers/wireless_copy.h	509;"	d
IW_ENCODE_OPEN	src/drivers/wireless_copy.h	508;"	d
IW_ENCODE_RESTRICTED	src/drivers/wireless_copy.h	507;"	d
IW_ENCODE_SEQ_MAX_SIZE	src/drivers/wireless_copy.h	640;"	d
IW_ENCODE_TEMP	src/drivers/wireless_copy.h	510;"	d
IW_ENCODING_TOKEN_MAX	src/drivers/wireless_copy.h	499;"	d
IW_ENC_CAPA_4WAY_HANDSHAKE	src/drivers/wireless_copy.h	667;"	d
IW_ENC_CAPA_CIPHER_CCMP	src/drivers/wireless_copy.h	666;"	d
IW_ENC_CAPA_CIPHER_TKIP	src/drivers/wireless_copy.h	665;"	d
IW_ENC_CAPA_WPA	src/drivers/wireless_copy.h	663;"	d
IW_ENC_CAPA_WPA2	src/drivers/wireless_copy.h	664;"	d
IW_ESSID_MAX_SIZE	src/drivers/wireless_copy.h	466;"	d
IW_EVENT_CAPA_BASE	src/drivers/wireless_copy.h	672;"	d
IW_EVENT_CAPA_INDEX	src/drivers/wireless_copy.h	675;"	d
IW_EVENT_CAPA_K_0	src/drivers/wireless_copy.h	679;"	d
IW_EVENT_CAPA_K_1	src/drivers/wireless_copy.h	682;"	d
IW_EVENT_CAPA_MASK	src/drivers/wireless_copy.h	676;"	d
IW_EVENT_CAPA_SET	src/drivers/wireless_copy.h	684;"	d
IW_EVENT_CAPA_SET_KERNEL	src/drivers/wireless_copy.h	685;"	d
IW_EVENT_IDX	src/drivers/wireless_copy.h	416;"	d
IW_EV_ADDR_LEN	src/drivers/wireless_copy.h	1138;"	d
IW_EV_ADDR_PK_LEN	src/drivers/wireless_copy.h	1179;"	d
IW_EV_CHAR_LEN	src/drivers/wireless_copy.h	1134;"	d
IW_EV_CHAR_PK_LEN	src/drivers/wireless_copy.h	1175;"	d
IW_EV_COMPAT_ADDR_LEN	src/drivers/wireless_copy.h	1164;"	d
IW_EV_COMPAT_CHAR_LEN	src/drivers/wireless_copy.h	1160;"	d
IW_EV_COMPAT_FREQ_LEN	src/drivers/wireless_copy.h	1162;"	d
IW_EV_COMPAT_LCP_LEN	src/drivers/wireless_copy.h	1156;"	d
IW_EV_COMPAT_PARAM_LEN	src/drivers/wireless_copy.h	1163;"	d
IW_EV_COMPAT_POINT_LEN	src/drivers/wireless_copy.h	1166;"	d
IW_EV_COMPAT_POINT_OFF	src/drivers/wireless_copy.h	1157;"	d
IW_EV_COMPAT_QUAL_LEN	src/drivers/wireless_copy.h	1165;"	d
IW_EV_COMPAT_UINT_LEN	src/drivers/wireless_copy.h	1161;"	d
IW_EV_FREQ_LEN	src/drivers/wireless_copy.h	1136;"	d
IW_EV_FREQ_PK_LEN	src/drivers/wireless_copy.h	1177;"	d
IW_EV_LCP_LEN	src/drivers/wireless_copy.h	1132;"	d
IW_EV_LCP_PK_LEN	src/drivers/wireless_copy.h	1173;"	d
IW_EV_PARAM_LEN	src/drivers/wireless_copy.h	1137;"	d
IW_EV_PARAM_PK_LEN	src/drivers/wireless_copy.h	1178;"	d
IW_EV_POINT_LEN	src/drivers/wireless_copy.h	1146;"	d
IW_EV_POINT_OFF	src/drivers/wireless_copy.h	1144;"	d
IW_EV_POINT_PK_LEN	src/drivers/wireless_copy.h	1181;"	d
IW_EV_QUAL_LEN	src/drivers/wireless_copy.h	1139;"	d
IW_EV_QUAL_PK_LEN	src/drivers/wireless_copy.h	1180;"	d
IW_EV_UINT_LEN	src/drivers/wireless_copy.h	1135;"	d
IW_EV_UINT_PK_LEN	src/drivers/wireless_copy.h	1176;"	d
IW_FREQ_AUTO	src/drivers/wireless_copy.h	491;"	d
IW_FREQ_FIXED	src/drivers/wireless_copy.h	492;"	d
IW_GENERIC_IE_MAX	src/drivers/wireless_copy.h	577;"	d
IW_HANDLER	src/drivers/wireless_copy.h	370;"	d
IW_IOCTL_IDX	src/drivers/wireless_copy.h	369;"	d
IW_IS_GET	src/drivers/wireless_copy.h	375;"	d
IW_IS_SET	src/drivers/wireless_copy.h	374;"	d
IW_MAX_AP	src/drivers/wireless_copy.h	463;"	d
IW_MAX_BITRATES	src/drivers/wireless_copy.h	451;"	d
IW_MAX_ENCODING_SIZES	src/drivers/wireless_copy.h	496;"	d
IW_MAX_FREQUENCIES	src/drivers/wireless_copy.h	445;"	d
IW_MAX_SPY	src/drivers/wireless_copy.h	459;"	d
IW_MAX_TXPOWER	src/drivers/wireless_copy.h	454;"	d
IW_MICFAILURE_COUNT	src/drivers/wireless_copy.h	659;"	d
IW_MICFAILURE_GROUP	src/drivers/wireless_copy.h	656;"	d
IW_MICFAILURE_KEY_ID	src/drivers/wireless_copy.h	655;"	d
IW_MICFAILURE_PAIRWISE	src/drivers/wireless_copy.h	657;"	d
IW_MICFAILURE_STAKEY	src/drivers/wireless_copy.h	658;"	d
IW_MLME_ASSOC	src/drivers/wireless_copy.h	583;"	d
IW_MLME_AUTH	src/drivers/wireless_copy.h	582;"	d
IW_MLME_DEAUTH	src/drivers/wireless_copy.h	580;"	d
IW_MLME_DISASSOC	src/drivers/wireless_copy.h	581;"	d
IW_MODE_ADHOC	src/drivers/wireless_copy.h	470;"	d
IW_MODE_AUTO	src/drivers/wireless_copy.h	469;"	d
IW_MODE_INFRA	src/drivers/wireless_copy.h	471;"	d
IW_MODE_MASTER	src/drivers/wireless_copy.h	472;"	d
IW_MODE_MESH	src/drivers/wireless_copy.h	476;"	d
IW_MODE_MONITOR	src/drivers/wireless_copy.h	475;"	d
IW_MODE_REPEAT	src/drivers/wireless_copy.h	473;"	d
IW_MODE_SECOND	src/drivers/wireless_copy.h	474;"	d
IW_PMKID_CAND_PREAUTH	src/drivers/wireless_copy.h	907;"	d
IW_PMKID_LEN	src/drivers/wireless_copy.h	889;"	d
IW_PMKSA_ADD	src/drivers/wireless_copy.h	885;"	d
IW_PMKSA_FLUSH	src/drivers/wireless_copy.h	887;"	d
IW_PMKSA_REMOVE	src/drivers/wireless_copy.h	886;"	d
IW_POWER_ALL_R	src/drivers/wireless_copy.h	520;"	d
IW_POWER_FORCE_S	src/drivers/wireless_copy.h	521;"	d
IW_POWER_MAX	src/drivers/wireless_copy.h	525;"	d
IW_POWER_MIN	src/drivers/wireless_copy.h	524;"	d
IW_POWER_MODE	src/drivers/wireless_copy.h	517;"	d
IW_POWER_MODIFIER	src/drivers/wireless_copy.h	523;"	d
IW_POWER_MULTICAST_R	src/drivers/wireless_copy.h	519;"	d
IW_POWER_ON	src/drivers/wireless_copy.h	513;"	d
IW_POWER_PERIOD	src/drivers/wireless_copy.h	515;"	d
IW_POWER_RELATIVE	src/drivers/wireless_copy.h	526;"	d
IW_POWER_REPEATER	src/drivers/wireless_copy.h	522;"	d
IW_POWER_TIMEOUT	src/drivers/wireless_copy.h	516;"	d
IW_POWER_TYPE	src/drivers/wireless_copy.h	514;"	d
IW_POWER_UNICAST_R	src/drivers/wireless_copy.h	518;"	d
IW_PRIV_SIZE_FIXED	src/drivers/wireless_copy.h	433;"	d
IW_PRIV_SIZE_MASK	src/drivers/wireless_copy.h	435;"	d
IW_PRIV_TYPE_ADDR	src/drivers/wireless_copy.h	431;"	d
IW_PRIV_TYPE_BYTE	src/drivers/wireless_copy.h	427;"	d
IW_PRIV_TYPE_CHAR	src/drivers/wireless_copy.h	428;"	d
IW_PRIV_TYPE_FLOAT	src/drivers/wireless_copy.h	430;"	d
IW_PRIV_TYPE_INT	src/drivers/wireless_copy.h	429;"	d
IW_PRIV_TYPE_MASK	src/drivers/wireless_copy.h	425;"	d
IW_PRIV_TYPE_NONE	src/drivers/wireless_copy.h	426;"	d
IW_QUAL_ALL_INVALID	src/drivers/wireless_copy.h	488;"	d
IW_QUAL_ALL_UPDATED	src/drivers/wireless_copy.h	482;"	d
IW_QUAL_DBM	src/drivers/wireless_copy.h	483;"	d
IW_QUAL_LEVEL_INVALID	src/drivers/wireless_copy.h	485;"	d
IW_QUAL_LEVEL_UPDATED	src/drivers/wireless_copy.h	480;"	d
IW_QUAL_NOISE_INVALID	src/drivers/wireless_copy.h	486;"	d
IW_QUAL_NOISE_UPDATED	src/drivers/wireless_copy.h	481;"	d
IW_QUAL_QUAL_INVALID	src/drivers/wireless_copy.h	484;"	d
IW_QUAL_QUAL_UPDATED	src/drivers/wireless_copy.h	479;"	d
IW_QUAL_RCPI	src/drivers/wireless_copy.h	487;"	d
IW_RETRY_LIFETIME	src/drivers/wireless_copy.h	539;"	d
IW_RETRY_LIMIT	src/drivers/wireless_copy.h	538;"	d
IW_RETRY_LONG	src/drivers/wireless_copy.h	545;"	d
IW_RETRY_MAX	src/drivers/wireless_copy.h	542;"	d
IW_RETRY_MIN	src/drivers/wireless_copy.h	541;"	d
IW_RETRY_MODIFIER	src/drivers/wireless_copy.h	540;"	d
IW_RETRY_ON	src/drivers/wireless_copy.h	536;"	d
IW_RETRY_RELATIVE	src/drivers/wireless_copy.h	543;"	d
IW_RETRY_SHORT	src/drivers/wireless_copy.h	544;"	d
IW_RETRY_TYPE	src/drivers/wireless_copy.h	537;"	d
IW_SCAN_ALL_ESSID	src/drivers/wireless_copy.h	549;"	d
IW_SCAN_ALL_FREQ	src/drivers/wireless_copy.h	551;"	d
IW_SCAN_ALL_MODE	src/drivers/wireless_copy.h	553;"	d
IW_SCAN_ALL_RATE	src/drivers/wireless_copy.h	555;"	d
IW_SCAN_CAPA_BSSID	src/drivers/wireless_copy.h	566;"	d
IW_SCAN_CAPA_CHANNEL	src/drivers/wireless_copy.h	567;"	d
IW_SCAN_CAPA_ESSID	src/drivers/wireless_copy.h	565;"	d
IW_SCAN_CAPA_MODE	src/drivers/wireless_copy.h	568;"	d
IW_SCAN_CAPA_NONE	src/drivers/wireless_copy.h	564;"	d
IW_SCAN_CAPA_RATE	src/drivers/wireless_copy.h	569;"	d
IW_SCAN_CAPA_TIME	src/drivers/wireless_copy.h	571;"	d
IW_SCAN_CAPA_TYPE	src/drivers/wireless_copy.h	570;"	d
IW_SCAN_DEFAULT	src/drivers/wireless_copy.h	548;"	d
IW_SCAN_MAX_DATA	src/drivers/wireless_copy.h	561;"	d
IW_SCAN_THIS_ESSID	src/drivers/wireless_copy.h	550;"	d
IW_SCAN_THIS_FREQ	src/drivers/wireless_copy.h	552;"	d
IW_SCAN_THIS_MODE	src/drivers/wireless_copy.h	554;"	d
IW_SCAN_THIS_RATE	src/drivers/wireless_copy.h	556;"	d
IW_SCAN_TYPE_ACTIVE	src/drivers/wireless_copy.h	558;"	d
IW_SCAN_TYPE_PASSIVE	src/drivers/wireless_copy.h	559;"	d
IW_TXPOW_DBM	src/drivers/wireless_copy.h	530;"	d
IW_TXPOW_MWATT	src/drivers/wireless_copy.h	531;"	d
IW_TXPOW_RANGE	src/drivers/wireless_copy.h	533;"	d
IW_TXPOW_RELATIVE	src/drivers/wireless_copy.h	532;"	d
IW_TXPOW_TYPE	src/drivers/wireless_copy.h	529;"	d
In	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { Both = 0, In = 1 } ControlledDirection;          \/\/ 受控方向：双向受控、输入受控$/;"	e	enum:__anon65
InfrastructureMode	src/drivers/driver_ndis.c	/^	NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
InfrastructureMode	src/drivers/driver_ralink.h	/^    NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
InfrastructureMode	src/drivers/driver_ralink.h	/^   NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
Init	src/ap/wpa_auth_i.h	/^	Boolean Init;$/;"	m	struct:wpa_state_machine	access:public
Initialize	src/eap_peer/tncc.c	/^	TNC_Result (*Initialize)($/;"	m	struct:tnc_if_imc	file:	access:public
Initialize	src/eap_server/tncs.c	/^	TNC_Result (*Initialize)($/;"	m	struct:tnc_if_imv	file:	access:public
K	src/crypto/sha256-internal.c	/^static const unsigned long K[64] = {$/;"	v	file:
KEY_MGMT_802_1X	src/common/defs.h	/^	KEY_MGMT_802_1X,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_802_1X_NO_WPA	src/common/defs.h	/^	KEY_MGMT_802_1X_NO_WPA,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_802_1X_SHA256	src/common/defs.h	/^	KEY_MGMT_802_1X_SHA256,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_FT_802_1X	src/common/defs.h	/^	KEY_MGMT_FT_802_1X,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_FT_PSK	src/common/defs.h	/^	KEY_MGMT_FT_PSK,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_NONE	src/common/defs.h	/^	KEY_MGMT_NONE,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_PSK	src/common/defs.h	/^	KEY_MGMT_PSK,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_PSK_SHA256	src/common/defs.h	/^	KEY_MGMT_PSK_SHA256,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_WPA_NONE	src/common/defs.h	/^	KEY_MGMT_WPA_NONE,$/;"	e	enum:wpa_key_mgmt
KEY_MGMT_WPS	src/common/defs.h	/^	KEY_MGMT_WPS$/;"	e	enum:wpa_key_mgmt
KEY_RX_KEY_RECEIVE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE } key_rx_state;    \/\/ key接收状态机$/;"	e	enum:eapol_state_machine::__anon70
KEY_RX_KEY_RECEIVE	src/eapol_supp/eapol_supp_sm.c	/^		KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE$/;"	e	enum:eapol_sm::__anon19	file:
KEY_RX_NO_KEY_RECEIVE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE } key_rx_state;    \/\/ key接收状态机$/;"	e	enum:eapol_state_machine::__anon70
KEY_RX_NO_KEY_RECEIVE	src/eapol_supp/eapol_supp_sm.c	/^		KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE$/;"	e	enum:eapol_sm::__anon19	file:
KEY_RX_UNKNOWN	src/eapol_supp/eapol_supp_sm.c	/^		KEY_RX_UNKNOWN = 0,$/;"	e	enum:eapol_sm::__anon19	file:
KEY_RX_state	src/eapol_supp/eapol_supp_sm.c	/^	} KEY_RX_state;$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon19	file:	access:public
KeyIndex	src/drivers/driver_ndis.c	/^	ULONG KeyIndex;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
KeyIndex	src/drivers/driver_ndis.c	/^	ULONG KeyIndex;$/;"	m	struct:NDIS_802_11_REMOVE_KEY	file:	access:public
KeyIndex	src/drivers/driver_ndis.c	/^	ULONG KeyIndex;$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
KeyIndex	src/drivers/driver_ralink.h	/^    UINT                   KeyIndex;           $/;"	m	struct:_NDIS_802_11_REMOVE_KEY	access:public
KeyIndex	src/drivers/driver_ralink.h	/^    UINT           KeyIndex;           $/;"	m	struct:_NDIS_802_11_KEY	access:public
KeyIndex	src/drivers/driver_ralink.h	/^   UINT           KeyIndex;           \/\/ 0 is the per-client key, 1-N are the$/;"	m	struct:_NDIS_802_11_WEP	access:public
KeyLength	src/drivers/driver_ndis.c	/^	ULONG KeyLength;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
KeyLength	src/drivers/driver_ndis.c	/^	ULONG KeyLength;$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
KeyLength	src/drivers/driver_ralink.h	/^    UINT           KeyLength;          \/\/ length of key in bytes$/;"	m	struct:_NDIS_802_11_KEY	access:public
KeyLength	src/drivers/driver_ralink.h	/^   UINT     KeyLength;     \/\/ length of key in bytes$/;"	m	struct:_NDIS_802_11_WEP	access:public
KeyMaterial	src/drivers/driver_ndis.c	/^	UCHAR KeyMaterial[1];$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
KeyMaterial	src/drivers/driver_ndis.c	/^	UCHAR KeyMaterial[1];$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
KeyMaterial	src/drivers/driver_ralink.h	/^    UCHAR           KeyMaterial[1];     \/\/ variable length depending on above field$/;"	m	struct:_NDIS_802_11_KEY	access:public
KeyMaterial	src/drivers/driver_ralink.h	/^   UCHAR     KeyMaterial[1];\/\/ variable length depending on above field$/;"	m	struct:_NDIS_802_11_WEP	access:public
KeyRSC	src/drivers/driver_ndis.c	/^	NDIS_802_11_KEY_RSC KeyRSC;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
KeyRSC	src/drivers/driver_ralink.h	/^    NDIS_802_11_KEY_RSC KeyRSC;$/;"	m	struct:_NDIS_802_11_KEY	access:public
L2_PACKET_H	src/l2_packet/l2_packet.h	22;"	d
LARGE_INTEGER	src/drivers/driver_ralink.h	/^} LARGE_INTEGER;$/;"	t	typeref:union:_LARGE_INTEGER
LAST_MSG_SA_AUTH	src/eap_peer/ikev2.h	/^	enum { LAST_MSG_SA_INIT, LAST_MSG_SA_AUTH } last_msg;$/;"	e	enum:ikev2_responder_data::__anon175
LAST_MSG_SA_INIT	src/eap_peer/ikev2.h	/^	enum { LAST_MSG_SA_INIT, LAST_MSG_SA_AUTH } last_msg;$/;"	e	enum:ikev2_responder_data::__anon175
LEAP_CHALLENGE_LEN	src/eap_peer/eap_leap.c	24;"	d	file:
LEAP_DONE	src/eap_peer/eap_leap.c	/^		LEAP_DONE$/;"	e	enum:eap_leap_data::__anon167	file:
LEAP_KEY_LEN	src/eap_peer/eap_leap.c	26;"	d	file:
LEAP_RESPONSE_LEN	src/eap_peer/eap_leap.c	25;"	d	file:
LEAP_VERSION	src/eap_peer/eap_leap.c	23;"	d	file:
LEAP_WAIT_CHALLENGE	src/eap_peer/eap_leap.c	/^		LEAP_WAIT_CHALLENGE,$/;"	e	enum:eap_leap_data::__anon167	file:
LEAP_WAIT_RESPONSE	src/eap_peer/eap_leap.c	/^		LEAP_WAIT_RESPONSE,$/;"	e	enum:eap_leap_data::__anon167	file:
LEAP_WAIT_SUCCESS	src/eap_peer/eap_leap.c	/^		LEAP_WAIT_SUCCESS,$/;"	e	enum:eap_leap_data::__anon167	file:
LIBS	hostapd/Android.mk	/^LIBS =$/;"	m
LIBS_c	hostapd/Android.mk	/^LIBS_c =$/;"	m
LIBS_h	hostapd/Android.mk	/^LIBS_h =$/;"	m
LIB_OBJS	src/crypto/Makefile	/^LIB_OBJS= \\$/;"	m
LIB_OBJS	src/radius/Makefile	/^LIB_OBJS= \\$/;"	m
LIB_OBJS	src/tls/Makefile	/^LIB_OBJS= \\$/;"	m
LIB_OBJS	src/utils/Makefile	/^LIB_OBJS= \\$/;"	m
LINUX_IOCTL_H	src/drivers/linux_ioctl.h	16;"	d
LIST_H	src/utils/list.h	16;"	d
LOADSYM	src/utils/pcsc_funcs.c	179;"	d	file:
LOADSYM	src/utils/pcsc_funcs.c	196;"	d	file:
LOCAL_CFLAGS	hostapd/Android.mk	/^LOCAL_CFLAGS := $(L_CFLAGS)$/;"	m
LOCAL_C_INCLUDES	hostapd/Android.mk	/^LOCAL_C_INCLUDES := $(INCLUDES)$/;"	m
LOCAL_GO	src/p2p/p2p_i.h	/^	LOCAL_GO,$/;"	e	enum:p2p_go_state
LOCAL_MODULE	hostapd/Android.mk	/^LOCAL_MODULE := hostapd$/;"	m
LOCAL_MODULE	hostapd/Android.mk	/^LOCAL_MODULE := hostapd_cli$/;"	m
LOCAL_MODULE_TAGS	hostapd/Android.mk	/^LOCAL_MODULE_TAGS := debug$/;"	m
LOCAL_MODULE_TAGS	hostapd/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	hostapd/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SHARED_LIBRARIES	hostapd/Android.mk	/^LOCAL_SHARED_LIBRARIES := libc libcutils libcrypto libssl$/;"	m
LOCAL_SHARED_LIBRARIES	hostapd/Android.mk	/^LOCAL_SHARED_LIBRARIES := libc libcutils$/;"	m
LOCAL_SRC_FILES	hostapd/Android.mk	/^LOCAL_SRC_FILES := $(OBJS)$/;"	m
LOCAL_SRC_FILES	hostapd/Android.mk	/^LOCAL_SRC_FILES := $(OBJS_c)$/;"	m
LOCAL_STATIC_LIBRARIES	hostapd/Android.mk	/^LOCAL_STATIC_LIBRARIES := libCustomWifi$/;"	m
LOGGER_DEBUG	src/ap/wpa_auth.h	/^	LOGGER_DEBUG, LOGGER_INFO, LOGGER_WARNING$/;"	e	enum:__anon5
LOGGER_INFO	src/ap/wpa_auth.h	/^	LOGGER_DEBUG, LOGGER_INFO, LOGGER_WARNING$/;"	e	enum:__anon5
LOGGER_WARNING	src/ap/wpa_auth.h	/^	LOGGER_DEBUG, LOGGER_INFO, LOGGER_WARNING$/;"	e	enum:__anon5
LOG_HOSTAPD	src/utils/wpa_debug.c	86;"	d	file:
LONG	src/drivers/driver_ralink.h	94;"	d
LONGLONG	src/drivers/driver_ralink.h	95;"	d
LONG_PREAMBLE	src/ap/ap_config.h	/^		LONG_PREAMBLE = 0,$/;"	e	enum:hostapd_config::__anon4
LPADAPTER	src/drivers/driver_ndis_.c	/^typedef struct _ADAPTER * LPADAPTER;$/;"	t	typeref:struct:_ADAPTER	file:
LTM_NO_NEG_EXP	src/tls/libtommath.c	55;"	d	file:
L_CFLAGS	hostapd/Android.mk	/^L_CFLAGS = -DWPA_IGNORE_CONFIG_ERRORS$/;"	m
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_PMKID	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_REMOVE_KEY	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
Length	src/drivers/driver_ralink.h	/^	ULONG Length;$/;"	m	struct:_NDIS_802_11_PMKID	access:public
Length	src/drivers/driver_ralink.h	/^    UINT                   Length;        \/\/ Length of this structure$/;"	m	struct:_NDIS_802_11_REMOVE_KEY	access:public
Length	src/drivers/driver_ralink.h	/^    UINT           Length;             \/\/ Length of this structure$/;"	m	struct:_NDIS_802_11_KEY	access:public
Length	src/drivers/driver_ralink.h	/^    ULONG                               Length;             \/\/ Length of this structure$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
Length	src/drivers/driver_ralink.h	/^    ULONG                   Length;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
Length	src/drivers/driver_ralink.h	/^   UINT     Length;        \/\/ Length of this structure$/;"	m	struct:_NDIS_802_11_WEP	access:public
Length	src/drivers/driver_ralink.h	/^   ULONG                               Length;     \/\/ Length of this structure$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
Length	src/drivers/driver_ralink.h	/^   ULONG                           Length;             \/\/ Length of structure$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
Length	src/drivers/driver_ralink.h	/^   ULONG           Length;            \/\/ Length of structure$/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
ListenInterval	src/drivers/driver_ndis.c	/^	USHORT ListenInterval;$/;"	m	struct:NDIS_802_11_AI_REQFI	file:	access:public
ListenInterval	src/drivers/driver_ralink.h	/^    USHORT ListenInterval;$/;"	m	struct:_NDIS_802_11_AI_REQFI	access:public
LowPart	src/drivers/driver_ralink.h	/^        ULONG LowPart;$/;"	m	struct:_LARGE_INTEGER::__anon88	access:public
LowPart	src/drivers/driver_ralink.h	/^        ULONG LowPart;$/;"	m	struct:_LARGE_INTEGER::__anon89	access:public
MAC2STR	src/utils/common.h	419;"	d
MACSTR	src/utils/common.h	420;"	d
MAC_ADDR_LEN	src/drivers/driver_ralink.h	122;"	d
MADWIFI_BSD	src/drivers/driver_madwifi.c	41;"	d	file:
MADWIFI_NG	src/drivers/driver_madwifi.c	69;"	d	file:
MAX	src/tls/libtommath.c	64;"	d	file:
MAX_ADDR_PER_SUBSCRIPTION	src/wps/wps_upnp.c	210;"	d	file:
MAX_BR_PORTS	src/ap/vlan_init.c	108;"	d	file:
MAX_CIPHER_COUNT	src/tls/tlsv1_client_i.h	48;"	d
MAX_CIPHER_COUNT	src/tls/tlsv1_server_i.h	43;"	d
MAX_CRED_COUNT	src/wps/wps_i.h	203;"	d
MAX_EVENTS_PER_SEC	src/wps/wps_upnp.c	213;"	d	file:
MAX_EVENTS_QUEUED	src/wps/wps_upnp_event.c	33;"	d	file:
MAX_FAILURES	src/wps/wps_upnp_event.c	34;"	d	file:
MAX_IE_LEN	src/drivers/driver_test.c	1765;"	d	file:
MAX_LEN_OF_SSID	src/drivers/driver_ralink.h	121;"	d
MAX_MSEARCH	src/wps/wps_upnp_ssdp.c	27;"	d	file:
MAX_NDIS_DEVICE_NAME_LEN	src/drivers/driver_ndis.c	2752;"	d	file:
MAX_NL80211_IFACE_COMB	src/drivers/nl80211_copy.h	/^	MAX_NL80211_IFACE_COMB = NUM_NL80211_IFACE_COMB - 1$/;"	e	enum:nl80211_if_combination_attrs
MAX_NL80211_IFACE_LIMIT	src/drivers/nl80211_copy.h	/^	MAX_NL80211_IFACE_LIMIT = NUM_NL80211_IFACE_LIMIT - 1$/;"	e	enum:nl80211_iface_limit_attrs
MAX_NL80211_PLINK_STATES	src/drivers/nl80211_copy.h	/^	MAX_NL80211_PLINK_STATES = NUM_NL80211_PLINK_STATES - 1$/;"	e	enum:nl80211_plink_state
MAX_NL80211_PMKSA_CANDIDATE	src/drivers/nl80211_copy.h	/^	MAX_NL80211_PMKSA_CANDIDATE = NUM_NL80211_PMKSA_CANDIDATE - 1$/;"	e	enum:nl80211_pmksa_candidate_attr
MAX_NL80211_REKEY_DATA	src/drivers/nl80211_copy.h	/^	MAX_NL80211_REKEY_DATA = NUM_NL80211_REKEY_DATA - 1$/;"	e	enum:nl80211_rekey_data
MAX_NL80211_WOWLAN_PKTPAT	src/drivers/nl80211_copy.h	/^	MAX_NL80211_WOWLAN_PKTPAT = NUM_NL80211_WOWLAN_PKTPAT - 1,$/;"	e	enum:nl80211_wowlan_packet_pattern_attr
MAX_NL80211_WOWLAN_TRIG	src/drivers/nl80211_copy.h	/^	MAX_NL80211_WOWLAN_TRIG = NUM_NL80211_WOWLAN_TRIG - 1$/;"	e	enum:nl80211_wowlan_triggers
MAX_NUM_CSUITES	src/eap_server/eap_server_gpsk.c	37;"	d	file:
MAX_PROBERESP_LEN	src/ap/beacon.c	332;"	d	file:
MAX_PROV_DISC_REQ_RETRIES	src/p2p/p2p_pd.c	28;"	d	file:
MAX_QUERY_LEN	src/drivers/ndis_events.c	494;"	d	file:
MAX_REPORT_FREQS	src/drivers/driver_nl80211.c	1280;"	d	file:
MAX_REQ_DEV_TYPE_COUNT	src/wps/wps_i.h	208;"	d
MAX_ROAMING_CONSORTIUM_LEN	src/ap/ap_config.h	147;"	d
MAX_SCAN_RESULTS	src/drivers/driver_test.c	86;"	d	file:
MAX_SSID_LEN	src/drivers/driver_ralink.c	33;"	d	file:
MAX_STA_COUNT	src/ap/ap_config.h	23;"	d
MAX_SUBSCRIPTIONS	src/wps/wps_upnp.c	209;"	d	file:
MAX_VLAN_ID	src/ap/ap_config.h	24;"	d
MAX_WEB_CONNECTIONS	src/wps/wps_upnp_web.c	30;"	d	file:
MAX_WPS_PARSE_VENDOR_EXT	src/wps/wps.h	72;"	d
MAX_WPS_VENDOR_EXTENSIONS	src/wps/wps.h	68;"	d
MD4Context	src/crypto/md4-internal.c	/^typedef struct MD4Context {$/;"	s	file:
MD4Context::buffer	src/crypto/md4-internal.c	/^	u8 buffer[MD4_BLOCK_LENGTH];	\/* input buffer *\/$/;"	m	struct:MD4Context	file:	access:public
MD4Context::count	src/crypto/md4-internal.c	/^	u64 count;			\/* number of bits, mod 2^64 *\/$/;"	m	struct:MD4Context	file:	access:public
MD4Context::state	src/crypto/md4-internal.c	/^	u32 state[4];			\/* state *\/$/;"	m	struct:MD4Context	file:	access:public
MD4Final	src/crypto/md4-internal.c	/^static void MD4Final(unsigned char digest[MD4_DIGEST_LENGTH], MD4_CTX *ctx)$/;"	f	file:	signature:(unsigned char digest[MD4_DIGEST_LENGTH], MD4_CTX *ctx)
MD4Final	src/crypto/md4-internal.c	/^static void MD4Final(unsigned char digest[MD4_DIGEST_LENGTH], MD4_CTX *ctx);$/;"	p	file:	signature:(unsigned char digest[MD4_DIGEST_LENGTH], MD4_CTX *ctx)
MD4Init	src/crypto/md4-internal.c	/^static void MD4Init(MD4_CTX *ctx)$/;"	f	file:	signature:(MD4_CTX *ctx)
MD4Init	src/crypto/md4-internal.c	/^static void MD4Init(MD4_CTX *ctx);$/;"	p	file:	signature:(MD4_CTX *ctx)
MD4Pad	src/crypto/md4-internal.c	/^static void MD4Pad(MD4_CTX *ctx)$/;"	f	file:	signature:(MD4_CTX *ctx)
MD4STEP	src/crypto/md4-internal.c	192;"	d	file:
MD4Transform	src/crypto/md4-internal.c	/^MD4Transform(u32 state[4], const u8 block[MD4_BLOCK_LENGTH])$/;"	f	file:	signature:(u32 state[4], const u8 block[MD4_BLOCK_LENGTH])
MD4Transform	src/crypto/md4-internal.c	/^MD4Transform(u32 state[4], const u8 block[MD4_BLOCK_LENGTH]);$/;"	p	file:	signature:(u32 state[4], const u8 block[MD4_BLOCK_LENGTH])
MD4Update	src/crypto/md4-internal.c	/^static void MD4Update(MD4_CTX *ctx, const unsigned char *input, size_t len)$/;"	f	file:	signature:(MD4_CTX *ctx, const unsigned char *input, size_t len)
MD4Update	src/crypto/md4-internal.c	/^static void MD4Update(MD4_CTX *ctx, const unsigned char *input, size_t len);$/;"	p	file:	signature:(MD4_CTX *ctx, const unsigned char *input, size_t len)
MD4_BLOCK_LENGTH	src/crypto/md4-internal.c	20;"	d	file:
MD4_CTX	src/crypto/md4-internal.c	/^} MD4_CTX;$/;"	t	typeref:struct:MD4Context	file:
MD4_DIGEST_LENGTH	src/crypto/md4-internal.c	21;"	d	file:
MD4_DIGEST_STRING_LENGTH	src/crypto/md4-internal.c	69;"	d	file:
MD5Context	src/crypto/md5_i.h	/^struct MD5Context {$/;"	s
MD5Context::bits	src/crypto/md5_i.h	/^	u32 bits[2];$/;"	m	struct:MD5Context	access:public
MD5Context::buf	src/crypto/md5_i.h	/^	u32 buf[4];$/;"	m	struct:MD5Context	access:public
MD5Context::in	src/crypto/md5_i.h	/^	u8 in[64];$/;"	m	struct:MD5Context	access:public
MD5Final	src/crypto/md5-internal.c	/^void MD5Final(unsigned char digest[16], struct MD5Context *ctx)$/;"	f	signature:(unsigned char digest[16], struct MD5Context *ctx)
MD5Final	src/crypto/md5_i.h	/^void MD5Final(unsigned char digest[16], struct MD5Context *context);$/;"	p	signature:(unsigned char digest[16], struct MD5Context *context)
MD5Init	src/crypto/md5-internal.c	/^void MD5Init(struct MD5Context *ctx)$/;"	f	signature:(struct MD5Context *ctx)
MD5Init	src/crypto/md5_i.h	/^void MD5Init(struct MD5Context *context);$/;"	p	signature:(struct MD5Context *context)
MD5STEP	src/crypto/md5-internal.c	203;"	d	file:
MD5Transform	src/crypto/md5-internal.c	/^static void MD5Transform(u32 buf[4], u32 const in[16])$/;"	f	file:	signature:(u32 buf[4], u32 const in[16])
MD5Transform	src/crypto/md5-internal.c	/^static void MD5Transform(u32 buf[4], u32 const in[16]);$/;"	p	file:	signature:(u32 buf[4], u32 const in[16])
MD5Update	src/crypto/md5-internal.c	/^void MD5Update(struct MD5Context *ctx, unsigned char const *buf, unsigned len)$/;"	f	signature:(struct MD5Context *ctx, unsigned char const *buf, unsigned len)
MD5Update	src/crypto/md5_i.h	/^void MD5Update(struct MD5Context *context, unsigned char const *buf,$/;"	p	signature:(struct MD5Context *context, unsigned char const *buf, unsigned len)
MD5_CTX	src/crypto/md5-internal.c	/^typedef struct MD5Context MD5_CTX;$/;"	t	typeref:struct:MD5Context	file:
MD5_H	src/crypto/md5.h	16;"	d
MD5_I_H	src/crypto/md5_i.h	16;"	d
MD5_MAC_LEN	src/crypto/md5.h	18;"	d
MESG	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
MESG	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
METHOD_CONT	src/eap_peer/eap_i.h	/^	METHOD_NONE, METHOD_INIT, METHOD_CONT, METHOD_MAY_CONT, METHOD_DONE$/;"	e	enum:__anon183
METHOD_CONTINUE	src/eap_server/eap_i.h	/^		METHOD_PROPOSED, METHOD_CONTINUE, METHOD_END$/;"	e	enum:eap_sm::__anon156
METHOD_DONE	src/eap_peer/eap_i.h	/^	METHOD_NONE, METHOD_INIT, METHOD_CONT, METHOD_MAY_CONT, METHOD_DONE$/;"	e	enum:__anon183
METHOD_END	src/eap_server/eap_i.h	/^		METHOD_PROPOSED, METHOD_CONTINUE, METHOD_END$/;"	e	enum:eap_sm::__anon156
METHOD_INIT	src/eap_peer/eap_i.h	/^	METHOD_NONE, METHOD_INIT, METHOD_CONT, METHOD_MAY_CONT, METHOD_DONE$/;"	e	enum:__anon183
METHOD_MAY_CONT	src/eap_peer/eap_i.h	/^	METHOD_NONE, METHOD_INIT, METHOD_CONT, METHOD_MAY_CONT, METHOD_DONE$/;"	e	enum:__anon183
METHOD_NONE	src/eap_peer/eap_i.h	/^	METHOD_NONE, METHOD_INIT, METHOD_CONT, METHOD_MAY_CONT, METHOD_DONE$/;"	e	enum:__anon183
METHOD_PENDING_CONT	src/eap_server/eap_i.h	/^		METHOD_PENDING_NONE, METHOD_PENDING_WAIT, METHOD_PENDING_CONT$/;"	e	enum:eap_sm::__anon158
METHOD_PENDING_NONE	src/eap_server/eap_i.h	/^		METHOD_PENDING_NONE, METHOD_PENDING_WAIT, METHOD_PENDING_CONT$/;"	e	enum:eap_sm::__anon158
METHOD_PENDING_WAIT	src/eap_server/eap_i.h	/^		METHOD_PENDING_NONE, METHOD_PENDING_WAIT, METHOD_PENDING_CONT$/;"	e	enum:eap_sm::__anon158
METHOD_PROPOSED	src/eap_server/eap_i.h	/^		METHOD_PROPOSED, METHOD_CONTINUE, METHOD_END$/;"	e	enum:eap_sm::__anon156
MGMT_FRAME_PROTECTION_OPTIONAL	src/common/defs.h	/^	MGMT_FRAME_PROTECTION_OPTIONAL = 1,$/;"	e	enum:mfp_options
MGMT_FRAME_PROTECTION_REQUIRED	src/common/defs.h	/^	MGMT_FRAME_PROTECTION_REQUIRED = 2$/;"	e	enum:mfp_options
MICVerified	src/ap/wpa_auth_i.h	/^	Boolean MICVerified;$/;"	m	struct:wpa_state_machine	access:public
MIH_CMD_AND_EVENT_DISCOVERY	src/common/ieee802_11_defs.h	/^	MIH_CMD_AND_EVENT_DISCOVERY = 2,$/;"	e	enum:adv_proto_id
MIH_INFO_SERVICE	src/common/ieee802_11_defs.h	/^	MIH_INFO_SERVICE = 1,$/;"	e	enum:adv_proto_id
MILENAGE_H	src/crypto/milenage.h	16;"	d
MIN	src/crypto/sha256-internal.c	95;"	d	file:
MIN	src/tls/libtommath.c	60;"	d	file:
MIN_COLLECT_ENTROPY	src/crypto/random.c	64;"	d	file:
MIN_READY_MARK	src/crypto/random.c	49;"	d	file:
MLME_DEAUTH_REQ_STRUCT	src/drivers/driver_ralink.h	/^} MLME_DEAUTH_REQ_STRUCT, *PMLME_DEAUTH_REQ_STRUCT;$/;"	t	typeref:struct:_MLME_DEAUTH_REQ_STRUCT
MLME_H	src/ap/ap_mlme.h	18;"	d
MLME_SETPROTECTION_KEY_TYPE_GROUP	src/common/defs.h	248;"	d
MLME_SETPROTECTION_KEY_TYPE_PAIRWISE	src/common/defs.h	249;"	d
MLME_SETPROTECTION_PROTECT_TYPE_NONE	src/common/defs.h	243;"	d
MLME_SETPROTECTION_PROTECT_TYPE_RX	src/common/defs.h	244;"	d
MLME_SETPROTECTION_PROTECT_TYPE_RX_TX	src/common/defs.h	246;"	d
MLME_SETPROTECTION_PROTECT_TYPE_TX	src/common/defs.h	245;"	d
MLME_STA_DEAUTH	src/drivers/driver_hostap.h	194;"	d
MLME_STA_DISASSOC	src/drivers/driver_hostap.h	195;"	d
MOBILEAPPLE80211_H	src/drivers/MobileApple80211.h	2;"	d
MOBILITY_DOMAIN_ID_LEN	src/common/wpa_common.h	130;"	d
MP_28BIT	src/tls/libtommath.c	73;"	d	file:
MP_EQ	src/tls/libtommath.c	84;"	d	file:
MP_GT	src/tls/libtommath.c	85;"	d	file:
MP_LOW_MEM	src/tls/libtommath.c	100;"	d	file:
MP_LT	src/tls/libtommath.c	83;"	d	file:
MP_MASK	src/tls/libtommath.c	81;"	d	file:
MP_MEM	src/tls/libtommath.c	91;"	d	file:
MP_NEG	src/tls/libtommath.c	88;"	d	file:
MP_NO	src/tls/libtommath.c	95;"	d	file:
MP_OKAY	src/tls/libtommath.c	90;"	d	file:
MP_PREC	src/tls/libtommath.c	105;"	d	file:
MP_PREC	src/tls/libtommath.c	107;"	d	file:
MP_VAL	src/tls/libtommath.c	92;"	d	file:
MP_WARRAY	src/tls/libtommath.c	112;"	d	file:
MP_YES	src/tls/libtommath.c	94;"	d	file:
MP_ZPOS	src/tls/libtommath.c	87;"	d	file:
MSCHAPV2_AUTH_RESPONSE_LEN	src/eap_peer/mschapv2.h	20;"	d
MSCHAPV2_CHAL_LEN	src/eap_peer/mschapv2.h	18;"	d
MSCHAPV2_H	src/eap_peer/mschapv2.h	16;"	d
MSCHAPV2_KEY_LEN	src/eap_peer/eap_mschapv2.c	81;"	d	file:
MSCHAPV2_KEY_LEN	src/eap_server/eap_server_mschapv2.c	47;"	d	file:
MSCHAPV2_MASTER_KEY_LEN	src/eap_peer/mschapv2.h	21;"	d
MSCHAPV2_NT_RESPONSE_LEN	src/eap_peer/mschapv2.h	19;"	d
MSCHAPV2_OP_CHALLENGE	src/eap_peer/eap_mschapv2.c	67;"	d	file:
MSCHAPV2_OP_CHALLENGE	src/eap_server/eap_server_mschapv2.c	31;"	d	file:
MSCHAPV2_OP_CHANGE_PASSWORD	src/eap_peer/eap_mschapv2.c	71;"	d	file:
MSCHAPV2_OP_CHANGE_PASSWORD	src/eap_server/eap_server_mschapv2.c	35;"	d	file:
MSCHAPV2_OP_FAILURE	src/eap_peer/eap_mschapv2.c	70;"	d	file:
MSCHAPV2_OP_FAILURE	src/eap_server/eap_server_mschapv2.c	34;"	d	file:
MSCHAPV2_OP_RESPONSE	src/eap_peer/eap_mschapv2.c	68;"	d	file:
MSCHAPV2_OP_RESPONSE	src/eap_server/eap_server_mschapv2.c	32;"	d	file:
MSCHAPV2_OP_SUCCESS	src/eap_peer/eap_mschapv2.c	69;"	d	file:
MSCHAPV2_OP_SUCCESS	src/eap_server/eap_server_mschapv2.c	33;"	d	file:
MSCHAPV2_RESP_LEN	src/eap_server/eap_server_mschapv2.c	37;"	d	file:
MSEARCH_REPLY	src/wps/wps_upnp_i.h	/^	MSEARCH_REPLY = 2$/;"	e	enum:advertisement_type_enum
MSG	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
MSG	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	e	enum:eap_ssl_data::__anon138
MSG_DEBUG	src/utils/wpa_debug.h	/^	MSG_EXCESSIVE, MSG_MSGDUMP, MSG_DEBUG, MSG_INFO, MSG_WARNING, MSG_ERROR$/;"	e	enum:__anon26
MSG_DONTWAIT	src/utils/common.h	409;"	d
MSG_DONTWAIT	src/utils/common.h	84;"	d
MSG_ERROR	src/utils/wpa_debug.h	/^	MSG_EXCESSIVE, MSG_MSGDUMP, MSG_DEBUG, MSG_INFO, MSG_WARNING, MSG_ERROR$/;"	e	enum:__anon26
MSG_EXCESSIVE	src/utils/wpa_debug.h	/^	MSG_EXCESSIVE, MSG_MSGDUMP, MSG_DEBUG, MSG_INFO, MSG_WARNING, MSG_ERROR$/;"	e	enum:__anon26
MSG_INFO	src/utils/wpa_debug.h	/^	MSG_EXCESSIVE, MSG_MSGDUMP, MSG_DEBUG, MSG_INFO, MSG_WARNING, MSG_ERROR$/;"	e	enum:__anon26
MSG_MSGDUMP	src/utils/wpa_debug.h	/^	MSG_EXCESSIVE, MSG_MSGDUMP, MSG_DEBUG, MSG_INFO, MSG_WARNING, MSG_ERROR$/;"	e	enum:__anon26
MSG_WARNING	src/utils/wpa_debug.h	/^	MSG_EXCESSIVE, MSG_MSGDUMP, MSG_DEBUG, MSG_INFO, MSG_WARNING, MSG_ERROR$/;"	e	enum:__anon26
MS_ENH_RSA_AES_PROV	src/crypto/crypto_cryptoapi.c	24;"	d	file:
MS_ENH_RSA_AES_PROV	src/crypto/crypto_cryptoapi.c	27;"	d	file:
MS_FUNCS	hostapd/Android.mk	/^MS_FUNCS=y$/;"	m
MS_FUNCS	hostapd/Makefile	/^MS_FUNCS=y$/;"	m
MS_FUNCS_H	src/crypto/ms_funcs.h	16;"	d
MULTICAST_MAX_READ	src/wps/wps_upnp_i.h	31;"	d
MacAddress	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS MacAddress; \/* BSSID *\/$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
MacAddress	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS             MacAddress;         \/\/ BSSID$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
MacAddress	src/drivers/driver_ralink.h	/^   NDIS_802_11_MAC_ADDRESS             MacAddress; \/\/ BSSID$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
Maj	src/crypto/sha256-internal.c	87;"	d	file:
MaxRetrans	src/eap_server/eap_i.h	/^	int MaxRetrans;$/;"	m	struct:eap_sm	access:public
NAI_REALM_CRED_TYPE_ANONYMOUS	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_ANONYMOUS = 9,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_CERTIFICATE	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_CERTIFICATE = 6,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_HARDWARE_TOKEN	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_HARDWARE_TOKEN = 4,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_NFC_SECURE_ELEMENT	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_NFC_SECURE_ELEMENT = 3,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_NONE	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_NONE = 8,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_SIM	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_SIM = 1,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_SOFTOKEN	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_SOFTOKEN = 5,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_USERNAME_PASSWORD	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_USERNAME_PASSWORD = 7,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_USIM	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_USIM = 2,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_VENDOR_SPECIFIC = 10$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_EAP_AUTH_CRED_TYPE	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_CRED_TYPE = 5,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_EXPANDED_EAP_METHOD	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_EXPANDED_EAP_METHOD = 1,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_EXPANDED_INNER_EAP_METHOD	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_EXPANDED_INNER_EAP_METHOD = 4,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_INNER_AUTH_EAP_METHOD	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_INNER_AUTH_EAP_METHOD = 3,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_NON_EAP_INNER_AUTH	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_NON_EAP_INNER_AUTH = 2,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_TUNNELED_CRED_TYPE	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_TUNNELED_CRED_TYPE = 6,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_VENDOR_SPECIFIC = 221$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_INNER_NON_EAP_CHAP	src/common/ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_CHAP = 2,$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAI_REALM_INNER_NON_EAP_MSCHAP	src/common/ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_MSCHAP = 3,$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAI_REALM_INNER_NON_EAP_MSCHAPV2	src/common/ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_MSCHAPV2 = 4$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAI_REALM_INNER_NON_EAP_PAP	src/common/ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_PAP = 1,$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAMED_PIPE_PREFIX	src/common/wpa_ctrl.c	436;"	d	file:
NDISUIO_DEVICE_NAME	src/drivers/driver_ndis.c	2715;"	d	file:
NDISUIO_MSG_SIZE	src/drivers/driver_ndis.c	1877;"	d	file:
NDISUIO_QUERY_BINDING	src/drivers/driver_ndis.c	/^} NDISUIO_QUERY_BINDING, *PNDISUIO_QUERY_BINDING;$/;"	t	typeref:struct:_NDISUIO_QUERY_BINDING	file:
NDISUIO_QUERY_OID	src/drivers/driver_ndis.c	/^} NDISUIO_QUERY_OID, *PNDISUIO_QUERY_OID;$/;"	t	typeref:struct:_NDISUIO_QUERY_OID	file:
NDISUIO_SET_OID	src/drivers/driver_ndis.c	/^} NDISUIO_SET_OID, *PNDISUIO_SET_OID;$/;"	t	typeref:struct:_NDISUIO_SET_OID	file:
NDIS_802_11_AI_REQFI	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_AI_REQFI {$/;"	s	file:
NDIS_802_11_AI_REQFI	src/drivers/driver_ndis.c	/^} NDIS_802_11_AI_REQFI;$/;"	t	typeref:struct:NDIS_802_11_AI_REQFI	file:
NDIS_802_11_AI_REQFI	src/drivers/driver_ralink.h	/^} NDIS_802_11_AI_REQFI, *PNDIS_802_11_AI_REQFI;$/;"	t	typeref:struct:_NDIS_802_11_AI_REQFI
NDIS_802_11_AI_REQFI::Capabilities	src/drivers/driver_ndis.c	/^	USHORT Capabilities;$/;"	m	struct:NDIS_802_11_AI_REQFI	file:	access:public
NDIS_802_11_AI_REQFI::CurrentAPAddress	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS CurrentAPAddress;$/;"	m	struct:NDIS_802_11_AI_REQFI	file:	access:public
NDIS_802_11_AI_REQFI::ListenInterval	src/drivers/driver_ndis.c	/^	USHORT ListenInterval;$/;"	m	struct:NDIS_802_11_AI_REQFI	file:	access:public
NDIS_802_11_AI_REQFI_CAPABILITIES	src/drivers/driver_ralink.h	339;"	d
NDIS_802_11_AI_REQFI_CURRENTAPADDRESS	src/drivers/driver_ralink.h	341;"	d
NDIS_802_11_AI_REQFI_LISTENINTERVAL	src/drivers/driver_ralink.h	340;"	d
NDIS_802_11_AI_RESFI	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_AI_RESFI {$/;"	s	file:
NDIS_802_11_AI_RESFI	src/drivers/driver_ndis.c	/^} NDIS_802_11_AI_RESFI;$/;"	t	typeref:struct:NDIS_802_11_AI_RESFI	file:
NDIS_802_11_AI_RESFI	src/drivers/driver_ralink.h	/^} NDIS_802_11_AI_RESFI, *PNDIS_802_11_AI_RESFI;$/;"	t	typeref:struct:_NDIS_802_11_AI_RESFI
NDIS_802_11_AI_RESFI::AssociationId	src/drivers/driver_ndis.c	/^	USHORT AssociationId;$/;"	m	struct:NDIS_802_11_AI_RESFI	file:	access:public
NDIS_802_11_AI_RESFI::Capabilities	src/drivers/driver_ndis.c	/^	USHORT Capabilities;$/;"	m	struct:NDIS_802_11_AI_RESFI	file:	access:public
NDIS_802_11_AI_RESFI::StatusCode	src/drivers/driver_ndis.c	/^	USHORT StatusCode;$/;"	m	struct:NDIS_802_11_AI_RESFI	file:	access:public
NDIS_802_11_AI_RESFI_ASSOCIATIONID	src/drivers/driver_ralink.h	345;"	d
NDIS_802_11_AI_RESFI_CAPABILITIES	src/drivers/driver_ralink.h	343;"	d
NDIS_802_11_AI_RESFI_STATUSCODE	src/drivers/driver_ralink.h	344;"	d
NDIS_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_ASSOCIATION_INFORMATION {$/;"	s	file:
NDIS_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ndis.c	/^} NDIS_802_11_ASSOCIATION_INFORMATION;$/;"	t	typeref:struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:
NDIS_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ralink.h	/^} NDIS_802_11_ASSOCIATION_INFORMATION, *PNDIS_802_11_ASSOCIATION_INFORMATION;$/;"	t	typeref:struct:_NDIS_802_11_ASSOCIATION_INFORMATION
NDIS_802_11_ASSOCIATION_INFORMATION::AvailableRequestFixedIEs	src/drivers/driver_ndis.c	/^	USHORT AvailableRequestFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::AvailableResponseFixedIEs	src/drivers/driver_ndis.c	/^	USHORT AvailableResponseFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::OffsetRequestIEs	src/drivers/driver_ndis.c	/^	ULONG OffsetRequestIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::OffsetResponseIEs	src/drivers/driver_ndis.c	/^	ULONG OffsetResponseIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::RequestFixedIEs	src/drivers/driver_ndis.c	/^	NDIS_802_11_AI_REQFI RequestFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::RequestIELength	src/drivers/driver_ndis.c	/^	ULONG RequestIELength;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::ResponseFixedIEs	src/drivers/driver_ndis.c	/^	NDIS_802_11_AI_RESFI ResponseFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_ASSOCIATION_INFORMATION::ResponseIELength	src/drivers/driver_ndis.c	/^	ULONG ResponseIELength;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
NDIS_802_11_AUTHENTICATION_ENCRYPTION	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_AUTHENTICATION_ENCRYPTION {$/;"	s	file:
NDIS_802_11_AUTHENTICATION_ENCRYPTION	src/drivers/driver_ndis.c	/^} NDIS_802_11_AUTHENTICATION_ENCRYPTION;$/;"	t	typeref:struct:NDIS_802_11_AUTHENTICATION_ENCRYPTION	file:
NDIS_802_11_AUTHENTICATION_ENCRYPTION::AuthModeSupported	src/drivers/driver_ndis.c	/^	NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_ENCRYPTION	file:	access:public
NDIS_802_11_AUTHENTICATION_ENCRYPTION::EncryptStatusSupported	src/drivers/driver_ndis.c	/^	NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_ENCRYPTION	file:	access:public
NDIS_802_11_AUTHENTICATION_MODE	src/drivers/driver_ndis.c	/^typedef enum NDIS_802_11_AUTHENTICATION_MODE {$/;"	g	file:
NDIS_802_11_AUTHENTICATION_MODE	src/drivers/driver_ndis.c	/^} NDIS_802_11_AUTHENTICATION_MODE;$/;"	t	typeref:enum:NDIS_802_11_AUTHENTICATION_MODE	file:
NDIS_802_11_AUTHENTICATION_MODE	src/drivers/driver_ralink.h	/^} NDIS_802_11_AUTHENTICATION_MODE, *PNDIS_802_11_AUTHENTICATION_MODE;$/;"	t	typeref:enum:_NDIS_802_11_AUTHENTICATION_MODE
NDIS_802_11_AUTHENTICATION_REQUEST	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_AUTHENTICATION_REQUEST {$/;"	s	file:
NDIS_802_11_AUTHENTICATION_REQUEST	src/drivers/driver_ndis.c	/^} NDIS_802_11_AUTHENTICATION_REQUEST;$/;"	t	typeref:struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:
NDIS_802_11_AUTHENTICATION_REQUEST::Bssid	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS Bssid;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:	access:public
NDIS_802_11_AUTHENTICATION_REQUEST::Flags	src/drivers/driver_ndis.c	/^	ULONG Flags;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:	access:public
NDIS_802_11_AUTHENTICATION_REQUEST::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_AUTHENTICATION_REQUEST	file:	access:public
NDIS_802_11_AUTH_REQUEST_AUTH_FIELDS	src/drivers/driver_ralink.h	127;"	d
NDIS_802_11_AUTH_REQUEST_GROUP_ERROR	src/drivers/driver_ndis.c	297;"	d	file:
NDIS_802_11_AUTH_REQUEST_GROUP_ERROR	src/drivers/driver_ralink.h	132;"	d
NDIS_802_11_AUTH_REQUEST_KEYUPDATE	src/drivers/driver_ndis.c	295;"	d	file:
NDIS_802_11_AUTH_REQUEST_KEYUPDATE	src/drivers/driver_ralink.h	130;"	d
NDIS_802_11_AUTH_REQUEST_PAIRWISE_ERROR	src/drivers/driver_ndis.c	296;"	d	file:
NDIS_802_11_AUTH_REQUEST_PAIRWISE_ERROR	src/drivers/driver_ralink.h	131;"	d
NDIS_802_11_AUTH_REQUEST_REAUTH	src/drivers/driver_ndis.c	294;"	d	file:
NDIS_802_11_AUTH_REQUEST_REAUTH	src/drivers/driver_ralink.h	129;"	d
NDIS_802_11_BSSID_LIST	src/drivers/driver_ralink.h	/^} NDIS_802_11_BSSID_LIST, *PNDIS_802_11_BSSID_LIST;$/;"	t	typeref:struct:_NDIS_802_11_BSSID_LIST
NDIS_802_11_BSSID_LIST_EX	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_BSSID_LIST_EX {$/;"	s	file:
NDIS_802_11_BSSID_LIST_EX	src/drivers/driver_ndis.c	/^} NDIS_802_11_BSSID_LIST_EX;$/;"	t	typeref:struct:NDIS_802_11_BSSID_LIST_EX	file:
NDIS_802_11_BSSID_LIST_EX	src/drivers/driver_ralink.h	/^} NDIS_802_11_BSSID_LIST_EX, *PNDIS_802_11_BSSID_LIST_EX;$/;"	t	typeref:struct:_NDIS_802_11_BSSID_LIST_EX
NDIS_802_11_BSSID_LIST_EX::Bssid	src/drivers/driver_ndis.c	/^	NDIS_WLAN_BSSID_EX Bssid[1];$/;"	m	struct:NDIS_802_11_BSSID_LIST_EX	file:	access:public
NDIS_802_11_BSSID_LIST_EX::NumberOfItems	src/drivers/driver_ndis.c	/^	ULONG NumberOfItems;$/;"	m	struct:NDIS_802_11_BSSID_LIST_EX	file:	access:public
NDIS_802_11_CAPABILITY	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_CAPABILITY {$/;"	s	file:
NDIS_802_11_CAPABILITY	src/drivers/driver_ndis.c	/^} NDIS_802_11_CAPABILITY;$/;"	t	typeref:struct:NDIS_802_11_CAPABILITY	file:
NDIS_802_11_CAPABILITY::AuthenticationEncryptionSupported	src/drivers/driver_ndis.c	/^		AuthenticationEncryptionSupported[1];$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NDIS_802_11_CAPABILITY::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NDIS_802_11_CAPABILITY::NoOfAuthEncryptPairsSupported	src/drivers/driver_ndis.c	/^	ULONG NoOfAuthEncryptPairsSupported;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NDIS_802_11_CAPABILITY::NoOfPMKIDs	src/drivers/driver_ndis.c	/^	ULONG NoOfPMKIDs;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NDIS_802_11_CAPABILITY::Version	src/drivers/driver_ndis.c	/^	ULONG Version;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NDIS_802_11_CONFIGURATION	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_CONFIGURATION {$/;"	s	file:
NDIS_802_11_CONFIGURATION	src/drivers/driver_ndis.c	/^} NDIS_802_11_CONFIGURATION;$/;"	t	typeref:struct:NDIS_802_11_CONFIGURATION	file:
NDIS_802_11_CONFIGURATION	src/drivers/driver_ralink.h	/^} NDIS_802_11_CONFIGURATION, *PNDIS_802_11_CONFIGURATION;$/;"	t	typeref:struct:_NDIS_802_11_CONFIGURATION
NDIS_802_11_CONFIGURATION::ATIMWindow	src/drivers/driver_ndis.c	/^	ULONG ATIMWindow;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
NDIS_802_11_CONFIGURATION::BeaconPeriod	src/drivers/driver_ndis.c	/^	ULONG BeaconPeriod;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
NDIS_802_11_CONFIGURATION::DSConfig	src/drivers/driver_ndis.c	/^	ULONG DSConfig;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
NDIS_802_11_CONFIGURATION::FHConfig	src/drivers/driver_ndis.c	/^	NDIS_802_11_CONFIGURATION_FH FHConfig;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
NDIS_802_11_CONFIGURATION::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_CONFIGURATION	file:	access:public
NDIS_802_11_CONFIGURATION_FH	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_CONFIGURATION_FH {$/;"	s	file:
NDIS_802_11_CONFIGURATION_FH	src/drivers/driver_ndis.c	/^} NDIS_802_11_CONFIGURATION_FH;$/;"	t	typeref:struct:NDIS_802_11_CONFIGURATION_FH	file:
NDIS_802_11_CONFIGURATION_FH	src/drivers/driver_ralink.h	/^} NDIS_802_11_CONFIGURATION_FH, *PNDIS_802_11_CONFIGURATION_FH;$/;"	t	typeref:struct:_NDIS_802_11_CONFIGURATION_FH
NDIS_802_11_CONFIGURATION_FH::DwellTime	src/drivers/driver_ndis.c	/^	ULONG DwellTime;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
NDIS_802_11_CONFIGURATION_FH::HopPattern	src/drivers/driver_ndis.c	/^	ULONG HopPattern;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
NDIS_802_11_CONFIGURATION_FH::HopSet	src/drivers/driver_ndis.c	/^	ULONG HopSet;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
NDIS_802_11_CONFIGURATION_FH::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_CONFIGURATION_FH	file:	access:public
NDIS_802_11_ENCRYPTION_STATUS	src/drivers/driver_ndis.c	/^} NDIS_802_11_WEP_STATUS, NDIS_802_11_ENCRYPTION_STATUS;$/;"	t	typeref:enum:NDIS_802_11_WEP_STATUS	file:
NDIS_802_11_ENCRYPTION_STATUS	src/drivers/driver_ralink.h	/^  NDIS_802_11_ENCRYPTION_STATUS, *PNDIS_802_11_ENCRYPTION_STATUS;$/;"	t	typeref:enum:_NDIS_802_11_WEP_STATUS
NDIS_802_11_FIXED_IEs	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_FIXED_IEs {$/;"	s	file:
NDIS_802_11_FIXED_IEs	src/drivers/driver_ndis.c	/^} NDIS_802_11_FIXED_IEs;$/;"	t	typeref:struct:NDIS_802_11_FIXED_IEs	file:
NDIS_802_11_FIXED_IEs	src/drivers/driver_ralink.h	/^} NDIS_802_11_FIXED_IEs, *PNDIS_802_11_FIXED_IEs;$/;"	t	typeref:struct:_NDIS_802_11_FIXED_IEs
NDIS_802_11_FIXED_IEs::BeaconInterval	src/drivers/driver_ndis.c	/^	USHORT BeaconInterval;$/;"	m	struct:NDIS_802_11_FIXED_IEs	file:	access:public
NDIS_802_11_FIXED_IEs::Capabilities	src/drivers/driver_ndis.c	/^	USHORT Capabilities;$/;"	m	struct:NDIS_802_11_FIXED_IEs	file:	access:public
NDIS_802_11_FIXED_IEs::Timestamp	src/drivers/driver_ndis.c	/^	UCHAR Timestamp[8];$/;"	m	struct:NDIS_802_11_FIXED_IEs	file:	access:public
NDIS_802_11_KEY	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_KEY {$/;"	s	file:
NDIS_802_11_KEY	src/drivers/driver_ndis.c	/^} NDIS_802_11_KEY;$/;"	t	typeref:struct:NDIS_802_11_KEY	file:
NDIS_802_11_KEY	src/drivers/driver_ralink.h	/^} NDIS_802_11_KEY, *PNDIS_802_11_KEY;$/;"	t	typeref:struct:_NDIS_802_11_KEY
NDIS_802_11_KEY::BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
NDIS_802_11_KEY::KeyIndex	src/drivers/driver_ndis.c	/^	ULONG KeyIndex;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
NDIS_802_11_KEY::KeyLength	src/drivers/driver_ndis.c	/^	ULONG KeyLength;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
NDIS_802_11_KEY::KeyMaterial	src/drivers/driver_ndis.c	/^	UCHAR KeyMaterial[1];$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
NDIS_802_11_KEY::KeyRSC	src/drivers/driver_ndis.c	/^	NDIS_802_11_KEY_RSC KeyRSC;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
NDIS_802_11_KEY::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_KEY	file:	access:public
NDIS_802_11_KEY_INDEX	src/drivers/driver_ndis.c	/^typedef ULONG NDIS_802_11_KEY_INDEX;$/;"	t	file:
NDIS_802_11_KEY_INDEX	src/drivers/driver_ralink.h	/^typedef  ULONG  NDIS_802_11_KEY_INDEX;$/;"	t
NDIS_802_11_KEY_RSC	src/drivers/driver_ndis.c	/^typedef ULONGLONG NDIS_802_11_KEY_RSC;$/;"	t	file:
NDIS_802_11_KEY_RSC	src/drivers/driver_ralink.h	/^typedef ULONGLONG   NDIS_802_11_KEY_RSC;$/;"	t
NDIS_802_11_LENGTH_RATES	src/drivers/driver_ndis.c	86;"	d	file:
NDIS_802_11_LENGTH_RATES	src/drivers/driver_ralink.h	119;"	d
NDIS_802_11_LENGTH_RATES_EX	src/drivers/driver_ndis.c	87;"	d	file:
NDIS_802_11_LENGTH_RATES_EX	src/drivers/driver_ralink.h	120;"	d
NDIS_802_11_LENGTH_SSID	src/drivers/driver_ndis.c	85;"	d	file:
NDIS_802_11_LENGTH_SSID	src/drivers/driver_ralink.h	118;"	d
NDIS_802_11_MAC_ADDRESS	src/drivers/driver_ndis.c	/^typedef UCHAR NDIS_802_11_MAC_ADDRESS[6];$/;"	t	file:
NDIS_802_11_MAC_ADDRESS	src/drivers/driver_ralink.h	/^typedef UCHAR   NDIS_802_11_MAC_ADDRESS[6];$/;"	t
NDIS_802_11_NETWORK_INFRASTRUCTURE	src/drivers/driver_ndis.c	/^typedef enum NDIS_802_11_NETWORK_INFRASTRUCTURE {$/;"	g	file:
NDIS_802_11_NETWORK_INFRASTRUCTURE	src/drivers/driver_ndis.c	/^} NDIS_802_11_NETWORK_INFRASTRUCTURE;$/;"	t	typeref:enum:NDIS_802_11_NETWORK_INFRASTRUCTURE	file:
NDIS_802_11_NETWORK_INFRASTRUCTURE	src/drivers/driver_ralink.h	/^} NDIS_802_11_NETWORK_INFRASTRUCTURE, *PNDIS_802_11_NETWORK_INFRASTRUCTURE;$/;"	t	typeref:enum:_NDIS_802_11_NETWORK_INFRASTRUCTURE
NDIS_802_11_NETWORK_TYPE	src/drivers/driver_ndis.c	/^typedef enum NDIS_802_11_NETWORK_TYPE {$/;"	g	file:
NDIS_802_11_NETWORK_TYPE	src/drivers/driver_ndis.c	/^} NDIS_802_11_NETWORK_TYPE;$/;"	t	typeref:enum:NDIS_802_11_NETWORK_TYPE	file:
NDIS_802_11_NETWORK_TYPE	src/drivers/driver_ralink.h	/^} NDIS_802_11_NETWORK_TYPE, *PNDIS_802_11_NETWORK_TYPE;$/;"	t	typeref:enum:_NDIS_802_11_NETWORK_TYPE
NDIS_802_11_PMKID	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_PMKID {$/;"	s	file:
NDIS_802_11_PMKID	src/drivers/driver_ndis.c	/^} NDIS_802_11_PMKID;$/;"	t	typeref:struct:NDIS_802_11_PMKID	file:
NDIS_802_11_PMKID	src/drivers/driver_ralink.h	/^} NDIS_802_11_PMKID, *PNDIS_802_11_PMKID;$/;"	t	typeref:struct:_NDIS_802_11_PMKID
NDIS_802_11_PMKID::BSSIDInfo	src/drivers/driver_ndis.c	/^	BSSID_INFO BSSIDInfo[1];$/;"	m	struct:NDIS_802_11_PMKID	file:	access:public
NDIS_802_11_PMKID::BSSIDInfoCount	src/drivers/driver_ndis.c	/^	ULONG BSSIDInfoCount;$/;"	m	struct:NDIS_802_11_PMKID	file:	access:public
NDIS_802_11_PMKID::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_PMKID	file:	access:public
NDIS_802_11_PMKID_CANDIDATE_LIST	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_PMKID_CANDIDATE_LIST {$/;"	s	file:
NDIS_802_11_PMKID_CANDIDATE_LIST	src/drivers/driver_ndis.c	/^} NDIS_802_11_PMKID_CANDIDATE_LIST;$/;"	t	typeref:struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:
NDIS_802_11_PMKID_CANDIDATE_LIST	src/drivers/driver_ralink.h	/^} NDIS_802_11_PMKID_CANDIDATE_LIST, *PNDIS_802_11_PMKID_CANDIDATE_LIST;$/;"	t	typeref:struct:_NDIS_802_11_PMKID_CANDIDATE_LIST
NDIS_802_11_PMKID_CANDIDATE_LIST::CandidateList	src/drivers/driver_ndis.c	/^	PMKID_CANDIDATE CandidateList[1];$/;"	m	struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:	access:public
NDIS_802_11_PMKID_CANDIDATE_LIST::NumCandidates	src/drivers/driver_ndis.c	/^	ULONG NumCandidates;$/;"	m	struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:	access:public
NDIS_802_11_PMKID_CANDIDATE_LIST::Version	src/drivers/driver_ndis.c	/^	ULONG Version;$/;"	m	struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:	access:public
NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED	src/drivers/driver_ndis.c	280;"	d	file:
NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED	src/drivers/driver_ndis.c	345;"	d	file:
NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED	src/drivers/driver_ralink.h	236;"	d
NDIS_802_11_PMKID_VALUE	src/drivers/driver_ndis.c	/^typedef UCHAR NDIS_802_11_PMKID_VALUE[16];$/;"	t	file:
NDIS_802_11_PMKID_VALUE	src/drivers/driver_ralink.h	/^typedef UCHAR   NDIS_802_11_PMKID_VALUE[16];$/;"	t
NDIS_802_11_PRIVACY_FILTER	src/drivers/driver_ndis.c	/^typedef enum NDIS_802_11_PRIVACY_FILTER {$/;"	g	file:
NDIS_802_11_PRIVACY_FILTER	src/drivers/driver_ndis.c	/^} NDIS_802_11_PRIVACY_FILTER;$/;"	t	typeref:enum:NDIS_802_11_PRIVACY_FILTER	file:
NDIS_802_11_RATES	src/drivers/driver_ndis.c	/^typedef UCHAR NDIS_802_11_RATES[NDIS_802_11_LENGTH_RATES];$/;"	t	file:
NDIS_802_11_RATES	src/drivers/driver_ralink.h	/^typedef UCHAR  NDIS_802_11_RATES[NDIS_802_11_LENGTH_RATES];        \/\/ Set of 8 data rates$/;"	t
NDIS_802_11_RATES_EX	src/drivers/driver_ndis.c	/^typedef UCHAR NDIS_802_11_RATES_EX[NDIS_802_11_LENGTH_RATES_EX];$/;"	t	file:
NDIS_802_11_RATES_EX	src/drivers/driver_ralink.h	/^typedef UCHAR  NDIS_802_11_RATES_EX[NDIS_802_11_LENGTH_RATES_EX];  \/\/ Set of 16 data rates$/;"	t
NDIS_802_11_RELOAD_DEFAULTS	src/drivers/driver_ralink.h	/^} NDIS_802_11_RELOAD_DEFAULTS, *PNDIS_802_11_RELOAD_DEFAULTS;$/;"	t	typeref:enum:_NDIS_802_11_RELOAD_DEFAULTS
NDIS_802_11_REMOVE_KEY	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_REMOVE_KEY {$/;"	s	file:
NDIS_802_11_REMOVE_KEY	src/drivers/driver_ndis.c	/^} NDIS_802_11_REMOVE_KEY;$/;"	t	typeref:struct:NDIS_802_11_REMOVE_KEY	file:
NDIS_802_11_REMOVE_KEY	src/drivers/driver_ralink.h	/^} NDIS_802_11_REMOVE_KEY, *PNDIS_802_11_REMOVE_KEY;$/;"	t	typeref:struct:_NDIS_802_11_REMOVE_KEY
NDIS_802_11_REMOVE_KEY::BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:NDIS_802_11_REMOVE_KEY	file:	access:public
NDIS_802_11_REMOVE_KEY::KeyIndex	src/drivers/driver_ndis.c	/^	ULONG KeyIndex;$/;"	m	struct:NDIS_802_11_REMOVE_KEY	file:	access:public
NDIS_802_11_REMOVE_KEY::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_REMOVE_KEY	file:	access:public
NDIS_802_11_RSSI	src/drivers/driver_ndis.c	/^typedef LONG NDIS_802_11_RSSI;$/;"	t	file:
NDIS_802_11_RSSI	src/drivers/driver_ralink.h	/^typedef LONG    NDIS_802_11_RSSI;           \/\/ in dBm$/;"	t
NDIS_802_11_SSID	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_SSID {$/;"	s	file:
NDIS_802_11_SSID	src/drivers/driver_ndis.c	/^} NDIS_802_11_SSID;$/;"	t	typeref:struct:NDIS_802_11_SSID	file:
NDIS_802_11_SSID	src/drivers/driver_ralink.h	/^} NDIS_802_11_SSID, *PNDIS_802_11_SSID;$/;"	t	typeref:struct:_NDIS_802_11_SSID
NDIS_802_11_SSID::Ssid	src/drivers/driver_ndis.c	/^	UCHAR Ssid[NDIS_802_11_LENGTH_SSID];$/;"	m	struct:NDIS_802_11_SSID	file:	access:public
NDIS_802_11_SSID::SsidLength	src/drivers/driver_ndis.c	/^	ULONG SsidLength;$/;"	m	struct:NDIS_802_11_SSID	file:	access:public
NDIS_802_11_STATUS_INDICATION	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_STATUS_INDICATION {$/;"	s	file:
NDIS_802_11_STATUS_INDICATION	src/drivers/driver_ndis.c	/^} NDIS_802_11_STATUS_INDICATION;$/;"	t	typeref:struct:NDIS_802_11_STATUS_INDICATION	file:
NDIS_802_11_STATUS_INDICATION::StatusType	src/drivers/driver_ndis.c	/^	NDIS_802_11_STATUS_TYPE StatusType;$/;"	m	struct:NDIS_802_11_STATUS_INDICATION	file:	access:public
NDIS_802_11_STATUS_TYPE	src/drivers/driver_ndis.c	/^typedef enum NDIS_802_11_STATUS_TYPE {$/;"	g	file:
NDIS_802_11_STATUS_TYPE	src/drivers/driver_ndis.c	/^} NDIS_802_11_STATUS_TYPE;$/;"	t	typeref:enum:NDIS_802_11_STATUS_TYPE	file:
NDIS_802_11_WEP	src/drivers/driver_ndis.c	/^typedef struct NDIS_802_11_WEP {$/;"	s	file:
NDIS_802_11_WEP	src/drivers/driver_ndis.c	/^} NDIS_802_11_WEP;$/;"	t	typeref:struct:NDIS_802_11_WEP	file:
NDIS_802_11_WEP	src/drivers/driver_ralink.h	/^} NDIS_802_11_WEP, *PNDIS_802_11_WEP;$/;"	t	typeref:struct:_NDIS_802_11_WEP
NDIS_802_11_WEP::KeyIndex	src/drivers/driver_ndis.c	/^	ULONG KeyIndex;$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
NDIS_802_11_WEP::KeyLength	src/drivers/driver_ndis.c	/^	ULONG KeyLength;$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
NDIS_802_11_WEP::KeyMaterial	src/drivers/driver_ndis.c	/^	UCHAR KeyMaterial[1];$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
NDIS_802_11_WEP::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_802_11_WEP	file:	access:public
NDIS_802_11_WEP_STATUS	src/drivers/driver_ndis.c	/^typedef enum NDIS_802_11_WEP_STATUS {$/;"	g	file:
NDIS_802_11_WEP_STATUS	src/drivers/driver_ndis.c	/^} NDIS_802_11_WEP_STATUS, NDIS_802_11_ENCRYPTION_STATUS;$/;"	t	typeref:enum:NDIS_802_11_WEP_STATUS	file:
NDIS_802_11_WEP_STATUS	src/drivers/driver_ralink.h	/^} NDIS_802_11_WEP_STATUS, *PNDIS_802_11_WEP_STATUS,$/;"	t	typeref:enum:_NDIS_802_11_WEP_STATUS
NDIS_OID	src/drivers/driver_ndis.c	/^typedef ULONG NDIS_OID;$/;"	t	file:
NDIS_WLAN_BSSID	src/drivers/driver_ralink.h	/^} NDIS_WLAN_BSSID, *PNDIS_WLAN_BSSID;$/;"	t	typeref:struct:_NDIS_WLAN_BSSID
NDIS_WLAN_BSSID_EX	src/drivers/driver_ndis.c	/^typedef struct NDIS_WLAN_BSSID_EX {$/;"	s	file:
NDIS_WLAN_BSSID_EX	src/drivers/driver_ndis.c	/^} NDIS_WLAN_BSSID_EX;$/;"	t	typeref:struct:NDIS_WLAN_BSSID_EX	file:
NDIS_WLAN_BSSID_EX	src/drivers/driver_ralink.h	/^} NDIS_WLAN_BSSID_EX, *PNDIS_WLAN_BSSID_EX;$/;"	t	typeref:struct:_NDIS_WLAN_BSSID_EX
NDIS_WLAN_BSSID_EX::Configuration	src/drivers/driver_ndis.c	/^	NDIS_802_11_CONFIGURATION Configuration;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::IELength	src/drivers/driver_ndis.c	/^	ULONG IELength;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::IEs	src/drivers/driver_ndis.c	/^	UCHAR IEs[1];$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::InfrastructureMode	src/drivers/driver_ndis.c	/^	NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::Length	src/drivers/driver_ndis.c	/^	ULONG Length;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::MacAddress	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS MacAddress; \/* BSSID *\/$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::NetworkTypeInUse	src/drivers/driver_ndis.c	/^	NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::Privacy	src/drivers/driver_ndis.c	/^	ULONG Privacy;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::Reserved	src/drivers/driver_ndis.c	/^	UCHAR Reserved[2];$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::Rssi	src/drivers/driver_ndis.c	/^	NDIS_802_11_RSSI Rssi;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::Ssid	src/drivers/driver_ndis.c	/^	NDIS_802_11_SSID Ssid;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NDIS_WLAN_BSSID_EX::SupportedRates	src/drivers/driver_ndis.c	/^	NDIS_802_11_RATES_EX SupportedRates;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NEED_AES	hostapd/Android.mk	/^NEED_AES=y$/;"	m
NEED_AES	hostapd/Makefile	/^NEED_AES=y$/;"	m
NEED_AES_CBC	hostapd/Android.mk	/^NEED_AES_CBC=y$/;"	m
NEED_AES_CBC	hostapd/Makefile	/^NEED_AES_CBC=y$/;"	m
NEED_AES_CTR	hostapd/Android.mk	/^NEED_AES_CTR=y$/;"	m
NEED_AES_CTR	hostapd/Makefile	/^NEED_AES_CTR=y$/;"	m
NEED_AES_DEC	hostapd/Android.mk	/^NEED_AES_DEC=y$/;"	m
NEED_AES_DEC	hostapd/Makefile	/^NEED_AES_DEC=y$/;"	m
NEED_AES_EAX	hostapd/Android.mk	/^NEED_AES_EAX=y$/;"	m
NEED_AES_EAX	hostapd/Makefile	/^NEED_AES_EAX=y$/;"	m
NEED_AES_ENCBLOCK	hostapd/Android.mk	/^NEED_AES_ENCBLOCK=y$/;"	m
NEED_AES_ENCBLOCK	hostapd/Makefile	/^NEED_AES_ENCBLOCK=y$/;"	m
NEED_AES_OMAC1	hostapd/Android.mk	/^NEED_AES_OMAC1=y$/;"	m
NEED_AES_OMAC1	hostapd/Makefile	/^NEED_AES_OMAC1=y$/;"	m
NEED_AES_UNWRAP	hostapd/Android.mk	/^NEED_AES_UNWRAP=y$/;"	m
NEED_AES_UNWRAP	hostapd/Makefile	/^NEED_AES_UNWRAP=y$/;"	m
NEED_AP_MLME	src/drivers/drivers.mak	/^NEED_AP_MLME=y$/;"	m
NEED_AP_MLME	src/drivers/drivers.mk	/^NEED_AP_MLME=y$/;"	m
NEED_BASE64	hostapd/Android.mk	/^NEED_BASE64=y$/;"	m
NEED_BASE64	hostapd/Makefile	/^NEED_BASE64=y$/;"	m
NEED_CIPHER	hostapd/Android.mk	/^NEED_CIPHER=y$/;"	m
NEED_CIPHER	hostapd/Makefile	/^NEED_CIPHER=y$/;"	m
NEED_DES	hostapd/Android.mk	/^NEED_DES=y$/;"	m
NEED_DES	hostapd/Makefile	/^NEED_DES=y$/;"	m
NEED_DH_GROUPS	hostapd/Android.mk	/^NEED_DH_GROUPS=y$/;"	m
NEED_DH_GROUPS	hostapd/Makefile	/^NEED_DH_GROUPS=y$/;"	m
NEED_DH_GROUPS_ALL	hostapd/Android.mk	/^NEED_DH_GROUPS_ALL=y$/;"	m
NEED_DH_GROUPS_ALL	hostapd/Makefile	/^NEED_DH_GROUPS_ALL=y$/;"	m
NEED_FIPS186_2_PRF	hostapd/Android.mk	/^NEED_FIPS186_2_PRF=y$/;"	m
NEED_FIPS186_2_PRF	hostapd/Makefile	/^NEED_FIPS186_2_PRF=y$/;"	m
NEED_LINUX_IOCTL	src/drivers/drivers.mak	/^NEED_LINUX_IOCTL=y$/;"	m
NEED_LINUX_IOCTL	src/drivers/drivers.mk	/^NEED_LINUX_IOCTL=y$/;"	m
NEED_MD4	hostapd/Android.mk	/^NEED_MD4=y$/;"	m
NEED_MD4	hostapd/Makefile	/^NEED_MD4=y$/;"	m
NEED_MD5	hostapd/Android.mk	/^NEED_MD5=y$/;"	m
NEED_MD5	hostapd/Makefile	/^NEED_MD5=y$/;"	m
NEED_MODEXP	hostapd/Android.mk	/^NEED_MODEXP=y$/;"	m
NEED_MODEXP	hostapd/Makefile	/^NEED_MODEXP=y$/;"	m
NEED_NETLINK	src/drivers/drivers.mak	/^NEED_NETLINK=y$/;"	m
NEED_NETLINK	src/drivers/drivers.mk	/^NEED_NETLINK=y$/;"	m
NEED_RC4	hostapd/Android.mk	/^NEED_RC4=y$/;"	m
NEED_RC4	hostapd/Makefile	/^NEED_RC4=y$/;"	m
NEED_RFKILL	src/drivers/drivers.mak	/^NEED_RFKILL=y$/;"	m
NEED_RFKILL	src/drivers/drivers.mk	/^NEED_RFKILL=y$/;"	m
NEED_SHA1	hostapd/Android.mk	/^NEED_SHA1=y$/;"	m
NEED_SHA1	hostapd/Makefile	/^NEED_SHA1=y$/;"	m
NEED_SHA256	hostapd/Android.mk	/^NEED_SHA256=y$/;"	m
NEED_SHA256	hostapd/Makefile	/^NEED_SHA256=y$/;"	m
NEED_SME	src/drivers/drivers.mak	/^NEED_SME=y$/;"	m
NEED_SME	src/drivers/drivers.mk	/^NEED_SME=y$/;"	m
NEED_TLS_PRF	hostapd/Android.mk	/^NEED_TLS_PRF=y$/;"	m
NEED_TLS_PRF	hostapd/Makefile	/^NEED_TLS_PRF=y$/;"	m
NEED_T_PRF	hostapd/Android.mk	/^NEED_T_PRF=y$/;"	m
NEED_T_PRF	hostapd/Makefile	/^NEED_T_PRF=y$/;"	m
NEED_WPS_OOB	hostapd/Android.mk	/^NEED_WPS_OOB=y$/;"	m
NEED_WPS_OOB	hostapd/Makefile	/^NEED_WPS_OOB=y$/;"	m
NETLINK_H	src/drivers/netlink.h	16;"	d
NETLINK_ROUTE	src/drivers/priv_netlink.h	47;"	d
NL80211_ATTR_4ADDR	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_4ADDR,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_ACK	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_ACK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AKM_SUITES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_AKM_SUITES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AKM_SUITES	src/drivers/nl80211_copy.h	1456;"	d
NL80211_ATTR_AP_ISOLATE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_AP_ISOLATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AUTH_TYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_AUTH_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AUTH_TYPE	src/drivers/nl80211_copy.h	1451;"	d
NL80211_ATTR_BEACON_HEAD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BEACON_HEAD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BEACON_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BEACON_INTERVAL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BEACON_TAIL	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BEACON_TAIL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BG_SCAN_PERIOD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BG_SCAN_PERIOD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BSS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_BASIC_RATES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BSS_BASIC_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_BASIC_RATES	src/drivers/nl80211_copy.h	1441;"	d
NL80211_ATTR_BSS_CTS_PROT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BSS_CTS_PROT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_HT_OPMODE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BSS_HT_OPMODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_SHORT_PREAMBLE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BSS_SHORT_PREAMBLE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_SHORT_SLOT_TIME	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_BSS_SHORT_SLOT_TIME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CIPHER_SUITES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITES_PAIRWISE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CIPHER_SUITES_PAIRWISE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITES_PAIRWISE	src/drivers/nl80211_copy.h	1453;"	d
NL80211_ATTR_CIPHER_SUITE_GROUP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CIPHER_SUITE_GROUP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITE_GROUP	src/drivers/nl80211_copy.h	1454;"	d
NL80211_ATTR_CONTROL_PORT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CONTROL_PORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CONTROL_PORT_ETHERTYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CONTROL_PORT_ETHERTYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_COOKIE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_COOKIE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CQM	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CQM,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CQM_MAX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CQM_MAX = __NL80211_ATTR_CQM_AFTER_LAST - 1$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_PKT_LOSS_EVENT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CQM_PKT_LOSS_EVENT,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_RSSI_HYST	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CQM_RSSI_HYST,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_RSSI_THOLD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CQM_RSSI_THOLD,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_DEVICE_AP_SME	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DEVICE_AP_SME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DFS_REGION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DFS_REGION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DISABLE_HT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DISABLE_HT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DISCONNECTED_BY_AP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DISCONNECTED_BY_AP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DONT_WAIT_FOR_ACK	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DONT_WAIT_FOR_ACK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DTIM_PERIOD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DTIM_PERIOD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DURATION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_DURATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FEATURE_FLAGS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FEATURE_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FRAME	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FRAME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FRAME	src/drivers/nl80211_copy.h	1449;"	d
NL80211_ATTR_FRAME_MATCH	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FRAME_MATCH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FRAME_TYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FRAME_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_AFTER	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FREQ_AFTER,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_BEFORE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FREQ_BEFORE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_FIXED	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FREQ_FIXED,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_RANGE_END	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FREQ_RANGE_END,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_FREQ_RANGE_MAX_BW	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FREQ_RANGE_MAX_BW,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_FREQ_RANGE_START	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_FREQ_RANGE_START,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_GENERATION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_GENERATION, \/* replaces old SCAN_GENERATION *\/$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HIDDEN_SSID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_HIDDEN_SSID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HT_CAPABILITY	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_HT_CAPABILITY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HT_CAPABILITY	src/drivers/nl80211_copy.h	1440;"	d
NL80211_ATTR_HT_CAPABILITY_MASK	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_HT_CAPABILITY_MASK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_IE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE	src/drivers/nl80211_copy.h	1446;"	d
NL80211_ATTR_IE_ASSOC_RESP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_IE_ASSOC_RESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE_PROBE_RESP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_IE_PROBE_RESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFINDEX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_IFINDEX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFNAME	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_IFNAME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFTYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_IFTYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_INACTIVITY_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_INACTIVITY_TIMEOUT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_INTERFACE_COMBINATIONS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_INTERFACE_COMBINATIONS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY	src/drivers/nl80211_copy.h	1457;"	d
NL80211_ATTR_KEYS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEYS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEYS	src/drivers/nl80211_copy.h	1458;"	d
NL80211_ATTR_KEY_CIPHER	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_CIPHER,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DATA	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_DATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DEFAULT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_DEFAULT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DEFAULT_MGMT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_DEFAULT_MGMT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DEFAULT_TYPES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_DEFAULT_TYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_IDX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_IDX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_SEQ	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_SEQ,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_TYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_KEY_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_LOCAL_STATE_CHANGE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_LOCAL_STATE_CHANGE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAC	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAC,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX = __NL80211_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_MATCH_SETS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_MATCH_SETS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_NUM_PMKIDS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_NUM_PMKIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_NUM_SCAN_SSIDS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_NUM_SCAN_SSIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_NUM_SCHED_SCAN_SSIDS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_NUM_SCHED_SCAN_SSIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_REMAIN_ON_CHANNEL_DURATION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_REMAIN_ON_CHANNEL_DURATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_SCAN_IE_LEN	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_SCAN_IE_LEN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_SCHED_SCAN_IE_LEN	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MAX_SCHED_SCAN_IE_LEN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MCAST_RATE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MCAST_RATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MESH_CONFIG	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MESH_CONFIG,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MESH_ID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MESH_ID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MESH_PARAMS	src/drivers/nl80211_copy.h	1433;"	d
NL80211_ATTR_MESH_SETUP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MESH_SETUP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MGMT_SUBTYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MGMT_SUBTYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MGMT_SUBTYPE	src/drivers/nl80211_copy.h	1445;"	d
NL80211_ATTR_MNTR_FLAGS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MNTR_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MPATH_INFO	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MPATH_INFO,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MPATH_NEXT_HOP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_MPATH_NEXT_HOP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_NOACK_MAP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_NOACK_MAP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_OFFCHANNEL_TX_OK	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_OFFCHANNEL_TX_OK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PMKID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PMKID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PMKSA_CANDIDATE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PMKSA_CANDIDATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_POWER_RULE_MAX_EIRP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_POWER_RULE_MAX_EIRP,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_PREV_BSSID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PREV_BSSID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PRIVACY	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PRIVACY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PROBE_RESP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PROBE_RESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PROBE_RESP_OFFLOAD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PROBE_RESP_OFFLOAD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PS_STATE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_PS_STATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REASON_CODE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REASON_CODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REASON_CODE	src/drivers/nl80211_copy.h	1452;"	d
NL80211_ATTR_REG_ALPHA2	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REG_ALPHA2,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_INITIATOR	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REG_INITIATOR,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_INITIATOR	src/drivers/nl80211_copy.h	1447;"	d
NL80211_ATTR_REG_RULES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REG_RULES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_RULE_FLAGS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REG_RULE_FLAGS,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_REG_TYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REG_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_TYPE	src/drivers/nl80211_copy.h	1448;"	d
NL80211_ATTR_REKEY_DATA	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REKEY_DATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REQ_IE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_REQ_IE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RESP_IE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_RESP_IE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_ROAM_SUPPORT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_ROAM_SUPPORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RX_FRAME_TYPES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_RX_FRAME_TYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RX_SIGNAL_DBM	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_RX_SIGNAL_DBM,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_FREQUENCIES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SCAN_FREQUENCIES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_GENERATION	src/drivers/nl80211_copy.h	1432;"	d
NL80211_ATTR_SCAN_SSIDS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SCAN_SSIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_SUPP_RATES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SCAN_SUPP_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCHED_SCAN_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SCHED_SCAN_INTERVAL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCHED_SCAN_MATCH	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SCHED_SCAN_MATCH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCHED_SCAN_MATCH_SSID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SCHED_SCAN_MATCH_SSID,$/;"	e	enum:nl80211_sched_scan_match_attr
NL80211_ATTR_SOFTWARE_IFTYPES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SOFTWARE_IFTYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SSID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SSID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SSID	src/drivers/nl80211_copy.h	1450;"	d
NL80211_ATTR_STATUS_CODE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STATUS_CODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_AID	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_AID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_FLAGS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_FLAGS2	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_FLAGS2,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_INFO	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_INFO,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_LISTEN_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_LISTEN_INTERVAL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_PLINK_ACTION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_PLINK_ACTION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_PLINK_STATE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_PLINK_STATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_SUPPORTED_RATES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_SUPPORTED_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_VLAN	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_VLAN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_WME	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_STA_WME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORTED_COMMANDS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SUPPORTED_COMMANDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORTED_IFTYPES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SUPPORTED_IFTYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_AP_UAPSD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SUPPORT_AP_UAPSD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_IBSS_RSN	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SUPPORT_IBSS_RSN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_MESH_AUTH	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SUPPORT_MESH_AUTH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SURVEY_INFO	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_SURVEY_INFO,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_ACTION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TDLS_ACTION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_DIALOG_TOKEN	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TDLS_DIALOG_TOKEN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_EXTERNAL_SETUP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TDLS_EXTERNAL_SETUP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_OPERATION	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TDLS_OPERATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_SUPPORT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TDLS_SUPPORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TESTDATA	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TESTDATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TIMED_OUT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TIMED_OUT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TX_FRAME_TYPES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TX_FRAME_TYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TX_NO_CCK_RATE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TX_NO_CCK_RATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TX_RATES	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_TX_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_UNSPEC	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_UNSPEC,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_USE_MFP	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_USE_MFP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_AVAIL_RX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_ANTENNA_AVAIL_RX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_AVAIL_TX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_ANTENNA_AVAIL_TX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_RX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_ANTENNA_RX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_TX	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_ANTENNA_TX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_BANDS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_BANDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_CHANNEL_TYPE	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_CHANNEL_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_CHANNEL_TYPE	src/drivers/nl80211_copy.h	1444;"	d
NL80211_ATTR_WIPHY_COVERAGE_CLASS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_COVERAGE_CLASS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_FRAG_THRESHOLD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_FRAG_THRESHOLD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_FREQ	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_FREQ,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_FREQ	src/drivers/nl80211_copy.h	1443;"	d
NL80211_ATTR_WIPHY_NAME	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_NAME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_RETRY_LONG	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_RETRY_LONG,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_RETRY_SHORT	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_RETRY_SHORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_RTS_THRESHOLD	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_RTS_THRESHOLD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_TXQ_PARAMS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_TXQ_PARAMS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_TXQ_PARAMS	src/drivers/nl80211_copy.h	1442;"	d
NL80211_ATTR_WIPHY_TX_POWER_LEVEL	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_TX_POWER_LEVEL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_TX_POWER_SETTING	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WIPHY_TX_POWER_SETTING,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WOWLAN_TRIGGERS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WOWLAN_TRIGGERS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WOWLAN_TRIGGERS_SUPPORTED	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WOWLAN_TRIGGERS_SUPPORTED,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WPA_VERSIONS	src/drivers/nl80211_copy.h	/^	NL80211_ATTR_WPA_VERSIONS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WPA_VERSIONS	src/drivers/nl80211_copy.h	1455;"	d
NL80211_AUTHTYPE_AUTOMATIC	src/drivers/nl80211_copy.h	/^	NL80211_AUTHTYPE_AUTOMATIC$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_FT	src/drivers/nl80211_copy.h	/^	NL80211_AUTHTYPE_FT,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_MAX	src/drivers/nl80211_copy.h	/^	NL80211_AUTHTYPE_MAX = __NL80211_AUTHTYPE_NUM - 1,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_NETWORK_EAP	src/drivers/nl80211_copy.h	/^	NL80211_AUTHTYPE_NETWORK_EAP,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_OPEN_SYSTEM	src/drivers/nl80211_copy.h	/^	NL80211_AUTHTYPE_OPEN_SYSTEM,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_SHARED_KEY	src/drivers/nl80211_copy.h	/^	NL80211_AUTHTYPE_SHARED_KEY,$/;"	e	enum:nl80211_auth_type
NL80211_BAND_2GHZ	src/drivers/nl80211_copy.h	/^	NL80211_BAND_2GHZ,$/;"	e	enum:nl80211_band
NL80211_BAND_5GHZ	src/drivers/nl80211_copy.h	/^	NL80211_BAND_5GHZ,$/;"	e	enum:nl80211_band
NL80211_BAND_ATTR_FREQS	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_FREQS,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_AMPDU_DENSITY	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_HT_AMPDU_DENSITY,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_AMPDU_FACTOR	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_HT_AMPDU_FACTOR,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_CAPA	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_HT_CAPA,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_CAPA	src/drivers/nl80211_copy.h	1745;"	d
NL80211_BAND_ATTR_HT_MCS_SET	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_HT_MCS_SET,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_MAX = __NL80211_BAND_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_RATES	src/drivers/nl80211_copy.h	/^	NL80211_BAND_ATTR_RATES,$/;"	e	enum:nl80211_band_attr
NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE	src/drivers/nl80211_copy.h	/^	NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE,$/;"	e	enum:nl80211_bitrate_attr
NL80211_BITRATE_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_BITRATE_ATTR_MAX = __NL80211_BITRATE_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_bitrate_attr
NL80211_BITRATE_ATTR_RATE	src/drivers/nl80211_copy.h	/^	NL80211_BITRATE_ATTR_RATE,$/;"	e	enum:nl80211_bitrate_attr
NL80211_BSS_BEACON_IES	src/drivers/nl80211_copy.h	/^	NL80211_BSS_BEACON_IES,$/;"	e	enum:nl80211_bss
NL80211_BSS_BEACON_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_BSS_BEACON_INTERVAL,$/;"	e	enum:nl80211_bss
NL80211_BSS_BSSID	src/drivers/nl80211_copy.h	/^	NL80211_BSS_BSSID,$/;"	e	enum:nl80211_bss
NL80211_BSS_CAPABILITY	src/drivers/nl80211_copy.h	/^	NL80211_BSS_CAPABILITY,$/;"	e	enum:nl80211_bss
NL80211_BSS_FREQUENCY	src/drivers/nl80211_copy.h	/^	NL80211_BSS_FREQUENCY,$/;"	e	enum:nl80211_bss
NL80211_BSS_INFORMATION_ELEMENTS	src/drivers/nl80211_copy.h	/^	NL80211_BSS_INFORMATION_ELEMENTS,$/;"	e	enum:nl80211_bss
NL80211_BSS_MAX	src/drivers/nl80211_copy.h	/^	NL80211_BSS_MAX = __NL80211_BSS_AFTER_LAST - 1$/;"	e	enum:nl80211_bss
NL80211_BSS_SEEN_MS_AGO	src/drivers/nl80211_copy.h	/^	NL80211_BSS_SEEN_MS_AGO,$/;"	e	enum:nl80211_bss
NL80211_BSS_SIGNAL_MBM	src/drivers/nl80211_copy.h	/^	NL80211_BSS_SIGNAL_MBM,$/;"	e	enum:nl80211_bss
NL80211_BSS_SIGNAL_UNSPEC	src/drivers/nl80211_copy.h	/^	NL80211_BSS_SIGNAL_UNSPEC,$/;"	e	enum:nl80211_bss
NL80211_BSS_STATUS	src/drivers/nl80211_copy.h	/^	NL80211_BSS_STATUS,$/;"	e	enum:nl80211_bss
NL80211_BSS_STATUS_ASSOCIATED	src/drivers/nl80211_copy.h	/^	NL80211_BSS_STATUS_ASSOCIATED,$/;"	e	enum:nl80211_bss_status
NL80211_BSS_STATUS_AUTHENTICATED	src/drivers/nl80211_copy.h	/^	NL80211_BSS_STATUS_AUTHENTICATED,$/;"	e	enum:nl80211_bss_status
NL80211_BSS_STATUS_IBSS_JOINED	src/drivers/nl80211_copy.h	/^	NL80211_BSS_STATUS_IBSS_JOINED,$/;"	e	enum:nl80211_bss_status
NL80211_BSS_TSF	src/drivers/nl80211_copy.h	/^	NL80211_BSS_TSF,$/;"	e	enum:nl80211_bss
NL80211_CHAN_HT20	src/drivers/nl80211_copy.h	/^	NL80211_CHAN_HT20,$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_HT40MINUS	src/drivers/nl80211_copy.h	/^	NL80211_CHAN_HT40MINUS,$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_HT40PLUS	src/drivers/nl80211_copy.h	/^	NL80211_CHAN_HT40PLUS$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_NO_HT	src/drivers/nl80211_copy.h	/^	NL80211_CHAN_NO_HT,$/;"	e	enum:nl80211_channel_type
NL80211_CMD_ACTION	src/drivers/nl80211_copy.h	/^	NL80211_CMD_ACTION = NL80211_CMD_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_ACTION_TX_STATUS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_ACTION_TX_STATUS = NL80211_CMD_FRAME_TX_STATUS,$/;"	e	enum:nl80211_commands
NL80211_CMD_ASSOCIATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_ASSOCIATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_ASSOCIATE	src/drivers/nl80211_copy.h	665;"	d
NL80211_CMD_AUTHENTICATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_AUTHENTICATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_AUTHENTICATE	src/drivers/nl80211_copy.h	664;"	d
NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL	src/drivers/nl80211_copy.h	/^	NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_CONNECT	src/drivers/nl80211_copy.h	/^	NL80211_CMD_CONNECT,$/;"	e	enum:nl80211_commands
NL80211_CMD_CONNECT	src/drivers/nl80211_copy.h	1439;"	d
NL80211_CMD_DEAUTHENTICATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEAUTHENTICATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEAUTHENTICATE	src/drivers/nl80211_copy.h	666;"	d
NL80211_CMD_DEL_BEACON	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_BEACON = NL80211_CMD_STOP_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_INTERFACE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_INTERFACE,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_KEY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_MPATH	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_PMKSA	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_PMKSA,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_STATION	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_WIPHY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DEL_WIPHY,$/;"	e	enum:nl80211_commands
NL80211_CMD_DISASSOCIATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DISASSOCIATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_DISASSOCIATE	src/drivers/nl80211_copy.h	667;"	d
NL80211_CMD_DISCONNECT	src/drivers/nl80211_copy.h	/^	NL80211_CMD_DISCONNECT,$/;"	e	enum:nl80211_commands
NL80211_CMD_FLUSH_PMKSA	src/drivers/nl80211_copy.h	/^	NL80211_CMD_FLUSH_PMKSA,$/;"	e	enum:nl80211_commands
NL80211_CMD_FRAME	src/drivers/nl80211_copy.h	/^	NL80211_CMD_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_FRAME_TX_STATUS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_FRAME_TX_STATUS,$/;"	e	enum:nl80211_commands
NL80211_CMD_FRAME_WAIT_CANCEL	src/drivers/nl80211_copy.h	/^	NL80211_CMD_FRAME_WAIT_CANCEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_BEACON	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_BEACON,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_INTERFACE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_INTERFACE,	\/* can dump *\/$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_KEY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_MESH_CONFIG	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_MESH_CONFIG,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_MESH_PARAMS	src/drivers/nl80211_copy.h	671;"	d
NL80211_CMD_GET_MPATH	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_POWER_SAVE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_POWER_SAVE,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_REG	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_REG,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_SCAN	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_STATION	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_SURVEY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_SURVEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_WIPHY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_WIPHY,		\/* can dump *\/$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_WOWLAN	src/drivers/nl80211_copy.h	/^	NL80211_CMD_GET_WOWLAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_JOIN_IBSS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_JOIN_IBSS,$/;"	e	enum:nl80211_commands
NL80211_CMD_JOIN_MESH	src/drivers/nl80211_copy.h	/^	NL80211_CMD_JOIN_MESH,$/;"	e	enum:nl80211_commands
NL80211_CMD_LEAVE_IBSS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_LEAVE_IBSS,$/;"	e	enum:nl80211_commands
NL80211_CMD_LEAVE_MESH	src/drivers/nl80211_copy.h	/^	NL80211_CMD_LEAVE_MESH,$/;"	e	enum:nl80211_commands
NL80211_CMD_MAX	src/drivers/nl80211_copy.h	/^	NL80211_CMD_MAX = __NL80211_CMD_AFTER_LAST - 1$/;"	e	enum:nl80211_commands
NL80211_CMD_MICHAEL_MIC_FAILURE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_MICHAEL_MIC_FAILURE,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_BEACON	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_BEACON = NL80211_CMD_START_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_INTERFACE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_INTERFACE,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_KEY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_MPATH	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_PEER_CANDIDATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_PEER_CANDIDATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_SCAN_RESULTS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_SCAN_RESULTS,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_STATION	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_SURVEY_RESULTS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_SURVEY_RESULTS,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_WIPHY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NEW_WIPHY,$/;"	e	enum:nl80211_commands
NL80211_CMD_NOTIFY_CQM	src/drivers/nl80211_copy.h	/^	NL80211_CMD_NOTIFY_CQM,$/;"	e	enum:nl80211_commands
NL80211_CMD_PMKSA_CANDIDATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_PMKSA_CANDIDATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_REGISTER_ACTION	src/drivers/nl80211_copy.h	/^	NL80211_CMD_REGISTER_ACTION = NL80211_CMD_REGISTER_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_REGISTER_FRAME	src/drivers/nl80211_copy.h	/^	NL80211_CMD_REGISTER_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_REG_BEACON_HINT	src/drivers/nl80211_copy.h	/^	NL80211_CMD_REG_BEACON_HINT,$/;"	e	enum:nl80211_commands
NL80211_CMD_REG_BEACON_HINT	src/drivers/nl80211_copy.h	668;"	d
NL80211_CMD_REG_CHANGE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_REG_CHANGE,$/;"	e	enum:nl80211_commands
NL80211_CMD_REG_CHANGE	src/drivers/nl80211_copy.h	663;"	d
NL80211_CMD_REMAIN_ON_CHANNEL	src/drivers/nl80211_copy.h	/^	NL80211_CMD_REMAIN_ON_CHANNEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_REQ_SET_REG	src/drivers/nl80211_copy.h	/^	NL80211_CMD_REQ_SET_REG,$/;"	e	enum:nl80211_commands
NL80211_CMD_ROAM	src/drivers/nl80211_copy.h	/^	NL80211_CMD_ROAM,$/;"	e	enum:nl80211_commands
NL80211_CMD_SCAN_ABORTED	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SCAN_ABORTED,$/;"	e	enum:nl80211_commands
NL80211_CMD_SCHED_SCAN_RESULTS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SCHED_SCAN_RESULTS,$/;"	e	enum:nl80211_commands
NL80211_CMD_SCHED_SCAN_STOPPED	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SCHED_SCAN_STOPPED,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_BEACON	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_BEACON,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_BSS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_BSS,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_BSS	src/drivers/nl80211_copy.h	661;"	d
NL80211_CMD_SET_CHANNEL	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_CHANNEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_CQM	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_CQM,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_INTERFACE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_INTERFACE,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_KEY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MESH_CONFIG	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_MESH_CONFIG,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MESH_PARAMS	src/drivers/nl80211_copy.h	672;"	d
NL80211_CMD_SET_MGMT_EXTRA_IE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_MGMT_EXTRA_IE \/* reserved; not used *\/,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MGMT_EXTRA_IE	src/drivers/nl80211_copy.h	662;"	d
NL80211_CMD_SET_MPATH	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_PMKSA	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_PMKSA,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_POWER_SAVE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_POWER_SAVE,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_REG	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_REG,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_REKEY_OFFLOAD	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_REKEY_OFFLOAD,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_STATION	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_TX_BITRATE_MASK	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_TX_BITRATE_MASK,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WDS_PEER	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_WDS_PEER,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WIPHY	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_WIPHY,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WIPHY_NETNS	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_WIPHY_NETNS,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WOWLAN	src/drivers/nl80211_copy.h	/^	NL80211_CMD_SET_WOWLAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_START_AP	src/drivers/nl80211_copy.h	/^	NL80211_CMD_START_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_START_SCHED_SCAN	src/drivers/nl80211_copy.h	/^	NL80211_CMD_START_SCHED_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_STOP_AP	src/drivers/nl80211_copy.h	/^	NL80211_CMD_STOP_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_STOP_SCHED_SCAN	src/drivers/nl80211_copy.h	/^	NL80211_CMD_STOP_SCHED_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_TDLS_MGMT	src/drivers/nl80211_copy.h	/^	NL80211_CMD_TDLS_MGMT,$/;"	e	enum:nl80211_commands
NL80211_CMD_TDLS_OPER	src/drivers/nl80211_copy.h	/^	NL80211_CMD_TDLS_OPER,$/;"	e	enum:nl80211_commands
NL80211_CMD_TESTMODE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_TESTMODE,$/;"	e	enum:nl80211_commands
NL80211_CMD_TRIGGER_SCAN	src/drivers/nl80211_copy.h	/^	NL80211_CMD_TRIGGER_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNPROT_DEAUTHENTICATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_UNPROT_DEAUTHENTICATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNPROT_DISASSOCIATE	src/drivers/nl80211_copy.h	/^	NL80211_CMD_UNPROT_DISASSOCIATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNSPEC	src/drivers/nl80211_copy.h	/^	NL80211_CMD_UNSPEC,$/;"	e	enum:nl80211_commands
NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH	src/drivers/nl80211_copy.h	/^	NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH,$/;"	e	enum:nl80211_cqm_rssi_threshold_event
NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW	src/drivers/nl80211_copy.h	/^	NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW,$/;"	e	enum:nl80211_cqm_rssi_threshold_event
NL80211_FEATURE_HT_IBSS	src/drivers/nl80211_copy.h	/^	NL80211_FEATURE_HT_IBSS		= 1 << 1,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_INACTIVITY_TIMER	src/drivers/nl80211_copy.h	/^	NL80211_FEATURE_INACTIVITY_TIMER = 1 << 2,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_SK_TX_STATUS	src/drivers/nl80211_copy.h	/^	NL80211_FEATURE_SK_TX_STATUS	= 1 << 0,$/;"	e	enum:nl80211_feature_flags
NL80211_FREQUENCY_ATTR_DISABLED	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_DISABLED,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_FREQ	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_FREQ,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_MAX = __NL80211_FREQUENCY_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_MAX_TX_POWER	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_MAX_TX_POWER,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_MAX_TX_POWER	src/drivers/nl80211_copy.h	1779;"	d
NL80211_FREQUENCY_ATTR_NO_IBSS	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_NO_IBSS,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_PASSIVE_SCAN	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_PASSIVE_SCAN,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_RADAR	src/drivers/nl80211_copy.h	/^	NL80211_FREQUENCY_ATTR_RADAR,$/;"	e	enum:nl80211_frequency_attr
NL80211_HIDDEN_SSID_NOT_IN_USE	src/drivers/nl80211_copy.h	/^	NL80211_HIDDEN_SSID_NOT_IN_USE,$/;"	e	enum:nl80211_hidden_ssid
NL80211_HIDDEN_SSID_ZERO_CONTENTS	src/drivers/nl80211_copy.h	/^	NL80211_HIDDEN_SSID_ZERO_CONTENTS$/;"	e	enum:nl80211_hidden_ssid
NL80211_HIDDEN_SSID_ZERO_LEN	src/drivers/nl80211_copy.h	/^	NL80211_HIDDEN_SSID_ZERO_LEN,$/;"	e	enum:nl80211_hidden_ssid
NL80211_HT_CAPABILITY_LEN	src/drivers/nl80211_copy.h	1466;"	d
NL80211_IFACE_COMB_LIMITS	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_COMB_LIMITS,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_MAXNUM	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_COMB_MAXNUM,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_NUM_CHANNELS	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_COMB_NUM_CHANNELS,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_STA_AP_BI_MATCH	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_COMB_STA_AP_BI_MATCH,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_UNSPEC	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_COMB_UNSPEC,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_LIMIT_MAX	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_LIMIT_MAX,$/;"	e	enum:nl80211_iface_limit_attrs
NL80211_IFACE_LIMIT_TYPES	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_LIMIT_TYPES,$/;"	e	enum:nl80211_iface_limit_attrs
NL80211_IFACE_LIMIT_UNSPEC	src/drivers/nl80211_copy.h	/^	NL80211_IFACE_LIMIT_UNSPEC,$/;"	e	enum:nl80211_iface_limit_attrs
NL80211_IFTYPE_ADHOC	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_ADHOC,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_AP	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_AP,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_AP_VLAN	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_AP_VLAN,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_MAX	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_MAX = NUM_NL80211_IFTYPES - 1$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_MESH_POINT	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_MESH_POINT,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_MONITOR	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_MONITOR,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_P2P_CLIENT	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_P2P_CLIENT,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_P2P_GO	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_P2P_GO,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_STATION	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_STATION,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_UNSPECIFIED	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_UNSPECIFIED,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_WDS	src/drivers/nl80211_copy.h	/^	NL80211_IFTYPE_WDS,$/;"	e	enum:nl80211_iftype
NL80211_KCK_LEN	src/drivers/nl80211_copy.h	2656;"	d
NL80211_KEK_LEN	src/drivers/nl80211_copy.h	2657;"	d
NL80211_KEYTYPE_GROUP	src/drivers/nl80211_copy.h	/^	NL80211_KEYTYPE_GROUP,$/;"	e	enum:nl80211_key_type
NL80211_KEYTYPE_PAIRWISE	src/drivers/nl80211_copy.h	/^	NL80211_KEYTYPE_PAIRWISE,$/;"	e	enum:nl80211_key_type
NL80211_KEYTYPE_PEERKEY	src/drivers/nl80211_copy.h	/^	NL80211_KEYTYPE_PEERKEY,$/;"	e	enum:nl80211_key_type
NL80211_KEY_CIPHER	src/drivers/nl80211_copy.h	/^	NL80211_KEY_CIPHER,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DATA	src/drivers/nl80211_copy.h	/^	NL80211_KEY_DATA,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT	src/drivers/nl80211_copy.h	/^	NL80211_KEY_DEFAULT,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT_MGMT	src/drivers/nl80211_copy.h	/^	NL80211_KEY_DEFAULT_MGMT,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT_TYPES	src/drivers/nl80211_copy.h	/^	NL80211_KEY_DEFAULT_TYPES,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT_TYPE_MULTICAST	src/drivers/nl80211_copy.h	/^	NL80211_KEY_DEFAULT_TYPE_MULTICAST,$/;"	e	enum:nl80211_key_default_types
NL80211_KEY_DEFAULT_TYPE_UNICAST	src/drivers/nl80211_copy.h	/^	NL80211_KEY_DEFAULT_TYPE_UNICAST,$/;"	e	enum:nl80211_key_default_types
NL80211_KEY_IDX	src/drivers/nl80211_copy.h	/^	NL80211_KEY_IDX,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_MAX	src/drivers/nl80211_copy.h	/^	NL80211_KEY_MAX = __NL80211_KEY_AFTER_LAST - 1$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_SEQ	src/drivers/nl80211_copy.h	/^	NL80211_KEY_SEQ,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_TYPE	src/drivers/nl80211_copy.h	/^	NL80211_KEY_TYPE,$/;"	e	enum:nl80211_key_attributes
NL80211_MAX_NR_AKM_SUITES	src/drivers/nl80211_copy.h	1469;"	d
NL80211_MAX_NR_CIPHER_SUITES	src/drivers/nl80211_copy.h	1468;"	d
NL80211_MAX_SUPP_HT_RATES	src/drivers/nl80211_copy.h	1461;"	d
NL80211_MAX_SUPP_RATES	src/drivers/nl80211_copy.h	1460;"	d
NL80211_MAX_SUPP_REG_RULES	src/drivers/nl80211_copy.h	1462;"	d
NL80211_MESHCONF_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_ATTR_MAX = __NL80211_MESHCONF_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_AUTO_OPEN_PLINKS	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_AUTO_OPEN_PLINKS,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_CONFIRM_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_CONFIRM_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_ELEMENT_TTL	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_ELEMENT_TTL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_FORWARDING	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_FORWARDING,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_GATE_ANNOUNCEMENTS	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_GATE_ANNOUNCEMENTS,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HOLDING_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HOLDING_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_PERR_MIN_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_PERR_MIN_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_RANN_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_RANN_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_ROOTMODE	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_HWMP_ROOTMODE,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_MAX_PEER_LINKS	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_MAX_PEER_LINKS,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_MAX_RETRIES	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_MAX_RETRIES,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_PATH_REFRESH_TIME	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_PATH_REFRESH_TIME,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_RETRY_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_RETRY_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_RSSI_THRESHOLD	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_RSSI_THRESHOLD,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_TTL	src/drivers/nl80211_copy.h	/^	NL80211_MESHCONF_TTL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESH_SETUP_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_MESH_SETUP_ATTR_MAX = __NL80211_MESH_SETUP_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_ENABLE_VENDOR_METRIC	src/drivers/nl80211_copy.h	/^	NL80211_MESH_SETUP_ENABLE_VENDOR_METRIC,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_ENABLE_VENDOR_PATH_SEL	src/drivers/nl80211_copy.h	/^	NL80211_MESH_SETUP_ENABLE_VENDOR_PATH_SEL,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_IE	src/drivers/nl80211_copy.h	/^	NL80211_MESH_SETUP_IE,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_USERSPACE_AMPE	src/drivers/nl80211_copy.h	/^	NL80211_MESH_SETUP_USERSPACE_AMPE,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_USERSPACE_AUTH	src/drivers/nl80211_copy.h	/^	NL80211_MESH_SETUP_USERSPACE_AUTH,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_VENDOR_PATH_SEL_IE	src/drivers/nl80211_copy.h	673;"	d
NL80211_MFP_NO	src/drivers/nl80211_copy.h	/^	NL80211_MFP_NO,$/;"	e	enum:nl80211_mfp
NL80211_MFP_REQUIRED	src/drivers/nl80211_copy.h	/^	NL80211_MFP_REQUIRED,$/;"	e	enum:nl80211_mfp
NL80211_MNTR_FLAG_CONTROL	src/drivers/nl80211_copy.h	/^	NL80211_MNTR_FLAG_CONTROL,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_COOK_FRAMES	src/drivers/nl80211_copy.h	/^	NL80211_MNTR_FLAG_COOK_FRAMES,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_FCSFAIL	src/drivers/nl80211_copy.h	/^	NL80211_MNTR_FLAG_FCSFAIL,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_MAX	src/drivers/nl80211_copy.h	/^	NL80211_MNTR_FLAG_MAX = __NL80211_MNTR_FLAG_AFTER_LAST - 1$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_OTHER_BSS	src/drivers/nl80211_copy.h	/^	NL80211_MNTR_FLAG_OTHER_BSS,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_PLCPFAIL	src/drivers/nl80211_copy.h	/^	NL80211_MNTR_FLAG_PLCPFAIL,$/;"	e	enum:nl80211_mntr_flags
NL80211_MPATH_FLAG_ACTIVE	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_FLAG_ACTIVE =	1<<0,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_FIXED	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_FLAG_FIXED =	1<<3,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_RESOLVED	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_FLAG_RESOLVED =	1<<4,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_RESOLVING	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_FLAG_RESOLVING =	1<<1,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_SN_VALID	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_FLAG_SN_VALID =	1<<2,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_INFO_DISCOVERY_RETRIES	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_DISCOVERY_RETRIES,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_DISCOVERY_TIMEOUT	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_DISCOVERY_TIMEOUT,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_EXPTIME	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_EXPTIME,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_FLAGS	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_FLAGS,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_FRAME_QLEN	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_FRAME_QLEN,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_MAX	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_MAX = __NL80211_MPATH_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_METRIC	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_METRIC,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_SN	src/drivers/nl80211_copy.h	/^	NL80211_MPATH_INFO_SN,$/;"	e	enum:nl80211_mpath_info
NL80211_PLINK_BLOCKED	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_BLOCKED,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_CNF_RCVD	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_CNF_RCVD,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_ESTAB	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_ESTAB,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_HOLDING	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_HOLDING,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_LISTEN	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_LISTEN,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_OPN_RCVD	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_OPN_RCVD,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_OPN_SNT	src/drivers/nl80211_copy.h	/^	NL80211_PLINK_OPN_SNT,$/;"	e	enum:nl80211_plink_state
NL80211_PMKSA_CANDIDATE_BSSID	src/drivers/nl80211_copy.h	/^	NL80211_PMKSA_CANDIDATE_BSSID,$/;"	e	enum:nl80211_pmksa_candidate_attr
NL80211_PMKSA_CANDIDATE_INDEX	src/drivers/nl80211_copy.h	/^	NL80211_PMKSA_CANDIDATE_INDEX,$/;"	e	enum:nl80211_pmksa_candidate_attr
NL80211_PMKSA_CANDIDATE_PREAUTH	src/drivers/nl80211_copy.h	/^	NL80211_PMKSA_CANDIDATE_PREAUTH,$/;"	e	enum:nl80211_pmksa_candidate_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_80211U	src/drivers/nl80211_copy.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_80211U =	1<<3,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_P2P	src/drivers/nl80211_copy.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_P2P =	1<<2,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS	src/drivers/nl80211_copy.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS =	1<<0,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS2	src/drivers/nl80211_copy.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS2 =	1<<1,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PS_DISABLED	src/drivers/nl80211_copy.h	/^	NL80211_PS_DISABLED,$/;"	e	enum:nl80211_ps_state
NL80211_PS_ENABLED	src/drivers/nl80211_copy.h	/^	NL80211_PS_ENABLED,$/;"	e	enum:nl80211_ps_state
NL80211_RATE_INFO_40_MHZ_WIDTH	src/drivers/nl80211_copy.h	/^	NL80211_RATE_INFO_40_MHZ_WIDTH,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_BITRATE	src/drivers/nl80211_copy.h	/^	NL80211_RATE_INFO_BITRATE,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_MAX	src/drivers/nl80211_copy.h	/^	NL80211_RATE_INFO_MAX = __NL80211_RATE_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_MCS	src/drivers/nl80211_copy.h	/^	NL80211_RATE_INFO_MCS,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_SHORT_GI	src/drivers/nl80211_copy.h	/^	NL80211_RATE_INFO_SHORT_GI,$/;"	e	enum:nl80211_rate_info
NL80211_REGDOM_SET_BY_CORE	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_SET_BY_CORE,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_SET_BY_COUNTRY_IE	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_SET_BY_COUNTRY_IE,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_SET_BY_DRIVER	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_SET_BY_DRIVER,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_SET_BY_USER	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_SET_BY_USER,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_TYPE_COUNTRY	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_TYPE_COUNTRY,$/;"	e	enum:nl80211_reg_type
NL80211_REGDOM_TYPE_CUSTOM_WORLD	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_TYPE_CUSTOM_WORLD,$/;"	e	enum:nl80211_reg_type
NL80211_REGDOM_TYPE_INTERSECTION	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_TYPE_INTERSECTION,$/;"	e	enum:nl80211_reg_type
NL80211_REGDOM_TYPE_WORLD	src/drivers/nl80211_copy.h	/^	NL80211_REGDOM_TYPE_WORLD,$/;"	e	enum:nl80211_reg_type
NL80211_REG_RULE_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_REG_RULE_ATTR_MAX = __NL80211_REG_RULE_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_reg_rule_attr
NL80211_REKEY_DATA_KCK	src/drivers/nl80211_copy.h	/^	NL80211_REKEY_DATA_KCK,$/;"	e	enum:nl80211_rekey_data
NL80211_REKEY_DATA_KEK	src/drivers/nl80211_copy.h	/^	NL80211_REKEY_DATA_KEK,$/;"	e	enum:nl80211_rekey_data
NL80211_REKEY_DATA_REPLAY_CTR	src/drivers/nl80211_copy.h	/^	NL80211_REKEY_DATA_REPLAY_CTR,$/;"	e	enum:nl80211_rekey_data
NL80211_REPLAY_CTR_LEN	src/drivers/nl80211_copy.h	2658;"	d
NL80211_RRF_DFS	src/drivers/nl80211_copy.h	/^	NL80211_RRF_DFS			= 1<<4,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_CCK	src/drivers/nl80211_copy.h	/^	NL80211_RRF_NO_CCK		= 1<<1,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_IBSS	src/drivers/nl80211_copy.h	/^	NL80211_RRF_NO_IBSS		= 1<<8,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_INDOOR	src/drivers/nl80211_copy.h	/^	NL80211_RRF_NO_INDOOR		= 1<<2,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_OFDM	src/drivers/nl80211_copy.h	/^	NL80211_RRF_NO_OFDM		= 1<<0,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_OUTDOOR	src/drivers/nl80211_copy.h	/^	NL80211_RRF_NO_OUTDOOR		= 1<<3,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_PASSIVE_SCAN	src/drivers/nl80211_copy.h	/^	NL80211_RRF_PASSIVE_SCAN	= 1<<7,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_PTMP_ONLY	src/drivers/nl80211_copy.h	/^	NL80211_RRF_PTMP_ONLY		= 1<<6,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_PTP_ONLY	src/drivers/nl80211_copy.h	/^	NL80211_RRF_PTP_ONLY		= 1<<5,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_SCHED_SCAN_MATCH_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_SCHED_SCAN_MATCH_ATTR_MAX =$/;"	e	enum:nl80211_sched_scan_match_attr
NL80211_STA_BSS_PARAM_BEACON_INTERVAL	src/drivers/nl80211_copy.h	/^	NL80211_STA_BSS_PARAM_BEACON_INTERVAL,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_CTS_PROT	src/drivers/nl80211_copy.h	/^	NL80211_STA_BSS_PARAM_CTS_PROT,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_DTIM_PERIOD	src/drivers/nl80211_copy.h	/^	NL80211_STA_BSS_PARAM_DTIM_PERIOD,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_MAX	src/drivers/nl80211_copy.h	/^	NL80211_STA_BSS_PARAM_MAX = __NL80211_STA_BSS_PARAM_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_SHORT_PREAMBLE	src/drivers/nl80211_copy.h	/^	NL80211_STA_BSS_PARAM_SHORT_PREAMBLE,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_SHORT_SLOT_TIME	src/drivers/nl80211_copy.h	/^	NL80211_STA_BSS_PARAM_SHORT_SLOT_TIME,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_FLAG_AUTHENTICATED	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_AUTHENTICATED,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_AUTHORIZED	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_AUTHORIZED,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_MAX	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_MAX = __NL80211_STA_FLAG_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_MFP	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_MFP,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_SHORT_PREAMBLE	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_SHORT_PREAMBLE,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_TDLS_PEER	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_TDLS_PEER,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_WME	src/drivers/nl80211_copy.h	/^	NL80211_STA_FLAG_WME,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_INFO_BSS_PARAM	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_BSS_PARAM,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_CONNECTED_TIME	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_CONNECTED_TIME,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_INACTIVE_TIME	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_INACTIVE_TIME,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_LLID	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_LLID,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_MAX	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_MAX = __NL80211_STA_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_PLID	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_PLID,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_PLINK_STATE	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_PLINK_STATE,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_BITRATE	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_RX_BITRATE,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_BYTES	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_RX_BYTES,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_PACKETS	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_RX_PACKETS,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_SIGNAL	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_SIGNAL,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_SIGNAL_AVG	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_SIGNAL_AVG,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_BITRATE	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_TX_BITRATE,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_BYTES	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_TX_BYTES,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_FAILED	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_TX_FAILED,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_PACKETS	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_TX_PACKETS,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_RETRIES	src/drivers/nl80211_copy.h	/^	NL80211_STA_INFO_TX_RETRIES,$/;"	e	enum:nl80211_sta_info
NL80211_STA_WME_MAX	src/drivers/nl80211_copy.h	/^	NL80211_STA_WME_MAX = __NL80211_STA_WME_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_wme_attr
NL80211_STA_WME_MAX_SP	src/drivers/nl80211_copy.h	/^	NL80211_STA_WME_MAX_SP,$/;"	e	enum:nl80211_sta_wme_attr
NL80211_STA_WME_UAPSD_QUEUES	src/drivers/nl80211_copy.h	/^	NL80211_STA_WME_UAPSD_QUEUES,$/;"	e	enum:nl80211_sta_wme_attr
NL80211_SURVEY_INFO_CHANNEL_TIME	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_BUSY	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_BUSY,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_EXT_BUSY	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_EXT_BUSY,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_RX	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_RX,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_TX	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_TX,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_FREQUENCY	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_FREQUENCY,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_IN_USE	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_IN_USE,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_MAX	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_MAX = __NL80211_SURVEY_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_NOISE	src/drivers/nl80211_copy.h	/^	NL80211_SURVEY_INFO_NOISE,$/;"	e	enum:nl80211_survey_info
NL80211_TDLS_DISABLE_LINK	src/drivers/nl80211_copy.h	/^	NL80211_TDLS_DISABLE_LINK,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_DISCOVERY_REQ	src/drivers/nl80211_copy.h	/^	NL80211_TDLS_DISCOVERY_REQ,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_ENABLE_LINK	src/drivers/nl80211_copy.h	/^	NL80211_TDLS_ENABLE_LINK,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_SETUP	src/drivers/nl80211_copy.h	/^	NL80211_TDLS_SETUP,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_TEARDOWN	src/drivers/nl80211_copy.h	/^	NL80211_TDLS_TEARDOWN,$/;"	e	enum:nl80211_tdls_operation
NL80211_TKIP_DATA_OFFSET_ENCR_KEY	src/drivers/nl80211_copy.h	1463;"	d
NL80211_TKIP_DATA_OFFSET_RX_MIC_KEY	src/drivers/nl80211_copy.h	1465;"	d
NL80211_TKIP_DATA_OFFSET_TX_MIC_KEY	src/drivers/nl80211_copy.h	1464;"	d
NL80211_TXQ_ATTR_AIFS	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_ATTR_AIFS,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_CWMAX	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_ATTR_CWMAX,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_CWMIN	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_ATTR_CWMIN,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_MAX	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_ATTR_MAX = __NL80211_TXQ_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_QUEUE	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_ATTR_QUEUE,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_TXOP	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_ATTR_TXOP,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_Q_BE	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_Q_BE,$/;"	e	enum:nl80211_txq_q
NL80211_TXQ_Q_BK	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_Q_BK$/;"	e	enum:nl80211_txq_q
NL80211_TXQ_Q_VI	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_Q_VI,$/;"	e	enum:nl80211_txq_q
NL80211_TXQ_Q_VO	src/drivers/nl80211_copy.h	/^	NL80211_TXQ_Q_VO,$/;"	e	enum:nl80211_txq_q
NL80211_TXRATE_LEGACY	src/drivers/nl80211_copy.h	/^	NL80211_TXRATE_LEGACY,$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TXRATE_MAX	src/drivers/nl80211_copy.h	/^	NL80211_TXRATE_MAX = __NL80211_TXRATE_AFTER_LAST - 1$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TXRATE_MCS	src/drivers/nl80211_copy.h	/^	NL80211_TXRATE_MCS,$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TX_POWER_AUTOMATIC	src/drivers/nl80211_copy.h	/^	NL80211_TX_POWER_AUTOMATIC,$/;"	e	enum:nl80211_tx_power_setting
NL80211_TX_POWER_FIXED	src/drivers/nl80211_copy.h	/^	NL80211_TX_POWER_FIXED,$/;"	e	enum:nl80211_tx_power_setting
NL80211_TX_POWER_LIMITED	src/drivers/nl80211_copy.h	/^	NL80211_TX_POWER_LIMITED,$/;"	e	enum:nl80211_tx_power_setting
NL80211_WOWLAN_PKTPAT_MASK	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_PKTPAT_MASK,$/;"	e	enum:nl80211_wowlan_packet_pattern_attr
NL80211_WOWLAN_PKTPAT_PATTERN	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_PKTPAT_PATTERN,$/;"	e	enum:nl80211_wowlan_packet_pattern_attr
NL80211_WOWLAN_TRIG_4WAY_HANDSHAKE	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_4WAY_HANDSHAKE,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_ANY	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_ANY,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_DISCONNECT	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_DISCONNECT,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_EAP_IDENT_REQUEST	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_EAP_IDENT_REQUEST,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_GTK_REKEY_FAILURE	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_GTK_REKEY_FAILURE,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_GTK_REKEY_SUPPORTED	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_GTK_REKEY_SUPPORTED,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_MAGIC_PKT	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_MAGIC_PKT,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_PKT_PATTERN	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_PKT_PATTERN,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_RFKILL_RELEASE	src/drivers/nl80211_copy.h	/^	NL80211_WOWLAN_TRIG_RFKILL_RELEASE,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WPA_VERSION_1	src/drivers/nl80211_copy.h	/^	NL80211_WPA_VERSION_1 = 1 << 0,$/;"	e	enum:nl80211_wpa_versions
NL80211_WPA_VERSION_2	src/drivers/nl80211_copy.h	/^	NL80211_WPA_VERSION_2 = 1 << 1,$/;"	e	enum:nl80211_wpa_versions
NLMSG_ALIGN	src/drivers/priv_netlink.h	55;"	d
NLMSG_ALIGNTO	src/drivers/priv_netlink.h	54;"	d
NLMSG_DATA	src/drivers/priv_netlink.h	59;"	d
NLMSG_HDRLEN	src/drivers/priv_netlink.h	56;"	d
NLMSG_LENGTH	src/drivers/priv_netlink.h	57;"	d
NLMSG_NEXT	src/drivers/priv_netlink.h	60;"	d
NLMSG_OK	src/drivers/priv_netlink.h	63;"	d
NLMSG_PAYLOAD	src/drivers/priv_netlink.h	66;"	d
NLMSG_SPACE	src/drivers/priv_netlink.h	58;"	d
NLM_F_REQUEST	src/drivers/priv_netlink.h	45;"	d
NOBJS	hostapd/Makefile	/^NOBJS = nt_password_hash.o ..\/src\/crypto\/ms_funcs.o $(SHA1OBJS) ..\/src\/crypto\/md5.o$/;"	m
NOTIFICATION	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
NOTIFICATION	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
NOTIFY	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
NO_ACCESS	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
NO_ADDITIONAL_SAS	src/eap_common/ikev2_common.h	/^	NO_ADDITIONAL_SAS = 35,$/;"	e	enum:__anon124
NO_BINDING	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon172	file:
NO_BINDING	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon162	file:
NO_DOMAIN_NAME_RESOLUTION	src/wps/wps_upnp.c	200;"	d	file:
NO_ID_REQ	src/eap_common/eap_sim_common.h	/^	NO_ID_REQ, ANY_ID, FULLAUTH_ID, PERMANENT_ID$/;"	e	enum:eap_sim_id_req
NO_MGMT_FRAME_PROTECTION	src/common/defs.h	/^	NO_MGMT_FRAME_PROTECTION = 0,$/;"	e	enum:mfp_options
NO_PROPOSAL_CHOSEN	src/eap_common/ikev2_common.h	/^	NO_PROPOSAL_CHOSEN = 14,$/;"	e	enum:__anon124
NO_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
NO_RECOMMENDATION	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
NO_SHA256_WRAPPER	src/crypto/crypto_openssl.c	67;"	d	file:
NO_SHA256_WRAPPER	src/crypto/crypto_openssl.c	74;"	d	file:
NO_SSID_HIDING	src/drivers/driver.h	/^	NO_SSID_HIDING,$/;"	e	enum:hide_ssid
NUM_DH_GROUPS	src/crypto/dh_groups.c	534;"	d	file:
NUM_ELEMS	src/tls/tlsv1_common.c	56;"	d	file:
NUM_ENCR_ALGS	src/eap_common/ikev2_common.c	46;"	d	file:
NUM_HOSTAPD_MODES	src/common/defs.h	/^	NUM_HOSTAPD_MODES$/;"	e	enum:hostapd_hw_mode
NUM_INTEG_ALGS	src/eap_common/ikev2_common.c	30;"	d	file:
NUM_NL80211_IFACE_COMB	src/drivers/nl80211_copy.h	/^	NUM_NL80211_IFACE_COMB,$/;"	e	enum:nl80211_if_combination_attrs
NUM_NL80211_IFACE_LIMIT	src/drivers/nl80211_copy.h	/^	NUM_NL80211_IFACE_LIMIT,$/;"	e	enum:nl80211_iface_limit_attrs
NUM_NL80211_IFTYPES	src/drivers/nl80211_copy.h	/^	NUM_NL80211_IFTYPES,$/;"	e	enum:nl80211_iftype
NUM_NL80211_KEYTYPES	src/drivers/nl80211_copy.h	/^	NUM_NL80211_KEYTYPES$/;"	e	enum:nl80211_key_type
NUM_NL80211_KEY_DEFAULT_TYPES	src/drivers/nl80211_copy.h	/^	NUM_NL80211_KEY_DEFAULT_TYPES$/;"	e	enum:nl80211_key_default_types
NUM_NL80211_PLINK_STATES	src/drivers/nl80211_copy.h	/^	NUM_NL80211_PLINK_STATES,$/;"	e	enum:nl80211_plink_state
NUM_NL80211_PMKSA_CANDIDATE	src/drivers/nl80211_copy.h	/^	NUM_NL80211_PMKSA_CANDIDATE,$/;"	e	enum:nl80211_pmksa_candidate_attr
NUM_NL80211_REKEY_DATA	src/drivers/nl80211_copy.h	/^	NUM_NL80211_REKEY_DATA,$/;"	e	enum:nl80211_rekey_data
NUM_NL80211_WOWLAN_PKTPAT	src/drivers/nl80211_copy.h	/^	NUM_NL80211_WOWLAN_PKTPAT,$/;"	e	enum:nl80211_wowlan_packet_pattern_attr
NUM_NL80211_WOWLAN_TRIG	src/drivers/nl80211_copy.h	/^	NUM_NL80211_WOWLAN_TRIG,$/;"	e	enum:nl80211_wowlan_triggers
NUM_PRF_ALGS	src/eap_common/ikev2_common.c	38;"	d	file:
NUM_RFKILL_TYPES	src/drivers/rfkill.c	/^	NUM_RFKILL_TYPES,$/;"	e	enum:rfkill_type	file:
NUM_TLS_CIPHER_DATA	src/tls/tlsv1_common.c	83;"	d	file:
NUM_TLS_CIPHER_SUITES	src/tls/tlsv1_common.c	57;"	d	file:
NUM_TX_QUEUES	src/ap/ap_config.h	129;"	d
NUM_WEP_KEYS	src/ap/ap_config.h	39;"	d
NUM_WPA_CTRL_REQS	src/common/defs.h	/^	NUM_WPA_CTRL_REQS$/;"	e	enum:wpa_ctrl_req_type
NUM_WPS_EI_VALUES	src/wps/wps_defs.h	/^	NUM_WPS_EI_VALUES$/;"	e	enum:wps_error_indication
Ndis802_11AuthModeAutoSwitch	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeAutoSwitch,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeAutoSwitch	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeAutoSwitch,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeMax	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeMax$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeMax	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeMax           \/\/ Not a real mode, defined as upper bound$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeOpen	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeOpen,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeOpen	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeOpen,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeShared	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeShared,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeShared	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeShared,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeWPA	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeWPA,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeWPA	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeWPA,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeWPA2	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeWPA2,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeWPA2	src/drivers/driver_ndis.c	308;"	d	file:
Ndis802_11AuthModeWPA2	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeWPA2,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeWPA2PSK	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeWPA2PSK,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeWPA2PSK	src/drivers/driver_ndis.c	309;"	d	file:
Ndis802_11AuthModeWPA2PSK	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeWPA2PSK,    $/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeWPANone	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeWPANone,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeWPANone	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeWPANone,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AuthModeWPAPSK	src/drivers/driver_ndis.c	/^	Ndis802_11AuthModeWPAPSK,$/;"	e	enum:NDIS_802_11_AUTHENTICATION_MODE	file:
Ndis802_11AuthModeWPAPSK	src/drivers/driver_ralink.h	/^   Ndis802_11AuthModeWPAPSK,$/;"	e	enum:_NDIS_802_11_AUTHENTICATION_MODE
Ndis802_11AutoUnknown	src/drivers/driver_ndis.c	/^	Ndis802_11AutoUnknown,$/;"	e	enum:NDIS_802_11_NETWORK_INFRASTRUCTURE	file:
Ndis802_11AutoUnknown	src/drivers/driver_ralink.h	/^   Ndis802_11AutoUnknown,$/;"	e	enum:_NDIS_802_11_NETWORK_INFRASTRUCTURE
Ndis802_11Automode	src/drivers/driver_ralink.h	/^    Ndis802_11Automode,$/;"	e	enum:_NDIS_802_11_NETWORK_TYPE
Ndis802_11DS	src/drivers/driver_ndis.c	/^	Ndis802_11DS,$/;"	e	enum:NDIS_802_11_NETWORK_TYPE	file:
Ndis802_11DS	src/drivers/driver_ralink.h	/^    Ndis802_11DS, $/;"	e	enum:_NDIS_802_11_NETWORK_TYPE
Ndis802_11Encryption1Enabled	src/drivers/driver_ndis.c	/^	Ndis802_11Encryption1Enabled = Ndis802_11WEPEnabled,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11Encryption1Enabled	src/drivers/driver_ralink.h	/^   Ndis802_11Encryption1Enabled = Ndis802_11WEPEnabled,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11Encryption1KeyAbsent	src/drivers/driver_ndis.c	/^	Ndis802_11Encryption1KeyAbsent = Ndis802_11WEPKeyAbsent,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11Encryption1KeyAbsent	src/drivers/driver_ralink.h	/^   Ndis802_11Encryption1KeyAbsent = Ndis802_11WEPKeyAbsent,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11Encryption2Enabled	src/drivers/driver_ndis.c	/^	Ndis802_11Encryption2Enabled,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11Encryption2Enabled	src/drivers/driver_ralink.h	/^   Ndis802_11Encryption2Enabled,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11Encryption2KeyAbsent	src/drivers/driver_ndis.c	/^	Ndis802_11Encryption2KeyAbsent,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11Encryption2KeyAbsent	src/drivers/driver_ralink.h	/^   Ndis802_11Encryption2KeyAbsent,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11Encryption3Enabled	src/drivers/driver_ndis.c	/^	Ndis802_11Encryption3Enabled,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11Encryption3Enabled	src/drivers/driver_ralink.h	/^   Ndis802_11Encryption3Enabled,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11Encryption3KeyAbsent	src/drivers/driver_ndis.c	/^	Ndis802_11Encryption3KeyAbsent$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11Encryption3KeyAbsent	src/drivers/driver_ralink.h	/^   Ndis802_11Encryption3KeyAbsent$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11EncryptionDisabled	src/drivers/driver_ndis.c	/^	Ndis802_11EncryptionDisabled = Ndis802_11WEPDisabled,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11EncryptionDisabled	src/drivers/driver_ralink.h	/^   Ndis802_11EncryptionDisabled = Ndis802_11WEPDisabled,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11EncryptionNotSupported	src/drivers/driver_ndis.c	/^	Ndis802_11EncryptionNotSupported = Ndis802_11WEPNotSupported,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11EncryptionNotSupported	src/drivers/driver_ralink.h	/^   Ndis802_11EncryptionNotSupported = Ndis802_11WEPNotSupported,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11FH	src/drivers/driver_ndis.c	/^	Ndis802_11FH,$/;"	e	enum:NDIS_802_11_NETWORK_TYPE	file:
Ndis802_11FH	src/drivers/driver_ralink.h	/^    Ndis802_11FH, $/;"	e	enum:_NDIS_802_11_NETWORK_TYPE
Ndis802_11IBSS	src/drivers/driver_ndis.c	/^	Ndis802_11IBSS,$/;"	e	enum:NDIS_802_11_NETWORK_INFRASTRUCTURE	file:
Ndis802_11IBSS	src/drivers/driver_ralink.h	/^   Ndis802_11IBSS,$/;"	e	enum:_NDIS_802_11_NETWORK_INFRASTRUCTURE
Ndis802_11Infrastructure	src/drivers/driver_ndis.c	/^	Ndis802_11Infrastructure,$/;"	e	enum:NDIS_802_11_NETWORK_INFRASTRUCTURE	file:
Ndis802_11Infrastructure	src/drivers/driver_ralink.h	/^   Ndis802_11Infrastructure,$/;"	e	enum:_NDIS_802_11_NETWORK_INFRASTRUCTURE
Ndis802_11InfrastructureMax	src/drivers/driver_ndis.c	/^	Ndis802_11InfrastructureMax$/;"	e	enum:NDIS_802_11_NETWORK_INFRASTRUCTURE	file:
Ndis802_11InfrastructureMax	src/drivers/driver_ralink.h	/^   Ndis802_11InfrastructureMax     \/\/ Not a real value, defined as upper bound$/;"	e	enum:_NDIS_802_11_NETWORK_INFRASTRUCTURE
Ndis802_11NetworkTypeMax	src/drivers/driver_ndis.c	/^	Ndis802_11NetworkTypeMax$/;"	e	enum:NDIS_802_11_NETWORK_TYPE	file:
Ndis802_11NetworkTypeMax	src/drivers/driver_ralink.h	/^    Ndis802_11NetworkTypeMax    \/\/ not a real type, defined as an upper bound$/;"	e	enum:_NDIS_802_11_NETWORK_TYPE
Ndis802_11OFDM24	src/drivers/driver_ndis.c	/^	Ndis802_11OFDM24,$/;"	e	enum:NDIS_802_11_NETWORK_TYPE	file:
Ndis802_11OFDM24	src/drivers/driver_ralink.h	/^    Ndis802_11OFDM24,$/;"	e	enum:_NDIS_802_11_NETWORK_TYPE
Ndis802_11OFDM5	src/drivers/driver_ndis.c	/^	Ndis802_11OFDM5,$/;"	e	enum:NDIS_802_11_NETWORK_TYPE	file:
Ndis802_11OFDM5	src/drivers/driver_ralink.h	/^    Ndis802_11OFDM5,$/;"	e	enum:_NDIS_802_11_NETWORK_TYPE
Ndis802_11PrivFilter8021xWEP	src/drivers/driver_ndis.c	/^	Ndis802_11PrivFilter8021xWEP$/;"	e	enum:NDIS_802_11_PRIVACY_FILTER	file:
Ndis802_11PrivFilterAcceptAll	src/drivers/driver_ndis.c	/^	Ndis802_11PrivFilterAcceptAll,$/;"	e	enum:NDIS_802_11_PRIVACY_FILTER	file:
Ndis802_11ReloadWEPKeys	src/drivers/driver_ralink.h	/^   Ndis802_11ReloadWEPKeys$/;"	e	enum:_NDIS_802_11_RELOAD_DEFAULTS
Ndis802_11StatusTypeMax	src/drivers/driver_ndis.c	/^	Ndis802_11StatusTypeMax$/;"	e	enum:NDIS_802_11_STATUS_TYPE	file:
Ndis802_11StatusType_Authentication	src/drivers/driver_ndis.c	/^	Ndis802_11StatusType_Authentication,$/;"	e	enum:NDIS_802_11_STATUS_TYPE	file:
Ndis802_11StatusType_PMKID_CandidateList	src/drivers/driver_ndis.c	/^	Ndis802_11StatusType_PMKID_CandidateList = 2,$/;"	e	enum:NDIS_802_11_STATUS_TYPE	file:
Ndis802_11StatusType_PMKID_CandidateList	src/drivers/driver_ndis.c	311;"	d	file:
Ndis802_11WEPDisabled	src/drivers/driver_ndis.c	/^	Ndis802_11WEPDisabled,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11WEPDisabled	src/drivers/driver_ralink.h	/^   Ndis802_11WEPDisabled,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11WEPEnabled	src/drivers/driver_ndis.c	/^	Ndis802_11WEPEnabled,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11WEPEnabled	src/drivers/driver_ralink.h	/^   Ndis802_11WEPEnabled,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11WEPKeyAbsent	src/drivers/driver_ndis.c	/^	Ndis802_11WEPKeyAbsent,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11WEPKeyAbsent	src/drivers/driver_ralink.h	/^   Ndis802_11WEPKeyAbsent,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
Ndis802_11WEPNotSupported	src/drivers/driver_ndis.c	/^	Ndis802_11WEPNotSupported,$/;"	e	enum:NDIS_802_11_WEP_STATUS	file:
Ndis802_11WEPNotSupported	src/drivers/driver_ralink.h	/^   Ndis802_11WEPNotSupported,$/;"	e	enum:_NDIS_802_11_WEP_STATUS
NetworkTypeInUse	src/drivers/driver_ndis.c	/^	NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
NetworkTypeInUse	src/drivers/driver_ralink.h	/^    NDIS_802_11_NETWORK_TYPE            NetworkTypeInUse;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
NetworkTypeInUse	src/drivers/driver_ralink.h	/^   NDIS_802_11_NETWORK_TYPE            NetworkTypeInUse;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
NoOfAuthEncryptPairsSupported	src/drivers/driver_ndis.c	/^	ULONG NoOfAuthEncryptPairsSupported;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NoOfPMKIDs	src/drivers/driver_ndis.c	/^	ULONG NoOfPMKIDs;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
NotifyConnectionChange	src/eap_peer/tncc.c	/^	TNC_Result (*NotifyConnectionChange)($/;"	m	struct:tnc_if_imc	file:	access:public
NotifyConnectionChange	src/eap_server/tncs.c	/^	TNC_Result (*NotifyConnectionChange)($/;"	m	struct:tnc_if_imv	file:	access:public
NumCandidates	src/drivers/driver_ndis.c	/^	ULONG NumCandidates;$/;"	m	struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:	access:public
NumCandidates	src/drivers/driver_ralink.h	/^	ULONG NumCandidates; \/\/ No. of pmkid candidates$/;"	m	struct:_NDIS_802_11_PMKID_CANDIDATE_LIST	access:public
NumberOfItems	src/drivers/driver_ndis.c	/^	ULONG NumberOfItems;$/;"	m	struct:NDIS_802_11_BSSID_LIST_EX	file:	access:public
NumberOfItems	src/drivers/driver_ralink.h	/^    UINT                   NumberOfItems;      \/\/ in list below, at least 1$/;"	m	struct:_NDIS_802_11_BSSID_LIST_EX	access:public
NumberOfItems	src/drivers/driver_ralink.h	/^   UINT             NumberOfItems;      \/\/ in list below, at least 1$/;"	m	struct:_NDIS_802_11_BSSID_LIST	access:public
OBJS	hostapd/Android.mk	/^OBJS = main.c$/;"	m
OBJS_c	hostapd/Android.mk	/^OBJS_c = hostapd_cli.c src\/common\/wpa_ctrl.c src\/utils\/os_$(CONFIG_OS).c$/;"	m
OBJS_c	hostapd/Makefile	/^OBJS_c = hostapd_cli.o ..\/src\/common\/wpa_ctrl.o ..\/src\/utils\/os_$(CONFIG_OS).o$/;"	m
OBJS_d	hostapd/Android.mk	/^OBJS_d =$/;"	m
OBJS_p	hostapd/Android.mk	/^OBJS_p =$/;"	m
OID_802_11_ADD_KEY	src/drivers/driver_ndis.c	78;"	d	file:
OID_802_11_ADD_KEY	src/drivers/driver_ralink.h	45;"	d
OID_802_11_ADD_WEP	src/drivers/driver_ndis.c	69;"	d	file:
OID_802_11_ADD_WEP	src/drivers/driver_ralink.h	32;"	d
OID_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ndis.c	80;"	d	file:
OID_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ralink.h	36;"	d
OID_802_11_AUTHENTICATION_MODE	src/drivers/driver_ndis.c	73;"	d	file:
OID_802_11_AUTHENTICATION_MODE	src/drivers/driver_ralink.h	41;"	d
OID_802_11_BSSID	src/drivers/driver_ndis.c	66;"	d	file:
OID_802_11_BSSID	src/drivers/driver_ralink.h	39;"	d
OID_802_11_BSSID_LIST	src/drivers/driver_ndis.c	72;"	d	file:
OID_802_11_BSSID_LIST	src/drivers/driver_ralink.h	48;"	d
OID_802_11_BSSID_LIST_SCAN	src/drivers/driver_ndis.c	75;"	d	file:
OID_802_11_BSSID_LIST_SCAN	src/drivers/driver_ralink.h	37;"	d
OID_802_11_CAPABILITY	src/drivers/driver_ndis.c	305;"	d	file:
OID_802_11_CAPABILITY	src/drivers/driver_ndis.c	82;"	d	file:
OID_802_11_DEAUTHENTICATION	src/drivers/driver_ralink.h	46;"	d
OID_802_11_DISASSOCIATE	src/drivers/driver_ndis.c	71;"	d	file:
OID_802_11_DISASSOCIATE	src/drivers/driver_ralink.h	34;"	d
OID_802_11_DROP_UNENCRYPTED	src/drivers/driver_ralink.h	47;"	d
OID_802_11_ENCRYPTION_STATUS	src/drivers/driver_ndis.c	77;"	d	file:
OID_802_11_INFRASTRUCTURE_MODE	src/drivers/driver_ndis.c	68;"	d	file:
OID_802_11_INFRASTRUCTURE_MODE	src/drivers/driver_ralink.h	42;"	d
OID_802_11_PMKID	src/drivers/driver_ndis.c	306;"	d	file:
OID_802_11_PMKID	src/drivers/driver_ndis.c	83;"	d	file:
OID_802_11_PMKID	src/drivers/driver_ralink.h	53;"	d
OID_802_11_PRIVACY_FILTER	src/drivers/driver_ndis.c	74;"	d	file:
OID_802_11_PRIVACY_FILTER	src/drivers/driver_ralink.h	35;"	d
OID_802_11_REMOVE_KEY	src/drivers/driver_ndis.c	79;"	d	file:
OID_802_11_REMOVE_KEY	src/drivers/driver_ralink.h	44;"	d
OID_802_11_REMOVE_WEP	src/drivers/driver_ndis.c	70;"	d	file:
OID_802_11_REMOVE_WEP	src/drivers/driver_ralink.h	33;"	d
OID_802_11_SET_IEEE8021X	src/drivers/driver_ralink.h	51;"	d
OID_802_11_SET_IEEE8021X_REQUIRE_KEY	src/drivers/driver_ralink.h	52;"	d
OID_802_11_SSID	src/drivers/driver_ndis.c	67;"	d	file:
OID_802_11_SSID	src/drivers/driver_ralink.h	38;"	d
OID_802_11_TEST	src/drivers/driver_ndis.c	81;"	d	file:
OID_802_11_TX_POWER_LEVEL	src/drivers/driver_ralink.h	43;"	d
OID_802_11_WEP_STATUS	src/drivers/driver_ndis.c	76;"	d	file:
OID_802_11_WEP_STATUS	src/drivers/driver_ralink.h	40;"	d
OID_802_3_CURRENT_ADDRESS	src/drivers/driver_ralink.h	49;"	d
OID_DOT11_CURRENT_OPERATION_MODE	src/drivers/driver_ndis.c	359;"	d	file:
OID_DOT11_NDIS_START	src/drivers/driver_ndis.c	358;"	d	file:
OID_DOT11_SCAN_REQUEST	src/drivers/driver_ndis.c	360;"	d	file:
OID_GET_SET_TOGGLE	src/drivers/driver_ralink.h	30;"	d
OID_SET_COUNTERMEASURES	src/drivers/driver_ralink.h	50;"	d
OOB_METHOD_CRED	src/wps/wps.h	/^		OOB_METHOD_CRED,$/;"	e	enum:oob_conf_data::__anon30
OOB_METHOD_DEV_PWD_E	src/wps/wps.h	/^		OOB_METHOD_DEV_PWD_E,$/;"	e	enum:oob_conf_data::__anon30
OOB_METHOD_DEV_PWD_R	src/wps/wps.h	/^		OOB_METHOD_DEV_PWD_R,$/;"	e	enum:oob_conf_data::__anon30
OOB_METHOD_UNKNOWN	src/wps/wps.h	/^		OOB_METHOD_UNKNOWN = 0,$/;"	e	enum:oob_conf_data::__anon30
OPENSSL_NO_ENGINE	src/crypto/tls_openssl.c	19;"	d	file:
OPENSSL_d2i_TYPE	src/crypto/tls_openssl.c	41;"	d	file:
OPENSSL_d2i_TYPE	src/crypto/tls_openssl.c	43;"	d	file:
OPTIONAL_BINDING	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon172	file:
OPTIONAL_BINDING	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon162	file:
OPT_CAST	src/tls/libtommath.c	67;"	d	file:
OP_MODE_20MHZ_HT_STA_ASSOCED	src/common/ieee802_11_defs.h	617;"	d
OP_MODE_MAY_BE_LEGACY_STAS	src/common/ieee802_11_defs.h	616;"	d
OP_MODE_MIXED	src/common/ieee802_11_defs.h	618;"	d
OP_MODE_PURE	src/common/ieee802_11_defs.h	615;"	d
OS_H	src/utils/os.h	16;"	d
OS_NO_C_LIB_DEFINES	src/utils/build_config.h	57;"	d
OS_REJECT_C_LIB_FUNCTIONS	src/utils/os_internal.c	27;"	d	file:
OUI_BROADCOM	src/common/ieee802_11_defs.h	860;"	d
OUI_MICROSOFT	src/common/ieee802_11_defs.h	636;"	d
OUI_WFA	src/common/ieee802_11_defs.h	640;"	d
OffsetRequestIEs	src/drivers/driver_ndis.c	/^	ULONG OffsetRequestIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
OffsetRequestIEs	src/drivers/driver_ralink.h	/^    ULONG                   OffsetRequestIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
OffsetResponseIEs	src/drivers/driver_ndis.c	/^	ULONG OffsetResponseIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
OffsetResponseIEs	src/drivers/driver_ralink.h	/^    ULONG                   OffsetResponseIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
Oid	src/drivers/driver_ndis.c	/^    NDIS_OID Oid;$/;"	m	struct:_NDISUIO_QUERY_OID	file:	access:public
Oid	src/drivers/driver_ndis.c	/^    NDIS_OID Oid;$/;"	m	struct:_NDISUIO_SET_OID	file:	access:public
P2P_AFTER_SCAN_CONNECT	src/p2p/p2p_i.h	/^		P2P_AFTER_SCAN_CONNECT$/;"	e	enum:p2p_data::p2p_after_scan
P2P_AFTER_SCAN_LISTEN	src/p2p/p2p_i.h	/^		P2P_AFTER_SCAN_LISTEN,$/;"	e	enum:p2p_data::p2p_after_scan
P2P_AFTER_SCAN_NOTHING	src/p2p/p2p_i.h	/^		P2P_AFTER_SCAN_NOTHING,$/;"	e	enum:p2p_data::p2p_after_scan
P2P_ALLOW_CROSS_CONNECTION	src/ap/ap_config.h	338;"	d
P2P_ATTR_CAPABILITY	src/common/ieee802_11_defs.h	/^	P2P_ATTR_CAPABILITY = 2,$/;"	e	enum:p2p_attr_id
P2P_ATTR_CHANNEL_LIST	src/common/ieee802_11_defs.h	/^	P2P_ATTR_CHANNEL_LIST = 11,$/;"	e	enum:p2p_attr_id
P2P_ATTR_CONFIGURATION_TIMEOUT	src/common/ieee802_11_defs.h	/^	P2P_ATTR_CONFIGURATION_TIMEOUT = 5,$/;"	e	enum:p2p_attr_id
P2P_ATTR_DEVICE_ID	src/common/ieee802_11_defs.h	/^	P2P_ATTR_DEVICE_ID = 3,$/;"	e	enum:p2p_attr_id
P2P_ATTR_DEVICE_INFO	src/common/ieee802_11_defs.h	/^	P2P_ATTR_DEVICE_INFO = 13,$/;"	e	enum:p2p_attr_id
P2P_ATTR_EXT_LISTEN_TIMING	src/common/ieee802_11_defs.h	/^	P2P_ATTR_EXT_LISTEN_TIMING = 8,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_BSSID	src/common/ieee802_11_defs.h	/^	P2P_ATTR_GROUP_BSSID = 7,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_ID	src/common/ieee802_11_defs.h	/^	P2P_ATTR_GROUP_ID = 15,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_INFO	src/common/ieee802_11_defs.h	/^	P2P_ATTR_GROUP_INFO = 14,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_OWNER_INTENT	src/common/ieee802_11_defs.h	/^	P2P_ATTR_GROUP_OWNER_INTENT = 4,$/;"	e	enum:p2p_attr_id
P2P_ATTR_INTENDED_INTERFACE_ADDR	src/common/ieee802_11_defs.h	/^	P2P_ATTR_INTENDED_INTERFACE_ADDR = 9,$/;"	e	enum:p2p_attr_id
P2P_ATTR_INTERFACE	src/common/ieee802_11_defs.h	/^	P2P_ATTR_INTERFACE = 16,$/;"	e	enum:p2p_attr_id
P2P_ATTR_INVITATION_FLAGS	src/common/ieee802_11_defs.h	/^	P2P_ATTR_INVITATION_FLAGS = 18,$/;"	e	enum:p2p_attr_id
P2P_ATTR_LISTEN_CHANNEL	src/common/ieee802_11_defs.h	/^	P2P_ATTR_LISTEN_CHANNEL = 6,$/;"	e	enum:p2p_attr_id
P2P_ATTR_MANAGEABILITY	src/common/ieee802_11_defs.h	/^	P2P_ATTR_MANAGEABILITY = 10,$/;"	e	enum:p2p_attr_id
P2P_ATTR_MINOR_REASON_CODE	src/common/ieee802_11_defs.h	/^	P2P_ATTR_MINOR_REASON_CODE = 1,$/;"	e	enum:p2p_attr_id
P2P_ATTR_NOTICE_OF_ABSENCE	src/common/ieee802_11_defs.h	/^	P2P_ATTR_NOTICE_OF_ABSENCE = 12,$/;"	e	enum:p2p_attr_id
P2P_ATTR_OPERATING_CHANNEL	src/common/ieee802_11_defs.h	/^	P2P_ATTR_OPERATING_CHANNEL = 17,$/;"	e	enum:p2p_attr_id
P2P_ATTR_STATUS	src/common/ieee802_11_defs.h	/^	P2P_ATTR_STATUS = 0,$/;"	e	enum:p2p_attr_id
P2P_ATTR_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	/^	P2P_ATTR_VENDOR_SPECIFIC = 221$/;"	e	enum:p2p_attr_id
P2P_CONNECT	src/p2p/p2p_i.h	/^		P2P_CONNECT,$/;"	e	enum:p2p_data::p2p_state
P2P_CONNECT_LISTEN	src/p2p/p2p_i.h	/^		P2P_CONNECT_LISTEN,$/;"	e	enum:p2p_data::p2p_state
P2P_DEV_CAPAB_CLIENT_DISCOVERABILITY	src/common/ieee802_11_defs.h	782;"	d
P2P_DEV_CAPAB_CONCURRENT_OPER	src/common/ieee802_11_defs.h	783;"	d
P2P_DEV_CAPAB_DEVICE_LIMIT	src/common/ieee802_11_defs.h	785;"	d
P2P_DEV_CAPAB_INFRA_MANAGED	src/common/ieee802_11_defs.h	784;"	d
P2P_DEV_CAPAB_INVITATION_PROCEDURE	src/common/ieee802_11_defs.h	786;"	d
P2P_DEV_CAPAB_SERVICE_DISCOVERY	src/common/ieee802_11_defs.h	781;"	d
P2P_DEV_DISC_REQ	src/common/ieee802_11_defs.h	/^	P2P_DEV_DISC_REQ = 5,$/;"	e	enum:p2p_action_frame_type
P2P_DEV_DISC_RESP	src/common/ieee802_11_defs.h	/^	P2P_DEV_DISC_RESP = 6,$/;"	e	enum:p2p_action_frame_type
P2P_DEV_FORCE_FREQ	src/p2p/p2p_i.h	95;"	d
P2P_DEV_GROUP_CLIENT_ONLY	src/p2p/p2p_i.h	94;"	d
P2P_DEV_NOT_YET_READY	src/p2p/p2p_i.h	84;"	d
P2P_DEV_PD_FOR_JOIN	src/p2p/p2p_i.h	96;"	d
P2P_DEV_PD_PEER_DISPLAY	src/p2p/p2p_i.h	87;"	d
P2P_DEV_PD_PEER_KEYPAD	src/p2p/p2p_i.h	88;"	d
P2P_DEV_PEER_WAITING_RESPONSE	src/p2p/p2p_i.h	90;"	d
P2P_DEV_PREFER_PERSISTENT_GROUP	src/p2p/p2p_i.h	91;"	d
P2P_DEV_PREFER_PERSISTENT_RECONN	src/p2p/p2p_i.h	98;"	d
P2P_DEV_PROBE_REQ_ONLY	src/p2p/p2p_i.h	82;"	d
P2P_DEV_REPORTED	src/p2p/p2p_i.h	83;"	d
P2P_DEV_REPORTED_ONCE	src/p2p/p2p_i.h	97;"	d
P2P_DEV_SD_INFO	src/p2p/p2p_i.h	85;"	d
P2P_DEV_SD_SCHEDULE	src/p2p/p2p_i.h	86;"	d
P2P_DEV_USER_REJECTED	src/p2p/p2p_i.h	89;"	d
P2P_DEV_WAIT_GO_NEG_CONFIRM	src/p2p/p2p_i.h	93;"	d
P2P_DEV_WAIT_GO_NEG_RESPONSE	src/p2p/p2p_i.h	92;"	d
P2P_ENABLED	src/ap/ap_config.h	334;"	d
P2P_EVENT_CROSS_CONNECT_DISABLE	src/common/wpa_ctrl.h	116;"	d
P2P_EVENT_CROSS_CONNECT_ENABLE	src/common/wpa_ctrl.h	115;"	d
P2P_EVENT_DEVICE_FOUND	src/common/wpa_ctrl.h	101;"	d
P2P_EVENT_DEVICE_LOST	src/common/wpa_ctrl.h	104;"	d
P2P_EVENT_FIND_STOPPED	src/common/wpa_ctrl.h	131;"	d
P2P_EVENT_GO_NEG_FAILURE	src/common/wpa_ctrl.h	110;"	d
P2P_EVENT_GO_NEG_REQUEST	src/common/wpa_ctrl.h	108;"	d
P2P_EVENT_GO_NEG_SUCCESS	src/common/wpa_ctrl.h	109;"	d
P2P_EVENT_GROUP_FORMATION_FAILURE	src/common/wpa_ctrl.h	112;"	d
P2P_EVENT_GROUP_FORMATION_SUCCESS	src/common/wpa_ctrl.h	111;"	d
P2P_EVENT_GROUP_REMOVED	src/common/wpa_ctrl.h	114;"	d
P2P_EVENT_GROUP_STARTED	src/common/wpa_ctrl.h	113;"	d
P2P_EVENT_INVITATION_RECEIVED	src/common/wpa_ctrl.h	129;"	d
P2P_EVENT_INVITATION_RESULT	src/common/wpa_ctrl.h	130;"	d
P2P_EVENT_PROV_DISC_ENTER_PIN	src/common/wpa_ctrl.h	120;"	d
P2P_EVENT_PROV_DISC_PBC_REQ	src/common/wpa_ctrl.h	122;"	d
P2P_EVENT_PROV_DISC_PBC_RESP	src/common/wpa_ctrl.h	124;"	d
P2P_EVENT_PROV_DISC_SHOW_PIN	src/common/wpa_ctrl.h	118;"	d
P2P_EVENT_SERV_DISC_REQ	src/common/wpa_ctrl.h	126;"	d
P2P_EVENT_SERV_DISC_RESP	src/common/wpa_ctrl.h	128;"	d
P2P_FIND_ONLY_SOCIAL	src/p2p/p2p.h	/^	P2P_FIND_ONLY_SOCIAL,$/;"	e	enum:p2p_discovery_type
P2P_FIND_PROGRESSIVE	src/p2p/p2p.h	/^	P2P_FIND_PROGRESSIVE$/;"	e	enum:p2p_discovery_type
P2P_FIND_START_WITH_FULL	src/p2p/p2p.h	/^	P2P_FIND_START_WITH_FULL,$/;"	e	enum:p2p_discovery_type
P2P_GO_DISC_REQ	src/common/ieee802_11_defs.h	/^	P2P_GO_DISC_REQ = 3$/;"	e	enum:p2p_act_frame_type
P2P_GO_NEG	src/p2p/p2p_i.h	/^		P2P_GO_NEG,$/;"	e	enum:p2p_data::p2p_state
P2P_GO_NEG_CONF	src/common/ieee802_11_defs.h	/^	P2P_GO_NEG_CONF = 2,$/;"	e	enum:p2p_action_frame_type
P2P_GO_NEG_REQ	src/common/ieee802_11_defs.h	/^	P2P_GO_NEG_REQ = 0,$/;"	e	enum:p2p_action_frame_type
P2P_GO_NEG_RESP	src/common/ieee802_11_defs.h	/^	P2P_GO_NEG_RESP = 1,$/;"	e	enum:p2p_action_frame_type
P2P_GROUP_CAPAB_CROSS_CONN	src/common/ieee802_11_defs.h	793;"	d
P2P_GROUP_CAPAB_GROUP_FORMATION	src/common/ieee802_11_defs.h	795;"	d
P2P_GROUP_CAPAB_GROUP_LIMIT	src/common/ieee802_11_defs.h	791;"	d
P2P_GROUP_CAPAB_GROUP_OWNER	src/common/ieee802_11_defs.h	789;"	d
P2P_GROUP_CAPAB_INTRA_BSS_DIST	src/common/ieee802_11_defs.h	792;"	d
P2P_GROUP_CAPAB_PERSISTENT_GROUP	src/common/ieee802_11_defs.h	790;"	d
P2P_GROUP_CAPAB_PERSISTENT_RECONN	src/common/ieee802_11_defs.h	794;"	d
P2P_GROUP_FORMATION	src/ap/ap_config.h	336;"	d
P2P_GROUP_OWNER	src/ap/ap_config.h	335;"	d
P2P_H	src/p2p/p2p.h	16;"	d
P2P_HOSTAPD_H	src/ap/p2p_hostapd.h	16;"	d
P2P_IDLE	src/p2p/p2p_i.h	/^		P2P_IDLE,$/;"	e	enum:p2p_data::p2p_state
P2P_IE_VENDOR_TYPE	src/common/ieee802_11_defs.h	641;"	d
P2P_INVITATION_FLAGS_TYPE	src/common/ieee802_11_defs.h	798;"	d
P2P_INVITATION_REQ	src/common/ieee802_11_defs.h	/^	P2P_INVITATION_REQ = 3,$/;"	e	enum:p2p_action_frame_type
P2P_INVITATION_RESP	src/common/ieee802_11_defs.h	/^	P2P_INVITATION_RESP = 4,$/;"	e	enum:p2p_action_frame_type
P2P_INVITE	src/p2p/p2p_i.h	/^		P2P_INVITE,$/;"	e	enum:p2p_data::p2p_state
P2P_INVITE_LISTEN	src/p2p/p2p_i.h	/^		P2P_INVITE_LISTEN,$/;"	e	enum:p2p_data::p2p_state
P2P_INVITE_ROLE_ACTIVE_GO	src/p2p/p2p.h	/^	P2P_INVITE_ROLE_ACTIVE_GO,$/;"	e	enum:p2p_invite_role
P2P_INVITE_ROLE_CLIENT	src/p2p/p2p.h	/^	P2P_INVITE_ROLE_CLIENT$/;"	e	enum:p2p_invite_role
P2P_INVITE_ROLE_GO	src/p2p/p2p.h	/^	P2P_INVITE_ROLE_GO,$/;"	e	enum:p2p_invite_role
P2P_I_H	src/p2p/p2p_i.h	16;"	d
P2P_LISTEN_ONLY	src/p2p/p2p_i.h	/^		P2P_LISTEN_ONLY,$/;"	e	enum:p2p_data::p2p_state
P2P_MANAGE	src/ap/ap_config.h	337;"	d
P2P_MAN_COEXISTENCE_OPTIONAL	src/common/ieee802_11_defs.h	803;"	d
P2P_MAN_CROSS_CONNECTION_PERMITTED	src/common/ieee802_11_defs.h	802;"	d
P2P_MAN_DEVICE_MANAGEMENT	src/common/ieee802_11_defs.h	801;"	d
P2P_MAX_CHANNELS	src/p2p/p2p.h	114;"	d
P2P_MAX_GO_INTENT	src/common/ieee802_11_defs.h	778;"	d
P2P_MAX_GROUP_ENTRIES	src/p2p/p2p_i.h	506;"	d
P2P_MAX_REG_CLASSES	src/p2p/p2p.h	21;"	d
P2P_MAX_REG_CLASS_CHANNELS	src/p2p/p2p.h	26;"	d
P2P_MAX_WPS_VENDOR_EXT	src/p2p/p2p.h	144;"	d
P2P_NOA	src/common/ieee802_11_defs.h	/^	P2P_NOA = 0,$/;"	e	enum:p2p_act_frame_type
P2P_NO_PENDING_ACTION	src/p2p/p2p_i.h	/^		P2P_NO_PENDING_ACTION,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_OUI_TYPE	src/common/ieee802_11_defs.h	753;"	d
P2P_PD_DURING_FIND	src/p2p/p2p_i.h	/^		P2P_PD_DURING_FIND,$/;"	e	enum:p2p_data::p2p_state
P2P_PEER_EXPIRATION_AGE	src/p2p/p2p.c	51;"	d	file:
P2P_PEER_EXPIRATION_INTERVAL	src/p2p/p2p.c	53;"	d	file:
P2P_PENDING_DEV_DISC_REQUEST	src/p2p/p2p_i.h	/^		P2P_PENDING_DEV_DISC_REQUEST,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_DEV_DISC_RESPONSE	src/p2p/p2p_i.h	/^		P2P_PENDING_DEV_DISC_RESPONSE,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_GO_DISC_REQ	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_DISC_REQ$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_GO_NEG_CONFIRM	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_CONFIRM,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_GO_NEG_REQUEST	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_REQUEST,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_GO_NEG_RESPONSE	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_RESPONSE,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_GO_NEG_RESPONSE_FAILURE	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_RESPONSE_FAILURE,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_INVITATION_REQUEST	src/p2p/p2p_i.h	/^		P2P_PENDING_INVITATION_REQUEST,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_INVITATION_RESPONSE	src/p2p/p2p_i.h	/^		P2P_PENDING_INVITATION_RESPONSE,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_PD	src/p2p/p2p_i.h	/^		P2P_PENDING_PD,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PENDING_SD	src/p2p/p2p_i.h	/^		P2P_PENDING_SD,$/;"	e	enum:p2p_data::p2p_pending_action_state
P2P_PRESENCE_REQ	src/common/ieee802_11_defs.h	/^	P2P_PRESENCE_REQ = 1,$/;"	e	enum:p2p_act_frame_type
P2P_PRESENCE_RESP	src/common/ieee802_11_defs.h	/^	P2P_PRESENCE_RESP = 2,$/;"	e	enum:p2p_act_frame_type
P2P_PROVISIONING	src/p2p/p2p_i.h	/^		P2P_PROVISIONING,$/;"	e	enum:p2p_data::p2p_state
P2P_PROV_DISC_REJECTED	src/p2p/p2p.h	/^	P2P_PROV_DISC_REJECTED,$/;"	e	enum:p2p_prov_disc_status
P2P_PROV_DISC_REQ	src/common/ieee802_11_defs.h	/^	P2P_PROV_DISC_REQ = 7,$/;"	e	enum:p2p_action_frame_type
P2P_PROV_DISC_RESP	src/common/ieee802_11_defs.h	/^	P2P_PROV_DISC_RESP = 8$/;"	e	enum:p2p_action_frame_type
P2P_PROV_DISC_SUCCESS	src/p2p/p2p.h	/^	P2P_PROV_DISC_SUCCESS,$/;"	e	enum:p2p_prov_disc_status
P2P_PROV_DISC_TIMEOUT	src/p2p/p2p.h	/^	P2P_PROV_DISC_TIMEOUT,$/;"	e	enum:p2p_prov_disc_status
P2P_SCAN_FULL	src/p2p/p2p.h	/^	P2P_SCAN_FULL,$/;"	e	enum:p2p_scan_type
P2P_SCAN_SOCIAL	src/p2p/p2p.h	/^	P2P_SCAN_SOCIAL,$/;"	e	enum:p2p_scan_type
P2P_SCAN_SOCIAL_PLUS_ONE	src/p2p/p2p.h	/^	P2P_SCAN_SOCIAL_PLUS_ONE$/;"	e	enum:p2p_scan_type
P2P_SCAN_SPECIFIC	src/p2p/p2p.h	/^	P2P_SCAN_SPECIFIC,$/;"	e	enum:p2p_scan_type
P2P_SCAN_TIMEOUT	src/p2p/p2p.c	45;"	d	file:
P2P_SC_FAIL_BOTH_GO_INTENT_15	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_BOTH_GO_INTENT_15 = 9,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INCOMPATIBLE_PARAMS	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_INCOMPATIBLE_PARAMS = 2,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INCOMPATIBLE_PROV_METHOD	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_INCOMPATIBLE_PROV_METHOD = 10,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INFO_CURRENTLY_UNAVAILABLE	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_INFO_CURRENTLY_UNAVAILABLE = 1,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INVALID_PARAMS	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_INVALID_PARAMS = 4,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_LIMIT_REACHED	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_LIMIT_REACHED = 3,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_NO_COMMON_CHANNELS	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_NO_COMMON_CHANNELS = 7,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_PREV_PROTOCOL_ERROR	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_PREV_PROTOCOL_ERROR = 6,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_REJECTED_BY_USER	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_REJECTED_BY_USER = 11,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_UNABLE_TO_ACCOMMODATE	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_UNABLE_TO_ACCOMMODATE = 5,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_UNKNOWN_GROUP	src/common/ieee802_11_defs.h	/^	P2P_SC_FAIL_UNKNOWN_GROUP = 8,$/;"	e	enum:p2p_status_code
P2P_SC_SUCCESS	src/common/ieee802_11_defs.h	/^	P2P_SC_SUCCESS = 0,$/;"	e	enum:p2p_status_code
P2P_SD_BAD_REQUEST	src/common/ieee802_11_defs.h	/^	P2P_SD_BAD_REQUEST = 3$/;"	e	enum:p2p_sd_status
P2P_SD_DURING_FIND	src/p2p/p2p_i.h	/^		P2P_SD_DURING_FIND,$/;"	e	enum:p2p_data::p2p_state
P2P_SD_PROTO_NOT_AVAILABLE	src/common/ieee802_11_defs.h	/^	P2P_SD_PROTO_NOT_AVAILABLE = 1,$/;"	e	enum:p2p_sd_status
P2P_SD_REQUESTED_INFO_NOT_AVAILABLE	src/common/ieee802_11_defs.h	/^	P2P_SD_REQUESTED_INFO_NOT_AVAILABLE = 2,$/;"	e	enum:p2p_sd_status
P2P_SD_SUCCESS	src/common/ieee802_11_defs.h	/^	P2P_SD_SUCCESS = 0,$/;"	e	enum:p2p_sd_status
P2P_SEARCH	src/p2p/p2p_i.h	/^		P2P_SEARCH,$/;"	e	enum:p2p_data::p2p_state
P2P_SEARCH_WHEN_READY	src/p2p/p2p_i.h	/^		P2P_SEARCH_WHEN_READY,$/;"	e	enum:p2p_data::p2p_state
P2P_SEC_DEVICE_TYPES	src/p2p/p2p.h	296;"	d
P2P_SEND_ACTION_FAILED	src/p2p/p2p.h	/^	P2P_SEND_ACTION_FAILED \/* Frame was not sent due to a failure *\/$/;"	e	enum:p2p_send_action_result
P2P_SEND_ACTION_NO_ACK	src/p2p/p2p.h	/^	P2P_SEND_ACTION_NO_ACK \/* Frame was sent, but not acknowledged *\/,$/;"	e	enum:p2p_send_action_result
P2P_SEND_ACTION_SUCCESS	src/p2p/p2p.h	/^	P2P_SEND_ACTION_SUCCESS \/* Frame was send and acknowledged *\/,$/;"	e	enum:p2p_send_action_result
P2P_SERV_ALL_SERVICES	src/common/ieee802_11_defs.h	/^	P2P_SERV_ALL_SERVICES = 0,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_BONJOUR	src/common/ieee802_11_defs.h	/^	P2P_SERV_BONJOUR = 1,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_UPNP	src/common/ieee802_11_defs.h	/^	P2P_SERV_UPNP = 2,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	/^	P2P_SERV_VENDOR_SPECIFIC = 255$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_WS_DISCOVERY	src/common/ieee802_11_defs.h	/^	P2P_SERV_WS_DISCOVERY = 3,$/;"	e	enum:p2p_service_protocol_type
P2P_WAIT_PEER_CONNECT	src/p2p/p2p_i.h	/^		P2P_WAIT_PEER_CONNECT,$/;"	e	enum:p2p_data::p2p_state
P2P_WAIT_PEER_IDLE	src/p2p/p2p_i.h	/^		P2P_WAIT_PEER_IDLE,$/;"	e	enum:p2p_data::p2p_state
P2P_WILDCARD_SSID	src/common/ieee802_11_defs.h	820;"	d
P2P_WILDCARD_SSID_LEN	src/common/ieee802_11_defs.h	821;"	d
PACKED	src/drivers/driver_ralink.h	59;"	d
PAC_OPAQUE_TYPE_IDENTITY	src/eap_server/eap_server_fast.c	35;"	d	file:
PAC_OPAQUE_TYPE_KEY	src/eap_server/eap_server_fast.c	33;"	d	file:
PAC_OPAQUE_TYPE_LIFETIME	src/eap_server/eap_server_fast.c	34;"	d	file:
PAC_OPAQUE_TYPE_PAD	src/eap_server/eap_server_fast.c	32;"	d	file:
PAC_TYPE_A_ID	src/eap_common/eap_fast_common.h	34;"	d
PAC_TYPE_A_ID_INFO	src/eap_common/eap_fast_common.h	40;"	d
PAC_TYPE_CRED_LIFETIME	src/eap_common/eap_fast_common.h	33;"	d
PAC_TYPE_I_ID	src/eap_common/eap_fast_common.h	35;"	d
PAC_TYPE_MACHINE_AUTHENTICATION	src/eap_common/eap_fast_common.h	68;"	d
PAC_TYPE_PAC_ACKNOWLEDGEMENT	src/eap_common/eap_fast_common.h	41;"	d
PAC_TYPE_PAC_INFO	src/eap_common/eap_fast_common.h	42;"	d
PAC_TYPE_PAC_KEY	src/eap_common/eap_fast_common.h	31;"	d
PAC_TYPE_PAC_OPAQUE	src/eap_common/eap_fast_common.h	32;"	d
PAC_TYPE_PAC_TYPE	src/eap_common/eap_fast_common.h	43;"	d
PAC_TYPE_TUNNEL_PAC	src/eap_common/eap_fast_common.h	62;"	d
PAC_TYPE_USER_AUTHORIZATION	src/eap_common/eap_fast_common.h	65;"	d
PADDING	src/crypto/md4-internal.c	/^static u8 PADDING[MD4_BLOCK_LENGTH] = {$/;"	v	file:
PASS	src/drivers/driver_nl80211.c	4970;"	d	file:
PASSWD_CHANGE_CHAL_LEN	src/eap_peer/eap_mschapv2.c	80;"	d	file:
PASSWD_CHANGE_CHAL_LEN	src/eap_server/eap_server_mschapv2.c	46;"	d	file:
PAX_DONE	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	e	enum:eap_pax_data::__anon169	file:
PAX_INIT	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	e	enum:eap_pax_data::__anon169	file:
PAX_STD_1	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
PAX_STD_2_SENT	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	e	enum:eap_pax_data::__anon169	file:
PAX_STD_3	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
PBSSID_INFO	src/drivers/driver_ralink.h	/^} BSSID_INFO, *PBSSID_INFO;$/;"	t	typeref:struct:_BSSID_INFO
PCHAR	src/drivers/driver_ralink.h	/^typedef CHAR            *PCHAR;$/;"	t
PCSC_FUNCS	src/utils/build_config.h	32;"	d
PCSC_FUNCS_H	src/utils/pcsc_funcs.h	16;"	d
PDOT11_BSS_TYPE	src/drivers/driver_ndis.c	/^} DOT11_BSS_TYPE, * PDOT11_BSS_TYPE;$/;"	t	typeref:enum:_DOT11_BSS_TYPE	file:
PDOT11_MAC_ADDRESS	src/drivers/driver_ndis.c	/^typedef DOT11_MAC_ADDRESS * PDOT11_MAC_ADDRESS;$/;"	t	file:
PDOT11_SCAN_REQUEST_V2	src/drivers/driver_ndis.c	/^} DOT11_SCAN_REQUEST_V2, * PDOT11_SCAN_REQUEST_V2;$/;"	t	typeref:struct:_DOT11_SCAN_REQUEST_V2	file:
PDOT11_SCAN_TYPE	src/drivers/driver_ndis.c	/^} DOT11_SCAN_TYPE, * PDOT11_SCAN_TYPE;$/;"	t	typeref:enum:_DOT11_SCAN_TYPE	file:
PEERKEY_H	src/rsn_supp/peerkey.h	16;"	d
PEERKEY_MAX_IE_LEN	src/rsn_supp/peerkey.h	18;"	d
PEER_AUTH_CERT	src/eap_peer/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_responder_data::__anon174
PEER_AUTH_CERT	src/eap_server/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_initiator_data::__anon135
PEER_AUTH_SECRET	src/eap_peer/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_responder_data::__anon174
PEER_AUTH_SECRET	src/eap_server/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_initiator_data::__anon135
PENDING	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sim_db_pending::__anon148	file:
PERMANENT_ID	src/eap_common/eap_sim_common.h	/^	NO_ID_REQ, ANY_ID, FULLAUTH_ID, PERMANENT_ID$/;"	e	enum:eap_sim_id_req
PHASE1	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
PHASE1	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
PHASE1	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
PHASE1_ID2	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
PHASE2_ID	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
PHASE2_ID	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
PHASE2_METHOD	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
PHASE2_METHOD	src/eap_server/eap_server_peap.c	/^		PHASE2_METHOD, PHASE2_SOH,$/;"	e	enum:eap_peap_data::__anon160	file:
PHASE2_METHOD	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
PHASE2_MSCHAPV2_RESP	src/eap_server/eap_server_ttls.c	/^		PHASE2_MSCHAPV2_RESP, SUCCESS, FAILURE$/;"	e	enum:eap_ttls_data::__anon126	file:
PHASE2_SOH	src/eap_server/eap_server_peap.c	/^		PHASE2_METHOD, PHASE2_SOH,$/;"	e	enum:eap_peap_data::__anon160	file:
PHASE2_START	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
PHASE2_START	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
PHASE2_START	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
PHASE2_TLV	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
PINTFS_KEY_TABLE	src/drivers/driver_ndis.c	/^} INTFS_KEY_TABLE, *PINTFS_KEY_TABLE;$/;"	t	typeref:struct:__anon95	file:
PINTF_ENTRY	src/drivers/driver_ndis.c	/^} INTF_ENTRY, *PINTF_ENTRY;$/;"	t	typeref:struct:__anon97	file:
PINTF_KEY_ENTRY	src/drivers/driver_ndis.c	/^} INTF_KEY_ENTRY, *PINTF_KEY_ENTRY;$/;"	t	typeref:struct:__anon94	file:
PIN_EXPIRES	src/wps/wps_registrar.c	42;"	d	file:
PIN_LOCKED	src/wps/wps_registrar.c	41;"	d	file:
PInitAKeys	src/ap/wpa_auth_i.h	/^	Boolean PInitAKeys; \/* WPA only, not in IEEE 802.11i *\/$/;"	m	struct:wpa_state_machine	access:public
PKCS12_FUNCS	src/utils/build_config.h	31;"	d
PKCS12_FUNCS	src/utils/build_config.h	66;"	d
PKCS12_FUNCS	src/utils/build_config.h	82;"	d
PKCS1_H	src/tls/pkcs1.h	16;"	d
PKCS5_ALG_MD5_DES_CBC	src/tls/pkcs5.c	/^		PKCS5_ALG_MD5_DES_CBC$/;"	e	enum:pkcs5_params::pkcs5_alg	file:
PKCS5_ALG_UNKNOWN	src/tls/pkcs5.c	/^		PKCS5_ALG_UNKNOWN,$/;"	e	enum:pkcs5_params::pkcs5_alg	file:
PKCS5_H	src/tls/pkcs5.h	16;"	d
PKCS8_H	src/tls/pkcs8.h	16;"	d
PKTHDR_RADIOTAP_VERSION	src/utils/radiotap.h	44;"	d
PLONG	src/drivers/driver_ralink.h	/^typedef LONG            *PLONG;$/;"	t
PMK	src/ap/wpa_auth_i.h	/^	u8 PMK[PMK_LEN];$/;"	m	struct:wpa_state_machine	access:public
PMKID	src/drivers/driver_ndis.c	/^	NDIS_802_11_PMKID_VALUE PMKID;$/;"	m	struct:BSSID_INFO	file:	access:public
PMKID	src/drivers/driver_ralink.h	/^	NDIS_802_11_PMKID_VALUE PMKID;$/;"	m	struct:_BSSID_INFO	access:public
PMKID_CANDIDATE	src/drivers/driver_ndis.c	/^typedef struct PMKID_CANDIDATE {$/;"	s	file:
PMKID_CANDIDATE	src/drivers/driver_ndis.c	/^} PMKID_CANDIDATE;$/;"	t	typeref:struct:PMKID_CANDIDATE	file:
PMKID_CANDIDATE	src/drivers/driver_ralink.h	/^} PMKID_CANDIDATE, *PPMKID_CANDIDATE;$/;"	t	typeref:struct:_PMKID_CANDIDATE
PMKID_CANDIDATE::BSSID	src/drivers/driver_ndis.c	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:PMKID_CANDIDATE	file:	access:public
PMKID_CANDIDATE::Flags	src/drivers/driver_ndis.c	/^	ULONG Flags;$/;"	m	struct:PMKID_CANDIDATE	file:	access:public
PMKID_CANDIDATE_PRIO_SCAN	src/rsn_supp/preauth.c	30;"	d	file:
PMKID_HASH	src/ap/pmksa_cache_auth.c	31;"	d	file:
PMKID_HASH_SIZE	src/ap/pmksa_cache_auth.c	30;"	d	file:
PMKID_LEN	src/common/wpa_common.h	21;"	d
PMKSA_CACHE_H	src/ap/pmksa_cache_auth.h	16;"	d
PMKSA_CACHE_H	src/rsn_supp/pmksa_cache.h	16;"	d
PMK_LEN	src/ap/ap_config.h	100;"	d
PMK_LEN	src/common/wpa_common.h	22;"	d
PMLME_DEAUTH_REQ_STRUCT	src/drivers/driver_ralink.h	/^} MLME_DEAUTH_REQ_STRUCT, *PMLME_DEAUTH_REQ_STRUCT;$/;"	t	typeref:struct:_MLME_DEAUTH_REQ_STRUCT
PN531_PATH	hostapd/Android.mk	/^PN531_PATH ?= \/usr\/local\/src\/nfc$/;"	m
PN531_PATH	hostapd/Makefile	/^PN531_PATH ?= \/usr\/local\/src\/nfc$/;"	m
PNDISUIO_QUERY_BINDING	src/drivers/driver_ndis.c	/^} NDISUIO_QUERY_BINDING, *PNDISUIO_QUERY_BINDING;$/;"	t	typeref:struct:_NDISUIO_QUERY_BINDING	file:
PNDISUIO_QUERY_OID	src/drivers/driver_ndis.c	/^} NDISUIO_QUERY_OID, *PNDISUIO_QUERY_OID;$/;"	t	typeref:struct:_NDISUIO_QUERY_OID	file:
PNDISUIO_SET_OID	src/drivers/driver_ndis.c	/^} NDISUIO_SET_OID, *PNDISUIO_SET_OID;$/;"	t	typeref:struct:_NDISUIO_SET_OID	file:
PNDIS_802_11_AI_REQFI	src/drivers/driver_ralink.h	/^} NDIS_802_11_AI_REQFI, *PNDIS_802_11_AI_REQFI;$/;"	t	typeref:struct:_NDIS_802_11_AI_REQFI
PNDIS_802_11_AI_RESFI	src/drivers/driver_ralink.h	/^} NDIS_802_11_AI_RESFI, *PNDIS_802_11_AI_RESFI;$/;"	t	typeref:struct:_NDIS_802_11_AI_RESFI
PNDIS_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ralink.h	/^} NDIS_802_11_ASSOCIATION_INFORMATION, *PNDIS_802_11_ASSOCIATION_INFORMATION;$/;"	t	typeref:struct:_NDIS_802_11_ASSOCIATION_INFORMATION
PNDIS_802_11_AUTHENTICATION_MODE	src/drivers/driver_ralink.h	/^} NDIS_802_11_AUTHENTICATION_MODE, *PNDIS_802_11_AUTHENTICATION_MODE;$/;"	t	typeref:enum:_NDIS_802_11_AUTHENTICATION_MODE
PNDIS_802_11_BSSID_LIST	src/drivers/driver_ralink.h	/^} NDIS_802_11_BSSID_LIST, *PNDIS_802_11_BSSID_LIST;$/;"	t	typeref:struct:_NDIS_802_11_BSSID_LIST
PNDIS_802_11_BSSID_LIST_EX	src/drivers/driver_ralink.h	/^} NDIS_802_11_BSSID_LIST_EX, *PNDIS_802_11_BSSID_LIST_EX;$/;"	t	typeref:struct:_NDIS_802_11_BSSID_LIST_EX
PNDIS_802_11_CONFIGURATION	src/drivers/driver_ralink.h	/^} NDIS_802_11_CONFIGURATION, *PNDIS_802_11_CONFIGURATION;$/;"	t	typeref:struct:_NDIS_802_11_CONFIGURATION
PNDIS_802_11_CONFIGURATION_FH	src/drivers/driver_ralink.h	/^} NDIS_802_11_CONFIGURATION_FH, *PNDIS_802_11_CONFIGURATION_FH;$/;"	t	typeref:struct:_NDIS_802_11_CONFIGURATION_FH
PNDIS_802_11_ENCRYPTION_STATUS	src/drivers/driver_ralink.h	/^  NDIS_802_11_ENCRYPTION_STATUS, *PNDIS_802_11_ENCRYPTION_STATUS;$/;"	t	typeref:enum:_NDIS_802_11_WEP_STATUS
PNDIS_802_11_FIXED_IEs	src/drivers/driver_ralink.h	/^} NDIS_802_11_FIXED_IEs, *PNDIS_802_11_FIXED_IEs;$/;"	t	typeref:struct:_NDIS_802_11_FIXED_IEs
PNDIS_802_11_KEY	src/drivers/driver_ralink.h	/^} NDIS_802_11_KEY, *PNDIS_802_11_KEY;$/;"	t	typeref:struct:_NDIS_802_11_KEY
PNDIS_802_11_NETWORK_INFRASTRUCTURE	src/drivers/driver_ralink.h	/^} NDIS_802_11_NETWORK_INFRASTRUCTURE, *PNDIS_802_11_NETWORK_INFRASTRUCTURE;$/;"	t	typeref:enum:_NDIS_802_11_NETWORK_INFRASTRUCTURE
PNDIS_802_11_NETWORK_TYPE	src/drivers/driver_ralink.h	/^} NDIS_802_11_NETWORK_TYPE, *PNDIS_802_11_NETWORK_TYPE;$/;"	t	typeref:enum:_NDIS_802_11_NETWORK_TYPE
PNDIS_802_11_PMKID	src/drivers/driver_ralink.h	/^} NDIS_802_11_PMKID, *PNDIS_802_11_PMKID;$/;"	t	typeref:struct:_NDIS_802_11_PMKID
PNDIS_802_11_PMKID_CANDIDATE_LIST	src/drivers/driver_ralink.h	/^} NDIS_802_11_PMKID_CANDIDATE_LIST, *PNDIS_802_11_PMKID_CANDIDATE_LIST;$/;"	t	typeref:struct:_NDIS_802_11_PMKID_CANDIDATE_LIST
PNDIS_802_11_RELOAD_DEFAULTS	src/drivers/driver_ralink.h	/^} NDIS_802_11_RELOAD_DEFAULTS, *PNDIS_802_11_RELOAD_DEFAULTS;$/;"	t	typeref:enum:_NDIS_802_11_RELOAD_DEFAULTS
PNDIS_802_11_REMOVE_KEY	src/drivers/driver_ralink.h	/^} NDIS_802_11_REMOVE_KEY, *PNDIS_802_11_REMOVE_KEY;$/;"	t	typeref:struct:_NDIS_802_11_REMOVE_KEY
PNDIS_802_11_SSID	src/drivers/driver_ralink.h	/^} NDIS_802_11_SSID, *PNDIS_802_11_SSID;$/;"	t	typeref:struct:_NDIS_802_11_SSID
PNDIS_802_11_WEP	src/drivers/driver_ralink.h	/^} NDIS_802_11_WEP, *PNDIS_802_11_WEP;$/;"	t	typeref:struct:_NDIS_802_11_WEP
PNDIS_802_11_WEP_STATUS	src/drivers/driver_ralink.h	/^} NDIS_802_11_WEP_STATUS, *PNDIS_802_11_WEP_STATUS,$/;"	t	typeref:enum:_NDIS_802_11_WEP_STATUS
PNDIS_WLAN_BSSID	src/drivers/driver_ralink.h	/^} NDIS_WLAN_BSSID, *PNDIS_WLAN_BSSID;$/;"	t	typeref:struct:_NDIS_WLAN_BSSID
PNDIS_WLAN_BSSID_EX	src/drivers/driver_ralink.h	/^} NDIS_WLAN_BSSID_EX, *PNDIS_WLAN_BSSID_EX;$/;"	t	typeref:struct:_NDIS_WLAN_BSSID_EX
POOL_TAP1	src/crypto/random.c	43;"	d	file:
POOL_TAP2	src/crypto/random.c	44;"	d	file:
POOL_TAP3	src/crypto/random.c	45;"	d	file:
POOL_TAP4	src/crypto/random.c	46;"	d	file:
POOL_TAP5	src/crypto/random.c	47;"	d	file:
POOL_WORDS	src/crypto/random.c	41;"	d	file:
POOL_WORDS_MASK	src/crypto/random.c	42;"	d	file:
PPMKID_CANDIDATE	src/drivers/driver_ralink.h	/^} PMKID_CANDIDATE, *PPMKID_CANDIDATE;$/;"	t	typeref:struct:_PMKID_CANDIDATE
PRAW_DATA	src/drivers/driver_ndis.c	/^} RAW_DATA, *PRAW_DATA;$/;"	t	typeref:struct:__anon96	file:
PREAUTH_H	src/ap/preauth_auth.h	16;"	d
PREAUTH_H	src/rsn_supp/preauth.h	16;"	d
PRF_AES128_XCBC	src/eap_common/ikev2_common.h	/^	PRF_AES128_XCBC = 4$/;"	e	enum:__anon118
PRF_HMAC_MD5	src/eap_common/ikev2_common.h	/^	PRF_HMAC_MD5 = 1,$/;"	e	enum:__anon118
PRF_HMAC_SHA1	src/eap_common/ikev2_common.h	/^	PRF_HMAC_SHA1 = 2,$/;"	e	enum:__anon118
PRF_HMAC_TIGER	src/eap_common/ikev2_common.h	/^	PRF_HMAC_TIGER = 3,$/;"	e	enum:__anon118
PRINTF_FORMAT	src/utils/common.h	354;"	d
PRINTF_FORMAT	src/utils/common.h	357;"	d
PRISM2_DOWNLOAD_NON_VOLATILE	src/drivers/driver_hostap.h	/^	PRISM2_DOWNLOAD_NON_VOLATILE = 3 \/* FLASH *\/,$/;"	e	enum:__anon76
PRISM2_DOWNLOAD_VOLATILE	src/drivers/driver_hostap.h	/^	PRISM2_DOWNLOAD_VOLATILE = 1 \/* RAM *\/,$/;"	e	enum:__anon76
PRISM2_DOWNLOAD_VOLATILE_GENESIS	src/drivers/driver_hostap.h	/^	PRISM2_DOWNLOAD_VOLATILE_GENESIS = 4 \/* RAM in Genesis mode *\/,$/;"	e	enum:__anon76
PRISM2_DOWNLOAD_VOLATILE_GENESIS_PERSISTENT	src/drivers/driver_hostap.h	/^	PRISM2_DOWNLOAD_VOLATILE_GENESIS_PERSISTENT = 6,$/;"	e	enum:__anon76
PRISM2_DOWNLOAD_VOLATILE_PERSISTENT	src/drivers/driver_hostap.h	/^	PRISM2_DOWNLOAD_VOLATILE_PERSISTENT = 5,$/;"	e	enum:__anon76
PRISM2_GET_ENCRYPTION	src/drivers/driver_hostap.h	/^	PRISM2_GET_ENCRYPTION = 7,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_ADD_STA	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_ADD_STA = 2,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_FLUSH	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_FLUSH = 1,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_GENERIC_ELEMENT_HDR_LEN	src/drivers/driver_hostap.h	151;"	d
PRISM2_HOSTAPD_GET_INFO_STA	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_GET_INFO_STA = 4,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_GET_RID	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_GET_RID = 9,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_MAX_BUF_SIZE	src/drivers/driver_hostap.h	148;"	d
PRISM2_HOSTAPD_MLME	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_MLME = 13,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_REMOVE_STA	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_REMOVE_STA = 3,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_RID_HDR_LEN	src/drivers/driver_hostap.h	149;"	d
PRISM2_HOSTAPD_SCAN_REQ	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_SCAN_REQ = 14,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_SET_ASSOC_AP_ADDR	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_SET_ASSOC_AP_ADDR = 11,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_SET_FLAGS_STA	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_SET_FLAGS_STA = 8,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_SET_GENERIC_ELEMENT	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_SET_GENERIC_ELEMENT = 12,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_SET_RID	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_SET_RID = 10,$/;"	e	enum:__anon77
PRISM2_HOSTAPD_STA_CLEAR_STATS	src/drivers/driver_hostap.h	/^	PRISM2_HOSTAPD_STA_CLEAR_STATS = 15,$/;"	e	enum:__anon77
PRISM2_IOCTL_ADDMAC	src/drivers/driver_hostap.h	34;"	d
PRISM2_IOCTL_DELMAC	src/drivers/driver_hostap.h	35;"	d
PRISM2_IOCTL_DOWNLOAD	src/drivers/driver_hostap.h	40;"	d
PRISM2_IOCTL_GET_PRISM2_PARAM	src/drivers/driver_hostap.h	24;"	d
PRISM2_IOCTL_HOSTAPD	src/drivers/driver_hostap.h	41;"	d
PRISM2_IOCTL_INQUIRE	src/drivers/driver_hostap.h	29;"	d
PRISM2_IOCTL_KICKMAC	src/drivers/driver_hostap.h	36;"	d
PRISM2_IOCTL_MACCMD	src/drivers/driver_hostap.h	33;"	d
PRISM2_IOCTL_MONITOR	src/drivers/driver_hostap.h	27;"	d
PRISM2_IOCTL_PRISM2_PARAM	src/drivers/driver_hostap.h	23;"	d
PRISM2_IOCTL_READMIF	src/drivers/driver_hostap.h	26;"	d
PRISM2_IOCTL_RESET	src/drivers/driver_hostap.h	28;"	d
PRISM2_IOCTL_SET_RID_WORD	src/drivers/driver_hostap.h	32;"	d
PRISM2_IOCTL_WDS_ADD	src/drivers/driver_hostap.h	30;"	d
PRISM2_IOCTL_WDS_DEL	src/drivers/driver_hostap.h	31;"	d
PRISM2_IOCTL_WRITEMIF	src/drivers/driver_hostap.h	25;"	d
PRISM2_MAX_DOWNLOAD_AREA_LEN	src/drivers/driver_hostap.h	125;"	d
PRISM2_MAX_DOWNLOAD_LEN	src/drivers/driver_hostap.h	126;"	d
PRISM2_PARAM_ALC	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_ALC = 5,$/;"	e	enum:__anon73
PRISM2_PARAM_ANTSEL_RX	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_ANTSEL_RX = 25,$/;"	e	enum:__anon73
PRISM2_PARAM_ANTSEL_TX	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_ANTSEL_TX = 24,$/;"	e	enum:__anon73
PRISM2_PARAM_AP_AUTH_ALGS	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_AP_AUTH_ALGS = 15,$/;"	e	enum:__anon73
PRISM2_PARAM_AP_AUTOM_AP_WDS	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_AP_AUTOM_AP_WDS = 14,$/;"	e	enum:__anon73
PRISM2_PARAM_AP_BRIDGE_PACKETS	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_AP_BRIDGE_PACKETS = 10,$/;"	e	enum:__anon73
PRISM2_PARAM_AP_MAX_INACTIVITY	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_AP_MAX_INACTIVITY = 9,$/;"	e	enum:__anon73
PRISM2_PARAM_AP_NULLFUNC_ACK	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_AP_NULLFUNC_ACK = 12,$/;"	e	enum:__anon73
PRISM2_PARAM_AP_SCAN	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_AP_SCAN = 29,$/;"	e	enum:__anon73
PRISM2_PARAM_BASIC_RATES	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_BASIC_RATES = 32,$/;"	e	enum:__anon73
PRISM2_PARAM_BCRX_STA_KEY	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_BCRX_STA_KEY = 22,$/;"	e	enum:__anon73
PRISM2_PARAM_BEACON_INT	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_BEACON_INT = 3,$/;"	e	enum:__anon73
PRISM2_PARAM_BUS_MASTER_THRESHOLD_RX	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_BUS_MASTER_THRESHOLD_RX = 19,$/;"	e	enum:__anon73
PRISM2_PARAM_BUS_MASTER_THRESHOLD_TX	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_BUS_MASTER_THRESHOLD_TX = 20,$/;"	e	enum:__anon73
PRISM2_PARAM_DROP_UNENCRYPTED	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_DROP_UNENCRYPTED = 39,$/;"	e	enum:__anon73
PRISM2_PARAM_DTIM_PERIOD	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_DTIM_PERIOD = 11,$/;"	e	enum:__anon73
PRISM2_PARAM_DUMP	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_DUMP = 7,$/;"	e	enum:__anon73
PRISM2_PARAM_ENH_SEC	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_ENH_SEC = 30,$/;"	e	enum:__anon73
PRISM2_PARAM_HOSTAPD	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_HOSTAPD = 34,$/;"	e	enum:__anon73
PRISM2_PARAM_HOSTAPD_STA	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_HOSTAPD_STA = 35,$/;"	e	enum:__anon73
PRISM2_PARAM_HOSTSCAN	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_HOSTSCAN = 28,$/;"	e	enum:__anon73
PRISM2_PARAM_HOST_DECRYPT	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_HOST_DECRYPT = 18,$/;"	e	enum:__anon73
PRISM2_PARAM_HOST_ENCRYPT	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_HOST_ENCRYPT = 17,$/;"	e	enum:__anon73
PRISM2_PARAM_HOST_ROAMING	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_HOST_ROAMING = 21,$/;"	e	enum:__anon73
PRISM2_PARAM_IEEE_802_1X	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_IEEE_802_1X = 23,$/;"	e	enum:__anon73
PRISM2_PARAM_IO_DEBUG	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_IO_DEBUG = 31,$/;"	e	enum:__anon73
PRISM2_PARAM_MAX_WDS	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_MAX_WDS = 13,$/;"	e	enum:__anon73
PRISM2_PARAM_MONITOR_ALLOW_FCSERR	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_MONITOR_ALLOW_FCSERR = 16,$/;"	e	enum:__anon73
PRISM2_PARAM_MONITOR_TYPE	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_MONITOR_TYPE = 26,$/;"	e	enum:__anon73
PRISM2_PARAM_OPER_RATES	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_OPER_RATES = 33,$/;"	e	enum:__anon73
PRISM2_PARAM_OTHER_AP_POLICY	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_OTHER_AP_POLICY = 8,$/;"	e	enum:__anon73
PRISM2_PARAM_PRIVACY_INVOKED	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_PRIVACY_INVOKED = 37,$/;"	e	enum:__anon73
PRISM2_PARAM_PSEUDO_IBSS	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_PSEUDO_IBSS = 4,$/;"	e	enum:__anon73
PRISM2_PARAM_SCAN_CHANNEL_MASK	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_SCAN_CHANNEL_MASK = 40,$/;"	e	enum:__anon73
PRISM2_PARAM_TKIP_COUNTERMEASURES	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_TKIP_COUNTERMEASURES = 38,$/;"	e	enum:__anon73
PRISM2_PARAM_TXRATECTRL	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_TXRATECTRL = 2,$/;"	e	enum:__anon73
PRISM2_PARAM_WDS_TYPE	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_WDS_TYPE = 27,$/;"	e	enum:__anon73
PRISM2_PARAM_WPA	src/drivers/driver_hostap.h	/^	PRISM2_PARAM_WPA = 36,$/;"	e	enum:__anon73
PRISM2_SET_ENCRYPTION	src/drivers/driver_hostap.h	/^	PRISM2_SET_ENCRYPTION = 6,$/;"	e	enum:__anon77
PRIVSEP_CMD_ASSOCIATE	src/common/privsep_commands.h	/^	PRIVSEP_CMD_ASSOCIATE,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_GET_BSSID	src/common/privsep_commands.h	/^	PRIVSEP_CMD_GET_BSSID,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_GET_CAPA	src/common/privsep_commands.h	/^	PRIVSEP_CMD_GET_CAPA,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_GET_SCAN_RESULTS	src/common/privsep_commands.h	/^	PRIVSEP_CMD_GET_SCAN_RESULTS,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_GET_SSID	src/common/privsep_commands.h	/^	PRIVSEP_CMD_GET_SSID,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_L2_NOTIFY_AUTH_START	src/common/privsep_commands.h	/^	PRIVSEP_CMD_L2_NOTIFY_AUTH_START,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_L2_REGISTER	src/common/privsep_commands.h	/^	PRIVSEP_CMD_L2_REGISTER,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_L2_SEND	src/common/privsep_commands.h	/^	PRIVSEP_CMD_L2_SEND,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_L2_UNREGISTER	src/common/privsep_commands.h	/^	PRIVSEP_CMD_L2_UNREGISTER,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_REGISTER	src/common/privsep_commands.h	/^	PRIVSEP_CMD_REGISTER,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_SCAN	src/common/privsep_commands.h	/^	PRIVSEP_CMD_SCAN,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_SET_COUNTRY	src/common/privsep_commands.h	/^	PRIVSEP_CMD_SET_COUNTRY,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_SET_KEY	src/common/privsep_commands.h	/^	PRIVSEP_CMD_SET_KEY,$/;"	e	enum:privsep_cmd
PRIVSEP_CMD_UNREGISTER	src/common/privsep_commands.h	/^	PRIVSEP_CMD_UNREGISTER,$/;"	e	enum:privsep_cmd
PRIVSEP_COMMANDS_H	src/common/privsep_commands.h	16;"	d
PRIVSEP_EVENT_ASSOC	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_ASSOC,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_ASSOCINFO	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_ASSOCINFO,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_DISASSOC	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_DISASSOC,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_FT_RESPONSE	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_FT_RESPONSE,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_INTERFACE_STATUS	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_INTERFACE_STATUS,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_MICHAEL_MIC_FAILURE	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_MICHAEL_MIC_FAILURE,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_PMKID_CANDIDATE	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_PMKID_CANDIDATE,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_RX_EAPOL	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_RX_EAPOL,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_SCAN_RESULTS	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_SCAN_RESULTS,$/;"	e	enum:privsep_event
PRIVSEP_EVENT_STKSTART	src/common/privsep_commands.h	/^	PRIVSEP_EVENT_STKSTART,$/;"	e	enum:privsep_event
PRIV_NETLINK_H	src/drivers/priv_netlink.h	16;"	d
PROC_MSG	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
PROC_MSG	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
PSK_1	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
PSK_3	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
PSK_DONE	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	e	enum:eap_psk_data::__anon178	file:
PSK_ENABLED	src/drivers/driver_broadcom.c	65;"	d	file:
PSK_INIT	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	e	enum:eap_psk_data::__anon178	file:
PSK_MAC_SENT	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	e	enum:eap_psk_data::__anon178	file:
PSecPkgContext_EapKeyBlock	src/crypto/tls_schannel.c	/^} SecPkgContext_EapKeyBlock, *PSecPkgContext_EapKeyBlock;$/;"	t	typeref:struct:_SecPkgContext_EapKeyBlock	file:
PTK	src/ap/wpa_auth_i.h	/^	struct wpa_ptk PTK;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::wpa_ptk	access:public
PTKRequest	src/ap/wpa_auth_i.h	/^	Boolean PTKRequest; \/* not in IEEE 802.11i state machine *\/$/;"	m	struct:wpa_state_machine	access:public
PTK_valid	src/ap/wpa_auth_i.h	/^	Boolean PTK_valid;$/;"	m	struct:wpa_state_machine	access:public
PUCHAR	src/drivers/driver_ralink.h	/^typedef UCHAR           *PUCHAR;$/;"	t
PULONG	src/drivers/driver_ralink.h	/^typedef ULONG           *PULONG;$/;"	t
PUSHORT	src/drivers/driver_ralink.h	/^typedef USHORT          *PUSHORT;$/;"	t
PUTU32	src/crypto/aes_i.h	109;"	d
PUTU32	src/crypto/aes_i.h	113;"	d
PUT_32BIT_LE	src/crypto/md4-internal.c	85;"	d	file:
PUT_64BIT_LE	src/crypto/md4-internal.c	75;"	d	file:
PVOID	src/drivers/driver_ralink.h	/^typedef VOID            *PVOID;$/;"	t
PWBLOCK_LEN	src/crypto/ms_funcs.c	423;"	d	file:
PWD_Commit_Req	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
PWD_Commit_Req	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
PWD_Confirm_Req	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
PWD_Confirm_Req	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
PWD_ID_Req	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
PWD_ID_Req	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
Pair	src/ap/wpa_auth_i.h	/^	Boolean Pair;$/;"	m	struct:wpa_state_machine	access:public
ParseFailed	src/common/ieee802_11_common.h	/^typedef enum { ParseOK = 0, ParseUnknown = 1, ParseFailed = -1 } ParseRes;$/;"	e	enum:__anon37
ParseOK	src/common/ieee802_11_common.h	/^typedef enum { ParseOK = 0, ParseUnknown = 1, ParseFailed = -1 } ParseRes;$/;"	e	enum:__anon37
ParseRes	src/common/ieee802_11_common.h	/^typedef enum { ParseOK = 0, ParseUnknown = 1, ParseFailed = -1 } ParseRes;$/;"	t	typeref:enum:__anon37
ParseUnknown	src/common/ieee802_11_common.h	/^typedef enum { ParseOK = 0, ParseUnknown = 1, ParseFailed = -1 } ParseRes;$/;"	e	enum:__anon37
PortControl	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Auto, ForceUnauthorized, ForceAuthorized } PortControl;$/;"	t	typeref:enum:__anon23
PortState	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { Unauthorized = 2, Authorized = 1 } PortState;    \/\/ 受控端口当前状态：未授权状态、授权状态$/;"	t	typeref:enum:__anon64
PortStatus	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Unauthorized, Authorized } PortStatus;$/;"	t	typeref:enum:__anon22
PortTypes	src/eapol_auth/eapol_auth_sm_i.h	/^	PortTypes;  \/\/ 受控端口类型：强制端口保持在未授权状态、强制端口保持在啊授权状态、自动（根据认证结果而定）$/;"	t	typeref:enum:__anon63
Privacy	src/drivers/driver_ndis.c	/^	ULONG Privacy;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
Privacy	src/drivers/driver_ralink.h	/^    UINT                                Privacy;            \/\/ WEP encryption requirement$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
Privacy	src/drivers/driver_ralink.h	/^   ULONG                               Privacy;    \/\/ WEP encryption requirement$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
ProvideBindFunction	src/eap_peer/tncc.c	/^	TNC_Result (*ProvideBindFunction)($/;"	m	struct:tnc_if_imc	file:	access:public
ProvideBindFunction	src/eap_server/tncs.c	/^	TNC_Result (*ProvideBindFunction)($/;"	m	struct:tnc_if_imv	file:	access:public
PtkGroupInit	src/ap/wpa_auth_i.h	/^	Boolean PtkGroupInit; \/* init request for PTK Group state machine *\/$/;"	m	struct:wpa_state_machine	access:public
Q	hostapd/Makefile	/^Q=$/;"	m
Q	hostapd/Makefile	/^Q=@$/;"	m
QuadPart	src/drivers/driver_ralink.h	/^    s64 QuadPart;$/;"	m	union:_LARGE_INTEGER	access:public
R	src/crypto/sha256-internal.c	89;"	d	file:
R0	src/crypto/sha1-internal.c	145;"	d	file:
R1	src/crypto/sha1-internal.c	148;"	d	file:
R2	src/crypto/sha1-internal.c	151;"	d	file:
R3	src/crypto/sha1-internal.c	153;"	d	file:
R4	src/crypto/sha1-internal.c	156;"	d	file:
RADIUS_802_1X_ADDR_FORMAT	src/radius/radius.h	191;"	d
RADIUS_ACCT	src/radius/radius_client.h	/^	RADIUS_ACCT,$/;"	e	enum:__anon205
RADIUS_ACCT_AUTHENTIC_LOCAL	src/radius/radius.h	115;"	d
RADIUS_ACCT_AUTHENTIC_RADIUS	src/radius/radius.h	114;"	d
RADIUS_ACCT_AUTHENTIC_REMOTE	src/radius/radius.h	116;"	d
RADIUS_ACCT_INTERIM	src/radius/radius_client.h	/^	RADIUS_ACCT_INTERIM$/;"	e	enum:__anon205
RADIUS_ACCT_STATUS_TYPE_ACCOUNTING_OFF	src/radius/radius.h	111;"	d
RADIUS_ACCT_STATUS_TYPE_ACCOUNTING_ON	src/radius/radius.h	110;"	d
RADIUS_ACCT_STATUS_TYPE_INTERIM_UPDATE	src/radius/radius.h	109;"	d
RADIUS_ACCT_STATUS_TYPE_START	src/radius/radius.h	107;"	d
RADIUS_ACCT_STATUS_TYPE_STOP	src/radius/radius.h	108;"	d
RADIUS_ACCT_TERMINATE_CAUSE_ADMIN_REBOOT	src/radius/radius.h	125;"	d
RADIUS_ACCT_TERMINATE_CAUSE_ADMIN_RESET	src/radius/radius.h	124;"	d
RADIUS_ACCT_TERMINATE_CAUSE_CALLBACK	src/radius/radius.h	134;"	d
RADIUS_ACCT_TERMINATE_CAUSE_HOST_REQUEST	src/radius/radius.h	136;"	d
RADIUS_ACCT_TERMINATE_CAUSE_IDLE_TIMEOUT	src/radius/radius.h	122;"	d
RADIUS_ACCT_TERMINATE_CAUSE_LOST_CARRIER	src/radius/radius.h	120;"	d
RADIUS_ACCT_TERMINATE_CAUSE_LOST_SERVICE	src/radius/radius.h	121;"	d
RADIUS_ACCT_TERMINATE_CAUSE_NAS_ERROR	src/radius/radius.h	127;"	d
RADIUS_ACCT_TERMINATE_CAUSE_NAS_REBOOT	src/radius/radius.h	129;"	d
RADIUS_ACCT_TERMINATE_CAUSE_NAS_REQUEST	src/radius/radius.h	128;"	d
RADIUS_ACCT_TERMINATE_CAUSE_PORT_ERROR	src/radius/radius.h	126;"	d
RADIUS_ACCT_TERMINATE_CAUSE_PORT_PREEMPTED	src/radius/radius.h	131;"	d
RADIUS_ACCT_TERMINATE_CAUSE_PORT_SUSPENDED	src/radius/radius.h	132;"	d
RADIUS_ACCT_TERMINATE_CAUSE_PORT_UNNEEDED	src/radius/radius.h	130;"	d
RADIUS_ACCT_TERMINATE_CAUSE_SERVICE_UNAVAILABLE	src/radius/radius.h	133;"	d
RADIUS_ACCT_TERMINATE_CAUSE_SESSION_TIMEOUT	src/radius/radius.h	123;"	d
RADIUS_ACCT_TERMINATE_CAUSE_USER_ERROR	src/radius/radius.h	135;"	d
RADIUS_ACCT_TERMINATE_CAUSE_USER_REQUEST	src/radius/radius.h	119;"	d
RADIUS_ACL_TIMEOUT	src/ap/ieee802_11_auth.c	32;"	d	file:
RADIUS_ADDR_FORMAT	src/radius/radius.h	193;"	d
RADIUS_ATTRS	src/radius/radius.c	240;"	d	file:
RADIUS_ATTR_ACCT_AUTHENTIC	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_AUTHENTIC = 45,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_DELAY_TIME	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_DELAY_TIME = 41,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_INPUT_GIGAWORDS	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_INPUT_GIGAWORDS = 52,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_INPUT_OCTETS	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_INPUT_OCTETS = 42,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_INPUT_PACKETS	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_INPUT_PACKETS = 47,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_INTERIM_INTERVAL	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_INTERIM_INTERVAL = 85,      \/\/ 对于某个确定的会话，中间更新流量信息的时间间隔（s）,本属性只能出现在Access-Accept报文中$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_LINK_COUNT	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_LINK_COUNT = 51,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_MULTI_SESSION_ID	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_MULTI_SESSION_ID = 50,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_OUTPUT_GIGAWORDS	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_OUTPUT_GIGAWORDS = 53,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_OUTPUT_OCTETS	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_OUTPUT_OCTETS = 43,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_OUTPUT_PACKETS	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_OUTPUT_PACKETS = 48,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_SESSION_ID	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_SESSION_ID = 44,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_SESSION_TIME	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_SESSION_TIME = 46,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_STATUS_TYPE	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_STATUS_TYPE = 40,$/;"	e	enum:__anon202
RADIUS_ATTR_ACCT_TERMINATE_CAUSE	src/radius/radius.h	/^       RADIUS_ATTR_ACCT_TERMINATE_CAUSE = 49,$/;"	e	enum:__anon202
RADIUS_ATTR_CALLED_STATION_ID	src/radius/radius.h	/^       RADIUS_ATTR_CALLED_STATION_ID = 30,$/;"	e	enum:__anon202
RADIUS_ATTR_CALLING_STATION_ID	src/radius/radius.h	/^       RADIUS_ATTR_CALLING_STATION_ID = 31,$/;"	e	enum:__anon202
RADIUS_ATTR_CHAP_CHALLENGE	src/eap_common/eap_ttls.h	51;"	d
RADIUS_ATTR_CHAP_PASSWORD	src/eap_common/eap_ttls.h	49;"	d
RADIUS_ATTR_CHARGEABLE_USER_IDENTITY	src/radius/radius.h	/^       RADIUS_ATTR_CHARGEABLE_USER_IDENTITY = 89,$/;"	e	enum:__anon202
RADIUS_ATTR_CLASS	src/radius/radius.h	/^       RADIUS_ATTR_CLASS = 25,$/;"	e	enum:__anon202
RADIUS_ATTR_CONNECT_INFO	src/radius/radius.h	/^       RADIUS_ATTR_CONNECT_INFO = 77,$/;"	e	enum:__anon202
RADIUS_ATTR_EAP_MESSAGE	src/eap_common/eap_ttls.h	52;"	d
RADIUS_ATTR_EAP_MESSAGE	src/radius/radius.h	/^       RADIUS_ATTR_EAP_MESSAGE = 79,$/;"	e	enum:__anon202
RADIUS_ATTR_EVENT_TIMESTAMP	src/radius/radius.h	/^       RADIUS_ATTR_EVENT_TIMESTAMP = 55,$/;"	e	enum:__anon202
RADIUS_ATTR_FRAMED_MTU	src/radius/radius.h	/^       RADIUS_ATTR_FRAMED_MTU = 12,$/;"	e	enum:__anon202
RADIUS_ATTR_HEXDUMP	src/radius/radius.c	/^		RADIUS_ATTR_HEXDUMP, RADIUS_ATTR_INT32, RADIUS_ATTR_IPV6$/;"	e	enum:radius_attr_type::__anon204	file:
RADIUS_ATTR_IDLE_TIMEOUT	src/radius/radius.h	/^       RADIUS_ATTR_IDLE_TIMEOUT = 28,$/;"	e	enum:__anon202
RADIUS_ATTR_INT32	src/radius/radius.c	/^		RADIUS_ATTR_HEXDUMP, RADIUS_ATTR_INT32, RADIUS_ATTR_IPV6$/;"	e	enum:radius_attr_type::__anon204	file:
RADIUS_ATTR_IP	src/radius/radius.c	/^		RADIUS_ATTR_UNDIST, RADIUS_ATTR_TEXT, RADIUS_ATTR_IP,$/;"	e	enum:radius_attr_type::__anon204	file:
RADIUS_ATTR_IPV6	src/radius/radius.c	/^		RADIUS_ATTR_HEXDUMP, RADIUS_ATTR_INT32, RADIUS_ATTR_IPV6$/;"	e	enum:radius_attr_type::__anon204	file:
RADIUS_ATTR_MESSAGE_AUTHENTICATOR	src/radius/radius.h	/^       RADIUS_ATTR_MESSAGE_AUTHENTICATOR = 80,$/;"	e	enum:__anon202
RADIUS_ATTR_MS_CHAP2_CPW	src/eap_common/eap_ttls.h	62;"	d
RADIUS_ATTR_MS_CHAP2_RESPONSE	src/eap_common/eap_ttls.h	60;"	d
RADIUS_ATTR_MS_CHAP2_SUCCESS	src/eap_common/eap_ttls.h	61;"	d
RADIUS_ATTR_MS_CHAP_CHALLENGE	src/eap_common/eap_ttls.h	59;"	d
RADIUS_ATTR_MS_CHAP_ERROR	src/eap_common/eap_ttls.h	57;"	d
RADIUS_ATTR_MS_CHAP_NT_ENC_PW	src/eap_common/eap_ttls.h	58;"	d
RADIUS_ATTR_MS_CHAP_RESPONSE	src/eap_common/eap_ttls.h	56;"	d
RADIUS_ATTR_NAS_IDENTIFIER	src/radius/radius.h	/^       RADIUS_ATTR_NAS_IDENTIFIER = 32,$/;"	e	enum:__anon202
RADIUS_ATTR_NAS_IPV6_ADDRESS	src/radius/radius.h	/^       RADIUS_ATTR_NAS_IPV6_ADDRESS = 95$/;"	e	enum:__anon202
RADIUS_ATTR_NAS_IP_ADDRESS	src/radius/radius.h	/^       RADIUS_ATTR_NAS_IP_ADDRESS = 4,$/;"	e	enum:__anon202
RADIUS_ATTR_NAS_PORT	src/radius/radius.h	/^       RADIUS_ATTR_NAS_PORT = 5,$/;"	e	enum:__anon202
RADIUS_ATTR_NAS_PORT_TYPE	src/radius/radius.h	/^       RADIUS_ATTR_NAS_PORT_TYPE = 61,$/;"	e	enum:__anon202
RADIUS_ATTR_PROXY_STATE	src/radius/radius.h	/^       RADIUS_ATTR_PROXY_STATE = 33,$/;"	e	enum:__anon202
RADIUS_ATTR_REPLY_MESSAGE	src/eap_common/eap_ttls.h	50;"	d
RADIUS_ATTR_REPLY_MESSAGE	src/radius/radius.h	/^       RADIUS_ATTR_REPLY_MESSAGE = 18,$/;"	e	enum:__anon202
RADIUS_ATTR_SESSION_TIMEOUT	src/radius/radius.h	/^       RADIUS_ATTR_SESSION_TIMEOUT = 27,    \/\/ 在Access-Request中，表示为用户提供服务的剩余时间；在Access-Challenge中，表示NAS->SUPP之间EAP报文重传时间$/;"	e	enum:__anon202
RADIUS_ATTR_STATE	src/radius/radius.h	/^       RADIUS_ATTR_STATE = 24,$/;"	e	enum:__anon202
RADIUS_ATTR_TERMINATION_ACTION	src/radius/radius.h	/^       RADIUS_ATTR_TERMINATION_ACTION = 29,$/;"	e	enum:__anon202
RADIUS_ATTR_TEXT	src/radius/radius.c	/^		RADIUS_ATTR_UNDIST, RADIUS_ATTR_TEXT, RADIUS_ATTR_IP,$/;"	e	enum:radius_attr_type::__anon204	file:
RADIUS_ATTR_TUNNEL_MEDIUM_TYPE	src/radius/radius.h	/^       RADIUS_ATTR_TUNNEL_MEDIUM_TYPE = 65,$/;"	e	enum:__anon202
RADIUS_ATTR_TUNNEL_PRIVATE_GROUP_ID	src/radius/radius.h	/^       RADIUS_ATTR_TUNNEL_PRIVATE_GROUP_ID = 81,$/;"	e	enum:__anon202
RADIUS_ATTR_TUNNEL_TYPE	src/radius/radius.h	/^       RADIUS_ATTR_TUNNEL_TYPE = 64,$/;"	e	enum:__anon202
RADIUS_ATTR_UNDIST	src/radius/radius.c	/^		RADIUS_ATTR_UNDIST, RADIUS_ATTR_TEXT, RADIUS_ATTR_IP,$/;"	e	enum:radius_attr_type::__anon204	file:
RADIUS_ATTR_USER_NAME	src/eap_common/eap_ttls.h	47;"	d
RADIUS_ATTR_USER_NAME	src/radius/radius.h	/^enum { RADIUS_ATTR_USER_NAME = 1,$/;"	e	enum:__anon202
RADIUS_ATTR_USER_PASSWORD	src/eap_common/eap_ttls.h	48;"	d
RADIUS_ATTR_USER_PASSWORD	src/radius/radius.h	/^       RADIUS_ATTR_USER_PASSWORD = 2,$/;"	e	enum:__anon202
RADIUS_ATTR_VENDOR_SPECIFIC	src/radius/radius.h	/^       RADIUS_ATTR_VENDOR_SPECIFIC = 26,$/;"	e	enum:__anon202
RADIUS_AUTH	src/radius/radius_client.h	/^	RADIUS_AUTH,$/;"	e	enum:__anon205
RADIUS_CISCO_AV_PAIR	src/radius/radius.h	159;"	d
RADIUS_CLIENT_FIRST_WAIT	src/radius/radius_client.c	27;"	d	file:
RADIUS_CLIENT_H	src/radius/radius_client.h	16;"	d
RADIUS_CLIENT_MAX_ENTRIES	src/radius/radius_client.c	48;"	d	file:
RADIUS_CLIENT_MAX_RETRIES	src/radius/radius_client.c	40;"	d	file:
RADIUS_CLIENT_MAX_WAIT	src/radius/radius_client.c	32;"	d	file:
RADIUS_CLIENT_NUM_FAILOVER	src/radius/radius_client.c	56;"	d	file:
RADIUS_CODE_ACCESS_ACCEPT	src/radius/radius.h	/^       RADIUS_CODE_ACCESS_ACCEPT = 2,       \/\/ 认证接受包$/;"	e	enum:__anon201
RADIUS_CODE_ACCESS_CHALLENGE	src/radius/radius.h	/^       RADIUS_CODE_ACCESS_CHALLENGE = 11,   \/\/ 挑战字包$/;"	e	enum:__anon201
RADIUS_CODE_ACCESS_REJECT	src/radius/radius.h	/^       RADIUS_CODE_ACCESS_REJECT = 3,       \/\/ 认证拒绝包$/;"	e	enum:__anon201
RADIUS_CODE_ACCESS_REQUEST	src/radius/radius.h	/^enum { RADIUS_CODE_ACCESS_REQUEST = 1,      \/\/ 认证请求包$/;"	e	enum:__anon201
RADIUS_CODE_ACCOUNTING_REQUEST	src/radius/radius.h	/^       RADIUS_CODE_ACCOUNTING_REQUEST = 4,  \/\/ 计费请求包$/;"	e	enum:__anon201
RADIUS_CODE_ACCOUNTING_RESPONSE	src/radius/radius.h	/^       RADIUS_CODE_ACCOUNTING_RESPONSE = 5, \/\/ 计费响应包$/;"	e	enum:__anon201
RADIUS_CODE_RESERVED	src/radius/radius.h	/^       RADIUS_CODE_RESERVED = 255           \/\/ 保留包类型$/;"	e	enum:__anon201
RADIUS_CODE_STATUS_CLIENT	src/radius/radius.h	/^       RADIUS_CODE_STATUS_CLIENT = 13,      \/\/ 客户端状态包$/;"	e	enum:__anon201
RADIUS_CODE_STATUS_SERVER	src/radius/radius.h	/^       RADIUS_CODE_STATUS_SERVER = 12,      \/\/ 服务器状态包$/;"	e	enum:__anon201
RADIUS_DEBUG	src/radius/radius_server.c	300;"	d	file:
RADIUS_DEFAULT_ATTR_COUNT	src/radius/radius.h	186;"	d
RADIUS_DEFAULT_MSG_SIZE	src/radius/radius.h	183;"	d
RADIUS_DUMP	src/radius/radius_server.c	304;"	d	file:
RADIUS_DUMP_ASCII	src/radius/radius_server.c	306;"	d	file:
RADIUS_ERROR	src/radius/radius_server.c	302;"	d	file:
RADIUS_H	src/radius/radius.h	16;"	d
RADIUS_MAX_ATTR_LEN	src/radius/radius.h	52;"	d
RADIUS_MAX_MSG_LEN	src/radius/radius_server.c	37;"	d	file:
RADIUS_MAX_SESSION	src/radius/radius_server.c	32;"	d	file:
RADIUS_NAS_PORT_TYPE_IEEE_802_11	src/radius/radius.h	104;"	d
RADIUS_RX_INVALID_AUTHENTICATOR	src/radius/radius_client.h	/^	RADIUS_RX_INVALID_AUTHENTICATOR$/;"	e	enum:__anon206
RADIUS_RX_PROCESSED	src/radius/radius_client.h	/^	RADIUS_RX_PROCESSED,$/;"	e	enum:__anon206
RADIUS_RX_QUEUED	src/radius/radius_client.h	/^	RADIUS_RX_QUEUED,$/;"	e	enum:__anon206
RADIUS_RX_UNKNOWN	src/radius/radius_client.h	/^	RADIUS_RX_UNKNOWN,$/;"	e	enum:__anon206
RADIUS_SERVER_H	src/radius/radius_server.h	16;"	d
RADIUS_SESSION_TIMEOUT	src/radius/radius_server.c	27;"	d	file:
RADIUS_TERMINATION_ACTION_DEFAULT	src/radius/radius.h	100;"	d
RADIUS_TERMINATION_ACTION_RADIUS_REQUEST	src/radius/radius.h	101;"	d
RADIUS_TUNNEL_MEDIUM_TYPE_802	src/radius/radius.h	150;"	d
RADIUS_TUNNEL_MEDIUM_TYPE_IPV4	src/radius/radius.h	148;"	d
RADIUS_TUNNEL_MEDIUM_TYPE_IPV6	src/radius/radius.h	149;"	d
RADIUS_TUNNEL_TAGS	src/radius/radius.h	138;"	d
RADIUS_TUNNEL_TYPE_GRE	src/radius/radius.h	144;"	d
RADIUS_TUNNEL_TYPE_IPIP	src/radius/radius.h	143;"	d
RADIUS_TUNNEL_TYPE_L2TP	src/radius/radius.h	142;"	d
RADIUS_TUNNEL_TYPE_PPTP	src/radius/radius.h	141;"	d
RADIUS_TUNNEL_TYPE_VLAN	src/radius/radius.h	145;"	d
RADIUS_VENDOR_ATTR_MS_MPPE_RECV_KEY	src/radius/radius.h	/^       RADIUS_VENDOR_ATTR_MS_MPPE_RECV_KEY = 17$/;"	e	enum:__anon203
RADIUS_VENDOR_ATTR_MS_MPPE_SEND_KEY	src/radius/radius.h	/^enum { RADIUS_VENDOR_ATTR_MS_MPPE_SEND_KEY = 16,$/;"	e	enum:__anon203
RADIUS_VENDOR_ID_CISCO	src/radius/radius.h	158;"	d
RADIUS_VENDOR_ID_MICROSOFT	src/eap_common/eap_ttls.h	55;"	d
RADIUS_VENDOR_ID_MICROSOFT	src/radius/radius.h	162;"	d
RANDOM_ENTROPY_SIZE	src/crypto/random.c	60;"	d	file:
RANDOM_H	src/crypto/random.h	16;"	d
RAW_DATA	src/drivers/driver_ndis.c	/^} RAW_DATA, *PRAW_DATA;$/;"	t	typeref:struct:__anon96	file:
RCON	src/crypto/aes_i.h	39;"	d
RCON	src/crypto/aes_i.h	70;"	d
REAUTH	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
REAUTH	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
REAUTH_TIMER_INITIALIZE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { REAUTH_TIMER_INITIALIZE, REAUTH_TIMER_REAUTHENTICATE$/;"	e	enum:eapol_state_machine::__anon68
REAUTH_TIMER_REAUTHENTICATE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { REAUTH_TIMER_INITIALIZE, REAUTH_TIMER_REAUTHENTICATE$/;"	e	enum:eapol_state_machine::__anon68
RECEIVED_M2D	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
RECOMMENDATION	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
RECV_ACK	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
RECV_DONE	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
RECV_M1	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
RECV_M2	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
RECV_M2D_ACK	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
RECV_M3	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
RECV_M4	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
RECV_M5	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
RECV_M6	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
RECV_M7	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
RECV_M8	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
REMOTE_GO	src/p2p/p2p_i.h	/^	REMOTE_GO$/;"	e	enum:p2p_go_state
REQUEST_PAC	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
REQUIRE_BINDING	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon172	file:
REQUIRE_BINDING	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon162	file:
RESULT_FAILURE	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
RESULT_FAILURE	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
RESULT_SUCCESS	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
RESULT_SUCCESS	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
RES_MAX_LEN	src/utils/pcsc_funcs.c	85;"	d	file:
RFKILL_EVENT_SIZE_V1	src/drivers/rfkill.c	22;"	d	file:
RFKILL_H	src/drivers/rfkill.h	16;"	d
RFKILL_OP_ADD	src/drivers/rfkill.c	/^	RFKILL_OP_ADD = 0,$/;"	e	enum:rfkill_operation	file:
RFKILL_OP_CHANGE	src/drivers/rfkill.c	/^	RFKILL_OP_CHANGE,$/;"	e	enum:rfkill_operation	file:
RFKILL_OP_CHANGE_ALL	src/drivers/rfkill.c	/^	RFKILL_OP_CHANGE_ALL,$/;"	e	enum:rfkill_operation	file:
RFKILL_OP_DEL	src/drivers/rfkill.c	/^	RFKILL_OP_DEL,$/;"	e	enum:rfkill_operation	file:
RFKILL_TYPE_ALL	src/drivers/rfkill.c	/^	RFKILL_TYPE_ALL = 0,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_BLUETOOTH	src/drivers/rfkill.c	/^	RFKILL_TYPE_BLUETOOTH,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_FM	src/drivers/rfkill.c	/^	RFKILL_TYPE_FM,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_GPS	src/drivers/rfkill.c	/^	RFKILL_TYPE_GPS,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_UWB	src/drivers/rfkill.c	/^	RFKILL_TYPE_UWB,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_WIMAX	src/drivers/rfkill.c	/^	RFKILL_TYPE_WIMAX,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_WLAN	src/drivers/rfkill.c	/^	RFKILL_TYPE_WLAN,$/;"	e	enum:rfkill_type	file:
RFKILL_TYPE_WWAN	src/drivers/rfkill.c	/^	RFKILL_TYPE_WWAN,$/;"	e	enum:rfkill_type	file:
RND	src/crypto/sha256-internal.c	121;"	d	file:
ROBO_ARLCTRL_ADDR_1	src/drivers/driver_roboswitch.c	45;"	d	file:
ROBO_ARLCTRL_ADDR_2	src/drivers/driver_roboswitch.c	47;"	d	file:
ROBO_ARLCTRL_CONF	src/drivers/driver_roboswitch.c	44;"	d	file:
ROBO_ARLCTRL_PAGE	src/drivers/driver_roboswitch.c	40;"	d	file:
ROBO_ARLCTRL_VEC_1	src/drivers/driver_roboswitch.c	46;"	d	file:
ROBO_ARLCTRL_VEC_2	src/drivers/driver_roboswitch.c	48;"	d	file:
ROBO_MII_ADDR	src/drivers/driver_roboswitch.c	30;"	d	file:
ROBO_MII_ADDR_READ	src/drivers/driver_roboswitch.c	35;"	d	file:
ROBO_MII_ADDR_WRITE	src/drivers/driver_roboswitch.c	34;"	d	file:
ROBO_MII_DATA_MAX	src/drivers/driver_roboswitch.c	36;"	d	file:
ROBO_MII_DATA_OFFSET	src/drivers/driver_roboswitch.c	31;"	d	file:
ROBO_MII_PAGE	src/drivers/driver_roboswitch.c	29;"	d	file:
ROBO_MII_PAGE_ENABLE	src/drivers/driver_roboswitch.c	33;"	d	file:
ROBO_MII_RETRY_MAX	src/drivers/driver_roboswitch.c	37;"	d	file:
ROBO_PHY_ADDR	src/drivers/driver_roboswitch.c	26;"	d	file:
ROBO_VLAN_ACCESS	src/drivers/driver_roboswitch.c	51;"	d	file:
ROBO_VLAN_ACCESS_5350	src/drivers/driver_roboswitch.c	52;"	d	file:
ROBO_VLAN_MAX	src/drivers/driver_roboswitch.c	54;"	d	file:
ROBO_VLAN_PAGE	src/drivers/driver_roboswitch.c	41;"	d	file:
ROBO_VLAN_READ	src/drivers/driver_roboswitch.c	53;"	d	file:
ROLc	src/crypto/des-internal.c	44;"	d	file:
RORc	src/crypto/des-internal.c	48;"	d	file:
RORc	src/crypto/sha256-internal.c	83;"	d	file:
ROUND	src/crypto/aes-internal-dec.c	125;"	d	file:
ROUND	src/crypto/aes-internal-dec.c	91;"	d	file:
ROUND	src/crypto/aes-internal-enc.c	47;"	d	file:
ROUND	src/crypto/aes-internal-enc.c	81;"	d	file:
RSA_H	src/tls/rsa.h	16;"	d
RSNA_MAX_EAPOL_RETRIES	src/ap/wpa_auth_i.h	19;"	d
RSNA_PMK_LIFETIME	src/rsn_supp/wpa.h	/^	RSNA_PMK_LIFETIME \/* dot11RSNAConfigPMKLifetime *\/,$/;"	e	enum:wpa_sm_conf_params
RSNA_PMK_REAUTH_THRESHOLD	src/rsn_supp/wpa.h	/^	RSNA_PMK_REAUTH_THRESHOLD \/* dot11RSNAConfigPMKReauthThreshold *\/,$/;"	e	enum:wpa_sm_conf_params
RSNA_SA_TIMEOUT	src/rsn_supp/wpa.h	/^	RSNA_SA_TIMEOUT \/* dot11RSNAConfigSATimeout *\/,$/;"	e	enum:wpa_sm_conf_params
RSN_AUTH_KEY_MGMT_802_1X_SHA256	src/common/wpa_common.h	57;"	d
RSN_AUTH_KEY_MGMT_FT_802_1X	src/common/wpa_common.h	54;"	d
RSN_AUTH_KEY_MGMT_FT_PSK	src/common/wpa_common.h	55;"	d
RSN_AUTH_KEY_MGMT_PSK_OVER_802_1X	src/common/wpa_common.h	52;"	d
RSN_AUTH_KEY_MGMT_PSK_SHA256	src/common/wpa_common.h	58;"	d
RSN_AUTH_KEY_MGMT_TPK_HANDSHAKE	src/common/wpa_common.h	59;"	d
RSN_AUTH_KEY_MGMT_UNSPEC_802_1X	src/common/wpa_common.h	51;"	d
RSN_CIPHER_SUITE_AES_128_CMAC	src/common/wpa_common.h	70;"	d
RSN_CIPHER_SUITE_CCMP	src/common/wpa_common.h	67;"	d
RSN_CIPHER_SUITE_NONE	src/common/wpa_common.h	61;"	d
RSN_CIPHER_SUITE_NO_GROUP_ADDRESSED	src/common/wpa_common.h	72;"	d
RSN_CIPHER_SUITE_TKIP	src/common/wpa_common.h	63;"	d
RSN_CIPHER_SUITE_WEP104	src/common/wpa_common.h	68;"	d
RSN_CIPHER_SUITE_WEP40	src/common/wpa_common.h	62;"	d
RSN_FT_CAPAB_FT_OVER_DS	src/common/wpa_common.h	277;"	d
RSN_FT_CAPAB_FT_RESOURCE_REQ_SUPP	src/common/wpa_common.h	278;"	d
RSN_KEY_DATA_ERROR	src/common/wpa_common.h	87;"	d
RSN_KEY_DATA_GROUPKEY	src/common/wpa_common.h	77;"	d
RSN_KEY_DATA_IGTK	src/common/wpa_common.h	90;"	d
RSN_KEY_DATA_LIFETIME	src/common/wpa_common.h	86;"	d
RSN_KEY_DATA_MAC_ADDR	src/common/wpa_common.h	81;"	d
RSN_KEY_DATA_NONCE	src/common/wpa_common.h	85;"	d
RSN_KEY_DATA_PMKID	src/common/wpa_common.h	82;"	d
RSN_KEY_DATA_SMK	src/common/wpa_common.h	84;"	d
RSN_NUM_REPLAY_COUNTERS_1	src/common/wpa_common.h	98;"	d
RSN_NUM_REPLAY_COUNTERS_16	src/common/wpa_common.h	101;"	d
RSN_NUM_REPLAY_COUNTERS_2	src/common/wpa_common.h	99;"	d
RSN_NUM_REPLAY_COUNTERS_4	src/common/wpa_common.h	100;"	d
RSN_REMOTE_FRAME_TYPE_FT_RRB	src/ap/wpa_auth.h	39;"	d
RSN_SELECTOR	src/common/wpa_common.h	34;"	d
RSN_SELECTOR_GET	src/common/wpa_common.h	96;"	d
RSN_SELECTOR_LEN	src/common/wpa_common.h	31;"	d
RSN_SELECTOR_PUT	src/common/wpa_common.h	95;"	d
RSN_SUITE	src/ap/wpa_auth.c	2563;"	d	file:
RSN_SUITE	src/rsn_supp/wpa.c	1931;"	d	file:
RSN_SUITE_ARG	src/ap/wpa_auth.c	2564;"	d	file:
RSN_SUITE_ARG	src/rsn_supp/wpa.c	1932;"	d	file:
RSN_VERSION	src/common/wpa_common.h	32;"	d
RSN_VERSION	src/drivers/driver_bsd.c	616;"	d	file:
RSN_VERSION	src/drivers/driver_madwifi.c	61;"	d	file:
RTA_ALIGN	src/drivers/priv_netlink.h	69;"	d
RTA_ALIGNTO	src/drivers/priv_netlink.h	68;"	d
RTA_DATA	src/drivers/priv_netlink.h	77;"	d
RTA_LENGTH	src/drivers/priv_netlink.h	76;"	d
RTA_NEXT	src/drivers/priv_netlink.h	73;"	d
RTA_OK	src/drivers/priv_netlink.h	70;"	d
RTMGRP_LINK	src/drivers/priv_netlink.h	48;"	d
RTM_BASE	src/drivers/priv_netlink.h	49;"	d
RTM_DELLINK	src/drivers/priv_netlink.h	51;"	d
RTM_NEWLINK	src/drivers/priv_netlink.h	50;"	d
RTM_SETLINK	src/drivers/priv_netlink.h	52;"	d
RTPRIV_IOCTL_SET	src/drivers/driver_ralink.h	25;"	d
RT_ASSOCINFO_EVENT_FLAG	src/drivers/driver_ralink.h	66;"	d
RT_ASSOC_EVENT_FLAG	src/drivers/driver_ralink.h	62;"	d
RT_DISASSOC_EVENT_FLAG	src/drivers/driver_ralink.h	63;"	d
RT_INTERFACE_DOWN	src/drivers/driver_ralink.h	68;"	d
RT_INTERFACE_UP	src/drivers/driver_ralink.h	69;"	d
RT_OID_NEW_DRIVER	src/drivers/driver_ralink.h	56;"	d
RT_OID_WE_VERSION_COMPILED	src/drivers/driver_ralink.h	55;"	d
RT_OID_WPA_SUPPLICANT_SUPPORT	src/drivers/driver_ralink.h	54;"	d
RT_OID_WPS_PROBE_REQ_IE	src/drivers/driver_ralink.h	57;"	d
RT_PMKIDCAND_FLAG	src/drivers/driver_ralink.h	67;"	d
RT_PRIV_IOCTL	src/drivers/driver_ralink.h	24;"	d
RT_REQIE_EVENT_FLAG	src/drivers/driver_ralink.h	64;"	d
RT_RESPIE_EVENT_FLAG	src/drivers/driver_ralink.h	65;"	d
RadiusRxResult	src/radius/radius_client.h	/^} RadiusRxResult;$/;"	t	typeref:enum:__anon206
RadiusType	src/radius/radius_client.h	/^} RadiusType;$/;"	t	typeref:enum:__anon205
ReAuthenticationRequest	src/ap/wpa_auth_i.h	/^	Boolean ReAuthenticationRequest;$/;"	m	struct:wpa_state_machine	access:public
Reason	src/drivers/driver_ralink.h	/^    USHORT       Reason;$/;"	m	struct:_MLME_DEAUTH_REQ_STRUCT	access:public
ReceiveMessage	src/eap_peer/tncc.c	/^	TNC_Result (*ReceiveMessage)($/;"	m	struct:tnc_if_imc	file:	access:public
ReceiveMessage	src/eap_server/tncs.c	/^	TNC_Result (*ReceiveMessage)($/;"	m	struct:tnc_if_imv	file:	access:public
RequestFixedIEs	src/drivers/driver_ndis.c	/^	NDIS_802_11_AI_REQFI RequestFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
RequestFixedIEs	src/drivers/driver_ralink.h	/^    NDIS_802_11_AI_REQFI    RequestFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
RequestIELength	src/drivers/driver_ndis.c	/^	ULONG RequestIELength;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
RequestIELength	src/drivers/driver_ralink.h	/^    ULONG                   RequestIELength;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
Reserved	src/drivers/driver_ndis.c	/^	UCHAR Reserved[2];$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
Reserved	src/drivers/driver_ralink.h	/^    UCHAR                               Reserved[2];$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
Reserved	src/drivers/driver_ralink.h	/^   UCHAR                               Reserved[2];$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
ResponseFixedIEs	src/drivers/driver_ndis.c	/^	NDIS_802_11_AI_RESFI ResponseFixedIEs;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
ResponseFixedIEs	src/drivers/driver_ralink.h	/^    NDIS_802_11_AI_RESFI    ResponseFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
ResponseIELength	src/drivers/driver_ndis.c	/^	ULONG ResponseIELength;$/;"	m	struct:NDIS_802_11_ASSOCIATION_INFORMATION	file:	access:public
ResponseIELength	src/drivers/driver_ralink.h	/^    ULONG                   ResponseIELength;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
Rssi	src/drivers/driver_ndis.c	/^	NDIS_802_11_RSSI Rssi;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
Rssi	src/drivers/driver_ralink.h	/^    NDIS_802_11_RSSI                    Rssi;               \/\/ receive signal$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
Rssi	src/drivers/driver_ralink.h	/^    NDIS_802_11_RSSI                    Rssi;               \/\/ receive signal$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
S	src/crypto/sha256-internal.c	88;"	d	file:
SA_AUTH	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
SA_AUTH	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
SA_INIT	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
SA_INIT	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
SCARD_CHV1_FLAG	src/utils/pcsc_funcs.h	35;"	d
SCARD_CHV1_OFFSET	src/utils/pcsc_funcs.h	34;"	d
SCARD_FILE_EF_CK	src/utils/pcsc_funcs.h	31;"	d
SCARD_FILE_EF_DIR	src/utils/pcsc_funcs.h	29;"	d
SCARD_FILE_EF_ICCID	src/utils/pcsc_funcs.h	30;"	d
SCARD_FILE_EF_IK	src/utils/pcsc_funcs.h	32;"	d
SCARD_FILE_GSM_DF	src/utils/pcsc_funcs.h	26;"	d
SCARD_FILE_GSM_EF_IMSI	src/utils/pcsc_funcs.h	28;"	d
SCARD_FILE_MF	src/utils/pcsc_funcs.h	25;"	d
SCARD_FILE_UMTS_DF	src/utils/pcsc_funcs.h	27;"	d
SCARD_GSM_SIM	src/utils/pcsc_funcs.c	/^typedef enum { SCARD_GSM_SIM, SCARD_USIM } sim_types;$/;"	e	enum:__anon25	file:
SCARD_GSM_SIM_ONLY	src/utils/pcsc_funcs.h	/^	SCARD_GSM_SIM_ONLY,$/;"	e	enum:__anon24
SCARD_PCI_T0	src/utils/pcsc_funcs.c	107;"	d	file:
SCARD_PCI_T0	src/utils/pcsc_funcs.c	108;"	d	file:
SCARD_PCI_T1	src/utils/pcsc_funcs.c	109;"	d	file:
SCARD_PCI_T1	src/utils/pcsc_funcs.c	110;"	d	file:
SCARD_TRY_BOTH	src/utils/pcsc_funcs.h	/^	SCARD_TRY_BOTH$/;"	e	enum:__anon24
SCARD_USIM	src/utils/pcsc_funcs.c	/^typedef enum { SCARD_GSM_SIM, SCARD_USIM } sim_types;$/;"	e	enum:__anon25	file:
SCARD_USIM_ONLY	src/utils/pcsc_funcs.h	/^	SCARD_USIM_ONLY,$/;"	e	enum:__anon24
SCardBeginTransaction	src/utils/pcsc_funcs.c	158;"	d	file:
SCardConnect	src/utils/pcsc_funcs.c	138;"	d	file:
SCardConnect	src/utils/pcsc_funcs.c	139;"	d	file:
SCardDisconnect	src/utils/pcsc_funcs.c	144;"	d	file:
SCardEndTransaction	src/utils/pcsc_funcs.c	162;"	d	file:
SCardEstablishContext	src/utils/pcsc_funcs.c	118;"	d	file:
SCardListReaders	src/utils/pcsc_funcs.c	128;"	d	file:
SCardListReaders	src/utils/pcsc_funcs.c	129;"	d	file:
SCardReleaseContext	src/utils/pcsc_funcs.c	121;"	d	file:
SCardTransmit	src/utils/pcsc_funcs.c	154;"	d	file:
SECPKG_ATTR_EAP_KEY_BLOCK	src/crypto/tls_schannel.c	281;"	d	file:
SECURITY_IEEE_802_1X	src/ap/ap_config.h	/^	SECURITY_IEEE_802_1X = 2,$/;"	e	enum:hostap_security_policy
SECURITY_PLAINTEXT	src/ap/ap_config.h	/^	SECURITY_PLAINTEXT = 0,$/;"	e	enum:hostap_security_policy
SECURITY_STATIC_WEP	src/ap/ap_config.h	/^	SECURITY_STATIC_WEP = 1,$/;"	e	enum:hostap_security_policy
SECURITY_WIN32	src/crypto/tls_schannel.c	27;"	d	file:
SECURITY_WPA	src/ap/ap_config.h	/^	SECURITY_WPA = 4$/;"	e	enum:hostap_security_policy
SECURITY_WPA_PSK	src/ap/ap_config.h	/^	SECURITY_WPA_PSK = 3,$/;"	e	enum:hostap_security_policy
SEND_M1	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
SEND_M2	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
SEND_M2D	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
SEND_M3	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
SEND_M4	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
SEND_M5	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
SEND_M6	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
SEND_M7	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
SEND_M8	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
SEND_WSC_NACK	src/wps/wps_i.h	/^		SEND_WSC_NACK,$/;"	e	enum:wps_data::__anon29
SERVER_CERTIFICATE	src/tls/tlsv1_client_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_client::__anon108
SERVER_CERTIFICATE	src/tls/tlsv1_server_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_server::__anon105
SERVER_CERTIFICATE_REQUEST	src/tls/tlsv1_client_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_client::__anon108
SERVER_CERTIFICATE_REQUEST	src/tls/tlsv1_server_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_server::__anon105
SERVER_CHANGE_CIPHER_SPEC	src/tls/tlsv1_client_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED, ACK_FINISHED,$/;"	e	enum:tlsv1_client::__anon108
SERVER_CHANGE_CIPHER_SPEC	src/tls/tlsv1_server_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
SERVER_FINISHED	src/tls/tlsv1_client_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED, ACK_FINISHED,$/;"	e	enum:tlsv1_client::__anon108
SERVER_FINISHED	src/tls/tlsv1_server_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
SERVER_HELLO	src/tls/tlsv1_client_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_client::__anon108
SERVER_HELLO	src/tls/tlsv1_server_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_server::__anon105
SERVER_HELLO_DONE	src/tls/tlsv1_client_i.h	/^		SERVER_HELLO_DONE, CLIENT_KEY_EXCHANGE, CHANGE_CIPHER_SPEC,$/;"	e	enum:tlsv1_client::__anon108
SERVER_HELLO_DONE	src/tls/tlsv1_server_i.h	/^		SERVER_HELLO_DONE, CLIENT_CERTIFICATE, CLIENT_KEY_EXCHANGE,$/;"	e	enum:tlsv1_server::__anon105
SERVER_KEY_EXCHANGE	src/tls/tlsv1_client_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_client::__anon108
SERVER_KEY_EXCHANGE	src/tls/tlsv1_server_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_server::__anon105
SHA1Context	src/crypto/sha1_i.h	/^struct SHA1Context {$/;"	s
SHA1Context::buffer	src/crypto/sha1_i.h	/^	unsigned char buffer[64];$/;"	m	struct:SHA1Context	access:public
SHA1Context::count	src/crypto/sha1_i.h	/^	u32 count[2];$/;"	m	struct:SHA1Context	access:public
SHA1Context::state	src/crypto/sha1_i.h	/^	u32 state[5];$/;"	m	struct:SHA1Context	access:public
SHA1Final	src/crypto/sha1-internal.c	/^void SHA1Final(unsigned char digest[20], SHA1_CTX* context)$/;"	f	signature:(unsigned char digest[20], SHA1_CTX* context)
SHA1Final	src/crypto/sha1_i.h	/^void SHA1Final(unsigned char digest[20], struct SHA1Context *context);$/;"	p	signature:(unsigned char digest[20], struct SHA1Context *context)
SHA1HANDSOFF	src/crypto/sha1-internal.c	129;"	d	file:
SHA1Init	src/crypto/sha1-internal.c	/^void SHA1Init(SHA1_CTX* context)$/;"	f	signature:(SHA1_CTX* context)
SHA1Init	src/crypto/sha1_i.h	/^void SHA1Init(struct SHA1Context *context);$/;"	p	signature:(struct SHA1Context *context)
SHA1OBJS	hostapd/Android.mk	/^SHA1OBJS =$/;"	m
SHA1Transform	src/crypto/sha1-internal.c	/^void SHA1Transform(u32 state[5], const unsigned char buffer[64])$/;"	f	signature:(u32 state[5], const unsigned char buffer[64])
SHA1Transform	src/crypto/sha1-internal.c	/^void SHA1Transform(u32 state[5], const unsigned char buffer[64]);$/;"	p	file:	signature:(u32 state[5], const unsigned char buffer[64])
SHA1Transform	src/crypto/sha1_i.h	/^void SHA1Transform(u32 state[5], const unsigned char buffer[64]);$/;"	p	signature:(u32 state[5], const unsigned char buffer[64])
SHA1Update	src/crypto/sha1-internal.c	/^void SHA1Update(SHA1_CTX* context, const void *_data, u32 len)$/;"	f	signature:(SHA1_CTX* context, const void *_data, u32 len)
SHA1Update	src/crypto/sha1_i.h	/^void SHA1Update(struct SHA1Context *context, const void *data, u32 len);$/;"	p	signature:(struct SHA1Context *context, const void *data, u32 len)
SHA1_CTX	src/crypto/sha1-internal.c	/^typedef struct SHA1Context SHA1_CTX;$/;"	t	typeref:struct:SHA1Context	file:
SHA1_H	src/crypto/sha1.h	16;"	d
SHA1_I_H	src/crypto/sha1_i.h	16;"	d
SHA1_MAC_LEN	src/crypto/sha1.h	18;"	d
SHA256_BLOCK_SIZE	src/crypto/sha256-internal.c	21;"	d	file:
SHA256_H	src/crypto/sha256.h	16;"	d
SHA256_MAC_LEN	src/crypto/sha256.h	18;"	d
SHAPrintContext	src/crypto/sha1-internal.c	/^void SHAPrintContext(SHA1_CTX *context, char *msg)$/;"	f	signature:(SHA1_CTX *context, char *msg)
SHORT	src/drivers/driver_ralink.h	79;"	d
SHORT_PREAMBLE	src/ap/ap_config.h	/^		SHORT_PREAMBLE = 1$/;"	e	enum:hostapd_config::__anon4
SIM_CMD_GET_RESPONSE	src/utils/pcsc_funcs.c	56;"	d	file:
SIM_CMD_READ_BIN	src/utils/pcsc_funcs.c	57;"	d	file:
SIM_CMD_READ_RECORD	src/utils/pcsc_funcs.c	58;"	d	file:
SIM_CMD_RUN_GSM_ALG	src/utils/pcsc_funcs.c	55;"	d	file:
SIM_CMD_SELECT	src/utils/pcsc_funcs.c	54;"	d	file:
SIM_CMD_VERIFY_CHV1	src/utils/pcsc_funcs.c	59;"	d	file:
SIM_RECORD_MODE_ABSOLUTE	src/utils/pcsc_funcs.c	66;"	d	file:
SINGLE_PAIR_REQUIRED	src/eap_common/ikev2_common.h	/^	SINGLE_PAIR_REQUIRED = 34,$/;"	e	enum:__anon124
SIOCBRADDBR	src/drivers/linux_ioctl.c	128;"	d	file:
SIOCBRADDIF	src/drivers/linux_ioctl.c	134;"	d	file:
SIOCBRDELBR	src/drivers/linux_ioctl.c	131;"	d	file:
SIOCBRDELIF	src/drivers/linux_ioctl.c	137;"	d	file:
SIOCDEVPRIVATE	src/drivers/driver_ralink.h	19;"	d
SIOCGIWAP	src/drivers/wireless_copy.h	285;"	d
SIOCGIWAPLIST	src/drivers/wireless_copy.h	286;"	d
SIOCGIWAUTH	src/drivers/wireless_copy.h	333;"	d
SIOCGIWENCODE	src/drivers/wireless_copy.h	313;"	d
SIOCGIWENCODEEXT	src/drivers/wireless_copy.h	337;"	d
SIOCGIWESSID	src/drivers/wireless_copy.h	292;"	d
SIOCGIWFRAG	src/drivers/wireless_copy.h	305;"	d
SIOCGIWFREQ	src/drivers/wireless_copy.h	261;"	d
SIOCGIWGENIE	src/drivers/wireless_copy.h	326;"	d
SIOCGIWMODE	src/drivers/wireless_copy.h	263;"	d
SIOCGIWNAME	src/drivers/wireless_copy.h	252;"	d
SIOCGIWNICKN	src/drivers/wireless_copy.h	294;"	d
SIOCGIWNWID	src/drivers/wireless_copy.h	259;"	d
SIOCGIWPOWER	src/drivers/wireless_copy.h	316;"	d
SIOCGIWPRIV	src/drivers/wireless_copy.h	271;"	d
SIOCGIWRANGE	src/drivers/wireless_copy.h	269;"	d
SIOCGIWRATE	src/drivers/wireless_copy.h	301;"	d
SIOCGIWRETRY	src/drivers/wireless_copy.h	309;"	d
SIOCGIWRTS	src/drivers/wireless_copy.h	303;"	d
SIOCGIWSCAN	src/drivers/wireless_copy.h	288;"	d
SIOCGIWSENS	src/drivers/wireless_copy.h	265;"	d
SIOCGIWSPY	src/drivers/wireless_copy.h	279;"	d
SIOCGIWSTATS	src/drivers/wireless_copy.h	273;"	d
SIOCGIWTHRSPY	src/drivers/wireless_copy.h	281;"	d
SIOCGIWTXPOW	src/drivers/wireless_copy.h	307;"	d
SIOCIWFIRST	src/drivers/wireless_copy.h	367;"	d
SIOCIWFIRSTPRIV	src/drivers/driver_ralink.h	21;"	d
SIOCIWFIRSTPRIV	src/drivers/wireless_copy.h	351;"	d
SIOCIWLAST	src/drivers/wireless_copy.h	368;"	d
SIOCIWLASTPRIV	src/drivers/wireless_copy.h	352;"	d
SIOCSIWAP	src/drivers/wireless_copy.h	284;"	d
SIOCSIWAUTH	src/drivers/wireless_copy.h	332;"	d
SIOCSIWCOMMIT	src/drivers/wireless_copy.h	251;"	d
SIOCSIWENCODE	src/drivers/wireless_copy.h	312;"	d
SIOCSIWENCODEEXT	src/drivers/wireless_copy.h	336;"	d
SIOCSIWESSID	src/drivers/wireless_copy.h	291;"	d
SIOCSIWFRAG	src/drivers/wireless_copy.h	304;"	d
SIOCSIWFREQ	src/drivers/wireless_copy.h	260;"	d
SIOCSIWGENIE	src/drivers/wireless_copy.h	325;"	d
SIOCSIWMLME	src/drivers/wireless_copy.h	329;"	d
SIOCSIWMODE	src/drivers/wireless_copy.h	262;"	d
SIOCSIWNICKN	src/drivers/wireless_copy.h	293;"	d
SIOCSIWNWID	src/drivers/wireless_copy.h	258;"	d
SIOCSIWPMKSA	src/drivers/wireless_copy.h	340;"	d
SIOCSIWPOWER	src/drivers/wireless_copy.h	315;"	d
SIOCSIWPRIV	src/drivers/wireless_copy.h	270;"	d
SIOCSIWRANGE	src/drivers/wireless_copy.h	268;"	d
SIOCSIWRATE	src/drivers/wireless_copy.h	300;"	d
SIOCSIWRETRY	src/drivers/wireless_copy.h	308;"	d
SIOCSIWRTS	src/drivers/wireless_copy.h	302;"	d
SIOCSIWSCAN	src/drivers/wireless_copy.h	287;"	d
SIOCSIWSENS	src/drivers/wireless_copy.h	264;"	d
SIOCSIWSPY	src/drivers/wireless_copy.h	278;"	d
SIOCSIWSTATS	src/drivers/wireless_copy.h	272;"	d
SIOCSIWTHRSPY	src/drivers/wireless_copy.h	280;"	d
SIOCSIWTXPOW	src/drivers/wireless_copy.h	306;"	d
SK_ai	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_ar	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_d	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_d_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
SK_ei	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_encr_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
SK_er	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_integ_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
SK_pi	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_pr	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
SK_prf_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
SM_ENTER	src/utils/state_machine.h	131;"	d
SM_ENTER_GLOBAL	src/utils/state_machine.h	145;"	d
SM_ENTRY	src/utils/state_machine.h	71;"	d
SM_ENTRY_M	src/utils/state_machine.h	91;"	d
SM_ENTRY_MA	src/utils/state_machine.h	110;"	d
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, AUTHENTICATION)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, AUTHENTICATION2)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, DISCONNECT)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, DISCONNECTED)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, INITIALIZE)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, INITPMK)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, INITPSK)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, PTKCALCNEGOTIATING)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, PTKCALCNEGOTIATING2)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, PTKINITDONE)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, PTKINITNEGOTIATING)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK, PTKSTART)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK_GROUP, IDLE)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK_GROUP, KEYERROR)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK_GROUP, REKEYESTABLISHED)$/;"	f
SM_STATE	src/ap/wpa_auth.c	/^SM_STATE(WPA_PTK_GROUP, REKEYNEGOTIATING)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, DISABLED)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, DISCARD)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, FAILURE)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, GET_METHOD)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, IDENTITY)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, IDLE)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, INITIALIZE)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, METHOD)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, NOTIFICATION)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, RECEIVED)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, RETRANSMIT)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, SEND_RESPONSE)$/;"	f
SM_STATE	src/eap_peer/eap.c	/^SM_STATE(EAP, SUCCESS)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, AAA_IDLE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, AAA_REQUEST)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, AAA_RESPONSE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, DISABLED)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, DISCARD)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, DISCARD2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, FAILURE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, FAILURE2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, IDLE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, IDLE2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, INITIALIZE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, INITIALIZE_PASSTHROUGH)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, INTEGRITY_CHECK)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, METHOD_REQUEST)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, METHOD_RESPONSE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, NAK)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, PICK_UP_METHOD)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, PROPOSE_METHOD)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, RECEIVED)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, RECEIVED2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, RETRANSMIT)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, RETRANSMIT2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, SELECT_ACTION)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, SEND_REQUEST)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, SEND_REQUEST2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, SUCCESS)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, SUCCESS2)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, TIMEOUT_FAILURE)$/;"	f
SM_STATE	src/eap_server/eap_server.c	/^SM_STATE(EAP, TIMEOUT_FAILURE2)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_KEY_TX, KEY_TRANSMIT)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_KEY_TX, NO_KEY_TRANSMIT)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, ABORTING)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, AUTHENTICATED)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, AUTHENTICATING)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, CONNECTING)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, DISCONNECTED)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, FORCE_AUTH)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, FORCE_UNAUTH)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, HELD)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, INITIALIZE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(AUTH_PAE, RESTART)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, FAIL)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, IDLE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, IGNORE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, INITIALIZE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, REQUEST)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, RESPONSE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, SUCCESS)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(BE_AUTH, TIMEOUT)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(CTRL_DIR, FORCE_BOTH)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(CTRL_DIR, IN_OR_BOTH)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(KEY_RX, KEY_RECEIVE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(KEY_RX, NO_KEY_RECEIVE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(REAUTH_TIMER, INITIALIZE)$/;"	f
SM_STATE	src/eapol_auth/eapol_auth_sm.c	/^SM_STATE(REAUTH_TIMER, REAUTHENTICATE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(KEY_RX, KEY_RECEIVE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(KEY_RX, NO_KEY_RECEIVE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, FAIL)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, IDLE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, INITIALIZE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, RECEIVE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, REQUEST)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, RESPONSE)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, SUCCESS)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_BE, TIMEOUT)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, AUTHENTICATED)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, AUTHENTICATING)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, CONNECTING)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, DISCONNECTED)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, HELD)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, LOGOFF)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, RESTART)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, S_FORCE_AUTH)$/;"	f
SM_STATE	src/eapol_supp/eapol_supp_sm.c	/^SM_STATE(SUPP_PAE, S_FORCE_UNAUTH)$/;"	f
SM_STATE	src/utils/state_machine.h	53;"	d
SM_STEP	src/ap/wpa_auth.c	/^SM_STEP(WPA_PTK)$/;"	f
SM_STEP	src/ap/wpa_auth.c	/^SM_STEP(WPA_PTK_GROUP)$/;"	f
SM_STEP	src/eap_peer/eap.c	/^SM_STEP(EAP)$/;"	f
SM_STEP	src/eap_server/eap_server.c	/^SM_STEP(EAP)$/;"	f
SM_STEP	src/eapol_auth/eapol_auth_sm.c	/^SM_STEP(AUTH_KEY_TX)$/;"	f
SM_STEP	src/eapol_auth/eapol_auth_sm.c	/^SM_STEP(AUTH_PAE)$/;"	f
SM_STEP	src/eapol_auth/eapol_auth_sm.c	/^SM_STEP(BE_AUTH)$/;"	f
SM_STEP	src/eapol_auth/eapol_auth_sm.c	/^SM_STEP(CTRL_DIR)$/;"	f
SM_STEP	src/eapol_auth/eapol_auth_sm.c	/^SM_STEP(KEY_RX)$/;"	f
SM_STEP	src/eapol_auth/eapol_auth_sm.c	/^SM_STEP(REAUTH_TIMER)$/;"	f
SM_STEP	src/eapol_supp/eapol_supp_sm.c	/^SM_STEP(KEY_RX)$/;"	f
SM_STEP	src/eapol_supp/eapol_supp_sm.c	/^SM_STEP(SUPP_BE)$/;"	f
SM_STEP	src/eapol_supp/eapol_supp_sm.c	/^SM_STEP(SUPP_PAE)$/;"	f
SM_STEP	src/utils/state_machine.h	159;"	d
SM_STEP_RUN	src/utils/state_machine.h	170;"	d
SNonce	src/ap/wpa_auth_i.h	/^	u8 SNonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_state_machine	access:public
SP1	src/crypto/des-internal.c	/^static const u32 SP1[64] =$/;"	v	file:
SP2	src/crypto/des-internal.c	/^static const u32 SP2[64] =$/;"	v	file:
SP3	src/crypto/des-internal.c	/^static const u32 SP3[64] =$/;"	v	file:
SP4	src/crypto/des-internal.c	/^static const u32 SP4[64] =$/;"	v	file:
SP5	src/crypto/des-internal.c	/^static const u32 SP5[64] =$/;"	v	file:
SP6	src/crypto/des-internal.c	/^static const u32 SP6[64] =$/;"	v	file:
SP7	src/crypto/des-internal.c	/^static const u32 SP7[64] =$/;"	v	file:
SP8	src/crypto/des-internal.c	/^static const u32 SP8[64] =$/;"	v	file:
SSDP_NETMASK	src/wps/wps_upnp_ssdp.c	29;"	d	file:
SSDP_TARGET	src/wps/wps_upnp_ssdp.c	28;"	d	file:
SSID_LEN	src/ap/wpa_auth.h	153;"	d
SSOH_MS_CORRELATIONID	src/eap_peer/tncc.c	/^	SSOH_MS_CORRELATIONID = 6,$/;"	e	enum:__anon177	file:
SSOH_MS_INSTALLED_SHVS	src/eap_peer/tncc.c	/^	SSOH_MS_INSTALLED_SHVS = 7,$/;"	e	enum:__anon177	file:
SSOH_MS_MACHINENAME	src/eap_peer/tncc.c	/^	SSOH_MS_MACHINENAME = 5,$/;"	e	enum:__anon177	file:
SSOH_MS_MACHINE_INVENTORY	src/eap_peer/tncc.c	/^	SSOH_MS_MACHINE_INVENTORY = 1,$/;"	e	enum:__anon177	file:
SSOH_MS_MACHINE_INVENTORY_EX	src/eap_peer/tncc.c	/^	SSOH_MS_MACHINE_INVENTORY_EX = 8$/;"	e	enum:__anon177	file:
SSOH_MS_PACKET_INFO	src/eap_peer/tncc.c	/^	SSOH_MS_PACKET_INFO = 3,$/;"	e	enum:__anon177	file:
SSOH_MS_QUARANTINE_STATE	src/eap_peer/tncc.c	/^	SSOH_MS_QUARANTINE_STATE = 2,$/;"	e	enum:__anon177	file:
SSOH_MS_SYSTEMGENERATED_IDS	src/eap_peer/tncc.c	/^	SSOH_MS_SYSTEMGENERATED_IDS = 4,$/;"	e	enum:__anon177	file:
START	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
START	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
START	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
START	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
START	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
START	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
START	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
STATE_MACHINE_ADDR	src/ap/wpa_auth.c	36;"	d	file:
STATE_MACHINE_ADDR	src/eapol_auth/eapol_auth_sm.c	41;"	d	file:
STATE_MACHINE_DATA	src/ap/wpa_auth.c	34;"	d	file:
STATE_MACHINE_DATA	src/eap_peer/eap.c	36;"	d	file:
STATE_MACHINE_DATA	src/eap_server/eap_server.c	33;"	d	file:
STATE_MACHINE_DATA	src/eapol_auth/eapol_auth_sm.c	39;"	d	file:
STATE_MACHINE_DATA	src/eapol_supp/eapol_supp_sm.c	27;"	d	file:
STATE_MACHINE_DEBUG_PREFIX	src/ap/wpa_auth.c	35;"	d	file:
STATE_MACHINE_DEBUG_PREFIX	src/eap_peer/eap.c	37;"	d	file:
STATE_MACHINE_DEBUG_PREFIX	src/eap_server/eap_server.c	34;"	d	file:
STATE_MACHINE_DEBUG_PREFIX	src/eapol_auth/eapol_auth_sm.c	40;"	d	file:
STATE_MACHINE_DEBUG_PREFIX	src/eapol_supp/eapol_supp_sm.c	28;"	d	file:
STATE_MACHINE_H	src/utils/state_machine.h	40;"	d
STA_DEAUTH	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
STA_DISASSOC	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
STA_HASH	src/ap/hostapd.h	68;"	d
STA_HASH_SIZE	src/ap/hostapd.h	67;"	d
STA_INFO_H	src/ap/sta_info.h	16;"	d
STA_NULLFUNC	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
STA_REMOVE	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
STK_ERR_CPHR_NS	src/common/wpa_common.h	/^	STK_ERR_CPHR_NS = 3,$/;"	e	enum:__anon36
STK_ERR_NO_STSL	src/common/wpa_common.h	/^	STK_ERR_NO_STSL = 4$/;"	e	enum:__anon36
STK_ERR_STA_NR	src/common/wpa_common.h	/^	STK_ERR_STA_NR = 1,$/;"	e	enum:__anon36
STK_ERR_STA_NRSN	src/common/wpa_common.h	/^	STK_ERR_STA_NRSN = 2,$/;"	e	enum:__anon36
STK_MUI_4WAY_STAT_STA	src/common/wpa_common.h	/^	STK_MUI_4WAY_STAT_STA = 2,$/;"	e	enum:__anon35
STK_MUI_4WAY_STA_AP	src/common/wpa_common.h	/^	STK_MUI_4WAY_STA_AP = 1,$/;"	e	enum:__anon35
STK_MUI_GTK	src/common/wpa_common.h	/^	STK_MUI_GTK = 3,$/;"	e	enum:__anon35
STK_MUI_SMK	src/common/wpa_common.h	/^	STK_MUI_SMK = 4$/;"	e	enum:__anon35
STRUCT_PACKED	src/ap/ieee802_1x.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee802_1x_eapol_key
STRUCT_PACKED	src/ap/wpa_auth.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ft_r0kh_r1kh_pull_frame
STRUCT_PACKED	src/ap/wpa_auth.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ft_r0kh_r1kh_push_frame
STRUCT_PACKED	src/ap/wpa_auth.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ft_r0kh_r1kh_resp_frame
STRUCT_PACKED	src/ap/wpa_auth.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ft_rrb_frame
STRUCT_PACKED	src/common/eapol_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee802_1x_hdr
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^}  STRUCT_PACKED;$/;"	v	typeref:struct:wmm_ac_parameter
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_hdr
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_ht_capabilities
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_ht_operation
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_mgmt
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wmm_information_element
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wmm_parameter_element
STRUCT_PACKED	src/common/ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wmm_tspec_element
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rsn_error_kde
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rsn_ftie
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rsn_ie_hdr
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rsn_mdie
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rsn_rdie
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_eapol_key
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_ie_hdr
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_igtk_kde
STRUCT_PACKED	src/common/wpa_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_ptk
STRUCT_PACKED	src/drivers/driver_wired.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee8023_hdr
STRUCT_PACKED	src/drivers/rfkill.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rfkill_event
STRUCT_PACKED	src/eap_common/eap_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_hdr
STRUCT_PACKED	src/eap_common/eap_fast_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:pac_tlv_hdr
STRUCT_PACKED	src/eap_common/eap_gpsk_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_gpsk_csuite
STRUCT_PACKED	src/eap_common/eap_pax_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_pax_hdr
STRUCT_PACKED	src/eap_common/eap_psk_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_psk_hdr_1
STRUCT_PACKED	src/eap_common/eap_psk_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_psk_hdr_2
STRUCT_PACKED	src/eap_common/eap_psk_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_psk_hdr_3
STRUCT_PACKED	src/eap_common/eap_psk_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_psk_hdr_4
STRUCT_PACKED	src/eap_common/eap_pwd_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_pwd_hdr
STRUCT_PACKED	src/eap_common/eap_pwd_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_pwd_id
STRUCT_PACKED	src/eap_common/eap_sake_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_sake_hdr
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_crypto_binding_tlv
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_hdr
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_intermediate_result_tlv
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_nak_tlv
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_pac_ack_tlv
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_pac_type_tlv
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_request_action_tlv
STRUCT_PACKED	src/eap_common/eap_tlv_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_tlv_result_tlv
STRUCT_PACKED	src/eap_common/ikev2_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ikev2_hdr
STRUCT_PACKED	src/eap_common/ikev2_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ikev2_payload_hdr
STRUCT_PACKED	src/eap_common/ikev2_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ikev2_proposal
STRUCT_PACKED	src/eap_common/ikev2_common.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ikev2_transform
STRUCT_PACKED	src/eap_peer/eap_mschapv2.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_mschapv2_hdr
STRUCT_PACKED	src/eap_peer/eap_mschapv2.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ms_change_password
STRUCT_PACKED	src/eap_peer/eap_mschapv2.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ms_response
STRUCT_PACKED	src/eap_server/eap_server_mschapv2.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:eap_mschapv2_hdr
STRUCT_PACKED	src/eapol_supp/eapol_supp_sm.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee802_1x_eapol_key
STRUCT_PACKED	src/l2_packet/l2_packet.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:l2_ethhdr
STRUCT_PACKED	src/radius/radius.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:radius_attr_hdr
STRUCT_PACKED	src/radius/radius.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:radius_attr_vendor
STRUCT_PACKED	src/radius/radius.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:radius_hdr
STRUCT_PACKED	src/rsn_supp/tdls.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_tdls_frame
STRUCT_PACKED	src/rsn_supp/tdls.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_tdls_ftie
STRUCT_PACKED	src/rsn_supp/tdls.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_tdls_lnkid
STRUCT_PACKED	src/rsn_supp/tdls.c	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wpa_tdls_timeoutie
STRUCT_PACKED	src/utils/common.h	355;"	d
STRUCT_PACKED	src/utils/common.h	358;"	d
SUBDIRS	src/Makefile	/^SUBDIRS=ap common crypto drivers eapol_auth eapol_supp eap_common eap_peer eap_server l2_packet p2p radius rsn_supp tls utils wps$/;"	m
SUCCESS	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
SUCCESS	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
SUCCESS	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
SUCCESS	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
SUCCESS	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
SUCCESS	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	e	enum:eap_vendor_test_data::__anon176	file:
SUCCESS	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
SUCCESS	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
SUCCESS	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
SUCCESS	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gtc_data::__anon141	file:
SUCCESS	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_identity_data::__anon129	file:
SUCCESS	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	e	enum:eap_md5_data::__anon142	file:
SUCCESS	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
SUCCESS	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
SUCCESS	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
SUCCESS	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
SUCCESS	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
SUCCESS	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
SUCCESS	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
SUCCESS	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
SUCCESS	src/eap_server/eap_server_ttls.c	/^		PHASE2_MSCHAPV2_RESP, SUCCESS, FAILURE$/;"	e	enum:eap_ttls_data::__anon126	file:
SUCCESS	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
SUCCESS	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sim_db_pending::__anon148	file:
SUCCESS_REQ	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
SUCCESS_REQ	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
SUPP_BE_FAIL	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_FAIL = 6,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_IDLE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_IDLE = 2,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_INITIALIZE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_INITIALIZE = 1,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_RECEIVE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_RECEIVE = 4,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_REQUEST	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_REQUEST = 3,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_RESPONSE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_RESPONSE = 5,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_SUCCESS	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_SUCCESS = 8$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_TIMEOUT	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_TIMEOUT = 7, $/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_UNKNOWN	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_UNKNOWN = 0,$/;"	e	enum:eapol_sm::__anon20	file:
SUPP_BE_state	src/eapol_supp/eapol_supp_sm.c	/^	} SUPP_BE_state; \/* dot1xSuppBackendPaeState *\/$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon20	file:	access:public
SUPP_PAE_AUTHENTICATED	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_AUTHENTICATED = 5,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_AUTHENTICATING	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_AUTHENTICATING = 4,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_CONNECTING	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_CONNECTING = 3,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_DISCONNECTED	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_DISCONNECTED = 1,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_HELD	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_HELD = 7,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_LOGOFF	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_LOGOFF = 2,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_RESTART	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_RESTART = 8,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_S_FORCE_AUTH	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_S_FORCE_AUTH = 9,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_S_FORCE_UNAUTH	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_S_FORCE_UNAUTH = 10$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_UNKNOWN	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_UNKNOWN = 0,$/;"	e	enum:eapol_sm::__anon18	file:
SUPP_PAE_state	src/eapol_supp/eapol_supp_sm.c	/^	} SUPP_PAE_state; \/* dot1xSuppPaeState *\/$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon18	file:	access:public
SWAP	src/crypto/aes_i.h	107;"	d
S_SWAP	src/crypto/rc4.c	20;"	d	file:
SecPkgContext_EapKeyBlock	src/crypto/tls_schannel.c	/^} SecPkgContext_EapKeyBlock, *PSecPkgContext_EapKeyBlock;$/;"	t	typeref:struct:_SecPkgContext_EapKeyBlock	file:
Sigma0	src/crypto/sha256-internal.c	90;"	d	file:
Sigma1	src/crypto/sha256-internal.c	91;"	d	file:
Snonce	src/rsn_supp/tdls.c	/^	u8 Snonce[WPA_NONCE_LEN]; \/* Initiator Nonce in TDLS *\/$/;"	m	struct:wpa_tdls_ftie	file:	access:public
SolicitRecommendation	src/eap_server/tncs.c	/^	TNC_Result (*SolicitRecommendation)($/;"	m	struct:tnc_if_imv	file:	access:public
Ssid	src/drivers/driver_ndis.c	/^	NDIS_802_11_SSID Ssid;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
Ssid	src/drivers/driver_ndis.c	/^	UCHAR Ssid[NDIS_802_11_LENGTH_SSID];$/;"	m	struct:NDIS_802_11_SSID	file:	access:public
Ssid	src/drivers/driver_ralink.h	/^    NDIS_802_11_SSID                    Ssid;               \/\/ SSID$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
Ssid	src/drivers/driver_ralink.h	/^    UCHAR   Ssid[NDIS_802_11_LENGTH_SSID];           \/\/ SSID information field$/;"	m	struct:_NDIS_802_11_SSID	access:public
Ssid	src/drivers/driver_ralink.h	/^   NDIS_802_11_SSID                    Ssid;       \/\/ SSID$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
SsidLength	src/drivers/driver_ndis.c	/^	ULONG SsidLength;$/;"	m	struct:NDIS_802_11_SSID	file:	access:public
SsidLength	src/drivers/driver_ralink.h	/^    INT   SsidLength;         \/\/ length of SSID field below, in bytes;$/;"	m	struct:_NDIS_802_11_SSID	access:public
StatusCode	src/drivers/driver_ndis.c	/^	USHORT StatusCode;$/;"	m	struct:NDIS_802_11_AI_RESFI	file:	access:public
StatusCode	src/drivers/driver_ralink.h	/^    USHORT StatusCode;$/;"	m	struct:_NDIS_802_11_AI_RESFI	access:public
StatusType	src/drivers/driver_ndis.c	/^	NDIS_802_11_STATUS_TYPE StatusType;$/;"	m	struct:NDIS_802_11_STATUS_INDICATION	file:	access:public
SupportedRates	src/drivers/driver_ndis.c	/^	NDIS_802_11_RATES_EX SupportedRates;$/;"	m	struct:NDIS_WLAN_BSSID_EX	file:	access:public
SupportedRates	src/drivers/driver_ralink.h	/^    NDIS_802_11_RATES_EX                SupportedRates;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
SupportedRates	src/drivers/driver_ralink.h	/^   NDIS_802_11_RATES                   SupportedRates;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
TAB_SIZE	src/tls/libtommath.c	1863;"	d	file:
TAB_SIZE	src/tls/libtommath.c	1865;"	d	file:
TD0	src/crypto/aes_i.h	55;"	d
TD0	src/crypto/aes_i.h	91;"	d
TD0_	src/crypto/aes_i.h	63;"	d
TD0_	src/crypto/aes_i.h	99;"	d
TD1	src/crypto/aes_i.h	56;"	d
TD1	src/crypto/aes_i.h	92;"	d
TD1_	src/crypto/aes_i.h	100;"	d
TD1_	src/crypto/aes_i.h	64;"	d
TD2	src/crypto/aes_i.h	57;"	d
TD2	src/crypto/aes_i.h	93;"	d
TD2_	src/crypto/aes_i.h	101;"	d
TD2_	src/crypto/aes_i.h	65;"	d
TD3	src/crypto/aes_i.h	58;"	d
TD3	src/crypto/aes_i.h	94;"	d
TD3_	src/crypto/aes_i.h	102;"	d
TD3_	src/crypto/aes_i.h	66;"	d
TD41	src/crypto/aes_i.h	59;"	d
TD41	src/crypto/aes_i.h	95;"	d
TD42	src/crypto/aes_i.h	60;"	d
TD42	src/crypto/aes_i.h	96;"	d
TD43	src/crypto/aes_i.h	61;"	d
TD43	src/crypto/aes_i.h	97;"	d
TD44	src/crypto/aes_i.h	62;"	d
TD44	src/crypto/aes_i.h	98;"	d
TDLS_DISABLE	src/drivers/driver.h	/^	TDLS_DISABLE$/;"	e	enum:tdls_oper
TDLS_DISABLE_LINK	src/drivers/driver.h	/^	TDLS_DISABLE_LINK,$/;"	e	enum:tdls_oper
TDLS_DISCOVERY_REQ	src/drivers/driver.h	/^	TDLS_DISCOVERY_REQ,$/;"	e	enum:tdls_oper
TDLS_ENABLE	src/drivers/driver.h	/^	TDLS_ENABLE,$/;"	e	enum:tdls_oper
TDLS_ENABLE_LINK	src/drivers/driver.h	/^	TDLS_ENABLE_LINK,$/;"	e	enum:tdls_oper
TDLS_MAX_IE_LEN	src/rsn_supp/tdls.c	90;"	d	file:
TDLS_MIC_LEN	src/rsn_supp/tdls.c	49;"	d	file:
TDLS_PROHIBIT	src/ap/ap_config.h	343;"	d
TDLS_PROHIBIT_CHAN_SWITCH	src/ap/ap_config.h	344;"	d
TDLS_REQUEST_SETUP	src/drivers/driver.h	/^			TDLS_REQUEST_SETUP,$/;"	e	enum:wpa_event_data::tdls::__anon91
TDLS_REQUEST_TEARDOWN	src/drivers/driver.h	/^			TDLS_REQUEST_TEARDOWN$/;"	e	enum:wpa_event_data::tdls::__anon91
TDLS_SETUP	src/drivers/driver.h	/^	TDLS_SETUP,$/;"	e	enum:tdls_oper
TDLS_TEARDOWN	src/drivers/driver.h	/^	TDLS_TEARDOWN,$/;"	e	enum:tdls_oper
TDLS_TESTING_ALT_RSN_IE	src/rsn_supp/tdls.c	32;"	d	file:
TDLS_TESTING_CONCURRENT_INIT	src/rsn_supp/tdls.c	38;"	d	file:
TDLS_TESTING_DECLINE_RESP	src/rsn_supp/tdls.c	40;"	d	file:
TDLS_TESTING_DIFF_BSSID	src/rsn_supp/tdls.c	33;"	d	file:
TDLS_TESTING_IGNORE_AP_PROHIBIT	src/rsn_supp/tdls.c	41;"	d	file:
TDLS_TESTING_LONG_FRAME	src/rsn_supp/tdls.c	31;"	d	file:
TDLS_TESTING_LONG_LIFETIME	src/rsn_supp/tdls.c	37;"	d	file:
TDLS_TESTING_NO_TPK_EXPIRATION	src/rsn_supp/tdls.c	39;"	d	file:
TDLS_TESTING_SHORT_LIFETIME	src/rsn_supp/tdls.c	34;"	d	file:
TDLS_TESTING_WRONG_LIFETIME_CONF	src/rsn_supp/tdls.c	36;"	d	file:
TDLS_TESTING_WRONG_LIFETIME_RESP	src/rsn_supp/tdls.c	35;"	d	file:
TDLS_TIMEOUT_LEN	src/rsn_supp/tdls.c	51;"	d	file:
TE0	src/crypto/aes_i.h	41;"	d
TE0	src/crypto/aes_i.h	77;"	d
TE1	src/crypto/aes_i.h	42;"	d
TE1	src/crypto/aes_i.h	78;"	d
TE2	src/crypto/aes_i.h	43;"	d
TE2	src/crypto/aes_i.h	79;"	d
TE3	src/crypto/aes_i.h	44;"	d
TE3	src/crypto/aes_i.h	80;"	d
TE4	src/crypto/aes_i.h	53;"	d
TE4	src/crypto/aes_i.h	89;"	d
TE41	src/crypto/aes_i.h	45;"	d
TE41	src/crypto/aes_i.h	81;"	d
TE414	src/crypto/aes_i.h	52;"	d
TE414	src/crypto/aes_i.h	88;"	d
TE42	src/crypto/aes_i.h	46;"	d
TE42	src/crypto/aes_i.h	82;"	d
TE421	src/crypto/aes_i.h	49;"	d
TE421	src/crypto/aes_i.h	85;"	d
TE43	src/crypto/aes_i.h	47;"	d
TE43	src/crypto/aes_i.h	83;"	d
TE432	src/crypto/aes_i.h	50;"	d
TE432	src/crypto/aes_i.h	86;"	d
TE44	src/crypto/aes_i.h	48;"	d
TE44	src/crypto/aes_i.h	84;"	d
TE443	src/crypto/aes_i.h	51;"	d
TE443	src/crypto/aes_i.h	87;"	d
TKIP_COUNTERMEASURES_H	src/ap/tkip_countermeasures.h	16;"	d
TLSV1_CLIENT_H	src/tls/tlsv1_client.h	16;"	d
TLSV1_CLIENT_I_H	src/tls/tlsv1_client_i.h	16;"	d
TLSV1_COMMON_H	src/tls/tlsv1_common.h	16;"	d
TLSV1_CRED_H	src/tls/tlsv1_cred.h	16;"	d
TLSV1_RECORD_H	src/tls/tlsv1_record.h	16;"	d
TLSV1_SERVER_H	src/tls/tlsv1_server.h	16;"	d
TLSV1_SERVER_I_H	src/tls/tlsv1_server_i.h	16;"	d
TLS_ALERT_ACCESS_DENIED	src/tls/tlsv1_common.h	114;"	d
TLS_ALERT_BAD_CERTIFICATE	src/tls/tlsv1_common.h	107;"	d
TLS_ALERT_BAD_CERTIFICATE_HASH_VALUE	src/tls/tlsv1_common.h	127;"	d
TLS_ALERT_BAD_CERTIFICATE_STATUS_RESPONSE	src/tls/tlsv1_common.h	126;"	d
TLS_ALERT_BAD_RECORD_MAC	src/tls/tlsv1_common.h	102;"	d
TLS_ALERT_CERTIFICATE_EXPIRED	src/tls/tlsv1_common.h	110;"	d
TLS_ALERT_CERTIFICATE_REVOKED	src/tls/tlsv1_common.h	109;"	d
TLS_ALERT_CERTIFICATE_UNKNOWN	src/tls/tlsv1_common.h	111;"	d
TLS_ALERT_CERTIFICATE_UNOBTAINABLE	src/tls/tlsv1_common.h	124;"	d
TLS_ALERT_CLOSE_NOTIFY	src/tls/tlsv1_common.h	100;"	d
TLS_ALERT_DECODE_ERROR	src/tls/tlsv1_common.h	115;"	d
TLS_ALERT_DECOMPRESSION_FAILURE	src/tls/tlsv1_common.h	105;"	d
TLS_ALERT_DECRYPTION_FAILED	src/tls/tlsv1_common.h	103;"	d
TLS_ALERT_DECRYPT_ERROR	src/tls/tlsv1_common.h	116;"	d
TLS_ALERT_EXPORT_RESTRICTION	src/tls/tlsv1_common.h	117;"	d
TLS_ALERT_HANDSHAKE_FAILURE	src/tls/tlsv1_common.h	106;"	d
TLS_ALERT_ILLEGAL_PARAMETER	src/tls/tlsv1_common.h	112;"	d
TLS_ALERT_INSUFFICIENT_SECURITY	src/tls/tlsv1_common.h	119;"	d
TLS_ALERT_INTERNAL_ERROR	src/tls/tlsv1_common.h	120;"	d
TLS_ALERT_LEVEL_FATAL	src/tls/tlsv1_common.h	97;"	d
TLS_ALERT_LEVEL_WARNING	src/tls/tlsv1_common.h	96;"	d
TLS_ALERT_NO_RENEGOTIATION	src/tls/tlsv1_common.h	122;"	d
TLS_ALERT_PROTOCOL_VERSION	src/tls/tlsv1_common.h	118;"	d
TLS_ALERT_RECORD_OVERFLOW	src/tls/tlsv1_common.h	104;"	d
TLS_ALERT_UNEXPECTED_MESSAGE	src/tls/tlsv1_common.h	101;"	d
TLS_ALERT_UNKNOWN_CA	src/tls/tlsv1_common.h	113;"	d
TLS_ALERT_UNRECOGNIZED_NAME	src/tls/tlsv1_common.h	125;"	d
TLS_ALERT_UNSUPPORTED_CERTIFICATE	src/tls/tlsv1_common.h	108;"	d
TLS_ALERT_UNSUPPORTED_EXTENSION	src/tls/tlsv1_common.h	123;"	d
TLS_ALERT_USER_CANCELED	src/tls/tlsv1_common.h	121;"	d
TLS_CERT_CHAIN_FAILURE	src/crypto/tls.h	/^	TLS_CERT_CHAIN_FAILURE,$/;"	e	enum:tls_event
TLS_CHANGE_CIPHER_SPEC	src/tls/tlsv1_common.h	/^	TLS_CHANGE_CIPHER_SPEC = 1$/;"	e	enum:__anon100
TLS_CIPHER_3DES_EDE_CBC	src/tls/tlsv1_common.h	/^	TLS_CIPHER_3DES_EDE_CBC,$/;"	e	enum:__anon102
TLS_CIPHER_AES128_SHA	src/crypto/tls.h	/^	TLS_CIPHER_AES128_SHA \/* 0x002f *\/,$/;"	e	enum:__anon197
TLS_CIPHER_AES_128_CBC	src/tls/tlsv1_common.h	/^	TLS_CIPHER_AES_128_CBC,$/;"	e	enum:__anon102
TLS_CIPHER_AES_256_CBC	src/tls/tlsv1_common.h	/^	TLS_CIPHER_AES_256_CBC$/;"	e	enum:__anon102
TLS_CIPHER_ANON_DH_AES128_SHA	src/crypto/tls.h	/^	TLS_CIPHER_ANON_DH_AES128_SHA \/* 0x0034 *\/$/;"	e	enum:__anon197
TLS_CIPHER_BLOCK	src/tls/tlsv1_common.h	/^	TLS_CIPHER_BLOCK$/;"	e	enum:__anon104
TLS_CIPHER_DES40_CBC	src/tls/tlsv1_common.h	/^	TLS_CIPHER_DES40_CBC,$/;"	e	enum:__anon102
TLS_CIPHER_DES_CBC	src/tls/tlsv1_common.h	/^	TLS_CIPHER_DES_CBC,$/;"	e	enum:__anon102
TLS_CIPHER_IDEA_CBC	src/tls/tlsv1_common.h	/^	TLS_CIPHER_IDEA_CBC,$/;"	e	enum:__anon102
TLS_CIPHER_NONE	src/crypto/tls.h	/^	TLS_CIPHER_NONE,$/;"	e	enum:__anon197
TLS_CIPHER_NULL	src/tls/tlsv1_common.h	/^	TLS_CIPHER_NULL,$/;"	e	enum:__anon102
TLS_CIPHER_RC2_CBC_40	src/tls/tlsv1_common.h	/^	TLS_CIPHER_RC2_CBC_40,$/;"	e	enum:__anon102
TLS_CIPHER_RC4_128	src/tls/tlsv1_common.h	/^	TLS_CIPHER_RC4_128,$/;"	e	enum:__anon102
TLS_CIPHER_RC4_40	src/tls/tlsv1_common.h	/^	TLS_CIPHER_RC4_40,$/;"	e	enum:__anon102
TLS_CIPHER_RC4_SHA	src/crypto/tls.h	/^	TLS_CIPHER_RC4_SHA \/* 0x0005 *\/,$/;"	e	enum:__anon197
TLS_CIPHER_RSA_DHE_AES128_SHA	src/crypto/tls.h	/^	TLS_CIPHER_RSA_DHE_AES128_SHA \/* 0x0031 *\/,$/;"	e	enum:__anon197
TLS_CIPHER_STREAM	src/tls/tlsv1_common.h	/^	TLS_CIPHER_STREAM,$/;"	e	enum:__anon104
TLS_COMPRESSION_NULL	src/tls/tlsv1_common.h	93;"	d
TLS_CONN_ALLOW_SIGN_RSA_MD5	src/crypto/tls.h	80;"	d
TLS_CONN_DISABLE_TIME_CHECKS	src/crypto/tls.h	81;"	d
TLS_CONTENT_TYPE_ALERT	src/tls/tlsv1_record.h	/^	TLS_CONTENT_TYPE_ALERT = 21,$/;"	e	enum:__anon98
TLS_CONTENT_TYPE_APPLICATION_DATA	src/tls/tlsv1_record.h	/^	TLS_CONTENT_TYPE_APPLICATION_DATA = 23$/;"	e	enum:__anon98
TLS_CONTENT_TYPE_CHANGE_CIPHER_SPEC	src/tls/tlsv1_record.h	/^	TLS_CONTENT_TYPE_CHANGE_CIPHER_SPEC = 20,$/;"	e	enum:__anon98
TLS_CONTENT_TYPE_HANDSHAKE	src/tls/tlsv1_record.h	/^	TLS_CONTENT_TYPE_HANDSHAKE = 22,$/;"	e	enum:__anon98
TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA	src/tls/tlsv1_common.h	68;"	d
TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA	src/tls/tlsv1_common.h	70;"	d
TLS_DHE_DSS_WITH_AES_128_CBC_SHA	src/tls/tlsv1_common.h	82;"	d
TLS_DHE_DSS_WITH_AES_256_CBC_SHA	src/tls/tlsv1_common.h	88;"	d
TLS_DHE_DSS_WITH_DES_CBC_SHA	src/tls/tlsv1_common.h	69;"	d
TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA	src/tls/tlsv1_common.h	71;"	d
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA	src/tls/tlsv1_common.h	73;"	d
TLS_DHE_RSA_WITH_AES_128_CBC_SHA	src/tls/tlsv1_common.h	83;"	d
TLS_DHE_RSA_WITH_AES_256_CBC_SHA	src/tls/tlsv1_common.h	89;"	d
TLS_DHE_RSA_WITH_DES_CBC_SHA	src/tls/tlsv1_common.h	72;"	d
TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA	src/tls/tlsv1_common.h	62;"	d
TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA	src/tls/tlsv1_common.h	64;"	d
TLS_DH_DSS_WITH_AES_128_CBC_SHA	src/tls/tlsv1_common.h	80;"	d
TLS_DH_DSS_WITH_AES_256_CBC_SHA	src/tls/tlsv1_common.h	86;"	d
TLS_DH_DSS_WITH_DES_CBC_SHA	src/tls/tlsv1_common.h	63;"	d
TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA	src/tls/tlsv1_common.h	65;"	d
TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA	src/tls/tlsv1_common.h	67;"	d
TLS_DH_RSA_WITH_AES_128_CBC_SHA	src/tls/tlsv1_common.h	81;"	d
TLS_DH_RSA_WITH_AES_256_CBC_SHA	src/tls/tlsv1_common.h	87;"	d
TLS_DH_RSA_WITH_DES_CBC_SHA	src/tls/tlsv1_common.h	66;"	d
TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA	src/tls/tlsv1_common.h	76;"	d
TLS_DH_anon_EXPORT_WITH_RC4_40_MD5	src/tls/tlsv1_common.h	74;"	d
TLS_DH_anon_WITH_3DES_EDE_CBC_SHA	src/tls/tlsv1_common.h	78;"	d
TLS_DH_anon_WITH_AES_128_CBC_SHA	src/tls/tlsv1_common.h	84;"	d
TLS_DH_anon_WITH_AES_256_CBC_SHA	src/tls/tlsv1_common.h	90;"	d
TLS_DH_anon_WITH_DES_CBC_SHA	src/tls/tlsv1_common.h	77;"	d
TLS_DH_anon_WITH_RC4_128_MD5	src/tls/tlsv1_common.h	75;"	d
TLS_EXT_CLIENT_CERTIFICATE_URL	src/tls/tlsv1_common.h	137;"	d
TLS_EXT_MAX_FRAGMENT_LENGTH	src/tls/tlsv1_common.h	136;"	d
TLS_EXT_PAC_OPAQUE	src/eap_common/eap_fast_common.h	24;"	d
TLS_EXT_PAC_OPAQUE	src/tls/tlsv1_common.h	143;"	d
TLS_EXT_SERVER_NAME	src/tls/tlsv1_common.h	135;"	d
TLS_EXT_SESSION_TICKET	src/tls/tlsv1_common.h	141;"	d
TLS_EXT_STATUS_REQUEST	src/tls/tlsv1_common.h	140;"	d
TLS_EXT_TRUNCATED_HMAC	src/tls/tlsv1_common.h	139;"	d
TLS_EXT_TRUSTED_CA_KEYS	src/tls/tlsv1_common.h	138;"	d
TLS_FAIL_ALTSUBJECT_MISMATCH	src/crypto/tls.h	/^	TLS_FAIL_ALTSUBJECT_MISMATCH = 6,$/;"	e	enum:tls_fail_reason
TLS_FAIL_BAD_CERTIFICATE	src/crypto/tls.h	/^	TLS_FAIL_BAD_CERTIFICATE = 7,$/;"	e	enum:tls_fail_reason
TLS_FAIL_EXPIRED	src/crypto/tls.h	/^	TLS_FAIL_EXPIRED = 4,$/;"	e	enum:tls_fail_reason
TLS_FAIL_NOT_YET_VALID	src/crypto/tls.h	/^	TLS_FAIL_NOT_YET_VALID = 3,$/;"	e	enum:tls_fail_reason
TLS_FAIL_REVOKED	src/crypto/tls.h	/^	TLS_FAIL_REVOKED = 2,$/;"	e	enum:tls_fail_reason
TLS_FAIL_SERVER_CHAIN_PROBE	src/crypto/tls.h	/^	TLS_FAIL_SERVER_CHAIN_PROBE = 8$/;"	e	enum:tls_fail_reason
TLS_FAIL_SUBJECT_MISMATCH	src/crypto/tls.h	/^	TLS_FAIL_SUBJECT_MISMATCH = 5,$/;"	e	enum:tls_fail_reason
TLS_FAIL_UNSPECIFIED	src/crypto/tls.h	/^	TLS_FAIL_UNSPECIFIED = 0,$/;"	e	enum:tls_fail_reason
TLS_FAIL_UNTRUSTED	src/crypto/tls.h	/^	TLS_FAIL_UNTRUSTED = 1,$/;"	e	enum:tls_fail_reason
TLS_FUNCS	hostapd/Android.mk	/^TLS_FUNCS=y$/;"	m
TLS_FUNCS	hostapd/Makefile	/^TLS_FUNCS=y$/;"	m
TLS_H	src/crypto/tls.h	16;"	d
TLS_HANDSHAKE_TYPE_CERTIFICATE	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CERTIFICATE = 11,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_CERTIFICATE_REQUEST	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CERTIFICATE_REQUEST = 13,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_CERTIFICATE_STATUS	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CERTIFICATE_STATUS = 22 \/* RFC 4366 *\/$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_CERTIFICATE_URL	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CERTIFICATE_URL = 21 \/* RFC 4366 *\/,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_CERTIFICATE_VERIFY	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CERTIFICATE_VERIFY = 15,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_CLIENT_HELLO	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CLIENT_HELLO = 1,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_CLIENT_KEY_EXCHANGE	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_CLIENT_KEY_EXCHANGE = 16,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_FINISHED	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_FINISHED = 20,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_HELLO_REQUEST	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_HELLO_REQUEST = 0,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_NEW_SESSION_TICKET	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_NEW_SESSION_TICKET = 4 \/* RFC 4507 *\/,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_SERVER_HELLO	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_SERVER_HELLO = 2,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_SERVER_HELLO_DONE	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_SERVER_HELLO_DONE = 14,$/;"	e	enum:__anon99
TLS_HANDSHAKE_TYPE_SERVER_KEY_EXCHANGE	src/tls/tlsv1_common.h	/^	TLS_HANDSHAKE_TYPE_SERVER_KEY_EXCHANGE = 12,$/;"	e	enum:__anon99
TLS_HASH_MD5	src/tls/tlsv1_common.h	/^	TLS_HASH_MD5,$/;"	e	enum:__anon103
TLS_HASH_NULL	src/tls/tlsv1_common.h	/^	TLS_HASH_NULL,$/;"	e	enum:__anon103
TLS_HASH_SHA	src/tls/tlsv1_common.h	/^	TLS_HASH_SHA$/;"	e	enum:__anon103
TLS_KEY_X_DHE_DSS	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DHE_DSS,$/;"	e	enum:__anon101
TLS_KEY_X_DHE_DSS_EXPORT	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DHE_DSS_EXPORT,$/;"	e	enum:__anon101
TLS_KEY_X_DHE_RSA	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DHE_RSA,$/;"	e	enum:__anon101
TLS_KEY_X_DHE_RSA_EXPORT	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DHE_RSA_EXPORT,$/;"	e	enum:__anon101
TLS_KEY_X_DH_DSS	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DH_DSS,$/;"	e	enum:__anon101
TLS_KEY_X_DH_DSS_EXPORT	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DH_DSS_EXPORT,$/;"	e	enum:__anon101
TLS_KEY_X_DH_RSA	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DH_RSA,$/;"	e	enum:__anon101
TLS_KEY_X_DH_RSA_EXPORT	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DH_RSA_EXPORT,$/;"	e	enum:__anon101
TLS_KEY_X_DH_anon	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DH_anon$/;"	e	enum:__anon101
TLS_KEY_X_DH_anon_EXPORT	src/tls/tlsv1_common.h	/^	TLS_KEY_X_DH_anon_EXPORT,$/;"	e	enum:__anon101
TLS_KEY_X_NULL	src/tls/tlsv1_common.h	/^	TLS_KEY_X_NULL,$/;"	e	enum:__anon101
TLS_KEY_X_RSA	src/tls/tlsv1_common.h	/^	TLS_KEY_X_RSA,$/;"	e	enum:__anon101
TLS_KEY_X_RSA_EXPORT	src/tls/tlsv1_common.h	/^	TLS_KEY_X_RSA_EXPORT,$/;"	e	enum:__anon101
TLS_MASTER_SECRET_LEN	src/eap_common/eap_fast_common.c	78;"	d	file:
TLS_MASTER_SECRET_LEN	src/tls/tlsv1_common.h	29;"	d
TLS_MAX_IV_LEN	src/tls/tlsv1_record.h	22;"	d
TLS_MAX_KEY_BLOCK_LEN	src/tls/tlsv1_record.h	23;"	d
TLS_MAX_WRITE_KEY_LEN	src/tls/tlsv1_record.h	21;"	d
TLS_MAX_WRITE_MAC_SECRET_LEN	src/tls/tlsv1_record.h	20;"	d
TLS_NULL_WITH_NULL_NULL	src/tls/tlsv1_common.h	51;"	d
TLS_PEER_CERTIFICATE	src/crypto/tls.h	/^	TLS_PEER_CERTIFICATE$/;"	e	enum:tls_event
TLS_PRE_MASTER_SECRET_LEN	src/tls/tlsv1_common.h	28;"	d
TLS_RANDOM_LEN	src/eap_common/eap_fast_common.c	77;"	d	file:
TLS_RANDOM_LEN	src/tls/tlsv1_common.h	27;"	d
TLS_RECORD_HEADER_LEN	src/tls/tlsv1_record.h	27;"	d
TLS_RSA_EXPORT_WITH_DES40_CBC_SHA	src/tls/tlsv1_common.h	59;"	d
TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5	src/tls/tlsv1_common.h	57;"	d
TLS_RSA_EXPORT_WITH_RC4_40_MD5	src/tls/tlsv1_common.h	54;"	d
TLS_RSA_WITH_3DES_EDE_CBC_SHA	src/tls/tlsv1_common.h	61;"	d
TLS_RSA_WITH_AES_128_CBC_SHA	src/tls/tlsv1_common.h	79;"	d
TLS_RSA_WITH_AES_256_CBC_SHA	src/tls/tlsv1_common.h	85;"	d
TLS_RSA_WITH_DES_CBC_SHA	src/tls/tlsv1_common.h	60;"	d
TLS_RSA_WITH_IDEA_CBC_SHA	src/tls/tlsv1_common.h	58;"	d
TLS_RSA_WITH_NULL_MD5	src/tls/tlsv1_common.h	52;"	d
TLS_RSA_WITH_NULL_SHA	src/tls/tlsv1_common.h	53;"	d
TLS_RSA_WITH_RC4_128_MD5	src/tls/tlsv1_common.h	55;"	d
TLS_RSA_WITH_RC4_128_SHA	src/tls/tlsv1_common.h	56;"	d
TLS_SEQ_NUM_LEN	src/tls/tlsv1_record.h	26;"	d
TLS_SESSION_ID_MAX_LEN	src/tls/tlsv1_common.h	30;"	d
TLS_SET_PARAMS_ENGINE_PRV_INIT_FAILED	src/crypto/tls.h	/^	TLS_SET_PARAMS_ENGINE_PRV_INIT_FAILED = -2$/;"	e	enum:__anon196
TLS_SET_PARAMS_ENGINE_PRV_VERIFY_FAILED	src/crypto/tls.h	/^	TLS_SET_PARAMS_ENGINE_PRV_VERIFY_FAILED = -3,$/;"	e	enum:__anon196
TLS_VERIFY_DATA_LEN	src/tls/tlsv1_common.h	31;"	d
TLS_VERSION	src/tls/tlsv1_common.h	23;"	d
TLS_VERSION	src/tls/tlsv1_common.h	25;"	d
TLS_VERSION_1	src/tls/tlsv1_common.h	20;"	d
TLS_VERSION_1_1	src/tls/tlsv1_common.h	21;"	d
TLV_REQ_FAILURE	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	e	enum:eap_peap_data::__anon161	file:
TLV_REQ_NONE	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	e	enum:eap_peap_data::__anon161	file:
TLV_REQ_SUCCESS	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	e	enum:eap_peap_data::__anon161	file:
TNCCS_PROCESS_ERROR	src/eap_peer/tncc.h	/^	TNCCS_PROCESS_ERROR = -1,$/;"	e	enum:tncc_process_res
TNCCS_PROCESS_ERROR	src/eap_server/tncs.h	/^	TNCCS_PROCESS_ERROR = -1,$/;"	e	enum:tncs_process_res
TNCCS_PROCESS_OK_NO_RECOMMENDATION	src/eap_peer/tncc.h	/^	TNCCS_PROCESS_OK_NO_RECOMMENDATION = 0,$/;"	e	enum:tncc_process_res
TNCCS_PROCESS_OK_NO_RECOMMENDATION	src/eap_server/tncs.h	/^	TNCCS_PROCESS_OK_NO_RECOMMENDATION = 0,$/;"	e	enum:tncs_process_res
TNCCS_RECOMMENDATION_ALLOW	src/eap_peer/tncc.h	/^	TNCCS_RECOMMENDATION_ALLOW,$/;"	e	enum:tncc_process_res
TNCCS_RECOMMENDATION_ALLOW	src/eap_server/tncs.h	/^	TNCCS_RECOMMENDATION_ALLOW,$/;"	e	enum:tncs_process_res
TNCCS_RECOMMENDATION_ERROR	src/eap_peer/tncc.h	/^	TNCCS_RECOMMENDATION_ERROR,$/;"	e	enum:tncc_process_res
TNCCS_RECOMMENDATION_ERROR	src/eap_server/tncs.h	/^	TNCCS_RECOMMENDATION_ERROR,$/;"	e	enum:tncs_process_res
TNCCS_RECOMMENDATION_ISOLATE	src/eap_peer/tncc.h	/^	TNCCS_RECOMMENDATION_ISOLATE$/;"	e	enum:tncc_process_res
TNCCS_RECOMMENDATION_ISOLATE	src/eap_server/tncs.h	/^	TNCCS_RECOMMENDATION_ISOLATE,$/;"	e	enum:tncs_process_res
TNCCS_RECOMMENDATION_NONE	src/eap_peer/tncc.h	/^	TNCCS_RECOMMENDATION_NONE,$/;"	e	enum:tncc_process_res
TNCCS_RECOMMENDATION_NONE	src/eap_server/tncs.h	/^	TNCCS_RECOMMENDATION_NONE,$/;"	e	enum:tncs_process_res
TNCCS_RECOMMENDATION_NO_ACCESS	src/eap_server/tncs.h	/^	TNCCS_RECOMMENDATION_NO_ACCESS,$/;"	e	enum:tncs_process_res
TNCCS_RECOMMENDATION_NO_RECOMMENDATION	src/eap_server/tncs.h	/^	TNCCS_RECOMMENDATION_NO_RECOMMENDATION$/;"	e	enum:tncs_process_res
TNCC_H	src/eap_peer/tncc.h	16;"	d
TNCS_H	src/eap_server/tncs.h	16;"	d
TNC_9048_LogMessage	src/eap_peer/tncc.c	/^TNC_Result TNC_9048_LogMessage(TNC_IMCID imcID, TNC_UInt32 severity,$/;"	f	signature:(TNC_IMCID imcID, TNC_UInt32 severity, const char *message)
TNC_9048_UserMessage	src/eap_peer/tncc.c	/^TNC_Result TNC_9048_UserMessage(TNC_IMCID imcID, TNC_ConnectionID connectionID,$/;"	f	signature:(TNC_IMCID imcID, TNC_ConnectionID connectionID, const char *message)
TNC_AttributeID	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_AttributeID;$/;"	t	file:
TNC_BufferReference	src/eap_peer/tncc.c	/^typedef unsigned char *TNC_BufferReference;$/;"	t	file:
TNC_BufferReference	src/eap_server/tncs.c	/^typedef unsigned char *TNC_BufferReference;$/;"	t	file:
TNC_CONFIG_FILE	src/eap_peer/tncc.c	34;"	d	file:
TNC_CONFIG_FILE	src/eap_server/tncs.c	28;"	d	file:
TNC_CONNECTION_STATE_ACCESS_ALLOWED	src/eap_peer/tncc.c	80;"	d	file:
TNC_CONNECTION_STATE_ACCESS_ALLOWED	src/eap_server/tncs.c	76;"	d	file:
TNC_CONNECTION_STATE_ACCESS_ISOLATED	src/eap_peer/tncc.c	81;"	d	file:
TNC_CONNECTION_STATE_ACCESS_ISOLATED	src/eap_server/tncs.c	77;"	d	file:
TNC_CONNECTION_STATE_ACCESS_NONE	src/eap_peer/tncc.c	82;"	d	file:
TNC_CONNECTION_STATE_ACCESS_NONE	src/eap_server/tncs.c	78;"	d	file:
TNC_CONNECTION_STATE_CREATE	src/eap_peer/tncc.c	78;"	d	file:
TNC_CONNECTION_STATE_CREATE	src/eap_server/tncs.c	74;"	d	file:
TNC_CONNECTION_STATE_DELETE	src/eap_peer/tncc.c	83;"	d	file:
TNC_CONNECTION_STATE_DELETE	src/eap_server/tncs.c	79;"	d	file:
TNC_CONNECTION_STATE_HANDSHAKE	src/eap_peer/tncc.c	79;"	d	file:
TNC_CONNECTION_STATE_HANDSHAKE	src/eap_server/tncs.c	75;"	d	file:
TNC_ConnectionID	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_ConnectionID;$/;"	t	file:
TNC_ConnectionID	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_ConnectionID;$/;"	t	file:
TNC_ConnectionState	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_ConnectionState;$/;"	t	file:
TNC_ConnectionState	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_ConnectionState;$/;"	t	file:
TNC_IFIMC_VERSION_1	src/eap_peer/tncc.c	85;"	d	file:
TNC_IFIMV_VERSION_1	src/eap_server/tncs.c	81;"	d	file:
TNC_IMCID	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_IMCID;$/;"	t	file:
TNC_IMVID	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_IMVID;$/;"	t	file:
TNC_IMV_ACTION_RECOMMENDATION_ALLOW	src/eap_server/tncs.c	/^	TNC_IMV_ACTION_RECOMMENDATION_ALLOW,$/;"	e	enum:IMV_Action_Recommendation	file:
TNC_IMV_ACTION_RECOMMENDATION_ISOLATE	src/eap_server/tncs.c	/^	TNC_IMV_ACTION_RECOMMENDATION_ISOLATE,$/;"	e	enum:IMV_Action_Recommendation	file:
TNC_IMV_ACTION_RECOMMENDATION_NO_ACCESS	src/eap_server/tncs.c	/^	TNC_IMV_ACTION_RECOMMENDATION_NO_ACCESS,$/;"	e	enum:IMV_Action_Recommendation	file:
TNC_IMV_ACTION_RECOMMENDATION_NO_RECOMMENDATION	src/eap_server/tncs.c	/^	TNC_IMV_ACTION_RECOMMENDATION_NO_RECOMMENDATION$/;"	e	enum:IMV_Action_Recommendation	file:
TNC_IMV_Action_Recommendation	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_IMV_Action_Recommendation;$/;"	t	file:
TNC_IMV_EVALUATION_RESULT_COMPLIANT	src/eap_server/tncs.c	/^	TNC_IMV_EVALUATION_RESULT_COMPLIANT,$/;"	e	enum:IMV_Evaluation_Result	file:
TNC_IMV_EVALUATION_RESULT_DONT_KNOW	src/eap_server/tncs.c	/^	TNC_IMV_EVALUATION_RESULT_DONT_KNOW$/;"	e	enum:IMV_Evaluation_Result	file:
TNC_IMV_EVALUATION_RESULT_ERROR	src/eap_server/tncs.c	/^	TNC_IMV_EVALUATION_RESULT_ERROR,$/;"	e	enum:IMV_Evaluation_Result	file:
TNC_IMV_EVALUATION_RESULT_NONCOMPLIANT_MAJOR	src/eap_server/tncs.c	/^	TNC_IMV_EVALUATION_RESULT_NONCOMPLIANT_MAJOR,$/;"	e	enum:IMV_Evaluation_Result	file:
TNC_IMV_EVALUATION_RESULT_NONCOMPLIANT_MINOR	src/eap_server/tncs.c	/^	TNC_IMV_EVALUATION_RESULT_NONCOMPLIANT_MINOR,$/;"	e	enum:IMV_Evaluation_Result	file:
TNC_IMV_Evaluation_Result	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_IMV_Evaluation_Result;$/;"	t	file:
TNC_MAX_IMC_ID	src/eap_peer/tncc.c	154;"	d	file:
TNC_MAX_IMV_ID	src/eap_server/tncs.c	147;"	d	file:
TNC_MessageSubtype	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_MessageSubtype;$/;"	t	file:
TNC_MessageType	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_MessageType;$/;"	t	file:
TNC_MessageType	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_MessageType;$/;"	t	file:
TNC_MessageTypeList	src/eap_peer/tncc.c	/^typedef TNC_MessageType *TNC_MessageTypeList;$/;"	t	file:
TNC_MessageTypeList	src/eap_server/tncs.c	/^typedef TNC_MessageType *TNC_MessageTypeList;$/;"	t	file:
TNC_RESULT_ALREADY_INITIALIZED	src/eap_peer/tncc.c	68;"	d	file:
TNC_RESULT_ALREADY_INITIALIZED	src/eap_server/tncs.c	64;"	d	file:
TNC_RESULT_CANT_RESPOND	src/eap_peer/tncc.c	73;"	d	file:
TNC_RESULT_CANT_RESPOND	src/eap_server/tncs.c	69;"	d	file:
TNC_RESULT_CANT_RETRY	src/eap_peer/tncc.c	70;"	d	file:
TNC_RESULT_CANT_RETRY	src/eap_server/tncs.c	66;"	d	file:
TNC_RESULT_FATAL	src/eap_peer/tncc.c	76;"	d	file:
TNC_RESULT_FATAL	src/eap_server/tncs.c	72;"	d	file:
TNC_RESULT_ILLEGAL_OPERATION	src/eap_peer/tncc.c	74;"	d	file:
TNC_RESULT_ILLEGAL_OPERATION	src/eap_server/tncs.c	70;"	d	file:
TNC_RESULT_INVALID_PARAMETER	src/eap_peer/tncc.c	72;"	d	file:
TNC_RESULT_INVALID_PARAMETER	src/eap_server/tncs.c	68;"	d	file:
TNC_RESULT_NOT_INITIALIZED	src/eap_peer/tncc.c	67;"	d	file:
TNC_RESULT_NOT_INITIALIZED	src/eap_server/tncs.c	63;"	d	file:
TNC_RESULT_NO_COMMON_VERSION	src/eap_peer/tncc.c	69;"	d	file:
TNC_RESULT_NO_COMMON_VERSION	src/eap_server/tncs.c	65;"	d	file:
TNC_RESULT_OTHER	src/eap_peer/tncc.c	75;"	d	file:
TNC_RESULT_OTHER	src/eap_server/tncs.c	71;"	d	file:
TNC_RESULT_SUCCESS	src/eap_peer/tncc.c	66;"	d	file:
TNC_RESULT_SUCCESS	src/eap_server/tncs.c	62;"	d	file:
TNC_RESULT_WONT_RETRY	src/eap_peer/tncc.c	71;"	d	file:
TNC_RESULT_WONT_RETRY	src/eap_server/tncs.c	67;"	d	file:
TNC_Result	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_Result;$/;"	t	file:
TNC_Result	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_Result;$/;"	t	file:
TNC_RetryReason	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_RetryReason;$/;"	t	file:
TNC_RetryReason	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_RetryReason;$/;"	t	file:
TNC_SUBTYPE_ANY	src/eap_peer/tncc.c	88;"	d	file:
TNC_SUBTYPE_ANY	src/eap_server/tncs.c	84;"	d	file:
TNC_Subtype	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_Subtype;$/;"	t	file:
TNC_TNCCS_ERROR	src/eap_peer/tncc.c	92;"	d	file:
TNC_TNCCS_ERROR	src/eap_server/tncs.c	88;"	d	file:
TNC_TNCCS_PREFERREDLANGUAGE	src/eap_peer/tncc.c	93;"	d	file:
TNC_TNCCS_PREFERREDLANGUAGE	src/eap_server/tncs.c	89;"	d	file:
TNC_TNCCS_REASONSTRINGS	src/eap_peer/tncc.c	94;"	d	file:
TNC_TNCCS_REASONSTRINGS	src/eap_server/tncs.c	90;"	d	file:
TNC_TNCCS_RECOMMENDATION	src/eap_peer/tncc.c	91;"	d	file:
TNC_TNCCS_RECOMMENDATION	src/eap_server/tncs.c	87;"	d	file:
TNC_TNCC_BindFunction	src/eap_peer/tncc.c	/^TNC_Result TNC_TNCC_BindFunction($/;"	f	signature:( TNC_IMCID imcID, char *functionName, void **pOutfunctionPointer)
TNC_TNCC_BindFunctionPointer	src/eap_peer/tncc.c	/^typedef TNC_Result (*TNC_TNCC_BindFunctionPointer)($/;"	t	file:
TNC_TNCC_ReportMessageTypes	src/eap_peer/tncc.c	/^TNC_Result TNC_TNCC_ReportMessageTypes($/;"	f	signature:( TNC_IMCID imcID, TNC_MessageTypeList supportedTypes, TNC_UInt32 typeCount)
TNC_TNCC_RequestHandshakeRetry	src/eap_peer/tncc.c	/^TNC_Result TNC_TNCC_RequestHandshakeRetry($/;"	f	signature:( TNC_IMCID imcID, TNC_ConnectionID connectionID, TNC_RetryReason reason)
TNC_TNCC_SendMessage	src/eap_peer/tncc.c	/^TNC_Result TNC_TNCC_SendMessage($/;"	f	signature:( TNC_IMCID imcID, TNC_ConnectionID connectionID, TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)
TNC_TNCS_BindFunction	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_BindFunction($/;"	f	signature:( TNC_IMVID imvID, char *functionName, void **pOutFunctionPointer)
TNC_TNCS_BindFunctionPointer	src/eap_server/tncs.c	/^typedef TNC_Result (*TNC_TNCS_BindFunctionPointer)($/;"	t	file:
TNC_TNCS_GetAttribute	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_GetAttribute($/;"	f	signature:( TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_AttributeID attribureID, TNC_UInt32 bufferLength, TNC_BufferReference buffer, TNC_UInt32 *pOutValueLength)
TNC_TNCS_ProvideRecommendation	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_ProvideRecommendation($/;"	f	signature:( TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_IMV_Action_Recommendation recommendation, TNC_IMV_Evaluation_Result evaluation)
TNC_TNCS_ReportMessageTypes	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_ReportMessageTypes($/;"	f	signature:( TNC_IMVID imvID, TNC_MessageTypeList supportedTypes, TNC_UInt32 typeCount)
TNC_TNCS_RequestHandshakeRetry	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_RequestHandshakeRetry($/;"	f	signature:( TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_RetryReason reason)
TNC_TNCS_SendMessage	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_SendMessage($/;"	f	signature:( TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)
TNC_TNCS_SetAttribute	src/eap_server/tncs.c	/^TNC_Result TNC_TNCS_SetAttribute($/;"	f	signature:( TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_AttributeID attribureID, TNC_UInt32 bufferLength, TNC_BufferReference buffer)
TNC_UInt32	src/eap_peer/tncc.c	/^typedef unsigned long TNC_UInt32;$/;"	t	file:
TNC_UInt32	src/eap_server/tncs.c	/^typedef unsigned long TNC_UInt32;$/;"	t	file:
TNC_VENDORID_ANY	src/eap_peer/tncc.c	87;"	d	file:
TNC_VENDORID_ANY	src/eap_server/tncs.c	83;"	d	file:
TNC_VendorID	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_VendorID;$/;"	t	file:
TNC_VendorID	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_VendorID;$/;"	t	file:
TNC_Version	src/eap_peer/tncc.c	/^typedef TNC_UInt32 TNC_Version;$/;"	t	file:
TNC_Version	src/eap_server/tncs.c	/^typedef TNC_UInt32 TNC_Version;$/;"	t	file:
TNC_WINREG_PATH	src/eap_peer/tncc.c	35;"	d	file:
TPK_LIFETIME	src/rsn_supp/tdls.c	45;"	d	file:
TPK_RETRY_COUNT	src/rsn_supp/tdls.c	46;"	d	file:
TPK_TIMEOUT	src/rsn_supp/tdls.c	47;"	d	file:
TRACE_H	src/utils/trace.h	16;"	d
TRUE	src/common/defs.h	/^typedef enum { FALSE = 0, TRUE = 1 } Boolean;$/;"	e	enum:__anon62
TRUE	src/common/defs.h	22;"	d
TSTR	src/eap_peer/tncc.c	28;"	d	file:
TSTR	src/eap_peer/tncc.c	30;"	d	file:
TS_UNACCEPTABLE	src/eap_common/ikev2_common.h	/^	TS_UNACCEPTABLE = 38,$/;"	e	enum:__anon124
TX_BEAMFORM_CAP_CALIB_OFFSET	src/common/ieee802_11_defs.h	584;"	d
TX_BEAMFORM_CAP_COMPRESSED_STEERING_MATRIX_BEAMFORMER_ANT_OFFSET	src/common/ieee802_11_defs.h	594;"	d
TX_BEAMFORM_CAP_CSI_NUM_BEAMFORMER_ANT_OFFSET	src/common/ieee802_11_defs.h	592;"	d
TX_BEAMFORM_CAP_EXPLICIT_BF_CSI_FEEDBACK_CAP	src/common/ieee802_11_defs.h	587;"	d
TX_BEAMFORM_CAP_EXPLICIT_BF_CSI_FEEDBACK_OFFSET	src/common/ieee802_11_defs.h	588;"	d
TX_BEAMFORM_CAP_EXPLICIT_COMPRESSED_STEERING_MATRIX_FEEDBACK_OFFSET	src/common/ieee802_11_defs.h	590;"	d
TX_BEAMFORM_CAP_EXPLICIT_CSI_TXBF_CAP	src/common/ieee802_11_defs.h	585;"	d
TX_BEAMFORM_CAP_EXPLICIT_UNCOMPR_STEERING_MATRIX_CAP	src/common/ieee802_11_defs.h	586;"	d
TX_BEAMFORM_CAP_EXPLICIT_UNCOMPR_STEERING_MATRIX_FEEDBACK_OFFSET	src/common/ieee802_11_defs.h	589;"	d
TX_BEAMFORM_CAP_IMPLICIT_ZLF_CAP	src/common/ieee802_11_defs.h	583;"	d
TX_BEAMFORM_CAP_MINIMAL_GROUPING_OFFSET	src/common/ieee802_11_defs.h	591;"	d
TX_BEAMFORM_CAP_RX_STAGGERED_SOUNDING_CAP	src/common/ieee802_11_defs.h	579;"	d
TX_BEAMFORM_CAP_RX_ZLF_CAP	src/common/ieee802_11_defs.h	581;"	d
TX_BEAMFORM_CAP_SCI_MAX_OF_ROWS_BEANFORMER_SUPPORTED_OFFSET	src/common/ieee802_11_defs.h	595;"	d
TX_BEAMFORM_CAP_TXBF_CAP	src/common/ieee802_11_defs.h	578;"	d
TX_BEAMFORM_CAP_TX_STAGGERED_SOUNDING_CAP	src/common/ieee802_11_defs.h	580;"	d
TX_BEAMFORM_CAP_TX_ZLF_CAP	src/common/ieee802_11_defs.h	582;"	d
TX_BEAMFORM_CAP_UNCOMPRESSED_STEERING_MATRIX_BEAMFORMER_ANT_OFFSET	src/common/ieee802_11_defs.h	593;"	d
Td0	src/crypto/aes-internal.c	/^const u32 Td0[256] = {$/;"	v
Td1	src/crypto/aes-internal.c	/^const u32 Td1[256] = {$/;"	v
Td2	src/crypto/aes-internal.c	/^const u32 Td2[256] = {$/;"	v
Td3	src/crypto/aes-internal.c	/^const u32 Td3[256] = {$/;"	v
Td4	src/crypto/aes-internal.c	/^const u32 Td4[256] = {$/;"	v
Td4s	src/crypto/aes-internal.c	/^const u8 Td4s[256] = {$/;"	v
Te0	src/crypto/aes-internal.c	/^const u32 Te0[256] = {$/;"	v
Te1	src/crypto/aes-internal.c	/^const u32 Te1[256] = {$/;"	v
Te2	src/crypto/aes-internal.c	/^const u32 Te2[256] = {$/;"	v
Te3	src/crypto/aes-internal.c	/^const u32 Te3[256] = {$/;"	v
Te4	src/crypto/aes-internal.c	/^const u32 Te4[256] = {$/;"	v
Terminate	src/eap_peer/tncc.c	/^	TNC_Result (*Terminate)(TNC_IMCID imcID);$/;"	m	struct:tnc_if_imc	file:	access:public
Terminate	src/eap_server/tncs.c	/^	TNC_Result (*Terminate)(TNC_IMVID imvID);$/;"	m	struct:tnc_if_imv	file:	access:public
TimeoutCtr	src/ap/wpa_auth_i.h	/^	int TimeoutCtr;$/;"	m	struct:wpa_state_machine	access:public
TimeoutEvt	src/ap/wpa_auth_i.h	/^	Boolean TimeoutEvt;$/;"	m	struct:wpa_state_machine	access:public
Timestamp	src/drivers/driver_ndis.c	/^	UCHAR Timestamp[8];$/;"	m	struct:NDIS_802_11_FIXED_IEs	file:	access:public
Timestamp	src/drivers/driver_ralink.h	/^    UCHAR Timestamp[8];$/;"	m	struct:_NDIS_802_11_FIXED_IEs	access:public
UCHAR	src/drivers/driver_ralink.h	85;"	d
UFD_DIR1	src/wps/wps_ufd.c	27;"	d	file:
UFD_DIR1	src/wps/wps_ufd.c	31;"	d	file:
UFD_DIR2	src/wps/wps_ufd.c	28;"	d	file:
UFD_DIR2	src/wps/wps_ufd.c	32;"	d	file:
UFD_FILE	src/wps/wps_ufd.c	29;"	d	file:
UFD_FILE	src/wps/wps_ufd.c	33;"	d	file:
UINT	src/drivers/driver_ralink.h	80;"	d
ULONG	src/drivers/driver_ralink.h	81;"	d
ULONG	src/drivers/driver_ralink.h	83;"	d
ULONGLONG	src/drivers/driver_ralink.h	96;"	d
UNKNOWN_GO	src/p2p/p2p_i.h	/^	UNKNOWN_GO,$/;"	e	enum:p2p_go_state
UNSUPPORTED_CRITICAL_PAYLOAD	src/eap_common/ikev2_common.h	/^	UNSUPPORTED_CRITICAL_PAYLOAD = 1,$/;"	e	enum:__anon124
UPNP_ACTION_FAILED	src/wps/http.h	/^	UPNP_ACTION_FAILED = 501,$/;"	e	enum:http_reply_code
UPNP_ADVERTISE_REPEAT	src/wps/wps_upnp_ssdp.c	26;"	d	file:
UPNP_ARG_VALUE_INVALID	src/wps/http.h	/^	UPNP_ARG_VALUE_INVALID = 600,$/;"	e	enum:http_reply_code
UPNP_ARG_VALUE_OUT_OF_RANGE	src/wps/http.h	/^	UPNP_ARG_VALUE_OUT_OF_RANGE = 601,$/;"	e	enum:http_reply_code
UPNP_CACHE_SEC	src/wps/wps_upnp_ssdp.c	24;"	d	file:
UPNP_CACHE_SEC_MIN	src/wps/wps_upnp_ssdp.c	25;"	d	file:
UPNP_INVALID_ACTION	src/wps/http.h	/^	UPNP_INVALID_ACTION = 401,$/;"	e	enum:http_reply_code
UPNP_INVALID_ARGS	src/wps/http.h	/^	UPNP_INVALID_ARGS = 402,$/;"	e	enum:http_reply_code
UPNP_MULTICAST_ADDRESS	src/wps/wps_upnp_i.h	17;"	d
UPNP_MULTICAST_PORT	src/wps/wps_upnp_i.h	18;"	d
UPNP_OUT_OF_MEMORY	src/wps/http.h	/^	UPNP_OUT_OF_MEMORY = 603$/;"	e	enum:http_reply_code
UPNP_SUBSCRIBE_SEC	src/wps/wps_upnp_i.h	23;"	d
UPNP_SUBSCRIBE_SEC_MIN	src/wps/wps_upnp_i.h	21;"	d
UPNP_WPS_DEVICE_CONTROL_FILE	src/wps/wps_upnp_i.h	28;"	d
UPNP_WPS_DEVICE_EVENT_FILE	src/wps/wps_upnp_i.h	29;"	d
UPNP_WPS_DEVICE_XML_FILE	src/wps/wps_upnp_i.h	26;"	d
UPNP_WPS_SCPD_XML_FILE	src/wps/wps_upnp_i.h	27;"	d
UPNP_WPS_WLANEVENT_TYPE_EAP	src/wps/wps_upnp.h	/^	UPNP_WPS_WLANEVENT_TYPE_EAP = 2$/;"	e	enum:upnp_wps_wlanevent_type
UPNP_WPS_WLANEVENT_TYPE_PROBE	src/wps/wps_upnp.h	/^	UPNP_WPS_WLANEVENT_TYPE_PROBE = 1,$/;"	e	enum:upnp_wps_wlanevent_type
UPNP_XML_H	src/wps/upnp_xml.h	12;"	d
USE_EXTERNAL_RADIUS_AUTH	src/ap/ap_config.h	/^		USE_EXTERNAL_RADIUS_AUTH = 2$/;"	e	enum:hostapd_bss_config::__anon3
USHORT	src/drivers/driver_ralink.h	84;"	d
USIM_CLA	src/utils/pcsc_funcs.c	62;"	d	file:
USIM_CMD_GET_RESPONSE	src/utils/pcsc_funcs.c	64;"	d	file:
USIM_CMD_RUN_UMTS_ALG	src/utils/pcsc_funcs.c	63;"	d	file:
USIM_FSP_TEMPL_TAG	src/utils/pcsc_funcs.c	68;"	d	file:
USIM_PS_DO_TAG	src/utils/pcsc_funcs.c	80;"	d	file:
USIM_TLV_DF_NAME	src/utils/pcsc_funcs.c	72;"	d	file:
USIM_TLV_FILE_DESC	src/utils/pcsc_funcs.c	70;"	d	file:
USIM_TLV_FILE_ID	src/utils/pcsc_funcs.c	71;"	d	file:
USIM_TLV_FILE_SIZE	src/utils/pcsc_funcs.c	75;"	d	file:
USIM_TLV_LIFE_CYCLE_STATUS	src/utils/pcsc_funcs.c	74;"	d	file:
USIM_TLV_PIN_STATUS_TEMPLATE	src/utils/pcsc_funcs.c	77;"	d	file:
USIM_TLV_PROPR_INFO	src/utils/pcsc_funcs.c	73;"	d	file:
USIM_TLV_SHORT_FILE_ID	src/utils/pcsc_funcs.c	78;"	d	file:
USIM_TLV_TOTAL_FILE_SIZE	src/utils/pcsc_funcs.c	76;"	d	file:
UUID_H	src/utils/uuid.h	16;"	d
UUID_LEN	src/utils/uuid.h	18;"	d
Unauthorized	src/eapol_auth/eapol_auth_sm_i.h	/^typedef enum { Unauthorized = 2, Authorized = 1 } PortState;    \/\/ 受控端口当前状态：未授权状态、授权状态$/;"	e	enum:__anon64
Unauthorized	src/eapol_supp/eapol_supp_sm.h	/^typedef enum { Unauthorized, Authorized } PortStatus;$/;"	e	enum:__anon22
VENDOR_HT_CAPAB_OUI_TYPE	src/common/ieee802_11_defs.h	862;"	d
VERSION_H	src/common/version.h	2;"	d
VERSION_STR	src/common/version.h	8;"	d
VERSION_STR_POSTFIX	src/common/version.h	5;"	d
VLAN_ID_WILDCARD	src/ap/ap_config.h	83;"	d
VLAN_INIT_H	src/ap/vlan_init.h	17;"	d
VOID	src/drivers/driver_ralink.h	93;"	d
Version	src/drivers/driver_ndis.c	/^	ULONG Version;$/;"	m	struct:NDIS_802_11_CAPABILITY	file:	access:public
Version	src/drivers/driver_ndis.c	/^	ULONG Version;$/;"	m	struct:NDIS_802_11_PMKID_CANDIDATE_LIST	file:	access:public
Version	src/drivers/driver_ralink.h	/^	ULONG Version;       \/\/ Version of the structure$/;"	m	struct:_NDIS_802_11_PMKID_CANDIDATE_LIST	access:public
WAIT_FRAG_ACK	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
WAIT_FRAG_ACK	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
WAIT_FRAG_ACK	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
WAIT_FRAG_ACK	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
WAIT_FRAG_ACK	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
WAIT_FRAG_ACK	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
WAIT_FRAG_ACK	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	e	enum:eap_ssl_data::__anon138
WAIT_START	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
WAIT_START	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
WAIT_START	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
WAUTH_ENABLED	src/drivers/driver_broadcom.c	69;"	d	file:
WAUTH_PSK_ENABLED	src/drivers/driver_broadcom.c	68;"	d	file:
WAUTH_WPA_ENABLED	src/drivers/driver_broadcom.c	67;"	d	file:
WEB_CONNECTION_MAX_READ	src/wps/wps_upnp_web.c	29;"	d	file:
WEB_CONNECTION_TIMEOUT_SEC	src/wps/wps_upnp_web.c	28;"	d	file:
WFA_ELEM_AUTHORIZEDMACS	src/wps/wps_defs.h	/^	WFA_ELEM_AUTHORIZEDMACS = 0x01,$/;"	e	enum:__anon32
WFA_ELEM_NETWORK_KEY_SHAREABLE	src/wps/wps_defs.h	/^	WFA_ELEM_NETWORK_KEY_SHAREABLE = 0x02,$/;"	e	enum:__anon32
WFA_ELEM_REQUEST_TO_ENROLL	src/wps/wps_defs.h	/^	WFA_ELEM_REQUEST_TO_ENROLL = 0x03,$/;"	e	enum:__anon32
WFA_ELEM_SETTINGS_DELAY_TIME	src/wps/wps_defs.h	/^	WFA_ELEM_SETTINGS_DELAY_TIME = 0x04$/;"	e	enum:__anon32
WFA_ELEM_VERSION2	src/wps/wps_defs.h	/^	WFA_ELEM_VERSION2 = 0x00,$/;"	e	enum:__anon32
WIRELESS_EXT	src/drivers/wireless_copy.h	104;"	d
WLAN_ACTION_BLOCK_ACK	src/common/ieee802_11_defs.h	250;"	d
WLAN_ACTION_DLS	src/common/ieee802_11_defs.h	249;"	d
WLAN_ACTION_FT	src/common/ieee802_11_defs.h	253;"	d
WLAN_ACTION_HT	src/common/ieee802_11_defs.h	254;"	d
WLAN_ACTION_PUBLIC	src/common/ieee802_11_defs.h	251;"	d
WLAN_ACTION_QOS	src/common/ieee802_11_defs.h	248;"	d
WLAN_ACTION_RADIO_MEASUREMENT	src/common/ieee802_11_defs.h	252;"	d
WLAN_ACTION_SA_QUERY	src/common/ieee802_11_defs.h	255;"	d
WLAN_ACTION_SPECTRUM_MGMT	src/common/ieee802_11_defs.h	247;"	d
WLAN_ACTION_TDLS	src/common/ieee802_11_defs.h	258;"	d
WLAN_ACTION_UNPROTECTED_WNM	src/common/ieee802_11_defs.h	257;"	d
WLAN_ACTION_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	260;"	d
WLAN_ACTION_WMM	src/common/ieee802_11_defs.h	259;"	d
WLAN_ACTION_WNM	src/common/ieee802_11_defs.h	256;"	d
WLAN_AKM_SUITE_8021X	src/common/ieee802_11_defs.h	874;"	d
WLAN_AKM_SUITE_PSK	src/common/ieee802_11_defs.h	875;"	d
WLAN_AUTH_CHALLENGE_LEN	src/common/ieee802_11_defs.h	87;"	d
WLAN_AUTH_FT	src/common/ieee802_11_defs.h	84;"	d
WLAN_AUTH_LEAP	src/common/ieee802_11_defs.h	85;"	d
WLAN_AUTH_OPEN	src/common/ieee802_11_defs.h	82;"	d
WLAN_AUTH_SHARED_KEY	src/common/ieee802_11_defs.h	83;"	d
WLAN_CAPABILITY_CF_POLLABLE	src/common/ieee802_11_defs.h	91;"	d
WLAN_CAPABILITY_CF_POLL_REQUEST	src/common/ieee802_11_defs.h	92;"	d
WLAN_CAPABILITY_CHANNEL_AGILITY	src/common/ieee802_11_defs.h	96;"	d
WLAN_CAPABILITY_DSSS_OFDM	src/common/ieee802_11_defs.h	99;"	d
WLAN_CAPABILITY_ESS	src/common/ieee802_11_defs.h	89;"	d
WLAN_CAPABILITY_IBSS	src/common/ieee802_11_defs.h	90;"	d
WLAN_CAPABILITY_PBCC	src/common/ieee802_11_defs.h	95;"	d
WLAN_CAPABILITY_PRIVACY	src/common/ieee802_11_defs.h	93;"	d
WLAN_CAPABILITY_SHORT_PREAMBLE	src/common/ieee802_11_defs.h	94;"	d
WLAN_CAPABILITY_SHORT_SLOT_TIME	src/common/ieee802_11_defs.h	98;"	d
WLAN_CAPABILITY_SPECTRUM_MGMT	src/common/ieee802_11_defs.h	97;"	d
WLAN_CIPHER_SUITE_AES_CMAC	src/common/ieee802_11_defs.h	871;"	d
WLAN_CIPHER_SUITE_CCMP	src/common/ieee802_11_defs.h	869;"	d
WLAN_CIPHER_SUITE_TKIP	src/common/ieee802_11_defs.h	867;"	d
WLAN_CIPHER_SUITE_USE_GROUP	src/common/ieee802_11_defs.h	865;"	d
WLAN_CIPHER_SUITE_WEP104	src/common/ieee802_11_defs.h	870;"	d
WLAN_CIPHER_SUITE_WEP40	src/common/ieee802_11_defs.h	866;"	d
WLAN_EID_20_40_BSS_COEXISTENCE	src/common/ieee802_11_defs.h	233;"	d
WLAN_EID_20_40_BSS_INTOLERANT	src/common/ieee802_11_defs.h	234;"	d
WLAN_EID_ADV_PROTO	src/common/ieee802_11_defs.h	240;"	d
WLAN_EID_CF_PARAMS	src/common/ieee802_11_defs.h	205;"	d
WLAN_EID_CHALLENGE	src/common/ieee802_11_defs.h	209;"	d
WLAN_EID_CHANNEL_SWITCH	src/common/ieee802_11_defs.h	216;"	d
WLAN_EID_COUNTRY	src/common/ieee802_11_defs.h	208;"	d
WLAN_EID_DS_PARAMS	src/common/ieee802_11_defs.h	204;"	d
WLAN_EID_ERP_INFO	src/common/ieee802_11_defs.h	222;"	d
WLAN_EID_EXT_CAPAB	src/common/ieee802_11_defs.h	242;"	d
WLAN_EID_EXT_SUPP_RATES	src/common/ieee802_11_defs.h	225;"	d
WLAN_EID_FAST_BSS_TRANSITION	src/common/ieee802_11_defs.h	227;"	d
WLAN_EID_FH_PARAMS	src/common/ieee802_11_defs.h	203;"	d
WLAN_EID_HT_CAP	src/common/ieee802_11_defs.h	223;"	d
WLAN_EID_HT_OPERATION	src/common/ieee802_11_defs.h	230;"	d
WLAN_EID_IBSS_DFS	src/common/ieee802_11_defs.h	220;"	d
WLAN_EID_IBSS_PARAMS	src/common/ieee802_11_defs.h	207;"	d
WLAN_EID_INTERWORKING	src/common/ieee802_11_defs.h	239;"	d
WLAN_EID_LINK_ID	src/common/ieee802_11_defs.h	238;"	d
WLAN_EID_MEASURE_REPORT	src/common/ieee802_11_defs.h	218;"	d
WLAN_EID_MEASURE_REQUEST	src/common/ieee802_11_defs.h	217;"	d
WLAN_EID_MMIE	src/common/ieee802_11_defs.h	236;"	d
WLAN_EID_MOBILITY_DOMAIN	src/common/ieee802_11_defs.h	226;"	d
WLAN_EID_OVERLAPPING_BSS_SCAN_PARAMS	src/common/ieee802_11_defs.h	235;"	d
WLAN_EID_PWR_CAPABILITY	src/common/ieee802_11_defs.h	212;"	d
WLAN_EID_PWR_CONSTRAINT	src/common/ieee802_11_defs.h	211;"	d
WLAN_EID_QUITE	src/common/ieee802_11_defs.h	219;"	d
WLAN_EID_RIC_DATA	src/common/ieee802_11_defs.h	229;"	d
WLAN_EID_ROAMING_CONSORTIUM	src/common/ieee802_11_defs.h	241;"	d
WLAN_EID_RSN	src/common/ieee802_11_defs.h	224;"	d
WLAN_EID_SECONDARY_CHANNEL_OFFSET	src/common/ieee802_11_defs.h	231;"	d
WLAN_EID_SSID	src/common/ieee802_11_defs.h	201;"	d
WLAN_EID_SUPPORTED_CHANNELS	src/common/ieee802_11_defs.h	215;"	d
WLAN_EID_SUPP_RATES	src/common/ieee802_11_defs.h	202;"	d
WLAN_EID_TIM	src/common/ieee802_11_defs.h	206;"	d
WLAN_EID_TIMEOUT_INTERVAL	src/common/ieee802_11_defs.h	228;"	d
WLAN_EID_TIME_ADVERTISEMENT	src/common/ieee802_11_defs.h	232;"	d
WLAN_EID_TIME_ZONE	src/common/ieee802_11_defs.h	237;"	d
WLAN_EID_TPC_REPORT	src/common/ieee802_11_defs.h	214;"	d
WLAN_EID_TPC_REQUEST	src/common/ieee802_11_defs.h	213;"	d
WLAN_EID_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	243;"	d
WLAN_FC_FROMDS	src/common/ieee802_11_defs.h	23;"	d
WLAN_FC_GET_STYPE	src/common/ieee802_11_defs.h	32;"	d
WLAN_FC_GET_TYPE	src/common/ieee802_11_defs.h	31;"	d
WLAN_FC_ISWEP	src/common/ieee802_11_defs.h	28;"	d
WLAN_FC_MOREDATA	src/common/ieee802_11_defs.h	27;"	d
WLAN_FC_MOREFRAG	src/common/ieee802_11_defs.h	24;"	d
WLAN_FC_ORDER	src/common/ieee802_11_defs.h	29;"	d
WLAN_FC_PVER	src/common/ieee802_11_defs.h	21;"	d
WLAN_FC_PWRMGT	src/common/ieee802_11_defs.h	26;"	d
WLAN_FC_RETRY	src/common/ieee802_11_defs.h	25;"	d
WLAN_FC_STYPE_ACK	src/common/ieee802_11_defs.h	60;"	d
WLAN_FC_STYPE_ACTION	src/common/ieee802_11_defs.h	54;"	d
WLAN_FC_STYPE_ASSOC_REQ	src/common/ieee802_11_defs.h	43;"	d
WLAN_FC_STYPE_ASSOC_RESP	src/common/ieee802_11_defs.h	44;"	d
WLAN_FC_STYPE_ATIM	src/common/ieee802_11_defs.h	50;"	d
WLAN_FC_STYPE_AUTH	src/common/ieee802_11_defs.h	52;"	d
WLAN_FC_STYPE_BEACON	src/common/ieee802_11_defs.h	49;"	d
WLAN_FC_STYPE_CFACK	src/common/ieee802_11_defs.h	70;"	d
WLAN_FC_STYPE_CFACKPOLL	src/common/ieee802_11_defs.h	72;"	d
WLAN_FC_STYPE_CFEND	src/common/ieee802_11_defs.h	61;"	d
WLAN_FC_STYPE_CFENDACK	src/common/ieee802_11_defs.h	62;"	d
WLAN_FC_STYPE_CFPOLL	src/common/ieee802_11_defs.h	71;"	d
WLAN_FC_STYPE_CTS	src/common/ieee802_11_defs.h	59;"	d
WLAN_FC_STYPE_DATA	src/common/ieee802_11_defs.h	65;"	d
WLAN_FC_STYPE_DATA_CFACK	src/common/ieee802_11_defs.h	66;"	d
WLAN_FC_STYPE_DATA_CFACKPOLL	src/common/ieee802_11_defs.h	68;"	d
WLAN_FC_STYPE_DATA_CFPOLL	src/common/ieee802_11_defs.h	67;"	d
WLAN_FC_STYPE_DEAUTH	src/common/ieee802_11_defs.h	53;"	d
WLAN_FC_STYPE_DISASSOC	src/common/ieee802_11_defs.h	51;"	d
WLAN_FC_STYPE_NULLFUNC	src/common/ieee802_11_defs.h	69;"	d
WLAN_FC_STYPE_PROBE_REQ	src/common/ieee802_11_defs.h	47;"	d
WLAN_FC_STYPE_PROBE_RESP	src/common/ieee802_11_defs.h	48;"	d
WLAN_FC_STYPE_PSPOLL	src/common/ieee802_11_defs.h	57;"	d
WLAN_FC_STYPE_QOS_CFACKPOLL	src/common/ieee802_11_defs.h	79;"	d
WLAN_FC_STYPE_QOS_CFPOLL	src/common/ieee802_11_defs.h	78;"	d
WLAN_FC_STYPE_QOS_DATA	src/common/ieee802_11_defs.h	73;"	d
WLAN_FC_STYPE_QOS_DATA_CFACK	src/common/ieee802_11_defs.h	74;"	d
WLAN_FC_STYPE_QOS_DATA_CFACKPOLL	src/common/ieee802_11_defs.h	76;"	d
WLAN_FC_STYPE_QOS_DATA_CFPOLL	src/common/ieee802_11_defs.h	75;"	d
WLAN_FC_STYPE_QOS_NULL	src/common/ieee802_11_defs.h	77;"	d
WLAN_FC_STYPE_REASSOC_REQ	src/common/ieee802_11_defs.h	45;"	d
WLAN_FC_STYPE_REASSOC_RESP	src/common/ieee802_11_defs.h	46;"	d
WLAN_FC_STYPE_RTS	src/common/ieee802_11_defs.h	58;"	d
WLAN_FC_TODS	src/common/ieee802_11_defs.h	22;"	d
WLAN_FC_TYPE_CTRL	src/common/ieee802_11_defs.h	39;"	d
WLAN_FC_TYPE_DATA	src/common/ieee802_11_defs.h	40;"	d
WLAN_FC_TYPE_MGMT	src/common/ieee802_11_defs.h	38;"	d
WLAN_GET_SEQ_FRAG	src/common/ieee802_11_defs.h	34;"	d
WLAN_GET_SEQ_SEQ	src/common/ieee802_11_defs.h	35;"	d
WLAN_PA_GAS_COMEBACK_REQ	src/common/ieee802_11_defs.h	266;"	d
WLAN_PA_GAS_COMEBACK_RESP	src/common/ieee802_11_defs.h	267;"	d
WLAN_PA_GAS_INITIAL_REQ	src/common/ieee802_11_defs.h	264;"	d
WLAN_PA_GAS_INITIAL_RESP	src/common/ieee802_11_defs.h	265;"	d
WLAN_PA_VENDOR_SPECIFIC	src/common/ieee802_11_defs.h	263;"	d
WLAN_RATE_11M	src/drivers/driver_hostap.c	637;"	d	file:
WLAN_RATE_1M	src/drivers/driver_hostap.c	634;"	d	file:
WLAN_RATE_2M	src/drivers/driver_hostap.c	635;"	d	file:
WLAN_RATE_5M5	src/drivers/driver_hostap.c	636;"	d	file:
WLAN_REASON_4WAY_HANDSHAKE_TIMEOUT	src/common/ieee802_11_defs.h	184;"	d
WLAN_REASON_AKMP_NOT_VALID	src/common/ieee802_11_defs.h	189;"	d
WLAN_REASON_CIPHER_SUITE_REJECTED	src/common/ieee802_11_defs.h	193;"	d
WLAN_REASON_CLASS2_FRAME_FROM_NONAUTH_STA	src/common/ieee802_11_defs.h	174;"	d
WLAN_REASON_CLASS3_FRAME_FROM_NONASSOC_STA	src/common/ieee802_11_defs.h	175;"	d
WLAN_REASON_DEAUTH_LEAVING	src/common/ieee802_11_defs.h	171;"	d
WLAN_REASON_DISASSOC_AP_BUSY	src/common/ieee802_11_defs.h	173;"	d
WLAN_REASON_DISASSOC_DUE_TO_INACTIVITY	src/common/ieee802_11_defs.h	172;"	d
WLAN_REASON_DISASSOC_LOW_ACK	src/common/ieee802_11_defs.h	197;"	d
WLAN_REASON_DISASSOC_STA_HAS_LEFT	src/common/ieee802_11_defs.h	176;"	d
WLAN_REASON_GROUP_CIPHER_NOT_VALID	src/common/ieee802_11_defs.h	187;"	d
WLAN_REASON_GROUP_KEY_UPDATE_TIMEOUT	src/common/ieee802_11_defs.h	185;"	d
WLAN_REASON_IEEE_802_1X_AUTH_FAILED	src/common/ieee802_11_defs.h	192;"	d
WLAN_REASON_IE_IN_4WAY_DIFFERS	src/common/ieee802_11_defs.h	186;"	d
WLAN_REASON_INVALID_IE	src/common/ieee802_11_defs.h	182;"	d
WLAN_REASON_INVALID_RSN_IE_CAPAB	src/common/ieee802_11_defs.h	191;"	d
WLAN_REASON_MICHAEL_MIC_FAILURE	src/common/ieee802_11_defs.h	183;"	d
WLAN_REASON_PAIRWISE_CIPHER_NOT_VALID	src/common/ieee802_11_defs.h	188;"	d
WLAN_REASON_PREV_AUTH_NOT_VALID	src/common/ieee802_11_defs.h	170;"	d
WLAN_REASON_PWR_CAPABILITY_NOT_VALID	src/common/ieee802_11_defs.h	179;"	d
WLAN_REASON_STA_REQ_ASSOC_WITHOUT_AUTH	src/common/ieee802_11_defs.h	177;"	d
WLAN_REASON_SUPPORTED_CHANNEL_NOT_VALID	src/common/ieee802_11_defs.h	180;"	d
WLAN_REASON_TDLS_TEARDOWN_UNREACHABLE	src/common/ieee802_11_defs.h	194;"	d
WLAN_REASON_TDLS_TEARDOWN_UNSPECIFIED	src/common/ieee802_11_defs.h	195;"	d
WLAN_REASON_UNSPECIFIED	src/common/ieee802_11_defs.h	169;"	d
WLAN_REASON_UNSUPPORTED_RSN_IE_VERSION	src/common/ieee802_11_defs.h	190;"	d
WLAN_SA_QUERY_REQUEST	src/common/ieee802_11_defs.h	271;"	d
WLAN_SA_QUERY_RESPONSE	src/common/ieee802_11_defs.h	272;"	d
WLAN_SA_QUERY_TR_ID_LEN	src/common/ieee802_11_defs.h	274;"	d
WLAN_STATUS_ADV_SRV_UNREACHABLE	src/common/ieee802_11_defs.h	162;"	d
WLAN_STATUS_AKMP_NOT_VALID	src/common/ieee802_11_defs.h	142;"	d
WLAN_STATUS_AP_UNABLE_TO_HANDLE_NEW_STA	src/common/ieee802_11_defs.h	116;"	d
WLAN_STATUS_ASSOC_DENIED_LISTEN_INT_TOO_LARGE	src/common/ieee802_11_defs.h	150;"	d
WLAN_STATUS_ASSOC_DENIED_NOAGILITY	src/common/ieee802_11_defs.h	121;"	d
WLAN_STATUS_ASSOC_DENIED_NOPBCC	src/common/ieee802_11_defs.h	120;"	d
WLAN_STATUS_ASSOC_DENIED_NOSHORT	src/common/ieee802_11_defs.h	119;"	d
WLAN_STATUS_ASSOC_DENIED_NO_DSSS_OFDM	src/common/ieee802_11_defs.h	128;"	d
WLAN_STATUS_ASSOC_DENIED_NO_HT	src/common/ieee802_11_defs.h	129;"	d
WLAN_STATUS_ASSOC_DENIED_NO_PCO	src/common/ieee802_11_defs.h	131;"	d
WLAN_STATUS_ASSOC_DENIED_NO_SHORT_SLOT_TIME	src/common/ieee802_11_defs.h	127;"	d
WLAN_STATUS_ASSOC_DENIED_RATES	src/common/ieee802_11_defs.h	117;"	d
WLAN_STATUS_ASSOC_DENIED_UNSPEC	src/common/ieee802_11_defs.h	111;"	d
WLAN_STATUS_ASSOC_REJECTED_TEMPORARILY	src/common/ieee802_11_defs.h	133;"	d
WLAN_STATUS_AUTH_TIMEOUT	src/common/ieee802_11_defs.h	115;"	d
WLAN_STATUS_CAPS_UNSUPPORTED	src/common/ieee802_11_defs.h	109;"	d
WLAN_STATUS_CHALLENGE_FAIL	src/common/ieee802_11_defs.h	114;"	d
WLAN_STATUS_CIPHER_REJECTED_PER_POLICY	src/common/ieee802_11_defs.h	145;"	d
WLAN_STATUS_DEST_STA_NOT_PRESENT	src/common/ieee802_11_defs.h	148;"	d
WLAN_STATUS_DEST_STA_NOT_QOS_STA	src/common/ieee802_11_defs.h	149;"	d
WLAN_STATUS_DIRECT_LINK_NOT_ALLOWED	src/common/ieee802_11_defs.h	147;"	d
WLAN_STATUS_GAS_ADV_PROTO_NOT_SUPPORTED	src/common/ieee802_11_defs.h	156;"	d
WLAN_STATUS_GAS_RESP_LARGER_THAN_LIMIT	src/common/ieee802_11_defs.h	160;"	d
WLAN_STATUS_GAS_RESP_NOT_RECEIVED	src/common/ieee802_11_defs.h	158;"	d
WLAN_STATUS_GROUP_CIPHER_NOT_VALID	src/common/ieee802_11_defs.h	140;"	d
WLAN_STATUS_INVALID_FTIE	src/common/ieee802_11_defs.h	155;"	d
WLAN_STATUS_INVALID_FT_ACTION_FRAME_COUNT	src/common/ieee802_11_defs.h	152;"	d
WLAN_STATUS_INVALID_IE	src/common/ieee802_11_defs.h	139;"	d
WLAN_STATUS_INVALID_MDIE	src/common/ieee802_11_defs.h	154;"	d
WLAN_STATUS_INVALID_PARAMETERS	src/common/ieee802_11_defs.h	137;"	d
WLAN_STATUS_INVALID_PMKID	src/common/ieee802_11_defs.h	153;"	d
WLAN_STATUS_INVALID_RSNIE	src/common/ieee802_11_defs.h	165;"	d
WLAN_STATUS_INVALID_RSN_IE_CAPAB	src/common/ieee802_11_defs.h	144;"	d
WLAN_STATUS_NOT_IN_SAME_BSS	src/common/ieee802_11_defs.h	108;"	d
WLAN_STATUS_NOT_SUPPORTED_AUTH_ALG	src/common/ieee802_11_defs.h	112;"	d
WLAN_STATUS_NO_OUTSTANDING_GAS_REQ	src/common/ieee802_11_defs.h	157;"	d
WLAN_STATUS_PAIRWISE_CIPHER_NOT_VALID	src/common/ieee802_11_defs.h	141;"	d
WLAN_STATUS_PWR_CAPABILITY_NOT_VALID	src/common/ieee802_11_defs.h	124;"	d
WLAN_STATUS_R0KH_UNREACHABLE	src/common/ieee802_11_defs.h	130;"	d
WLAN_STATUS_REASSOC_NO_ASSOC	src/common/ieee802_11_defs.h	110;"	d
WLAN_STATUS_REQUEST_DECLINED	src/common/ieee802_11_defs.h	136;"	d
WLAN_STATUS_REQ_REFUSED_HOME	src/common/ieee802_11_defs.h	161;"	d
WLAN_STATUS_REQ_REFUSED_SSPN	src/common/ieee802_11_defs.h	163;"	d
WLAN_STATUS_REQ_REFUSED_UNAUTH_ACCESS	src/common/ieee802_11_defs.h	164;"	d
WLAN_STATUS_ROBUST_MGMT_FRAME_POLICY_VIOLATION	src/common/ieee802_11_defs.h	134;"	d
WLAN_STATUS_SECURITY_DISABLED	src/common/ieee802_11_defs.h	106;"	d
WLAN_STATUS_SPEC_MGMT_REQUIRED	src/common/ieee802_11_defs.h	123;"	d
WLAN_STATUS_STA_TIMED_OUT_WAITING_FOR_GAS_RESP	src/common/ieee802_11_defs.h	159;"	d
WLAN_STATUS_SUCCESS	src/common/ieee802_11_defs.h	102;"	d
WLAN_STATUS_SUPPORTED_CHANNEL_NOT_VALID	src/common/ieee802_11_defs.h	125;"	d
WLAN_STATUS_TDLS_WAKEUP_ALTERNATE	src/common/ieee802_11_defs.h	104;"	d
WLAN_STATUS_TDLS_WAKEUP_REJECT	src/common/ieee802_11_defs.h	105;"	d
WLAN_STATUS_TRANSMISSION_FAILURE	src/common/ieee802_11_defs.h	166;"	d
WLAN_STATUS_TS_NOT_CREATED	src/common/ieee802_11_defs.h	146;"	d
WLAN_STATUS_UNACCEPTABLE_LIFETIME	src/common/ieee802_11_defs.h	107;"	d
WLAN_STATUS_UNKNOWN_AUTH_TRANSACTION	src/common/ieee802_11_defs.h	113;"	d
WLAN_STATUS_UNSPECIFIED_FAILURE	src/common/ieee802_11_defs.h	103;"	d
WLAN_STATUS_UNSPECIFIED_QOS_FAILURE	src/common/ieee802_11_defs.h	135;"	d
WLAN_STATUS_UNSUPPORTED_RSN_IE_VERSION	src/common/ieee802_11_defs.h	143;"	d
WLAN_STA_ASSOC	src/ap/sta_info.h	20;"	d
WLAN_STA_ASSOC_REQ_OK	src/ap/sta_info.h	34;"	d
WLAN_STA_AUTH	src/ap/sta_info.h	19;"	d
WLAN_STA_AUTHORIZED	src/ap/sta_info.h	24;"	d
WLAN_STA_HT	src/ap/sta_info.h	30;"	d
WLAN_STA_MAYBE_WPS	src/ap/sta_info.h	32;"	d
WLAN_STA_MFP	src/ap/sta_info.h	29;"	d
WLAN_STA_NONERP	src/ap/sta_info.h	38;"	d
WLAN_STA_PENDING_DEAUTH_CB	src/ap/sta_info.h	37;"	d
WLAN_STA_PENDING_DISASSOC_CB	src/ap/sta_info.h	36;"	d
WLAN_STA_PENDING_POLL	src/ap/sta_info.h	25;"	d
WLAN_STA_PERM	src/ap/sta_info.h	23;"	d
WLAN_STA_PREAUTH	src/ap/sta_info.h	27;"	d
WLAN_STA_PS	src/ap/sta_info.h	21;"	d
WLAN_STA_SHORT_PREAMBLE	src/ap/sta_info.h	26;"	d
WLAN_STA_TIM	src/ap/sta_info.h	22;"	d
WLAN_STA_WDS	src/ap/sta_info.h	33;"	d
WLAN_STA_WMM	src/ap/sta_info.h	28;"	d
WLAN_STA_WPS	src/ap/sta_info.h	31;"	d
WLAN_STA_WPS2	src/ap/sta_info.h	35;"	d
WLAN_SUPP_RATES_MAX	src/ap/sta_info.h	42;"	d
WLAN_TDLS_CHANNEL_SWITCH_REQUEST	src/common/ieee802_11_defs.h	282;"	d
WLAN_TDLS_CHANNEL_SWITCH_RESPONSE	src/common/ieee802_11_defs.h	283;"	d
WLAN_TDLS_DISCOVERY_REQUEST	src/common/ieee802_11_defs.h	287;"	d
WLAN_TDLS_DISCOVERY_RESPONSE	src/common/ieee802_11_defs.h	268;"	d
WLAN_TDLS_PEER_PSM_REQUEST	src/common/ieee802_11_defs.h	284;"	d
WLAN_TDLS_PEER_PSM_RESPONSE	src/common/ieee802_11_defs.h	285;"	d
WLAN_TDLS_PEER_TRAFFIC_INDICATION	src/common/ieee802_11_defs.h	281;"	d
WLAN_TDLS_PEER_TRAFFIC_RESPONSE	src/common/ieee802_11_defs.h	286;"	d
WLAN_TDLS_SETUP_CONFIRM	src/common/ieee802_11_defs.h	279;"	d
WLAN_TDLS_SETUP_REQUEST	src/common/ieee802_11_defs.h	277;"	d
WLAN_TDLS_SETUP_RESPONSE	src/common/ieee802_11_defs.h	278;"	d
WLAN_TDLS_TEARDOWN	src/common/ieee802_11_defs.h	280;"	d
WLAN_TIMEOUT_ASSOC_COMEBACK	src/common/ieee802_11_defs.h	292;"	d
WLAN_TIMEOUT_KEY_LIFETIME	src/common/ieee802_11_defs.h	291;"	d
WLAN_TIMEOUT_REASSOC_DEADLINE	src/common/ieee802_11_defs.h	290;"	d
WLC_DEAUTHENTICATE	src/drivers/driver_broadcom.c	52;"	d	file:
WLC_DEAUTHENTICATE_WITH_REASON	src/drivers/driver_broadcom.c	55;"	d	file:
WLC_SET_TKIP_COUNTERMEASURES	src/drivers/driver_broadcom.c	58;"	d	file:
WL_VERSION	src/drivers/driver_broadcom.c	62;"	d	file:
WME_H	src/ap/wmm.h	17;"	d
WME_OUI_TYPE	src/drivers/driver_madwifi.c	35;"	d	file:
WME_OUI_TYPE	src/drivers/driver_madwifi.c	64;"	d	file:
WMM_ACTION_CODE_ADDTS_REQ	src/common/ieee802_11_defs.h	649;"	d
WMM_ACTION_CODE_ADDTS_RESP	src/common/ieee802_11_defs.h	650;"	d
WMM_ACTION_CODE_DELTS	src/common/ieee802_11_defs.h	651;"	d
WMM_AC_ACI_MASK	src/common/ieee802_11_defs.h	683;"	d
WMM_AC_ACI_SHIFT	src/common/ieee802_11_defs.h	684;"	d
WMM_AC_ACM	src/common/ieee802_11_defs.h	682;"	d
WMM_AC_AIFNS_SHIFT	src/common/ieee802_11_defs.h	681;"	d
WMM_AC_AIFSN_MASK	src/common/ieee802_11_defs.h	680;"	d
WMM_AC_BE	src/common/ieee802_11_defs.h	/^	WMM_AC_BE = 0 \/* Best Effort *\/,$/;"	e	enum:__anon59
WMM_AC_BK	src/common/ieee802_11_defs.h	/^	WMM_AC_BK = 1 \/* Background *\/,$/;"	e	enum:__anon59
WMM_AC_ECWMAX_MASK	src/common/ieee802_11_defs.h	688;"	d
WMM_AC_ECWMAX_SHIFT	src/common/ieee802_11_defs.h	689;"	d
WMM_AC_ECWMIN_MASK	src/common/ieee802_11_defs.h	686;"	d
WMM_AC_ECWMIN_SHIFT	src/common/ieee802_11_defs.h	687;"	d
WMM_AC_VI	src/common/ieee802_11_defs.h	/^	WMM_AC_VI = 2 \/* Video *\/,$/;"	e	enum:__anon59
WMM_AC_VO	src/common/ieee802_11_defs.h	/^	WMM_AC_VO = 3 \/* Voice *\/$/;"	e	enum:__anon59
WMM_ADDTS_STATUS_ADMISSION_ACCEPTED	src/common/ieee802_11_defs.h	653;"	d
WMM_ADDTS_STATUS_INVALID_PARAMETERS	src/common/ieee802_11_defs.h	654;"	d
WMM_ADDTS_STATUS_REFUSED	src/common/ieee802_11_defs.h	656;"	d
WMM_OUI_SUBTYPE_INFORMATION_ELEMENT	src/common/ieee802_11_defs.h	644;"	d
WMM_OUI_SUBTYPE_PARAMETER_ELEMENT	src/common/ieee802_11_defs.h	645;"	d
WMM_OUI_SUBTYPE_TSPEC_ELEMENT	src/common/ieee802_11_defs.h	646;"	d
WMM_OUI_TYPE	src/common/ieee802_11_defs.h	643;"	d
WMM_TSPEC_DIRECTION_BI_DIRECTIONAL	src/common/ieee802_11_defs.h	663;"	d
WMM_TSPEC_DIRECTION_DOWNLINK	src/common/ieee802_11_defs.h	661;"	d
WMM_TSPEC_DIRECTION_UPLINK	src/common/ieee802_11_defs.h	660;"	d
WMM_VERSION	src/common/ieee802_11_defs.h	647;"	d
WNM_BSS_TM_REQ_ABRIDGED	src/common/ieee802_11_defs.h	912;"	d
WNM_BSS_TM_REQ_BSS_TERMINATION_INCLUDED	src/common/ieee802_11_defs.h	914;"	d
WNM_BSS_TM_REQ_DISASSOC_IMMINENT	src/common/ieee802_11_defs.h	913;"	d
WNM_BSS_TM_REQ_ESS_DISASSOC_IMMINENT	src/common/ieee802_11_defs.h	915;"	d
WNM_BSS_TM_REQ_PREF_CAND_LIST_INCLUDED	src/common/ieee802_11_defs.h	911;"	d
WNM_BSS_TRANS_MGMT_QUERY	src/common/ieee802_11_defs.h	/^	WNM_BSS_TRANS_MGMT_QUERY = 6,$/;"	e	enum:wnm_action
WNM_BSS_TRANS_MGMT_REQ	src/common/ieee802_11_defs.h	/^	WNM_BSS_TRANS_MGMT_REQ = 7,$/;"	e	enum:wnm_action
WNM_BSS_TRANS_MGMT_RESP	src/common/ieee802_11_defs.h	/^	WNM_BSS_TRANS_MGMT_RESP = 8,$/;"	e	enum:wnm_action
WNM_CHANNEL_USAGE_REQ	src/common/ieee802_11_defs.h	/^	WNM_CHANNEL_USAGE_REQ = 21,$/;"	e	enum:wnm_action
WNM_CHANNEL_USAGE_RESP	src/common/ieee802_11_defs.h	/^	WNM_CHANNEL_USAGE_RESP = 22,$/;"	e	enum:wnm_action
WNM_COLLOCATED_INTERFERENCE_REPORT	src/common/ieee802_11_defs.h	/^	WNM_COLLOCATED_INTERFERENCE_REPORT = 12,$/;"	e	enum:wnm_action
WNM_COLLOCATED_INTERFERENCE_REQ	src/common/ieee802_11_defs.h	/^	WNM_COLLOCATED_INTERFERENCE_REQ = 11,$/;"	e	enum:wnm_action
WNM_DIAGNOSTIC_REPORT	src/common/ieee802_11_defs.h	/^	WNM_DIAGNOSTIC_REPORT = 3,$/;"	e	enum:wnm_action
WNM_DIAGNOSTIC_REQ	src/common/ieee802_11_defs.h	/^	WNM_DIAGNOSTIC_REQ = 2,$/;"	e	enum:wnm_action
WNM_DMS_REQ	src/common/ieee802_11_defs.h	/^	WNM_DMS_REQ = 23,$/;"	e	enum:wnm_action
WNM_DMS_RESP	src/common/ieee802_11_defs.h	/^	WNM_DMS_RESP = 24,$/;"	e	enum:wnm_action
WNM_EVENT_REPORT	src/common/ieee802_11_defs.h	/^	WNM_EVENT_REPORT = 1,$/;"	e	enum:wnm_action
WNM_EVENT_REQ	src/common/ieee802_11_defs.h	/^	WNM_EVENT_REQ = 0,$/;"	e	enum:wnm_action
WNM_FMS_REQ	src/common/ieee802_11_defs.h	/^	WNM_FMS_REQ = 9,$/;"	e	enum:wnm_action
WNM_FMS_RESP	src/common/ieee802_11_defs.h	/^	WNM_FMS_RESP = 10,$/;"	e	enum:wnm_action
WNM_LOCATION_CFG_REQ	src/common/ieee802_11_defs.h	/^	WNM_LOCATION_CFG_REQ = 4,$/;"	e	enum:wnm_action
WNM_LOCATION_CFG_RESP	src/common/ieee802_11_defs.h	/^	WNM_LOCATION_CFG_RESP = 5,$/;"	e	enum:wnm_action
WNM_NOTIFICATION_REQ	src/common/ieee802_11_defs.h	/^	WNM_NOTIFICATION_REQ = 26,$/;"	e	enum:wnm_action
WNM_NOTIFICATION_RESP	src/common/ieee802_11_defs.h	/^	WNM_NOTIFICATION_RESP = 27$/;"	e	enum:wnm_action
WNM_QOS_TRAFFIC_CAPAB_UPDATE	src/common/ieee802_11_defs.h	/^	WNM_QOS_TRAFFIC_CAPAB_UPDATE = 20,$/;"	e	enum:wnm_action
WNM_SLEEP_MODE_REQ	src/common/ieee802_11_defs.h	/^	WNM_SLEEP_MODE_REQ = 16,$/;"	e	enum:wnm_action
WNM_SLEEP_MODE_RESP	src/common/ieee802_11_defs.h	/^	WNM_SLEEP_MODE_RESP = 17,$/;"	e	enum:wnm_action
WNM_TFS_NOTIFY	src/common/ieee802_11_defs.h	/^	WNM_TFS_NOTIFY = 15,$/;"	e	enum:wnm_action
WNM_TFS_REQ	src/common/ieee802_11_defs.h	/^	WNM_TFS_REQ = 13,$/;"	e	enum:wnm_action
WNM_TFS_RESP	src/common/ieee802_11_defs.h	/^	WNM_TFS_RESP = 14,$/;"	e	enum:wnm_action
WNM_TIMING_MEASUREMENT_REQ	src/common/ieee802_11_defs.h	/^	WNM_TIMING_MEASUREMENT_REQ = 25,$/;"	e	enum:wnm_action
WNM_TIM_BROADCAST_REQ	src/common/ieee802_11_defs.h	/^	WNM_TIM_BROADCAST_REQ = 18,$/;"	e	enum:wnm_action
WNM_TIM_BROADCAST_RESP	src/common/ieee802_11_defs.h	/^	WNM_TIM_BROADCAST_RESP = 19,$/;"	e	enum:wnm_action
WORDS_BIGENDIAN	src/utils/common.h	239;"	d
WPABUF_H	src/utils/wpabuf.h	16;"	d
WPABUF_MAGIC	src/utils/wpabuf.c	22;"	d	file:
WPAS_MAX_SCAN_SSIDS	src/drivers/driver.h	202;"	d
WPA_4WAY_HANDSHAKE	src/common/defs.h	/^	WPA_4WAY_HANDSHAKE,$/;"	e	enum:wpa_states
WPA_ALG_CCMP	src/common/defs.h	/^	WPA_ALG_CCMP,$/;"	e	enum:wpa_alg
WPA_ALG_IGTK	src/common/defs.h	/^	WPA_ALG_IGTK,$/;"	e	enum:wpa_alg
WPA_ALG_NONE	src/common/defs.h	/^	WPA_ALG_NONE,$/;"	e	enum:wpa_alg
WPA_ALG_PMK	src/common/defs.h	/^	WPA_ALG_PMK$/;"	e	enum:wpa_alg
WPA_ALG_TKIP	src/common/defs.h	/^	WPA_ALG_TKIP,$/;"	e	enum:wpa_alg
WPA_ALG_WEP	src/common/defs.h	/^	WPA_ALG_WEP,$/;"	e	enum:wpa_alg
WPA_ALLOC_FAIL	src/ap/wpa_auth.h	/^	WPA_INVALID_AKMP, WPA_NOT_ENABLED, WPA_ALLOC_FAIL,$/;"	e	enum:__anon7
WPA_ASSERT	src/utils/wpa_debug.h	294;"	d
WPA_ASSERT	src/utils/wpa_debug.h	304;"	d
WPA_ASSOC	src/ap/wpa_auth.h	/^	WPA_AUTH, WPA_ASSOC, WPA_DISASSOC, WPA_DEAUTH, WPA_REAUTH,$/;"	e	enum:__anon8
WPA_ASSOCIATED	src/common/defs.h	/^	WPA_ASSOCIATED,$/;"	e	enum:wpa_states
WPA_ASSOCIATING	src/common/defs.h	/^	WPA_ASSOCIATING,$/;"	e	enum:wpa_states
WPA_ASSOC_FT	src/ap/wpa_auth.h	/^	WPA_REAUTH_EAPOL, WPA_ASSOC_FT$/;"	e	enum:__anon8
WPA_AUTH	src/ap/wpa_auth.h	/^	WPA_AUTH, WPA_ASSOC, WPA_DISASSOC, WPA_DEAUTH, WPA_REAUTH,$/;"	e	enum:__anon8
WPA_AUTHENTICATING	src/common/defs.h	/^	WPA_AUTHENTICATING,$/;"	e	enum:wpa_states
WPA_AUTH_ALG_FT	src/common/defs.h	87;"	d
WPA_AUTH_ALG_LEAP	src/common/defs.h	86;"	d
WPA_AUTH_ALG_OPEN	src/common/defs.h	84;"	d
WPA_AUTH_ALG_SHARED	src/common/defs.h	85;"	d
WPA_AUTH_GLUE_H	src/ap/wpa_auth_glue.h	16;"	d
WPA_AUTH_H	src/ap/wpa_auth.h	16;"	d
WPA_AUTH_IE_H	src/ap/wpa_auth_ie.h	16;"	d
WPA_AUTH_I_H	src/ap/wpa_auth_i.h	16;"	d
WPA_AUTH_KEY_MGMT_NONE	src/common/wpa_common.h	38;"	d
WPA_AUTH_KEY_MGMT_PSK_OVER_802_1X	src/common/wpa_common.h	40;"	d
WPA_AUTH_KEY_MGMT_UNSPEC_802_1X	src/common/wpa_common.h	39;"	d
WPA_BUILD_HOSTAPD	hostapd/Android.mk	/^    WPA_BUILD_HOSTAPD := true$/;"	m
WPA_BUILD_HOSTAPD	hostapd/Android.mk	/^WPA_BUILD_HOSTAPD := false$/;"	m
WPA_BYTE_SWAP_DEFINED	src/utils/common.h	194;"	d
WPA_BYTE_SWAP_DEFINED	src/utils/common.h	245;"	d
WPA_CAPABILITY_EXT_KEY_ID_FOR_UNICAST	src/common/wpa_common.h	125;"	d
WPA_CAPABILITY_MFPC	src/common/wpa_common.h	119;"	d
WPA_CAPABILITY_MFPR	src/common/wpa_common.h	118;"	d
WPA_CAPABILITY_NO_PAIRWISE	src/common/wpa_common.h	115;"	d
WPA_CAPABILITY_PBAC	src/common/wpa_common.h	124;"	d
WPA_CAPABILITY_PEERKEY_ENABLED	src/common/wpa_common.h	121;"	d
WPA_CAPABILITY_PREAUTH	src/common/wpa_common.h	114;"	d
WPA_CAPABILITY_SPP_A_MSDU_CAPABLE	src/common/wpa_common.h	122;"	d
WPA_CAPABILITY_SPP_A_MSDU_REQUIRED	src/common/wpa_common.h	123;"	d
WPA_CIPHER_AES_128_CMAC	src/common/defs.h	33;"	d
WPA_CIPHER_CCMP	src/common/defs.h	31;"	d
WPA_CIPHER_NONE	src/common/defs.h	27;"	d
WPA_CIPHER_SUITE_CCMP	src/common/wpa_common.h	47;"	d
WPA_CIPHER_SUITE_NONE	src/common/wpa_common.h	41;"	d
WPA_CIPHER_SUITE_TKIP	src/common/wpa_common.h	43;"	d
WPA_CIPHER_SUITE_WEP104	src/common/wpa_common.h	48;"	d
WPA_CIPHER_SUITE_WEP40	src/common/wpa_common.h	42;"	d
WPA_CIPHER_TKIP	src/common/defs.h	30;"	d
WPA_CIPHER_WEP104	src/common/defs.h	29;"	d
WPA_CIPHER_WEP40	src/common/defs.h	28;"	d
WPA_COMMON_H	src/common/wpa_common.h	16;"	d
WPA_COMPLETED	src/common/defs.h	/^	WPA_COMPLETED$/;"	e	enum:wpa_states
WPA_CTRL_H	src/common/wpa_ctrl.h	16;"	d
WPA_CTRL_IFACE_PORT	src/common/wpa_ctrl.h	284;"	d
WPA_CTRL_REQ	src/common/wpa_ctrl.h	25;"	d
WPA_CTRL_REQ_EAP_IDENTITY	src/common/defs.h	/^	WPA_CTRL_REQ_EAP_IDENTITY,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_REQ_EAP_NEW_PASSWORD	src/common/defs.h	/^	WPA_CTRL_REQ_EAP_NEW_PASSWORD,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_REQ_EAP_OTP	src/common/defs.h	/^	WPA_CTRL_REQ_EAP_OTP,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_REQ_EAP_PASSPHRASE	src/common/defs.h	/^	WPA_CTRL_REQ_EAP_PASSPHRASE,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_REQ_EAP_PASSWORD	src/common/defs.h	/^	WPA_CTRL_REQ_EAP_PASSWORD,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_REQ_EAP_PIN	src/common/defs.h	/^	WPA_CTRL_REQ_EAP_PIN,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_REQ_UNKNOWN	src/common/defs.h	/^	WPA_CTRL_REQ_UNKNOWN,$/;"	e	enum:wpa_ctrl_req_type
WPA_CTRL_RSP	src/common/wpa_ctrl.h	28;"	d
WPA_DEAUTH	src/ap/wpa_auth.h	/^	WPA_AUTH, WPA_ASSOC, WPA_DISASSOC, WPA_DEAUTH, WPA_REAUTH,$/;"	e	enum:__anon8
WPA_DEBUG_H	src/utils/wpa_debug.h	16;"	d
WPA_DISASSOC	src/ap/wpa_auth.h	/^	WPA_AUTH, WPA_ASSOC, WPA_DISASSOC, WPA_DEAUTH, WPA_REAUTH,$/;"	e	enum:__anon8
WPA_DISCONNECTED	src/common/defs.h	/^	WPA_DISCONNECTED,$/;"	e	enum:wpa_states
WPA_DRIVER_AUTH_LEAP	src/drivers/driver.h	698;"	d
WPA_DRIVER_AUTH_OPEN	src/drivers/driver.h	696;"	d
WPA_DRIVER_AUTH_SHARED	src/drivers/driver.h	697;"	d
WPA_DRIVER_CAPA_ENC_CCMP	src/drivers/driver.h	693;"	d
WPA_DRIVER_CAPA_ENC_TKIP	src/drivers/driver.h	692;"	d
WPA_DRIVER_CAPA_ENC_WEP104	src/drivers/driver.h	691;"	d
WPA_DRIVER_CAPA_ENC_WEP40	src/drivers/driver.h	690;"	d
WPA_DRIVER_CAPA_KEY_MGMT_FT	src/drivers/driver.h	686;"	d
WPA_DRIVER_CAPA_KEY_MGMT_FT_PSK	src/drivers/driver.h	687;"	d
WPA_DRIVER_CAPA_KEY_MGMT_WPA	src/drivers/driver.h	681;"	d
WPA_DRIVER_CAPA_KEY_MGMT_WPA2	src/drivers/driver.h	682;"	d
WPA_DRIVER_CAPA_KEY_MGMT_WPA2_PSK	src/drivers/driver.h	684;"	d
WPA_DRIVER_CAPA_KEY_MGMT_WPA_NONE	src/drivers/driver.h	685;"	d
WPA_DRIVER_CAPA_KEY_MGMT_WPA_PSK	src/drivers/driver.h	683;"	d
WPA_DRIVER_FLAGS_4WAY_HANDSHAKE	src/drivers/driver.h	708;"	d
WPA_DRIVER_FLAGS_AP	src/drivers/driver.h	714;"	d
WPA_DRIVER_FLAGS_BSS_SELECTION	src/drivers/driver.h	749;"	d
WPA_DRIVER_FLAGS_DEAUTH_TX_STATUS	src/drivers/driver.h	747;"	d
WPA_DRIVER_FLAGS_DRIVER_IE	src/drivers/driver.h	702;"	d
WPA_DRIVER_FLAGS_EAPOL_TX_STATUS	src/drivers/driver.h	745;"	d
WPA_DRIVER_FLAGS_MULTI_CHANNEL_CONCURRENT	src/drivers/driver.h	729;"	d
WPA_DRIVER_FLAGS_OFFCHANNEL_TX	src/drivers/driver.h	743;"	d
WPA_DRIVER_FLAGS_P2P_CAPABLE	src/drivers/driver.h	727;"	d
WPA_DRIVER_FLAGS_P2P_CONCURRENT	src/drivers/driver.h	720;"	d
WPA_DRIVER_FLAGS_P2P_DEDICATED_INTERFACE	src/drivers/driver.h	725;"	d
WPA_DRIVER_FLAGS_P2P_MGMT	src/drivers/driver.h	718;"	d
WPA_DRIVER_FLAGS_P2P_MGMT_AND_NON_P2P	src/drivers/driver.h	735;"	d
WPA_DRIVER_FLAGS_SANE_ERROR_CODES	src/drivers/driver.h	741;"	d
WPA_DRIVER_FLAGS_SET_KEYS_AFTER_ASSOC	src/drivers/driver.h	704;"	d
WPA_DRIVER_FLAGS_SET_KEYS_AFTER_ASSOC_DONE	src/drivers/driver.h	716;"	d
WPA_DRIVER_FLAGS_SME	src/drivers/driver.h	712;"	d
WPA_DRIVER_FLAGS_TDLS_EXTERNAL_SETUP	src/drivers/driver.h	753;"	d
WPA_DRIVER_FLAGS_TDLS_SUPPORT	src/drivers/driver.h	751;"	d
WPA_DRIVER_FLAGS_WIRED	src/drivers/driver.h	709;"	d
WPA_EAPOL_authorized	src/ap/wpa_auth.h	/^	WPA_EAPOL_portEnabled, WPA_EAPOL_portValid, WPA_EAPOL_authorized,$/;"	e	enum:__anon6
WPA_EAPOL_inc_EapolFramesTx	src/ap/wpa_auth.h	/^	WPA_EAPOL_keyDone, WPA_EAPOL_inc_EapolFramesTx$/;"	e	enum:__anon6
WPA_EAPOL_keyAvailable	src/ap/wpa_auth.h	/^	WPA_EAPOL_portControl_Auto, WPA_EAPOL_keyRun, WPA_EAPOL_keyAvailable,$/;"	e	enum:__anon6
WPA_EAPOL_keyDone	src/ap/wpa_auth.h	/^	WPA_EAPOL_keyDone, WPA_EAPOL_inc_EapolFramesTx$/;"	e	enum:__anon6
WPA_EAPOL_keyRun	src/ap/wpa_auth.h	/^	WPA_EAPOL_portControl_Auto, WPA_EAPOL_keyRun, WPA_EAPOL_keyAvailable,$/;"	e	enum:__anon6
WPA_EAPOL_portControl_Auto	src/ap/wpa_auth.h	/^	WPA_EAPOL_portControl_Auto, WPA_EAPOL_keyRun, WPA_EAPOL_keyAvailable,$/;"	e	enum:__anon6
WPA_EAPOL_portEnabled	src/ap/wpa_auth.h	/^	WPA_EAPOL_portEnabled, WPA_EAPOL_portValid, WPA_EAPOL_authorized,$/;"	e	enum:__anon6
WPA_EAPOL_portValid	src/ap/wpa_auth.h	/^	WPA_EAPOL_portEnabled, WPA_EAPOL_portValid, WPA_EAPOL_authorized,$/;"	e	enum:__anon6
WPA_ENABLED	src/drivers/driver_broadcom.c	64;"	d	file:
WPA_EVENT_ASSOC_REJECT	src/common/wpa_ctrl.h	36;"	d
WPA_EVENT_BSS_ADDED	src/common/wpa_ctrl.h	62;"	d
WPA_EVENT_BSS_REMOVED	src/common/wpa_ctrl.h	64;"	d
WPA_EVENT_CONNECTED	src/common/wpa_ctrl.h	32;"	d
WPA_EVENT_DISCONNECTED	src/common/wpa_ctrl.h	34;"	d
WPA_EVENT_EAP_FAILURE	src/common/wpa_ctrl.h	56;"	d
WPA_EVENT_EAP_METHOD	src/common/wpa_ctrl.h	48;"	d
WPA_EVENT_EAP_NOTIFICATION	src/common/wpa_ctrl.h	42;"	d
WPA_EVENT_EAP_PEER_CERT	src/common/wpa_ctrl.h	50;"	d
WPA_EVENT_EAP_PROPOSED_METHOD	src/common/wpa_ctrl.h	46;"	d
WPA_EVENT_EAP_STARTED	src/common/wpa_ctrl.h	44;"	d
WPA_EVENT_EAP_SUCCESS	src/common/wpa_ctrl.h	54;"	d
WPA_EVENT_EAP_TLS_CERT_ERROR	src/common/wpa_ctrl.h	52;"	d
WPA_EVENT_PASSWORD_CHANGED	src/common/wpa_ctrl.h	40;"	d
WPA_EVENT_SCAN_RESULTS	src/common/wpa_ctrl.h	58;"	d
WPA_EVENT_STATE_CHANGE	src/common/wpa_ctrl.h	60;"	d
WPA_EVENT_TERMINATING	src/common/wpa_ctrl.h	38;"	d
WPA_GET_BE16	src/utils/common.h	253;"	d
WPA_GET_BE24	src/utils/common.h	271;"	d
WPA_GET_BE32	src/utils/common.h	282;"	d
WPA_GET_BE64	src/utils/common.h	305;"	d
WPA_GET_LE16	src/utils/common.h	262;"	d
WPA_GET_LE32	src/utils/common.h	294;"	d
WPA_GET_LE64	src/utils/common.h	321;"	d
WPA_GLOBAL_CTRL_IFACE_PORT	src/common/wpa_ctrl.h	285;"	d
WPA_GMK_LEN	src/common/wpa_common.h	26;"	d
WPA_GROUP_GTK_INIT	src/ap/wpa_auth_i.h	/^		WPA_GROUP_GTK_INIT = 0,$/;"	e	enum:wpa_group::__anon17
WPA_GROUP_HANDSHAKE	src/common/defs.h	/^	WPA_GROUP_HANDSHAKE,$/;"	e	enum:wpa_states
WPA_GROUP_SETKEYS	src/ap/wpa_auth_i.h	/^		WPA_GROUP_SETKEYS, WPA_GROUP_SETKEYSDONE$/;"	e	enum:wpa_group::__anon17
WPA_GROUP_SETKEYSDONE	src/ap/wpa_auth_i.h	/^		WPA_GROUP_SETKEYS, WPA_GROUP_SETKEYSDONE$/;"	e	enum:wpa_group::__anon17
WPA_GTK_MAX_LEN	src/common/wpa_common.h	27;"	d
WPA_H	src/rsn_supp/wpa.h	16;"	d
WPA_IE_H	src/rsn_supp/wpa_ie.h	16;"	d
WPA_IE_OK	src/ap/wpa_auth.h	/^	WPA_IE_OK, WPA_INVALID_IE, WPA_INVALID_GROUP, WPA_INVALID_PAIRWISE,$/;"	e	enum:__anon7
WPA_IE_VENDOR_TYPE	src/common/ieee802_11_defs.h	638;"	d
WPA_IF_AP_BSS	src/drivers/driver.h	/^	WPA_IF_AP_BSS,$/;"	e	enum:wpa_driver_if_type
WPA_IF_AP_VLAN	src/drivers/driver.h	/^	WPA_IF_AP_VLAN,$/;"	e	enum:wpa_driver_if_type
WPA_IF_P2P_CLIENT	src/drivers/driver.h	/^	WPA_IF_P2P_CLIENT,$/;"	e	enum:wpa_driver_if_type
WPA_IF_P2P_GO	src/drivers/driver.h	/^	WPA_IF_P2P_GO,$/;"	e	enum:wpa_driver_if_type
WPA_IF_P2P_GROUP	src/drivers/driver.h	/^	WPA_IF_P2P_GROUP$/;"	e	enum:wpa_driver_if_type
WPA_IF_STATION	src/drivers/driver.h	/^	WPA_IF_STATION,$/;"	e	enum:wpa_driver_if_type
WPA_IGTK_LEN	src/common/wpa_common.h	109;"	d
WPA_INACTIVE	src/common/defs.h	/^	WPA_INACTIVE,$/;"	e	enum:wpa_states
WPA_INTERFACE_DISABLED	src/common/defs.h	/^	WPA_INTERFACE_DISABLED,$/;"	e	enum:wpa_states
WPA_INVALID_AKMP	src/ap/wpa_auth.h	/^	WPA_INVALID_AKMP, WPA_NOT_ENABLED, WPA_ALLOC_FAIL,$/;"	e	enum:__anon7
WPA_INVALID_GROUP	src/ap/wpa_auth.h	/^	WPA_IE_OK, WPA_INVALID_IE, WPA_INVALID_GROUP, WPA_INVALID_PAIRWISE,$/;"	e	enum:__anon7
WPA_INVALID_IE	src/ap/wpa_auth.h	/^	WPA_IE_OK, WPA_INVALID_IE, WPA_INVALID_GROUP, WPA_INVALID_PAIRWISE,$/;"	e	enum:__anon7
WPA_INVALID_MDIE	src/ap/wpa_auth.h	/^	WPA_INVALID_MDIE, WPA_INVALID_PROTO$/;"	e	enum:__anon7
WPA_INVALID_MGMT_GROUP_CIPHER	src/ap/wpa_auth.h	/^	WPA_MGMT_FRAME_PROTECTION_VIOLATION, WPA_INVALID_MGMT_GROUP_CIPHER,$/;"	e	enum:__anon7
WPA_INVALID_PAIRWISE	src/ap/wpa_auth.h	/^	WPA_IE_OK, WPA_INVALID_IE, WPA_INVALID_GROUP, WPA_INVALID_PAIRWISE,$/;"	e	enum:__anon7
WPA_INVALID_PROTO	src/ap/wpa_auth.h	/^	WPA_INVALID_MDIE, WPA_INVALID_PROTO$/;"	e	enum:__anon7
WPA_I_H	src/rsn_supp/wpa_i.h	16;"	d
WPA_KEY_INFO_ACK	src/common/wpa_common.h	147;"	d
WPA_KEY_INFO_ENCR_KEY_DATA	src/common/wpa_common.h	152;"	d
WPA_KEY_INFO_ERROR	src/common/wpa_common.h	150;"	d
WPA_KEY_INFO_INSTALL	src/common/wpa_common.h	145;"	d
WPA_KEY_INFO_KEY_INDEX_MASK	src/common/wpa_common.h	143;"	d
WPA_KEY_INFO_KEY_INDEX_SHIFT	src/common/wpa_common.h	144;"	d
WPA_KEY_INFO_KEY_TYPE	src/common/wpa_common.h	141;"	d
WPA_KEY_INFO_MIC	src/common/wpa_common.h	148;"	d
WPA_KEY_INFO_REQUEST	src/common/wpa_common.h	151;"	d
WPA_KEY_INFO_SECURE	src/common/wpa_common.h	149;"	d
WPA_KEY_INFO_SMK_MESSAGE	src/common/wpa_common.h	153;"	d
WPA_KEY_INFO_TXRX	src/common/wpa_common.h	146;"	d
WPA_KEY_INFO_TYPE_AES_128_CMAC	src/common/wpa_common.h	140;"	d
WPA_KEY_INFO_TYPE_HMAC_MD5_RC4	src/common/wpa_common.h	138;"	d
WPA_KEY_INFO_TYPE_HMAC_SHA1_AES	src/common/wpa_common.h	139;"	d
WPA_KEY_INFO_TYPE_MASK	src/common/wpa_common.h	137;"	d
WPA_KEY_MGMT_FT_IEEE8021X	src/common/defs.h	41;"	d
WPA_KEY_MGMT_FT_PSK	src/common/defs.h	42;"	d
WPA_KEY_MGMT_IEEE8021X	src/common/defs.h	36;"	d
WPA_KEY_MGMT_IEEE8021X_NO_WPA	src/common/defs.h	39;"	d
WPA_KEY_MGMT_IEEE8021X_SHA256	src/common/defs.h	43;"	d
WPA_KEY_MGMT_NONE	src/common/defs.h	38;"	d
WPA_KEY_MGMT_PSK	src/common/defs.h	37;"	d
WPA_KEY_MGMT_PSK_SHA256	src/common/defs.h	44;"	d
WPA_KEY_MGMT_WPA_NONE	src/common/defs.h	40;"	d
WPA_KEY_MGMT_WPS	src/common/defs.h	45;"	d
WPA_KEY_RSC_LEN	src/common/wpa_common.h	25;"	d
WPA_KEY_RSC_LEN	src/drivers/driver_atheros.c	553;"	d	file:
WPA_KEY_RSC_LEN	src/drivers/driver_madwifi.c	72;"	d	file:
WPA_MAX_SSID_LEN	src/common/wpa_common.h	18;"	d
WPA_MEM_DEFINED	src/utils/common.h	510;"	d
WPA_MEM_DEFINED	src/utils/common.h	512;"	d
WPA_MGMT_FRAME_PROTECTION_VIOLATION	src/ap/wpa_auth.h	/^	WPA_MGMT_FRAME_PROTECTION_VIOLATION, WPA_INVALID_MGMT_GROUP_CIPHER,$/;"	e	enum:__anon7
WPA_NONCE_LEN	src/common/wpa_common.h	24;"	d
WPA_NOT_ENABLED	src/ap/wpa_auth.h	/^	WPA_INVALID_AKMP, WPA_NOT_ENABLED, WPA_ALLOC_FAIL,$/;"	e	enum:__anon7
WPA_OUI_TYPE	src/common/wpa_common.h	93;"	d
WPA_OUI_TYPE	src/drivers/driver_bsd.c	618;"	d	file:
WPA_OUI_TYPE	src/drivers/driver_madwifi.c	63;"	d	file:
WPA_PARAM_GROUP	src/rsn_supp/wpa.h	/^	WPA_PARAM_GROUP,$/;"	e	enum:wpa_sm_conf_params
WPA_PARAM_KEY_MGMT	src/rsn_supp/wpa.h	/^	WPA_PARAM_KEY_MGMT,$/;"	e	enum:wpa_sm_conf_params
WPA_PARAM_MFP	src/rsn_supp/wpa.h	/^	WPA_PARAM_MFP$/;"	e	enum:wpa_sm_conf_params
WPA_PARAM_MGMT_GROUP	src/rsn_supp/wpa.h	/^	WPA_PARAM_MGMT_GROUP,$/;"	e	enum:wpa_sm_conf_params
WPA_PARAM_PAIRWISE	src/rsn_supp/wpa.h	/^	WPA_PARAM_PAIRWISE,$/;"	e	enum:wpa_sm_conf_params
WPA_PARAM_PROTO	src/rsn_supp/wpa.h	/^	WPA_PARAM_PROTO,$/;"	e	enum:wpa_sm_conf_params
WPA_PARAM_RSN_ENABLED	src/rsn_supp/wpa.h	/^	WPA_PARAM_RSN_ENABLED,$/;"	e	enum:wpa_sm_conf_params
WPA_PMK_NAME_LEN	src/common/wpa_common.h	133;"	d
WPA_PROTO_RSN	src/common/defs.h	81;"	d
WPA_PROTO_WPA	src/common/defs.h	80;"	d
WPA_PTK_AUTHENTICATION	src/ap/wpa_auth_i.h	/^		WPA_PTK_AUTHENTICATION, WPA_PTK_AUTHENTICATION2,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_AUTHENTICATION2	src/ap/wpa_auth_i.h	/^		WPA_PTK_AUTHENTICATION, WPA_PTK_AUTHENTICATION2,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_DISCONNECT	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITIALIZE, WPA_PTK_DISCONNECT, WPA_PTK_DISCONNECTED,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_DISCONNECTED	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITIALIZE, WPA_PTK_DISCONNECT, WPA_PTK_DISCONNECTED,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_GROUP_IDLE	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_IDLE = 0,$/;"	e	enum:wpa_state_machine::__anon14
WPA_PTK_GROUP_KEYERROR	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_KEYERROR$/;"	e	enum:wpa_state_machine::__anon14
WPA_PTK_GROUP_REKEYESTABLISHED	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_REKEYESTABLISHED,$/;"	e	enum:wpa_state_machine::__anon14
WPA_PTK_GROUP_REKEYNEGOTIATING	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_REKEYNEGOTIATING,$/;"	e	enum:wpa_state_machine::__anon14
WPA_PTK_INITIALIZE	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITIALIZE, WPA_PTK_DISCONNECT, WPA_PTK_DISCONNECTED,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_INITPMK	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITPMK, WPA_PTK_INITPSK, WPA_PTK_PTKSTART,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_INITPSK	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITPMK, WPA_PTK_INITPSK, WPA_PTK_PTKSTART,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_PTKCALCNEGOTIATING	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKCALCNEGOTIATING, WPA_PTK_PTKCALCNEGOTIATING2,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_PTKCALCNEGOTIATING2	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKCALCNEGOTIATING, WPA_PTK_PTKCALCNEGOTIATING2,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_PTKINITDONE	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKINITNEGOTIATING, WPA_PTK_PTKINITDONE$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_PTKINITNEGOTIATING	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKINITNEGOTIATING, WPA_PTK_PTKINITDONE$/;"	e	enum:wpa_state_machine::__anon13
WPA_PTK_PTKSTART	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITPMK, WPA_PTK_INITPSK, WPA_PTK_PTKSTART,$/;"	e	enum:wpa_state_machine::__anon13
WPA_PUT_BE16	src/utils/common.h	255;"	d
WPA_PUT_BE24	src/utils/common.h	274;"	d
WPA_PUT_BE32	src/utils/common.h	285;"	d
WPA_PUT_BE64	src/utils/common.h	309;"	d
WPA_PUT_LE16	src/utils/common.h	264;"	d
WPA_PUT_LE32	src/utils/common.h	297;"	d
WPA_REAUTH	src/ap/wpa_auth.h	/^	WPA_AUTH, WPA_ASSOC, WPA_DISASSOC, WPA_DEAUTH, WPA_REAUTH,$/;"	e	enum:__anon8
WPA_REAUTH_EAPOL	src/ap/wpa_auth.h	/^	WPA_REAUTH_EAPOL, WPA_ASSOC_FT$/;"	e	enum:__anon8
WPA_REPLAY_COUNTER_LEN	src/common/wpa_common.h	23;"	d
WPA_SCANNING	src/common/defs.h	/^	WPA_SCANNING,$/;"	e	enum:wpa_states
WPA_SCAN_ASSOCIATED	src/drivers/driver.h	126;"	d
WPA_SCAN_AUTHENTICATED	src/drivers/driver.h	125;"	d
WPA_SCAN_LEVEL_DBM	src/drivers/driver.h	124;"	d
WPA_SCAN_LEVEL_INVALID	src/drivers/driver.h	123;"	d
WPA_SCAN_NOISE_INVALID	src/drivers/driver.h	122;"	d
WPA_SCAN_QUAL_INVALID	src/drivers/driver.h	121;"	d
WPA_SELECTOR_LEN	src/common/wpa_common.h	29;"	d
WPA_STA_AUTHORIZED	src/drivers/driver.h	878;"	d
WPA_STA_MFP	src/drivers/driver.h	881;"	d
WPA_STA_SHORT_PREAMBLE	src/drivers/driver.h	880;"	d
WPA_STA_TDLS_PEER	src/drivers/driver.h	882;"	d
WPA_STA_WMM	src/drivers/driver.h	879;"	d
WPA_SUPPLICANT_DRIVER_VERSION	src/drivers/driver.h	26;"	d
WPA_SUPPLICANT_NAMED_PIPE	src/common/wpa_ctrl.c	434;"	d	file:
WPA_TLS_MASTER_SIZE	src/crypto/tls_gnutls.c	27;"	d	file:
WPA_TLS_RANDOM_SIZE	src/crypto/tls_gnutls.c	26;"	d	file:
WPA_TRACE_INFO	src/utils/trace.h	25;"	d
WPA_TRACE_INFO	src/utils/trace.h	52;"	d
WPA_TRACE_LEN	src/utils/trace.h	18;"	d
WPA_TRACE_REF	src/drivers/driver_test.c	/^	WPA_TRACE_REF(ctx);$/;"	p	struct:wpa_driver_test_data	file:	access:public
WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(eloop);$/;"	p	struct:eloop_sock	file:	access:public
WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(eloop);$/;"	p	struct:eloop_timeout	file:	access:public
WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(user);$/;"	p	struct:eloop_sock	file:	access:public
WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(user);$/;"	p	struct:eloop_timeout	file:	access:public
WPA_TRACE_REF	src/utils/trace.h	32;"	d
WPA_TRACE_REF	src/utils/trace.h	53;"	d
WPA_TYPES_DEFINED	src/utils/common.h	110;"	d
WPA_TYPES_DEFINED	src/utils/common.h	122;"	d
WPA_TYPES_DEFINED	src/utils/common.h	138;"	d
WPA_TYPES_DEFINED	src/utils/common.h	148;"	d
WPA_TYPES_DEFINED	src/utils/common.h	165;"	d
WPA_VERSION	src/common/wpa_common.h	30;"	d
WPA_VERSION	src/drivers/driver_bsd.c	617;"	d	file:
WPA_VERSION	src/drivers/driver_madwifi.c	62;"	d	file:
WPA_VERSION_NO_WPA	src/ap/wpa_auth_i.h	/^		WPA_VERSION_NO_WPA = 0 \/* WPA not used *\/,$/;"	e	enum:wpa_state_machine::__anon16
WPA_VERSION_WPA	src/ap/wpa_auth_i.h	/^		WPA_VERSION_WPA = 1 \/* WPA \/ IEEE 802.11i\/D3.0 *\/,$/;"	e	enum:wpa_state_machine::__anon16
WPA_VERSION_WPA2	src/ap/wpa_auth_i.h	/^		WPA_VERSION_WPA2 = 2 \/* WPA2 \/ IEEE 802.11i *\/$/;"	e	enum:wpa_state_machine::__anon16
WPS_ASSOC_CFG_FAILURE	src/wps/wps_defs.h	/^	WPS_ASSOC_CFG_FAILURE = 2,$/;"	e	enum:wps_assoc_state
WPS_ASSOC_CONN_SUCCESS	src/wps/wps_defs.h	/^	WPS_ASSOC_CONN_SUCCESS = 1,$/;"	e	enum:wps_assoc_state
WPS_ASSOC_FAILURE	src/wps/wps_defs.h	/^	WPS_ASSOC_FAILURE = 3,$/;"	e	enum:wps_assoc_state
WPS_ASSOC_IP_FAILURE	src/wps/wps_defs.h	/^	WPS_ASSOC_IP_FAILURE = 4$/;"	e	enum:wps_assoc_state
WPS_ASSOC_NOT_ASSOC	src/wps/wps_defs.h	/^	WPS_ASSOC_NOT_ASSOC = 0,$/;"	e	enum:wps_assoc_state
WPS_AUTHENTICATOR_LEN	src/wps/wps_defs.h	39;"	d
WPS_AUTHKEY_LEN	src/wps/wps_defs.h	40;"	d
WPS_AUTH_OPEN	src/wps/wps_defs.h	187;"	d
WPS_AUTH_SHARED	src/wps/wps_defs.h	189;"	d
WPS_AUTH_TYPES	src/wps/wps_defs.h	193;"	d
WPS_AUTH_WPA	src/wps/wps_defs.h	190;"	d
WPS_AUTH_WPA2	src/wps/wps_defs.h	191;"	d
WPS_AUTH_WPA2PSK	src/wps/wps_defs.h	192;"	d
WPS_AUTH_WPAPSK	src/wps/wps_defs.h	188;"	d
WPS_Beacon	src/wps/wps_defs.h	/^	WPS_Beacon = 0x01,$/;"	e	enum:wps_msg_type
WPS_CFG_24_CHAN_NOT_SUPPORTED	src/wps/wps_defs.h	/^	WPS_CFG_24_CHAN_NOT_SUPPORTED = 3,$/;"	e	enum:wps_config_error
WPS_CFG_50_CHAN_NOT_SUPPORTED	src/wps/wps_defs.h	/^	WPS_CFG_50_CHAN_NOT_SUPPORTED = 4,$/;"	e	enum:wps_config_error
WPS_CFG_DECRYPTION_CRC_FAILURE	src/wps/wps_defs.h	/^	WPS_CFG_DECRYPTION_CRC_FAILURE = 2,$/;"	e	enum:wps_config_error
WPS_CFG_DEVICE_BUSY	src/wps/wps_defs.h	/^	WPS_CFG_DEVICE_BUSY = 14,$/;"	e	enum:wps_config_error
WPS_CFG_DEV_PASSWORD_AUTH_FAILURE	src/wps/wps_defs.h	/^	WPS_CFG_DEV_PASSWORD_AUTH_FAILURE = 18$/;"	e	enum:wps_config_error
WPS_CFG_FAILED_DHCP_CONFIG	src/wps/wps_defs.h	/^	WPS_CFG_FAILED_DHCP_CONFIG = 9,$/;"	e	enum:wps_config_error
WPS_CFG_IP_ADDR_CONFLICT	src/wps/wps_defs.h	/^	WPS_CFG_IP_ADDR_CONFLICT = 10,$/;"	e	enum:wps_config_error
WPS_CFG_MSG_TIMEOUT	src/wps/wps_defs.h	/^	WPS_CFG_MSG_TIMEOUT = 16,$/;"	e	enum:wps_config_error
WPS_CFG_MULTIPLE_PBC_DETECTED	src/wps/wps_defs.h	/^	WPS_CFG_MULTIPLE_PBC_DETECTED = 12,$/;"	e	enum:wps_config_error
WPS_CFG_NETWORK_ASSOC_FAILURE	src/wps/wps_defs.h	/^	WPS_CFG_NETWORK_ASSOC_FAILURE = 7,$/;"	e	enum:wps_config_error
WPS_CFG_NETWORK_AUTH_FAILURE	src/wps/wps_defs.h	/^	WPS_CFG_NETWORK_AUTH_FAILURE = 6,$/;"	e	enum:wps_config_error
WPS_CFG_NO_CONN_TO_REGISTRAR	src/wps/wps_defs.h	/^	WPS_CFG_NO_CONN_TO_REGISTRAR = 11,$/;"	e	enum:wps_config_error
WPS_CFG_NO_DHCP_RESPONSE	src/wps/wps_defs.h	/^	WPS_CFG_NO_DHCP_RESPONSE = 8,$/;"	e	enum:wps_config_error
WPS_CFG_NO_ERROR	src/wps/wps_defs.h	/^	WPS_CFG_NO_ERROR = 0,$/;"	e	enum:wps_config_error
WPS_CFG_OOB_IFACE_READ_ERROR	src/wps/wps_defs.h	/^	WPS_CFG_OOB_IFACE_READ_ERROR = 1,$/;"	e	enum:wps_config_error
WPS_CFG_REG_SESS_TIMEOUT	src/wps/wps_defs.h	/^	WPS_CFG_REG_SESS_TIMEOUT = 17,$/;"	e	enum:wps_config_error
WPS_CFG_ROGUE_SUSPECTED	src/wps/wps_defs.h	/^	WPS_CFG_ROGUE_SUSPECTED = 13,$/;"	e	enum:wps_config_error
WPS_CFG_SETUP_LOCKED	src/wps/wps_defs.h	/^	WPS_CFG_SETUP_LOCKED = 15,$/;"	e	enum:wps_config_error
WPS_CFG_SIGNAL_TOO_WEAK	src/wps/wps_defs.h	/^	WPS_CFG_SIGNAL_TOO_WEAK = 5,$/;"	e	enum:wps_config_error
WPS_CONFIG_DISPLAY	src/wps/wps_defs.h	243;"	d
WPS_CONFIG_ETHERNET	src/wps/wps_defs.h	241;"	d
WPS_CONFIG_EXT_NFC_TOKEN	src/wps/wps_defs.h	244;"	d
WPS_CONFIG_INT_NFC_TOKEN	src/wps/wps_defs.h	245;"	d
WPS_CONFIG_KEYPAD	src/wps/wps_defs.h	248;"	d
WPS_CONFIG_LABEL	src/wps/wps_defs.h	242;"	d
WPS_CONFIG_NFC_INTERFACE	src/wps/wps_defs.h	246;"	d
WPS_CONFIG_PHY_DISPLAY	src/wps/wps_defs.h	253;"	d
WPS_CONFIG_PHY_PUSHBUTTON	src/wps/wps_defs.h	251;"	d
WPS_CONFIG_PUSHBUTTON	src/wps/wps_defs.h	247;"	d
WPS_CONFIG_USBA	src/wps/wps_defs.h	240;"	d
WPS_CONFIG_VIRT_DISPLAY	src/wps/wps_defs.h	252;"	d
WPS_CONFIG_VIRT_PUSHBUTTON	src/wps/wps_defs.h	250;"	d
WPS_CONN_ESS	src/wps/wps_defs.h	257;"	d
WPS_CONN_IBSS	src/wps/wps_defs.h	258;"	d
WPS_CONTINUE	src/wps/wps.h	/^	WPS_CONTINUE,$/;"	e	enum:wps_process_res
WPS_DEFS_H	src/wps/wps_defs.h	16;"	d
WPS_DEV_ATTR_H	src/wps/wps_dev_attr.h	16;"	d
WPS_DEV_CAMERA	src/wps/wps_defs.h	/^	WPS_DEV_CAMERA = 4,$/;"	e	enum:wps_dev_categ
WPS_DEV_CAMERA_DIGITAL_STILL_CAMERA	src/wps/wps_defs.h	/^	WPS_DEV_CAMERA_DIGITAL_STILL_CAMERA = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_COMPUTER	src/wps/wps_defs.h	/^	WPS_DEV_COMPUTER = 1,$/;"	e	enum:wps_dev_categ
WPS_DEV_COMPUTER_MEDIA_CENTER	src/wps/wps_defs.h	/^	WPS_DEV_COMPUTER_MEDIA_CENTER = 3,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_COMPUTER_PC	src/wps/wps_defs.h	/^	WPS_DEV_COMPUTER_PC = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_COMPUTER_SERVER	src/wps/wps_defs.h	/^	WPS_DEV_COMPUTER_SERVER = 2,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_DISPLAY	src/wps/wps_defs.h	/^	WPS_DEV_DISPLAY = 7,$/;"	e	enum:wps_dev_categ
WPS_DEV_DISPLAY_PICTURE_FRAME	src/wps/wps_defs.h	/^	WPS_DEV_DISPLAY_PICTURE_FRAME = 2,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_DISPLAY_PROJECTOR	src/wps/wps_defs.h	/^	WPS_DEV_DISPLAY_PROJECTOR = 3,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_DISPLAY_TV	src/wps/wps_defs.h	/^	WPS_DEV_DISPLAY_TV = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_GAMING	src/wps/wps_defs.h	/^	WPS_DEV_GAMING = 9,$/;"	e	enum:wps_dev_categ
WPS_DEV_GAMING_PLAYSTATION	src/wps/wps_defs.h	/^	WPS_DEV_GAMING_PLAYSTATION = 3,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_GAMING_XBOX	src/wps/wps_defs.h	/^	WPS_DEV_GAMING_XBOX = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_GAMING_XBOX360	src/wps/wps_defs.h	/^	WPS_DEV_GAMING_XBOX360 = 2,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_INPUT	src/wps/wps_defs.h	/^	WPS_DEV_INPUT = 2,$/;"	e	enum:wps_dev_categ
WPS_DEV_MULTIMEDIA	src/wps/wps_defs.h	/^	WPS_DEV_MULTIMEDIA = 8,$/;"	e	enum:wps_dev_categ
WPS_DEV_MULTIMEDIA_DAR	src/wps/wps_defs.h	/^	WPS_DEV_MULTIMEDIA_DAR = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_MULTIMEDIA_MCX	src/wps/wps_defs.h	/^	WPS_DEV_MULTIMEDIA_MCX = 3,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_MULTIMEDIA_PVR	src/wps/wps_defs.h	/^	WPS_DEV_MULTIMEDIA_PVR = 2,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_NETWORK_INFRA	src/wps/wps_defs.h	/^	WPS_DEV_NETWORK_INFRA = 6,$/;"	e	enum:wps_dev_categ
WPS_DEV_NETWORK_INFRA_AP	src/wps/wps_defs.h	/^	WPS_DEV_NETWORK_INFRA_AP = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_NETWORK_INFRA_ROUTER	src/wps/wps_defs.h	/^	WPS_DEV_NETWORK_INFRA_ROUTER = 2,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_NETWORK_INFRA_SWITCH	src/wps/wps_defs.h	/^	WPS_DEV_NETWORK_INFRA_SWITCH = 3,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_OUI_WFA	src/wps/wps_defs.h	276;"	d
WPS_DEV_PHONE	src/wps/wps_defs.h	/^	WPS_DEV_PHONE = 10$/;"	e	enum:wps_dev_categ
WPS_DEV_PHONE_WINDOWS_MOBILE	src/wps/wps_defs.h	/^	WPS_DEV_PHONE_WINDOWS_MOBILE = 1$/;"	e	enum:wps_dev_subcateg
WPS_DEV_PRINTER	src/wps/wps_defs.h	/^	WPS_DEV_PRINTER = 3,$/;"	e	enum:wps_dev_categ
WPS_DEV_PRINTER_PRINTER	src/wps/wps_defs.h	/^	WPS_DEV_PRINTER_PRINTER = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_PRINTER_SCANNER	src/wps/wps_defs.h	/^	WPS_DEV_PRINTER_SCANNER = 2,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_STORAGE	src/wps/wps_defs.h	/^	WPS_DEV_STORAGE = 5,$/;"	e	enum:wps_dev_categ
WPS_DEV_STORAGE_NAS	src/wps/wps_defs.h	/^	WPS_DEV_STORAGE_NAS = 1,$/;"	e	enum:wps_dev_subcateg
WPS_DEV_TYPE_BUFSIZE	src/wps/wps.h	65;"	d
WPS_DEV_TYPE_LEN	src/wps/wps.h	64;"	d
WPS_DH_GROUP	src/wps/wps_defs.h	35;"	d
WPS_DONE	src/wps/wps.h	/^	WPS_DONE,$/;"	e	enum:wps_process_res
WPS_EI_NO_ERROR	src/wps/wps_defs.h	/^	WPS_EI_NO_ERROR,$/;"	e	enum:wps_error_indication
WPS_EI_SECURITY_TKIP_ONLY_PROHIBITED	src/wps/wps_defs.h	/^	WPS_EI_SECURITY_TKIP_ONLY_PROHIBITED,$/;"	e	enum:wps_error_indication
WPS_EI_SECURITY_WEP_PROHIBITED	src/wps/wps_defs.h	/^	WPS_EI_SECURITY_WEP_PROHIBITED,$/;"	e	enum:wps_error_indication
WPS_EMSK_LEN	src/wps/wps_defs.h	42;"	d
WPS_ENCR_AES	src/wps/wps_defs.h	200;"	d
WPS_ENCR_NONE	src/wps/wps_defs.h	197;"	d
WPS_ENCR_TKIP	src/wps/wps_defs.h	199;"	d
WPS_ENCR_TYPES	src/wps/wps_defs.h	201;"	d
WPS_ENCR_WEP	src/wps/wps_defs.h	198;"	d
WPS_ER_H	src/wps/wps_er.h	16;"	d
WPS_ER_SET_SEL_REG_DONE	src/wps/wps.h	/^			WPS_ER_SET_SEL_REG_DONE,$/;"	e	enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31
WPS_ER_SET_SEL_REG_FAILED	src/wps/wps.h	/^			WPS_ER_SET_SEL_REG_FAILED$/;"	e	enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31
WPS_ER_SET_SEL_REG_START	src/wps/wps.h	/^			WPS_ER_SET_SEL_REG_START,$/;"	e	enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31
WPS_EVENT_AP_AVAILABLE	src/common/wpa_ctrl.h	76;"	d
WPS_EVENT_AP_AVAILABLE_AUTH	src/common/wpa_ctrl.h	71;"	d
WPS_EVENT_AP_AVAILABLE_PBC	src/common/wpa_ctrl.h	69;"	d
WPS_EVENT_AP_AVAILABLE_PIN	src/common/wpa_ctrl.h	74;"	d
WPS_EVENT_AP_PIN_DISABLED	src/common/wpa_ctrl.h	143;"	d
WPS_EVENT_AP_PIN_ENABLED	src/common/wpa_ctrl.h	142;"	d
WPS_EVENT_AP_SETUP_LOCKED	src/common/wpa_ctrl.h	140;"	d
WPS_EVENT_AP_SETUP_UNLOCKED	src/common/wpa_ctrl.h	141;"	d
WPS_EVENT_CRED_RECEIVED	src/common/wpa_ctrl.h	78;"	d
WPS_EVENT_ENROLLEE_SEEN	src/common/wpa_ctrl.h	88;"	d
WPS_EVENT_ER_AP_ADD	src/common/wpa_ctrl.h	93;"	d
WPS_EVENT_ER_AP_REMOVE	src/common/wpa_ctrl.h	94;"	d
WPS_EVENT_ER_AP_SETTINGS	src/common/wpa_ctrl.h	97;"	d
WPS_EVENT_ER_ENROLLEE_ADD	src/common/wpa_ctrl.h	95;"	d
WPS_EVENT_ER_ENROLLEE_REMOVE	src/common/wpa_ctrl.h	96;"	d
WPS_EVENT_ER_SET_SEL_REG	src/common/wpa_ctrl.h	98;"	d
WPS_EVENT_FAIL	src/common/wpa_ctrl.h	82;"	d
WPS_EVENT_M2D	src/common/wpa_ctrl.h	80;"	d
WPS_EVENT_NEW_AP_SETTINGS	src/common/wpa_ctrl.h	138;"	d
WPS_EVENT_OPEN_NETWORK	src/common/wpa_ctrl.h	90;"	d
WPS_EVENT_OVERLAP	src/common/wpa_ctrl.h	67;"	d
WPS_EVENT_PIN_NEEDED	src/common/wpa_ctrl.h	137;"	d
WPS_EVENT_REG_SUCCESS	src/common/wpa_ctrl.h	139;"	d
WPS_EVENT_SUCCESS	src/common/wpa_ctrl.h	84;"	d
WPS_EVENT_TIMEOUT	src/common/wpa_ctrl.h	86;"	d
WPS_EV_AP_PIN_SUCCESS	src/wps/wps.h	/^	WPS_EV_AP_PIN_SUCCESS$/;"	e	enum:wps_event
WPS_EV_ER_AP_ADD	src/wps/wps.h	/^	WPS_EV_ER_AP_ADD,$/;"	e	enum:wps_event
WPS_EV_ER_AP_REMOVE	src/wps/wps.h	/^	WPS_EV_ER_AP_REMOVE,$/;"	e	enum:wps_event
WPS_EV_ER_AP_SETTINGS	src/wps/wps.h	/^	WPS_EV_ER_AP_SETTINGS,$/;"	e	enum:wps_event
WPS_EV_ER_ENROLLEE_ADD	src/wps/wps.h	/^	WPS_EV_ER_ENROLLEE_ADD,$/;"	e	enum:wps_event
WPS_EV_ER_ENROLLEE_REMOVE	src/wps/wps.h	/^	WPS_EV_ER_ENROLLEE_REMOVE,$/;"	e	enum:wps_event
WPS_EV_ER_SET_SELECTED_REGISTRAR	src/wps/wps.h	/^	WPS_EV_ER_SET_SELECTED_REGISTRAR,$/;"	e	enum:wps_event
WPS_EV_FAIL	src/wps/wps.h	/^	WPS_EV_FAIL,$/;"	e	enum:wps_event
WPS_EV_M2D	src/wps/wps.h	/^	WPS_EV_M2D,$/;"	e	enum:wps_event
WPS_EV_PBC_OVERLAP	src/wps/wps.h	/^	WPS_EV_PBC_OVERLAP,$/;"	e	enum:wps_event
WPS_EV_PBC_TIMEOUT	src/wps/wps.h	/^	WPS_EV_PBC_TIMEOUT,$/;"	e	enum:wps_event
WPS_EV_PWD_AUTH_FAIL	src/wps/wps.h	/^	WPS_EV_PWD_AUTH_FAIL,$/;"	e	enum:wps_event
WPS_EV_SUCCESS	src/wps/wps.h	/^	WPS_EV_SUCCESS,$/;"	e	enum:wps_event
WPS_FAILURE	src/wps/wps.h	/^	WPS_FAILURE,$/;"	e	enum:wps_process_res
WPS_FINISHED	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
WPS_FRAM_TAG_SIZE	src/drivers/driver_atheros.c	990;"	d	file:
WPS_H	src/wps/wps.h	16;"	d
WPS_HASH_LEN	src/wps/wps_defs.h	45;"	d
WPS_HOSTAPD_H	src/ap/wps_hostapd.h	16;"	d
WPS_IE_VENDOR_TYPE	src/common/ieee802_11_defs.h	639;"	d
WPS_I_H	src/wps/wps_i.h	16;"	d
WPS_KEYWRAPKEY_LEN	src/wps/wps_defs.h	41;"	d
WPS_KWA_LEN	src/wps/wps_defs.h	46;"	d
WPS_M1	src/wps/wps_defs.h	/^	WPS_M1 = 0x04,$/;"	e	enum:wps_msg_type
WPS_M2	src/wps/wps_defs.h	/^	WPS_M2 = 0x05,$/;"	e	enum:wps_msg_type
WPS_M2D	src/wps/wps_defs.h	/^	WPS_M2D = 0x06,$/;"	e	enum:wps_msg_type
WPS_M3	src/wps/wps_defs.h	/^	WPS_M3 = 0x07,$/;"	e	enum:wps_msg_type
WPS_M4	src/wps/wps_defs.h	/^	WPS_M4 = 0x08,$/;"	e	enum:wps_msg_type
WPS_M5	src/wps/wps_defs.h	/^	WPS_M5 = 0x09,$/;"	e	enum:wps_msg_type
WPS_M6	src/wps/wps_defs.h	/^	WPS_M6 = 0x0a,$/;"	e	enum:wps_msg_type
WPS_M7	src/wps/wps_defs.h	/^	WPS_M7 = 0x0b,$/;"	e	enum:wps_msg_type
WPS_M8	src/wps/wps_defs.h	/^	WPS_M8 = 0x0c,$/;"	e	enum:wps_msg_type
WPS_MAX_AUTHORIZED_MACS	src/wps/wps_defs.h	334;"	d
WPS_MAX_VENDOR_EXT_LEN	src/wps/wps.h	70;"	d
WPS_MGMTAUTHKEY_LEN	src/wps/wps_defs.h	47;"	d
WPS_MGMTENCKEY_LEN	src/wps/wps_defs.h	48;"	d
WPS_MGMT_KEY_ID_LEN	src/wps/wps_defs.h	49;"	d
WPS_MODE_NONE	src/drivers/driver.h	/^	WPS_MODE_NONE \/* no WPS provisioning being used *\/,$/;"	e	enum:wps_mode
WPS_MODE_OPEN	src/drivers/driver.h	/^	WPS_MODE_OPEN \/* WPS provisioning with AP that is in open mode *\/,$/;"	e	enum:wps_mode
WPS_MODE_PRIVACY	src/drivers/driver.h	/^	WPS_MODE_PRIVACY \/* WPS provisioning with AP that is using protection$/;"	e	enum:wps_mode
WPS_MSG_DONE	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
WPS_NONCE_LEN	src/wps/wps_defs.h	38;"	d
WPS_NOT_READY	src/p2p/p2p.h	/^	WPS_NOT_READY, WPS_PIN_DISPLAY, WPS_PIN_KEYPAD, WPS_PBC$/;"	e	enum:p2p_wps_method
WPS_OOB_DEVICE_PASSWORD_ATTR_LEN	src/wps/wps_defs.h	50;"	d
WPS_OOB_DEVICE_PASSWORD_LEN	src/wps/wps_defs.h	51;"	d
WPS_OOB_PUBKEY_HASH_LEN	src/wps/wps_defs.h	52;"	d
WPS_PBC	src/p2p/p2p.h	/^	WPS_NOT_READY, WPS_PIN_DISPLAY, WPS_PIN_KEYPAD, WPS_PBC$/;"	e	enum:p2p_wps_method
WPS_PBC_WALK_TIME	src/wps/wps_defs.h	332;"	d
WPS_PENDING	src/wps/wps.h	/^	WPS_PENDING$/;"	e	enum:wps_process_res
WPS_PIN_DISPLAY	src/p2p/p2p.h	/^	WPS_NOT_READY, WPS_PIN_DISPLAY, WPS_PIN_KEYPAD, WPS_PBC$/;"	e	enum:p2p_wps_method
WPS_PIN_KEYPAD	src/p2p/p2p.h	/^	WPS_NOT_READY, WPS_PIN_DISPLAY, WPS_PIN_KEYPAD, WPS_PBC$/;"	e	enum:p2p_wps_method
WPS_PSK_LEN	src/wps/wps_defs.h	43;"	d
WPS_ProbeRequest	src/wps/wps_defs.h	/^	WPS_ProbeRequest = 0x02,$/;"	e	enum:wps_msg_type
WPS_ProbeResponse	src/wps/wps_defs.h	/^	WPS_ProbeResponse = 0x03,$/;"	e	enum:wps_msg_type
WPS_REQ_ENROLLEE	src/wps/wps_defs.h	/^	WPS_REQ_ENROLLEE = 1,$/;"	e	enum:wps_request_type
WPS_REQ_ENROLLEE_INFO	src/wps/wps_defs.h	/^	WPS_REQ_ENROLLEE_INFO = 0,$/;"	e	enum:wps_request_type
WPS_REQ_REGISTRAR	src/wps/wps_defs.h	/^	WPS_REQ_REGISTRAR = 2,$/;"	e	enum:wps_request_type
WPS_REQ_WLAN_MANAGER_REGISTRAR	src/wps/wps_defs.h	/^	WPS_REQ_WLAN_MANAGER_REGISTRAR = 3$/;"	e	enum:wps_request_type
WPS_RESP_AP	src/wps/wps_defs.h	/^	WPS_RESP_AP = 3$/;"	e	enum:wps_response_type
WPS_RESP_ENROLLEE	src/wps/wps_defs.h	/^	WPS_RESP_ENROLLEE = 1,$/;"	e	enum:wps_response_type
WPS_RESP_ENROLLEE_INFO	src/wps/wps_defs.h	/^	WPS_RESP_ENROLLEE_INFO = 0,$/;"	e	enum:wps_response_type
WPS_RESP_REGISTRAR	src/wps/wps_defs.h	/^	WPS_RESP_REGISTRAR = 2,$/;"	e	enum:wps_response_type
WPS_RF_24GHZ	src/wps/wps_defs.h	236;"	d
WPS_RF_50GHZ	src/wps/wps_defs.h	237;"	d
WPS_SECRET_NONCE_LEN	src/wps/wps_defs.h	44;"	d
WPS_SEC_DEVICE_TYPES	src/wps/wps.h	97;"	d
WPS_SEC_DEV_TYPE_MAX_LEN	src/wps/wps.h	66;"	d
WPS_STATE_CONFIGURED	src/wps/wps_defs.h	/^	WPS_STATE_CONFIGURED = 2$/;"	e	enum:wps_state
WPS_STATE_NOT_CONFIGURED	src/wps/wps_defs.h	/^	WPS_STATE_NOT_CONFIGURED = 1,$/;"	e	enum:wps_state
WPS_STRDUP	src/wps/wps_registrar.c	227;"	d	file:
WPS_STRDUP	src/wps/wps_registrar.c	236;"	d	file:
WPS_STRICT_WPS2	src/wps/wps_validate.c	23;"	d	file:
WPS_UPNP_H	src/wps/wps_upnp.h	12;"	d
WPS_UPNP_I_H	src/wps/wps_upnp_i.h	12;"	d
WPS_UUID_LEN	src/wps/wps_defs.h	37;"	d
WPS_VENDOR_ID_WFA	src/wps/wps_defs.h	146;"	d
WPS_VERSION	src/wps/wps_defs.h	22;"	d
WPS_VERSION	src/wps/wps_defs.h	27;"	d
WPS_VERSION	src/wps/wps_defs.h	29;"	d
WPS_WORKAROUNDS	src/wps/wps_attr_parse.c	21;"	d	file:
WPS_WORKAROUNDS	src/wps/wps_registrar.c	32;"	d	file:
WPS_WSC_ACK	src/wps/wps_defs.h	/^	WPS_WSC_ACK = 0x0d,$/;"	e	enum:wps_msg_type
WPS_WSC_DONE	src/wps/wps_defs.h	/^	WPS_WSC_DONE = 0x0f$/;"	e	enum:wps_msg_type
WPS_WSC_NACK	src/wps/wps_defs.h	/^	WPS_WSC_NACK = 0x0e,$/;"	e	enum:wps_msg_type
WSC_ACK	src/wps/wps.h	/^	WSC_ACK = 0x02,$/;"	e	enum:wsc_op_code
WSC_Done	src/wps/wps.h	/^	WSC_Done = 0x05,$/;"	e	enum:wsc_op_code
WSC_FLAGS_LF	src/eap_common/eap_wsc_common.h	21;"	d
WSC_FLAGS_MF	src/eap_common/eap_wsc_common.h	20;"	d
WSC_FRAGMENT_SIZE	src/eap_common/eap_wsc_common.h	28;"	d
WSC_FRAG_ACK	src/wps/wps.h	/^	WSC_FRAG_ACK = 0x06$/;"	e	enum:wsc_op_code
WSC_ID_ENROLLEE	src/eap_common/eap_wsc_common.h	25;"	d
WSC_ID_ENROLLEE_LEN	src/eap_common/eap_wsc_common.h	26;"	d
WSC_ID_REGISTRAR	src/eap_common/eap_wsc_common.h	23;"	d
WSC_ID_REGISTRAR_LEN	src/eap_common/eap_wsc_common.h	24;"	d
WSC_MSG	src/wps/wps.h	/^	WSC_MSG = 0x04,$/;"	e	enum:wsc_op_code
WSC_NACK	src/wps/wps.h	/^	WSC_NACK = 0x03,$/;"	e	enum:wsc_op_code
WSC_Start	src/wps/wps.h	/^	WSC_Start = 0x01,$/;"	e	enum:wsc_op_code
WSC_UPnP	src/wps/wps.h	/^	WSC_UPnP = 0 \/* No OP Code in UPnP transport *\/,$/;"	e	enum:wsc_op_code
WSEC_PRIMARY_KEY	src/drivers/driver_broadcom.c	71;"	d	file:
WZC_DRIVER	src/drivers/driver_ndis.c	2432;"	d	file:
WirelessAssociate	src/drivers/Apple80211.h	/^WirelessError WirelessAssociate(WirelessRef ref, int type, CFDataRef ssid,$/;"	p	signature:(WirelessRef ref, int type, CFDataRef ssid, CFStringRef key)
WirelessAssociate2	src/drivers/Apple80211.h	/^WirelessError WirelessAssociate2(WirelessRef ref, CFDictionaryRef scan_res,$/;"	p	signature:(WirelessRef ref, CFDictionaryRef scan_res, CFStringRef key)
WirelessAttach	src/drivers/Apple80211.h	/^WirelessError WirelessAttach(WirelessRef *ref, UInt32 res);$/;"	p	signature:(WirelessRef *ref, UInt32 res)
WirelessConfigure	src/drivers/Apple80211.h	/^WirelessError WirelessConfigure(WirelessRef ref);$/;"	p	signature:(WirelessRef ref)
WirelessCopyInterfaceDict	src/drivers/Apple80211.h	/^CFDictionaryRef WirelessCopyInterfaceDict(void);$/;"	p	signature:(void)
WirelessDetach	src/drivers/Apple80211.h	/^WirelessError WirelessDetach(WirelessRef ref);$/;"	p	signature:(WirelessRef ref)
WirelessDirectedScan	src/drivers/Apple80211.h	/^WirelessError WirelessDirectedScan(WirelessRef ref, CFArrayRef *results,$/;"	p	signature:(WirelessRef ref, CFArrayRef *results, UInt32 strip_dups, CFStringRef ssid)
WirelessDirectedScan2	src/drivers/Apple80211.h	/^WirelessError WirelessDirectedScan2(WirelessRef ref, CFDataRef ssid,$/;"	p	signature:(WirelessRef ref, CFDataRef ssid, UInt32 strip_dups, CFArrayRef *results)
WirelessDisassociate	src/drivers/Apple80211.h	/^WirelessError WirelessDisassociate(WirelessRef ref);$/;"	p	signature:(WirelessRef ref)
WirelessError	src/drivers/Apple80211.h	/^typedef SInt32 WirelessError;$/;"	t
WirelessGetAssociationInfo	src/drivers/Apple80211.h	/^CFDictionaryRef WirelessGetAssociationInfo(WirelessRef ref);$/;"	p	signature:(WirelessRef ref)
WirelessGetEnabled	src/drivers/Apple80211.h	/^WirelessError WirelessGetEnabled(WirelessRef ref, UInt8 *enabled);$/;"	p	signature:(WirelessRef ref, UInt8 *enabled)
WirelessGetInfo	src/drivers/Apple80211.h	/^WirelessError WirelessGetInfo(WirelessRef ref, WirelessInfo *info);$/;"	p	signature:(WirelessRef ref, WirelessInfo *info)
WirelessGetInfo2	src/drivers/Apple80211.h	/^WirelessError WirelessGetInfo2(WirelessRef ref, WirelessInfo2 *info);$/;"	p	signature:(WirelessRef ref, WirelessInfo2 *info)
WirelessGetInfoASP	src/drivers/Apple80211.h	/^CFDictionaryRef WirelessGetInfoASP(void);$/;"	p	signature:(void)
WirelessGetPower	src/drivers/Apple80211.h	/^WirelessError WirelessGetPower(WirelessRef ref, UInt8 *power);$/;"	p	signature:(WirelessRef ref, UInt8 *power)
WirelessInfo	src/drivers/Apple80211.h	/^typedef struct WirelessInfo {$/;"	s
WirelessInfo	src/drivers/Apple80211.h	/^} WirelessInfo;$/;"	t	typeref:struct:WirelessInfo
WirelessInfo2	src/drivers/Apple80211.h	/^typedef struct WirelessInfo2 {$/;"	s
WirelessInfo2	src/drivers/Apple80211.h	/^} WirelessInfo2;$/;"	t	typeref:struct:WirelessInfo2
WirelessInfo2::info1	src/drivers/Apple80211.h	/^	WirelessInfo info1;$/;"	m	struct:WirelessInfo2	access:public
WirelessInfo2::macAddress	src/drivers/Apple80211.h	/^	UInt8 macAddress[6];$/;"	m	struct:WirelessInfo2	access:public
WirelessInfo::bssID	src/drivers/Apple80211.h	/^	UInt8 bssID[6];$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::client_mode	src/drivers/Apple80211.h	/^	UInt16 client_mode;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::comms_qual	src/drivers/Apple80211.h	/^	UInt16 comms_qual;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::link_qual	src/drivers/Apple80211.h	/^	UInt16 link_qual;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::noise	src/drivers/Apple80211.h	/^	UInt16 noise;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::port_stat	src/drivers/Apple80211.h	/^	UInt16 port_stat;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::power	src/drivers/Apple80211.h	/^	UInt16 power;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::res1	src/drivers/Apple80211.h	/^	UInt16 res1;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::res2	src/drivers/Apple80211.h	/^	UInt16 res2;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::signal	src/drivers/Apple80211.h	/^	UInt16 signal;$/;"	m	struct:WirelessInfo	access:public
WirelessInfo::ssid	src/drivers/Apple80211.h	/^	UInt8 ssid[34];$/;"	m	struct:WirelessInfo	access:public
WirelessIsAvailable	src/drivers/Apple80211.h	/^int WirelessIsAvailable(void);$/;"	p	signature:(void)
WirelessJoin	src/drivers/Apple80211.h	/^WirelessError WirelessJoin(WirelessRef ref, CFStringRef ssid);$/;"	p	signature:(WirelessRef ref, CFStringRef ssid)
WirelessJoin8021x	src/drivers/Apple80211.h	/^WirelessError WirelessJoin8021x(WirelessRef ref, CFStringRef ssid);$/;"	p	signature:(WirelessRef ref, CFStringRef ssid)
WirelessJoinWEP	src/drivers/Apple80211.h	/^WirelessError WirelessJoinWEP(WirelessRef ref, CFStringRef ssid,$/;"	p	signature:(WirelessRef ref, CFStringRef ssid, CFStringRef passwd)
WirelessNetworkInfo	src/drivers/Apple80211.h	/^typedef struct WirelessNetworkInfo {$/;"	s
WirelessNetworkInfo	src/drivers/Apple80211.h	/^} WirelessNetworkInfo;$/;"	t	typeref:struct:WirelessNetworkInfo
WirelessNetworkInfo::beacon_int	src/drivers/Apple80211.h	/^	UInt16 beacon_int;$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::bssid	src/drivers/Apple80211.h	/^	UInt8 bssid[6];$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::capability	src/drivers/Apple80211.h	/^	UInt16 capability;$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::channel	src/drivers/Apple80211.h	/^	UInt16 channel;$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::noise	src/drivers/Apple80211.h	/^	UInt16 noise;$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::signal	src/drivers/Apple80211.h	/^	UInt16 signal;$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::ssid	src/drivers/Apple80211.h	/^	UInt8 ssid[32];$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessNetworkInfo::ssid_len	src/drivers/Apple80211.h	/^	UInt16 ssid_len;$/;"	m	struct:WirelessNetworkInfo	access:public
WirelessPrivate	src/drivers/Apple80211.h	/^WirelessError WirelessPrivate(WirelessRef ref, void *in_ptr, int in_bytes,$/;"	p	signature:(WirelessRef ref, void *in_ptr, int in_bytes, void *out_ptr, int out_bytes)
WirelessRef	src/drivers/Apple80211.h	/^typedef struct __WirelessRef *WirelessRef;$/;"	t	typeref:struct:__WirelessRef
WirelessSafeDirectedScanCopy	src/drivers/Apple80211.h	/^CFDictionaryRef WirelessSafeDirectedScanCopy(WirelessRef ref, CFDataRef ssid);$/;"	p	signature:(WirelessRef ref, CFDataRef ssid)
WirelessScan	src/drivers/Apple80211.h	/^WirelessError WirelessScan(WirelessRef ref, CFArrayRef *results,$/;"	p	signature:(WirelessRef ref, CFArrayRef *results, UInt32 strip_dups)
WirelessScanSplit	src/drivers/Apple80211.h	/^WirelessError WirelessScanSplit(WirelessRef ref, CFArrayRef *ap_results,$/;"	p	signature:(WirelessRef ref, CFArrayRef *ap_results, CFArrayRef *ibss_results, UInt32 strip_dups)
WirelessSetEnabled	src/drivers/Apple80211.h	/^WirelessError WirelessSetEnabled(WirelessRef ref, UInt8 enabled);$/;"	p	signature:(WirelessRef ref, UInt8 enabled)
WirelessSetKey	src/drivers/Apple80211.h	/^WirelessError WirelessSetKey(WirelessRef ref, wirelessKeyType type,$/;"	p	signature:(WirelessRef ref, wirelessKeyType type, int key_idx, int key_len, const unsigned char *key)
WirelessSetPower	src/drivers/Apple80211.h	/^WirelessError WirelessSetPower(WirelessRef ref, UInt8 power);$/;"	p	signature:(WirelessRef ref, UInt8 power)
WirelessSetWPAKey	src/drivers/Apple80211.h	/^WirelessError WirelessSetWPAKey(WirelessRef ref, wirelessKeyType type,$/;"	p	signature:(WirelessRef ref, wirelessKeyType type, int key_len, const unsigned char *key)
X509V3_H	src/tls/x509v3.h	16;"	d
X509_CERT_V1	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	e	enum:x509_certificate::__anon106
X509_CERT_V2	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	e	enum:x509_certificate::__anon106
X509_CERT_V3	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	e	enum:x509_certificate::__anon106
X509_EXT_BASIC_CONSTRAINTS	src/tls/x509v3.h	72;"	d
X509_EXT_ISSUER_ALT_NAME	src/tls/x509v3.h	76;"	d
X509_EXT_KEY_USAGE	src/tls/x509v3.h	74;"	d
X509_EXT_PATH_LEN_CONSTRAINT	src/tls/x509v3.h	73;"	d
X509_EXT_SUBJECT_ALT_NAME	src/tls/x509v3.h	75;"	d
X509_KEY_USAGE_CRL_SIGN	src/tls/x509v3.h	90;"	d
X509_KEY_USAGE_DATA_ENCIPHERMENT	src/tls/x509v3.h	87;"	d
X509_KEY_USAGE_DECIPHER_ONLY	src/tls/x509v3.h	92;"	d
X509_KEY_USAGE_DIGITAL_SIGNATURE	src/tls/x509v3.h	84;"	d
X509_KEY_USAGE_ENCIPHER_ONLY	src/tls/x509v3.h	91;"	d
X509_KEY_USAGE_KEY_AGREEMENT	src/tls/x509v3.h	88;"	d
X509_KEY_USAGE_KEY_CERT_SIGN	src/tls/x509v3.h	89;"	d
X509_KEY_USAGE_KEY_ENCIPHERMENT	src/tls/x509v3.h	86;"	d
X509_KEY_USAGE_NON_REPUDIATION	src/tls/x509v3.h	85;"	d
X509_MAX_NAME_ATTRIBUTES	src/tls/x509v3.h	38;"	d
X509_NAME_ATTR_C	src/tls/x509v3.h	/^		X509_NAME_ATTR_C,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_CN	src/tls/x509v3.h	/^		X509_NAME_ATTR_CN,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_DC	src/tls/x509v3.h	/^		X509_NAME_ATTR_DC,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_L	src/tls/x509v3.h	/^		X509_NAME_ATTR_L,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_NOT_USED	src/tls/x509v3.h	/^		X509_NAME_ATTR_NOT_USED,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_O	src/tls/x509v3.h	/^		X509_NAME_ATTR_O,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_OU	src/tls/x509v3.h	/^		X509_NAME_ATTR_OU$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_NAME_ATTR_ST	src/tls/x509v3.h	/^		X509_NAME_ATTR_ST,$/;"	e	enum:x509_name_attr::x509_name_attr_type
X509_VALIDATE_BAD_CERTIFICATE	src/tls/x509v3.h	/^	X509_VALIDATE_BAD_CERTIFICATE,$/;"	e	enum:__anon107
X509_VALIDATE_CERTIFICATE_EXPIRED	src/tls/x509v3.h	/^	X509_VALIDATE_CERTIFICATE_EXPIRED,$/;"	e	enum:__anon107
X509_VALIDATE_CERTIFICATE_REVOKED	src/tls/x509v3.h	/^	X509_VALIDATE_CERTIFICATE_REVOKED,$/;"	e	enum:__anon107
X509_VALIDATE_CERTIFICATE_UNKNOWN	src/tls/x509v3.h	/^	X509_VALIDATE_CERTIFICATE_UNKNOWN,$/;"	e	enum:__anon107
X509_VALIDATE_OK	src/tls/x509v3.h	/^	X509_VALIDATE_OK,$/;"	e	enum:__anon107
X509_VALIDATE_UNKNOWN_CA	src/tls/x509v3.h	/^	X509_VALIDATE_UNKNOWN_CA$/;"	e	enum:__anon107
X509_VALIDATE_UNSUPPORTED_CERTIFICATE	src/tls/x509v3.h	/^	X509_VALIDATE_UNSUPPORTED_CERTIFICATE,$/;"	e	enum:__anon107
XFREE	src/tls/libtommath.c	77;"	d	file:
XMALLOC	src/tls/libtommath.c	76;"	d	file:
XREALLOC	src/tls/libtommath.c	78;"	d	file:
_Apple80211Initialized	src/drivers/MobileApple80211.c	/^int _Apple80211Initialized(void)$/;"	f	signature:(void)
_Apple80211_constructor	src/drivers/MobileApple80211.c	/^void _Apple80211_constructor(void)$/;"	f	signature:(void)
_Apple80211_destructor	src/drivers/MobileApple80211.c	/^void _Apple80211_destructor(void)$/;"	f	signature:(void)
_BSSID_INFO	src/drivers/driver_ralink.h	/^typedef struct _BSSID_INFO$/;"	s
_BSSID_INFO::BSSID	src/drivers/driver_ralink.h	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:_BSSID_INFO	access:public
_BSSID_INFO::PMKID	src/drivers/driver_ralink.h	/^	NDIS_802_11_PMKID_VALUE PMKID;$/;"	m	struct:_BSSID_INFO	access:public
_BYTE_ORDER	src/drivers/driver_atheros.c	25;"	d	file:
_BYTE_ORDER	src/drivers/driver_atheros.c	27;"	d	file:
_CRT_SECURE_NO_DEPRECATE	src/utils/build_config.h	47;"	d
_DOT11_BSS_TYPE	src/drivers/driver_ndis.c	/^typedef enum _DOT11_BSS_TYPE {$/;"	g	file:
_DOT11_SCAN_REQUEST_V2	src/drivers/driver_ndis.c	/^typedef struct _DOT11_SCAN_REQUEST_V2 {$/;"	s	file:
_DOT11_SCAN_REQUEST_V2::bRestrictedScan	src/drivers/driver_ndis.c	/^	BOOLEAN bRestrictedScan;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::bUseRequestIE	src/drivers/driver_ndis.c	/^	BOOLEAN bUseRequestIE;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::dot11BSSID	src/drivers/driver_ndis.c	/^	DOT11_MAC_ADDRESS dot11BSSID;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::dot11BSSType	src/drivers/driver_ndis.c	/^	DOT11_BSS_TYPE dot11BSSType;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::dot11ScanType	src/drivers/driver_ndis.c	/^	DOT11_SCAN_TYPE dot11ScanType;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uIEsLength	src/drivers/driver_ndis.c	/^	ULONG uIEsLength;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uIEsOffset	src/drivers/driver_ndis.c	/^	ULONG uIEsOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uNumOfPhyTypeInfos	src/drivers/driver_ndis.c	/^	ULONG uNumOfPhyTypeInfos;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uNumOfRequestIDs	src/drivers/driver_ndis.c	/^	ULONG uNumOfRequestIDs;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uNumOfdot11SSIDs	src/drivers/driver_ndis.c	/^	ULONG uNumOfdot11SSIDs;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uPhyTypeInfosOffset	src/drivers/driver_ndis.c	/^	ULONG uPhyTypeInfosOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::uRequestIDsOffset	src/drivers/driver_ndis.c	/^	ULONG uRequestIDsOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::ucBuffer	src/drivers/driver_ndis.c	/^	UCHAR ucBuffer[1];$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_REQUEST_V2::udot11SSIDsOffset	src/drivers/driver_ndis.c	/^	ULONG udot11SSIDsOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
_DOT11_SCAN_TYPE	src/drivers/driver_ndis.c	/^typedef enum _DOT11_SCAN_TYPE {$/;"	g	file:
_GET_VLAN_REALDEV_NAME_CMD	src/ap/vlan_init.c	101;"	d	file:
_GET_VLAN_VID_CMD	src/ap/vlan_init.c	102;"	d	file:
_LARGE_INTEGER	src/drivers/driver_ralink.h	/^typedef union _LARGE_INTEGER {$/;"	u
_LARGE_INTEGER::QuadPart	src/drivers/driver_ralink.h	/^    s64 QuadPart;$/;"	m	union:_LARGE_INTEGER	access:public
_LARGE_INTEGER::__anon88::HighPart	src/drivers/driver_ralink.h	/^        LONG HighPart;$/;"	m	struct:_LARGE_INTEGER::__anon88	access:public
_LARGE_INTEGER::__anon88::LowPart	src/drivers/driver_ralink.h	/^        ULONG LowPart;$/;"	m	struct:_LARGE_INTEGER::__anon88	access:public
_LARGE_INTEGER::__anon89::HighPart	src/drivers/driver_ralink.h	/^        LONG HighPart;$/;"	m	struct:_LARGE_INTEGER::__anon89	access:public
_LARGE_INTEGER::__anon89::LowPart	src/drivers/driver_ralink.h	/^        ULONG LowPart;$/;"	m	struct:_LARGE_INTEGER::__anon89	access:public
_LARGE_INTEGER::u	src/drivers/driver_ralink.h	/^    } u;$/;"	m	union:_LARGE_INTEGER	typeref:struct:_LARGE_INTEGER::__anon89	access:public
_LARGE_INTEGER::vv	src/drivers/driver_ralink.h	/^    }vv;$/;"	m	union:_LARGE_INTEGER	typeref:struct:_LARGE_INTEGER::__anon88	access:public
_LINUX_WIRELESS_H	src/drivers/wireless_copy.h	18;"	d
_MLME_DEAUTH_REQ_STRUCT	src/drivers/driver_ralink.h	/^typedef struct _MLME_DEAUTH_REQ_STRUCT {$/;"	s
_MLME_DEAUTH_REQ_STRUCT::Addr	src/drivers/driver_ralink.h	/^    UCHAR        Addr[MAC_ADDR_LEN];$/;"	m	struct:_MLME_DEAUTH_REQ_STRUCT	access:public
_MLME_DEAUTH_REQ_STRUCT::Reason	src/drivers/driver_ralink.h	/^    USHORT       Reason;$/;"	m	struct:_MLME_DEAUTH_REQ_STRUCT	access:public
_NDISUIO_CTL_CODE	src/drivers/driver_ndis.c	405;"	d	file:
_NDISUIO_CTL_CODE	src/l2_packet/l2_packet_ndis.c	40;"	d	file:
_NDISUIO_QUERY_BINDING	src/drivers/driver_ndis.c	/^typedef struct _NDISUIO_QUERY_BINDING$/;"	s	file:
_NDISUIO_QUERY_BINDING::BindingIndex	src/drivers/driver_ndis.c	/^	ULONG BindingIndex;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
_NDISUIO_QUERY_BINDING::DeviceDescrLength	src/drivers/driver_ndis.c	/^	ULONG DeviceDescrLength;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
_NDISUIO_QUERY_BINDING::DeviceDescrOffset	src/drivers/driver_ndis.c	/^	ULONG DeviceDescrOffset;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
_NDISUIO_QUERY_BINDING::DeviceNameLength	src/drivers/driver_ndis.c	/^	ULONG DeviceNameLength;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
_NDISUIO_QUERY_BINDING::DeviceNameOffset	src/drivers/driver_ndis.c	/^	ULONG DeviceNameOffset;$/;"	m	struct:_NDISUIO_QUERY_BINDING	file:	access:public
_NDISUIO_QUERY_OID	src/drivers/driver_ndis.c	/^typedef struct _NDISUIO_QUERY_OID$/;"	s	file:
_NDISUIO_QUERY_OID::Data	src/drivers/driver_ndis.c	/^    UCHAR Data[sizeof(ULONG)];$/;"	m	struct:_NDISUIO_QUERY_OID	file:	access:public
_NDISUIO_QUERY_OID::Oid	src/drivers/driver_ndis.c	/^    NDIS_OID Oid;$/;"	m	struct:_NDISUIO_QUERY_OID	file:	access:public
_NDISUIO_SET_OID	src/drivers/driver_ndis.c	/^typedef struct _NDISUIO_SET_OID$/;"	s	file:
_NDISUIO_SET_OID::Data	src/drivers/driver_ndis.c	/^    UCHAR Data[sizeof(ULONG)];$/;"	m	struct:_NDISUIO_SET_OID	file:	access:public
_NDISUIO_SET_OID::Oid	src/drivers/driver_ndis.c	/^    NDIS_OID Oid;$/;"	m	struct:_NDISUIO_SET_OID	file:	access:public
_NDIS_802_11_AI_REQFI	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_AI_REQFI$/;"	s
_NDIS_802_11_AI_REQFI::Capabilities	src/drivers/driver_ralink.h	/^    USHORT Capabilities;$/;"	m	struct:_NDIS_802_11_AI_REQFI	access:public
_NDIS_802_11_AI_REQFI::CurrentAPAddress	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS  CurrentAPAddress;$/;"	m	struct:_NDIS_802_11_AI_REQFI	access:public
_NDIS_802_11_AI_REQFI::ListenInterval	src/drivers/driver_ralink.h	/^    USHORT ListenInterval;$/;"	m	struct:_NDIS_802_11_AI_REQFI	access:public
_NDIS_802_11_AI_RESFI	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_AI_RESFI$/;"	s
_NDIS_802_11_AI_RESFI::AssociationId	src/drivers/driver_ralink.h	/^    USHORT AssociationId;$/;"	m	struct:_NDIS_802_11_AI_RESFI	access:public
_NDIS_802_11_AI_RESFI::Capabilities	src/drivers/driver_ralink.h	/^    USHORT Capabilities;$/;"	m	struct:_NDIS_802_11_AI_RESFI	access:public
_NDIS_802_11_AI_RESFI::StatusCode	src/drivers/driver_ralink.h	/^    USHORT StatusCode;$/;"	m	struct:_NDIS_802_11_AI_RESFI	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION$/;"	s
_NDIS_802_11_ASSOCIATION_INFORMATION::AvailableRequestFixedIEs	src/drivers/driver_ralink.h	/^    USHORT                  AvailableRequestFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::AvailableResponseFixedIEs	src/drivers/driver_ralink.h	/^    USHORT                  AvailableResponseFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::Length	src/drivers/driver_ralink.h	/^    ULONG                   Length;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::OffsetRequestIEs	src/drivers/driver_ralink.h	/^    ULONG                   OffsetRequestIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::OffsetResponseIEs	src/drivers/driver_ralink.h	/^    ULONG                   OffsetResponseIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::RequestFixedIEs	src/drivers/driver_ralink.h	/^    NDIS_802_11_AI_REQFI    RequestFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::RequestIELength	src/drivers/driver_ralink.h	/^    ULONG                   RequestIELength;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::ResponseFixedIEs	src/drivers/driver_ralink.h	/^    NDIS_802_11_AI_RESFI    ResponseFixedIEs;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_ASSOCIATION_INFORMATION::ResponseIELength	src/drivers/driver_ralink.h	/^    ULONG                   ResponseIELength;$/;"	m	struct:_NDIS_802_11_ASSOCIATION_INFORMATION	access:public
_NDIS_802_11_AUTHENTICATION_MODE	src/drivers/driver_ralink.h	/^typedef enum _NDIS_802_11_AUTHENTICATION_MODE$/;"	g
_NDIS_802_11_BSSID_LIST	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_802_11_BSSID_LIST$/;"	s
_NDIS_802_11_BSSID_LIST::Bssid	src/drivers/driver_ralink.h	/^   NDIS_WLAN_BSSID Bssid[1];$/;"	m	struct:_NDIS_802_11_BSSID_LIST	access:public
_NDIS_802_11_BSSID_LIST::NumberOfItems	src/drivers/driver_ralink.h	/^   UINT             NumberOfItems;      \/\/ in list below, at least 1$/;"	m	struct:_NDIS_802_11_BSSID_LIST	access:public
_NDIS_802_11_BSSID_LIST_EX	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_802_11_BSSID_LIST_EX$/;"	s
_NDIS_802_11_BSSID_LIST_EX::Bssid	src/drivers/driver_ralink.h	/^    NDIS_WLAN_BSSID_EX      Bssid[1];$/;"	m	struct:_NDIS_802_11_BSSID_LIST_EX	access:public
_NDIS_802_11_BSSID_LIST_EX::NumberOfItems	src/drivers/driver_ralink.h	/^    UINT                   NumberOfItems;      \/\/ in list below, at least 1$/;"	m	struct:_NDIS_802_11_BSSID_LIST_EX	access:public
_NDIS_802_11_CONFIGURATION	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_CONFIGURATION$/;"	s
_NDIS_802_11_CONFIGURATION::ATIMWindow	src/drivers/driver_ralink.h	/^   ULONG                           ATIMWindow;         \/\/ units are Kusec$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
_NDIS_802_11_CONFIGURATION::BeaconPeriod	src/drivers/driver_ralink.h	/^   ULONG                           BeaconPeriod;       \/\/ units are Kusec$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
_NDIS_802_11_CONFIGURATION::DSConfig	src/drivers/driver_ralink.h	/^   ULONG                           DSConfig;           \/\/ Frequency, units are kHz$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
_NDIS_802_11_CONFIGURATION::FHConfig	src/drivers/driver_ralink.h	/^   NDIS_802_11_CONFIGURATION_FH    FHConfig;$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
_NDIS_802_11_CONFIGURATION::Length	src/drivers/driver_ralink.h	/^   ULONG                           Length;             \/\/ Length of structure$/;"	m	struct:_NDIS_802_11_CONFIGURATION	access:public
_NDIS_802_11_CONFIGURATION_FH	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_CONFIGURATION_FH$/;"	s
_NDIS_802_11_CONFIGURATION_FH::DwellTime	src/drivers/driver_ralink.h	/^   ULONG           DwellTime;         \/\/ units are Kusec$/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
_NDIS_802_11_CONFIGURATION_FH::HopPattern	src/drivers/driver_ralink.h	/^   ULONG           HopPattern;        \/\/ As defined by 802.11, MSB set $/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
_NDIS_802_11_CONFIGURATION_FH::HopSet	src/drivers/driver_ralink.h	/^   ULONG           HopSet;            \/\/ to one if non-802.11$/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
_NDIS_802_11_CONFIGURATION_FH::Length	src/drivers/driver_ralink.h	/^   ULONG           Length;            \/\/ Length of structure$/;"	m	struct:_NDIS_802_11_CONFIGURATION_FH	access:public
_NDIS_802_11_FIXED_IEs	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_802_11_FIXED_IEs $/;"	s
_NDIS_802_11_FIXED_IEs::BeaconInterval	src/drivers/driver_ralink.h	/^    USHORT BeaconInterval;$/;"	m	struct:_NDIS_802_11_FIXED_IEs	access:public
_NDIS_802_11_FIXED_IEs::Capabilities	src/drivers/driver_ralink.h	/^    USHORT Capabilities;$/;"	m	struct:_NDIS_802_11_FIXED_IEs	access:public
_NDIS_802_11_FIXED_IEs::Timestamp	src/drivers/driver_ralink.h	/^    UCHAR Timestamp[8];$/;"	m	struct:_NDIS_802_11_FIXED_IEs	access:public
_NDIS_802_11_KEY	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_KEY$/;"	s
_NDIS_802_11_KEY::BSSID	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:_NDIS_802_11_KEY	access:public
_NDIS_802_11_KEY::KeyIndex	src/drivers/driver_ralink.h	/^    UINT           KeyIndex;           $/;"	m	struct:_NDIS_802_11_KEY	access:public
_NDIS_802_11_KEY::KeyLength	src/drivers/driver_ralink.h	/^    UINT           KeyLength;          \/\/ length of key in bytes$/;"	m	struct:_NDIS_802_11_KEY	access:public
_NDIS_802_11_KEY::KeyMaterial	src/drivers/driver_ralink.h	/^    UCHAR           KeyMaterial[1];     \/\/ variable length depending on above field$/;"	m	struct:_NDIS_802_11_KEY	access:public
_NDIS_802_11_KEY::KeyRSC	src/drivers/driver_ralink.h	/^    NDIS_802_11_KEY_RSC KeyRSC;$/;"	m	struct:_NDIS_802_11_KEY	access:public
_NDIS_802_11_KEY::Length	src/drivers/driver_ralink.h	/^    UINT           Length;             \/\/ Length of this structure$/;"	m	struct:_NDIS_802_11_KEY	access:public
_NDIS_802_11_NETWORK_INFRASTRUCTURE	src/drivers/driver_ralink.h	/^typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE$/;"	g
_NDIS_802_11_NETWORK_TYPE	src/drivers/driver_ralink.h	/^typedef enum _NDIS_802_11_NETWORK_TYPE$/;"	g
_NDIS_802_11_PMKID	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_PMKID$/;"	s
_NDIS_802_11_PMKID::BSSIDInfo	src/drivers/driver_ralink.h	/^	BSSID_INFO BSSIDInfo[1];$/;"	m	struct:_NDIS_802_11_PMKID	access:public
_NDIS_802_11_PMKID::BSSIDInfoCount	src/drivers/driver_ralink.h	/^	ULONG BSSIDInfoCount;$/;"	m	struct:_NDIS_802_11_PMKID	access:public
_NDIS_802_11_PMKID::Length	src/drivers/driver_ralink.h	/^	ULONG Length;$/;"	m	struct:_NDIS_802_11_PMKID	access:public
_NDIS_802_11_PMKID_CANDIDATE_LIST	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST$/;"	s
_NDIS_802_11_PMKID_CANDIDATE_LIST::CandidateList	src/drivers/driver_ralink.h	/^	PMKID_CANDIDATE CandidateList[1];$/;"	m	struct:_NDIS_802_11_PMKID_CANDIDATE_LIST	access:public
_NDIS_802_11_PMKID_CANDIDATE_LIST::NumCandidates	src/drivers/driver_ralink.h	/^	ULONG NumCandidates; \/\/ No. of pmkid candidates$/;"	m	struct:_NDIS_802_11_PMKID_CANDIDATE_LIST	access:public
_NDIS_802_11_PMKID_CANDIDATE_LIST::Version	src/drivers/driver_ralink.h	/^	ULONG Version;       \/\/ Version of the structure$/;"	m	struct:_NDIS_802_11_PMKID_CANDIDATE_LIST	access:public
_NDIS_802_11_RELOAD_DEFAULTS	src/drivers/driver_ralink.h	/^typedef enum _NDIS_802_11_RELOAD_DEFAULTS$/;"	g
_NDIS_802_11_REMOVE_KEY	src/drivers/driver_ralink.h	/^typedef struct _NDIS_802_11_REMOVE_KEY$/;"	s
_NDIS_802_11_REMOVE_KEY::BSSID	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS BSSID;      $/;"	m	struct:_NDIS_802_11_REMOVE_KEY	access:public
_NDIS_802_11_REMOVE_KEY::KeyIndex	src/drivers/driver_ralink.h	/^    UINT                   KeyIndex;           $/;"	m	struct:_NDIS_802_11_REMOVE_KEY	access:public
_NDIS_802_11_REMOVE_KEY::Length	src/drivers/driver_ralink.h	/^    UINT                   Length;        \/\/ Length of this structure$/;"	m	struct:_NDIS_802_11_REMOVE_KEY	access:public
_NDIS_802_11_SSID	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_802_11_SSID $/;"	s
_NDIS_802_11_SSID::Ssid	src/drivers/driver_ralink.h	/^    UCHAR   Ssid[NDIS_802_11_LENGTH_SSID];           \/\/ SSID information field$/;"	m	struct:_NDIS_802_11_SSID	access:public
_NDIS_802_11_SSID::SsidLength	src/drivers/driver_ralink.h	/^    INT   SsidLength;         \/\/ length of SSID field below, in bytes;$/;"	m	struct:_NDIS_802_11_SSID	access:public
_NDIS_802_11_WEP	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_802_11_WEP$/;"	s
_NDIS_802_11_WEP::KeyIndex	src/drivers/driver_ralink.h	/^   UINT           KeyIndex;           \/\/ 0 is the per-client key, 1-N are the$/;"	m	struct:_NDIS_802_11_WEP	access:public
_NDIS_802_11_WEP::KeyLength	src/drivers/driver_ralink.h	/^   UINT     KeyLength;     \/\/ length of key in bytes$/;"	m	struct:_NDIS_802_11_WEP	access:public
_NDIS_802_11_WEP::KeyMaterial	src/drivers/driver_ralink.h	/^   UCHAR     KeyMaterial[1];\/\/ variable length depending on above field$/;"	m	struct:_NDIS_802_11_WEP	access:public
_NDIS_802_11_WEP::Length	src/drivers/driver_ralink.h	/^   UINT     Length;        \/\/ Length of this structure$/;"	m	struct:_NDIS_802_11_WEP	access:public
_NDIS_802_11_WEP_STATUS	src/drivers/driver_ralink.h	/^typedef enum _NDIS_802_11_WEP_STATUS$/;"	g
_NDIS_WLAN_BSSID	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_WLAN_BSSID$/;"	s
_NDIS_WLAN_BSSID::Configuration	src/drivers/driver_ralink.h	/^   NDIS_802_11_CONFIGURATION           Configuration;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::InfrastructureMode	src/drivers/driver_ralink.h	/^   NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::Length	src/drivers/driver_ralink.h	/^   ULONG                               Length;     \/\/ Length of this structure$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::MacAddress	src/drivers/driver_ralink.h	/^   NDIS_802_11_MAC_ADDRESS             MacAddress; \/\/ BSSID$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::NetworkTypeInUse	src/drivers/driver_ralink.h	/^   NDIS_802_11_NETWORK_TYPE            NetworkTypeInUse;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::Privacy	src/drivers/driver_ralink.h	/^   ULONG                               Privacy;    \/\/ WEP encryption requirement$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::Reserved	src/drivers/driver_ralink.h	/^   UCHAR                               Reserved[2];$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::Rssi	src/drivers/driver_ralink.h	/^    NDIS_802_11_RSSI                    Rssi;               \/\/ receive signal$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::Ssid	src/drivers/driver_ralink.h	/^   NDIS_802_11_SSID                    Ssid;       \/\/ SSID$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID::SupportedRates	src/drivers/driver_ralink.h	/^   NDIS_802_11_RATES                   SupportedRates;$/;"	m	struct:_NDIS_WLAN_BSSID	access:public
_NDIS_WLAN_BSSID_EX	src/drivers/driver_ralink.h	/^typedef struct PACKED _NDIS_WLAN_BSSID_EX$/;"	s
_NDIS_WLAN_BSSID_EX::Configuration	src/drivers/driver_ralink.h	/^    NDIS_802_11_CONFIGURATION           Configuration;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::IELength	src/drivers/driver_ralink.h	/^    ULONG                               IELength;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::IEs	src/drivers/driver_ralink.h	/^    UCHAR                               IEs[1];$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::InfrastructureMode	src/drivers/driver_ralink.h	/^    NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::Length	src/drivers/driver_ralink.h	/^    ULONG                               Length;             \/\/ Length of this structure$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::MacAddress	src/drivers/driver_ralink.h	/^    NDIS_802_11_MAC_ADDRESS             MacAddress;         \/\/ BSSID$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::NetworkTypeInUse	src/drivers/driver_ralink.h	/^    NDIS_802_11_NETWORK_TYPE            NetworkTypeInUse;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::Privacy	src/drivers/driver_ralink.h	/^    UINT                                Privacy;            \/\/ WEP encryption requirement$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::Reserved	src/drivers/driver_ralink.h	/^    UCHAR                               Reserved[2];$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::Rssi	src/drivers/driver_ralink.h	/^    NDIS_802_11_RSSI                    Rssi;               \/\/ receive signal$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::Ssid	src/drivers/driver_ralink.h	/^    NDIS_802_11_SSID                    Ssid;               \/\/ SSID$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_NDIS_WLAN_BSSID_EX::SupportedRates	src/drivers/driver_ralink.h	/^    NDIS_802_11_RATES_EX                SupportedRates;$/;"	m	struct:_NDIS_WLAN_BSSID_EX	access:public
_PMKID_CANDIDATE	src/drivers/driver_ralink.h	/^typedef struct _PMKID_CANDIDATE {$/;"	s
_PMKID_CANDIDATE::BSSID	src/drivers/driver_ralink.h	/^	NDIS_802_11_MAC_ADDRESS BSSID;$/;"	m	struct:_PMKID_CANDIDATE	access:public
_PMKID_CANDIDATE::Flags	src/drivers/driver_ralink.h	/^	ULONG Flags;$/;"	m	struct:_PMKID_CANDIDATE	access:public
_SB	src/eapol_auth/eapol_auth_dump.c	133;"	d	file:
_SB	src/eapol_auth/eapol_auth_dump.c	230;"	d	file:
_SecPkgContext_EapKeyBlock	src/crypto/tls_schannel.c	/^typedef struct _SecPkgContext_EapKeyBlock {$/;"	s	file:
_SecPkgContext_EapKeyBlock::rgbIVs	src/crypto/tls_schannel.c	/^	BYTE rgbIVs[64];$/;"	m	struct:_SecPkgContext_EapKeyBlock	file:	access:public
_SecPkgContext_EapKeyBlock::rgbKeys	src/crypto/tls_schannel.c	/^	BYTE rgbKeys[128];$/;"	m	struct:_SecPkgContext_EapKeyBlock	file:	access:public
_WIN32_WINNT	src/drivers/ndis_events.c	15;"	d	file:
__Apple80211Associate	src/drivers/MobileApple80211.c	/^static int (*__Apple80211Associate)(Apple80211Ref handle, CFDictionaryRef bss,$/;"	v	file:
__Apple80211AssociateAndCopyInfo	src/drivers/MobileApple80211.c	/^static int (*__Apple80211AssociateAndCopyInfo)(Apple80211Ref handle,$/;"	v	file:
__Apple80211BindToInterface	src/drivers/MobileApple80211.c	/^static int (*__Apple80211BindToInterface)(Apple80211Ref handle,$/;"	v	file:
__Apple80211Close	src/drivers/MobileApple80211.c	/^static int (*__Apple80211Close)(Apple80211Ref ctx) = NULL;$/;"	v	file:
__Apple80211CopyValue	src/drivers/MobileApple80211.c	/^static int (*__Apple80211CopyValue)(Apple80211Ref handle, int field,$/;"	v	file:
__Apple80211GetIfListCopy	src/drivers/MobileApple80211.c	/^static int (*__Apple80211GetIfListCopy)(Apple80211Ref handle, CFArrayRef *list)$/;"	v	file:
__Apple80211GetInfoCopy	src/drivers/MobileApple80211.c	/^static int (*__Apple80211GetInfoCopy)(Apple80211Ref handle,$/;"	v	file:
__Apple80211GetInterfaceNameCopy	src/drivers/MobileApple80211.c	/^static int (*__Apple80211GetInterfaceNameCopy)(Apple80211Ref handle,$/;"	v	file:
__Apple80211GetPower	src/drivers/MobileApple80211.c	/^static int (*__Apple80211GetPower)(Apple80211Ref handle, char *pwr) = NULL;$/;"	v	file:
__Apple80211Open	src/drivers/MobileApple80211.c	/^static int (*__Apple80211Open)(Apple80211Ref *ctx) = NULL;$/;"	v	file:
__Apple80211Scan	src/drivers/MobileApple80211.c	/^static int (*__Apple80211Scan)(Apple80211Ref handle, CFArrayRef *list,$/;"	v	file:
__Apple80211SetPower	src/drivers/MobileApple80211.c	/^static int (*__Apple80211SetPower)(Apple80211Ref handle, char pwr) = NULL;$/;"	v	file:
__BIG_ENDIAN	src/utils/common.h	205;"	d
__BIG_ENDIAN	src/utils/common.h	31;"	d
__BIG_ENDIAN	src/utils/common.h	49;"	d
__BIG_ENDIAN	src/utils/common.h	63;"	d
__BIG_ENDIAN	src/utils/common.h	73;"	d
__BYTE_ORDER	src/utils/common.h	207;"	d
__BYTE_ORDER	src/utils/common.h	29;"	d
__BYTE_ORDER	src/utils/common.h	47;"	d
__BYTE_ORDER	src/utils/common.h	66;"	d
__BYTE_ORDER	src/utils/common.h	68;"	d
__BYTE_ORDER	src/utils/common.h	75;"	d
__LINUX_NL80211_H	src/drivers/nl80211_copy.h	2;"	d
__LITTLE_ENDIAN	src/utils/common.h	204;"	d
__LITTLE_ENDIAN	src/utils/common.h	30;"	d
__LITTLE_ENDIAN	src/utils/common.h	48;"	d
__LITTLE_ENDIAN	src/utils/common.h	64;"	d
__LITTLE_ENDIAN	src/utils/common.h	74;"	d
__NL80211_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_attrs
__NL80211_ATTR_CQM_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_ATTR_CQM_AFTER_LAST,$/;"	e	enum:nl80211_attr_cqm
__NL80211_ATTR_CQM_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_ATTR_CQM_INVALID,$/;"	e	enum:nl80211_attr_cqm
__NL80211_AUTHTYPE_NUM	src/drivers/nl80211_copy.h	/^	__NL80211_AUTHTYPE_NUM,$/;"	e	enum:nl80211_auth_type
__NL80211_BAND_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_BAND_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_band_attr
__NL80211_BAND_ATTR_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_BAND_ATTR_INVALID,$/;"	e	enum:nl80211_band_attr
__NL80211_BITRATE_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_BITRATE_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_bitrate_attr
__NL80211_BITRATE_ATTR_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_BITRATE_ATTR_INVALID,$/;"	e	enum:nl80211_bitrate_attr
__NL80211_BSS_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_BSS_AFTER_LAST,$/;"	e	enum:nl80211_bss
__NL80211_BSS_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_BSS_INVALID,$/;"	e	enum:nl80211_bss
__NL80211_CMD_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_CMD_AFTER_LAST,$/;"	e	enum:nl80211_commands
__NL80211_FREQUENCY_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_FREQUENCY_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_frequency_attr
__NL80211_FREQUENCY_ATTR_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_FREQUENCY_ATTR_INVALID,$/;"	e	enum:nl80211_frequency_attr
__NL80211_KEY_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_KEY_AFTER_LAST,$/;"	e	enum:nl80211_key_attributes
__NL80211_KEY_DEFAULT_TYPE_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_KEY_DEFAULT_TYPE_INVALID,$/;"	e	enum:nl80211_key_default_types
__NL80211_KEY_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_KEY_INVALID,$/;"	e	enum:nl80211_key_attributes
__NL80211_MESHCONF_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_MESHCONF_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_meshconf_params
__NL80211_MESHCONF_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_MESHCONF_INVALID,$/;"	e	enum:nl80211_meshconf_params
__NL80211_MESH_SETUP_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_MESH_SETUP_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_mesh_setup_params
__NL80211_MESH_SETUP_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_MESH_SETUP_INVALID,$/;"	e	enum:nl80211_mesh_setup_params
__NL80211_MNTR_FLAG_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_MNTR_FLAG_AFTER_LAST,$/;"	e	enum:nl80211_mntr_flags
__NL80211_MNTR_FLAG_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_MNTR_FLAG_INVALID,$/;"	e	enum:nl80211_mntr_flags
__NL80211_MPATH_INFO_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_MPATH_INFO_AFTER_LAST,$/;"	e	enum:nl80211_mpath_info
__NL80211_MPATH_INFO_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_MPATH_INFO_INVALID,$/;"	e	enum:nl80211_mpath_info
__NL80211_PMKSA_CANDIDATE_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_PMKSA_CANDIDATE_INVALID,$/;"	e	enum:nl80211_pmksa_candidate_attr
__NL80211_RATE_INFO_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_RATE_INFO_AFTER_LAST,$/;"	e	enum:nl80211_rate_info
__NL80211_RATE_INFO_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_RATE_INFO_INVALID,$/;"	e	enum:nl80211_rate_info
__NL80211_REG_RULE_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_REG_RULE_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_reg_rule_attr
__NL80211_REG_RULE_ATTR_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_REG_RULE_ATTR_INVALID,$/;"	e	enum:nl80211_reg_rule_attr
__NL80211_REKEY_DATA_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_REKEY_DATA_INVALID,$/;"	e	enum:nl80211_rekey_data
__NL80211_SCHED_SCAN_MATCH_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_SCHED_SCAN_MATCH_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_sched_scan_match_attr
__NL80211_SCHED_SCAN_MATCH_ATTR_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_SCHED_SCAN_MATCH_ATTR_INVALID,$/;"	e	enum:nl80211_sched_scan_match_attr
__NL80211_STA_BSS_PARAM_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_STA_BSS_PARAM_AFTER_LAST,$/;"	e	enum:nl80211_sta_bss_param
__NL80211_STA_BSS_PARAM_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_STA_BSS_PARAM_INVALID,$/;"	e	enum:nl80211_sta_bss_param
__NL80211_STA_FLAG_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_STA_FLAG_AFTER_LAST,$/;"	e	enum:nl80211_sta_flags
__NL80211_STA_FLAG_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_STA_FLAG_INVALID,$/;"	e	enum:nl80211_sta_flags
__NL80211_STA_INFO_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_STA_INFO_AFTER_LAST,$/;"	e	enum:nl80211_sta_info
__NL80211_STA_INFO_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_STA_INFO_INVALID,$/;"	e	enum:nl80211_sta_info
__NL80211_STA_WME_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_STA_WME_AFTER_LAST,$/;"	e	enum:nl80211_sta_wme_attr
__NL80211_STA_WME_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_STA_WME_INVALID,$/;"	e	enum:nl80211_sta_wme_attr
__NL80211_SURVEY_INFO_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_SURVEY_INFO_AFTER_LAST,$/;"	e	enum:nl80211_survey_info
__NL80211_SURVEY_INFO_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_SURVEY_INFO_INVALID,$/;"	e	enum:nl80211_survey_info
__NL80211_TXQ_ATTR_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_TXQ_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_txq_attr
__NL80211_TXQ_ATTR_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_TXQ_ATTR_INVALID,$/;"	e	enum:nl80211_txq_attr
__NL80211_TXRATE_AFTER_LAST	src/drivers/nl80211_copy.h	/^	__NL80211_TXRATE_AFTER_LAST,$/;"	e	enum:nl80211_tx_rate_attributes
__NL80211_TXRATE_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_TXRATE_INVALID,$/;"	e	enum:nl80211_tx_rate_attributes
__NL80211_WOWLAN_PKTPAT_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_WOWLAN_PKTPAT_INVALID,$/;"	e	enum:nl80211_wowlan_packet_pattern_attr
__NL80211_WOWLAN_TRIG_INVALID	src/drivers/nl80211_copy.h	/^	__NL80211_WOWLAN_TRIG_INVALID,$/;"	e	enum:nl80211_wowlan_triggers
__RADIOTAP_ITER_H	src/utils/radiotap_iter.h	17;"	d
__REMOVE_PLATSEC_DIAGNOSTICS__	src/utils/common.h	142;"	d
__ROL32	src/crypto/random.c	/^static u32 __ROL32(u32 x, u32 y)$/;"	f	file:	signature:(u32 x, u32 y)
__anon109::alloc	src/tls/libtommath.c	/^    int used, alloc, sign;$/;"	m	struct:__anon109	file:	access:public
__anon109::dp	src/tls/libtommath.c	/^    mp_digit *dp;$/;"	m	struct:__anon109	file:	access:public
__anon109::sign	src/tls/libtommath.c	/^    int used, alloc, sign;$/;"	m	struct:__anon109	file:	access:public
__anon109::used	src/tls/libtommath.c	/^    int used, alloc, sign;$/;"	m	struct:__anon109	file:	access:public
__anon191::suite	src/crypto/tls_gnutls.c	/^    uint8 suite[2];$/;"	m	struct:__anon191	file:	access:public
__anon192::client_random	src/crypto/tls_gnutls.c	/^	opaque client_random[WPA_TLS_RANDOM_SIZE];$/;"	m	struct:__anon192	file:	access:public
__anon192::current_cipher_suite	src/crypto/tls_gnutls.c	/^	cipher_suite_st current_cipher_suite;$/;"	m	struct:__anon192	file:	access:public
__anon192::entity	src/crypto/tls_gnutls.c	/^	gnutls_connection_end_t entity;$/;"	m	struct:__anon192	file:	access:public
__anon192::kx_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_kx_algorithm_t kx_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon192::master_secret	src/crypto/tls_gnutls.c	/^	opaque master_secret[WPA_TLS_MASTER_SIZE];$/;"	m	struct:__anon192	file:	access:public
__anon192::read_bulk_cipher_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_cipher_algorithm_t read_bulk_cipher_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon192::read_compression_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_compression_method_t read_compression_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon192::read_mac_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_mac_algorithm_t read_mac_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon192::server_random	src/crypto/tls_gnutls.c	/^	opaque server_random[WPA_TLS_RANDOM_SIZE];$/;"	m	struct:__anon192	file:	access:public
__anon192::write_bulk_cipher_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_cipher_algorithm_t write_bulk_cipher_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon192::write_compression_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_compression_method_t write_compression_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon192::write_mac_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_mac_algorithm_t write_mac_algorithm;$/;"	m	struct:__anon192	file:	access:public
__anon93::ea	src/drivers/driver_broadcom.c	/^	struct ether_addr ea;$/;"	m	struct:__anon93	typeref:struct:__anon93::ether_addr	file:	access:public
__anon93::res	src/drivers/driver_broadcom.c	/^	uint16 res;$/;"	m	struct:__anon93	file:	access:public
__anon93::val	src/drivers/driver_broadcom.c	/^	uint32 val;$/;"	m	struct:__anon93	file:	access:public
__anon94::wszGuid	src/drivers/driver_ndis.c	/^	LPWSTR wszGuid;$/;"	m	struct:__anon94	file:	access:public
__anon95::dwNumIntfs	src/drivers/driver_ndis.c	/^	DWORD dwNumIntfs;$/;"	m	struct:__anon95	file:	access:public
__anon95::pIntfs	src/drivers/driver_ndis.c	/^	PINTF_KEY_ENTRY pIntfs;$/;"	m	struct:__anon95	file:	access:public
__anon96::dwDataLen	src/drivers/driver_ndis.c	/^	DWORD dwDataLen;$/;"	m	struct:__anon96	file:	access:public
__anon96::pData	src/drivers/driver_ndis.c	/^	LPBYTE pData;$/;"	m	struct:__anon96	file:	access:public
__anon97::bInitialized	src/drivers/driver_ndis.c	/^	BOOL bInitialized;$/;"	m	struct:__anon97	file:	access:public
__anon97::dwCapabilities	src/drivers/driver_ndis.c	/^	DWORD dwCapabilities; \/* something added for WinXP SP2(?) *\/$/;"	m	struct:__anon97	file:	access:public
__anon97::dwCtlFlags	src/drivers/driver_ndis.c	/^	DWORD dwCtlFlags;$/;"	m	struct:__anon97	file:	access:public
__anon97::later_additions	src/drivers/driver_ndis.c	/^	u8 later_additions[100];$/;"	m	struct:__anon97	file:	access:public
__anon97::nAuthMode	src/drivers/driver_ndis.c	/^	INT nAuthMode;$/;"	m	struct:__anon97	file:	access:public
__anon97::nInfraMode	src/drivers/driver_ndis.c	/^	INT nInfraMode;$/;"	m	struct:__anon97	file:	access:public
__anon97::nWPAMCastCipher	src/drivers/driver_ndis.c	/^	DWORD nWPAMCastCipher;$/;"	m	struct:__anon97	file:	access:public
__anon97::nWepStatus	src/drivers/driver_ndis.c	/^	INT nWepStatus;$/;"	m	struct:__anon97	file:	access:public
__anon97::pad	src/drivers/driver_ndis.c	/^	u8 pad[2]; \/* why is this needed? *\/$/;"	m	struct:__anon97	file:	access:public
__anon97::rdBSSID	src/drivers/driver_ndis.c	/^	RAW_DATA rdBSSID;$/;"	m	struct:__anon97	file:	access:public
__anon97::rdBSSIDList	src/drivers/driver_ndis.c	/^	RAW_DATA rdBSSIDList;$/;"	m	struct:__anon97	file:	access:public
__anon97::rdCtrlData	src/drivers/driver_ndis.c	/^	RAW_DATA rdCtrlData;$/;"	m	struct:__anon97	file:	access:public
__anon97::rdSSID	src/drivers/driver_ndis.c	/^	RAW_DATA rdSSID;$/;"	m	struct:__anon97	file:	access:public
__anon97::rdStSSIDList	src/drivers/driver_ndis.c	/^	RAW_DATA rdStSSIDList;$/;"	m	struct:__anon97	file:	access:public
__anon97::ulMediaState	src/drivers/driver_ndis.c	/^	ULONG ulMediaState;$/;"	m	struct:__anon97	file:	access:public
__anon97::ulMediaType	src/drivers/driver_ndis.c	/^	ULONG ulMediaType;$/;"	m	struct:__anon97	file:	access:public
__anon97::ulPhysicalMediaType	src/drivers/driver_ndis.c	/^	ULONG ulPhysicalMediaType;$/;"	m	struct:__anon97	file:	access:public
__anon97::wszDescr	src/drivers/driver_ndis.c	/^	LPWSTR wszDescr;$/;"	m	struct:__anon97	file:	access:public
__anon97::wszGuid	src/drivers/driver_ndis.c	/^	LPWSTR wszGuid;$/;"	m	struct:__anon97	file:	access:public
__bitwise	src/utils/common.h	439;"	d
__bitwise	src/utils/common.h	442;"	d
__compat_iw_event	src/drivers/wireless_copy.h	/^struct __compat_iw_event {$/;"	s
__compat_iw_event::cmd	src/drivers/wireless_copy.h	/^	__u16		cmd;			\/* Wireless IOCTL *\/$/;"	m	struct:__compat_iw_event	access:public
__compat_iw_event::len	src/drivers/wireless_copy.h	/^	__u16		len;			\/* Real length of this stuff *\/$/;"	m	struct:__compat_iw_event	access:public
__compat_iw_event::pointer	src/drivers/wireless_copy.h	/^	compat_caddr_t	pointer;$/;"	m	struct:__compat_iw_event	access:public
__force	src/utils/common.h	438;"	d
__force	src/utils/common.h	441;"	d
__func__	src/utils/common.h	394;"	d
__genl_ctrl_alloc_cache	src/drivers/driver_nl80211.c	/^static inline int __genl_ctrl_alloc_cache(struct nl_handle *h,$/;"	f	file:	signature:(struct nl_handle *h, struct nl_cache **cache)
__hide_aliasing_typecast	src/utils/common.c	/^void * __hide_aliasing_typecast(void *foo)$/;"	f	signature:(void *foo)
__hide_aliasing_typecast	src/utils/common.h	/^void * __hide_aliasing_typecast(void *foo);$/;"	p	signature:(void *foo)
__ifi_pad	src/drivers/priv_netlink.h	/^	unsigned char __ifi_pad;$/;"	m	struct:ifinfomsg	access:public
__le32	src/utils/radiotap.c	27;"	d	file:
__must_check	src/utils/common.h	454;"	d
__must_check	src/utils/common.h	456;"	d
__s16	src/drivers/wireless_copy.h	/^typedef __int16_t __s16;$/;"	t
__s32	src/drivers/wireless_copy.h	/^typedef __int32_t __s32;$/;"	t
__u16	src/drivers/wireless_copy.h	/^typedef __uint16_t __u16;$/;"	t
__u32	src/drivers/wireless_copy.h	/^typedef __uint32_t __u32;$/;"	t
__u8	src/drivers/wireless_copy.h	/^typedef __uint8_t __u8;$/;"	t
__user	src/drivers/wireless_copy.h	93;"	d
__wpa_send_eapol	src/ap/wpa_auth.c	/^void __wpa_send_eapol(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, int key_info, const u8 *key_rsc, const u8 *nonce, const u8 *kde, size_t kde_len, int keyidx, int encr, int force_version)
__wpa_send_eapol	src/ap/wpa_auth_i.h	/^void __wpa_send_eapol(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, int key_info, const u8 *key_rsc, const u8 *nonce, const u8 *kde, size_t kde_len, int keyidx, int encr, int force_version)
_ieee802_1x_abort_auth	src/ap/ieee802_1x.c	/^static void _ieee802_1x_abort_auth(void *ctx, void *sta_ctx)$/;"	f	file:	signature:(void *ctx, void *sta_ctx)
_ieee802_1x_finished	src/ap/ieee802_1x.c	/^static void _ieee802_1x_finished(void *ctx, void *sta_ctx, int success,$/;"	f	file:	signature:(void *ctx, void *sta_ctx, int success, int preauth)
_ieee802_1x_tx_key	src/ap/ieee802_1x.c	/^static void _ieee802_1x_tx_key(void *ctx, void *sta_ctx)$/;"	f	file:	signature:(void *ctx, void *sta_ctx)
_pmksa_cache_free_entry	src/ap/pmksa_cache_auth.c	/^static void _pmksa_cache_free_entry(struct rsn_pmksa_cache_entry *entry)$/;"	f	file:	signature:(struct rsn_pmksa_cache_entry *entry)
_pmksa_cache_free_entry	src/rsn_supp/pmksa_cache.c	/^static void _pmksa_cache_free_entry(struct rsn_pmksa_cache_entry *entry)$/;"	f	file:	signature:(struct rsn_pmksa_cache_entry *entry)
_rand	hostapd/hlr_auc_gw.c	/^	u8 _rand[16];$/;"	m	struct:gsm_triplet	file:	access:public
_scard_select_file	src/utils/pcsc_funcs.c	/^static int _scard_select_file(struct scard_data *scard, unsigned short file_id,$/;"	f	file:	signature:(struct scard_data *scard, unsigned short file_id, unsigned char *buf, size_t *buf_len, sim_types sim_type, unsigned char *aid, size_t aidlen)
_scard_select_file	src/utils/pcsc_funcs.c	/^static int _scard_select_file(struct scard_data *scard, unsigned short file_id,$/;"	p	file:	signature:(struct scard_data *scard, unsigned short file_id, unsigned char *buf, size_t *buf_len, sim_types sim_type, unsigned char *aid, size_t aidlen)
_tls_show_errors	src/crypto/tls_openssl.c	/^static void _tls_show_errors(void)$/;"	f	file:	signature:(void)
_wpa_ctrl_command	hostapd/hostapd_cli.c	/^static int _wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd, int print)$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, char *cmd, int print)
_wpa_hexdump	src/utils/wpa_debug.c	/^static void _wpa_hexdump(int level, const char *title, const u8 *buf,$/;"	f	file:	signature:(int level, const char *title, const u8 *buf, size_t len, int show)
_wpa_hexdump_ascii	src/utils/wpa_debug.c	/^static void _wpa_hexdump_ascii(int level, const char *title, const u8 *buf,$/;"	f	file:	signature:(int level, const char *title, const u8 *buf, size_t len, int show)
_wpa_snprintf_hex	src/utils/common.c	/^static inline int _wpa_snprintf_hex(char *buf, size_t buf_size, const u8 *data,$/;"	f	file:	signature:(char *buf, size_t buf_size, const u8 *data, size_t len, int uppercase)
aWhile	src/eapol_auth/eapol_auth_sm_i.h	/^	int aWhile;     \/\/ 用于BE_AUTH SM ，定义了eapol层递交eapolEap报文给eap层，然后等待回复的计时,超时值为serverTimeout(也就是BE_AUTH_DEFAULT_serverTimeout)$/;"	m	struct:eapol_state_machine	access:public
a_id	src/eap_peer/eap_fast_pac.h	/^	u8 *a_id;$/;"	m	struct:eap_fast_pac	access:public
a_id_info	src/eap_peer/eap_fast_pac.h	/^	u8 *a_id_info;$/;"	m	struct:eap_fast_pac	access:public
a_id_info_len	src/eap_peer/eap_fast_pac.h	/^	size_t a_id_info_len;$/;"	m	struct:eap_fast_pac	access:public
a_id_len	src/eap_peer/eap_fast_pac.h	/^	size_t a_id_len;$/;"	m	struct:eap_fast_pac	access:public
a_mpdu_params	src/common/ieee802_11_defs.h	/^	u8 a_mpdu_params;$/;"	m	struct:ieee80211_ht_capabilities	access:public
a_mpdu_params	src/drivers/driver.h	/^	u8 a_mpdu_params;$/;"	m	struct:hostapd_hw_modes	access:public
aa	src/ap/wpa_auth_ie.c	/^	const u8 *aa;$/;"	m	struct:wpa_auth_okc_iter_data	file:	access:public
aa	src/rsn_supp/pmksa_cache.h	/^	u8 aa[ETH_ALEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
aaaEapKeyAvailable	src/eap_server/eap.h	/^	Boolean aaaEapKeyAvailable;$/;"	m	struct:eap_eapol_interface	access:public
aaaEapKeyData	src/eap_server/eap.h	/^	u8 *aaaEapKeyData;$/;"	m	struct:eap_eapol_interface	access:public
aaaEapKeyDataLen	src/eap_server/eap.h	/^	size_t aaaEapKeyDataLen;$/;"	m	struct:eap_eapol_interface	access:public
aaaEapNoReq	src/eap_server/eap.h	/^	Boolean aaaEapNoReq;    \/\/ AAA层从收到的radius报文中提取EAP数据失败时设置TRUE，EAP层根据此标志判断是否进入DISCARD2状态$/;"	m	struct:eap_eapol_interface	access:public
aaaEapReq	src/eap_server/eap.h	/^	Boolean aaaEapReq;      \/\/ AAA层收到一个类型为Access-Challenge的radius报文时设置TRUE，EAP层根据此标志判断是否进入AAA_RESPONSE状态$/;"	m	struct:eap_eapol_interface	access:public
aaaEapReqData	src/eap_server/eap.h	/^	struct wpabuf *aaaEapReqData;   \/\/ 此buffer由AAA层填充，同时设置aaaEapReq\/aaaSuccess\/aaaFail，然后递交给EAP层处理$/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
aaaEapResp	src/eap_server/eap.h	/^	Boolean aaaEapResp;             \/\/ EAP层AUTH SM进入AAA_IDLE时设置TRUE并填充aaaEapRespData，AAA层发送数据并设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
aaaEapRespData	src/eap_server/eap.h	/^	struct wpabuf *aaaEapRespData;  \/\/ 此标志有EAP层填充(数据来源通常就是eapReapData转储)，同时设置aaaEapResp，然后递交给AAA层处理$/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
aaaFail	src/eap_server/eap.h	/^	Boolean aaaFail;        \/\/ AAA层收到一个类型为Access-Reject的radius报文时设置TRUE，EAP层根据此标志判断是否进入FAILURE2状态$/;"	m	struct:eap_eapol_interface	access:public
aaaMethodTimeout	src/eap_server/eap.h	/^	int aaaMethodTimeout;   \/\/ EAP报文的重传超时值，这个值由radius服务器提供，却用于NAS->suppliant之间$/;"	m	struct:eap_eapol_interface	access:public
aaaSuccess	src/eap_server/eap.h	/^	Boolean aaaSuccess;     \/\/ AAA层收到一个类型为Access-Accept的radius报文时设置TRUE，EAP层根据此标志判断是否进入SUCCESS2状态$/;"	m	struct:eap_eapol_interface	access:public
aaaTimeout	src/eap_server/eap.h	/^	Boolean aaaTimeout;$/;"	m	struct:eap_eapol_interface	access:public
aaa_send	src/eapol_auth/eapol_auth_sm.h	/^	void (*aaa_send)(void *ctx, void *sta_ctx, const u8 *data,$/;"	m	struct:eapol_auth_cb	access:public
abortAuth	src/eapol_auth/eapol_auth_sm.c	58;"	d	file:
abort_auth	src/eapol_auth/eapol_auth_sm.h	/^	void (*abort_auth)(void *ctx, void *sta_ctx);                           \/\/ _ieee802_1x_abort_auth $/;"	m	struct:eapol_auth_cb	access:public
aborted	src/drivers/driver.h	/^		int aborted;$/;"	m	struct:wpa_event_data::scan_info	access:public
aborted_cached	src/eapol_supp/eapol_supp_sm.h	/^	void (*aborted_cached)(void *ctx);$/;"	m	struct:eapol_ctx	access:public
above_threshold	src/drivers/driver.h	/^	int above_threshold;$/;"	m	struct:wpa_signal_info	access:public
ac	src/common/ieee802_11_defs.h	/^	struct wmm_ac_parameter ac[4]; \/* AC_BE, AC_BK, AC_VI, AC_VO *\/$/;"	m	struct:wmm_parameter_element	typeref:struct:wmm_parameter_element::wmm_ac_parameter	access:public
accept_802_1x_keys	src/eapol_supp/eapol_supp_sm.h	/^	int accept_802_1x_keys;$/;"	m	struct:eapol_config	access:public
accept_mac	src/ap/ap_config.h	/^	struct mac_acl_entry *accept_mac;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::mac_acl_entry	access:public
accepted	src/ap/ieee802_11_auth.c	/^	int accepted; \/* HOSTAPD_ACL_* *\/$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
access_accepts	src/radius/radius_client.h	/^	u32 access_accepts;$/;"	m	struct:hostapd_radius_server	access:public
access_accepts	src/radius/radius_server.c	/^	u32 access_accepts;$/;"	m	struct:radius_server_counters	file:	access:public
access_challenges	src/radius/radius_client.h	/^	u32 access_challenges;$/;"	m	struct:hostapd_radius_server	access:public
access_challenges	src/radius/radius_server.c	/^	u32 access_challenges;$/;"	m	struct:radius_server_counters	file:	access:public
access_network_type	src/ap/ap_config.h	/^	int access_network_type;$/;"	m	struct:hostapd_bss_config	access:public
access_network_type	src/drivers/driver.h	/^	u8 access_network_type;$/;"	m	struct:wpa_driver_ap_params	access:public
access_rejects	src/radius/radius_client.h	/^	u32 access_rejects;$/;"	m	struct:hostapd_radius_server	access:public
access_rejects	src/radius/radius_server.c	/^	u32 access_rejects;$/;"	m	struct:radius_server_counters	file:	access:public
access_requests	src/radius/radius_server.c	/^	u32 access_requests;$/;"	m	struct:radius_server_counters	file:	access:public
accounting_deinit	src/ap/accounting.c	/^void accounting_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
accounting_deinit	src/ap/accounting.h	/^static inline void accounting_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
accounting_deinit	src/ap/accounting.h	/^void accounting_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
accounting_init	src/ap/accounting.c	/^int accounting_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
accounting_init	src/ap/accounting.h	/^int accounting_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
accounting_init	src/ap/accounting.h	/^static inline int accounting_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
accounting_interim_update	src/ap/accounting.c	/^static void accounting_interim_update(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
accounting_msg	src/ap/accounting.c	/^static struct radius_msg * accounting_msg(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, int status_type)
accounting_receive	src/ap/accounting.c	/^accounting_receive(struct radius_msg *msg, struct radius_msg *req,$/;"	f	file:	signature:(struct radius_msg *msg, struct radius_msg *req, const u8 *shared_secret, size_t shared_secret_len, void *data)
accounting_report_state	src/ap/accounting.c	/^static void accounting_report_state(struct hostapd_data *hapd, int on)$/;"	f	file:	signature:(struct hostapd_data *hapd, int on)
accounting_sta_get_id	src/ap/accounting.c	/^static void accounting_sta_get_id(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_get_id	src/ap/accounting.c	/^static void accounting_sta_get_id(struct hostapd_data *hapd,$/;"	p	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_interim	src/ap/accounting.c	/^void accounting_sta_interim(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_interim	src/ap/accounting.h	/^void accounting_sta_interim(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_report	src/ap/accounting.c	/^static void accounting_sta_report(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, int stop)
accounting_sta_start	src/ap/accounting.c	/^void accounting_sta_start(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_start	src/ap/accounting.h	/^static inline void accounting_sta_start(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_start	src/ap/accounting.h	/^void accounting_sta_start(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_stop	src/ap/accounting.c	/^void accounting_sta_stop(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_stop	src/ap/accounting.h	/^static inline void accounting_sta_stop(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_stop	src/ap/accounting.h	/^void accounting_sta_stop(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
accounting_sta_update_stats	src/ap/accounting.c	/^static int accounting_sta_update_stats(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, struct hostap_sta_driver_data *data)
acct_data	src/drivers/driver_atheros.c	/^	struct hostap_sta_driver_data acct_data;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::hostap_sta_driver_data	file:	access:public
acct_data	src/drivers/driver_madwifi.c	/^	struct hostap_sta_driver_data acct_data;$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::hostap_sta_driver_data	file:	access:public
acct_handlers	src/radius/radius_client.c	/^	struct radius_rx_handler *acct_handlers;$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::radius_rx_handler	file:	access:public
acct_input_gigawords	src/ap/sta_info.h	/^	u32 acct_input_gigawords; \/* Acct-Input-Gigawords *\/$/;"	m	struct:sta_info	access:public
acct_interim_interval	src/ap/ap_config.h	/^	int acct_interim_interval;              \/\/ 本地配置的 对于某个确定的会话，中间更新流量信息的时间间隔$/;"	m	struct:hostapd_bss_config	access:public
acct_interim_interval	src/ap/ieee802_11_auth.c	/^	u32 acct_interim_interval;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
acct_interim_interval	src/ap/sta_info.h	/^	int acct_interim_interval; \/* Acct-Interim-Interval     描述了对于某个确定的会话，中间更新流量信息的时间间隔  *\/$/;"	m	struct:sta_info	access:public
acct_mac	src/drivers/driver_atheros.c	/^	u8	acct_mac[ETH_ALEN];$/;"	m	struct:atheros_driver_data	file:	access:public
acct_mac	src/drivers/driver_madwifi.c	/^	u8	acct_mac[ETH_ALEN];$/;"	m	struct:madwifi_driver_data	file:	access:public
acct_output_gigawords	src/ap/sta_info.h	/^	u32 acct_output_gigawords; \/* Acct-Output-Gigawords *\/$/;"	m	struct:sta_info	access:public
acct_serv_sock	src/radius/radius_client.c	/^	int acct_serv_sock; \/\/ radius计费服务用的IPV4 socket$/;"	m	struct:radius_client_data	file:	access:public
acct_serv_sock6	src/radius/radius_client.c	/^	int acct_serv_sock6;    \/\/ radius计费服务用的IPV6 socket$/;"	m	struct:radius_client_data	file:	access:public
acct_server	src/radius/radius_client.h	/^	struct hostapd_radius_server *acct_server;$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
acct_servers	src/radius/radius_client.h	/^	struct hostapd_radius_server *acct_servers; \/\/ radius计费服务器信息管理块$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
acct_session_id_hi	src/ap/hostapd.h	/^	u32 acct_session_id_hi, acct_session_id_lo;$/;"	m	struct:hostapd_data	access:public
acct_session_id_hi	src/ap/sta_info.h	/^	u32 acct_session_id_hi;$/;"	m	struct:sta_info	access:public
acct_session_id_lo	src/ap/hostapd.h	/^	u32 acct_session_id_hi, acct_session_id_lo;$/;"	m	struct:hostapd_data	access:public
acct_session_id_lo	src/ap/sta_info.h	/^	u32 acct_session_id_lo;$/;"	m	struct:sta_info	access:public
acct_session_start	src/ap/sta_info.h	/^	time_t acct_session_start;$/;"	m	struct:sta_info	access:public
acct_session_started	src/ap/sta_info.h	/^	int acct_session_started;$/;"	m	struct:sta_info	access:public
acct_sock	src/radius/radius_client.c	/^	int acct_sock;  \/\/ 当前选用的radius计费服务socket$/;"	m	struct:radius_client_data	file:	access:public
acct_terminate_cause	src/ap/sta_info.h	/^	int acct_terminate_cause; \/* Acct-Terminate-Cause *\/$/;"	m	struct:sta_info	access:public
aci_aifsn	src/common/ieee802_11_defs.h	/^	u8 aci_aifsn; \/* AIFSN, ACM, ACI *\/$/;"	m	struct:wmm_ac_parameter	access:public
ack	src/drivers/driver.h	/^		int ack;$/;"	m	struct:wpa_event_data::tx_status	access:public
ack_handler	src/drivers/driver_nl80211.c	/^static int ack_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
acl_cache	src/ap/hostapd.h	/^	struct hostapd_cached_radius_acl *acl_cache;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_cached_radius_acl	access:public
acl_queries	src/ap/hostapd.h	/^	struct hostapd_acl_query_data *acl_queries;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_acl_query_data	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action; \/* *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action; \/* 7 *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action; \/* 9 *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54	access:public
action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56	access:public
action	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED action;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon48	access:public
action	src/eap_common/eap_tlv_common.h	/^	be16 action;$/;"	m	struct:eap_tlv_request_action_tlv	access:public
action	src/rsn_supp/tdls.c	/^	u8 action; \/* Action (enum tdls_frame_type) *\/$/;"	m	struct:wpa_tdls_frame	file:	access:public
action_code	src/common/ieee802_11_defs.h	/^					u8 action_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
action_code	src/common/ieee802_11_defs.h	/^					u8 action_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
action_code	src/rsn_supp/tdls.c	/^		u8 action_code; \/* TDLS frame type *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
action_file	hostapd/hostapd_cli.c	/^static const char *action_file = NULL;$/;"	v	file:
action_length	src/ap/wpa_auth.h	/^	le16 action_length; \/* little endian length of action_frame *\/$/;"	m	struct:ft_rrb_frame	access:public
active_references	src/utils/trace.c	/^static struct dl_list active_references =$/;"	v	typeref:struct:dl_list	file:
adapter	src/drivers/driver_ndis.h	/^	LPADAPTER adapter;$/;"	m	struct:wpa_driver_ndis_data	access:public
adapter_desc	src/drivers/driver_ndis.h	/^	char *adapter_desc;$/;"	m	struct:wpa_driver_ndis_data	access:public
adapter_desc	src/drivers/ndis_events.c	/^	WCHAR *adapter_desc;$/;"	m	struct:ndis_events_data	file:	access:public
adapter_name	src/drivers/driver_ndis.h	/^	TCHAR *adapter_name;$/;"	m	struct:wpa_driver_ndis_data	access:public
add_ifidx	src/drivers/driver_nl80211.c	/^static inline void add_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
add_ifidx	src/drivers/driver_nl80211.c	/^static void add_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
add_ifidx	src/drivers/driver_nl80211.c	/^static void add_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx);$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
add_monitor_filter	src/drivers/driver_nl80211.c	/^static int add_monitor_filter(int s)$/;"	f	file:	signature:(int s)
add_pmkid	src/drivers/driver.h	/^	int (*add_pmkid)(void *priv, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_driver_ops	access:public
add_pmkid	src/rsn_supp/wpa.h	/^	int (*add_pmkid)(void *ctx, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_sm_ctx	access:public
add_r0kh	hostapd/config_file.c	/^static int add_r0kh(struct hostapd_bss_config *bss, char *value)$/;"	f	file:	signature:(struct hostapd_bss_config *bss, char *value)
add_r1kh	hostapd/config_file.c	/^static int add_r1kh(struct hostapd_bss_config *bss, char *value)$/;"	f	file:	signature:(struct hostapd_bss_config *bss, char *value)
add_ssdp_network	src/wps/wps_upnp_i.h	/^int add_ssdp_network(const char *net_if);$/;"	p	signature:(const char *net_if)
add_ssdp_network	src/wps/wps_upnp_ssdp.c	/^int add_ssdp_network(const char *net_if)$/;"	f	signature:(const char *net_if)
add_sta	src/ap/wpa_auth.h	/^	struct wpa_state_machine * (*add_sta)(void *ctx, const u8 *sta_addr);$/;"	m	struct:wpa_auth_callbacks	typeref:struct:wpa_auth_callbacks::add_sta	access:public
add_sta	src/drivers/driver_hostap.h	/^		} add_sta;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon79	access:public
add_sta_node	src/drivers/driver.h	/^	int (*add_sta_node)(void *priv, const u8 *addr, u16 auth_alg);$/;"	m	struct:wpa_driver_ops	access:public
add_tspec	src/drivers/driver.h	/^	 int (*add_tspec)(void *priv, const u8 *addr, u8 *tspec_ie,$/;"	m	struct:wpa_driver_ops	access:public
added	src/ap/wps_hostapd.c	/^	int added;$/;"	m	struct:wps_add_pin_data	file:	access:public
added_bridge	src/drivers/driver_nl80211.c	/^	unsigned int added_bridge:1;$/;"	m	struct:i802_bss	file:	access:public
added_if_into_bridge	src/drivers/driver_nl80211.c	/^	unsigned int added_if_into_bridge:1;$/;"	m	struct:i802_bss	file:	access:public
addr	hostapd/ctrl_iface.c	/^	struct sockaddr_un addr;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::sockaddr_un	file:	access:public
addr	src/ap/ap_config.h	/^	macaddr addr;$/;"	m	struct:mac_acl_entry	access:public
addr	src/ap/ap_config.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:hostapd_wpa_psk	access:public
addr	src/ap/ap_list.h	/^	u8 addr[6];$/;"	m	struct:ap_info	access:public
addr	src/ap/ieee802_11_auth.c	/^	macaddr addr;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
addr	src/ap/ieee802_11_auth.c	/^	macaddr addr;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
addr	src/ap/peerkey_auth.c	/^	const u8 *addr;$/;"	m	struct:wpa_stsl_search	file:	access:public
addr	src/ap/sta_info.h	/^	u8 addr[6];     \/\/ 每个元素都对应一个唯一的mac地址$/;"	m	struct:sta_info	access:public
addr	src/ap/utils.c	/^	const u8 *addr;$/;"	m	struct:prune_data	file:	access:public
addr	src/ap/wpa_auth.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:ft_remote_r0kh	access:public
addr	src/ap/wpa_auth.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:ft_remote_r1kh	access:public
addr	src/ap/wpa_auth_i.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wpa_authenticator	access:public
addr	src/ap/wpa_auth_i.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wpa_state_machine	access:public
addr	src/ap/wps_hostapd.c	/^	const u8 *addr;$/;"	m	struct:wps_add_pin_data	file:	access:public
addr	src/common/privsep_commands.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:privsep_cmd_set_key	access:public
addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::assoc_info	access:public
addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::deauth_info	access:public
addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::new_sta	access:public
addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::rx_from_unknown	access:public
addr	src/drivers/driver.h	/^		u8 addr[ETH_ALEN];$/;"	m	struct:wpa_event_data::client_poll	access:public
addr	src/drivers/driver.h	/^		u8 addr[ETH_ALEN];$/;"	m	struct:wpa_event_data::low_ack	access:public
addr	src/drivers/driver.h	/^		u8 addr[ETH_ALEN];$/;"	m	struct:wpa_event_data::timeout_event	access:public
addr	src/drivers/driver.h	/^	const u8 *addr;$/;"	m	struct:hostapd_sta_add_params	access:public
addr	src/drivers/driver_hostap.h	/^		u32 addr; \/* wlan card address *\/$/;"	m	struct:prism2_download_param::prism2_download_area	access:public
addr	src/drivers/driver_nl80211.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
addr	src/drivers/driver_test.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:test_client_socket	file:	access:public
addr	src/drivers/wireless_copy.h	/^	struct sockaddr		addr;		\/* Source address (hw\/mac) *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::sockaddr	access:public
addr	src/drivers/wireless_copy.h	/^	struct sockaddr	addr;		\/* Destination address (hw\/mac) *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::sockaddr	access:public
addr	src/drivers/wireless_copy.h	/^	struct sockaddr	addr; \/* ff:ff:ff:ff:ff:ff for broadcast\/multicast$/;"	m	struct:iw_encode_ext	typeref:struct:iw_encode_ext::sockaddr	access:public
addr	src/drivers/wireless_copy.h	/^	struct sockaddr	addr;$/;"	m	struct:iw_mlme	typeref:struct:iw_mlme::sockaddr	access:public
addr	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 addr[ETH_ALEN]; \/* Supplicant address 请求者mac地址*\/$/;"	m	struct:eapol_state_machine	access:public
addr	src/p2p/p2p_group.c	/^	u8 addr[ETH_ALEN]; \/* P2P Interface Address *\/$/;"	m	struct:p2p_group_member	file:	access:public
addr	src/radius/radius_client.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:radius_msg_list	file:	access:public
addr	src/radius/radius_client.h	/^	struct hostapd_ip_addr addr;$/;"	m	struct:hostapd_radius_server	typeref:struct:hostapd_radius_server::hostapd_ip_addr	access:public
addr	src/radius/radius_server.c	/^	struct in_addr addr;$/;"	m	struct:radius_client	typeref:struct:radius_client::in_addr	file:	access:public
addr	src/rsn_supp/peerkey.h	/^	u8 addr[ETH_ALEN]; \/* other end MAC address *\/$/;"	m	struct:wpa_peerkey	access:public
addr	src/rsn_supp/tdls.c	/^	u8 addr[ETH_ALEN]; \/* other end MAC address *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
addr	src/utils/trace.h	/^	const void *addr;$/;"	m	struct:wpa_trace_ref	access:public
addr	src/wps/wps.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:upnp_pending_message	access:public
addr	src/wps/wps_er.h	/^	struct in_addr addr;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::in_addr	access:public
addr	src/wps/wps_er.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wps_er_sta	access:public
addr	src/wps/wps_registrar.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wps_pbc_session	file:	access:public
addr	src/wps/wps_upnp_event.c	/^	struct subscr_addr *addr;       \/* address to connect to *\/$/;"	m	struct:wps_event_	typeref:struct:wps_event_::subscr_addr	file:	access:public
addr1	src/common/ieee802_11_defs.h	/^	u8 addr1[6];$/;"	m	struct:ieee80211_hdr	access:public
addr2	src/common/ieee802_11_defs.h	/^	u8 addr2[6];$/;"	m	struct:ieee80211_hdr	access:public
addr3	src/common/ieee802_11_defs.h	/^	u8 addr3[6];$/;"	m	struct:ieee80211_hdr	access:public
addr6	src/radius/radius_server.c	/^	struct in6_addr addr6;$/;"	m	struct:radius_client	typeref:struct:radius_client::in6_addr	file:	access:public
addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_add_notify	file:	access:public
addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_cache_notify	file:	access:public
addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_cache_response	file:	access:public
addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_move_notify	file:	access:public
addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_move_response	file:	access:public
addr_list	src/wps/wps_upnp_i.h	/^	struct dl_list addr_list;$/;"	m	struct:subscription	typeref:struct:subscription::dl_list	access:public
addrlen	hostapd/ctrl_iface.c	/^	socklen_t addrlen;$/;"	m	struct:wpa_ctrl_dst	file:	access:public
adminControlledDirections	src/eapol_auth/eapol_auth_sm_i.h	/^	ControlledDirection adminControlledDirections;  \/\/ 受控方向，本值不会被CTRL_DIR SM修改$/;"	m	struct:eapol_state_machine	access:public
admission_control_mandatory	src/ap/ap_config.h	/^	int admission_control_mandatory;$/;"	m	struct:hostapd_wmm_ac_params	access:public
adv_proto_id	src/common/ieee802_11_defs.h	/^enum adv_proto_id {$/;"	g
advertise_count	src/wps/wps_upnp_i.h	/^	unsigned advertise_count; \/* how many advertisements done *\/$/;"	m	struct:upnp_wps_device_sm	access:public
advertisement	src/wps/wps_upnp_i.h	/^	struct advertisement_state_machine advertisement;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::advertisement_state_machine	access:public
advertisement_state_machine	src/wps/wps_upnp_i.h	/^struct advertisement_state_machine {$/;"	s
advertisement_state_machine::client	src/wps/wps_upnp_i.h	/^	struct sockaddr_in client; \/* for M-SEARCH replies *\/$/;"	m	struct:advertisement_state_machine	typeref:struct:advertisement_state_machine::sockaddr_in	access:public
advertisement_state_machine::list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:advertisement_state_machine	typeref:struct:advertisement_state_machine::dl_list	access:public
advertisement_state_machine::nerrors	src/wps/wps_upnp_i.h	/^	int nerrors;$/;"	m	struct:advertisement_state_machine	access:public
advertisement_state_machine::state	src/wps/wps_upnp_i.h	/^	int state;$/;"	m	struct:advertisement_state_machine	access:public
advertisement_state_machine::type	src/wps/wps_upnp_i.h	/^	enum advertisement_type_enum type;$/;"	m	struct:advertisement_state_machine	typeref:enum:advertisement_state_machine::advertisement_type_enum	access:public
advertisement_state_machine_handler	src/wps/wps_upnp_ssdp.c	/^static void advertisement_state_machine_handler(void *eloop_data,$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
advertisement_state_machine_handler	src/wps/wps_upnp_ssdp.c	/^static void advertisement_state_machine_handler(void *eloop_data,$/;"	p	file:	signature:(void *eloop_data, void *user_ctx)
advertisement_state_machine_start	src/wps/wps_upnp_i.h	/^int advertisement_state_machine_start(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
advertisement_state_machine_start	src/wps/wps_upnp_ssdp.c	/^int advertisement_state_machine_start(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
advertisement_state_machine_stop	src/wps/wps_upnp_i.h	/^void advertisement_state_machine_stop(struct upnp_wps_device_sm *sm,$/;"	p	signature:(struct upnp_wps_device_sm *sm, int send_byebye)
advertisement_state_machine_stop	src/wps/wps_upnp_ssdp.c	/^void advertisement_state_machine_stop(struct upnp_wps_device_sm *sm,$/;"	f	signature:(struct upnp_wps_device_sm *sm, int send_byebye)
advertisement_type_enum	src/wps/wps_upnp_i.h	/^enum advertisement_type_enum {$/;"	g
aeropuerto	src/drivers/MobileApple80211.c	/^static void *aeropuerto = NULL;$/;"	v	file:
aes	src/crypto/crypto_internal-cipher.c	/^		} aes;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon188	file:	access:public
aes_128_cbc_decrypt	src/crypto/aes-cbc.c	/^int aes_128_cbc_decrypt(const u8 *key, const u8 *iv, u8 *data, size_t data_len)$/;"	f	signature:(const u8 *key, const u8 *iv, u8 *data, size_t data_len)
aes_128_cbc_decrypt	src/crypto/aes_wrap.h	/^int __must_check aes_128_cbc_decrypt(const u8 *key, const u8 *iv, u8 *data,$/;"	p	signature:(const u8 *key, const u8 *iv, u8 *data, size_t data_len)
aes_128_cbc_encrypt	src/crypto/aes-cbc.c	/^int aes_128_cbc_encrypt(const u8 *key, const u8 *iv, u8 *data, size_t data_len)$/;"	f	signature:(const u8 *key, const u8 *iv, u8 *data, size_t data_len)
aes_128_cbc_encrypt	src/crypto/aes_wrap.h	/^int __must_check aes_128_cbc_encrypt(const u8 *key, const u8 *iv, u8 *data,$/;"	p	signature:(const u8 *key, const u8 *iv, u8 *data, size_t data_len)
aes_128_ctr_encrypt	src/crypto/aes-ctr.c	/^int aes_128_ctr_encrypt(const u8 *key, const u8 *nonce,$/;"	f	signature:(const u8 *key, const u8 *nonce, u8 *data, size_t data_len)
aes_128_ctr_encrypt	src/crypto/aes_wrap.h	/^int __must_check aes_128_ctr_encrypt(const u8 *key, const u8 *nonce,$/;"	p	signature:(const u8 *key, const u8 *nonce, u8 *data, size_t data_len)
aes_128_eax_decrypt	src/crypto/aes-eax.c	/^int aes_128_eax_decrypt(const u8 *key, const u8 *nonce, size_t nonce_len,$/;"	f	signature:(const u8 *key, const u8 *nonce, size_t nonce_len, const u8 *hdr, size_t hdr_len, u8 *data, size_t data_len, const u8 *tag)
aes_128_eax_decrypt	src/crypto/aes_wrap.h	/^int __must_check aes_128_eax_decrypt(const u8 *key,$/;"	p	signature:(const u8 *key, const u8 *nonce, size_t nonce_len, const u8 *hdr, size_t hdr_len, u8 *data, size_t data_len, const u8 *tag)
aes_128_eax_encrypt	src/crypto/aes-eax.c	/^int aes_128_eax_encrypt(const u8 *key, const u8 *nonce, size_t nonce_len,$/;"	f	signature:(const u8 *key, const u8 *nonce, size_t nonce_len, const u8 *hdr, size_t hdr_len, u8 *data, size_t data_len, u8 *tag)
aes_128_eax_encrypt	src/crypto/aes_wrap.h	/^int __must_check aes_128_eax_encrypt(const u8 *key,$/;"	p	signature:(const u8 *key, const u8 *nonce, size_t nonce_len, const u8 *hdr, size_t hdr_len, u8 *data, size_t data_len, u8 *tag)
aes_128_encrypt_block	src/crypto/aes-encblock.c	/^int aes_128_encrypt_block(const u8 *key, const u8 *in, u8 *out)$/;"	f	signature:(const u8 *key, const u8 *in, u8 *out)
aes_128_encrypt_block	src/crypto/aes_wrap.h	/^int __must_check aes_128_encrypt_block(const u8 *key, const u8 *in, u8 *out);$/;"	p	signature:(const u8 *key, const u8 *in, u8 *out)
aes_block_size	src/eap_common/eap_psk_common.c	22;"	d	file:
aes_context	src/crypto/crypto_cryptoapi.c	/^struct aes_context {$/;"	s	file:
aes_context::ckey	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY ckey;$/;"	m	struct:aes_context	file:	access:public
aes_context::prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:aes_context	file:	access:public
aes_decrypt	src/crypto/aes-internal-dec.c	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain)$/;"	f	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/aes.h	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain);$/;"	p	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/crypto.h	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain);$/;"	p	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/crypto_cryptoapi.c	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain)$/;"	f	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/crypto_gnutls.c	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain)$/;"	f	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/crypto_libtomcrypt.c	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain)$/;"	f	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/crypto_nss.c	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain)$/;"	f	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt	src/crypto/crypto_openssl.c	/^void aes_decrypt(void *ctx, const u8 *crypt, u8 *plain)$/;"	f	signature:(void *ctx, const u8 *crypt, u8 *plain)
aes_decrypt_deinit	src/crypto/aes-internal-dec.c	/^void aes_decrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/aes.h	/^void aes_decrypt_deinit(void *ctx);$/;"	p	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/crypto.h	/^void aes_decrypt_deinit(void *ctx);$/;"	p	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/crypto_cryptoapi.c	/^void aes_decrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/crypto_gnutls.c	/^void aes_decrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/crypto_libtomcrypt.c	/^void aes_decrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/crypto_nss.c	/^void aes_decrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_decrypt_deinit	src/crypto/crypto_openssl.c	/^void aes_decrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_decrypt_init	src/crypto/aes-internal-dec.c	/^void * aes_decrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/aes.h	/^void * aes_decrypt_init(const u8 *key, size_t len);$/;"	p	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/crypto.h	/^void * aes_decrypt_init(const u8 *key, size_t len);$/;"	p	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/crypto_cryptoapi.c	/^void * aes_decrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/crypto_gnutls.c	/^void * aes_decrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/crypto_libtomcrypt.c	/^void * aes_decrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/crypto_nss.c	/^void * aes_decrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_decrypt_init	src/crypto/crypto_openssl.c	/^void * aes_decrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_encrypt	src/crypto/aes-internal-enc.c	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)$/;"	f	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/aes.h	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt);$/;"	p	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/crypto.h	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt);$/;"	p	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/crypto_cryptoapi.c	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)$/;"	f	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/crypto_gnutls.c	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)$/;"	f	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/crypto_libtomcrypt.c	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)$/;"	f	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/crypto_nss.c	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)$/;"	f	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt	src/crypto/crypto_openssl.c	/^void aes_encrypt(void *ctx, const u8 *plain, u8 *crypt)$/;"	f	signature:(void *ctx, const u8 *plain, u8 *crypt)
aes_encrypt_deinit	src/crypto/aes-internal-enc.c	/^void aes_encrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/aes.h	/^void aes_encrypt_deinit(void *ctx);$/;"	p	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/crypto.h	/^void aes_encrypt_deinit(void *ctx);$/;"	p	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/crypto_cryptoapi.c	/^void aes_encrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/crypto_gnutls.c	/^void aes_encrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/crypto_libtomcrypt.c	/^void aes_encrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/crypto_nss.c	/^void aes_encrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_encrypt_deinit	src/crypto/crypto_openssl.c	/^void aes_encrypt_deinit(void *ctx)$/;"	f	signature:(void *ctx)
aes_encrypt_init	src/crypto/aes-internal-enc.c	/^void * aes_encrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/aes.h	/^void * aes_encrypt_init(const u8 *key, size_t len);$/;"	p	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/crypto.h	/^void * aes_encrypt_init(const u8 *key, size_t len);$/;"	p	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/crypto_cryptoapi.c	/^void * aes_encrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/crypto_gnutls.c	/^void * aes_encrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/crypto_libtomcrypt.c	/^void * aes_encrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/crypto_nss.c	/^void * aes_encrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_encrypt_init	src/crypto/crypto_openssl.c	/^void * aes_encrypt_init(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
aes_unwrap	src/crypto/aes-unwrap.c	/^int aes_unwrap(const u8 *kek, int n, const u8 *cipher, u8 *plain)$/;"	f	signature:(const u8 *kek, int n, const u8 *cipher, u8 *plain)
aes_unwrap	src/crypto/aes_wrap.h	/^int __must_check aes_unwrap(const u8 *kek, int n, const u8 *cipher, u8 *plain);$/;"	p	signature:(const u8 *kek, int n, const u8 *cipher, u8 *plain)
aes_wrap	src/crypto/aes-wrap.c	/^int aes_wrap(const u8 *kek, int n, const u8 *plain, u8 *cipher)$/;"	f	signature:(const u8 *kek, int n, const u8 *plain, u8 *cipher)
aes_wrap	src/crypto/aes_wrap.h	/^int __must_check aes_wrap(const u8 *kek, int n, const u8 *plain, u8 *cipher);$/;"	p	signature:(const u8 *kek, int n, const u8 *plain, u8 *cipher)
af	src/utils/ip_addr.h	/^	int af; \/* AF_INET \/ AF_INET6 *\/$/;"	m	struct:hostapd_ip_addr	access:public
after_scan_peer	src/p2p/p2p_i.h	/^	u8 after_scan_peer[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
after_scan_tx	src/p2p/p2p_i.h	/^	struct p2p_pending_action_tx *after_scan_tx;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_pending_action_tx	access:public
age	src/drivers/driver.h	/^	unsigned int age;$/;"	m	struct:wpa_scan_res	access:public
aid	src/ap/sta_info.h	/^	u16 aid; \/* STA's unique AID (1 .. 2007) or 0 if not yet assigned *\/$/;"	m	struct:sta_info	access:public
aid	src/common/ieee802_11_defs.h	/^			le16 aid;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
aid	src/drivers/driver.h	/^	u16 aid;$/;"	m	struct:hostapd_sta_add_params	access:public
aid	src/drivers/driver_hostap.h	/^			u16 aid;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon79	access:public
aifs	src/ap/ap_config.h	/^	int aifs;$/;"	m	struct:hostapd_tx_queue_params	access:public
aifs	src/ap/ap_config.h	/^	int aifs;$/;"	m	struct:hostapd_wmm_ac_params	access:public
ak	src/eap_peer/eap_pax.c	/^	u8 ak[EAP_PAX_AK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
ak	src/eap_peer/eap_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
ak	src/eap_server/eap_server_pax.c	/^	u8 ak[EAP_PAX_AK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
ak	src/eap_server/eap_server_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
aka	src/eap_server/eap_sim_db.c	/^		} aka;$/;"	m	union:eap_sim_db_pending::__anon149	typeref:struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
aka	src/eap_server/eap_sim_db.c	/^	int aka;$/;"	m	struct:eap_sim_db_pending	file:	access:public
aka_auts	hostapd/hlr_auc_gw.c	/^static void aka_auts(int s, struct sockaddr_un *from, socklen_t fromlen,$/;"	f	file:	signature:(int s, struct sockaddr_un *from, socklen_t fromlen, char *imsi)
aka_prime	src/eap_server/eap_sim_db.h	/^	int aka_prime;$/;"	m	struct:eap_sim_reauth	access:public
aka_req_auth	hostapd/hlr_auc_gw.c	/^static void aka_req_auth(int s, struct sockaddr_un *from, socklen_t fromlen,$/;"	f	file:	signature:(int s, struct sockaddr_un *from, socklen_t fromlen, char *imsi)
akmp	src/ap/pmksa_cache_auth.h	/^	int akmp; \/* WPA_KEY_MGMT_* *\/$/;"	m	struct:rsn_pmksa_cache_entry	access:public
akmp	src/rsn_supp/pmksa_cache.h	/^	int akmp; \/* WPA_KEY_MGMT_* *\/$/;"	m	struct:rsn_pmksa_cache_entry	access:public
alert_description	src/tls/tlsv1_client_i.h	/^	u8 alert_description;$/;"	m	struct:tlsv1_client	access:public
alert_description	src/tls/tlsv1_server_i.h	/^	u8 alert_description;$/;"	m	struct:tlsv1_server	access:public
alert_level	src/tls/tlsv1_client_i.h	/^	u8 alert_level;$/;"	m	struct:tlsv1_client	access:public
alert_level	src/tls/tlsv1_server_i.h	/^	u8 alert_level;$/;"	m	struct:tlsv1_server	access:public
alg	src/common/privsep_commands.h	/^	int alg;$/;"	m	struct:privsep_cmd_set_key	access:public
alg	src/crypto/crypto_cryptoapi.c	/^	enum crypto_hash_alg alg;$/;"	m	struct:crypto_hash	typeref:enum:crypto_hash::crypto_hash_alg	file:	access:public
alg	src/crypto/crypto_internal-cipher.c	/^	enum crypto_cipher_alg alg;$/;"	m	struct:crypto_cipher	typeref:enum:crypto_cipher::crypto_cipher_alg	file:	access:public
alg	src/crypto/crypto_internal.c	/^	enum crypto_hash_alg alg;$/;"	m	struct:crypto_hash	typeref:enum:crypto_hash::crypto_hash_alg	file:	access:public
alg	src/crypto/crypto_libtomcrypt.c	/^	enum crypto_hash_alg alg;$/;"	m	struct:crypto_hash	typeref:enum:crypto_hash::crypto_hash_alg	file:	access:public
alg	src/drivers/driver_hostap.h	/^			u8 alg[HOSTAP_CRYPT_ALG_NAME_LEN];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
alg	src/drivers/wireless_copy.h	/^	__u16		alg; \/* IW_ENCODE_ALG_* *\/$/;"	m	struct:iw_encode_ext	access:public
alg	src/rsn_supp/wpa.c	/^	enum wpa_alg alg;$/;"	m	struct:wpa_gtk_data	typeref:enum:wpa_gtk_data::wpa_alg	file:	access:public
alg	src/tls/pkcs5.c	/^	} alg;$/;"	m	struct:pkcs5_params	typeref:enum:pkcs5_params::pkcs5_alg	file:	access:public
alg	src/tls/tlsv1_common.h	/^	enum crypto_cipher_alg alg;$/;"	m	struct:tls_cipher_data	typeref:enum:tls_cipher_data::crypto_cipher_alg	access:public
aliasing_hide_typecast	src/utils/common.h	506;"	d
alloc	src/tls/libtommath.c	/^    int used, alloc, sign;$/;"	m	struct:__anon109	file:	access:public
alloc_eapol	src/rsn_supp/wpa.h	/^	u8 * (*alloc_eapol)(void *ctx, u8 type, const void *data, u16 data_len,$/;"	m	struct:wpa_sm_ctx	access:public
alloc_iface_idx	src/drivers/driver_test.c	/^	int alloc_iface_idx;$/;"	m	struct:wpa_driver_test_data	file:	access:public
alloc_list	src/utils/os_unix.c	/^static struct dl_list alloc_list;$/;"	v	typeref:struct:dl_list	file:
allowNotifications	src/eap_peer/eap_i.h	/^	Boolean allowNotifications; \/* peer state machine <-> methods *\/$/;"	m	struct:eap_sm	access:public
allowNotifications	src/eap_peer/eap_i.h	/^	Boolean allowNotifications;$/;"	m	struct:eap_method_ret	access:public
allowed_pairwise_cipher	src/rsn_supp/wpa.h	/^	int allowed_pairwise_cipher; \/* bitfield of WPA_CIPHER_* *\/$/;"	m	struct:rsn_supp_config	access:public
allowed_pairwise_cipher	src/rsn_supp/wpa_i.h	/^	int allowed_pairwise_cipher; \/* bitfield of WPA_CIPHER_* *\/$/;"	m	struct:wpa_sm	access:public
already_seen	src/ap/ap_list.h	/^	int already_seen; \/* whether API call AP-NEW has already fetched$/;"	m	struct:ap_info	access:public
altAccept	src/eapol_supp/eapol_supp_sm.c	/^	Boolean altAccept; \/* for EAP *\/$/;"	m	struct:eapol_sm	file:	access:public
altReject	src/eapol_supp/eapol_supp_sm.c	/^	Boolean altReject; \/* for EAP *\/$/;"	m	struct:eapol_sm	file:	access:public
alt_email	src/tls/x509v3.h	/^	char *alt_email; \/* rfc822Name *\/$/;"	m	struct:x509_name	access:public
altsubject_match	src/crypto/tls.h	/^	const char *altsubject_match;$/;"	m	struct:tls_connection_params	access:public
altsubject_match	src/crypto/tls_gnutls.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
altsubject_match	src/crypto/tls_openssl.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
altsubject_match	src/eap_peer/eap_config.h	/^	u8 *altsubject_match;$/;"	m	struct:eap_peer_config	access:public
altsubject_match2	src/eap_peer/eap_config.h	/^	u8 *altsubject_match2;$/;"	m	struct:eap_peer_config	access:public
amf	hostapd/hlr_auc_gw.c	/^	u8 amf[2];$/;"	m	struct:milenage_parameters	file:	access:public
ampdu	src/drivers/driver.h	/^	int (*ampdu)(void *priv, int ampdu);$/;"	m	struct:wpa_driver_ops	access:public
android_genl_ctrl_resolve	src/drivers/driver_nl80211.c	/^static int android_genl_ctrl_resolve(struct nl_handle *handle,$/;"	f	file:	signature:(struct nl_handle *handle, const char *name)
android_printf	src/utils/wpa_debug.c	/^void android_printf(int level, char *format, ...)$/;"	f	signature:(int level, char *format, ...)
anon_provisioning	src/eap_peer/eap_fast.c	/^	int anon_provisioning; \/* doing anonymous (unauthenticated)$/;"	m	struct:eap_fast_data	file:	access:public
anon_provisioning	src/eap_server/eap_server_fast.c	/^	int anon_provisioning;$/;"	m	struct:eap_fast_data	file:	access:public
anonce	src/common/wpa_common.h	/^	u8 anonce[WPA_NONCE_LEN];$/;"	m	struct:rsn_ftie	access:public
anonce	src/rsn_supp/wpa_i.h	/^	u8 anonce[WPA_NONCE_LEN]; \/* ANonce from the last 1\/4 msg *\/$/;"	m	struct:wpa_sm	access:public
anonymous_identity	src/eap_peer/eap_config.h	/^	u8 *anonymous_identity;$/;"	m	struct:eap_peer_config	access:public
anonymous_identity_len	src/eap_peer/eap_config.h	/^	size_t anonymous_identity_len;$/;"	m	struct:eap_peer_config	access:public
anqp_info_id	src/common/ieee802_11_defs.h	/^enum anqp_info_id {$/;"	g
any_id_req	src/eap_common/eap_sake_common.h	/^	const u8 *any_id_req;$/;"	m	struct:eap_sake_parse_attr	access:public
ap	src/drivers/driver_test.c	/^	int ap;$/;"	m	struct:wpa_driver_test_data	file:	access:public
ap	src/wps/wps.h	/^	int ap;$/;"	m	struct:wps_context	access:public
ap	src/wps/wps.h	/^	} ap;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_ap	access:public
ap	src/wps/wps_er.h	/^	struct dl_list ap;$/;"	m	struct:wps_er	typeref:struct:wps_er::dl_list	access:public
ap	src/wps/wps_er.h	/^	struct wps_er_ap *ap;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::wps_er_ap	access:public
ap_addr	src/drivers/wireless_copy.h	/^	struct sockaddr	ap_addr;	\/* Access point address *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::sockaddr	access:public
ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_rrb_frame	access:public
ap_ap_add	src/ap/ap_list.c	/^static struct ap_info * ap_ap_add(struct hostapd_iface *iface, const u8 *addr)$/;"	f	file:	signature:(struct hostapd_iface *iface, const u8 *addr)
ap_ap_for_each	src/ap/ap_list.c	/^int ap_ap_for_each(struct hostapd_iface *iface,$/;"	f	signature:(struct hostapd_iface *iface, int (*func)(struct ap_info *s, void *data), void *data)
ap_ap_for_each	src/ap/ap_list.h	/^int ap_ap_for_each(struct hostapd_iface *iface,$/;"	p	signature:(struct hostapd_iface *iface, int (*func)(struct ap_info *s, void *data), void *data)
ap_ap_hash_add	src/ap/ap_list.c	/^static void ap_ap_hash_add(struct hostapd_iface *iface, struct ap_info *ap)$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_ap_hash_del	src/ap/ap_list.c	/^static void ap_ap_hash_del(struct hostapd_iface *iface, struct ap_info *ap)$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_ap_iter_list_add	src/ap/ap_list.c	/^static void ap_ap_iter_list_add(struct hostapd_iface *iface,$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_ap_iter_list_del	src/ap/ap_list.c	/^static void ap_ap_iter_list_del(struct hostapd_iface *iface,$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_ap_list_add	src/ap/ap_list.c	/^static void ap_ap_list_add(struct hostapd_iface *iface, struct ap_info *ap)$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_ap_list_del	src/ap/ap_list.c	/^static void ap_ap_list_del(struct hostapd_iface *iface, struct ap_info *ap)$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_challenge	src/eap_peer/eap_leap.c	/^	u8 ap_challenge[LEAP_CHALLENGE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
ap_check_sa_query_timeout	src/ap/sta_info.c	/^int ap_check_sa_query_timeout(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_check_sa_query_timeout	src/ap/sta_info.h	/^int ap_check_sa_query_timeout(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_for_each_sta	src/ap/sta_info.c	/^int ap_for_each_sta(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, int (*cb)(struct hostapd_data *hapd, struct sta_info *sta, void *ctx), void *ctx)
ap_for_each_sta	src/ap/sta_info.h	/^int ap_for_each_sta(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, int (*cb)(struct hostapd_data *hapd, struct sta_info *sta, void *ctx), void *ctx)
ap_free_ap	src/ap/ap_list.c	/^static void ap_free_ap(struct hostapd_iface *iface, struct ap_info *ap)$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_free_sta	src/ap/sta_info.c	/^void ap_free_sta(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_free_sta	src/ap/sta_info.h	/^void ap_free_sta(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_get_ap	src/ap/ap_list.c	/^struct ap_info * ap_get_ap(struct hostapd_iface *iface, const u8 *ap)$/;"	f	signature:(struct hostapd_iface *iface, const u8 *ap)
ap_get_ap	src/ap/ap_list.h	/^struct ap_info * ap_get_ap(struct hostapd_iface *iface, const u8 *sta);$/;"	p	signature:(struct hostapd_iface *iface, const u8 *sta)
ap_get_sta	src/ap/sta_info.c	/^struct sta_info * ap_get_sta(struct hostapd_data *hapd, const u8 *sta)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *sta)
ap_get_sta	src/ap/sta_info.h	/^struct sta_info * ap_get_sta(struct hostapd_data *hapd, const u8 *sta);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *sta)
ap_handle_session_timer	src/ap/sta_info.c	/^static void ap_handle_session_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_handle_session_timer	src/ap/sta_info.c	/^static void ap_handle_session_timer(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_handle_timer	src/ap/sta_info.c	/^void ap_handle_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	signature:(void *eloop_ctx, void *timeout_ctx)
ap_handle_timer	src/ap/sta_info.h	/^void ap_handle_timer(void *eloop_ctx, void *timeout_ctx);$/;"	p	signature:(void *eloop_ctx, void *timeout_ctx)
ap_hash	src/ap/hostapd.h	/^	struct ap_info *ap_hash[STA_HASH_SIZE];$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::ap_info	access:public
ap_info	src/ap/ap_list.h	/^struct ap_info {$/;"	s
ap_info::addr	src/ap/ap_list.h	/^	u8 addr[6];$/;"	m	struct:ap_info	access:public
ap_info::already_seen	src/ap/ap_list.h	/^	int already_seen; \/* whether API call AP-NEW has already fetched$/;"	m	struct:ap_info	access:public
ap_info::beacon_int	src/ap/ap_list.h	/^	u16 beacon_int;$/;"	m	struct:ap_info	access:public
ap_info::capability	src/ap/ap_list.h	/^	u16 capability;$/;"	m	struct:ap_info	access:public
ap_info::channel	src/ap/ap_list.h	/^	int channel;$/;"	m	struct:ap_info	access:public
ap_info::datarate	src/ap/ap_list.h	/^	int datarate; \/* in 100 kbps *\/$/;"	m	struct:ap_info	access:public
ap_info::erp	src/ap/ap_list.h	/^	int erp; \/* ERP Info or -1 if ERP info element not present *\/$/;"	m	struct:ap_info	access:public
ap_info::hnext	src/ap/ap_list.h	/^	struct ap_info *hnext; \/* next entry in hash table list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
ap_info::ht_support	src/ap/ap_list.h	/^	int ht_support;$/;"	m	struct:ap_info	access:public
ap_info::iter_next	src/ap/ap_list.h	/^	struct ap_info *iter_next; \/* next entry in AP iteration list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
ap_info::iter_prev	src/ap/ap_list.h	/^	struct ap_info *iter_prev; \/* previous entry in AP iteration list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
ap_info::last_beacon	src/ap/ap_list.h	/^	os_time_t last_beacon;$/;"	m	struct:ap_info	access:public
ap_info::next	src/ap/ap_list.h	/^	struct ap_info *next; \/* next entry in AP list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
ap_info::num_beacons	src/ap/ap_list.h	/^	unsigned int num_beacons; \/* number of beacon frames received *\/$/;"	m	struct:ap_info	access:public
ap_info::prev	src/ap/ap_list.h	/^	struct ap_info *prev; \/* previous entry in AP list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
ap_info::ssi_signal	src/ap/ap_list.h	/^	int ssi_signal;$/;"	m	struct:ap_info	access:public
ap_info::ssid	src/ap/ap_list.h	/^	u8 ssid[33];$/;"	m	struct:ap_info	access:public
ap_info::ssid_len	src/ap/ap_list.h	/^	size_t ssid_len;$/;"	m	struct:ap_info	access:public
ap_info::supported_rates	src/ap/ap_list.h	/^	u8 supported_rates[WLAN_SUPP_RATES_MAX];$/;"	m	struct:ap_info	access:public
ap_info::wpa	src/ap/ap_list.h	/^	int wpa;$/;"	m	struct:ap_info	access:public
ap_iter_list	src/ap/hostapd.h	/^	struct ap_info *ap_iter_list;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::ap_info	access:public
ap_list	src/ap/hostapd.h	/^	struct ap_info *ap_list; \/* AP info list head *\/$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::ap_info	access:public
ap_list_beacon_olbc	src/ap/ap_list.c	/^static int ap_list_beacon_olbc(struct hostapd_iface *iface, struct ap_info *ap)$/;"	f	file:	signature:(struct hostapd_iface *iface, struct ap_info *ap)
ap_list_deinit	src/ap/ap_list.c	/^void ap_list_deinit(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
ap_list_deinit	src/ap/ap_list.h	/^static inline void ap_list_deinit(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
ap_list_deinit	src/ap/ap_list.h	/^void ap_list_deinit(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
ap_list_init	src/ap/ap_list.c	/^int ap_list_init(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
ap_list_init	src/ap/ap_list.h	/^int ap_list_init(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
ap_list_init	src/ap/ap_list.h	/^static inline int ap_list_init(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
ap_list_process_beacon	src/ap/ap_list.c	/^void ap_list_process_beacon(struct hostapd_iface *iface,$/;"	f	signature:(struct hostapd_iface *iface, const struct ieee80211_mgmt *mgmt, struct ieee802_11_elems *elems, struct hostapd_frame_info *fi)
ap_list_process_beacon	src/ap/ap_list.h	/^void ap_list_process_beacon(struct hostapd_iface *iface,$/;"	p	signature:(struct hostapd_iface *iface, const struct ieee80211_mgmt *mgmt, struct ieee802_11_elems *elems, struct hostapd_frame_info *fi)
ap_list_timer	src/ap/ap_list.c	/^static void ap_list_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_max_inactivity	src/ap/ap_config.h	/^	int ap_max_inactivity;      \/\/ 定义了每个站表元素的老化时间$/;"	m	struct:hostapd_bss_config	access:public
ap_oper_freq	src/drivers/driver_nl80211.c	/^	unsigned int ap_oper_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
ap_pin	src/ap/ap_config.h	/^	char *ap_pin;$/;"	m	struct:hostapd_bss_config	access:public
ap_pin	src/wps/wps_upnp.h	/^	char *ap_pin;$/;"	m	struct:upnp_wps_device_ctx	access:public
ap_pin_failures	src/ap/hostapd.h	/^	unsigned int ap_pin_failures;$/;"	m	struct:hostapd_data	access:public
ap_pin_failures_consecutive	src/ap/hostapd.h	/^	unsigned int ap_pin_failures_consecutive;$/;"	m	struct:hostapd_data	access:public
ap_pin_lockout_time	src/ap/hostapd.h	/^	unsigned int ap_pin_lockout_time;$/;"	m	struct:hostapd_data	access:public
ap_response	src/eap_peer/eap_leap.c	/^	u8 ap_response[LEAP_RESPONSE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
ap_rsn_ie	src/rsn_supp/wpa_i.h	/^	u8 *ap_wpa_ie, *ap_rsn_ie;$/;"	m	struct:wpa_sm	access:public
ap_rsn_ie_len	src/rsn_supp/wpa_i.h	/^	size_t ap_wpa_ie_len, ap_rsn_ie_len;$/;"	m	struct:wpa_sm	access:public
ap_sa_query_timer	src/ap/sta_info.c	/^static void ap_sa_query_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_sa_query_timer	src/ap/sta_info.c	/^static void ap_sa_query_timer(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_scan	src/drivers/driver_ralink.c	/^	int ap_scan;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
ap_scan_as_station	src/drivers/driver_nl80211.c	/^	enum nl80211_iftype ap_scan_as_station;$/;"	m	struct:wpa_driver_nl80211_data	typeref:enum:wpa_driver_nl80211_data::nl80211_iftype	file:	access:public
ap_settings	src/ap/ap_config.h	/^	u8 *ap_settings;$/;"	m	struct:hostapd_bss_config	access:public
ap_settings	src/wps/wps.h	/^	u8 *ap_settings;$/;"	m	struct:wps_context	access:public
ap_settings	src/wps/wps.h	/^	} ap_settings;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_ap_settings	access:public
ap_settings	src/wps/wps_er.h	/^	struct dl_list ap_settings;$/;"	m	struct:wps_er	typeref:struct:wps_er::dl_list	access:public
ap_settings	src/wps/wps_er.h	/^	struct wps_credential *ap_settings;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::wps_credential	access:public
ap_settings	src/wps/wps_er.h	/^	struct wps_credential ap_settings;$/;"	m	struct:wps_er_ap_settings	typeref:struct:wps_er_ap_settings::wps_credential	access:public
ap_settings_cb	src/wps/wps_i.h	/^	void (*ap_settings_cb)(void *ctx, const struct wps_credential *cred);$/;"	m	struct:wps_data	access:public
ap_settings_cb_ctx	src/wps/wps_i.h	/^	void *ap_settings_cb_ctx;$/;"	m	struct:wps_data	access:public
ap_settings_len	src/ap/ap_config.h	/^	size_t ap_settings_len;$/;"	m	struct:hostapd_bss_config	access:public
ap_settings_len	src/wps/wps.h	/^	size_t ap_settings_len;$/;"	m	struct:wps_context	access:public
ap_setup_locked	src/ap/ap_config.h	/^	int ap_setup_locked;$/;"	m	struct:hostapd_bss_config	access:public
ap_setup_locked	src/wps/wps.h	/^	int ap_setup_locked;$/;"	m	struct:wps_context	access:public
ap_setup_locked	src/wps/wps_i.h	/^	const u8 *ap_setup_locked; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
ap_sta_add	src/ap/sta_info.c	/^struct sta_info * ap_sta_add(struct hostapd_data *hapd, const u8 *addr)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
ap_sta_add	src/ap/sta_info.h	/^struct sta_info * ap_sta_add(struct hostapd_data *hapd, const u8 *addr);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr)
ap_sta_bind_vlan	src/ap/sta_info.c	/^int ap_sta_bind_vlan(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int old_vlanid)
ap_sta_bind_vlan	src/ap/sta_info.h	/^int ap_sta_bind_vlan(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int old_vlanid)
ap_sta_deauth_cb	src/ap/sta_info.c	/^void ap_sta_deauth_cb(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_deauth_cb	src/ap/sta_info.h	/^void ap_sta_deauth_cb(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_deauth_cb_timeout	src/ap/sta_info.c	/^static void ap_sta_deauth_cb_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_sta_deauth_cb_timeout	src/ap/sta_info.c	/^static void ap_sta_deauth_cb_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_sta_deauthenticate	src/ap/sta_info.c	/^void ap_sta_deauthenticate(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason)
ap_sta_deauthenticate	src/ap/sta_info.h	/^void ap_sta_deauthenticate(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason)
ap_sta_disassoc_cb	src/ap/sta_info.c	/^void ap_sta_disassoc_cb(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_disassoc_cb	src/ap/sta_info.h	/^void ap_sta_disassoc_cb(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_disassoc_cb_timeout	src/ap/sta_info.c	/^static void ap_sta_disassoc_cb_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_sta_disassoc_cb_timeout	src/ap/sta_info.c	/^static void ap_sta_disassoc_cb_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ap_sta_disassociate	src/ap/sta_info.c	/^void ap_sta_disassociate(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason)
ap_sta_disassociate	src/ap/sta_info.h	/^void ap_sta_disassociate(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason)
ap_sta_disconnect	src/ap/sta_info.c	/^void ap_sta_disconnect(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *addr, u16 reason)
ap_sta_disconnect	src/ap/sta_info.h	/^void ap_sta_disconnect(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *addr, u16 reason)
ap_sta_hash_add	src/ap/sta_info.c	/^void ap_sta_hash_add(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_hash_add	src/ap/sta_info.h	/^void ap_sta_hash_add(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_hash_del	src/ap/sta_info.c	/^static void ap_sta_hash_del(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_is_authorized	src/ap/sta_info.h	/^static inline int ap_sta_is_authorized(struct sta_info *sta)$/;"	f	signature:(struct sta_info *sta)
ap_sta_list_del	src/ap/sta_info.c	/^static void ap_sta_list_del(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_no_session_timeout	src/ap/sta_info.c	/^void ap_sta_no_session_timeout(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_no_session_timeout	src/ap/sta_info.h	/^void ap_sta_no_session_timeout(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_remove	src/ap/sta_info.c	/^static int ap_sta_remove(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_remove	src/ap/sta_info.c	/^static int ap_sta_remove(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_remove_in_other_bss	src/ap/sta_info.c	/^static void ap_sta_remove_in_other_bss(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_remove_in_other_bss	src/ap/sta_info.c	/^static void ap_sta_remove_in_other_bss(struct hostapd_data *hapd,$/;"	p	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_session_timeout	src/ap/sta_info.c	/^void ap_sta_session_timeout(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u32 session_timeout)
ap_sta_session_timeout	src/ap/sta_info.h	/^void ap_sta_session_timeout(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u32 session_timeout)
ap_sta_set_authorized	src/ap/sta_info.c	/^void ap_sta_set_authorized(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int authorized)
ap_sta_set_authorized	src/ap/sta_info.h	/^void ap_sta_set_authorized(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int authorized)
ap_sta_start_sa_query	src/ap/sta_info.c	/^void ap_sta_start_sa_query(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_start_sa_query	src/ap/sta_info.h	/^void ap_sta_start_sa_query(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_stop_sa_query	src/ap/sta_info.c	/^void ap_sta_stop_sa_query(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_sta_stop_sa_query	src/ap/sta_info.h	/^void ap_sta_stop_sa_query(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ap_table_expiration_time	src/ap/ap_config.h	/^	int ap_table_expiration_time;$/;"	m	struct:hostapd_config	access:public
ap_table_max_size	src/ap/ap_config.h	/^	int ap_table_max_size;$/;"	m	struct:hostapd_config	access:public
ap_unsubscribing	src/wps/wps_er.h	/^	struct dl_list ap_unsubscribing;$/;"	m	struct:wps_er	typeref:struct:wps_er::dl_list	access:public
ap_wpa_ie	src/rsn_supp/wpa_i.h	/^	u8 *ap_wpa_ie, *ap_rsn_ie;$/;"	m	struct:wpa_sm	access:public
ap_wpa_ie_len	src/rsn_supp/wpa_i.h	/^	size_t ap_wpa_ie_len, ap_rsn_ie_len;$/;"	m	struct:wpa_sm	access:public
arg	src/utils/radiotap_iter.h	/^	unsigned char *arg;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
arg_index	src/utils/radiotap_iter.h	/^	int arg_index;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
asel_capabilities	src/common/ieee802_11_defs.h	/^	u8 asel_capabilities;$/;"	m	struct:ieee80211_ht_capabilities	access:public
asn1_bit_string_to_long	src/tls/asn1.c	/^unsigned long asn1_bit_string_to_long(const u8 *buf, size_t len)$/;"	f	signature:(const u8 *buf, size_t len)
asn1_bit_string_to_long	src/tls/asn1.h	/^unsigned long asn1_bit_string_to_long(const u8 *buf, size_t len);$/;"	p	signature:(const u8 *buf, size_t len)
asn1_get_next	src/tls/asn1.c	/^int asn1_get_next(const u8 *buf, size_t len, struct asn1_hdr *hdr)$/;"	f	signature:(const u8 *buf, size_t len, struct asn1_hdr *hdr)
asn1_get_next	src/tls/asn1.h	/^int asn1_get_next(const u8 *buf, size_t len, struct asn1_hdr *hdr);$/;"	p	signature:(const u8 *buf, size_t len, struct asn1_hdr *hdr)
asn1_get_oid	src/tls/asn1.c	/^int asn1_get_oid(const u8 *buf, size_t len, struct asn1_oid *oid,$/;"	f	signature:(const u8 *buf, size_t len, struct asn1_oid *oid, const u8 **next)
asn1_get_oid	src/tls/asn1.h	/^int asn1_get_oid(const u8 *buf, size_t len, struct asn1_oid *oid,$/;"	p	signature:(const u8 *buf, size_t len, struct asn1_oid *oid, const u8 **next)
asn1_hdr	src/tls/asn1.h	/^struct asn1_hdr {$/;"	s
asn1_hdr::constructed	src/tls/asn1.h	/^	u8 identifier, class, constructed;$/;"	m	struct:asn1_hdr	typeref:class:asn1_hdr::	access:public
asn1_hdr::identifier	src/tls/asn1.h	/^	u8 identifier, class, constructed;$/;"	m	struct:asn1_hdr	access:public
asn1_hdr::length	src/tls/asn1.h	/^	unsigned int tag, length;$/;"	m	struct:asn1_hdr	access:public
asn1_hdr::payload	src/tls/asn1.h	/^	const u8 *payload;$/;"	m	struct:asn1_hdr	access:public
asn1_hdr::tag	src/tls/asn1.h	/^	unsigned int tag, length;$/;"	m	struct:asn1_hdr	access:public
asn1_oid	src/tls/asn1.h	/^struct asn1_oid {$/;"	s
asn1_oid::len	src/tls/asn1.h	/^	size_t len;$/;"	m	struct:asn1_oid	access:public
asn1_oid::oid	src/tls/asn1.h	/^	unsigned long oid[ASN1_MAX_OID_LEN];$/;"	m	struct:asn1_oid	access:public
asn1_oid_to_str	src/tls/asn1.c	/^void asn1_oid_to_str(struct asn1_oid *oid, char *buf, size_t len)$/;"	f	signature:(struct asn1_oid *oid, char *buf, size_t len)
asn1_oid_to_str	src/tls/asn1.h	/^void asn1_oid_to_str(struct asn1_oid *oid, char *buf, size_t len);$/;"	p	signature:(struct asn1_oid *oid, char *buf, size_t len)
asn1_parse_oid	src/tls/asn1.c	/^int asn1_parse_oid(const u8 *buf, size_t len, struct asn1_oid *oid)$/;"	f	signature:(const u8 *buf, size_t len, struct asn1_oid *oid)
asn1_parse_oid	src/tls/asn1.h	/^int asn1_parse_oid(const u8 *buf, size_t len, struct asn1_oid *oid);$/;"	p	signature:(const u8 *buf, size_t len, struct asn1_oid *oid)
asra	src/ap/ap_config.h	/^	int asra;$/;"	m	struct:hostapd_bss_config	access:public
assoc_bssid	src/drivers/driver_nl80211.c	/^	u8 assoc_bssid[ETH_ALEN];$/;"	m	struct:nl80211_bss_info_arg	file:	access:public
assoc_freq	src/drivers/driver_nl80211.c	/^	unsigned int assoc_freq;$/;"	m	struct:nl80211_bss_info_arg	file:	access:public
assoc_freq	src/drivers/driver_nl80211.c	/^	unsigned int assoc_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
assoc_info	src/drivers/driver.h	/^	struct assoc_info {$/;"	s	union:wpa_event_data	access:public
assoc_info	src/drivers/driver.h	/^	} assoc_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::assoc_info	access:public
assoc_p2p_ie	src/eap_server/eap.h	/^	const struct wpabuf *assoc_p2p_ie;$/;"	m	struct:eap_config	typeref:struct:eap_config::wpabuf	access:public
assoc_p2p_ie	src/eap_server/eap_i.h	/^	struct wpabuf *assoc_p2p_ie;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
assoc_reject	src/drivers/driver.h	/^	struct assoc_reject {$/;"	s	union:wpa_event_data	access:public
assoc_reject	src/drivers/driver.h	/^	} assoc_reject;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::assoc_reject	access:public
assoc_req	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_req;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon41	access:public
assoc_req_ies	src/drivers/driver_ralink.c	/^	u8 *assoc_req_ies;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
assoc_req_ies	src/drivers/driver_wext.h	/^	u8 *assoc_req_ies;$/;"	m	struct:wpa_driver_wext_data	access:public
assoc_req_ies_len	src/drivers/driver_ralink.c	/^	size_t assoc_req_ies_len;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
assoc_req_ies_len	src/drivers/driver_wext.h	/^	size_t assoc_req_ies_len;$/;"	m	struct:wpa_driver_wext_data	access:public
assoc_resp	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_resp, reassoc_resp;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon42	access:public
assoc_resp_ftie	src/ap/wpa_auth_i.h	/^	u8 *assoc_resp_ftie;$/;"	m	struct:wpa_state_machine	access:public
assoc_resp_ies	src/drivers/driver_ralink.c	/^	u8 *assoc_resp_ies;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
assoc_resp_ies	src/drivers/driver_wext.h	/^	u8 *assoc_resp_ies;$/;"	m	struct:wpa_driver_wext_data	access:public
assoc_resp_ies	src/rsn_supp/wpa_i.h	/^	u8 *assoc_resp_ies; \/* MDIE and FTIE from (Re)Association Response *\/$/;"	m	struct:wpa_sm	access:public
assoc_resp_ies_len	src/drivers/driver_ralink.c	/^	size_t assoc_resp_ies_len;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
assoc_resp_ies_len	src/drivers/driver_wext.h	/^	size_t assoc_resp_ies_len;$/;"	m	struct:wpa_driver_wext_data	access:public
assoc_resp_ies_len	src/rsn_supp/wpa_i.h	/^	size_t assoc_resp_ies_len;$/;"	m	struct:wpa_sm	access:public
assoc_sa_query_max_timeout	src/ap/ap_config.h	/^	unsigned int assoc_sa_query_max_timeout;$/;"	m	struct:hostapd_bss_config	access:public
assoc_sa_query_retry_timeout	src/ap/ap_config.h	/^	int assoc_sa_query_retry_timeout;$/;"	m	struct:hostapd_bss_config	access:public
assoc_state	src/wps/wps_i.h	/^	const u8 *assoc_state; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
assoc_wpa_ie	src/drivers/driver_test.c	/^	u8 assoc_wpa_ie[80];$/;"	m	struct:wpa_driver_test_data	file:	access:public
assoc_wpa_ie	src/rsn_supp/wpa_i.h	/^	u8 *assoc_wpa_ie; \/* Own WPA\/RSN IE from (Re)AssocReq *\/$/;"	m	struct:wpa_sm	access:public
assoc_wpa_ie_len	src/drivers/driver_test.c	/^	size_t assoc_wpa_ie_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
assoc_wpa_ie_len	src/rsn_supp/wpa_i.h	/^	size_t assoc_wpa_ie_len;$/;"	m	struct:wpa_sm	access:public
assoc_wps_ie	src/eap_server/eap.h	/^	const struct wpabuf *assoc_wps_ie;$/;"	m	struct:eap_config	typeref:struct:eap_config::wpabuf	access:public
assoc_wps_ie	src/eap_server/eap_i.h	/^	struct wpabuf *assoc_wps_ie;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
assoc_wps_ie	src/wps/wps.h	/^	const struct wpabuf *assoc_wps_ie;$/;"	m	struct:wps_config	typeref:struct:wps_config::wpabuf	access:public
associate	src/drivers/driver.h	/^	int (*associate)(void *priv,$/;"	m	struct:wpa_driver_ops	access:public
associated	src/drivers/driver_nl80211.c	/^	int associated;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
associated	src/drivers/driver_test.c	/^	int associated;$/;"	m	struct:wpa_driver_test_data	file:	access:public
assocresp_ies	src/drivers/driver.h	/^	const struct wpabuf *assocresp_ies;$/;"	m	struct:wpa_driver_ap_params	typeref:struct:wpa_driver_ap_params::wpabuf	access:public
atheros_commit	src/drivers/driver_atheros.c	/^atheros_commit(void *priv)$/;"	f	file:	signature:(void *priv)
atheros_configure_wpa	src/drivers/driver_atheros.c	/^atheros_configure_wpa(struct atheros_driver_data *drv,$/;"	f	file:	signature:(struct atheros_driver_data *drv, struct wpa_bss_params *params)
atheros_deinit	src/drivers/driver_atheros.c	/^atheros_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
atheros_del_key	src/drivers/driver_atheros.c	/^atheros_del_key(void *priv, const u8 *addr, int key_idx)$/;"	f	file:	signature:(void *priv, const u8 *addr, int key_idx)
atheros_driver_data	src/drivers/driver_atheros.c	/^struct atheros_driver_data {$/;"	s	file:
atheros_driver_data::acct_data	src/drivers/driver_atheros.c	/^	struct hostap_sta_driver_data acct_data;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::hostap_sta_driver_data	file:	access:public
atheros_driver_data::acct_mac	src/drivers/driver_atheros.c	/^	u8	acct_mac[ETH_ALEN];$/;"	m	struct:atheros_driver_data	file:	access:public
atheros_driver_data::hapd	src/drivers/driver_atheros.c	/^	struct hostapd_data *hapd;		\/* back pointer *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::hostapd_data	file:	access:public
atheros_driver_data::iface	src/drivers/driver_atheros.c	/^	char	iface[IFNAMSIZ + 1];$/;"	m	struct:atheros_driver_data	file:	access:public
atheros_driver_data::ifindex	src/drivers/driver_atheros.c	/^	int     ifindex;$/;"	m	struct:atheros_driver_data	file:	access:public
atheros_driver_data::ioctl_sock	src/drivers/driver_atheros.c	/^	int	ioctl_sock;			\/* socket for ioctl() use *\/$/;"	m	struct:atheros_driver_data	file:	access:public
atheros_driver_data::netlink	src/drivers/driver_atheros.c	/^	struct netlink_data *netlink;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::netlink_data	file:	access:public
atheros_driver_data::sock_raw	src/drivers/driver_atheros.c	/^	struct l2_packet_data *sock_raw; \/* raw 802.11 management frames *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::l2_packet_data	file:	access:public
atheros_driver_data::sock_recv	src/drivers/driver_atheros.c	/^	struct l2_packet_data *sock_recv;	\/* raw packet recv socket *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::l2_packet_data	file:	access:public
atheros_driver_data::sock_xmit	src/drivers/driver_atheros.c	/^	struct l2_packet_data *sock_xmit;	\/* raw packet xmit socket *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::l2_packet_data	file:	access:public
atheros_driver_data::we_version	src/drivers/driver_atheros.c	/^	int	we_version;$/;"	m	struct:atheros_driver_data	file:	access:public
atheros_driver_data::wpa_ie	src/drivers/driver_atheros.c	/^	struct wpabuf *wpa_ie;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::wpabuf	file:	access:public
atheros_driver_data::wps_beacon_ie	src/drivers/driver_atheros.c	/^	struct wpabuf *wps_beacon_ie;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::wpabuf	file:	access:public
atheros_driver_data::wps_probe_resp_ie	src/drivers/driver_atheros.c	/^	struct wpabuf *wps_probe_resp_ie;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::wpabuf	file:	access:public
atheros_flush	src/drivers/driver_atheros.c	/^atheros_flush(void *priv)$/;"	f	file:	signature:(void *priv)
atheros_get_seqnum	src/drivers/driver_atheros.c	/^atheros_get_seqnum(const char *ifname, void *priv, const u8 *addr, int idx,$/;"	f	file:	signature:(const char *ifname, void *priv, const u8 *addr, int idx, u8 *seq)
atheros_get_ssid	src/drivers/driver_atheros.c	/^atheros_get_ssid(void *priv, u8 *buf, int len)$/;"	f	file:	signature:(void *priv, u8 *buf, int len)
atheros_get_we_version	src/drivers/driver_atheros.c	/^atheros_get_we_version(struct atheros_driver_data *drv)$/;"	f	file:	signature:(struct atheros_driver_data *drv)
atheros_init	src/drivers/driver_atheros.c	/^atheros_init(struct hostapd_data *hapd, struct wpa_init_params *params)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
atheros_new_sta	src/drivers/driver_atheros.c	/^atheros_new_sta(struct atheros_driver_data *drv, u8 addr[IEEE80211_ADDR_LEN])$/;"	f	file:	signature:(struct atheros_driver_data *drv, u8 addr[IEEE80211_ADDR_LEN])
atheros_raw_receive	src/drivers/driver_atheros.c	/^static void atheros_raw_receive(void *ctx, const u8 *src_addr, const u8 *buf,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
atheros_read_sta_driver_data	src/drivers/driver_atheros.c	/^atheros_read_sta_driver_data(void *priv, struct hostap_sta_driver_data *data,$/;"	f	file:	signature:(void *priv, struct hostap_sta_driver_data *data, const u8 *addr)
atheros_receive_probe_req	src/drivers/driver_atheros.c	/^static int atheros_receive_probe_req(struct atheros_driver_data *drv)$/;"	f	file:	signature:(struct atheros_driver_data *drv)
atheros_send_eapol	src/drivers/driver_atheros.c	/^atheros_send_eapol(void *priv, const u8 *addr, const u8 *data, size_t data_len,$/;"	f	file:	signature:(void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
atheros_set_ap	src/drivers/driver_atheros.c	/^static int atheros_set_ap(void *priv, struct wpa_driver_ap_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_driver_ap_params *params)
atheros_set_ap_wps_ie	src/drivers/driver_atheros.c	/^atheros_set_ap_wps_ie(void *priv, const struct wpabuf *beacon,$/;"	f	file:	signature:(void *priv, const struct wpabuf *beacon, const struct wpabuf *proberesp, const struct wpabuf *assocresp)
atheros_set_ap_wps_ie	src/drivers/driver_atheros.c	852;"	d	file:
atheros_set_authmode	src/drivers/driver_atheros.c	/^static int atheros_set_authmode(void *priv, int auth_algs)$/;"	f	file:	signature:(void *priv, int auth_algs)
atheros_set_countermeasures	src/drivers/driver_atheros.c	/^atheros_set_countermeasures(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
atheros_set_ieee8021x	src/drivers/driver_atheros.c	/^atheros_set_ieee8021x(void *priv, struct wpa_bss_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_bss_params *params)
atheros_set_key	src/drivers/driver_atheros.c	/^atheros_set_key(const char *ifname, void *priv, enum wpa_alg alg,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
atheros_set_opt_ie	src/drivers/driver_atheros.c	/^atheros_set_opt_ie(void *priv, const u8 *ie, size_t ie_len)$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t ie_len)
atheros_set_privacy	src/drivers/driver_atheros.c	/^atheros_set_privacy(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
atheros_set_privacy	src/drivers/driver_atheros.c	/^static int atheros_set_privacy(void *priv, int enabled);$/;"	p	file:	signature:(void *priv, int enabled)
atheros_set_ssid	src/drivers/driver_atheros.c	/^atheros_set_ssid(void *priv, const u8 *buf, int len)$/;"	f	file:	signature:(void *priv, const u8 *buf, int len)
atheros_set_sta_authorized	src/drivers/driver_atheros.c	/^atheros_set_sta_authorized(void *priv, const u8 *addr, int authorized)$/;"	f	file:	signature:(void *priv, const u8 *addr, int authorized)
atheros_set_wps_ie	src/drivers/driver_atheros.c	/^atheros_set_wps_ie(void *priv, const u8 *ie, size_t len, u32 frametype)$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t len, u32 frametype)
atheros_sta_clear_stats	src/drivers/driver_atheros.c	/^atheros_sta_clear_stats(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
atheros_sta_deauth	src/drivers/driver_atheros.c	/^atheros_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
atheros_sta_deauth	src/drivers/driver_atheros.c	/^static int atheros_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	p	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
atheros_sta_disassoc	src/drivers/driver_atheros.c	/^atheros_sta_disassoc(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
atheros_sta_set_flags	src/drivers/driver_atheros.c	/^atheros_sta_set_flags(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int total_flags, int flags_or, int flags_and)
atheros_wireless_event_init	src/drivers/driver_atheros.c	/^atheros_wireless_event_init(struct atheros_driver_data *drv)$/;"	f	file:	signature:(struct atheros_driver_data *drv)
atheros_wireless_event_rtm_newlink	src/drivers/driver_atheros.c	/^atheros_wireless_event_rtm_newlink(void *ctx,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
atheros_wireless_event_wireless	src/drivers/driver_atheros.c	/^atheros_wireless_event_wireless(struct atheros_driver_data *drv,$/;"	f	file:	signature:(struct atheros_driver_data *drv, char *data, int len)
atheros_wireless_event_wireless_custom	src/drivers/driver_atheros.c	/^atheros_wireless_event_wireless_custom(struct atheros_driver_data *drv,$/;"	f	file:	signature:(struct atheros_driver_data *drv, char *custom, char *end)
athr_get_ioctl_name	src/drivers/driver_atheros.c	/^static const char * athr_get_ioctl_name(int op)$/;"	f	file:	signature:(int op)
athr_get_param_name	src/drivers/driver_atheros.c	/^static const char * athr_get_param_name(int op)$/;"	f	file:	signature:(int op)
attempts	src/radius/radius_client.c	/^	int attempts;$/;"	m	struct:radius_msg_list	file:	access:public
attr	src/radius/radius.h	/^	struct radius_attr_data *attr;$/;"	m	struct:radius_class_data	typeref:struct:radius_class_data::radius_attr_data	access:public
attr	src/tls/x509v3.h	/^	struct x509_name_attr attr[X509_MAX_NAME_ATTRIBUTES];$/;"	m	struct:x509_name	typeref:struct:x509_name::x509_name_attr	access:public
attr_pos	src/radius/radius.c	/^	size_t *attr_pos;       \/\/ 记录每条属性距离属性头偏移量的数组(注意：这个数组由初始化时设置了固定长度，使用时不一定装满的)$/;"	m	struct:radius_msg	file:	access:public
attr_size	src/radius/radius.c	/^	size_t attr_size;       \/\/ 记录上面这个数组的元素个数,一般就是RADIUS_DEFAULT_ATTR_COUNT$/;"	m	struct:radius_msg	file:	access:public
attr_used	src/radius/radius.c	/^	size_t attr_used;   \/\/ 此radius消息中属性项的数量$/;"	m	struct:radius_msg	file:	access:public
auth	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED auth;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon39	access:public
auth	src/common/wpa_common.h	/^		} auth;$/;"	m	union:wpa_ptk::__anon33	typeref:struct:wpa_ptk::__anon33::__anon34	access:public
auth	src/drivers/driver.h	/^	unsigned int auth;$/;"	m	struct:wpa_driver_capa	access:public
auth	src/drivers/driver.h	/^	} auth;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::auth_info	access:public
auth	src/eap_common/ikev2_common.h	/^	const u8 *auth;$/;"	m	struct:ikev2_payloads	access:public
auth	src/eap_peer/eap_sake.c	/^		u8 auth[EAP_SAKE_TEK_AUTH_LEN];$/;"	m	struct:eap_sake_data::__anon165	file:	access:public
auth	src/eap_server/eap_server_sake.c	/^		u8 auth[EAP_SAKE_TEK_AUTH_LEN];$/;"	m	struct:eap_sake_data::__anon128	file:	access:public
authAbort	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authAbort;  \/\/ AUTH_PAE SM 进入ABORTING状态时设置TRUE；BE_AUTH SM 进入INITIALIZE状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
authAuthEapLogoffWhileAuthenticated	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapLogoffWhileAuthenticated;    \/\/ 记录了在AUTHENTICATED状态下收到eapol-start报文而进入DISCONNECTED状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthEapLogoffWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapLogoffWhileAuthenticating;   \/\/ 记录了在AUTHENTICATING状态下收到eapol-logoff报文而进入ABORTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthEapStartsWhileAuthenticated	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapStartsWhileAuthenticated;    \/\/ 记录了在AUTHENTICATED状态下收到eapol-start报文而进入CONNECTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthEapStartsWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapStartsWhileAuthenticating;   \/\/ 记录了在AUTHENTICATING状态下收到eapol-start报文而进入ABORTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthFailWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthFailWhileAuthenticating;        \/\/ 记录了在AUTHENTICATING状态下，因为authFail标志被置为TRUE,而进入HELD状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthReauthsWhileAuthenticated	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthReauthsWhileAuthenticated;      \/\/ 记录了在AUTHENTICATED状态下，因为reAuthenticate标志被置为TRUE,而进入RESTART状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthSuccessesWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthSuccessesWhileAuthenticating;   \/\/ 记录了在AUTHENTICATING状态下，因为authSuccess标志被置为TRUE,而进入AUTHENTICATED状态的次数$/;"	m	struct:eapol_state_machine	access:public
authAuthTimeoutsWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthTimeoutsWhileAuthenticating;    \/\/ 记录了在AUTHENTICATING状态下，因为authTimeout标志被置为TRUE,而进入ABORTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
authEapLogoffsWhileConnecting	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authEapLogoffsWhileConnecting;          \/\/ 记录了在CONNECTING状态下收到eapol-logoff报文而进入DISCONNECTED状态的次数$/;"	m	struct:eapol_state_machine	access:public
authEntersAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authEntersAuthenticating;               \/\/ 记录了在CONNECTING状态下收到eap-resp\/identify报文而进入AUTHENTICATING状态的次数$/;"	m	struct:eapol_state_machine	access:public
authEntersConnecting	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authEntersConnecting;                   \/\/ 记录了进入CONNECTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
authFail	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authFail;   \/\/ BE_AUTH SM 进入FAIL状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
authPeriod	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int authPeriod; \/* dot1xSuppAuthPeriod *\/$/;"	m	struct:eapol_sm	file:	access:public
authPortStatus	src/eapol_auth/eapol_auth_sm_i.h	/^	PortState authPortStatus;   \/\/ 端口当前状态,由AUTH_PAE SM 完全控制$/;"	m	struct:eapol_state_machine	access:public
authStart	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authStart;      \/\/ AUTH_PAE SM 进入AUTHENTICATING状态时设置TRUE；BE_AUTH SM 进入IDLE状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
authSuccess	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authSuccess;    \/\/ BE_AUTH SM 进入SUCCESS状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
authTimeout	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authTimeout;    \/\/ BE_AUTH SM 进入TIMEOUT状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
authWhile	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int authWhile;$/;"	m	struct:eapol_sm	file:	access:public
auth_alg	src/ap/sta_info.h	/^	u16 auth_alg;$/;"	m	struct:sta_info	access:public
auth_alg	src/common/ieee802_11_defs.h	/^			le16 auth_alg;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
auth_alg	src/common/privsep_commands.h	/^	int auth_alg;$/;"	m	struct:privsep_cmd_associate	access:public
auth_alg	src/drivers/driver.h	/^	int auth_alg;$/;"	m	struct:wpa_driver_associate_params	access:public
auth_alg	src/drivers/driver.h	/^	int auth_alg;$/;"	m	struct:wpa_driver_auth_params	access:public
auth_alg_fallback	src/drivers/driver_wext.h	/^	int auth_alg_fallback;$/;"	m	struct:wpa_driver_wext_data	access:public
auth_algs	src/ap/ap_config.h	/^	int auth_algs; \/* bitfield of allowed IEEE 802.11 authentication$/;"	m	struct:hostapd_bss_config	access:public
auth_algs	src/drivers/driver.h	/^	unsigned int auth_algs;$/;"	m	struct:wpa_driver_ap_params	access:public
auth_bssid	src/drivers/driver_nl80211.c	/^	u8 auth_bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
auth_challenge	src/eap_peer/eap_i.h	/^	u8 *peer_challenge, *auth_challenge;$/;"	m	struct:eap_sm	access:public
auth_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 *auth_challenge;$/;"	m	struct:eap_mschapv2_data	file:	access:public
auth_challenge	src/eap_server/eap_i.h	/^	u8 *auth_challenge;$/;"	m	struct:eap_sm	access:public
auth_challenge	src/eap_server/eap_server_mschapv2.c	/^	u8 auth_challenge[CHALLENGE_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
auth_challenge_from_tls	src/eap_server/eap_server_mschapv2.c	/^	int auth_challenge_from_tls;$/;"	m	struct:eap_mschapv2_data	file:	access:public
auth_handlers	src/radius/radius_client.c	/^	struct radius_rx_handler *auth_handlers;$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::radius_rx_handler	file:	access:public
auth_info	src/drivers/driver.h	/^	struct auth_info {$/;"	s	union:wpa_event_data	access:public
auth_key_tx_state	src/eapol_auth/eapol_auth_sm_i.h	/^	} auth_key_tx_state;    \/\/ 认证者key发送状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon69	access:public
auth_key_tx_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * auth_key_tx_state_txt(int s)$/;"	f	file:	signature:(int s)
auth_len	src/eap_common/ikev2_common.h	/^	size_t auth_len;$/;"	m	struct:ikev2_payloads	access:public
auth_msg	src/ap/ieee802_11_auth.c	/^	u8 *auth_msg; \/* IEEE 802.11 authentication frame from station *\/$/;"	m	struct:hostapd_acl_query_data	file:	access:public
auth_msg_len	src/ap/ieee802_11_auth.c	/^	size_t auth_msg_len;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
auth_pae_state	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_FORCE_UNAUTH, AUTH_PAE_RESTART } auth_pae_state;    \/\/ Authenticator PAE状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon66	access:public
auth_pae_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * auth_pae_state_txt(int s)$/;"	f	file:	signature:(int s)
auth_port	src/radius/radius_server.h	/^	int auth_port;$/;"	m	struct:radius_server_conf	access:public
auth_response	src/eap_peer/eap_mschapv2.c	/^	u8 auth_response[MSCHAPV2_AUTH_RESPONSE_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
auth_response	src/eap_peer/eap_ttls.c	/^	u8 auth_response[MSCHAPV2_AUTH_RESPONSE_LEN];$/;"	m	struct:eap_ttls_data	file:	access:public
auth_response	src/eap_server/eap_server_mschapv2.c	/^	u8 auth_response[20];$/;"	m	struct:eap_mschapv2_data	file:	access:public
auth_response_valid	src/eap_peer/eap_mschapv2.c	/^	int auth_response_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
auth_response_valid	src/eap_peer/eap_ttls.c	/^	int auth_response_valid;$/;"	m	struct:eap_ttls_data	file:	access:public
auth_serv_sock	src/radius/radius_client.c	/^	int auth_serv_sock; \/\/ radius认证服务用的IPV4 socket$/;"	m	struct:radius_client_data	file:	access:public
auth_serv_sock6	src/radius/radius_client.c	/^	int auth_serv_sock6;    \/\/ radius认证服务用的IPV6 socket$/;"	m	struct:radius_client_data	file:	access:public
auth_server	src/radius/radius_client.h	/^	struct hostapd_radius_server *auth_server;$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
auth_servers	src/radius/radius_client.h	/^	struct hostapd_radius_server *auth_servers; \/\/ radius认证服务器信息管理块数组$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
auth_shared_key	src/ap/ieee802_11.c	/^static u16 auth_shared_key(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 auth_transaction, const u8 *challenge, int iswep)
auth_sock	src/radius/radius_client.c	/^	int auth_sock;  \/\/ 当前选用的radius认证服务socket$/;"	m	struct:radius_client_data	file:	access:public
auth_sock	src/radius/radius_server.c	/^	int auth_sock;$/;"	m	struct:radius_server_data	file:	access:public
auth_transaction	src/common/ieee802_11_defs.h	/^			le16 auth_transaction;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
auth_transaction	src/drivers/driver.h	/^		u16 auth_transaction;$/;"	m	struct:wpa_event_data::auth_info	access:public
auth_type	src/drivers/driver.h	/^		u16 auth_type;$/;"	m	struct:wpa_event_data::auth_info	access:public
auth_type	src/wps/wps.h	/^	u16 auth_type;$/;"	m	struct:wps_credential	access:public
auth_type	src/wps/wps_i.h	/^	const u8 *auth_type; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
auth_type	src/wps/wps_i.h	/^	u16 auth_type;$/;"	m	struct:wps_data	access:public
auth_type_flags	src/wps/wps_i.h	/^	const u8 *auth_type_flags; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
auth_types	src/wps/wps.h	/^	u16 auth_types;$/;"	m	struct:wps_context	access:public
authenticate	src/drivers/driver.h	/^	int (*authenticate)(void *priv,$/;"	m	struct:wpa_driver_ops	access:public
authenticator	src/radius/radius.h	/^	u8 authenticator[16];   \/\/ 16字节验证字域。在请求报文中表示随机码;在响应报文中表示经过MD5加密后的验证码,用于鉴别响应报文的合法性$/;"	m	struct:radius_hdr	access:public
authenticator	src/wps/wps_i.h	/^	const u8 *authenticator; \/* WPS_AUTHENTICATOR_LEN (8) octets *\/$/;"	m	struct:wps_parse_attr	access:public
authkey	src/wps/wps_i.h	/^	u8 authkey[WPS_AUTHKEY_LEN];$/;"	m	struct:wps_data	access:public
authorized_macs	src/wps/wps_i.h	/^	const u8 *authorized_macs; \/* <= 30 octets *\/$/;"	m	struct:wps_parse_attr	access:public
authorized_macs	src/wps/wps_registrar.c	/^	u8 authorized_macs[WPS_MAX_AUTHORIZED_MACS][ETH_ALEN];$/;"	m	struct:wps_registrar	file:	access:public
authorized_macs	src/wps/wps_upnp_i.h	/^	u8 authorized_macs[WPS_MAX_AUTHORIZED_MACS][ETH_ALEN];$/;"	m	struct:subscription	access:public
authorized_macs_len	src/wps/wps_i.h	/^	size_t authorized_macs_len;$/;"	m	struct:wps_parse_attr	access:public
authorized_macs_union	src/wps/wps_registrar.c	/^	u8 authorized_macs_union[WPS_MAX_AUTHORIZED_MACS][ETH_ALEN];$/;"	m	struct:wps_registrar	file:	access:public
authsrv_deinit	src/ap/authsrv.c	/^void authsrv_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
authsrv_deinit	src/ap/authsrv.h	/^void authsrv_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
authsrv_init	src/ap/authsrv.c	/^int authsrv_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
authsrv_init	src/ap/authsrv.h	/^int authsrv_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
autn	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
autn	src/eap_peer/eap_aka.c	/^	u8 rand[EAP_AKA_RAND_LEN], autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
autn	src/eap_server/eap_server_aka.c	/^	u8 autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
autn	src/eap_server/eap_sim_db.c	/^			u8 autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
auts	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
auts	src/eap_peer/eap_aka.c	/^	u8 auts[EAP_AKA_AUTS_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
auts_reported	src/eap_server/eap_server_aka.c	/^	int auts_reported; \/* whether the current AUTS has been reported to the$/;"	m	struct:eap_aka_data	file:	access:public
avg_qual	src/drivers/wireless_copy.h	/^	struct iw_quality	avg_qual;	\/* Quality of the link *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_quality	access:public
avp_code	src/eap_common/eap_ttls.h	/^	be32 avp_code;$/;"	m	struct:ttls_avp	access:public
avp_code	src/eap_common/eap_ttls.h	/^	be32 avp_code;$/;"	m	struct:ttls_avp_vendor	access:public
avp_length	src/eap_common/eap_ttls.h	/^	be32 avp_length; \/* 8-bit flags, 24-bit length;$/;"	m	struct:ttls_avp	access:public
avp_length	src/eap_common/eap_ttls.h	/^	be32 avp_length; \/* 8-bit flags, 24-bit length;$/;"	m	struct:ttls_avp_vendor	access:public
bAddWepKey	src/drivers/driver_ralink.c	/^	BOOLEAN	bAddWepKey;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
bInitialized	src/drivers/driver_ndis.c	/^	BOOL bInitialized;$/;"	m	struct:__anon97	file:	access:public
bRestrictedScan	src/drivers/driver_ndis.c	/^	BOOLEAN bRestrictedScan;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
bUseRequestIE	src/drivers/driver_ndis.c	/^	BOOLEAN bUseRequestIE;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
backendAccessChallenges	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendAccessChallenges;                                                          $/;"	m	struct:eapol_state_machine	access:public
backendAuthFails	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendAuthFails;                   \/\/ 记录了BE_AUTH SM 从RESPONSE进入FAIL的数量$/;"	m	struct:eapol_state_machine	access:public
backendAuthSuccesses	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendAuthSuccesses;                                                             $/;"	m	struct:eapol_state_machine	access:public
backendOtherRequestsToSupplicant	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendOtherRequestsToSupplicant;   \/\/ 记录了BE_AUTH SM 发送给请求者request的数量$/;"	m	struct:eapol_state_machine	access:public
backendResponses	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendResponses;                   \/\/ 记录了BE_AUTH SM 发送给EAP层response的数量$/;"	m	struct:eapol_state_machine	access:public
backend_auth	src/eap_server/eap.h	/^	Boolean backend_auth;$/;"	m	struct:eap_config	access:public
backend_auth	src/eap_server/eap_i.h	/^	Boolean backend_auth;$/;"	m	struct:eap_sm	access:public
bad_authenticators	src/radius/radius_client.h	/^	u32 bad_authenticators;$/;"	m	struct:hostapd_radius_server	access:public
bad_authenticators	src/radius/radius_server.c	/^	u32 bad_authenticators;$/;"	m	struct:radius_server_counters	file:	access:public
base64_decode	src/utils/base64.c	/^unsigned char * base64_decode(const unsigned char *src, size_t len,$/;"	f	signature:(const unsigned char *src, size_t len, size_t *out_len)
base64_decode	src/utils/base64.h	/^unsigned char * base64_decode(const unsigned char *src, size_t len,$/;"	p	signature:(const unsigned char *src, size_t len, size_t *out_len)
base64_encode	src/utils/base64.c	/^unsigned char * base64_encode(const unsigned char *src, size_t len,$/;"	f	signature:(const unsigned char *src, size_t len, size_t *out_len)
base64_encode	src/utils/base64.h	/^unsigned char * base64_encode(const unsigned char *src, size_t len,$/;"	p	signature:(const unsigned char *src, size_t len, size_t *out_len)
base64_table	src/utils/base64.c	/^static const unsigned char base64_table[65] =$/;"	v	file:
basic_rates	src/ap/ap_config.h	/^	int *basic_rates;$/;"	m	struct:hostapd_config	access:public
basic_set	src/common/ieee802_11_defs.h	/^	u8 basic_set[16];$/;"	m	struct:ieee80211_ht_operation	access:public
be16	src/utils/common.h	/^typedef u16 __bitwise be16;$/;"	t
be32	src/utils/common.h	/^typedef u32 __bitwise be32;$/;"	t
be64	src/utils/common.h	/^typedef u64 __bitwise be64;$/;"	t
be_auth_state	src/eapol_auth/eapol_auth_sm_i.h	/^	} be_auth_state;    \/\/ 后台认证状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon67	access:public
be_auth_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * be_auth_state_txt(int s)$/;"	f	file:	signature:(int s)
be_to_host16	src/utils/common.h	188;"	d
be_to_host16	src/utils/common.h	216;"	d
be_to_host16	src/utils/common.h	229;"	d
be_to_host32	src/utils/common.h	191;"	d
be_to_host32	src/utils/common.h	220;"	d
be_to_host32	src/utils/common.h	232;"	d
be_to_host64	src/utils/common.h	224;"	d
be_to_host64	src/utils/common.h	236;"	d
beacon	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED beacon;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon45	access:public
beacon	src/drivers/wireless_copy.h	/^	__u32		beacon;		\/* Missed beacons\/superframe *\/$/;"	m	struct:iw_missed	access:public
beacon_ie_len	src/drivers/driver.h	/^	size_t beacon_ie_len;$/;"	m	struct:wpa_scan_res	access:public
beacon_ies	src/drivers/driver.h	/^		const u8 *beacon_ies;$/;"	m	struct:wpa_event_data::assoc_info	access:public
beacon_ies	src/drivers/driver.h	/^	const struct wpabuf *beacon_ies;$/;"	m	struct:wpa_driver_ap_params	typeref:struct:wpa_driver_ap_params::wpabuf	access:public
beacon_ies_len	src/drivers/driver.h	/^		size_t beacon_ies_len;$/;"	m	struct:wpa_event_data::assoc_info	access:public
beacon_int	src/ap/ap_config.h	/^	u16 beacon_int;$/;"	m	struct:hostapd_config	access:public
beacon_int	src/ap/ap_list.h	/^	u16 beacon_int;$/;"	m	struct:ap_info	access:public
beacon_int	src/common/ieee802_11_defs.h	/^			le16 beacon_int;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
beacon_int	src/common/ieee802_11_defs.h	/^			le16 beacon_int;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
beacon_int	src/drivers/Apple80211.h	/^	UInt16 beacon_int;$/;"	m	struct:WirelessNetworkInfo	access:public
beacon_int	src/drivers/driver.h	/^	int beacon_int;$/;"	m	struct:wpa_driver_ap_params	access:public
beacon_int	src/drivers/driver.h	/^	u16 beacon_int;$/;"	m	struct:wpa_scan_res	access:public
beacon_set	src/drivers/driver_nl80211.c	/^	unsigned int beacon_set:1;$/;"	m	struct:i802_bss	file:	access:public
beacon_set_done	src/ap/hostapd.h	/^	int beacon_set_done;$/;"	m	struct:hostapd_data	access:public
beacon_update	src/p2p/p2p_group.c	/^	int beacon_update;$/;"	m	struct:p2p_group	file:	access:public
best_chan	src/drivers/driver.h	/^	} best_chan;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::best_channel	access:public
best_channel	src/drivers/driver.h	/^	struct best_channel {$/;"	s	union:wpa_event_data	access:public
best_freq_24	src/p2p/p2p_i.h	/^	int best_freq_24;$/;"	m	struct:p2p_data	access:public
best_freq_5	src/p2p/p2p_i.h	/^	int best_freq_5;$/;"	m	struct:p2p_data	access:public
best_freq_overall	src/p2p/p2p_i.h	/^	int best_freq_overall;$/;"	m	struct:p2p_data	access:public
bfd_data	src/utils/trace.c	/^struct bfd_data {$/;"	s	file:
bfd_data::filename	src/utils/trace.c	/^	const char *filename;$/;"	m	struct:bfd_data	file:	access:public
bfd_data::found	src/utils/trace.c	/^	bfd_boolean found;$/;"	m	struct:bfd_data	file:	access:public
bfd_data::function	src/utils/trace.c	/^	const char *function;$/;"	m	struct:bfd_data	file:	access:public
bfd_data::line	src/utils/trace.c	/^	unsigned int line;$/;"	m	struct:bfd_data	file:	access:public
bfd_data::pc	src/utils/trace.c	/^	bfd_vma pc;$/;"	m	struct:bfd_data	file:	access:public
bidding	src/eap_common/eap_sim_common.h	/^	const u8 *bidding;$/;"	m	struct:eap_sim_attrs	access:public
bigbyte	src/crypto/des-internal.c	/^static const u32 bigbyte[24] =$/;"	v	file:
bignum_add	src/tls/bignum.c	/^int bignum_add(const struct bignum *a, const struct bignum *b,$/;"	f	signature:(const struct bignum *a, const struct bignum *b, struct bignum *c)
bignum_add	src/tls/bignum.h	/^int bignum_add(const struct bignum *a, const struct bignum *b,$/;"	p	signature:(const struct bignum *a, const struct bignum *b, struct bignum *c)
bignum_cmp	src/tls/bignum.c	/^int bignum_cmp(const struct bignum *a, const struct bignum *b)$/;"	f	signature:(const struct bignum *a, const struct bignum *b)
bignum_cmp	src/tls/bignum.h	/^int bignum_cmp(const struct bignum *a, const struct bignum *b);$/;"	p	signature:(const struct bignum *a, const struct bignum *b)
bignum_cmp_d	src/tls/bignum.c	/^int bignum_cmp_d(const struct bignum *a, unsigned long b)$/;"	f	signature:(const struct bignum *a, unsigned long b)
bignum_cmp_d	src/tls/bignum.h	/^int bignum_cmp_d(const struct bignum *a, unsigned long b);$/;"	p	signature:(const struct bignum *a, unsigned long b)
bignum_deinit	src/tls/bignum.c	/^void bignum_deinit(struct bignum *n)$/;"	f	signature:(struct bignum *n)
bignum_deinit	src/tls/bignum.h	/^void bignum_deinit(struct bignum *n);$/;"	p	signature:(struct bignum *n)
bignum_exptmod	src/tls/bignum.c	/^int bignum_exptmod(const struct bignum *a, const struct bignum *b,$/;"	f	signature:(const struct bignum *a, const struct bignum *b, const struct bignum *c, struct bignum *d)
bignum_exptmod	src/tls/bignum.h	/^int bignum_exptmod(const struct bignum *a, const struct bignum *b,$/;"	p	signature:(const struct bignum *a, const struct bignum *b, const struct bignum *c, struct bignum *d)
bignum_get_unsigned_bin	src/tls/bignum.c	/^int bignum_get_unsigned_bin(const struct bignum *n, u8 *buf, size_t *len)$/;"	f	signature:(const struct bignum *n, u8 *buf, size_t *len)
bignum_get_unsigned_bin	src/tls/bignum.h	/^int bignum_get_unsigned_bin(const struct bignum *n, u8 *buf, size_t *len);$/;"	p	signature:(const struct bignum *n, u8 *buf, size_t *len)
bignum_get_unsigned_bin_len	src/tls/bignum.c	/^size_t bignum_get_unsigned_bin_len(struct bignum *n)$/;"	f	signature:(struct bignum *n)
bignum_get_unsigned_bin_len	src/tls/bignum.h	/^size_t bignum_get_unsigned_bin_len(struct bignum *n);$/;"	p	signature:(struct bignum *n)
bignum_init	src/tls/bignum.c	/^struct bignum * bignum_init(void)$/;"	f	signature:(void)
bignum_init	src/tls/bignum.h	/^struct bignum * bignum_init(void);$/;"	p	signature:(void)
bignum_mul	src/tls/bignum.c	/^int bignum_mul(const struct bignum *a, const struct bignum *b,$/;"	f	signature:(const struct bignum *a, const struct bignum *b, struct bignum *c)
bignum_mul	src/tls/bignum.h	/^int bignum_mul(const struct bignum *a, const struct bignum *b,$/;"	p	signature:(const struct bignum *a, const struct bignum *b, struct bignum *c)
bignum_mulmod	src/tls/bignum.c	/^int bignum_mulmod(const struct bignum *a, const struct bignum *b,$/;"	f	signature:(const struct bignum *a, const struct bignum *b, const struct bignum *c, struct bignum *d)
bignum_mulmod	src/tls/bignum.h	/^int bignum_mulmod(const struct bignum *a, const struct bignum *b,$/;"	p	signature:(const struct bignum *a, const struct bignum *b, const struct bignum *c, struct bignum *d)
bignum_set_unsigned_bin	src/tls/bignum.c	/^int bignum_set_unsigned_bin(struct bignum *n, const u8 *buf, size_t len)$/;"	f	signature:(struct bignum *n, const u8 *buf, size_t len)
bignum_set_unsigned_bin	src/tls/bignum.h	/^int bignum_set_unsigned_bin(struct bignum *n, const u8 *buf, size_t len);$/;"	p	signature:(struct bignum *n, const u8 *buf, size_t len)
bignum_sub	src/tls/bignum.c	/^int bignum_sub(const struct bignum *a, const struct bignum *b,$/;"	f	signature:(const struct bignum *a, const struct bignum *b, struct bignum *c)
bignum_sub	src/tls/bignum.h	/^int bignum_sub(const struct bignum *a, const struct bignum *b,$/;"	p	signature:(const struct bignum *a, const struct bignum *b, struct bignum *c)
binding_nonce	src/eap_peer/eap_peap.c	/^	u8 binding_nonce[32];$/;"	m	struct:eap_peap_data	file:	access:public
binding_nonce	src/eap_server/eap_server_peap.c	/^	u8 binding_nonce[32];$/;"	m	struct:eap_peap_data	file:	access:public
bitmap_shifter	src/utils/radiotap_iter.h	/^	uint32_t bitmap_shifter;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
bitrate	src/drivers/wireless_copy.h	/^	__s32		bitrate[IW_MAX_BITRATES];	\/* list, in bps *\/$/;"	m	struct:iw_range	access:public
bitrate	src/drivers/wireless_copy.h	/^	struct iw_param	bitrate;	\/* default bit rate *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
bits	src/crypto/md5_i.h	/^	u32 bits[2];$/;"	m	struct:MD5Context	access:public
blk	src/crypto/sha1-internal.c	141;"	d	file:
blk0	src/crypto/sha1-internal.c	136;"	d	file:
blk0	src/crypto/sha1-internal.c	139;"	d	file:
block_size	src/crypto/crypto_internal-cipher.c	/^			size_t block_size;$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
block_size	src/eap_common/ikev2_common.h	/^	size_t block_size;$/;"	m	struct:ikev2_encr_alg	access:public
block_size	src/tls/tlsv1_common.h	/^	size_t block_size; \/* also iv_size *\/$/;"	m	struct:tls_cipher_data	access:public
blocked	src/drivers/rfkill.c	/^	int blocked;$/;"	m	struct:rfkill_data	file:	access:public
blocked_cb	src/drivers/rfkill.h	/^	void (*blocked_cb)(void *ctx);$/;"	m	struct:rfkill_config	access:public
bn_reverse	src/tls/libtommath.c	/^static void bn_reverse (unsigned char *s, int len)$/;"	f	file:	signature:(unsigned char *s, int len)
bnctx	src/eap_peer/eap_pwd.c	/^	BN_CTX *bnctx;$/;"	m	struct:eap_pwd_data	file:	access:public
bnctx	src/eap_server/eap_server_pwd.c	/^	BN_CTX *bnctx;$/;"	m	struct:eap_pwd_data	file:	access:public
body	src/wps/http_client.c	/^	struct wpabuf body;$/;"	m	struct:http_client	typeref:struct:http_client::wpabuf	file:	access:public
body	src/wps/httpread.c	/^	char *body;$/;"	m	struct:httpread	file:	access:public
body_alloc_nbytes	src/wps/httpread.c	/^	int body_alloc_nbytes;  \/* amount allocated *\/$/;"	m	struct:httpread	file:	access:public
body_nbytes	src/wps/httpread.c	/^	int body_nbytes;$/;"	m	struct:httpread	file:	access:public
bool_txt	src/ap/ieee802_1x.c	/^static const char * bool_txt(Boolean bool)$/;"	f	file:	signature:(Boolean bool)
br_addbr	src/ap/vlan_init.c	/^static int br_addbr(const char *br_name)$/;"	f	file:	signature:(const char *br_name)
br_addif	src/ap/vlan_init.c	/^static int br_addif(const char *br_name, const char *if_name)$/;"	f	file:	signature:(const char *br_name, const char *if_name)
br_delbr	src/ap/vlan_init.c	/^static int br_delbr(const char *br_name)$/;"	f	file:	signature:(const char *br_name)
br_delif	src/ap/vlan_init.c	/^static int br_delif(const char *br_name, const char *if_name)$/;"	f	file:	signature:(const char *br_name, const char *if_name)
br_getnumports	src/ap/vlan_init.c	/^static int br_getnumports(const char *br_name)$/;"	f	file:	signature:(const char *br_name)
bridge	src/ap/ap_config.h	/^	char bridge[IFNAMSIZ + 1];      \/\/ 此bss所属的网桥名，网桥这个参数这里似乎没有用在wire类型的驱动器中$/;"	m	struct:hostapd_bss_config	access:public
bridge	src/drivers/driver.h	/^	char **bridge;$/;"	m	struct:wpa_init_params	access:public
bridge_ifname	src/rsn_supp/wpa_i.h	/^	const char *bridge_ifname;$/;"	m	struct:wpa_sm	access:public
brname	src/drivers/driver_nl80211.c	/^	char brname[IFNAMSIZ];$/;"	m	struct:i802_bss	file:	access:public
broadcast_ether_addr	src/utils/common.h	491;"	d
broadcast_key_idx_max	src/ap/ap_config.h	/^	int broadcast_key_idx_min, broadcast_key_idx_max;$/;"	m	struct:hostapd_bss_config	access:public
broadcast_key_idx_min	src/ap/ap_config.h	/^	int broadcast_key_idx_min, broadcast_key_idx_max;$/;"	m	struct:hostapd_bss_config	access:public
broadcast_key_received	src/eapol_supp/eapol_supp_sm.c	/^	Boolean unicast_key_received, broadcast_key_received;$/;"	m	struct:eapol_sm	file:	access:public
broadcom_ioctl	src/drivers/driver_broadcom.c	/^static int broadcom_ioctl(struct wpa_driver_broadcom_data *drv, int cmd,$/;"	f	file:	signature:(struct wpa_driver_broadcom_data *drv, int cmd, void *buf, int len)
bsd_configure_wpa	src/drivers/driver_bsd.c	/^bsd_configure_wpa(void *priv, struct wpa_bss_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_bss_params *params)
bsd_ctrl_iface	src/drivers/driver_bsd.c	/^bsd_ctrl_iface(void *priv, int enable)$/;"	f	file:	signature:(void *priv, int enable)
bsd_deinit	src/drivers/driver_bsd.c	/^bsd_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
bsd_del_key	src/drivers/driver_bsd.c	/^bsd_del_key(void *priv, const u8 *addr, int key_idx)$/;"	f	file:	signature:(void *priv, const u8 *addr, int key_idx)
bsd_driver_data	src/drivers/driver_bsd.c	/^struct bsd_driver_data {$/;"	s	file:
bsd_driver_data::capa	src/drivers/driver_bsd.c	/^	struct wpa_driver_capa capa;	\/* driver capability *\/$/;"	m	struct:bsd_driver_data	typeref:struct:bsd_driver_data::wpa_driver_capa	file:	access:public
bsd_driver_data::ctx	src/drivers/driver_bsd.c	/^	void	*ctx;$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::hapd	src/drivers/driver_bsd.c	/^	struct hostapd_data *hapd;	\/* back pointer *\/$/;"	m	struct:bsd_driver_data	typeref:struct:bsd_driver_data::hostapd_data	file:	access:public
bsd_driver_data::ifindex	src/drivers/driver_bsd.c	/^	unsigned int ifindex;		\/* interface index *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::ifname	src/drivers/driver_bsd.c	/^	char	ifname[IFNAMSIZ+1];	\/* interface name *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::is_ap	src/drivers/driver_bsd.c	/^	int	is_ap;			\/* Access point mode *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::prev_privacy	src/drivers/driver_bsd.c	/^	int	prev_privacy;	\/* privacy state to restore on deinit *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::prev_roaming	src/drivers/driver_bsd.c	/^	int	prev_roaming;	\/* roaming state to restore on deinit *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::prev_wpa	src/drivers/driver_bsd.c	/^	int	prev_wpa;	\/* wpa state to restore on deinit *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::route	src/drivers/driver_bsd.c	/^	int	route;			\/* routing socket for events *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::sock	src/drivers/driver_bsd.c	/^	int	sock;			\/* open socket for 802.11 ioctls *\/$/;"	m	struct:bsd_driver_data	file:	access:public
bsd_driver_data::sock_xmit	src/drivers/driver_bsd.c	/^	struct l2_packet_data *sock_xmit;\/* raw packet xmit socket *\/$/;"	m	struct:bsd_driver_data	typeref:struct:bsd_driver_data::l2_packet_data	file:	access:public
bsd_flush	src/drivers/driver_bsd.c	/^bsd_flush(void *priv)$/;"	f	file:	signature:(void *priv)
bsd_get80211	src/drivers/driver_bsd.c	/^bsd_get80211(void *priv, struct ieee80211req *ireq, int op, void *arg,$/;"	f	file:	signature:(void *priv, struct ieee80211req *ireq, int op, void *arg, int arg_len)
bsd_get_if_media	src/drivers/driver_bsd.c	/^bsd_get_if_media(void *priv)$/;"	f	file:	signature:(void *priv)
bsd_get_seqnum	src/drivers/driver_bsd.c	/^bsd_get_seqnum(const char *ifname, void *priv, const u8 *addr, int idx,$/;"	f	file:	signature:(const char *ifname, void *priv, const u8 *addr, int idx, u8 *seq)
bsd_get_ssid	src/drivers/driver_bsd.c	/^bsd_get_ssid(void *priv, u8 *ssid, int len)$/;"	f	file:	signature:(void *priv, u8 *ssid, int len)
bsd_init	src/drivers/driver_bsd.c	/^bsd_init(struct hostapd_data *hapd, struct wpa_init_params *params)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
bsd_new_sta	src/drivers/driver_bsd.c	/^bsd_new_sta(void *priv, void *ctx, u8 addr[IEEE80211_ADDR_LEN])$/;"	f	file:	signature:(void *priv, void *ctx, u8 addr[IEEE80211_ADDR_LEN])
bsd_read_sta_driver_data	src/drivers/driver_bsd.c	/^bsd_read_sta_driver_data(void *priv, struct hostap_sta_driver_data *data,$/;"	f	file:	signature:(void *priv, struct hostap_sta_driver_data *data, const u8 *addr)
bsd_send_eapol	src/drivers/driver_bsd.c	/^bsd_send_eapol(void *priv, const u8 *addr, const u8 *data, size_t data_len,$/;"	f	file:	signature:(void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
bsd_send_mlme_param	src/drivers/driver_bsd.c	/^bsd_send_mlme_param(void *priv, const u8 op, const u16 reason, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 op, const u16 reason, const u8 *addr)
bsd_set80211	src/drivers/driver_bsd.c	/^bsd_set80211(void *priv, int op, int val, const void *arg, int arg_len)$/;"	f	file:	signature:(void *priv, int op, int val, const void *arg, int arg_len)
bsd_set_freq	src/drivers/driver_bsd.c	/^bsd_set_freq(void *priv, struct hostapd_freq_params *freq)$/;"	f	file:	signature:(void *priv, struct hostapd_freq_params *freq)
bsd_set_ieee8021x	src/drivers/driver_bsd.c	/^bsd_set_ieee8021x(void *priv, struct wpa_bss_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_bss_params *params)
bsd_set_if_media	src/drivers/driver_bsd.c	/^bsd_set_if_media(void *priv, int media)$/;"	f	file:	signature:(void *priv, int media)
bsd_set_key	src/drivers/driver_bsd.c	/^bsd_set_key(const char *ifname, void *priv, enum wpa_alg alg,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const unsigned char *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
bsd_set_mediaopt	src/drivers/driver_bsd.c	/^bsd_set_mediaopt(void *priv, uint32_t mask, uint32_t mode)$/;"	f	file:	signature:(void *priv, uint32_t mask, uint32_t mode)
bsd_set_opt_ie	src/drivers/driver_bsd.c	/^bsd_set_opt_ie(void *priv, const u8 *ie, size_t ie_len)$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t ie_len)
bsd_set_privacy	src/drivers/driver_bsd.c	/^bsd_set_privacy(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
bsd_set_ssid	src/drivers/driver_bsd.c	/^bsd_set_ssid(void *priv, const u8 *ssid, int ssid_len)$/;"	f	file:	signature:(void *priv, const u8 *ssid, int ssid_len)
bsd_set_sta_authorized	src/drivers/driver_bsd.c	/^bsd_set_sta_authorized(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int total_flags, int flags_or, int flags_and)
bsd_sta_deauth	src/drivers/driver_bsd.c	/^bsd_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
bsd_sta_deauth	src/drivers/driver_bsd.c	/^static int bsd_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	p	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
bsd_sta_disassoc	src/drivers/driver_bsd.c	/^bsd_sta_disassoc(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
bsd_wireless_event_receive	src/drivers/driver_bsd.c	/^bsd_wireless_event_receive(int sock, void *ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *ctx, void *sock_ctx)
bss	src/ap/ap_config.h	/^	struct hostapd_bss_config *bss, *last_bss;$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::hostapd_bss_config	access:public
bss	src/ap/hostapd.h	/^    struct hostapd_data **bss;              \/\/ bss列表，描述各bss的配置$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_data	access:public
bss	src/drivers/driver_test.c	/^	struct dl_list bss;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::dl_list	file:	access:public
bss	src/drivers/driver_test.c	/^	struct test_driver_bss *bss;$/;"	m	struct:test_client_socket	typeref:struct:test_client_socket::test_driver_bss	file:	access:public
bssID	src/drivers/Apple80211.h	/^	UInt8 bssID[6];$/;"	m	struct:WirelessInfo	access:public
bss_add_used	src/drivers/driver_test.c	/^	int bss_add_used;$/;"	m	struct:wpa_driver_test_global	file:	access:public
bss_ctx	src/drivers/driver_test.c	/^	void *bss_ctx;$/;"	m	struct:test_driver_bss	file:	access:public
bss_ie_hdr	src/drivers/driver_broadcom.c	/^struct bss_ie_hdr {$/;"	s	file:
bss_ie_hdr::elem_id	src/drivers/driver_broadcom.c	/^	u8 elem_id;$/;"	m	struct:bss_ie_hdr	file:	access:public
bss_ie_hdr::len	src/drivers/driver_broadcom.c	/^	u8 len;$/;"	m	struct:bss_ie_hdr	file:	access:public
bss_ie_hdr::oui	src/drivers/driver_broadcom.c	/^	u8 oui[3];$/;"	m	struct:bss_ie_hdr	file:	access:public
bss_info_handler	src/drivers/driver_nl80211.c	/^static int bss_info_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
bss_info_handler	src/drivers/driver_nl80211.c	/^static int bss_info_handler(struct nl_msg *msg, void *arg);$/;"	p	file:	signature:(struct nl_msg *msg, void *arg)
bss_tm_req	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED bss_tm_req;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
bssid	src/ap/ap_config.h	/^	macaddr bssid;$/;"	m	struct:hostapd_bss_config	access:public
bssid	src/common/ieee802_11_defs.h	/^	u8 bssid[6];$/;"	m	struct:ieee80211_mgmt	access:public
bssid	src/common/privsep_commands.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:privsep_cmd_associate	access:public
bssid	src/drivers/Apple80211.h	/^	UInt8 bssid[6];$/;"	m	struct:WirelessNetworkInfo	access:public
bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::driver_gtk_rekey	access:public
bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::rx_action	access:public
bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::rx_from_unknown	access:public
bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
bssid	src/drivers/driver.h	/^		u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_event_data::auth_info	access:public
bssid	src/drivers/driver.h	/^		u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_event_data::pmkid_candidate	access:public
bssid	src/drivers/driver.h	/^	const u8 *bssid;$/;"	m	struct:wpa_driver_associate_params	access:public
bssid	src/drivers/driver.h	/^	const u8 *bssid;$/;"	m	struct:wpa_driver_auth_params	access:public
bssid	src/drivers/driver.h	/^	const u8 *bssid;$/;"	m	struct:wpa_init_params	access:public
bssid	src/drivers/driver.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_scan_res	access:public
bssid	src/drivers/driver_ndis.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:ndis_pmkid_entry	access:public
bssid	src/drivers/driver_ndis.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_ndis_data	access:public
bssid	src/drivers/driver_nl80211.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
bssid	src/drivers/driver_ralink.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:ndis_pmkid_entry	access:public
bssid	src/drivers/driver_test.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:test_driver_bss	file:	access:public
bssid	src/drivers/wireless_copy.h	/^	struct sockaddr	bssid; \/* ff:ff:ff:ff:ff:ff for broadcast BSSID or$/;"	m	struct:iw_scan_req	typeref:struct:iw_scan_req::sockaddr	access:public
bssid	src/drivers/wireless_copy.h	/^	struct sockaddr	bssid;$/;"	m	struct:iw_pmkid_cand	typeref:struct:iw_pmkid_cand::sockaddr	access:public
bssid	src/drivers/wireless_copy.h	/^	struct sockaddr	bssid;$/;"	m	struct:iw_pmksa	typeref:struct:iw_pmksa::sockaddr	access:public
bssid	src/p2p/p2p_i.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:p2p_pending_action_tx	access:public
bssid	src/rsn_supp/preauth.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:rsn_pmksa_candidate	file:	access:public
bssid	src/rsn_supp/tdls.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
bssid	src/rsn_supp/wpa_i.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_sm	access:public
bswap_16	src/utils/common.h	/^static inline unsigned short bswap_16(unsigned short v)$/;"	f	signature:(unsigned short v)
bswap_16	src/utils/common.h	33;"	d
bswap_16	src/utils/common.h	37;"	d
bswap_16	src/utils/common.h	398;"	d
bswap_32	src/utils/common.h	/^static inline unsigned int bswap_32(unsigned int v)$/;"	f	signature:(unsigned int v)
bswap_32	src/utils/common.h	34;"	d
bswap_32	src/utils/common.h	38;"	d
bswap_32	src/utils/common.h	402;"	d
bswap_64	src/utils/common.h	35;"	d
bswap_64	src/utils/common.h	39;"	d
buf	src/crypto/md5_i.h	/^	u32 buf[4];$/;"	m	struct:MD5Context	access:public
buf	src/crypto/sha256-internal.c	/^	u8 buf[SHA256_BLOCK_SIZE];$/;"	m	struct:sha256_state	file:	access:public
buf	src/drivers/driver.h	/^		const u8 *buf;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
buf	src/eap_common/eap_sim_common.c	/^	struct wpabuf *buf;$/;"	m	struct:eap_sim_msg	typeref:struct:eap_sim_msg::wpabuf	file:	access:public
buf	src/eap_peer/eap_fast_pac.c	/^	char *buf;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
buf	src/radius/radius.c	/^	struct wpabuf *buf;     \/\/ 指向radius消息数据管理块$/;"	m	struct:radius_msg	typeref:struct:radius_msg::wpabuf	file:	access:public
buf	src/rsn_supp/tdls.c	/^		u8 *buf;        \/* buffer for TPK message *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
buf_len	src/eap_peer/eap_fast_pac.c	/^	size_t buf_len;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
buf_len	src/rsn_supp/tdls.c	/^		int buf_len;    \/* length of TPK message for retransmission *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
buffer	src/crypto/md4-internal.c	/^	u8 buffer[MD4_BLOCK_LENGTH];	\/* input buffer *\/$/;"	m	struct:MD4Context	file:	access:public
buffer	src/crypto/sha1_i.h	/^	unsigned char buffer[64];$/;"	m	struct:SHA1Context	access:public
buildReq	src/eap_server/eap_i.h	/^	struct wpabuf * (*buildReq)(struct eap_sm *sm, void *priv, u8 id);$/;"	m	struct:eap_method	typeref:struct:eap_method::buildReq	access:public
build_fake_wsc_ack	src/wps/wps_upnp.c	/^static struct wpabuf * build_fake_wsc_ack(void)$/;"	f	file:	signature:(void)
burst	src/ap/ap_config.h	/^	int burst; \/* maximum burst time in 0.1 ms, i.e., 10 = 1 ms *\/$/;"	m	struct:hostapd_tx_queue_params	access:public
byteReverse	src/crypto/md5-internal.c	/^static void byteReverse(unsigned char *buf, unsigned longs)$/;"	f	file:	signature:(unsigned char *buf, unsigned longs)
byteReverse	src/crypto/md5-internal.c	69;"	d	file:
bytebit	src/crypto/des-internal.c	/^static const u32 bytebit[8] =$/;"	v	file:
ca	src/tls/x509v3.h	/^	int ca; \/* cA *\/$/;"	m	struct:x509_certificate	access:public
ca_cert	src/ap/ap_config.h	/^	char *ca_cert;$/;"	m	struct:hostapd_bss_config	access:public
ca_cert	src/crypto/tls.h	/^	const char *ca_cert;$/;"	m	struct:tls_connection_params	access:public
ca_cert	src/eap_peer/eap_config.h	/^	u8 *ca_cert;$/;"	m	struct:eap_peer_config	access:public
ca_cert2	src/eap_peer/eap_config.h	/^	u8 *ca_cert2;$/;"	m	struct:eap_peer_config	access:public
ca_cert2_id	src/eap_peer/eap_config.h	/^	char *ca_cert2_id;$/;"	m	struct:eap_peer_config	access:public
ca_cert_blob	src/crypto/tls.h	/^	const u8 *ca_cert_blob;$/;"	m	struct:tls_connection_params	access:public
ca_cert_blob_len	src/crypto/tls.h	/^	size_t ca_cert_blob_len;$/;"	m	struct:tls_connection_params	access:public
ca_cert_id	src/crypto/tls.h	/^	const char *ca_cert_id;$/;"	m	struct:tls_connection_params	access:public
ca_cert_id	src/eap_peer/eap_config.h	/^	char *ca_cert_id;$/;"	m	struct:eap_peer_config	access:public
ca_cert_verify	src/crypto/tls_openssl.c	/^	unsigned int ca_cert_verify:1;$/;"	m	struct:tls_connection	file:	access:public
ca_path	src/crypto/tls.h	/^	const char *ca_path;$/;"	m	struct:tls_connection_params	access:public
ca_path	src/eap_peer/eap_config.h	/^	u8 *ca_path;$/;"	m	struct:eap_peer_config	access:public
ca_path2	src/eap_peer/eap_config.h	/^	u8 *ca_path2;$/;"	m	struct:eap_peer_config	access:public
cache	src/drivers/driver_nl80211.c	/^	struct nl_cache *cache;$/;"	m	struct:nl80211_handles	typeref:struct:nl80211_handles::nl_cache	file:	access:public
cached_abfd	src/utils/trace.c	/^static bfd *cached_abfd = NULL;$/;"	v	file:
cached_pmk	src/eapol_supp/eapol_supp_sm.c	/^	Boolean cached_pmk;$/;"	m	struct:eapol_sm	file:	access:public
call_IWbemLocator_ConnectServer	src/drivers/ndis_events.c	/^HRESULT STDMETHODCALLTYPE call_IWbemLocator_ConnectServer($/;"	f	signature:( IWbemLocator *pLoc, LPCWSTR strNetworkResource, LPCWSTR strUser, LPCWSTR strPassword, LPCWSTR strLocale, long lSecurityFlags, LPCWSTR strAuthority, IWbemContext *pCtx, IWbemServices **ppNamespace)
call_IWbemServices_ExecNotificationQueryAsync	src/drivers/ndis_events.c	/^HRESULT STDMETHODCALLTYPE call_IWbemServices_ExecNotificationQueryAsync($/;"	f	signature:( IWbemServices *pSvc, LPCWSTR strQueryLanguage, LPCWSTR strQuery, long lFlags, IWbemContext *pCtx, IWbemObjectSink *pResponseHandler)
call_IWbemServices_ExecQuery	src/drivers/ndis_events.c	/^HRESULT STDMETHODCALLTYPE call_IWbemServices_ExecQuery($/;"	f	signature:( IWbemServices *pSvc, LPCWSTR strQueryLanguage, LPCWSTR strQuery, long lFlags, IWbemContext *pCtx, IEnumWbemClassObject **ppEnum)
cancel_auth_timeout	src/rsn_supp/wpa.h	/^	void (*cancel_auth_timeout)(void *ctx);$/;"	m	struct:wpa_sm_ctx	access:public
cancel_remain_on_channel	src/drivers/driver.h	/^	int (*cancel_remain_on_channel)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
capa	src/drivers/driver_bsd.c	/^	struct wpa_driver_capa capa;	\/* driver capability *\/$/;"	m	struct:bsd_driver_data	typeref:struct:bsd_driver_data::wpa_driver_capa	file:	access:public
capa	src/drivers/driver_ndis.h	/^	struct wpa_driver_capa capa;$/;"	m	struct:wpa_driver_ndis_data	typeref:struct:wpa_driver_ndis_data::wpa_driver_capa	access:public
capa	src/drivers/driver_nl80211.c	/^	struct wpa_driver_capa *capa;$/;"	m	struct:wiphy_info_data	typeref:struct:wiphy_info_data::wpa_driver_capa	file:	access:public
capa	src/drivers/driver_nl80211.c	/^	struct wpa_driver_capa capa;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::wpa_driver_capa	file:	access:public
capa	src/drivers/driver_wext.h	/^	struct wpa_driver_capa capa;$/;"	m	struct:wpa_driver_wext_data	typeref:struct:wpa_driver_wext_data::wpa_driver_capa	access:public
capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon41	access:public
capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
capabilities	src/common/wpa_common.h	/^	int capabilities;$/;"	m	struct:wpa_ie_data	access:public
capability	src/ap/ap_list.h	/^	u16 capability;$/;"	m	struct:ap_info	access:public
capability	src/ap/sta_info.h	/^	u16 capability;$/;"	m	struct:sta_info	access:public
capability	src/drivers/Apple80211.h	/^	UInt16 capability;$/;"	m	struct:WirelessNetworkInfo	access:public
capability	src/drivers/driver.h	/^	u16 capability;$/;"	m	struct:hostapd_sta_add_params	access:public
capability	src/drivers/driver_hostap.h	/^			u16 capability;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon79	access:public
capability	src/p2p/p2p_i.h	/^	const u8 *capability;$/;"	m	struct:p2p_message	access:public
capability	src/rsn_supp/tdls.c	/^	u16 capability;$/;"	m	struct:wpa_tdls_peer	file:	access:public
caps	src/drivers/driver.h	/^	u16 caps;$/;"	m	struct:wpa_scan_res	access:public
card	src/utils/pcsc_funcs.c	/^	SCARDHANDLE card;$/;"	m	struct:scard_data	file:	access:public
category	src/common/ieee802_11_defs.h	/^			u8 category;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48	access:public
category	src/drivers/driver.h	/^		u8 category;$/;"	m	struct:wpa_event_data::rx_action	access:public
category	src/rsn_supp/tdls.c	/^	u8 category; \/* Category *\/$/;"	m	struct:wpa_tdls_frame	file:	access:public
cb	src/ap/hostapd.h	/^	int (*cb)(void *ctx, const u8 *sa, const u8 *da, const u8 *bssid,$/;"	m	struct:hostapd_probereq_cb	access:public
cb	src/ap/wpa_auth_glue.c	/^	int (*cb)(struct wpa_authenticator *sm, void *ctx);$/;"	m	struct:wpa_auth_iface_iter_data	file:	access:public
cb	src/ap/wpa_auth_i.h	/^	struct wpa_auth_callbacks cb;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_auth_callbacks	access:public
cb	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eapol_auth_cb cb;        \/\/ 回调函数集$/;"	m	struct:eapol_authenticator	typeref:struct:eapol_authenticator::eapol_auth_cb	access:public
cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*cb)(struct eapol_sm *eapol, int success, void *ctx);$/;"	m	struct:eapol_ctx	access:public
cb	src/wps/http_client.c	/^	void (*cb)(void *ctx, struct http_client *c,$/;"	m	struct:http_client	file:	access:public
cb	src/wps/http_server.c	/^	void (*cb)(void *ctx, struct http_request *req);$/;"	m	struct:http_server	file:	access:public
cb	src/wps/httpread.c	/^	void (*cb)(struct httpread *handle, void *cookie,$/;"	m	struct:httpread	file:	access:public
cb_ctx	src/ap/wpa_auth_glue.c	/^	void *cb_ctx;$/;"	m	struct:wpa_auth_iface_iter_data	file:	access:public
cb_ctx	src/crypto/tls.h	/^	void *cb_ctx;$/;"	m	struct:tls_config	access:public
cb_ctx	src/crypto/tls_openssl.c	/^	void *cb_ctx;$/;"	m	struct:tls_global	file:	access:public
cb_ctx	src/eap_server/ikev2.h	/^	void *cb_ctx;$/;"	m	struct:ikev2_initiator_data	access:public
cb_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *cb_ctx;$/;"	m	struct:eapol_ctx	access:public
cb_ctx	src/p2p/p2p.h	/^	void *cb_ctx;$/;"	m	struct:p2p_config	access:public
cb_ctx	src/p2p/p2p.h	/^	void *cb_ctx;$/;"	m	struct:p2p_group_config	access:public
cb_ctx	src/wps/http_client.c	/^	void *cb_ctx;$/;"	m	struct:http_client	file:	access:public
cb_ctx	src/wps/http_server.c	/^	void *cb_ctx;$/;"	m	struct:http_server	file:	access:public
cb_ctx	src/wps/wps.h	/^	void *cb_ctx;$/;"	m	struct:wps_context	access:public
cb_ctx	src/wps/wps.h	/^	void *cb_ctx;$/;"	m	struct:wps_registrar_config	access:public
cb_ctx	src/wps/wps_registrar.c	/^	void *cb_ctx;$/;"	m	struct:wps_registrar	file:	access:public
cb_session_ctx	src/eap_server/eap_sim_db.c	/^	void *cb_session_ctx;$/;"	m	struct:eap_sim_db_pending	file:	access:public
cb_status	src/eapol_supp/eapol_supp_sm.c	/^		cb_status;$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon21	file:	access:public
cbc	src/crypto/crypto_internal-cipher.c	/^			u8 cbc[32];$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
cbc	src/crypto/crypto_internal-cipher.c	/^			u8 cbc[8];$/;"	m	struct:crypto_cipher::__anon186::__anon189	file:	access:public
cbc	src/crypto/crypto_internal-cipher.c	/^			u8 cbc[8];$/;"	m	struct:crypto_cipher::__anon186::__anon190	file:	access:public
cbc	src/crypto/crypto_libtomcrypt.c	/^		symmetric_CBC cbc;$/;"	m	union:crypto_cipher::__anon199	file:	access:public
cert	src/crypto/tls.h	/^		const struct wpabuf *cert;$/;"	m	struct:tls_event_data::__anon194	typeref:struct:tls_event_data::__anon194::wpabuf	access:public
cert	src/crypto/tls.h	/^		const struct wpabuf *cert;$/;"	m	struct:tls_event_data::__anon195	typeref:struct:tls_event_data::__anon195::wpabuf	access:public
cert	src/crypto/tls_openssl.c	/^	const CERT_CONTEXT *cert;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
cert	src/eap_common/ikev2_common.h	/^	const u8 *cert;$/;"	m	struct:ikev2_payloads	access:public
cert	src/tls/tlsv1_cred.h	/^	struct x509_certificate *cert;$/;"	m	struct:tlsv1_credentials	typeref:struct:tlsv1_credentials::x509_certificate	access:public
cert2_id	src/eap_peer/eap_config.h	/^	char *cert2_id;$/;"	m	struct:eap_peer_config	access:public
cert_cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*cert_cb)(void *ctx, int depth, const char *subject,$/;"	m	struct:eapol_ctx	access:public
cert_fail	src/crypto/tls.h	/^	} cert_fail;$/;"	m	union:tls_event_data	typeref:struct:tls_event_data::__anon194	access:public
cert_id	src/crypto/tls.h	/^	const char *cert_id;$/;"	m	struct:tls_connection_params	access:public
cert_id	src/eap_peer/eap_config.h	/^	char *cert_id;$/;"	m	struct:eap_peer_config	access:public
cert_in_cb	src/crypto/tls.h	/^	int cert_in_cb;$/;"	m	struct:tls_config	access:public
cert_in_cb	src/crypto/tls_openssl.c	/^	int cert_in_cb;$/;"	m	struct:tls_global	file:	access:public
cert_in_cb	src/eap_peer/eap.h	/^	int cert_in_cb;$/;"	m	struct:eap_config	access:public
cert_in_cb	src/eapol_supp/eapol_supp_sm.h	/^	int cert_in_cb;$/;"	m	struct:eapol_ctx	access:public
cert_len	src/eap_common/ikev2_common.h	/^	size_t cert_len;$/;"	m	struct:ikev2_payloads	access:public
cert_len	src/tls/x509v3.h	/^	size_t cert_len;$/;"	m	struct:x509_certificate	access:public
cert_probe	src/crypto/tls_openssl.c	/^	unsigned int cert_probe:1;$/;"	m	struct:tls_connection	file:	access:public
cert_start	src/tls/x509v3.h	/^	const u8 *cert_start;$/;"	m	struct:x509_certificate	access:public
certificate_requested	src/tls/tlsv1_client_i.h	/^	unsigned int certificate_requested:1;$/;"	m	struct:tlsv1_client	access:public
cf_params	src/common/ieee802_11_common.h	/^	const u8 *cf_params;$/;"	m	struct:ieee802_11_elems	access:public
cf_params_len	src/common/ieee802_11_common.h	/^	u8 cf_params_len;$/;"	m	struct:ieee802_11_elems	access:public
cfg	src/drivers/netlink.c	/^	struct netlink_config *cfg;$/;"	m	struct:netlink_data	typeref:struct:netlink_data::netlink_config	file:	access:public
cfg	src/drivers/rfkill.c	/^	struct rfkill_config *cfg;$/;"	m	struct:rfkill_data	typeref:struct:rfkill_data::rfkill_config	file:	access:public
cfg	src/p2p/p2p_group.c	/^	struct p2p_group_config *cfg;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::p2p_group_config	file:	access:public
cfg	src/p2p/p2p_i.h	/^	struct p2p_config *cfg;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_config	access:public
cfg80211	src/drivers/driver_wext.h	/^	int cfg80211; \/* whether driver is using cfg80211 *\/$/;"	m	struct:wpa_driver_wext_data	access:public
cfg_op_channel	src/p2p/p2p.h	/^	u8 cfg_op_channel;$/;"	m	struct:p2p_config	access:public
chaddr	src/drivers/driver_wired.c	/^	u_int8_t chaddr[16];$/;"	m	struct:dhcp_message	file:	access:public
challenge	src/ap/sta_info.h	/^	u8 *challenge; \/* IEEE 802.11 Shared Key Authentication Challenge *\/$/;"	m	struct:sta_info	access:public
challenge	src/common/ieee802_11_common.h	/^	const u8 *challenge;$/;"	m	struct:ieee802_11_elems	access:public
challenge	src/eap_server/eap_server_md5.c	/^	u8 challenge[CHALLENGE_LEN];    \/\/ 16字节的挑战字$/;"	m	struct:eap_md5_data	file:	access:public
challenge_hash	src/crypto/ms_funcs.c	/^static int challenge_hash(const u8 *peer_challenge, const u8 *auth_challenge,$/;"	f	file:	signature:(const u8 *peer_challenge, const u8 *auth_challenge, const u8 *username, size_t username_len, u8 *challenge)
challenge_len	src/common/ieee802_11_common.h	/^	u8 challenge_len;$/;"	m	struct:ieee802_11_elems	access:public
challenge_response	src/crypto/ms_funcs.c	/^void challenge_response(const u8 *challenge, const u8 *password_hash,$/;"	f	signature:(const u8 *challenge, const u8 *password_hash, u8 *response)
challenge_response	src/crypto/ms_funcs.h	/^void challenge_response(const u8 *challenge, const u8 *password_hash,$/;"	p	signature:(const u8 *challenge, const u8 *password_hash, u8 *response)
chan	src/drivers/driver.h	/^	short chan;$/;"	m	struct:hostapd_channel_data	access:public
chan	src/p2p/p2p.h	/^	u8 chan;$/;"	m	struct:p2p_channel	access:public
chan_switch	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED chan_switch;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
changed	src/ap/wpa_auth_i.h	/^	Boolean changed;$/;"	m	struct:wpa_group	access:public
changed	src/ap/wpa_auth_i.h	/^	unsigned int changed:1;$/;"	m	struct:wpa_state_machine	access:public
changed	src/eap_peer/eap_i.h	/^	Boolean changed;$/;"	m	struct:eap_sm	access:public
changed	src/eap_server/eap_i.h	/^	Boolean changed;$/;"	m	struct:eap_sm	access:public
changed	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean changed;    \/\/ 记录eapol层状态机组的状态是否发生变化$/;"	m	struct:eapol_state_machine	access:public
changed	src/eapol_supp/eapol_supp_sm.c	/^	Boolean changed;$/;"	m	struct:eapol_sm	file:	access:public
changed	src/utils/eloop.c	/^	int changed;$/;"	m	struct:eloop_sock_table	file:	access:public
channel	src/ap/ap_config.h	/^	u8 channel;$/;"	m	struct:hostapd_config	access:public
channel	src/ap/ap_list.h	/^	int channel;$/;"	m	struct:ap_info	access:public
channel	src/ap/hostapd.h	/^	u32 channel;$/;"	m	struct:hostapd_frame_info	access:public
channel	src/drivers/Apple80211.h	/^	UInt16 channel;$/;"	m	struct:WirelessNetworkInfo	access:public
channel	src/drivers/driver.h	/^		int channel;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
channel	src/drivers/driver.h	/^	int channel;$/;"	m	struct:hostapd_freq_params	access:public
channel	src/p2p/p2p.h	/^		u8 channel[P2P_MAX_REG_CLASS_CHANNELS];$/;"	m	struct:p2p_channels::p2p_reg_class	access:public
channel	src/p2p/p2p.h	/^	u8 channel;$/;"	m	struct:p2p_config	access:public
channel_list	src/drivers/wireless_copy.h	/^	struct iw_freq	channel_list[IW_MAX_FREQUENCIES];$/;"	m	struct:iw_scan_req	typeref:struct:iw_scan_req::iw_freq	access:public
channel_list	src/p2p/p2p_i.h	/^	const u8 *channel_list;$/;"	m	struct:p2p_message	access:public
channel_list_len	src/p2p/p2p_i.h	/^	u8 channel_list_len;$/;"	m	struct:p2p_message	access:public
channels	src/drivers/driver.h	/^	struct hostapd_channel_data *channels;$/;"	m	struct:hostapd_hw_modes	typeref:struct:hostapd_hw_modes::hostapd_channel_data	access:public
channels	src/p2p/p2p.h	/^		size_t channels;$/;"	m	struct:p2p_channels::p2p_reg_class	access:public
channels	src/p2p/p2p.h	/^	struct p2p_channels channels;$/;"	m	struct:p2p_config	typeref:struct:p2p_config::p2p_channels	access:public
channels	src/p2p/p2p_i.h	/^	struct p2p_channels channels;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_channels	access:public
channels	src/p2p/p2p_i.h	/^	struct p2p_channels channels;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::p2p_channels	access:public
chap_challenge	src/eap_server/eap_server_ttls.c	/^	u8 *chap_challenge;$/;"	m	struct:eap_ttls_avp	file:	access:public
chap_challenge_len	src/eap_server/eap_server_ttls.c	/^	size_t chap_challenge_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
chap_md5	src/eap_common/chap.c	/^int chap_md5(u8 id, const u8 *secret, size_t secret_len, const u8 *challenge,$/;"	f	signature:(u8 id, const u8 *secret, size_t secret_len, const u8 *challenge, size_t challenge_len, u8 *response)
chap_md5	src/eap_common/chap.h	/^int chap_md5(u8 id, const u8 *secret, size_t secret_len, const u8 *challenge,$/;"	p	signature:(u8 id, const u8 *secret, size_t secret_len, const u8 *challenge, size_t challenge_len, u8 *response)
chap_password	src/eap_server/eap_server_ttls.c	/^	u8 *chap_password;$/;"	m	struct:eap_ttls_avp	file:	access:public
chap_password_len	src/eap_server/eap_server_ttls.c	/^	size_t chap_password_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
check	src/eap_server/eap_i.h	/^	Boolean (*check)(struct eap_sm *sm, void *priv,$/;"	m	struct:eap_method	access:public
check_assoc_ies	src/ap/ieee802_11.c	/^static u16 check_assoc_ies(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *ies, size_t ies_len, int reassoc)
check_crl	src/ap/ap_config.h	/^	int check_crl;$/;"	m	struct:hostapd_bss_config	access:public
check_crl	src/crypto/tls_internal.c	/^	int check_crl;$/;"	m	struct:tls_global	file:	access:public
check_ssid	src/ap/ieee802_11.c	/^static u16 check_ssid(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *ssid_ie, size_t ssid_ie_len)
check_wmm	src/ap/ieee802_11.c	/^static u16 check_wmm(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *wmm_ie, size_t wmm_ie_len)
checkcode	src/eap_common/eap_sim_common.h	/^	const u8 *checkcode;$/;"	m	struct:eap_sim_attrs	access:public
checkcode_len	src/eap_common/eap_sim_common.h	/^	size_t checkcode_len;$/;"	m	struct:eap_sim_attrs	access:public
chunk_size	src/wps/httpread.c	/^	int chunk_size;         \/* data of chunk (not hdr or ending CRLF)*\/$/;"	m	struct:httpread	file:	access:public
chunk_start	src/wps/httpread.c	/^	int chunk_start;        \/* offset in body of chunk hdr or data *\/$/;"	m	struct:httpread	file:	access:public
chunked	src/wps/httpread.c	/^	int chunked;            \/* nonzero for chunked data *\/$/;"	m	struct:httpread	file:	access:public
ciaddr	src/drivers/driver_wired.c	/^	u_int32_t ciaddr;$/;"	m	struct:dhcp_message	file:	access:public
cid	src/eap_peer/eap_pax.c	/^	char *cid;$/;"	m	struct:eap_pax_data	file:	access:public
cid	src/eap_server/eap_server_pax.c	/^	char *cid;$/;"	m	struct:eap_pax_data	file:	access:public
cid_len	src/eap_peer/eap_pax.c	/^	size_t cid_len;$/;"	m	struct:eap_pax_data	file:	access:public
cid_len	src/eap_server/eap_server_pax.c	/^	size_t cid_len;$/;"	m	struct:eap_pax_data	file:	access:public
cipher	src/eap_peer/eap_sake.c	/^		u8 cipher[EAP_SAKE_TEK_CIPHER_LEN];$/;"	m	struct:eap_sake_data::__anon165	file:	access:public
cipher	src/eap_server/eap_server_sake.c	/^		u8 cipher[EAP_SAKE_TEK_CIPHER_LEN];$/;"	m	struct:eap_sake_data::__anon128	file:	access:public
cipher	src/rsn_supp/peerkey.h	/^	int cipher; \/* Selected cipher (WPA_CIPHER_*) *\/$/;"	m	struct:wpa_peerkey	access:public
cipher	src/rsn_supp/tdls.c	/^	int cipher; \/* Selected cipher (WPA_CIPHER_*) *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
cipher	src/tls/tlsv1_common.h	/^	tls_cipher cipher;$/;"	m	struct:tls_cipher_data	access:public
cipher	src/tls/tlsv1_common.h	/^	tls_cipher cipher;$/;"	m	struct:tls_cipher_suite	access:public
cipher_alg	src/tls/tlsv1_record.h	/^	enum crypto_cipher_alg cipher_alg;$/;"	m	struct:tlsv1_record_layer	typeref:enum:tlsv1_record_layer::crypto_cipher_alg	access:public
cipher_suite	src/tls/tlsv1_record.h	/^	u16 cipher_suite;$/;"	m	struct:tlsv1_record_layer	access:public
cipher_suite	src/tls/tlsv1_server_i.h	/^	u16 cipher_suite;$/;"	m	struct:tlsv1_server	access:public
cipher_suite_st	src/crypto/tls_gnutls.c	/^} cipher_suite_st;$/;"	t	typeref:struct:__anon191	file:
cipher_suites	src/tls/tlsv1_client_i.h	/^	u16 cipher_suites[MAX_CIPHER_COUNT];$/;"	m	struct:tlsv1_client	access:public
cipher_suites	src/tls/tlsv1_server_i.h	/^	u16 cipher_suites[MAX_CIPHER_COUNT];$/;"	m	struct:tlsv1_server	access:public
ck	src/eap_peer/eap_aka.c	/^	u8 ik[EAP_AKA_IK_LEN], ck[EAP_AKA_CK_LEN], res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
ck	src/eap_peer/eap_pax.c	/^	u8 ck[EAP_PAX_CK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
ck	src/eap_server/eap_server_aka.c	/^	u8 ck[EAP_AKA_CK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
ck	src/eap_server/eap_server_pax.c	/^	u8 ck[EAP_PAX_CK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
ck	src/eap_server/eap_sim_db.c	/^			u8 ck[EAP_AKA_CK_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
ckey	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY ckey;$/;"	m	struct:aes_context	file:	access:public
clean	src/ap/ap_config.h	/^	int clean;$/;"	m	struct:hostapd_vlan	access:public
cleanup	hostapd/hlr_auc_gw.c	/^static void cleanup(void)$/;"	f	file:	signature:(void)
clear_left	src/utils/edit.c	/^static void clear_left(void)$/;"	f	file:	signature:(void)
clear_right	src/utils/edit.c	/^static void clear_right(void)$/;"	f	file:	signature:(void)
clear_state_mismatch	src/drivers/driver_nl80211.c	/^static void clear_state_mismatch(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *addr)
cli	src/drivers/driver_test.c	/^	struct test_client_socket *cli;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::test_client_socket	file:	access:public
cli	src/wps/http_server.c	/^	struct sockaddr_in cli;$/;"	m	struct:http_request	typeref:struct:http_request::sockaddr_in	file:	access:public
client	src/crypto/tls_internal.c	/^	struct tlsv1_client *client;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::tlsv1_client	file:	access:public
client	src/p2p/p2p_i.h	/^	} client[P2P_MAX_GROUP_ENTRIES];$/;"	m	struct:p2p_group_info	typeref:struct:p2p_group_info::p2p_client_info	access:public
client	src/radius/radius_server.c	/^	struct radius_client *client;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_client	file:	access:public
client	src/wps/wps_upnp_i.h	/^	struct sockaddr_in client; \/* for M-SEARCH replies *\/$/;"	m	struct:advertisement_state_machine	typeref:struct:advertisement_state_machine::sockaddr_in	access:public
client_addr	src/radius/radius_client.h	/^	struct hostapd_ip_addr client_addr;$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_ip_addr	access:public
client_cert	src/crypto/tls.h	/^	const char *client_cert;$/;"	m	struct:tls_connection_params	access:public
client_cert	src/eap_peer/eap_config.h	/^	u8 *client_cert;$/;"	m	struct:eap_peer_config	access:public
client_cert2	src/eap_peer/eap_config.h	/^	u8 *client_cert2;$/;"	m	struct:eap_peer_config	access:public
client_cert_blob	src/crypto/tls.h	/^	const u8 *client_cert_blob;$/;"	m	struct:tls_connection_params	access:public
client_cert_blob_len	src/crypto/tls.h	/^	size_t client_cert_blob_len;$/;"	m	struct:tls_connection_params	access:public
client_challenge	src/eap_common/eap_fast_common.h	/^	u8 client_challenge[16]; \/* MSCHAPv2 ClientChallenge *\/$/;"	m	struct:eap_fast_key_block_provisioning	access:public
client_error_code	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
client_file	src/radius/radius_server.h	/^	char *client_file;$/;"	m	struct:radius_server_conf	access:public
client_hello_ext	src/tls/tlsv1_client_i.h	/^	u8 *client_hello_ext;$/;"	m	struct:tlsv1_client	access:public
client_hello_ext_len	src/tls/tlsv1_client_i.h	/^	size_t client_hello_ext_len;$/;"	m	struct:tlsv1_client	access:public
client_info	src/p2p/p2p_group.c	/^	struct wpabuf *client_info;$/;"	m	struct:p2p_group_member	typeref:struct:p2p_group_member::wpabuf	file:	access:public
client_mode	src/drivers/Apple80211.h	/^	UInt16 client_mode;$/;"	m	struct:WirelessInfo	access:public
client_poll	src/drivers/driver.h	/^	struct client_poll {$/;"	s	union:wpa_event_data	access:public
client_poll	src/drivers/driver.h	/^	} client_poll;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::client_poll	access:public
client_random	src/crypto/tls.h	/^	const u8 *client_random;$/;"	m	struct:tls_keys	access:public
client_random	src/crypto/tls_gnutls.c	/^	opaque client_random[WPA_TLS_RANDOM_SIZE];$/;"	m	struct:__anon192	file:	access:public
client_random	src/tls/tlsv1_client_i.h	/^	u8 client_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_client	access:public
client_random	src/tls/tlsv1_server_i.h	/^	u8 client_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_server	access:public
client_random_len	src/crypto/tls.h	/^	size_t client_random_len;$/;"	m	struct:tls_keys	access:public
client_rsa_key	src/tls/tlsv1_server_i.h	/^	struct crypto_public_key *client_rsa_key;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::crypto_public_key	access:public
client_timeout	src/p2p/p2p_i.h	/^	u8 client_timeout;$/;"	m	struct:p2p_device	access:public
client_version	src/tls/tlsv1_server_i.h	/^	u16 client_version;$/;"	m	struct:tlsv1_server	access:public
clients	src/radius/radius_server.c	/^	struct radius_client *clients;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::radius_client	file:	access:public
close	src/drivers/driver_ndis.c	/^int close(int fd);$/;"	p	file:	signature:(int fd)
close	src/utils/common.h	94;"	d
close	src/utils/common.h	95;"	d
cmd	hostapd/hostapd_cli.c	/^	const char *cmd;$/;"	m	struct:hostapd_cli_cmd	file:	access:public
cmd	src/drivers/driver_hostap.h	/^			u16 cmd;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon85	access:public
cmd	src/drivers/driver_hostap.h	/^	u32 cmd;$/;"	m	struct:prism2_hostapd_param	access:public
cmd	src/drivers/wireless_copy.h	/^	__u16		cmd;			\/* Wireless IOCTL *\/$/;"	m	struct:__compat_iw_event	access:public
cmd	src/drivers/wireless_copy.h	/^	__u16		cmd;			\/* Wireless IOCTL *\/$/;"	m	struct:iw_event	access:public
cmd	src/drivers/wireless_copy.h	/^	__u16		cmd; \/* IW_MLME_* *\/$/;"	m	struct:iw_mlme	access:public
cmd	src/drivers/wireless_copy.h	/^	__u32		cmd;		\/* Number of the ioctl to issue *\/$/;"	m	struct:iw_priv_args	access:public
cmd	src/drivers/wireless_copy.h	/^	__u32		cmd; \/* IW_PMKSA_* *\/$/;"	m	struct:iw_pmksa	access:public
cmd_socket	src/drivers/driver_privsep.c	/^	int cmd_socket;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
cmdbuf	src/utils/edit.c	/^static char cmdbuf[CMD_BUF_LEN];$/;"	v	file:
cmdbuf	src/utils/edit_simple.c	/^static char cmdbuf[CMD_BUF_LEN];$/;"	v	file:
cmdbuf_len	src/utils/edit.c	/^static int cmdbuf_len = 0;$/;"	v	file:
cmdbuf_pos	src/utils/edit.c	/^static int cmdbuf_pos = 0;$/;"	v	file:
cmdbuf_pos	src/utils/edit_simple.c	/^static int cmdbuf_pos = 0;$/;"	v	file:
cmk	src/eap_peer/eap_peap.c	/^	u8 cmk[20];$/;"	m	struct:eap_peap_data	file:	access:public
cmk	src/eap_server/eap_server_fast.c	/^	u8 cmk[EAP_FAST_CMK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
cmk	src/eap_server/eap_server_peap.c	/^	u8 cmk[20];$/;"	m	struct:eap_peap_data	file:	access:public
cmp_str	src/utils/edit.c	/^static int cmp_str(const void *a, const void *b)$/;"	f	file:	signature:(const void *a, const void *b)
code	src/drivers/wireless_copy.h	/^	__u32		code;		\/* Rx : Unable to code\/decode (WEP) *\/$/;"	m	struct:iw_discarded	access:public
code	src/eap_common/eap_defs.h	/^	u8 code;$/;"	m	struct:eap_hdr	access:public
code	src/radius/radius.h	/^	u8 code;        \/\/ radius包类型$/;"	m	struct:radius_hdr	access:public
command	src/ap/iapp.c	/^	u8 command;$/;"	m	struct:iapp_hdr	file:	access:public
commands_help	hostapd/hostapd_cli.c	/^static const char *commands_help =$/;"	v	file:
commit	src/drivers/driver.h	/^	int (*commit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
common_len	src/utils/edit.c	/^static int common_len(const char *a, const char *b)$/;"	f	file:	signature:(const char *a, const char *b)
comms_qual	src/drivers/Apple80211.h	/^	UInt16 comms_qual;$/;"	m	struct:WirelessInfo	access:public
compat_iw_point	src/drivers/wireless_copy.h	/^struct compat_iw_point {$/;"	s
compat_iw_point::flags	src/drivers/wireless_copy.h	/^	__u16 flags;$/;"	m	struct:compat_iw_point	access:public
compat_iw_point::length	src/drivers/wireless_copy.h	/^	__u16 length;$/;"	m	struct:compat_iw_point	access:public
compat_iw_point::pointer	src/drivers/wireless_copy.h	/^	compat_caddr_t pointer;$/;"	m	struct:compat_iw_point	access:public
complete	src/utils/edit.c	/^static void complete(int list)$/;"	f	file:	signature:(int list)
compound_mac	src/eap_common/eap_tlv_common.h	/^	u8 compound_mac[20];$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
compute_keys	src/eap_common/eap_pwd_common.c	/^int compute_keys(EAP_PWD_group *grp, BN_CTX *bnctx, BIGNUM *k,$/;"	f	signature:(EAP_PWD_group *grp, BN_CTX *bnctx, BIGNUM *k, BIGNUM *peer_scalar, BIGNUM *server_scalar, u8 *commit_peer, u8 *commit_server, u32 *ciphersuite, u8 *msk, u8 *emsk)
compute_keys	src/eap_common/eap_pwd_common.h	/^int compute_keys(EAP_PWD_group *, BN_CTX *, BIGNUM *, BIGNUM *, BIGNUM *,$/;"	p	signature:(EAP_PWD_group *, BN_CTX *, BIGNUM *, BIGNUM *, BIGNUM *, u8 *, u8 *, u32 *, u8 *, u8 *)
compute_password_element	src/eap_common/eap_pwd_common.c	/^int compute_password_element(EAP_PWD_group *grp, u16 num,$/;"	f	signature:(EAP_PWD_group *grp, u16 num, u8 *password, int password_len, u8 *id_server, int id_server_len, u8 *id_peer, int id_peer_len, u8 *token)
compute_password_element	src/eap_common/eap_pwd_common.h	/^int compute_password_element(EAP_PWD_group *, u16, u8 *, int, u8 *, int, u8 *,$/;"	p	signature:(EAP_PWD_group *, u16, u8 *, int, u8 *, int, u8 *, int, u8 *)
concurrent_operations	src/p2p/p2p.h	/^	int concurrent_operations;$/;"	m	struct:p2p_config	access:public
conf	src/ap/hostapd.h	/^	struct hostapd_bss_config *conf;    \/\/ 指向上层hostapd_iface->conf->bss[i]，保存此bss的配置信息$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_bss_config	access:public
conf	src/ap/hostapd.h	/^	struct hostapd_config *conf;            \/\/ 根据配置文件生成的配置控制块$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_config	access:public
conf	src/ap/wpa_auth_i.h	/^	struct wpa_auth_config conf;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_auth_config	access:public
conf	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eapol_auth_config conf;  \/\/ 配置信息$/;"	m	struct:eapol_authenticator	typeref:struct:eapol_authenticator::eapol_auth_config	access:public
conf	src/eapol_supp/eapol_supp_sm.c	/^	struct eapol_config conf;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eapol_config	file:	access:public
conf	src/radius/radius_client.c	/^	struct hostapd_radius_servers *conf;    \/\/ radius客户端配置信息$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::hostapd_radius_servers	file:	access:public
conf_ctx	src/radius/radius_server.c	/^	void *conf_ctx;$/;"	m	struct:radius_server_data	file:	access:public
conf_ctx	src/radius/radius_server.h	/^	void *conf_ctx;$/;"	m	struct:radius_server_conf	access:public
config	src/eapol_supp/eapol_supp_sm.c	/^	struct eap_peer_config *config;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eap_peer_config	file:	access:public
config_error	src/wps/wps.h	/^		u16 config_error;$/;"	m	struct:wps_event_data::wps_event_fail	access:public
config_error	src/wps/wps.h	/^		u16 config_error;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
config_error	src/wps/wps_i.h	/^	const u8 *config_error; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
config_error	src/wps/wps_i.h	/^	u16 config_error;$/;"	m	struct:wps_data	access:public
config_fname	src/ap/hostapd.h	/^	char *config_fname;                     \/\/ 保存了命令行输入的配置文件名$/;"	m	struct:hostapd_iface	access:public
config_methods	src/ap/ap_config.h	/^	char *config_methods;$/;"	m	struct:hostapd_bss_config	access:public
config_methods	src/drivers/driver.h	/^		u16 config_methods;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
config_methods	src/drivers/driver.h	/^		u16 config_methods;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
config_methods	src/drivers/driver.h	/^		u16 config_methods;$/;"	m	struct:wpa_event_data::p2p_prov_disc_resp	access:public
config_methods	src/p2p/p2p.h	/^	u16 config_methods;$/;"	m	struct:p2p_config	access:public
config_methods	src/p2p/p2p.h	/^	u16 config_methods;$/;"	m	struct:p2p_peer_info	access:public
config_methods	src/p2p/p2p_i.h	/^		u16 config_methods;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
config_methods	src/p2p/p2p_i.h	/^	u16 config_methods;$/;"	m	struct:p2p_message	access:public
config_methods	src/wps/wps.h	/^		u16 config_methods;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
config_methods	src/wps/wps.h	/^		u16 config_methods;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
config_methods	src/wps/wps.h	/^	u16 config_methods;$/;"	m	struct:wps_context	access:public
config_methods	src/wps/wps.h	/^	u16 config_methods;$/;"	m	struct:wps_device_data	access:public
config_methods	src/wps/wps_er.h	/^	u16 config_methods;$/;"	m	struct:wps_er_sta	access:public
config_methods	src/wps/wps_i.h	/^	const u8 *config_methods; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
config_methods	src/wps/wps_upnp_i.h	/^	u16 config_methods;$/;"	m	struct:subscription	access:public
config_read_cb	src/ap/hostapd.h	/^	struct hostapd_config * (*config_read_cb)(const char *config_fname);$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::config_read_cb	access:public
config_timeout	src/p2p/p2p_i.h	/^	const u8 *config_timeout;$/;"	m	struct:p2p_message	access:public
conn	src/eap_peer/eap_tls_common.h	/^	struct tls_connection *conn;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::tls_connection	access:public
conn	src/eap_server/eap_tls_common.h	/^	struct tls_connection *conn;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::tls_connection	access:public
conn_imv	src/eap_server/tncs.c	/^	struct conn_imv {$/;"	s	struct:tncs_data	file:	access:public
conn_type_flags	src/wps/wps_i.h	/^	const u8 *conn_type_flags; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
connect_reqs	src/p2p/p2p_i.h	/^	unsigned int connect_reqs;$/;"	m	struct:p2p_device	access:public
connected_event	src/drivers/driver_ndis.h	/^	HANDLE connected_event; \/* WpaSupplicantConnected event *\/$/;"	m	struct:wpa_driver_ndis_data	access:public
connectionID	src/eap_peer/tncc.c	/^	TNC_ConnectionID connectionID;$/;"	m	struct:tnc_if_imc	file:	access:public
connectionID	src/eap_server/tncs.c	/^	TNC_ConnectionID connectionID;$/;"	m	struct:tncs_data	file:	access:public
connections	src/eap_server/tncs.c	/^	struct tncs_data *connections;$/;"	m	struct:tncs_global	typeref:struct:tncs_global::tncs_data	file:	access:public
constructed	src/tls/asn1.h	/^	u8 identifier, class, constructed;$/;"	m	struct:asn1_hdr	typeref:class:asn1_hdr::	access:public
content_length	src/wps/httpread.c	/^	int content_length;     \/* body length,  iff got_content_length *\/$/;"	m	struct:httpread	file:	access:public
context	src/crypto/tls_schannel.c	/^	CtxtHandle context;$/;"	m	struct:tls_connection	file:	access:public
control	src/ap/iapp.c	/^	u8 control;$/;"	m	struct:iapp_layer2_update	file:	access:public
control_chan	src/common/ieee802_11_defs.h	/^	u8 control_chan;$/;"	m	struct:ieee80211_ht_operation	access:public
control_url	src/wps/wps_er.h	/^	char *control_url;$/;"	m	struct:wps_er_ap	access:public
cookey	src/crypto/des-internal.c	/^static void cookey(const u32 *raw1, u32 *keyout)$/;"	f	file:	signature:(const u32 *raw1, u32 *keyout)
cookie	src/common/wpa_ctrl.c	/^	char *cookie;$/;"	m	struct:wpa_ctrl	file:	access:public
cookie	src/drivers/driver_wired.c	/^	u_int32_t cookie;$/;"	m	struct:dhcp_message	file:	access:public
cookie	src/wps/httpread.c	/^	void *cookie;   \/* pass to callback *\/$/;"	m	struct:httpread	file:	access:public
cookie_handler	src/drivers/driver_nl80211.c	/^static int cookie_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
copy_sta_ht_capab	src/ap/ieee802_11.h	/^u16 copy_sta_ht_capab(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *ht_capab, size_t ht_capab_len)
copy_sta_ht_capab	src/ap/ieee802_11_ht.c	/^u16 copy_sta_ht_capab(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *ht_capab, size_t ht_capab_len)
copy_supp_rates	src/ap/ieee802_11.c	/^static u16 copy_supp_rates(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, struct ieee802_11_elems *elems)
copy_supp_rates	src/rsn_supp/tdls.c	/^static int copy_supp_rates(const struct wpa_eapol_ie_parse *kde,$/;"	f	file:	signature:(const struct wpa_eapol_ie_parse *kde, struct wpa_tdls_peer *peer)
count	hostapd/main.c	/^	size_t count;       \/\/ 接口数量$/;"	m	struct:hapd_interfaces	file:	access:public
count	src/crypto/md4-internal.c	/^	u64 count;			\/* number of bits, mod 2^64 *\/$/;"	m	struct:MD4Context	file:	access:public
count	src/crypto/sha1_i.h	/^	u32 count[2];$/;"	m	struct:SHA1Context	access:public
count	src/radius/radius.h	/^	size_t count;$/;"	m	struct:radius_class_data	access:public
count	src/rsn_supp/tdls.c	/^		int count;      \/* Retry Count *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
count	src/utils/eloop.c	/^	int count;                  \/\/ 已经注册的socket个数$/;"	m	struct:eloop_sock_table	file:	access:public
count_interface_cb	src/ap/wps_hostapd.c	/^static int count_interface_cb(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
count_type	src/p2p/p2p_i.h	/^	u8 count_type;$/;"	m	struct:p2p_noa_desc	access:public
counter	src/ap/wpa_auth_i.h	/^		u8 counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_state_machine::__anon15	access:public
counter	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
counter	src/eap_peer/eap_aka.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_aka_data	file:	access:public
counter	src/eap_peer/eap_sim.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_sim_data	file:	access:public
counter	src/eap_server/eap_server_aka.c	/^	u16 counter;$/;"	m	struct:eap_aka_data	file:	access:public
counter	src/eap_server/eap_server_sim.c	/^	u16 counter;$/;"	m	struct:eap_sim_data	file:	access:public
counter	src/eap_server/eap_sim_db.h	/^	u16 counter;$/;"	m	struct:eap_sim_reauth	access:public
counter_too_small	src/eap_common/eap_sim_common.h	/^	int counter_too_small;$/;"	m	struct:eap_sim_attrs	access:public
counter_too_small	src/eap_peer/eap_aka.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_aka_data	file:	access:public
counter_too_small	src/eap_peer/eap_sim.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_sim_data	file:	access:public
counters	src/radius/radius_server.c	/^	struct radius_server_counters counters;$/;"	m	struct:radius_client	typeref:struct:radius_client::radius_server_counters	file:	access:public
counters	src/radius/radius_server.c	/^	struct radius_server_counters counters;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::radius_server_counters	file:	access:public
country	src/ap/ap_config.h	/^	char country[3]; \/* first two octets: country code as described in$/;"	m	struct:hostapd_config	access:public
country	src/p2p/p2p.h	/^	char country[3];$/;"	m	struct:p2p_config	access:public
country	src/p2p/p2p_i.h	/^	char country[3];$/;"	m	struct:p2p_device	access:public
cred	src/tls/tlsv1_client_i.h	/^	struct tlsv1_credentials *cred;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::tlsv1_credentials	access:public
cred	src/tls/tlsv1_server_i.h	/^	struct tlsv1_credentials *cred;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::tlsv1_credentials	access:public
cred	src/wps/wps.h	/^		const struct wps_credential *cred;$/;"	m	struct:wps_event_data::wps_event_er_ap_settings	typeref:struct:wps_event_data::wps_event_er_ap_settings::wps_credential	access:public
cred	src/wps/wps_er.h	/^	struct wps_credential *cred;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::wps_credential	access:public
cred	src/wps/wps_i.h	/^	const u8 *cred[MAX_CRED_COUNT];$/;"	m	struct:wps_parse_attr	access:public
cred	src/wps/wps_i.h	/^	struct wps_credential cred;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_credential	access:public
cred_attr	src/wps/wps.h	/^	const u8 *cred_attr;$/;"	m	struct:wps_credential	access:public
cred_attr_len	src/wps/wps.h	/^	size_t cred_attr_len;$/;"	m	struct:wps_credential	access:public
cred_cb	src/wps/wps.h	/^	int (*cred_cb)(void *ctx, const struct wps_credential *cred);$/;"	m	struct:wps_context	access:public
cred_len	src/wps/wps_i.h	/^	size_t cred_len[MAX_CRED_COUNT];$/;"	m	struct:wps_parse_attr	access:public
creds	src/crypto/tls_schannel.c	/^	CredHandle creds;$/;"	m	struct:tls_connection	file:	access:public
cross_connect	src/p2p/p2p_i.h	/^	int cross_connect;$/;"	m	struct:p2p_data	access:public
crypt	src/drivers/driver_hostap.h	/^		} crypt;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon81	access:public
crypt_prov	src/crypto/tls_openssl.c	/^	HCRYPTPROV crypt_prov;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
crypto_binding	src/eap_common/eap_fast_common.h	/^	struct eap_tlv_crypto_binding_tlv *crypto_binding;$/;"	m	struct:eap_fast_tlv_parse	typeref:struct:eap_fast_tlv_parse::eap_tlv_crypto_binding_tlv	access:public
crypto_binding	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon172	file:	access:public
crypto_binding	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon162	file:	access:public
crypto_binding_len	src/eap_common/eap_fast_common.h	/^	size_t crypto_binding_len;$/;"	m	struct:eap_fast_tlv_parse	access:public
crypto_binding_nonce	src/eap_server/eap_server_fast.c	/^	u8 crypto_binding_nonce[32];$/;"	m	struct:eap_fast_data	file:	access:public
crypto_binding_sent	src/eap_server/eap_server_peap.c	/^	int crypto_binding_sent;$/;"	m	struct:eap_peap_data	file:	access:public
crypto_binding_used	src/eap_peer/eap_peap.c	/^	int crypto_binding_used;$/;"	m	struct:eap_peap_data	file:	access:public
crypto_binding_used	src/eap_server/eap_server_peap.c	/^	int crypto_binding_used;$/;"	m	struct:eap_peap_data	file:	access:public
crypto_cipher	src/crypto/crypto_cryptoapi.c	/^struct crypto_cipher {$/;"	s	file:
crypto_cipher	src/crypto/crypto_gnutls.c	/^struct crypto_cipher {$/;"	s	file:
crypto_cipher	src/crypto/crypto_internal-cipher.c	/^struct crypto_cipher {$/;"	s	file:
crypto_cipher	src/crypto/crypto_libtomcrypt.c	/^struct crypto_cipher {$/;"	s	file:
crypto_cipher	src/crypto/crypto_nss.c	/^struct crypto_cipher {$/;"	s	file:
crypto_cipher	src/crypto/crypto_openssl.c	/^struct crypto_cipher {$/;"	s	file:
crypto_cipher::__anon186::__anon187::key	src/crypto/crypto_internal-cipher.c	/^			u8 key[16];$/;"	m	struct:crypto_cipher::__anon186::__anon187	file:	access:public
crypto_cipher::__anon186::__anon187::keylen	src/crypto/crypto_internal-cipher.c	/^			size_t keylen;$/;"	m	struct:crypto_cipher::__anon186::__anon187	file:	access:public
crypto_cipher::__anon186::__anon187::used_bytes	src/crypto/crypto_internal-cipher.c	/^			size_t used_bytes;$/;"	m	struct:crypto_cipher::__anon186::__anon187	file:	access:public
crypto_cipher::__anon186::__anon188::block_size	src/crypto/crypto_internal-cipher.c	/^			size_t block_size;$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
crypto_cipher::__anon186::__anon188::cbc	src/crypto/crypto_internal-cipher.c	/^			u8 cbc[32];$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
crypto_cipher::__anon186::__anon188::ctx_dec	src/crypto/crypto_internal-cipher.c	/^			void *ctx_dec;$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
crypto_cipher::__anon186::__anon188::ctx_enc	src/crypto/crypto_internal-cipher.c	/^			void *ctx_enc;$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
crypto_cipher::__anon186::__anon189::cbc	src/crypto/crypto_internal-cipher.c	/^			u8 cbc[8];$/;"	m	struct:crypto_cipher::__anon186::__anon189	file:	access:public
crypto_cipher::__anon186::__anon189::key	src/crypto/crypto_internal-cipher.c	/^			struct des3_key_s key;$/;"	m	struct:crypto_cipher::__anon186::__anon189	typeref:struct:crypto_cipher::__anon186::__anon189::des3_key_s	file:	access:public
crypto_cipher::__anon186::__anon190::cbc	src/crypto/crypto_internal-cipher.c	/^			u8 cbc[8];$/;"	m	struct:crypto_cipher::__anon186::__anon190	file:	access:public
crypto_cipher::__anon186::__anon190::dk	src/crypto/crypto_internal-cipher.c	/^			u32 dk[32];$/;"	m	struct:crypto_cipher::__anon186::__anon190	file:	access:public
crypto_cipher::__anon186::__anon190::ek	src/crypto/crypto_internal-cipher.c	/^			u32 ek[32];$/;"	m	struct:crypto_cipher::__anon186::__anon190	file:	access:public
crypto_cipher::__anon186::aes	src/crypto/crypto_internal-cipher.c	/^		} aes;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon188	file:	access:public
crypto_cipher::__anon186::des	src/crypto/crypto_internal-cipher.c	/^		} des;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon190	file:	access:public
crypto_cipher::__anon186::des3	src/crypto/crypto_internal-cipher.c	/^		} des3;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon189	file:	access:public
crypto_cipher::__anon186::rc4	src/crypto/crypto_internal-cipher.c	/^		} rc4;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon187	file:	access:public
crypto_cipher::__anon199::__anon200::key	src/crypto/crypto_libtomcrypt.c	/^			u8 key[16];$/;"	m	struct:crypto_cipher::__anon199::__anon200	file:	access:public
crypto_cipher::__anon199::__anon200::keylen	src/crypto/crypto_libtomcrypt.c	/^			size_t keylen;$/;"	m	struct:crypto_cipher::__anon199::__anon200	file:	access:public
crypto_cipher::__anon199::__anon200::used_bytes	src/crypto/crypto_libtomcrypt.c	/^			size_t used_bytes;$/;"	m	struct:crypto_cipher::__anon199::__anon200	file:	access:public
crypto_cipher::__anon199::cbc	src/crypto/crypto_libtomcrypt.c	/^		symmetric_CBC cbc;$/;"	m	union:crypto_cipher::__anon199	file:	access:public
crypto_cipher::__anon199::rc4	src/crypto/crypto_libtomcrypt.c	/^		} rc4;$/;"	m	union:crypto_cipher::__anon199	typeref:struct:crypto_cipher::__anon199::__anon200	file:	access:public
crypto_cipher::alg	src/crypto/crypto_internal-cipher.c	/^	enum crypto_cipher_alg alg;$/;"	m	struct:crypto_cipher	typeref:enum:crypto_cipher::crypto_cipher_alg	file:	access:public
crypto_cipher::dec	src/crypto/crypto_gnutls.c	/^	gcry_cipher_hd_t dec;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::dec	src/crypto/crypto_openssl.c	/^	EVP_CIPHER_CTX dec;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::enc	src/crypto/crypto_gnutls.c	/^	gcry_cipher_hd_t enc;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::enc	src/crypto/crypto_openssl.c	/^	EVP_CIPHER_CTX enc;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::key	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY key;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::rc4	src/crypto/crypto_libtomcrypt.c	/^	int rc4;$/;"	m	struct:crypto_cipher	file:	access:public
crypto_cipher::u	src/crypto/crypto_internal-cipher.c	/^	} u;$/;"	m	struct:crypto_cipher	typeref:union:crypto_cipher::__anon186	file:	access:public
crypto_cipher::u	src/crypto/crypto_libtomcrypt.c	/^	} u;$/;"	m	struct:crypto_cipher	typeref:union:crypto_cipher::__anon199	file:	access:public
crypto_cipher_alg	src/crypto/crypto.h	/^enum crypto_cipher_alg {$/;"	g
crypto_cipher_decrypt	src/crypto/crypto.h	/^int __must_check crypto_cipher_decrypt(struct crypto_cipher *ctx,$/;"	p	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_decrypt	src/crypto/crypto_cryptoapi.c	/^int crypto_cipher_decrypt(struct crypto_cipher *ctx, const u8 *crypt,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_decrypt	src/crypto/crypto_gnutls.c	/^int crypto_cipher_decrypt(struct crypto_cipher *ctx, const u8 *crypt,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_decrypt	src/crypto/crypto_internal-cipher.c	/^int crypto_cipher_decrypt(struct crypto_cipher *ctx, const u8 *crypt,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_decrypt	src/crypto/crypto_libtomcrypt.c	/^int crypto_cipher_decrypt(struct crypto_cipher *ctx, const u8 *crypt,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_decrypt	src/crypto/crypto_nss.c	/^int crypto_cipher_decrypt(struct crypto_cipher *ctx, const u8 *crypt,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_decrypt	src/crypto/crypto_openssl.c	/^int crypto_cipher_decrypt(struct crypto_cipher *ctx, const u8 *crypt,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *crypt, u8 *plain, size_t len)
crypto_cipher_deinit	src/crypto/crypto.h	/^void crypto_cipher_deinit(struct crypto_cipher *ctx);$/;"	p	signature:(struct crypto_cipher *ctx)
crypto_cipher_deinit	src/crypto/crypto_cryptoapi.c	/^void crypto_cipher_deinit(struct crypto_cipher *ctx)$/;"	f	signature:(struct crypto_cipher *ctx)
crypto_cipher_deinit	src/crypto/crypto_gnutls.c	/^void crypto_cipher_deinit(struct crypto_cipher *ctx)$/;"	f	signature:(struct crypto_cipher *ctx)
crypto_cipher_deinit	src/crypto/crypto_internal-cipher.c	/^void crypto_cipher_deinit(struct crypto_cipher *ctx)$/;"	f	signature:(struct crypto_cipher *ctx)
crypto_cipher_deinit	src/crypto/crypto_libtomcrypt.c	/^void crypto_cipher_deinit(struct crypto_cipher *ctx)$/;"	f	signature:(struct crypto_cipher *ctx)
crypto_cipher_deinit	src/crypto/crypto_nss.c	/^void crypto_cipher_deinit(struct crypto_cipher *ctx)$/;"	f	signature:(struct crypto_cipher *ctx)
crypto_cipher_deinit	src/crypto/crypto_openssl.c	/^void crypto_cipher_deinit(struct crypto_cipher *ctx)$/;"	f	signature:(struct crypto_cipher *ctx)
crypto_cipher_encrypt	src/crypto/crypto.h	/^int __must_check crypto_cipher_encrypt(struct crypto_cipher *ctx,$/;"	p	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_encrypt	src/crypto/crypto_cryptoapi.c	/^int crypto_cipher_encrypt(struct crypto_cipher *ctx, const u8 *plain,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_encrypt	src/crypto/crypto_gnutls.c	/^int crypto_cipher_encrypt(struct crypto_cipher *ctx, const u8 *plain,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_encrypt	src/crypto/crypto_internal-cipher.c	/^int crypto_cipher_encrypt(struct crypto_cipher *ctx, const u8 *plain,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_encrypt	src/crypto/crypto_libtomcrypt.c	/^int crypto_cipher_encrypt(struct crypto_cipher *ctx, const u8 *plain,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_encrypt	src/crypto/crypto_nss.c	/^int crypto_cipher_encrypt(struct crypto_cipher *ctx, const u8 *plain,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_encrypt	src/crypto/crypto_openssl.c	/^int crypto_cipher_encrypt(struct crypto_cipher *ctx, const u8 *plain,$/;"	f	signature:(struct crypto_cipher *ctx, const u8 *plain, u8 *crypt, size_t len)
crypto_cipher_init	src/crypto/crypto.h	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	p	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_cipher_init	src/crypto/crypto_cryptoapi.c	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	f	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_cipher_init	src/crypto/crypto_gnutls.c	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	f	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_cipher_init	src/crypto/crypto_internal-cipher.c	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	f	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_cipher_init	src/crypto/crypto_libtomcrypt.c	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	f	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_cipher_init	src/crypto/crypto_nss.c	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	f	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_cipher_init	src/crypto/crypto_openssl.c	/^struct crypto_cipher * crypto_cipher_init(enum crypto_cipher_alg alg,$/;"	f	signature:(enum crypto_cipher_alg alg, const u8 *iv, const u8 *key, size_t key_len)
crypto_global_deinit	src/crypto/crypto.h	/^void crypto_global_deinit(void);$/;"	p	signature:(void)
crypto_global_deinit	src/crypto/crypto_cryptoapi.c	/^void crypto_global_deinit(void)$/;"	f	signature:(void)
crypto_global_deinit	src/crypto/crypto_internal.c	/^void crypto_global_deinit(void)$/;"	f	signature:(void)
crypto_global_deinit	src/crypto/crypto_libtomcrypt.c	/^void crypto_global_deinit(void)$/;"	f	signature:(void)
crypto_global_init	src/crypto/crypto.h	/^int __must_check crypto_global_init(void);$/;"	p	signature:(void)
crypto_global_init	src/crypto/crypto_cryptoapi.c	/^int crypto_global_init(void)$/;"	f	signature:(void)
crypto_global_init	src/crypto/crypto_internal.c	/^int crypto_global_init(void)$/;"	f	signature:(void)
crypto_global_init	src/crypto/crypto_libtomcrypt.c	/^int crypto_global_init(void)$/;"	f	signature:(void)
crypto_hash	src/crypto/crypto_cryptoapi.c	/^struct crypto_hash {$/;"	s	file:
crypto_hash	src/crypto/crypto_internal.c	/^struct crypto_hash {$/;"	s	file:
crypto_hash	src/crypto/crypto_libtomcrypt.c	/^struct crypto_hash {$/;"	s	file:
crypto_hash::__anon193::md5	src/crypto/crypto_internal.c	/^		struct MD5Context md5;$/;"	m	union:crypto_hash::__anon193	typeref:struct:crypto_hash::__anon193::MD5Context	file:	access:public
crypto_hash::__anon193::sha1	src/crypto/crypto_internal.c	/^		struct SHA1Context sha1;$/;"	m	union:crypto_hash::__anon193	typeref:struct:crypto_hash::__anon193::SHA1Context	file:	access:public
crypto_hash::__anon198::hmac	src/crypto/crypto_libtomcrypt.c	/^		hmac_state hmac;$/;"	m	union:crypto_hash::__anon198	file:	access:public
crypto_hash::__anon198::md	src/crypto/crypto_libtomcrypt.c	/^		hash_state md;$/;"	m	union:crypto_hash::__anon198	file:	access:public
crypto_hash::alg	src/crypto/crypto_cryptoapi.c	/^	enum crypto_hash_alg alg;$/;"	m	struct:crypto_hash	typeref:enum:crypto_hash::crypto_hash_alg	file:	access:public
crypto_hash::alg	src/crypto/crypto_internal.c	/^	enum crypto_hash_alg alg;$/;"	m	struct:crypto_hash	typeref:enum:crypto_hash::crypto_hash_alg	file:	access:public
crypto_hash::alg	src/crypto/crypto_libtomcrypt.c	/^	enum crypto_hash_alg alg;$/;"	m	struct:crypto_hash	typeref:enum:crypto_hash::crypto_hash_alg	file:	access:public
crypto_hash::error	src/crypto/crypto_cryptoapi.c	/^	int error;$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::error	src/crypto/crypto_libtomcrypt.c	/^	int error;$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::hash	src/crypto/crypto_cryptoapi.c	/^	HCRYPTHASH hash;$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::key	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY key;$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::key	src/crypto/crypto_internal.c	/^	u8 key[64];$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::key_len	src/crypto/crypto_internal.c	/^	size_t key_len;$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_hash	file:	access:public
crypto_hash::u	src/crypto/crypto_internal.c	/^	} u;$/;"	m	struct:crypto_hash	typeref:union:crypto_hash::__anon193	file:	access:public
crypto_hash::u	src/crypto/crypto_libtomcrypt.c	/^	} u;$/;"	m	struct:crypto_hash	typeref:union:crypto_hash::__anon198	file:	access:public
crypto_hash_alg	src/crypto/crypto.h	/^enum crypto_hash_alg {$/;"	g
crypto_hash_finish	src/crypto/crypto.h	/^int crypto_hash_finish(struct crypto_hash *ctx, u8 *hash, size_t *len);$/;"	p	signature:(struct crypto_hash *ctx, u8 *hash, size_t *len)
crypto_hash_finish	src/crypto/crypto_cryptoapi.c	/^int crypto_hash_finish(struct crypto_hash *ctx, u8 *mac, size_t *len)$/;"	f	signature:(struct crypto_hash *ctx, u8 *mac, size_t *len)
crypto_hash_finish	src/crypto/crypto_internal.c	/^int crypto_hash_finish(struct crypto_hash *ctx, u8 *mac, size_t *len)$/;"	f	signature:(struct crypto_hash *ctx, u8 *mac, size_t *len)
crypto_hash_finish	src/crypto/crypto_libtomcrypt.c	/^int crypto_hash_finish(struct crypto_hash *ctx, u8 *mac, size_t *len)$/;"	f	signature:(struct crypto_hash *ctx, u8 *mac, size_t *len)
crypto_hash_init	src/crypto/crypto.h	/^struct crypto_hash * crypto_hash_init(enum crypto_hash_alg alg, const u8 *key,$/;"	p	signature:(enum crypto_hash_alg alg, const u8 *key, size_t key_len)
crypto_hash_init	src/crypto/crypto_cryptoapi.c	/^struct crypto_hash * crypto_hash_init(enum crypto_hash_alg alg, const u8 *key,$/;"	f	signature:(enum crypto_hash_alg alg, const u8 *key, size_t key_len)
crypto_hash_init	src/crypto/crypto_internal.c	/^struct crypto_hash * crypto_hash_init(enum crypto_hash_alg alg, const u8 *key,$/;"	f	signature:(enum crypto_hash_alg alg, const u8 *key, size_t key_len)
crypto_hash_init	src/crypto/crypto_libtomcrypt.c	/^struct crypto_hash * crypto_hash_init(enum crypto_hash_alg alg, const u8 *key,$/;"	f	signature:(enum crypto_hash_alg alg, const u8 *key, size_t key_len)
crypto_hash_update	src/crypto/crypto.h	/^void crypto_hash_update(struct crypto_hash *ctx, const u8 *data, size_t len);$/;"	p	signature:(struct crypto_hash *ctx, const u8 *data, size_t len)
crypto_hash_update	src/crypto/crypto_cryptoapi.c	/^void crypto_hash_update(struct crypto_hash *ctx, const u8 *data, size_t len)$/;"	f	signature:(struct crypto_hash *ctx, const u8 *data, size_t len)
crypto_hash_update	src/crypto/crypto_internal.c	/^void crypto_hash_update(struct crypto_hash *ctx, const u8 *data, size_t len)$/;"	f	signature:(struct crypto_hash *ctx, const u8 *data, size_t len)
crypto_hash_update	src/crypto/crypto_libtomcrypt.c	/^void crypto_hash_update(struct crypto_hash *ctx, const u8 *data, size_t len)$/;"	f	signature:(struct crypto_hash *ctx, const u8 *data, size_t len)
crypto_mod_exp	src/crypto/crypto.h	/^int __must_check crypto_mod_exp(const u8 *base, size_t base_len,$/;"	p	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_mod_exp	src/crypto/crypto_cryptoapi.c	/^int crypto_mod_exp(const u8 *base, size_t base_len,$/;"	f	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_mod_exp	src/crypto/crypto_gnutls.c	/^int crypto_mod_exp(const u8 *base, size_t base_len,$/;"	f	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_mod_exp	src/crypto/crypto_internal-modexp.c	/^int crypto_mod_exp(const u8 *base, size_t base_len,$/;"	f	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_mod_exp	src/crypto/crypto_libtomcrypt.c	/^int crypto_mod_exp(const u8 *base, size_t base_len,$/;"	f	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_mod_exp	src/crypto/crypto_nss.c	/^int crypto_mod_exp(const u8 *base, size_t base_len,$/;"	f	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_mod_exp	src/crypto/crypto_openssl.c	/^int crypto_mod_exp(const u8 *base, size_t base_len,$/;"	f	signature:(const u8 *base, size_t base_len, const u8 *power, size_t power_len, const u8 *modulus, size_t modulus_len, u8 *result, size_t *result_len)
crypto_private_key	src/crypto/crypto_cryptoapi.c	/^struct crypto_private_key {$/;"	s	file:
crypto_private_key	src/crypto/crypto_libtomcrypt.c	/^struct crypto_private_key {$/;"	s	file:
crypto_private_key::prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_private_key	file:	access:public
crypto_private_key::rsa	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY rsa;$/;"	m	struct:crypto_private_key	file:	access:public
crypto_private_key::rsa	src/crypto/crypto_libtomcrypt.c	/^	rsa_key rsa;$/;"	m	struct:crypto_private_key	file:	access:public
crypto_private_key_decrypt_pkcs1_v15	src/crypto/crypto.h	/^int __must_check crypto_private_key_decrypt_pkcs1_v15($/;"	p	signature:( struct crypto_private_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_private_key_decrypt_pkcs1_v15	src/crypto/crypto_internal-rsa.c	/^int crypto_private_key_decrypt_pkcs1_v15(struct crypto_private_key *key,$/;"	f	signature:(struct crypto_private_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_private_key_free	src/crypto/crypto.h	/^void crypto_private_key_free(struct crypto_private_key *key);$/;"	p	signature:(struct crypto_private_key *key)
crypto_private_key_free	src/crypto/crypto_cryptoapi.c	/^void crypto_private_key_free(struct crypto_private_key *key)$/;"	f	signature:(struct crypto_private_key *key)
crypto_private_key_free	src/crypto/crypto_internal-rsa.c	/^void crypto_private_key_free(struct crypto_private_key *key)$/;"	f	signature:(struct crypto_private_key *key)
crypto_private_key_free	src/crypto/crypto_libtomcrypt.c	/^void crypto_private_key_free(struct crypto_private_key *key)$/;"	f	signature:(struct crypto_private_key *key)
crypto_private_key_import	src/crypto/crypto.h	/^struct crypto_private_key * crypto_private_key_import(const u8 *key,$/;"	p	signature:(const u8 *key, size_t len, const char *passwd)
crypto_private_key_import	src/crypto/crypto_cryptoapi.c	/^struct crypto_private_key * crypto_private_key_import(const u8 *key,$/;"	f	signature:(const u8 *key, size_t len, const char *passwd)
crypto_private_key_import	src/crypto/crypto_internal-rsa.c	/^struct crypto_private_key * crypto_private_key_import(const u8 *key,$/;"	f	signature:(const u8 *key, size_t len, const char *passwd)
crypto_private_key_import	src/crypto/crypto_libtomcrypt.c	/^struct crypto_private_key * crypto_private_key_import(const u8 *key,$/;"	f	signature:(const u8 *key, size_t len, const char *passwd)
crypto_private_key_sign_pkcs1	src/crypto/crypto.h	/^int __must_check crypto_private_key_sign_pkcs1(struct crypto_private_key *key,$/;"	p	signature:(struct crypto_private_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_private_key_sign_pkcs1	src/crypto/crypto_cryptoapi.c	/^int crypto_private_key_sign_pkcs1(struct crypto_private_key *key,$/;"	f	signature:(struct crypto_private_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_private_key_sign_pkcs1	src/crypto/crypto_internal-rsa.c	/^int crypto_private_key_sign_pkcs1(struct crypto_private_key *key,$/;"	f	signature:(struct crypto_private_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_private_key_sign_pkcs1	src/crypto/crypto_libtomcrypt.c	/^int crypto_private_key_sign_pkcs1(struct crypto_private_key *key,$/;"	f	signature:(struct crypto_private_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_public_key	src/crypto/crypto_cryptoapi.c	/^struct crypto_public_key {$/;"	s	file:
crypto_public_key	src/crypto/crypto_libtomcrypt.c	/^struct crypto_public_key {$/;"	s	file:
crypto_public_key::prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_public_key	file:	access:public
crypto_public_key::rsa	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY rsa;$/;"	m	struct:crypto_public_key	file:	access:public
crypto_public_key::rsa	src/crypto/crypto_libtomcrypt.c	/^	rsa_key rsa;$/;"	m	struct:crypto_public_key	file:	access:public
crypto_public_key_decrypt_pkcs1	src/crypto/crypto.h	/^int __must_check crypto_public_key_decrypt_pkcs1($/;"	p	signature:( struct crypto_public_key *key, const u8 *crypt, size_t crypt_len, u8 *plain, size_t *plain_len)
crypto_public_key_decrypt_pkcs1	src/crypto/crypto_internal-rsa.c	/^int crypto_public_key_decrypt_pkcs1(struct crypto_public_key *key,$/;"	f	signature:(struct crypto_public_key *key, const u8 *crypt, size_t crypt_len, u8 *plain, size_t *plain_len)
crypto_public_key_decrypt_pkcs1	src/crypto/crypto_libtomcrypt.c	/^int crypto_public_key_decrypt_pkcs1(struct crypto_public_key *key,$/;"	f	signature:(struct crypto_public_key *key, const u8 *crypt, size_t crypt_len, u8 *plain, size_t *plain_len)
crypto_public_key_encrypt_pkcs1_v15	src/crypto/crypto.h	/^int __must_check crypto_public_key_encrypt_pkcs1_v15($/;"	p	signature:( struct crypto_public_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_public_key_encrypt_pkcs1_v15	src/crypto/crypto_cryptoapi.c	/^int crypto_public_key_encrypt_pkcs1_v15(struct crypto_public_key *key,$/;"	f	signature:(struct crypto_public_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_public_key_encrypt_pkcs1_v15	src/crypto/crypto_internal-rsa.c	/^int crypto_public_key_encrypt_pkcs1_v15(struct crypto_public_key *key,$/;"	f	signature:(struct crypto_public_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_public_key_encrypt_pkcs1_v15	src/crypto/crypto_libtomcrypt.c	/^int crypto_public_key_encrypt_pkcs1_v15(struct crypto_public_key *key,$/;"	f	signature:(struct crypto_public_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_public_key_free	src/crypto/crypto.h	/^void crypto_public_key_free(struct crypto_public_key *key);$/;"	p	signature:(struct crypto_public_key *key)
crypto_public_key_free	src/crypto/crypto_cryptoapi.c	/^void crypto_public_key_free(struct crypto_public_key *key)$/;"	f	signature:(struct crypto_public_key *key)
crypto_public_key_free	src/crypto/crypto_internal-rsa.c	/^void crypto_public_key_free(struct crypto_public_key *key)$/;"	f	signature:(struct crypto_public_key *key)
crypto_public_key_free	src/crypto/crypto_libtomcrypt.c	/^void crypto_public_key_free(struct crypto_public_key *key)$/;"	f	signature:(struct crypto_public_key *key)
crypto_public_key_from_cert	src/crypto/crypto.h	/^struct crypto_public_key * crypto_public_key_from_cert(const u8 *buf,$/;"	p	signature:(const u8 *buf, size_t len)
crypto_public_key_from_cert	src/crypto/crypto_cryptoapi.c	/^struct crypto_public_key * crypto_public_key_from_cert(const u8 *buf,$/;"	f	signature:(const u8 *buf, size_t len)
crypto_public_key_from_cert	src/crypto/crypto_internal-rsa.c	/^struct crypto_public_key * crypto_public_key_from_cert(const u8 *buf,$/;"	f	signature:(const u8 *buf, size_t len)
crypto_public_key_from_cert	src/crypto/crypto_libtomcrypt.c	/^struct crypto_public_key * crypto_public_key_from_cert(const u8 *buf,$/;"	f	signature:(const u8 *buf, size_t len)
crypto_public_key_import	src/crypto/crypto.h	/^struct crypto_public_key * crypto_public_key_import(const u8 *key, size_t len);$/;"	p	signature:(const u8 *key, size_t len)
crypto_public_key_import	src/crypto/crypto_cryptoapi.c	/^struct crypto_public_key * crypto_public_key_import(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
crypto_public_key_import	src/crypto/crypto_internal-rsa.c	/^struct crypto_public_key * crypto_public_key_import(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
crypto_public_key_import	src/crypto/crypto_libtomcrypt.c	/^struct crypto_public_key * crypto_public_key_import(const u8 *key, size_t len)$/;"	f	signature:(const u8 *key, size_t len)
crypto_rsa_encrypt_pkcs1	src/crypto/crypto_libtomcrypt.c	/^static int crypto_rsa_encrypt_pkcs1(int block_type, rsa_key *key, int key_type,$/;"	f	file:	signature:(int block_type, rsa_key *key, int key_type, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
crypto_rsa_exptmod	src/tls/rsa.c	/^int crypto_rsa_exptmod(const u8 *in, size_t inlen, u8 *out, size_t *outlen,$/;"	f	signature:(const u8 *in, size_t inlen, u8 *out, size_t *outlen, struct crypto_rsa_key *key, int use_private)
crypto_rsa_exptmod	src/tls/rsa.h	/^int crypto_rsa_exptmod(const u8 *in, size_t inlen, u8 *out, size_t *outlen,$/;"	p	signature:(const u8 *in, size_t inlen, u8 *out, size_t *outlen, struct crypto_rsa_key *key, int use_private)
crypto_rsa_free	src/tls/rsa.c	/^void crypto_rsa_free(struct crypto_rsa_key *key)$/;"	f	signature:(struct crypto_rsa_key *key)
crypto_rsa_free	src/tls/rsa.h	/^void crypto_rsa_free(struct crypto_rsa_key *key);$/;"	p	signature:(struct crypto_rsa_key *key)
crypto_rsa_get_modulus_len	src/tls/rsa.c	/^size_t crypto_rsa_get_modulus_len(struct crypto_rsa_key *key)$/;"	f	signature:(struct crypto_rsa_key *key)
crypto_rsa_get_modulus_len	src/tls/rsa.h	/^size_t crypto_rsa_get_modulus_len(struct crypto_rsa_key *key);$/;"	p	signature:(struct crypto_rsa_key *key)
crypto_rsa_import_private_key	src/tls/rsa.c	/^crypto_rsa_import_private_key(const u8 *buf, size_t len)$/;"	f	signature:(const u8 *buf, size_t len)
crypto_rsa_import_private_key	src/tls/rsa.h	/^crypto_rsa_import_private_key(const u8 *buf, size_t len);$/;"	p	signature:(const u8 *buf, size_t len)
crypto_rsa_import_public_key	src/tls/rsa.c	/^crypto_rsa_import_public_key(const u8 *buf, size_t len)$/;"	f	signature:(const u8 *buf, size_t len)
crypto_rsa_import_public_key	src/tls/rsa.h	/^crypto_rsa_import_public_key(const u8 *buf, size_t len);$/;"	p	signature:(const u8 *buf, size_t len)
crypto_rsa_key	src/tls/rsa.c	/^struct crypto_rsa_key {$/;"	s	file:
crypto_rsa_key::d	src/tls/rsa.c	/^	struct bignum *d; \/* private exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::dmp1	src/tls/rsa.c	/^	struct bignum *dmp1; \/* d mod (p - 1); CRT exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::dmq1	src/tls/rsa.c	/^	struct bignum *dmq1; \/* d mod (q - 1); CRT exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::e	src/tls/rsa.c	/^	struct bignum *e; \/* public exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::iqmp	src/tls/rsa.c	/^	struct bignum *iqmp; \/* 1 \/ q mod p; CRT coefficient *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::n	src/tls/rsa.c	/^	struct bignum *n; \/* modulus (p * q) *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::p	src/tls/rsa.c	/^	struct bignum *p; \/* prime p (factor of n) *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_key::private_key	src/tls/rsa.c	/^	int private_key; \/* whether private key is set *\/$/;"	m	struct:crypto_rsa_key	file:	access:public
crypto_rsa_key::q	src/tls/rsa.c	/^	struct bignum *q; \/* prime q (factor of n) *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
crypto_rsa_parse_integer	src/tls/rsa.c	/^static const u8 * crypto_rsa_parse_integer(const u8 *pos, const u8 *end,$/;"	f	file:	signature:(const u8 *pos, const u8 *end, struct bignum *num)
cryptoapi_error	src/crypto/tls_openssl.c	/^static void cryptoapi_error(const char *msg)$/;"	f	file:	signature:(const char *msg)
cryptoapi_find_cert	src/crypto/tls_openssl.c	/^static const CERT_CONTEXT * cryptoapi_find_cert(const char *name, DWORD store)$/;"	f	file:	signature:(const char *name, DWORD store)
cryptoapi_finish	src/crypto/tls_openssl.c	/^static int cryptoapi_finish(RSA *rsa)$/;"	f	file:	signature:(RSA *rsa)
cryptoapi_free_data	src/crypto/tls_openssl.c	/^static void cryptoapi_free_data(struct cryptoapi_rsa_data *priv)$/;"	f	file:	signature:(struct cryptoapi_rsa_data *priv)
cryptoapi_hash_vector	src/crypto/crypto_cryptoapi.c	/^int cryptoapi_hash_vector(ALG_ID alg, size_t hash_len, size_t num_elem,$/;"	f	signature:(ALG_ID alg, size_t hash_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
cryptoapi_report_error	src/crypto/crypto_cryptoapi.c	/^static void cryptoapi_report_error(const char *msg)$/;"	f	file:	signature:(const char *msg)
cryptoapi_rsa_data	src/crypto/tls_openssl.c	/^struct cryptoapi_rsa_data {$/;"	s	file:
cryptoapi_rsa_data::cert	src/crypto/tls_openssl.c	/^	const CERT_CONTEXT *cert;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
cryptoapi_rsa_data::crypt_prov	src/crypto/tls_openssl.c	/^	HCRYPTPROV crypt_prov;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
cryptoapi_rsa_data::free_crypt_prov	src/crypto/tls_openssl.c	/^	BOOL free_crypt_prov;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
cryptoapi_rsa_data::key_spec	src/crypto/tls_openssl.c	/^	DWORD key_spec;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
cryptoapi_rsa_priv_dec	src/crypto/tls_openssl.c	/^static int cryptoapi_rsa_priv_dec(int flen, const unsigned char *from,$/;"	f	file:	signature:(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)
cryptoapi_rsa_priv_enc	src/crypto/tls_openssl.c	/^static int cryptoapi_rsa_priv_enc(int flen, const unsigned char *from,$/;"	f	file:	signature:(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)
cryptoapi_rsa_pub_dec	src/crypto/tls_openssl.c	/^static int cryptoapi_rsa_pub_dec(int flen, const unsigned char *from,$/;"	f	file:	signature:(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)
cryptoapi_rsa_pub_enc	src/crypto/tls_openssl.c	/^static int cryptoapi_rsa_pub_enc(int flen, const unsigned char *from,$/;"	f	file:	signature:(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)
csuite_count	src/eap_server/eap_server_gpsk.c	/^	size_t csuite_count;$/;"	m	struct:eap_gpsk_data	file:	access:public
csuite_list	src/eap_server/eap_server_gpsk.c	/^	struct eap_gpsk_csuite csuite_list[MAX_NUM_CSUITES];$/;"	m	struct:eap_gpsk_data	typeref:struct:eap_gpsk_data::eap_gpsk_csuite	file:	access:public
ctrl_conn	hostapd/hostapd_cli.c	/^static struct wpa_ctrl *ctrl_conn;$/;"	v	typeref:struct:wpa_ctrl	file:
ctrl_dir_state	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { CTRL_DIR_FORCE_BOTH, CTRL_DIR_IN_OR_BOTH } ctrl_dir_state;   \/\/ 受控方向状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon71	access:public
ctrl_dir_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * ctrl_dir_state_txt(int s)$/;"	f	file:	signature:(int s)
ctrl_dir_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * ctrl_dir_txt(ControlledDirection dir)$/;"	f	file:	signature:(ControlledDirection dir)
ctrl_dst	src/ap/hostapd.h	/^	struct wpa_ctrl_dst *ctrl_dst;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpa_ctrl_dst	access:public
ctrl_iface_deinit	src/ap/hostapd.h	/^	void (*ctrl_iface_deinit)(struct hostapd_data *hapd);$/;"	m	struct:hostapd_iface	access:public
ctrl_iface_dir	hostapd/hostapd_cli.c	/^static const char *ctrl_iface_dir = "\/var\/run\/hostapd";$/;"	v	file:
ctrl_iface_init	src/ap/hostapd.h	/^	int (*ctrl_iface_init)(struct hostapd_data *hapd);      \/\/ 在hostapd_init中注册，在hostapd_setup_bss调用，用于初始化CLI的socket接口$/;"	m	struct:hostapd_iface	access:public
ctrl_ifname	hostapd/hostapd_cli.c	/^static char *ctrl_ifname = NULL;$/;"	v	file:
ctrl_interface	src/ap/ap_config.h	/^	char *ctrl_interface; \/* directory for UNIX domain sockets *\/$/;"	m	struct:hostapd_bss_config	access:public
ctrl_interface_gid	src/ap/ap_config.h	/^	gid_t ctrl_interface_gid;$/;"	m	struct:hostapd_bss_config	access:public
ctrl_interface_gid_set	src/ap/ap_config.h	/^	int ctrl_interface_gid_set;$/;"	m	struct:hostapd_bss_config	access:public
ctrl_sock	src/ap/hostapd.h	/^	int ctrl_sock;          \/\/ 本地socket fd $/;"	m	struct:hostapd_data	access:public
cts_protect	src/drivers/driver.h	/^	int cts_protect;$/;"	m	struct:wpa_driver_ap_params	access:public
ctx	src/ap/hostapd.h	/^	void *ctx;$/;"	m	struct:hostapd_probereq_cb	access:public
ctx	src/ap/pmksa_cache_auth.c	/^	void *ctx;$/;"	m	struct:rsn_pmksa_cache	file:	access:public
ctx	src/ap/wpa_auth.h	/^	void *ctx;$/;"	m	struct:wpa_auth_callbacks	access:public
ctx	src/ap/wps_hostapd.c	/^	void *ctx;$/;"	m	struct:wps_for_each_data	file:	access:public
ctx	src/drivers/driver_broadcom.c	/^	void *ctx;$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
ctx	src/drivers/driver_bsd.c	/^	void	*ctx;$/;"	m	struct:bsd_driver_data	file:	access:public
ctx	src/drivers/driver_hostap.c	/^	void *ctx;$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
ctx	src/drivers/driver_madwifi.c	/^	void *ctx;$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
ctx	src/drivers/driver_ndis.h	/^	void *ctx;$/;"	m	struct:wpa_driver_ndis_data	access:public
ctx	src/drivers/driver_nl80211.c	/^	void *ctx;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
ctx	src/drivers/driver_none.c	/^	void *ctx;$/;"	m	struct:none_driver_data	file:	access:public
ctx	src/drivers/driver_privsep.c	/^	void *ctx;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
ctx	src/drivers/driver_ralink.c	/^	void *ctx;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
ctx	src/drivers/driver_roboswitch.c	/^	void *ctx;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
ctx	src/drivers/driver_test.c	/^	void *ctx;$/;"	m	struct:wpa_driver_test_data	file:	access:public
ctx	src/drivers/driver_wext.h	/^	void *ctx;$/;"	m	struct:wpa_driver_wext_data	access:public
ctx	src/drivers/driver_wired.c	/^	void *ctx;                  \/\/ 指向父结构hostapd_data $/;"	m	struct:wpa_driver_wired_data	file:	access:public
ctx	src/drivers/netlink.h	/^	void *ctx;$/;"	m	struct:netlink_config	access:public
ctx	src/drivers/rfkill.h	/^	void *ctx;$/;"	m	struct:rfkill_config	access:public
ctx	src/eap_server/eap_sim_db.c	/^	void *ctx;$/;"	m	struct:eap_sim_db_data	file:	access:public
ctx	src/eapol_auth/eapol_auth_sm.h	/^	void *ctx;  \/\/ 指向所属的bss(也就是hostapd_data结构体)$/;"	m	struct:eapol_auth_config	access:public
ctx	src/eapol_supp/eapol_supp_sm.c	/^	struct eapol_ctx *ctx;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eapol_ctx	file:	access:public
ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *ctx;$/;"	m	struct:eapol_ctx	access:public
ctx	src/radius/radius_client.c	/^	void *ctx;  \/\/ 指向所属的bss，也就是hostapd_data$/;"	m	struct:radius_client_data	file:	access:public
ctx	src/rsn_supp/pmksa_cache.c	/^	void *ctx;$/;"	m	struct:rsn_pmksa_cache	file:	access:public
ctx	src/rsn_supp/wpa.h	/^	void *ctx; \/* pointer to arbitrary upper level context *\/$/;"	m	struct:wpa_sm_ctx	access:public
ctx	src/rsn_supp/wpa_i.h	/^	struct wpa_sm_ctx *ctx;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_sm_ctx	access:public
ctx	src/utils/pcsc_funcs.c	/^	SCARDCONTEXT ctx;$/;"	m	struct:scard_data	file:	access:public
ctx	src/wps/wps_upnp_i.h	/^	struct upnp_wps_device_ctx *ctx; \/* callback table *\/$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::upnp_wps_device_ctx	access:public
ctx_block_len	src/ap/iapp.c	/^	u16 ctx_block_len;$/;"	m	struct:iapp_cache_notify	file:	access:public
ctx_block_len	src/ap/iapp.c	/^	u16 ctx_block_len;$/;"	m	struct:iapp_move_notify	file:	access:public
ctx_block_len	src/ap/iapp.c	/^	u16 ctx_block_len;$/;"	m	struct:iapp_move_response	file:	access:public
ctx_dec	src/crypto/crypto_internal-cipher.c	/^			void *ctx_dec;$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
ctx_enc	src/crypto/crypto_internal-cipher.c	/^			void *ctx_enc;$/;"	m	struct:crypto_cipher::__anon186::__anon188	file:	access:public
cur_pmksa	src/rsn_supp/wpa_i.h	/^	struct rsn_pmksa_cache_entry *cur_pmksa; \/* current PMKSA entry *\/$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::rsn_pmksa_cache_entry	access:public
curlen	src/crypto/sha256-internal.c	/^	u32 state[8], curlen;$/;"	m	struct:sha256_state	file:	access:public
currbuf	src/utils/edit.c	/^static char currbuf[CMD_BUF_LEN];$/;"	v	file:
currbuf_valid	src/utils/edit.c	/^static int currbuf_valid = 0;$/;"	v	file:
currentId	src/eap_server/eap_i.h	/^	int currentId;$/;"	m	struct:eap_sm	access:public
currentMethod	src/eap_server/eap_i.h	/^	EapType currentMethod;$/;"	m	struct:eap_sm	access:public
current_ap	src/ap/iapp.c	/^	u8 current_ap[ETH_ALEN];$/;"	m	struct:iapp_cache_notify	file:	access:public
current_ap	src/common/ieee802_11_defs.h	/^			u8 current_ap[6];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
current_cipher_suite	src/crypto/tls_gnutls.c	/^	cipher_suite_st current_cipher_suite;$/;"	m	struct:__anon192	file:	access:public
current_event	src/wps/wps_upnp_i.h	/^	struct wps_event_ *current_event; \/* non-NULL if being sent (not in q)$/;"	m	struct:subscription	typeref:struct:subscription::wps_event_	access:public
current_freq	src/drivers/driver_test.c	/^	int current_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
current_hapd	src/ap/wps_hostapd.c	/^	struct hostapd_data *current_hapd;$/;"	m	struct:wps_stop_reg_data	typeref:struct:wps_stop_reg_data::hostapd_data	file:	access:public
current_mode	src/ap/hostapd.h	/^	struct hostapd_hw_modes *current_mode;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_hw_modes	access:public
current_mode	src/drivers/driver_hostap.c	/^	int current_mode; \/* infra\/adhoc *\/$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
current_noise	src/drivers/driver.h	/^	int current_noise;$/;"	m	struct:wpa_signal_info	access:public
current_pac	src/eap_peer/eap_fast.c	/^	struct eap_fast_pac *current_pac;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_pac	file:	access:public
current_rates	src/ap/hostapd.h	/^	struct hostapd_rate_data *current_rates;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_rate_data	access:public
current_signal	src/drivers/driver.h	/^	int current_signal;$/;"	m	struct:wpa_signal_info	access:public
current_tx_rate	src/drivers/driver.h	/^	unsigned long current_tx_rate;$/;"	m	struct:hostap_sta_driver_data	access:public
current_txrate	src/drivers/driver.h	/^	int current_txrate;$/;"	m	struct:wpa_signal_info	access:public
cw	src/common/ieee802_11_defs.h	/^	u8 cw; \/* ECWmin, ECWmax (CW = 2^ECW - 1) *\/$/;"	m	struct:wmm_ac_parameter	access:public
cwmax	src/ap/ap_config.h	/^	int cwmax;$/;"	m	struct:hostapd_tx_queue_params	access:public
cwmax	src/ap/ap_config.h	/^	int cwmax;$/;"	m	struct:hostapd_wmm_ac_params	access:public
cwmin	src/ap/ap_config.h	/^	int cwmin;$/;"	m	struct:hostapd_tx_queue_params	access:public
cwmin	src/ap/ap_config.h	/^	int cwmin;$/;"	m	struct:hostapd_wmm_ac_params	access:public
d	src/tls/rsa.c	/^	struct bignum *d; \/* private exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
da	src/ap/iapp.c	/^	u8 da[ETH_ALEN]; \/* broadcast *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
da	src/common/ieee802_11_defs.h	/^	u8 da[6];$/;"	m	struct:ieee80211_mgmt	access:public
da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::rx_action	access:public
da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::unprot_deauth	access:public
da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::unprot_disassoc	access:public
data	src/ap/wpa_auth_glue.c	/^	const u8 *data;$/;"	m	struct:wpa_auth_ft_iface_iter_data	file:	access:public
data	src/drivers/driver.h	/^		const u8 *data; \/\/ 帧数据部分$/;"	m	struct:wpa_event_data::eapol_rx	access:public
data	src/drivers/driver.h	/^		const u8 *data;$/;"	m	struct:wpa_event_data::ft_rrb_rx	access:public
data	src/drivers/driver.h	/^		const u8 *data;$/;"	m	struct:wpa_event_data::rx_action	access:public
data	src/drivers/driver.h	/^		const u8 *data;$/;"	m	struct:wpa_event_data::tx_status	access:public
data	src/drivers/driver_hostap.h	/^			u8 data[0];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon83	access:public
data	src/drivers/driver_hostap.h	/^			u8 data[0];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon84	access:public
data	src/drivers/driver_hostap.h	/^	} data[0];$/;"	m	struct:prism2_download_param	typeref:struct:prism2_download_param::prism2_download_area	access:public
data	src/drivers/wireless_copy.h	/^	struct iw_point	data;		\/* Other large parameters *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point	access:public
data	src/eap_peer/eap_config.h	/^	u8 *data;$/;"	m	struct:wpa_config_blob	access:public
data	src/radius/radius.h	/^	u8 *data;$/;"	m	struct:radius_attr_data	access:public
data	src/radius/radius_client.c	/^	void *data;$/;"	m	struct:radius_rx_handler	file:	access:public
data	src/wps/wps_upnp_event.c	/^	struct wpabuf *data;            \/* event data to send *\/$/;"	m	struct:wps_event_	typeref:struct:wps_event_::wpabuf	file:	access:public
data_len	src/ap/wpa_auth_glue.c	/^	size_t data_len;$/;"	m	struct:wpa_auth_ft_iface_iter_data	file:	access:public
data_len	src/drivers/driver.h	/^		size_t data_len;$/;"	m	struct:wpa_event_data::ft_rrb_rx	access:public
data_len	src/drivers/driver.h	/^		size_t data_len;$/;"	m	struct:wpa_event_data::tx_status	access:public
data_len	src/drivers/driver.h	/^		size_t data_len;\/\/ 帧数据长度 $/;"	m	struct:wpa_event_data::eapol_rx	access:public
data_length	src/ap/wpa_auth.h	/^	le16 data_length; \/* little endian length of data (44) *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
data_length	src/ap/wpa_auth.h	/^	le16 data_length; \/* little endian length of data (76) *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
data_length	src/ap/wpa_auth.h	/^	le16 data_length; \/* little endian length of data (88) *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
data_type	src/radius/radius.c	/^	} data_type;$/;"	m	struct:radius_attr_type	typeref:enum:radius_attr_type::__anon204	file:	access:public
datarate	src/ap/ap_list.h	/^	int datarate; \/* in 100 kbps *\/$/;"	m	struct:ap_info	access:public
datarate	src/ap/hostapd.h	/^	u32 datarate;$/;"	m	struct:hostapd_frame_info	access:public
datarate	src/drivers/driver.h	/^		u32 datarate;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
day	src/utils/os.h	/^	int day; \/* 1..31 *\/$/;"	m	struct:os_tm	access:public
deauth	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED deauth;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon40	access:public
deauth_info	src/drivers/driver.h	/^	struct deauth_info {$/;"	s	union:wpa_event_data	access:public
deauth_info	src/drivers/driver.h	/^	} deauth_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::deauth_info	access:public
deauth_reason	src/ap/sta_info.h	/^	u16 deauth_reason;$/;"	m	struct:sta_info	access:public
deauthenticate	src/drivers/driver.h	/^	int (*deauthenticate)(void *priv, const u8 *addr, int reason_code);$/;"	m	struct:wpa_driver_ops	access:public
deauthenticate	src/rsn_supp/wpa.h	/^	void (*deauthenticate)(void * ctx, int reason_code); $/;"	m	struct:wpa_sm_ctx	access:public
debug_level	hostapd/ctrl_iface.c	/^	int debug_level;$/;"	m	struct:wpa_ctrl_dst	file:	access:public
dec	src/crypto/crypto_gnutls.c	/^	gcry_cipher_hd_t dec;$/;"	m	struct:crypto_cipher	file:	access:public
dec	src/crypto/crypto_openssl.c	/^	EVP_CIPHER_CTX dec;$/;"	m	struct:crypto_cipher	file:	access:public
decision	src/eap_peer/eap_i.h	/^	EapDecision decision;$/;"	m	struct:eap_method_ret	access:public
decision	src/eap_peer/eap_i.h	/^	EapDecision decision;$/;"	m	struct:eap_sm	access:public
decision	src/eap_server/eap_i.h	/^	} decision;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon157	access:public
decrypt_ms_key	src/radius/radius.c	/^static u8 * decrypt_ms_key(const u8 *key, size_t len,$/;"	f	file:	signature:(const u8 *key, size_t len, const u8 *req_authenticator, const u8 *secret, size_t secret_len, size_t *reslen)
default_if_indices	src/drivers/driver_nl80211.c	/^	int default_if_indices[16];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
default_len	src/ap/ap_config.h	/^	size_t default_len; \/* key length used for dynamic key generation *\/$/;"	m	struct:hostapd_wep_keys	access:public
default_socket_path	hostapd/hlr_auc_gw.c	/^static const char *default_socket_path = "\/tmp\/hlr_auc_gw.sock";$/;"	v	file:
default_wep_key	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *default_wep_key;$/;"	m	struct:eapol_authenticator	access:public
default_wep_key_idx	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 default_wep_key_idx;$/;"	m	struct:eapol_authenticator	access:public
default_wep_key_len	src/ap/ap_config.h	/^	size_t default_wep_key_len;             \/\/ 设置WEP用的key长度(不用wep就不用管)$/;"	m	struct:hostapd_bss_config	access:public
deinit	src/drivers/driver.h	/^	void (*deinit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
deinit	src/eap_peer/eap_i.h	/^	void (*deinit)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
deinit_ap	src/drivers/driver.h	/^	int (*deinit_ap)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
deinit_done_cb	src/wps/wps_er.h	/^	void (*deinit_done_cb)(void *ctx);$/;"	m	struct:wps_er	access:public
deinit_done_ctx	src/wps/wps_er.h	/^	void *deinit_done_ctx;$/;"	m	struct:wps_er	access:public
deinit_for_reauth	src/eap_peer/eap_i.h	/^	void (*deinit_for_reauth)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
deinit_func	src/wps/wps.h	/^	void (*deinit_func)(void *);$/;"	m	struct:oob_device_data	access:public
deinit_func	src/wps/wps.h	/^	void (*deinit_func)(void);$/;"	m	struct:oob_nfc_device_data	access:public
deinit_nfc	src/wps/wps_nfc.c	/^static void deinit_nfc(void *priv)$/;"	f	file:	signature:(void *priv)
deinit_nfc_pn531	src/wps/wps_nfc_pn531.c	/^static void deinit_nfc_pn531(void)$/;"	f	file:	signature:(void)
deinit_p2p_cli	src/drivers/driver.h	/^	int (*deinit_p2p_cli)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
deinit_ufd	src/wps/wps_ufd.c	/^static void deinit_ufd(void *priv)$/;"	f	file:	signature:(void *priv)
deinitializing	src/wps/wps_er.h	/^	int deinitializing;$/;"	m	struct:wps_er	access:public
del_ifidx	src/drivers/driver_nl80211.c	/^static inline void del_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
del_ifidx	src/drivers/driver_nl80211.c	/^static void del_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
del_ifidx	src/drivers/driver_nl80211.c	/^static void del_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx);$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
delay_bound	src/common/ieee802_11_defs.h	/^	le32 delay_bound;$/;"	m	struct:wmm_tspec_element	access:public
delete_current	src/utils/edit.c	/^static void delete_current(void)$/;"	f	file:	signature:(void)
delete_left	src/utils/edit.c	/^static void delete_left(void)$/;"	f	file:	signature:(void)
delete_word	src/utils/edit.c	/^static void delete_word(void)$/;"	f	file:	signature:(void)
dellink_cb	src/drivers/netlink.h	/^	void (*dellink_cb)(void *ctx, struct ifinfomsg *ifi, u8 *buf,$/;"	m	struct:netlink_config	access:public
deny_mac	src/ap/ap_config.h	/^	struct mac_acl_entry *deny_mac;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::mac_acl_entry	access:public
depth	src/crypto/tls.h	/^		int depth;$/;"	m	struct:tls_event_data::__anon194	access:public
depth	src/crypto/tls.h	/^		int depth;$/;"	m	struct:tls_event_data::__anon195	access:public
des	src/crypto/crypto_internal-cipher.c	/^		} des;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon190	file:	access:public
des3	src/crypto/crypto_internal-cipher.c	/^		} des3;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon189	file:	access:public
des3_decrypt	src/crypto/des-internal.c	/^void des3_decrypt(const u8 *crypt, const struct des3_key_s *key, u8 *plain)$/;"	f	signature:(const u8 *crypt, const struct des3_key_s *key, u8 *plain)
des3_decrypt	src/crypto/des_i.h	/^void des3_decrypt(const u8 *crypt, const struct des3_key_s *key, u8 *plain);$/;"	p	signature:(const u8 *crypt, const struct des3_key_s *key, u8 *plain)
des3_decrypt	src/eap_common/ikev2_common.c	/^void des3_decrypt(const u8 *crypt, const struct des3_key_s *key, u8 *plain);$/;"	p	file:	signature:(const u8 *crypt, const struct des3_key_s *key, u8 *plain)
des3_encrypt	src/crypto/des-internal.c	/^void des3_encrypt(const u8 *plain, const struct des3_key_s *key, u8 *crypt)$/;"	f	signature:(const u8 *plain, const struct des3_key_s *key, u8 *crypt)
des3_encrypt	src/crypto/des_i.h	/^void des3_encrypt(const u8 *plain, const struct des3_key_s *key, u8 *crypt);$/;"	p	signature:(const u8 *plain, const struct des3_key_s *key, u8 *crypt)
des3_encrypt	src/eap_common/ikev2_common.c	/^void des3_encrypt(const u8 *plain, const struct des3_key_s *key, u8 *crypt);$/;"	p	file:	signature:(const u8 *plain, const struct des3_key_s *key, u8 *crypt)
des3_key_s	src/crypto/des_i.h	/^struct des3_key_s {$/;"	s
des3_key_s	src/eap_common/ikev2_common.c	/^struct des3_key_s {$/;"	s	file:
des3_key_s::dk	src/crypto/des_i.h	/^	u32 dk[3][32];$/;"	m	struct:des3_key_s	access:public
des3_key_s::dk	src/eap_common/ikev2_common.c	/^	u32 dk[3][32];$/;"	m	struct:des3_key_s	file:	access:public
des3_key_s::ek	src/crypto/des_i.h	/^	u32 ek[3][32];$/;"	m	struct:des3_key_s	access:public
des3_key_s::ek	src/eap_common/ikev2_common.c	/^	u32 ek[3][32];$/;"	m	struct:des3_key_s	file:	access:public
des3_key_setup	src/crypto/des-internal.c	/^void des3_key_setup(const u8 *key, struct des3_key_s *dkey)$/;"	f	signature:(const u8 *key, struct des3_key_s *dkey)
des3_key_setup	src/crypto/des_i.h	/^void des3_key_setup(const u8 *key, struct des3_key_s *dkey);$/;"	p	signature:(const u8 *key, struct des3_key_s *dkey)
des3_key_setup	src/eap_common/ikev2_common.c	/^void des3_key_setup(const u8 *key, struct des3_key_s *dkey);$/;"	p	file:	signature:(const u8 *key, struct des3_key_s *dkey)
des_block_decrypt	src/crypto/des-internal.c	/^void des_block_decrypt(const u8 *crypt, const u32 *dk, u8 *plain)$/;"	f	signature:(const u8 *crypt, const u32 *dk, u8 *plain)
des_block_decrypt	src/crypto/des_i.h	/^void des_block_decrypt(const u8 *crypt, const u32 *dk, u8 *plain);$/;"	p	signature:(const u8 *crypt, const u32 *dk, u8 *plain)
des_block_encrypt	src/crypto/des-internal.c	/^void des_block_encrypt(const u8 *plain, const u32 *ek, u8 *crypt)$/;"	f	signature:(const u8 *plain, const u32 *ek, u8 *crypt)
des_block_encrypt	src/crypto/des_i.h	/^void des_block_encrypt(const u8 *plain, const u32 *ek, u8 *crypt);$/;"	p	signature:(const u8 *plain, const u32 *ek, u8 *crypt)
des_encrypt	src/crypto/crypto.h	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher);$/;"	p	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/crypto_cryptoapi.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/crypto_gnutls.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/crypto_libtomcrypt.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/crypto_none.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/crypto_nss.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/crypto_openssl.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_encrypt	src/crypto/des-internal.c	/^void des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)$/;"	f	signature:(const u8 *clear, const u8 *key, u8 *cypher)
des_key_setup	src/crypto/des-internal.c	/^void des_key_setup(const u8 *key, u32 *ek, u32 *dk)$/;"	f	signature:(const u8 *key, u32 *ek, u32 *dk)
des_key_setup	src/crypto/des_i.h	/^void des_key_setup(const u8 *key, u32 *ek, u32 *dk);$/;"	p	signature:(const u8 *key, u32 *ek, u32 *dk)
desc	src/drivers/driver.h	/^	char *desc;$/;"	m	struct:wpa_interface_info	access:public
desc	src/drivers/driver.h	/^	const char *desc;$/;"	m	struct:wpa_driver_ops	access:public
desc_url	src/wps/wps_upnp_i.h	/^	char *desc_url;$/;"	m	struct:upnp_wps_device_sm	access:public
descr_count	src/common/wpa_common.h	/^	u8 descr_count;$/;"	m	struct:rsn_rdie	access:public
desfunc	src/crypto/des-internal.c	/^static void desfunc(u32 *block, const u32 *keys)$/;"	f	file:	signature:(u32 *block, const u32 *keys)
deskey	src/crypto/des-internal.c	/^static void deskey(const u8 *key, int decrypt, u32 *keyout)$/;"	f	file:	signature:(const u8 *key, int decrypt, u32 *keyout)
dest	src/common/wpa_ctrl.c	/^	struct sockaddr_in dest;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_in	file:	access:public
dest	src/common/wpa_ctrl.c	/^	struct sockaddr_un dest;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_un	file:	access:public
dest	src/drivers/driver_wired.c	/^	u8 dest[6];$/;"	m	struct:ieee8023_hdr	file:	access:public
dest	src/rsn_supp/tdls.c	/^		u8 dest[ETH_ALEN];$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
dev	src/wps/wps.h	/^	struct wps_device_data dev;$/;"	m	struct:wps_context	typeref:struct:wps_context::wps_device_data	access:public
dev	src/wps/wps_registrar.c	/^	struct wps_device_data dev;$/;"	m	struct:wps_registrar_device	typeref:struct:wps_registrar_device::wps_device_data	file:	access:public
dev_addr	src/drivers/driver.h	/^		const u8 *dev_addr;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
dev_addr	src/drivers/driver.h	/^		const u8 *dev_addr;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
dev_addr	src/p2p/p2p.h	/^	u8 dev_addr[ETH_ALEN];$/;"	m	struct:p2p_config	access:public
dev_addr	src/p2p/p2p_group.c	/^	u8 dev_addr[ETH_ALEN]; \/* P2P Device Address *\/$/;"	m	struct:p2p_group_member	file:	access:public
dev_capab	src/drivers/driver.h	/^		u8 dev_capab;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
dev_capab	src/drivers/driver.h	/^		u8 dev_capab;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
dev_capab	src/p2p/p2p.h	/^	u8 dev_capab;$/;"	m	struct:p2p_peer_info	access:public
dev_capab	src/p2p/p2p_group.c	/^	u8 dev_capab;$/;"	m	struct:p2p_group_member	file:	access:public
dev_capab	src/p2p/p2p_i.h	/^		u8 dev_capab;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
dev_capab	src/p2p/p2p_i.h	/^	u8 dev_capab;$/;"	m	struct:p2p_data	access:public
dev_found	src/p2p/p2p.h	/^	void (*dev_found)(void *ctx, const u8 *addr,$/;"	m	struct:p2p_config	access:public
dev_lost	src/p2p/p2p.h	/^	void (*dev_lost)(void *ctx, const u8 *dev_addr);$/;"	m	struct:p2p_config	access:public
dev_name	src/drivers/driver.h	/^		const char *dev_name;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
dev_name	src/drivers/driver.h	/^		const char *dev_name;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
dev_name	src/drivers/driver.h	/^	const char *dev_name;$/;"	m	struct:p2p_params	access:public
dev_name	src/p2p/p2p.h	/^	char *dev_name;$/;"	m	struct:p2p_config	access:public
dev_name	src/p2p/p2p_i.h	/^		const char *dev_name;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
dev_name	src/wps/wps.h	/^		const char *dev_name;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
dev_name	src/wps/wps.h	/^		const u8 *dev_name;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
dev_name	src/wps/wps_er.h	/^	char *dev_name;$/;"	m	struct:wps_er_sta	access:public
dev_name	src/wps/wps_i.h	/^	const u8 *dev_name;$/;"	m	struct:wps_parse_attr	access:public
dev_name_len	src/p2p/p2p_i.h	/^		size_t dev_name_len;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
dev_name_len	src/wps/wps.h	/^		size_t dev_name_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
dev_name_len	src/wps/wps_i.h	/^	size_t dev_name_len;$/;"	m	struct:wps_parse_attr	access:public
dev_passwd_id	src/drivers/driver.h	/^		u16 dev_passwd_id;$/;"	m	struct:wpa_event_data::p2p_go_neg_req_rx	access:public
dev_passwd_id	src/wps/wps.h	/^		u16 dev_passwd_id;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
dev_passwd_id	src/wps/wps.h	/^		u16 dev_passwd_id;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
dev_passwd_id	src/wps/wps_er.h	/^	u16 dev_passwd_id;$/;"	m	struct:wps_er_sta	access:public
dev_password	src/wps/wps.h	/^	struct wpabuf *dev_password;$/;"	m	struct:oob_conf_data	typeref:struct:oob_conf_data::wpabuf	access:public
dev_password	src/wps/wps_i.h	/^	u8 *dev_password;$/;"	m	struct:wps_data	access:public
dev_password_id	src/p2p/p2p_i.h	/^	u16 dev_password_id;$/;"	m	struct:p2p_message	access:public
dev_password_id	src/wps/wps.h	/^		u16 dev_password_id;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
dev_password_id	src/wps/wps_i.h	/^	const u8 *dev_password_id; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
dev_password_id	src/wps/wps_upnp_i.h	/^	u16 dev_password_id;$/;"	m	struct:subscription	access:public
dev_password_len	src/wps/wps_i.h	/^	size_t dev_password_len;$/;"	m	struct:wps_data	access:public
dev_pw_id	src/wps/wps.h	/^	u16 dev_pw_id;$/;"	m	struct:wps_config	access:public
dev_pw_id	src/wps/wps_i.h	/^	u16 dev_pw_id;$/;"	m	struct:wps_data	access:public
dev_pwd_e_file_filter	src/wps/wps_ufd.c	/^static int dev_pwd_e_file_filter(const struct dirent *entry)$/;"	f	file:	signature:(const struct dirent *entry)
dev_type_list_match	src/p2p/p2p.c	/^int dev_type_list_match(const u8 *dev_type, const u8 *req_dev_type[],$/;"	f	signature:(const u8 *dev_type, const u8 *req_dev_type[], size_t num_req_dev_type)
dev_type_list_match	src/p2p/p2p_i.h	/^int dev_type_list_match(const u8 *dev_type, const u8 *req_dev_type[],$/;"	p	signature:(const u8 *dev_type, const u8 *req_dev_type[], size_t num_req_dev_type)
dev_type_match	src/p2p/p2p.c	/^static int dev_type_match(const u8 *dev_type, const u8 *req_dev_type)$/;"	f	file:	signature:(const u8 *dev_type, const u8 *req_dev_type)
device_id	src/p2p/p2p_i.h	/^	const u8 *device_id;$/;"	m	struct:p2p_message	access:public
device_name	src/ap/ap_config.h	/^	char *device_name;$/;"	m	struct:hostapd_bss_config	access:public
device_name	src/p2p/p2p.h	/^	char device_name[33];$/;"	m	struct:p2p_peer_info	access:public
device_name	src/p2p/p2p_i.h	/^	char device_name[33];$/;"	m	struct:p2p_message	access:public
device_name	src/wps/wps.h	/^	char *device_name;$/;"	m	struct:oob_device_data	access:public
device_name	src/wps/wps.h	/^	char *device_name;$/;"	m	struct:wps_device_data	access:public
device_path	src/wps/wps.h	/^	char *device_path;$/;"	m	struct:oob_device_data	access:public
device_type	src/ap/ap_config.h	/^	u8 device_type[WPS_DEV_TYPE_LEN];$/;"	m	struct:hostapd_bss_config	access:public
devices	src/p2p/p2p_i.h	/^	struct dl_list devices;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::dl_list	access:public
devices	src/wps/wps_registrar.c	/^	struct wps_registrar_device *devices;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wps_registrar_device	file:	access:public
dh	src/eap_peer/ikev2.h	/^	const struct dh_group *dh;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::dh_group	access:public
dh	src/eap_peer/ikev2.h	/^	int dh;$/;"	m	struct:ikev2_proposal_data	access:public
dh	src/eap_server/ikev2.h	/^	const struct dh_group *dh;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::dh_group	access:public
dh	src/eap_server/ikev2.h	/^	int dh;$/;"	m	struct:ikev2_proposal_data	access:public
dh5_derive_shared	src/crypto/crypto_openssl.c	/^struct wpabuf * dh5_derive_shared(void *ctx, const struct wpabuf *peer_public,$/;"	f	signature:(void *ctx, const struct wpabuf *peer_public, const struct wpabuf *own_private)
dh5_derive_shared	src/crypto/dh_group5.c	/^struct wpabuf * dh5_derive_shared(void *ctx, const struct wpabuf *peer_public,$/;"	f	signature:(void *ctx, const struct wpabuf *peer_public, const struct wpabuf *own_private)
dh5_derive_shared	src/crypto/dh_group5.h	/^struct wpabuf * dh5_derive_shared(void *ctx, const struct wpabuf *peer_public,$/;"	p	signature:(void *ctx, const struct wpabuf *peer_public, const struct wpabuf *own_private)
dh5_free	src/crypto/crypto_openssl.c	/^void dh5_free(void *ctx)$/;"	f	signature:(void *ctx)
dh5_free	src/crypto/dh_group5.c	/^void dh5_free(void *ctx)$/;"	f	signature:(void *ctx)
dh5_free	src/crypto/dh_group5.h	/^void dh5_free(void *ctx);$/;"	p	signature:(void *ctx)
dh5_init	src/crypto/crypto_openssl.c	/^void * dh5_init(struct wpabuf **priv, struct wpabuf **publ)$/;"	f	signature:(struct wpabuf **priv, struct wpabuf **publ)
dh5_init	src/crypto/dh_group5.c	/^void * dh5_init(struct wpabuf **priv, struct wpabuf **publ)$/;"	f	signature:(struct wpabuf **priv, struct wpabuf **publ)
dh5_init	src/crypto/dh_group5.h	/^void * dh5_init(struct wpabuf **priv, struct wpabuf **publ);$/;"	p	signature:(struct wpabuf **priv, struct wpabuf **publ)
dh_blob	src/crypto/tls.h	/^	const u8 *dh_blob;$/;"	m	struct:tls_connection_params	access:public
dh_blob_len	src/crypto/tls.h	/^	size_t dh_blob_len;$/;"	m	struct:tls_connection_params	access:public
dh_ctx	src/wps/wps.h	/^	void *dh_ctx;$/;"	m	struct:wps_context	access:public
dh_ctx	src/wps/wps_i.h	/^	void *dh_ctx;$/;"	m	struct:wps_data	access:public
dh_derive_shared	src/crypto/dh_groups.c	/^struct wpabuf * dh_derive_shared(const struct wpabuf *peer_public,$/;"	f	signature:(const struct wpabuf *peer_public, const struct wpabuf *own_private, const struct dh_group *dh)
dh_derive_shared	src/crypto/dh_groups.h	/^struct wpabuf * dh_derive_shared(const struct wpabuf *peer_public,$/;"	p	signature:(const struct wpabuf *peer_public, const struct wpabuf *own_private, const struct dh_group *dh)
dh_file	src/ap/ap_config.h	/^	char *dh_file;$/;"	m	struct:hostapd_bss_config	access:public
dh_file	src/crypto/tls.h	/^	const char *dh_file;$/;"	m	struct:tls_connection_params	access:public
dh_file	src/eap_peer/eap_config.h	/^	u8 *dh_file;$/;"	m	struct:eap_peer_config	access:public
dh_file2	src/eap_peer/eap_config.h	/^	u8 *dh_file2;$/;"	m	struct:eap_peer_config	access:public
dh_g	src/tls/tlsv1_client_i.h	/^	u8 *dh_g;$/;"	m	struct:tlsv1_client	access:public
dh_g	src/tls/tlsv1_cred.h	/^	u8 *dh_g; \/* generator *\/$/;"	m	struct:tlsv1_credentials	access:public
dh_g_len	src/tls/tlsv1_client_i.h	/^	size_t dh_g_len;$/;"	m	struct:tlsv1_client	access:public
dh_g_len	src/tls/tlsv1_cred.h	/^	size_t dh_g_len;$/;"	m	struct:tlsv1_credentials	access:public
dh_group	src/crypto/dh_groups.h	/^struct dh_group {$/;"	s
dh_group14_generator	src/crypto/dh_groups.c	/^static const u8 dh_group14_generator[1] = { 0x02 };$/;"	v	file:
dh_group14_prime	src/crypto/dh_groups.c	/^static const u8 dh_group14_prime[256] = {$/;"	v	file:
dh_group15_generator	src/crypto/dh_groups.c	/^static const u8 dh_group15_generator[1] = { 0x02 };$/;"	v	file:
dh_group15_prime	src/crypto/dh_groups.c	/^static const u8 dh_group15_prime[384] = {$/;"	v	file:
dh_group16_generator	src/crypto/dh_groups.c	/^static const u8 dh_group16_generator[1] = { 0x02 };$/;"	v	file:
dh_group16_prime	src/crypto/dh_groups.c	/^static const u8 dh_group16_prime[512] = {$/;"	v	file:
dh_group17_generator	src/crypto/dh_groups.c	/^static const u8 dh_group17_generator[1] = { 0x02 };$/;"	v	file:
dh_group17_prime	src/crypto/dh_groups.c	/^static const u8 dh_group17_prime[768] = {$/;"	v	file:
dh_group18_generator	src/crypto/dh_groups.c	/^static const u8 dh_group18_generator[1] = { 0x02 };$/;"	v	file:
dh_group18_prime	src/crypto/dh_groups.c	/^static const u8 dh_group18_prime[1024] = {$/;"	v	file:
dh_group1_generator	src/crypto/dh_groups.c	/^static const u8 dh_group1_generator[1] = { 0x02 };$/;"	v	file:
dh_group1_prime	src/crypto/dh_groups.c	/^static const u8 dh_group1_prime[96] = {$/;"	v	file:
dh_group2_generator	src/crypto/dh_groups.c	/^static const u8 dh_group2_generator[1] = { 0x02 };$/;"	v	file:
dh_group2_prime	src/crypto/dh_groups.c	/^static const u8 dh_group2_prime[128] = {$/;"	v	file:
dh_group5_generator	src/crypto/dh_groups.c	/^static const u8 dh_group5_generator[1] = { 0x02 };$/;"	v	file:
dh_group5_prime	src/crypto/dh_groups.c	/^static const u8 dh_group5_prime[192] = {$/;"	v	file:
dh_group::generator	src/crypto/dh_groups.h	/^	const u8 *generator;$/;"	m	struct:dh_group	access:public
dh_group::generator_len	src/crypto/dh_groups.h	/^	size_t generator_len;$/;"	m	struct:dh_group	access:public
dh_group::id	src/crypto/dh_groups.h	/^	int id;$/;"	m	struct:dh_group	access:public
dh_group::prime	src/crypto/dh_groups.h	/^	const u8 *prime;$/;"	m	struct:dh_group	access:public
dh_group::prime_len	src/crypto/dh_groups.h	/^	size_t prime_len;$/;"	m	struct:dh_group	access:public
dh_group_id	src/eap_common/eap_pax_common.h	/^	u8 dh_group_id;$/;"	m	struct:eap_pax_hdr	access:public
dh_group_id	src/eap_peer/eap_pax.c	/^	u8 mac_id, dh_group_id, public_key_id;$/;"	m	struct:eap_pax_data	file:	access:public
dh_groups	src/crypto/dh_groups.c	/^static struct dh_group dh_groups[] = {$/;"	v	typeref:struct:dh_group	file:
dh_groups_get	src/crypto/dh_groups.c	/^const struct dh_group * dh_groups_get(int id)$/;"	f	signature:(int id)
dh_groups_get	src/crypto/dh_groups.h	/^const struct dh_group * dh_groups_get(int id);$/;"	p	signature:(int id)
dh_init	src/crypto/dh_groups.c	/^struct wpabuf * dh_init(const struct dh_group *dh, struct wpabuf **priv)$/;"	f	signature:(const struct dh_group *dh, struct wpabuf **priv)
dh_init	src/crypto/dh_groups.h	/^struct wpabuf * dh_init(const struct dh_group *dh, struct wpabuf **priv);$/;"	p	signature:(const struct dh_group *dh, struct wpabuf **priv)
dh_p	src/tls/tlsv1_client_i.h	/^	u8 *dh_p;$/;"	m	struct:tlsv1_client	access:public
dh_p	src/tls/tlsv1_cred.h	/^	u8 *dh_p; \/* prime *\/$/;"	m	struct:tlsv1_credentials	access:public
dh_p_len	src/tls/tlsv1_client_i.h	/^	size_t dh_p_len;$/;"	m	struct:tlsv1_client	access:public
dh_p_len	src/tls/tlsv1_cred.h	/^	size_t dh_p_len;$/;"	m	struct:tlsv1_credentials	access:public
dh_privkey	src/wps/wps.h	/^	struct wpabuf *dh_privkey;$/;"	m	struct:wps_context	typeref:struct:wps_context::wpabuf	access:public
dh_privkey	src/wps/wps_i.h	/^	struct wpabuf *dh_privkey;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
dh_pubkey	src/wps/wps.h	/^	struct wpabuf *dh_pubkey;$/;"	m	struct:wps_context	typeref:struct:wps_context::wpabuf	access:public
dh_pubkey_e	src/wps/wps_i.h	/^	struct wpabuf *dh_pubkey_e;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
dh_pubkey_r	src/wps/wps_i.h	/^	struct wpabuf *dh_pubkey_r;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
dh_secret	src/tls/tlsv1_server_i.h	/^	u8 *dh_secret;$/;"	m	struct:tlsv1_server	access:public
dh_secret_len	src/tls/tlsv1_server_i.h	/^	size_t dh_secret_len;$/;"	m	struct:tlsv1_server	access:public
dh_ys	src/tls/tlsv1_client_i.h	/^	u8 *dh_ys;$/;"	m	struct:tlsv1_client	access:public
dh_ys_len	src/tls/tlsv1_client_i.h	/^	size_t dh_ys_len;$/;"	m	struct:tlsv1_client	access:public
dhcp_message	src/drivers/driver_wired.c	/^struct dhcp_message {$/;"	s	file:
dhcp_message::chaddr	src/drivers/driver_wired.c	/^	u_int8_t chaddr[16];$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::ciaddr	src/drivers/driver_wired.c	/^	u_int32_t ciaddr;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::cookie	src/drivers/driver_wired.c	/^	u_int32_t cookie;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::file	src/drivers/driver_wired.c	/^	u_int8_t file[128];$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::flags	src/drivers/driver_wired.c	/^	u_int16_t flags;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::giaddr	src/drivers/driver_wired.c	/^	u_int32_t giaddr;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::hlen	src/drivers/driver_wired.c	/^	u_int8_t hlen;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::hops	src/drivers/driver_wired.c	/^	u_int8_t hops;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::htype	src/drivers/driver_wired.c	/^	u_int8_t htype;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::op	src/drivers/driver_wired.c	/^	u_int8_t op;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::options	src/drivers/driver_wired.c	/^	u_int8_t options[308]; \/* 312 - cookie *\/$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::secs	src/drivers/driver_wired.c	/^	u_int16_t secs;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::siaddr	src/drivers/driver_wired.c	/^	u_int32_t siaddr;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::sname	src/drivers/driver_wired.c	/^	u_int8_t sname[64];$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::xid	src/drivers/driver_wired.c	/^	u_int32_t xid;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_message::yiaddr	src/drivers/driver_wired.c	/^	u_int32_t yiaddr;$/;"	m	struct:dhcp_message	file:	access:public
dhcp_sock	src/drivers/driver_wired.c	/^	int dhcp_sock; \/* socket for dhcp packets *\/$/;"	m	struct:wpa_driver_wired_data	file:	access:public
dialog_token	src/common/ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
dialog_token	src/common/ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
dialog_token	src/drivers/driver.h	/^		u8 dialog_token;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
dialog_token	src/p2p/p2p_i.h	/^	u8 dialog_token;$/;"	m	struct:p2p_device	access:public
dialog_token	src/p2p/p2p_i.h	/^	u8 dialog_token;$/;"	m	struct:p2p_message	access:public
dialog_token	src/rsn_supp/tdls.c	/^		u8 dialog_token;$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
disable_11n	src/ap/ap_config.h	/^	int disable_11n;$/;"	m	struct:hostapd_bss_config	access:public
disable_auto_conf	src/wps/wps.h	/^	int disable_auto_conf;$/;"	m	struct:wps_registrar_config	access:public
disable_auto_conf	src/wps/wps_registrar.c	/^	int disable_auto_conf;$/;"	m	struct:wps_registrar	file:	access:public
disable_pmksa_caching	src/ap/ap_config.h	/^	int disable_pmksa_caching;$/;"	m	struct:hostapd_bss_config	access:public
disable_pmksa_caching	src/ap/wpa_auth.h	/^	int disable_pmksa_caching;$/;"	m	struct:wpa_auth_config	access:public
disable_time_checks	src/tls/tlsv1_client_i.h	/^	unsigned int disable_time_checks:1;$/;"	m	struct:tlsv1_client	access:public
disabled	src/drivers/wireless_copy.h	/^  __u8		disabled;	\/* Disable the feature *\/$/;"	m	struct:iw_param	access:public
disabled_11b_rates	src/drivers/driver_nl80211.c	/^	unsigned int disabled_11b_rates:1;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
disassoc	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED disassoc;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon44	access:public
disassoc_info	src/drivers/driver.h	/^	struct disassoc_info {$/;"	s	union:wpa_event_data	access:public
disassoc_info	src/drivers/driver.h	/^	} disassoc_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::disassoc_info	access:public
disassoc_low_ack	src/ap/ap_config.h	/^	int disassoc_low_ack;$/;"	m	struct:hostapd_bss_config	access:public
disassoc_reason	src/ap/sta_info.h	/^	u16 disassoc_reason;$/;"	m	struct:sta_info	access:public
disassoc_timer	src/common/ieee802_11_defs.h	/^					le16 disassoc_timer;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
disassociate	src/drivers/driver.h	/^	int (*disassociate)(void *priv, const u8 *addr, int reason_code);$/;"	m	struct:wpa_driver_ops	access:public
disassociate	src/rsn_supp/wpa.h	/^	void (*disassociate)(void *ctx, int reason_code);$/;"	m	struct:wpa_sm_ctx	access:public
discard	src/drivers/wireless_copy.h	/^	struct iw_discarded	discard;	\/* Packet discarded counts *\/$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_discarded	access:public
disconnect	src/ap/wpa_auth.h	/^	void (*disconnect)(void *ctx, const u8 *addr, u16 reason);$/;"	m	struct:wpa_auth_callbacks	access:public
dk	src/crypto/crypto_internal-cipher.c	/^			u32 dk[32];$/;"	m	struct:crypto_cipher::__anon186::__anon190	file:	access:public
dk	src/crypto/des_i.h	/^	u32 dk[3][32];$/;"	m	struct:des3_key_s	access:public
dk	src/eap_common/ikev2_common.c	/^	u32 dk[3][32];$/;"	m	struct:des3_key_s	file:	access:public
dl_cmd	src/drivers/driver_hostap.h	/^	u32 dl_cmd;$/;"	m	struct:prism2_download_param	access:public
dl_handle	src/eap_peer/eap_i.h	/^	void *dl_handle;$/;"	m	struct:eap_method	access:public
dl_list	src/utils/list.h	/^struct dl_list {$/;"	s
dl_list::next	src/utils/list.h	/^	struct dl_list *next;$/;"	m	struct:dl_list	typeref:struct:dl_list::dl_list	access:public
dl_list::prev	src/utils/list.h	/^	struct dl_list *prev;$/;"	m	struct:dl_list	typeref:struct:dl_list::dl_list	access:public
dl_list_add	src/utils/list.h	/^static inline void dl_list_add(struct dl_list *list, struct dl_list *item)$/;"	f	signature:(struct dl_list *list, struct dl_list *item)
dl_list_add_tail	src/utils/list.h	/^static inline void dl_list_add_tail(struct dl_list *list, struct dl_list *item)$/;"	f	signature:(struct dl_list *list, struct dl_list *item)
dl_list_del	src/utils/list.h	/^static inline void dl_list_del(struct dl_list *item)$/;"	f	signature:(struct dl_list *item)
dl_list_empty	src/utils/list.h	/^static inline int dl_list_empty(struct dl_list *list)$/;"	f	signature:(struct dl_list *list)
dl_list_entry	src/utils/list.h	71;"	d
dl_list_first	src/utils/list.h	74;"	d
dl_list_for_each	src/utils/list.h	82;"	d
dl_list_for_each_reverse	src/utils/list.h	93;"	d
dl_list_for_each_safe	src/utils/list.h	87;"	d
dl_list_init	src/utils/list.h	/^static inline void dl_list_init(struct dl_list *list)$/;"	f	signature:(struct dl_list *list)
dl_list_last	src/utils/list.h	78;"	d
dl_list_len	src/utils/list.h	/^static inline unsigned int dl_list_len(struct dl_list *list)$/;"	f	signature:(struct dl_list *list)
dlhandle	src/eap_peer/tncc.c	/^	void *dlhandle; \/* from dlopen() *\/$/;"	m	struct:tnc_if_imc	file:	access:public
dlhandle	src/eap_server/tncs.c	/^	void *dlhandle; \/* from dlopen() *\/$/;"	m	struct:tnc_if_imv	file:	access:public
dll	src/utils/pcsc_funcs.c	/^static HINSTANCE dll = NULL; \/* winscard.dll *\/$/;"	v	file:
dll_SCardBeginTransaction	src/utils/pcsc_funcs.c	/^(*dll_SCardBeginTransaction)(IN SCARDHANDLE hCard);$/;"	v	file:
dll_SCardConnectA	src/utils/pcsc_funcs.c	/^(*dll_SCardConnectA)(IN SCARDCONTEXT hContext,$/;"	v	file:
dll_SCardDisconnect	src/utils/pcsc_funcs.c	/^(*dll_SCardDisconnect)(IN SCARDHANDLE hCard,$/;"	v	file:
dll_SCardEndTransaction	src/utils/pcsc_funcs.c	/^(*dll_SCardEndTransaction)(IN SCARDHANDLE hCard, IN DWORD dwDisposition);$/;"	v	file:
dll_SCardEstablishContext	src/utils/pcsc_funcs.c	/^(*dll_SCardEstablishContext)(IN DWORD dwScope,$/;"	v	file:
dll_SCardListReadersA	src/utils/pcsc_funcs.c	/^(*dll_SCardListReadersA)(IN SCARDCONTEXT hContext,$/;"	v	file:
dll_SCardReleaseContext	src/utils/pcsc_funcs.c	/^static long (*dll_SCardReleaseContext)(long hContext);$/;"	v	file:
dll_SCardTransmit	src/utils/pcsc_funcs.c	/^(*dll_SCardTransmit)(IN SCARDHANDLE hCard,$/;"	v	file:
dll_g_rgSCardT0Pci	src/utils/pcsc_funcs.c	/^static const SCARD_IO_REQUEST *dll_g_rgSCardT0Pci, *dll_g_rgSCardT1Pci;$/;"	v	file:
dll_g_rgSCardT1Pci	src/utils/pcsc_funcs.c	/^static const SCARD_IO_REQUEST *dll_g_rgSCardT0Pci, *dll_g_rgSCardT1Pci;$/;"	v	file:
dmp1	src/tls/rsa.c	/^	struct bignum *dmp1; \/* d mod (p - 1); CRT exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
dmq1	src/tls/rsa.c	/^	struct bignum *dmq1; \/* d mod (q - 1); CRT exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
dns	src/tls/x509v3.h	/^	char *dns; \/* dNSName *\/$/;"	m	struct:x509_name	access:public
domain_and_port	src/wps/wps_upnp_i.h	/^	char *domain_and_port; \/* domain and port part of url *\/$/;"	m	struct:subscr_addr	access:public
done	src/eap_server/tncs.c	/^	int done;$/;"	m	struct:tncs_data	file:	access:public
dot11BSSID	src/drivers/driver_ndis.c	/^	DOT11_MAC_ADDRESS dot11BSSID;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
dot11BSSType	src/drivers/driver_ndis.c	/^	DOT11_BSS_TYPE dot11BSSType;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
dot11RSNA4WayHandshakeFailures	src/ap/wpa_auth_i.h	/^	unsigned int dot11RSNA4WayHandshakeFailures;$/;"	m	struct:wpa_authenticator	access:public
dot11RSNA4WayHandshakeFailures	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNA4WayHandshakeFailures;$/;"	m	struct:wpa_sm	access:public
dot11RSNAAuthenticationSuiteRequested	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAAuthenticationSuiteRequested; \/* FIX: update *\/$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAAuthenticationSuiteSelected	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAAuthenticationSuiteSelected;$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAConfigGroupUpdateCount	src/ap/wpa_auth.c	/^static const u32 dot11RSNAConfigGroupUpdateCount = 4;$/;"	v	file:
dot11RSNAConfigPMKLifetime	src/ap/pmksa_cache_auth.c	/^static const int dot11RSNAConfigPMKLifetime = 43200;$/;"	v	file:
dot11RSNAConfigPMKLifetime	src/ap/preauth_auth.c	/^static const int dot11RSNAConfigPMKLifetime = 43200;$/;"	v	file:
dot11RSNAConfigPMKLifetime	src/ap/wpa_auth.c	/^static const int dot11RSNAConfigPMKLifetime = 43200;$/;"	v	file:
dot11RSNAConfigPMKLifetime	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNAConfigPMKLifetime;$/;"	m	struct:wpa_sm	access:public
dot11RSNAConfigPMKReauthThreshold	src/ap/wpa_auth.c	/^static const int dot11RSNAConfigPMKReauthThreshold = 70;$/;"	v	file:
dot11RSNAConfigPMKReauthThreshold	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNAConfigPMKReauthThreshold;$/;"	m	struct:wpa_sm	access:public
dot11RSNAConfigPairwiseUpdateCount	src/ap/wpa_auth.c	/^static const u32 dot11RSNAConfigPairwiseUpdateCount = 4;$/;"	v	file:
dot11RSNAConfigSATimeout	src/ap/wpa_auth.c	/^static const int dot11RSNAConfigSATimeout = 60;$/;"	v	file:
dot11RSNAConfigSATimeout	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNAConfigSATimeout;$/;"	m	struct:wpa_sm	access:public
dot11RSNAGroupCipherRequested	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAGroupCipherRequested; \/* FIX: update *\/$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAGroupCipherSelected	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAGroupCipherSelected;$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAPMKIDUsed	src/ap/wpa_auth_i.h	/^	u8 dot11RSNAPMKIDUsed[PMKID_LEN];$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAPairwiseCipherRequested	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAPairwiseCipherRequested; \/* FIX: update *\/$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAPairwiseCipherSelected	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAPairwiseCipherSelected;$/;"	m	struct:wpa_authenticator	access:public
dot11RSNAStatsTKIPLocalMICFailures	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAStatsTKIPLocalMICFailures;$/;"	m	struct:wpa_state_machine	access:public
dot11RSNAStatsTKIPRemoteMICFailures	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAStatsTKIPRemoteMICFailures;$/;"	m	struct:wpa_state_machine	access:public
dot11RSNAStatsTKIPRemoteMICFailures	src/ap/wpa_auth_i.h	/^	unsigned int dot11RSNAStatsTKIPRemoteMICFailures;$/;"	m	struct:wpa_authenticator	access:public
dot11RSNATKIPCounterMeasuresInvoked	src/ap/wpa_auth_i.h	/^	unsigned int dot11RSNATKIPCounterMeasuresInvoked;$/;"	m	struct:wpa_authenticator	access:public
dot11ScanType	src/drivers/driver_ndis.c	/^	DOT11_SCAN_TYPE dot11ScanType;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
dot11_BSS_type_any	src/drivers/driver_ndis.c	/^	dot11_BSS_type_any = 3$/;"	e	enum:_DOT11_BSS_TYPE	file:
dot11_BSS_type_independent	src/drivers/driver_ndis.c	/^	dot11_BSS_type_independent = 2,$/;"	e	enum:_DOT11_BSS_TYPE	file:
dot11_BSS_type_infrastructure	src/drivers/driver_ndis.c	/^	dot11_BSS_type_infrastructure = 1,$/;"	e	enum:_DOT11_BSS_TYPE	file:
dot11_scan_type_active	src/drivers/driver_ndis.c	/^	dot11_scan_type_active = 1,$/;"	e	enum:_DOT11_SCAN_TYPE	file:
dot11_scan_type_auto	src/drivers/driver_ndis.c	/^	dot11_scan_type_auto = 3,$/;"	e	enum:_DOT11_SCAN_TYPE	file:
dot11_scan_type_forced	src/drivers/driver_ndis.c	/^	dot11_scan_type_forced = 0x80000000$/;"	e	enum:_DOT11_SCAN_TYPE	file:
dot11_scan_type_passive	src/drivers/driver_ndis.c	/^	dot11_scan_type_passive = 2,$/;"	e	enum:_DOT11_SCAN_TYPE	file:
dot1xAuthEapLengthErrorFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapLengthErrorFramesRx;   $/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolFramesRx;            \/\/ 记录了接收eapol帧数量 $/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolFramesTx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolFramesTx;            \/\/ 记录了发送eapol帧数量$/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolLogoffFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolLogoffFramesRx;                                                     $/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolReqFramesTx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolReqFramesTx;         \/\/ 记录了发送code = req的eapol帧数量$/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolReqIdFramesTx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolReqIdFramesTx;       \/\/ 记录了发送code = req,type=id的eapol帧数量$/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolRespFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolRespFramesRx;        \/\/ 记录了接收eap-resp帧数量$/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolRespIdFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolRespIdFramesRx;      \/\/ 记录了接收eap-resp-id帧数量$/;"	m	struct:eapol_state_machine	access:public
dot1xAuthEapolStartFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolStartFramesRx;                                                      $/;"	m	struct:eapol_state_machine	access:public
dot1xAuthInvalidEapolFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthInvalidEapolFramesRx;                                                    $/;"	m	struct:eapol_state_machine	access:public
dot1xAuthLastEapolFrameVersion	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthLastEapolFrameVersion;    \/\/ 记录了最近收到的eapol帧的版本2001\/2004\/2010$/;"	m	struct:eapol_state_machine	access:public
dot1xSuppEapLengthErrorFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapLengthErrorFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolLogoffFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolLogoffFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolReqFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolReqFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolReqIdFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolReqIdFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolRespFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolRespFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppEapolStartFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolStartFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppInvalidEapolFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppInvalidEapolFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppLastEapolFrameSource	src/eapol_supp/eapol_supp_sm.c	/^	unsigned char dot1xSuppLastEapolFrameSource[6];$/;"	m	struct:eapol_sm	file:	access:public
dot1xSuppLastEapolFrameVersion	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppLastEapolFrameVersion;$/;"	m	struct:eapol_sm	file:	access:public
dot1x_enabled	src/wps/wps_i.h	/^	const u8 *dot1x_enabled; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
dp	src/tls/libtommath.c	/^    mp_digit *dp;$/;"	m	struct:__anon109	file:	access:public
driver	src/ap/ap_config.h	/^    const struct wpa_driver_ops *driver;    \/\/ 指向具体类型驱动程序API集合$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::wpa_driver_ops	access:public
driver	src/ap/hostapd.h	/^	const struct wpa_driver_ops *driver;    \/\/ 指向此bss所使用的具体类型驱动API集合$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpa_driver_ops	access:public
driver_gtk_rekey	src/drivers/driver.h	/^	struct driver_gtk_rekey {$/;"	s	union:wpa_event_data	access:public
driver_gtk_rekey	src/drivers/driver.h	/^	} driver_gtk_rekey;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::driver_gtk_rekey	access:public
driver_ndis_get_ndisuio_handle	src/drivers/driver_ndis.c	/^HANDLE driver_ndis_get_ndisuio_handle(void)$/;"	f	signature:(void)
driver_ndis_get_ndisuio_handle	src/l2_packet/l2_packet_ndis.c	/^HANDLE driver_ndis_get_ndisuio_handle(void);$/;"	p	file:	signature:(void)
driver_ndis_init_ops	src/drivers/driver_ndis.c	/^void driver_ndis_init_ops(void)$/;"	f	signature:(void)
driver_ndis_ndisuio_handle	src/drivers/driver_ndis.c	/^static HANDLE driver_ndis_ndisuio_handle = INVALID_HANDLE_VALUE;$/;"	v	file:
drop_unencrypted	src/drivers/driver.h	/^	int drop_unencrypted;$/;"	m	struct:wpa_driver_associate_params	access:public
drv	src/drivers/driver_nl80211.c	/^	struct wpa_driver_nl80211_data *drv;$/;"	m	struct:i802_bss	typeref:struct:i802_bss::wpa_driver_nl80211_data	file:	access:public
drv	src/drivers/driver_nl80211.c	/^	struct wpa_driver_nl80211_data *drv;$/;"	m	struct:nl80211_bss_info_arg	typeref:struct:nl80211_bss_info_arg::wpa_driver_nl80211_data	file:	access:public
drv	src/drivers/driver_test.c	/^	struct wpa_driver_test_data *drv;$/;"	m	struct:test_driver_bss	typeref:struct:test_driver_bss::wpa_driver_test_data	file:	access:public
drv_count	hostapd/main.c	/^	size_t drv_count;$/;"	m	struct:hapd_global	file:	access:public
drv_event_assoc	src/drivers/driver.h	/^static inline void drv_event_assoc(void *ctx, const u8 *addr, const u8 *ie,$/;"	f	signature:(void *ctx, const u8 *addr, const u8 *ie, size_t ielen, int reassoc)
drv_event_disassoc	src/drivers/driver.h	/^static inline void drv_event_disassoc(void *ctx, const u8 *addr)$/;"	f	signature:(void *ctx, const u8 *addr)
drv_event_eapol_rx	src/drivers/driver.h	/^static inline void drv_event_eapol_rx(void *ctx, const u8 *src, const u8 *data,$/;"	f	signature:(void *ctx, const u8 *src, const u8 *data, size_t data_len)
drv_flags	src/ap/hostapd.h	/^	unsigned int drv_flags;$/;"	m	struct:hostapd_iface	access:public
drv_in_listen	src/p2p/p2p_i.h	/^	int drv_in_listen;$/;"	m	struct:p2p_data	access:public
drv_name	src/drivers/driver.h	/^	const char *drv_name;$/;"	m	struct:wpa_interface_info	access:public
drv_priv	hostapd/main.c	/^	void **drv_priv;$/;"	m	struct:hapd_global	file:	access:public
drv_priv	src/ap/hostapd.h	/^	void *drv_priv;                         \/\/ 指向此bss所使用的具体类型驱动控制块$/;"	m	struct:hostapd_data	access:public
ds_params	src/common/ieee802_11_common.h	/^	const u8 *ds_params;$/;"	m	struct:ieee802_11_elems	access:public
ds_params	src/p2p/p2p_i.h	/^	const u8 *ds_params;$/;"	m	struct:p2p_message	access:public
ds_params_len	src/common/ieee802_11_common.h	/^	u8 ds_params_len;$/;"	m	struct:ieee802_11_elems	access:public
dsap	src/ap/iapp.c	/^	u8 dsap; \/* null DSAP address *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
dst	src/ap/wpa_auth_glue.c	/^	const u8 *dst;$/;"	m	struct:wpa_auth_ft_iface_iter_data	file:	access:public
dst	src/drivers/driver.h	/^		const u8 *dst;$/;"	m	struct:wpa_event_data::tx_status	access:public
dst	src/p2p/p2p_i.h	/^	u8 dst[ETH_ALEN];$/;"	m	struct:p2p_pending_action_tx	access:public
dst	src/wps/http_client.c	/^	struct sockaddr_in dst;$/;"	m	struct:http_client	typeref:struct:http_client::sockaddr_in	file:	access:public
dtim_period	src/ap/ap_config.h	/^	int dtim_period;$/;"	m	struct:hostapd_bss_config	access:public
dtim_period	src/drivers/driver.h	/^	int dtim_period;$/;"	m	struct:wpa_driver_ap_params	access:public
dtoken	src/rsn_supp/tdls.c	/^	u8 dtoken;$/;"	m	struct:wpa_tdls_peer	file:	access:public
dualband	src/wps/wps.h	/^	int dualband;$/;"	m	struct:wps_registrar_config	access:public
dualband	src/wps/wps_registrar.c	/^	int dualband;$/;"	m	struct:wps_registrar	file:	access:public
dummy_key	src/crypto/random.c	/^static u8 dummy_key[20];$/;"	v	file:
dummy_key_avail	src/crypto/random.c	/^static size_t dummy_key_avail = 0;$/;"	v	file:
dump_log_name	src/ap/ap_config.h	/^	char *dump_log_name; \/* file name for state dump (SIGUSR1) *\/$/;"	m	struct:hostapd_bss_config	access:public
dup_access_requests	src/radius/radius_server.c	/^	u32 dup_access_requests;$/;"	m	struct:radius_server_counters	file:	access:public
duration	src/common/ieee802_11_defs.h	/^	le16 duration;$/;"	m	struct:ieee80211_mgmt	access:public
duration	src/drivers/driver.h	/^		unsigned int duration;$/;"	m	struct:wpa_event_data::remain_on_channel	access:public
duration	src/p2p/p2p_i.h	/^	u32 duration;$/;"	m	struct:p2p_noa_desc	access:public
duration_id	src/common/ieee802_11_defs.h	/^	le16 duration_id;$/;"	m	struct:ieee80211_hdr	access:public
dwCapabilities	src/drivers/driver_ndis.c	/^	DWORD dwCapabilities; \/* something added for WinXP SP2(?) *\/$/;"	m	struct:__anon97	file:	access:public
dwCtlFlags	src/drivers/driver_ndis.c	/^	DWORD dwCtlFlags;$/;"	m	struct:__anon97	file:	access:public
dwDataLen	src/drivers/driver_ndis.c	/^	DWORD dwDataLen;$/;"	m	struct:__anon96	file:	access:public
dwNumIntfs	src/drivers/driver_ndis.c	/^	DWORD dwNumIntfs;$/;"	m	struct:__anon95	file:	access:public
dyn_vlan_keys	src/ap/ap_config.h	/^	struct hostapd_wep_keys **dyn_vlan_keys;$/;"	m	struct:hostapd_ssid	typeref:struct:hostapd_ssid::hostapd_wep_keys	access:public
dynamic_vlan	src/ap/ap_config.h	/^	int dynamic_vlan;$/;"	m	struct:hostapd_ssid	access:public
dynamic_vlan	src/ap/ap_config.h	/^	int dynamic_vlan;$/;"	m	struct:hostapd_vlan	access:public
e	src/drivers/wireless_copy.h	/^	__s16		e;		\/* Exponent *\/$/;"	m	struct:iw_freq	access:public
e	src/eap_peer/eap_pax.c	/^		u8 e[2 * EAP_PAX_RAND_LEN];$/;"	m	union:eap_pax_data::__anon170	file:	access:public
e	src/eap_server/eap_server_pax.c	/^		u8 e[2 * EAP_PAX_RAND_LEN];$/;"	m	union:eap_pax_data::__anon144	file:	access:public
e	src/tls/rsa.c	/^	struct bignum *e; \/* public exponent *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
e_hash1	src/wps/wps_i.h	/^	const u8 *e_hash1; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
e_hash2	src/wps/wps_i.h	/^	const u8 *e_hash2; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
e_snonce1	src/wps/wps_i.h	/^	const u8 *e_snonce1; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
e_snonce2	src/wps/wps_i.h	/^	const u8 *e_snonce2; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
ea	src/drivers/driver_broadcom.c	/^	struct ether_addr ea;$/;"	m	struct:__anon93	typeref:struct:__anon93::ether_addr	file:	access:public
eap	src/eap_peer/eap_tls_common.h	/^	struct eap_sm *eap;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::eap_sm	access:public
eap	src/eap_server/eap_server_ttls.c	/^	u8 *eap;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap	src/eap_server/eap_tls_common.h	/^	struct eap_sm *eap;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::eap_sm	access:public
eap	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eap_sm *eap; \/\/ 指向EAP层状态机$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::eap_sm	access:public
eap	src/eapol_supp/eapol_supp_sm.c	/^	struct eap_sm *eap;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eap_sm	file:	access:public
eap	src/radius/radius_server.c	/^	struct eap_sm *eap;$/;"	m	struct:radius_session	typeref:struct:radius_session::eap_sm	file:	access:public
eapFail	src/eap_server/eap.h	/^	Boolean eapFail;    \/\/ 此标志由EAP层管理，EAP层AUTH SM进入FAIL状态时设置TRUE并填充eapReqData，进入INITIALIZE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eapFail	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapFail;$/;"	m	struct:eapol_sm	file:	access:public
eapKeyAvailable	src/eap_peer/eap_i.h	/^	Boolean eapKeyAvailable; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	access:public
eapKeyAvailable	src/eap_server/eap.h	/^	Boolean eapKeyAvailable; \/* called keyAvailable in IEEE 802.1X-2004 *\/$/;"	m	struct:eap_eapol_interface	access:public
eapKeyData	src/eap_peer/eap_i.h	/^	u8 *eapKeyData; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	access:public
eapKeyData	src/eap_server/eap.h	/^	u8 *eapKeyData;             \/\/ 此标志由EAP层管理，存储了KEY数据（802.1X不用）$/;"	m	struct:eap_eapol_interface	access:public
eapKeyDataLen	src/eap_peer/eap_i.h	/^	size_t eapKeyDataLen; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	access:public
eapKeyDataLen	src/eap_server/eap.h	/^	size_t eapKeyDataLen;       \/\/ 此标志由EAP层管理，存储了KEY数据长度（802.1X不用）$/;"	m	struct:eap_eapol_interface	access:public
eapNoReq	src/eap_server/eap.h	/^	Boolean eapNoReq;   \/\/ EAP层AUTH SM在没有eap-resp需要发送给请求者时设置TRUE，EAPOL层BE_AUTH SM进入INITIALIZE\/RESPONCE\/IGNORE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eapNoResp	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapNoResp;$/;"	m	struct:eapol_sm	file:	access:public
eapRTTVAR	src/eap_server/eap.h	/^	int eapRTTVAR;$/;"	m	struct:eap_eapol_interface	access:public
eapReq	src/eap_server/eap.h	/^	Boolean eapReq;     \/\/ EAP层AUTH SM进入RETRANSMIT\/REQUEST状态时设置TRUE并填充eapReqData，EAPOL层BE_AUTH SM进入REQUEST状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eapReq	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapReq;$/;"	m	struct:eapol_sm	file:	access:public
eapReqData	src/eap_server/eap.h	/^	struct wpabuf *eapReqData;  \/\/ 此buffer由EAP层填充，同时设置eapReq\/eapSuccess\/eapFail，然后递交给EAPOL层处理 $/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
eapReqData	src/eapol_supp/eapol_supp_sm.c	/^	struct wpabuf *eapReqData; \/* for EAP *\/$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::wpabuf	file:	access:public
eapResp	src/eap_server/eap.h	/^	Boolean eapResp;    \/\/ EAPOL层 BE_AUTH SM 进入RESPONSE状态时设置TRUE，EAP层AUTH SM进入SEND_REQUEST\/DISCARD状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eapResp	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapResp;$/;"	m	struct:eapol_sm	file:	access:public
eapRespData	src/eap_peer/eap_i.h	/^	struct wpabuf *eapRespData; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
eapRespData	src/eap_server/eap.h	/^	struct wpabuf *eapRespData; \/\/ 此buffer由EAPOL层填充，同时设置eapResp，然后递交EAP层处理$/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
eapRestart	src/eap_server/eap.h	/^	Boolean eapRestart;     \/\/ EAPOL层 AUTH_PAE SM进入RESTART状态时设置TRUE，EAP层AUTH SM进入INITIALIZE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eapRestart	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapRestart;$/;"	m	struct:eapol_sm	file:	access:public
eapSRTT	src/eap_server/eap.h	/^	int eapSRTT;$/;"	m	struct:eap_eapol_interface	access:public
eapSuccess	src/eap_server/eap.h	/^	Boolean eapSuccess; \/\/ 此标志由EAP层管理，EAP层AUTH SM进入SUCCESS状态时设置TRUE并填充eapReqData，进入INITIALIZE状态时设置FALSE $/;"	m	struct:eap_eapol_interface	access:public
eapSuccess	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapSuccess;$/;"	m	struct:eapol_sm	file:	access:public
eapTimeout	src/eap_server/eap.h	/^	Boolean eapTimeout; \/\/ 此标志由EAP层管理，EAP层AUTH SM进入TIMEOUT状态时设置TRUE，进入INITIALIZE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_aka_add_checkcode	src/eap_peer/eap_aka.c	/^static void eap_aka_add_checkcode(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, struct eap_sim_msg *msg)
eap_aka_add_checkcode	src/eap_server/eap_server_aka.c	/^static void eap_aka_add_checkcode(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, struct eap_sim_msg *msg)
eap_aka_add_id_msg	src/eap_peer/eap_aka.c	/^static int eap_aka_add_id_msg(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const struct wpabuf *msg)
eap_aka_add_id_msg	src/eap_server/eap_server_aka.c	/^static int eap_aka_add_id_msg(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const struct wpabuf *msg)
eap_aka_authentication_reject	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_authentication_reject(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id)
eap_aka_buildReq	src/eap_server/eap_server_aka.c	/^static struct wpabuf * eap_aka_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_aka_build_challenge	src/eap_server/eap_server_aka.c	/^static struct wpabuf * eap_aka_build_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id)
eap_aka_build_encr	src/eap_server/eap_server_aka.c	/^static int eap_aka_build_encr(struct eap_sm *sm, struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct eap_sim_msg *msg, u16 counter, const u8 *nonce_s)
eap_aka_build_identity	src/eap_server/eap_server_aka.c	/^static struct wpabuf * eap_aka_build_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id)
eap_aka_build_notification	src/eap_server/eap_server_aka.c	/^static struct wpabuf * eap_aka_build_notification(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id)
eap_aka_build_reauth	src/eap_server/eap_server_aka.c	/^static struct wpabuf * eap_aka_build_reauth(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id)
eap_aka_check	src/eap_server/eap_server_aka.c	/^static Boolean eap_aka_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_aka_clear_identities	src/eap_peer/eap_aka.c	/^static void eap_aka_clear_identities(struct eap_aka_data *data, int id)$/;"	f	file:	signature:(struct eap_aka_data *data, int id)
eap_aka_client_error	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_client_error(struct eap_aka_data *data, u8 id,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id, int err)
eap_aka_data	src/eap_peer/eap_aka.c	/^struct eap_aka_data {$/;"	s	file:
eap_aka_data	src/eap_server/eap_server_aka.c	/^struct eap_aka_data {$/;"	s	file:
eap_aka_data::CHALLENGE	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
eap_aka_data::CONTINUE	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
eap_aka_data::FAILURE	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
eap_aka_data::FAILURE	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
eap_aka_data::IDENTITY	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
eap_aka_data::NOTIFICATION	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
eap_aka_data::REAUTH	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
eap_aka_data::RESULT_FAILURE	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
eap_aka_data::RESULT_SUCCESS	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
eap_aka_data::SUCCESS	src/eap_peer/eap_aka.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon166	file:
eap_aka_data::SUCCESS	src/eap_server/eap_server_aka.c	/^		IDENTITY, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_aka_data::__anon139	file:
eap_aka_data::autn	src/eap_peer/eap_aka.c	/^	u8 rand[EAP_AKA_RAND_LEN], autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::autn	src/eap_server/eap_server_aka.c	/^	u8 autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::auts	src/eap_peer/eap_aka.c	/^	u8 auts[EAP_AKA_AUTS_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::auts_reported	src/eap_server/eap_server_aka.c	/^	int auts_reported; \/* whether the current AUTS has been reported to the$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::ck	src/eap_peer/eap_aka.c	/^	u8 ik[EAP_AKA_IK_LEN], ck[EAP_AKA_CK_LEN], res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::ck	src/eap_server/eap_server_aka.c	/^	u8 ck[EAP_AKA_CK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::counter	src/eap_peer/eap_aka.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::counter	src/eap_server/eap_server_aka.c	/^	u16 counter;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::counter_too_small	src/eap_peer/eap_aka.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::eap_method	src/eap_peer/eap_aka.c	/^	u8 eap_method;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::eap_method	src/eap_server/eap_server_aka.c	/^	u8 eap_method;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::emsk	src/eap_peer/eap_aka.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::emsk	src/eap_server/eap_server_aka.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::id_msgs	src/eap_peer/eap_aka.c	/^	struct wpabuf *id_msgs;$/;"	m	struct:eap_aka_data	typeref:struct:eap_aka_data::wpabuf	file:	access:public
eap_aka_data::id_msgs	src/eap_server/eap_server_aka.c	/^	struct wpabuf *id_msgs;$/;"	m	struct:eap_aka_data	typeref:struct:eap_aka_data::wpabuf	file:	access:public
eap_aka_data::ik	src/eap_peer/eap_aka.c	/^	u8 ik[EAP_AKA_IK_LEN], ck[EAP_AKA_CK_LEN], res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::ik	src/eap_server/eap_server_aka.c	/^	u8 ik[EAP_AKA_IK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::k_aut	src/eap_peer/eap_aka.c	/^	u8 k_aut[EAP_AKA_PRIME_K_AUT_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::k_aut	src/eap_server/eap_server_aka.c	/^	u8 k_aut[EAP_AKA_PRIME_K_AUT_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::k_encr	src/eap_peer/eap_aka.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::k_encr	src/eap_server/eap_server_aka.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::k_re	src/eap_peer/eap_aka.c	/^	u8 k_re[EAP_AKA_PRIME_K_RE_LEN]; \/* EAP-AKA' only *\/$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::k_re	src/eap_server/eap_server_aka.c	/^	u8 k_re[EAP_AKA_PRIME_K_RE_LEN]; \/* EAP-AKA' only *\/$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::kdf	src/eap_peer/eap_aka.c	/^	u16 kdf;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::kdf	src/eap_server/eap_server_aka.c	/^	u16 kdf;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::kdf_negotiation	src/eap_peer/eap_aka.c	/^	int kdf_negotiation;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::last_eap_identity	src/eap_peer/eap_aka.c	/^	u8 *last_eap_identity;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::last_eap_identity_len	src/eap_peer/eap_aka.c	/^	size_t last_eap_identity_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::mk	src/eap_peer/eap_aka.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::mk	src/eap_server/eap_server_aka.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::msk	src/eap_peer/eap_aka.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::msk	src/eap_server/eap_server_aka.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::network_name	src/eap_peer/eap_aka.c	/^	u8 *network_name;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::network_name	src/eap_server/eap_server_aka.c	/^	u8 *network_name;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::network_name_len	src/eap_peer/eap_aka.c	/^	size_t network_name_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::network_name_len	src/eap_server/eap_server_aka.c	/^	size_t network_name_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::next_pseudonym	src/eap_server/eap_server_aka.c	/^	char *next_pseudonym;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::next_reauth_id	src/eap_server/eap_server_aka.c	/^	char *next_reauth_id;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::nonce_s	src/eap_peer/eap_aka.c	/^	u8 nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::nonce_s	src/eap_server/eap_server_aka.c	/^	u8 nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::notification	src/eap_server/eap_server_aka.c	/^	u16 notification;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::num_id_req	src/eap_peer/eap_aka.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::num_notification	src/eap_peer/eap_aka.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::pending_id	src/eap_server/eap_server_aka.c	/^	int pending_id;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::prev_id	src/eap_peer/eap_aka.c	/^	int prev_id;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::pseudonym	src/eap_peer/eap_aka.c	/^	u8 *pseudonym;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::pseudonym_len	src/eap_peer/eap_aka.c	/^	size_t pseudonym_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::rand	src/eap_peer/eap_aka.c	/^	u8 rand[EAP_AKA_RAND_LEN], autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::rand	src/eap_server/eap_server_aka.c	/^	u8 rand[EAP_AKA_RAND_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::reauth	src/eap_peer/eap_aka.c	/^	int reauth;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::reauth	src/eap_server/eap_server_aka.c	/^	struct eap_sim_reauth *reauth;$/;"	m	struct:eap_aka_data	typeref:struct:eap_aka_data::eap_sim_reauth	file:	access:public
eap_aka_data::reauth_id	src/eap_peer/eap_aka.c	/^	u8 *reauth_id;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::reauth_id_len	src/eap_peer/eap_aka.c	/^	size_t reauth_id_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::res	src/eap_peer/eap_aka.c	/^	u8 ik[EAP_AKA_IK_LEN], ck[EAP_AKA_CK_LEN], res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::res	src/eap_server/eap_server_aka.c	/^	u8 res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::res_len	src/eap_peer/eap_aka.c	/^	size_t res_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::res_len	src/eap_server/eap_server_aka.c	/^	size_t res_len;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::result_ind	src/eap_peer/eap_aka.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::state	src/eap_peer/eap_aka.c	/^	} state;$/;"	m	struct:eap_aka_data	typeref:enum:eap_aka_data::__anon166	file:	access:public
eap_aka_data::state	src/eap_server/eap_server_aka.c	/^	} state;$/;"	m	struct:eap_aka_data	typeref:enum:eap_aka_data::__anon139	file:	access:public
eap_aka_data::use_result_ind	src/eap_peer/eap_aka.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_data::use_result_ind	src/eap_server/eap_server_aka.c	/^	int use_result_ind;$/;"	m	struct:eap_aka_data	file:	access:public
eap_aka_deinit	src/eap_peer/eap_aka.c	/^static void eap_aka_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_deinit_for_reauth	src/eap_peer/eap_aka.c	/^static void eap_aka_deinit_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_derive_mk	src/eap_common/eap_sim_common.c	/^void eap_aka_derive_mk(const u8 *identity, size_t identity_len,$/;"	f	signature:(const u8 *identity, size_t identity_len, const u8 *ik, const u8 *ck, u8 *mk)
eap_aka_derive_mk	src/eap_common/eap_sim_common.h	/^void eap_aka_derive_mk(const u8 *identity, size_t identity_len,$/;"	p	signature:(const u8 *identity, size_t identity_len, const u8 *ik, const u8 *ck, u8 *mk)
eap_aka_determine_identity	src/eap_server/eap_server_aka.c	/^static void eap_aka_determine_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, int before_identity, int after_reauth)
eap_aka_determine_identity	src/eap_server/eap_server_aka.c	/^static void eap_aka_determine_identity(struct eap_sm *sm,$/;"	p	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, int before_identity, int after_reauth)
eap_aka_getKey	src/eap_peer/eap_aka.c	/^static u8 * eap_aka_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_aka_getKey	src/eap_server/eap_server_aka.c	/^static u8 * eap_aka_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_aka_get_emsk	src/eap_peer/eap_aka.c	/^static u8 * eap_aka_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_aka_get_emsk	src/eap_server/eap_server_aka.c	/^static u8 * eap_aka_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_aka_get_identity	src/eap_peer/eap_aka.c	/^static const u8 * eap_aka_get_identity(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_aka_has_reauth_data	src/eap_peer/eap_aka.c	/^static Boolean eap_aka_has_reauth_data(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_init	src/eap_peer/eap_aka.c	/^static void * eap_aka_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_aka_init	src/eap_server/eap_server_aka.c	/^static void * eap_aka_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_aka_init_for_reauth	src/eap_peer/eap_aka.c	/^static void * eap_aka_init_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_isDone	src/eap_server/eap_server_aka.c	/^static Boolean eap_aka_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_isKeyAvailable	src/eap_peer/eap_aka.c	/^static Boolean eap_aka_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_isSuccess	src/eap_server/eap_server_aka.c	/^static Boolean eap_aka_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_learn_ids	src/eap_peer/eap_aka.c	/^static int eap_aka_learn_ids(struct eap_sm *sm, struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct eap_sim_attrs *attr)
eap_aka_prime_derive_ck_ik_prime	src/eap_common/eap_sim_common.c	/^void eap_aka_prime_derive_ck_ik_prime(u8 *ck, u8 *ik, const u8 *sqn_ak,$/;"	f	signature:(u8 *ck, u8 *ik, const u8 *sqn_ak, const u8 *network_name, size_t network_name_len)
eap_aka_prime_derive_ck_ik_prime	src/eap_common/eap_sim_common.h	/^void eap_aka_prime_derive_ck_ik_prime(u8 *ck, u8 *ik, const u8 *sqn_ak,$/;"	p	signature:(u8 *ck, u8 *ik, const u8 *sqn_ak, const u8 *network_name, size_t network_name_len)
eap_aka_prime_derive_keys	src/eap_common/eap_sim_common.c	/^void eap_aka_prime_derive_keys(const u8 *identity, size_t identity_len,$/;"	f	signature:(const u8 *identity, size_t identity_len, const u8 *ik, const u8 *ck, u8 *k_encr, u8 *k_aut, u8 *k_re, u8 *msk, u8 *emsk)
eap_aka_prime_derive_keys	src/eap_common/eap_sim_common.h	/^static inline void eap_aka_prime_derive_keys(const u8 *identity,$/;"	f	signature:(const u8 *identity, size_t identity_len, const u8 *ik, const u8 *ck, u8 *k_encr, u8 *k_aut, u8 *k_re, u8 *msk, u8 *emsk)
eap_aka_prime_derive_keys	src/eap_common/eap_sim_common.h	/^void eap_aka_prime_derive_keys(const u8 *identity, size_t identity_len,$/;"	p	signature:(const u8 *identity, size_t identity_len, const u8 *ik, const u8 *ck, u8 *k_encr, u8 *k_aut, u8 *k_re, u8 *msk, u8 *emsk)
eap_aka_prime_derive_keys_reauth	src/eap_common/eap_sim_common.c	/^int eap_aka_prime_derive_keys_reauth(const u8 *k_re, u16 counter,$/;"	f	signature:(const u8 *k_re, u16 counter, const u8 *identity, size_t identity_len, const u8 *nonce_s, u8 *msk, u8 *emsk)
eap_aka_prime_derive_keys_reauth	src/eap_common/eap_sim_common.h	/^int eap_aka_prime_derive_keys_reauth(const u8 *k_re, u16 counter,$/;"	p	signature:(const u8 *k_re, u16 counter, const u8 *identity, size_t identity_len, const u8 *nonce_s, u8 *msk, u8 *emsk)
eap_aka_prime_derive_keys_reauth	src/eap_common/eap_sim_common.h	/^static inline int eap_aka_prime_derive_keys_reauth(const u8 *k_re, u16 counter,$/;"	f	signature:(const u8 *k_re, u16 counter, const u8 *identity, size_t identity_len, const u8 *nonce_s, u8 *msk, u8 *emsk)
eap_aka_prime_init	src/eap_peer/eap_aka.c	/^static void * eap_aka_prime_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_aka_prime_init	src/eap_server/eap_server_aka.c	/^static void * eap_aka_prime_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_aka_prime_kdf_neg	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_prime_kdf_neg(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id, struct eap_sim_attrs *attr)
eap_aka_prime_kdf_select	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_prime_kdf_select(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id, u16 kdf)
eap_aka_prime_kdf_valid	src/eap_peer/eap_aka.c	/^static int eap_aka_prime_kdf_valid(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, struct eap_sim_attrs *attr)
eap_aka_process	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_aka_process	src/eap_server/eap_server_aka.c	/^static void eap_aka_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_aka_process_authentication_reject	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_authentication_reject($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_process_challenge	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_process_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_aka_process_challenge	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_process_client_error	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_client_error(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_process_identity	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_process_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_aka_process_identity	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_process_notification	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_process_notification($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_aka_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_aka_process_notification	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_notification(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_process_notification_auth	src/eap_peer/eap_aka.c	/^static int eap_aka_process_notification_auth(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_aka_process_notification_reauth	src/eap_peer/eap_aka.c	/^static int eap_aka_process_notification_reauth(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, struct eap_sim_attrs *attr)
eap_aka_process_reauth	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_reauth(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_process_reauthentication	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_process_reauthentication($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_aka_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_aka_process_sync_failure	src/eap_server/eap_server_aka.c	/^static void eap_aka_process_sync_failure(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_aka_reset	src/eap_server/eap_server_aka.c	/^static void eap_aka_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_aka_response_challenge	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_response_challenge(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id)
eap_aka_response_identity	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_response_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data, u8 id, enum eap_sim_id_req id_req)
eap_aka_response_notification	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_response_notification(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id, u16 notification)
eap_aka_response_reauth	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_response_reauth(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, u8 id, int counter_too_small, const u8 *nonce_s)
eap_aka_state	src/eap_peer/eap_aka.c	/^static void eap_aka_state(struct eap_aka_data *data, int state)$/;"	f	file:	signature:(struct eap_aka_data *data, int state)
eap_aka_state	src/eap_server/eap_server_aka.c	/^static void eap_aka_state(struct eap_aka_data *data, int state)$/;"	f	file:	signature:(struct eap_aka_data *data, int state)
eap_aka_state_txt	src/eap_peer/eap_aka.c	/^static const char * eap_aka_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_aka_state_txt	src/eap_server/eap_server_aka.c	/^static const char * eap_aka_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_aka_subtype_ok	src/eap_server/eap_server_aka.c	/^static Boolean eap_aka_subtype_ok(struct eap_aka_data *data, u8 subtype)$/;"	f	file:	signature:(struct eap_aka_data *data, u8 subtype)
eap_aka_synchronization_failure	src/eap_peer/eap_aka.c	/^static struct wpabuf * eap_aka_synchronization_failure($/;"	f	file:	signature:( struct eap_aka_data *data, u8 id)
eap_aka_umts_auth	src/eap_peer/eap_aka.c	/^static int eap_aka_umts_auth(struct eap_sm *sm, struct eap_aka_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_aka_data *data)
eap_aka_verify_checkcode	src/eap_peer/eap_aka.c	/^static int eap_aka_verify_checkcode(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const u8 *checkcode, size_t checkcode_len)
eap_aka_verify_checkcode	src/eap_server/eap_server_aka.c	/^static int eap_aka_verify_checkcode(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const u8 *checkcode, size_t checkcode_len)
eap_aka_verify_mac	src/eap_peer/eap_aka.c	/^static int eap_aka_verify_mac(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_aka_verify_mac	src/eap_server/eap_server_aka.c	/^static int eap_aka_verify_mac(struct eap_aka_data *data,$/;"	f	file:	signature:(struct eap_aka_data *data, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_allowed_method	src/eap_peer/eap.c	/^int eap_allowed_method(struct eap_sm *sm, int vendor, u32 method)$/;"	f	signature:(struct eap_sm *sm, int vendor, u32 method)
eap_allowed_method	src/eap_peer/eap_i.h	/^int eap_allowed_method(struct eap_sm *sm, int vendor, u32 method);$/;"	p	signature:(struct eap_sm *sm, int vendor, u32 method)
eap_allowed_phase2_type	src/eap_peer/eap.c	/^static int eap_allowed_phase2_type(int vendor, int type)$/;"	f	file:	signature:(int vendor, int type)
eap_clear_config_otp	src/eap_peer/eap.c	/^void eap_clear_config_otp(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_clear_config_otp	src/eap_peer/eap_i.h	/^void eap_clear_config_otp(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_conf_ctx	src/rsn_supp/wpa.h	/^	void *eap_conf_ctx;$/;"	m	struct:rsn_supp_config	access:public
eap_conf_ctx	src/rsn_supp/wpa_i.h	/^	void *eap_conf_ctx;$/;"	m	struct:wpa_sm	access:public
eap_config	src/eap_peer/eap.h	/^struct eap_config {$/;"	s
eap_config	src/eap_server/eap.h	/^struct eap_config {$/;"	s
eap_config::assoc_p2p_ie	src/eap_server/eap.h	/^	const struct wpabuf *assoc_p2p_ie;$/;"	m	struct:eap_config	typeref:struct:eap_config::wpabuf	access:public
eap_config::assoc_wps_ie	src/eap_server/eap.h	/^	const struct wpabuf *assoc_wps_ie;$/;"	m	struct:eap_config	typeref:struct:eap_config::wpabuf	access:public
eap_config::backend_auth	src/eap_server/eap.h	/^	Boolean backend_auth;$/;"	m	struct:eap_config	access:public
eap_config::cert_in_cb	src/eap_peer/eap.h	/^	int cert_in_cb;$/;"	m	struct:eap_config	access:public
eap_config::eap_fast_a_id	src/eap_server/eap.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:eap_config	access:public
eap_config::eap_fast_a_id_info	src/eap_server/eap.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:eap_config	access:public
eap_config::eap_fast_a_id_len	src/eap_server/eap.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:eap_config	access:public
eap_config::eap_fast_prov	src/eap_server/eap.h	/^	int eap_fast_prov;$/;"	m	struct:eap_config	access:public
eap_config::eap_server	src/eap_server/eap.h	/^	int eap_server;$/;"	m	struct:eap_config	access:public
eap_config::eap_sim_aka_result_ind	src/eap_server/eap.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:eap_config	access:public
eap_config::eap_sim_db_priv	src/eap_server/eap.h	/^	void *eap_sim_db_priv;$/;"	m	struct:eap_config	access:public
eap_config::fragment_size	src/eap_server/eap.h	/^	int fragment_size;$/;"	m	struct:eap_config	access:public
eap_config::msg_ctx	src/eap_server/eap.h	/^	void *msg_ctx;$/;"	m	struct:eap_config	access:public
eap_config::opensc_engine_path	src/eap_peer/eap.h	/^	const char *opensc_engine_path;$/;"	m	struct:eap_config	access:public
eap_config::pac_key_lifetime	src/eap_server/eap.h	/^	int pac_key_lifetime;$/;"	m	struct:eap_config	access:public
eap_config::pac_key_refresh_time	src/eap_server/eap.h	/^	int pac_key_refresh_time;$/;"	m	struct:eap_config	access:public
eap_config::pac_opaque_encr_key	src/eap_server/eap.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:eap_config	access:public
eap_config::pbc_in_m1	src/eap_server/eap.h	/^	int pbc_in_m1;$/;"	m	struct:eap_config	access:public
eap_config::peer_addr	src/eap_server/eap.h	/^	const u8 *peer_addr;$/;"	m	struct:eap_config	access:public
eap_config::pkcs11_engine_path	src/eap_peer/eap.h	/^	const char *pkcs11_engine_path;$/;"	m	struct:eap_config	access:public
eap_config::pkcs11_module_path	src/eap_peer/eap.h	/^	const char *pkcs11_module_path;$/;"	m	struct:eap_config	access:public
eap_config::pwd_group	src/eap_server/eap.h	/^	u16 pwd_group;$/;"	m	struct:eap_config	access:public
eap_config::ssl_ctx	src/eap_server/eap.h	/^	void *ssl_ctx;$/;"	m	struct:eap_config	access:public
eap_config::tnc	src/eap_server/eap.h	/^	int tnc;$/;"	m	struct:eap_config	access:public
eap_config::wps	src/eap_peer/eap.h	/^	struct wps_context *wps;$/;"	m	struct:eap_config	typeref:struct:eap_config::wps_context	access:public
eap_config::wps	src/eap_server/eap.h	/^	struct wps_context *wps;$/;"	m	struct:eap_config	typeref:struct:eap_config::wps_context	access:public
eap_copy_buf	src/eap_server/eap_server.c	/^static int eap_copy_buf(struct wpabuf **dst, const struct wpabuf *src)$/;"	f	file:	signature:(struct wpabuf **dst, const struct wpabuf *src)
eap_copy_data	src/eap_server/eap_server.c	/^static int eap_copy_data(u8 **dst, size_t *dst_len,$/;"	f	file:	signature:(u8 **dst, size_t *dst_len, const u8 *src, size_t src_len)
eap_deinit_prev_method	src/eap_peer/eap.c	/^static void eap_deinit_prev_method(struct eap_sm *sm, const char *txt)$/;"	f	file:	signature:(struct eap_sm *sm, const char *txt)
eap_disabled	src/eapol_supp/eapol_supp_sm.h	/^	int eap_disabled;$/;"	m	struct:eapol_config	access:public
eap_eapol_interface	src/eap_server/eap.h	/^struct eap_eapol_interface {$/;"	s
eap_eapol_interface::aaaEapKeyAvailable	src/eap_server/eap.h	/^	Boolean aaaEapKeyAvailable;$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaEapKeyData	src/eap_server/eap.h	/^	u8 *aaaEapKeyData;$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaEapKeyDataLen	src/eap_server/eap.h	/^	size_t aaaEapKeyDataLen;$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaEapNoReq	src/eap_server/eap.h	/^	Boolean aaaEapNoReq;    \/\/ AAA层从收到的radius报文中提取EAP数据失败时设置TRUE，EAP层根据此标志判断是否进入DISCARD2状态$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaEapReq	src/eap_server/eap.h	/^	Boolean aaaEapReq;      \/\/ AAA层收到一个类型为Access-Challenge的radius报文时设置TRUE，EAP层根据此标志判断是否进入AAA_RESPONSE状态$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaEapReqData	src/eap_server/eap.h	/^	struct wpabuf *aaaEapReqData;   \/\/ 此buffer由AAA层填充，同时设置aaaEapReq\/aaaSuccess\/aaaFail，然后递交给EAP层处理$/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
eap_eapol_interface::aaaEapResp	src/eap_server/eap.h	/^	Boolean aaaEapResp;             \/\/ EAP层AUTH SM进入AAA_IDLE时设置TRUE并填充aaaEapRespData，AAA层发送数据并设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaEapRespData	src/eap_server/eap.h	/^	struct wpabuf *aaaEapRespData;  \/\/ 此标志有EAP层填充(数据来源通常就是eapReapData转储)，同时设置aaaEapResp，然后递交给AAA层处理$/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
eap_eapol_interface::aaaFail	src/eap_server/eap.h	/^	Boolean aaaFail;        \/\/ AAA层收到一个类型为Access-Reject的radius报文时设置TRUE，EAP层根据此标志判断是否进入FAILURE2状态$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaMethodTimeout	src/eap_server/eap.h	/^	int aaaMethodTimeout;   \/\/ EAP报文的重传超时值，这个值由radius服务器提供，却用于NAS->suppliant之间$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaSuccess	src/eap_server/eap.h	/^	Boolean aaaSuccess;     \/\/ AAA层收到一个类型为Access-Accept的radius报文时设置TRUE，EAP层根据此标志判断是否进入SUCCESS2状态$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::aaaTimeout	src/eap_server/eap.h	/^	Boolean aaaTimeout;$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapFail	src/eap_server/eap.h	/^	Boolean eapFail;    \/\/ 此标志由EAP层管理，EAP层AUTH SM进入FAIL状态时设置TRUE并填充eapReqData，进入INITIALIZE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapKeyAvailable	src/eap_server/eap.h	/^	Boolean eapKeyAvailable; \/* called keyAvailable in IEEE 802.1X-2004 *\/$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapKeyData	src/eap_server/eap.h	/^	u8 *eapKeyData;             \/\/ 此标志由EAP层管理，存储了KEY数据（802.1X不用）$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapKeyDataLen	src/eap_server/eap.h	/^	size_t eapKeyDataLen;       \/\/ 此标志由EAP层管理，存储了KEY数据长度（802.1X不用）$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapNoReq	src/eap_server/eap.h	/^	Boolean eapNoReq;   \/\/ EAP层AUTH SM在没有eap-resp需要发送给请求者时设置TRUE，EAPOL层BE_AUTH SM进入INITIALIZE\/RESPONCE\/IGNORE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapRTTVAR	src/eap_server/eap.h	/^	int eapRTTVAR;$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapReq	src/eap_server/eap.h	/^	Boolean eapReq;     \/\/ EAP层AUTH SM进入RETRANSMIT\/REQUEST状态时设置TRUE并填充eapReqData，EAPOL层BE_AUTH SM进入REQUEST状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapReqData	src/eap_server/eap.h	/^	struct wpabuf *eapReqData;  \/\/ 此buffer由EAP层填充，同时设置eapReq\/eapSuccess\/eapFail，然后递交给EAPOL层处理 $/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
eap_eapol_interface::eapResp	src/eap_server/eap.h	/^	Boolean eapResp;    \/\/ EAPOL层 BE_AUTH SM 进入RESPONSE状态时设置TRUE，EAP层AUTH SM进入SEND_REQUEST\/DISCARD状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapRespData	src/eap_server/eap.h	/^	struct wpabuf *eapRespData; \/\/ 此buffer由EAPOL层填充，同时设置eapResp，然后递交EAP层处理$/;"	m	struct:eap_eapol_interface	typeref:struct:eap_eapol_interface::wpabuf	access:public
eap_eapol_interface::eapRestart	src/eap_server/eap.h	/^	Boolean eapRestart;     \/\/ EAPOL层 AUTH_PAE SM进入RESTART状态时设置TRUE，EAP层AUTH SM进入INITIALIZE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapSRTT	src/eap_server/eap.h	/^	int eapSRTT;$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapSuccess	src/eap_server/eap.h	/^	Boolean eapSuccess; \/\/ 此标志由EAP层管理，EAP层AUTH SM进入SUCCESS状态时设置TRUE并填充eapReqData，进入INITIALIZE状态时设置FALSE $/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::eapTimeout	src/eap_server/eap.h	/^	Boolean eapTimeout; \/\/ 此标志由EAP层管理，EAP层AUTH SM进入TIMEOUT状态时设置TRUE，进入INITIALIZE状态时设置FALSE$/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::portEnabled	src/eap_server/eap.h	/^	Boolean portEnabled;    \/\/ 此标志同时影响EAPOL层SM和EAP层SM，意味着该port是否可操作，在开始进行802.1X认证时被设置TRUE，在认证失败时设置FALSE $/;"	m	struct:eap_eapol_interface	access:public
eap_eapol_interface::retransWhile	src/eap_server/eap.h	/^	int retransWhile;       \/\/ 重传定时器，由EAPOL层PORT_TIMER SM触发超时，由EAP层开启 $/;"	m	struct:eap_eapol_interface	access:public
eap_fast_a_id	src/ap/ap_config.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:hostapd_bss_config	access:public
eap_fast_a_id	src/eap_server/eap.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:eap_config	access:public
eap_fast_a_id	src/eap_server/eap_i.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:eap_sm	access:public
eap_fast_a_id	src/eapol_auth/eapol_auth_sm.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:eapol_auth_config	access:public
eap_fast_a_id	src/radius/radius_server.c	/^	u8 *eap_fast_a_id;$/;"	m	struct:radius_server_data	file:	access:public
eap_fast_a_id	src/radius/radius_server.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:radius_server_conf	access:public
eap_fast_a_id_info	src/ap/ap_config.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:hostapd_bss_config	access:public
eap_fast_a_id_info	src/eap_server/eap.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:eap_config	access:public
eap_fast_a_id_info	src/eap_server/eap_i.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:eap_sm	access:public
eap_fast_a_id_info	src/eapol_auth/eapol_auth_sm.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:eapol_auth_config	access:public
eap_fast_a_id_info	src/radius/radius_server.c	/^	char *eap_fast_a_id_info;$/;"	m	struct:radius_server_data	file:	access:public
eap_fast_a_id_info	src/radius/radius_server.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:radius_server_conf	access:public
eap_fast_a_id_len	src/ap/ap_config.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:hostapd_bss_config	access:public
eap_fast_a_id_len	src/eap_server/eap.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:eap_config	access:public
eap_fast_a_id_len	src/eap_server/eap_i.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:eap_sm	access:public
eap_fast_a_id_len	src/eapol_auth/eapol_auth_sm.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:eapol_auth_config	access:public
eap_fast_a_id_len	src/radius/radius_server.c	/^	size_t eap_fast_a_id_len;$/;"	m	struct:radius_server_data	file:	access:public
eap_fast_a_id_len	src/radius/radius_server.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:radius_server_conf	access:public
eap_fast_add_pac	src/eap_peer/eap_fast_pac.c	/^int eap_fast_add_pac(struct eap_fast_pac **pac_root,$/;"	f	signature:(struct eap_fast_pac **pac_root, struct eap_fast_pac **pac_current, struct eap_fast_pac *entry)
eap_fast_add_pac	src/eap_peer/eap_fast_pac.h	/^int eap_fast_add_pac(struct eap_fast_pac **pac_root,$/;"	p	signature:(struct eap_fast_pac **pac_root, struct eap_fast_pac **pac_current, struct eap_fast_pac *entry)
eap_fast_add_pac_data	src/eap_peer/eap_fast_pac.c	/^static int eap_fast_add_pac_data(struct eap_fast_pac *pac, char **buf,$/;"	f	file:	signature:(struct eap_fast_pac *pac, char **buf, char **pos, size_t *buf_len)
eap_fast_buildReq	src/eap_server/eap_server_fast.c	/^static struct wpabuf * eap_fast_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_fast_build_crypto_binding	src/eap_server/eap_server_fast.c	/^static struct wpabuf * eap_fast_build_crypto_binding($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_build_pac	src/eap_server/eap_server_fast.c	/^static struct wpabuf * eap_fast_build_pac(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_build_phase2_req	src/eap_server/eap_server_fast.c	/^static struct wpabuf * eap_fast_build_phase2_req(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 id)
eap_fast_build_start	src/eap_server/eap_server_fast.c	/^static struct wpabuf * eap_fast_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 id)
eap_fast_check	src/eap_server/eap_server_fast.c	/^static Boolean eap_fast_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_fast_clear_pac_opaque_ext	src/eap_peer/eap_fast.c	/^static int eap_fast_clear_pac_opaque_ext(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_copy_buf	src/eap_peer/eap_fast_pac.c	/^static int eap_fast_copy_buf(u8 **dst, size_t *dst_len,$/;"	f	file:	signature:(u8 **dst, size_t *dst_len, const u8 *src, size_t src_len)
eap_fast_data	src/eap_peer/eap_fast.c	/^struct eap_fast_data {$/;"	s	file:
eap_fast_data	src/eap_server/eap_server_fast.c	/^struct eap_fast_data {$/;"	s	file:
eap_fast_data::CRYPTO_BINDING	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::FAILURE	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::PHASE1	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::PHASE2_ID	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::PHASE2_METHOD	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::PHASE2_START	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::REQUEST_PAC	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::START	src/eap_server/eap_server_fast.c	/^		START, PHASE1, PHASE2_START, PHASE2_ID, PHASE2_METHOD,$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::SUCCESS	src/eap_server/eap_server_fast.c	/^		CRYPTO_BINDING, REQUEST_PAC, SUCCESS, FAILURE$/;"	e	enum:eap_fast_data::__anon146	file:
eap_fast_data::anon_provisioning	src/eap_peer/eap_fast.c	/^	int anon_provisioning; \/* doing anonymous (unauthenticated)$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::anon_provisioning	src/eap_server/eap_server_fast.c	/^	int anon_provisioning;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::cmk	src/eap_server/eap_server_fast.c	/^	u8 cmk[EAP_FAST_CMK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::crypto_binding_nonce	src/eap_server/eap_server_fast.c	/^	u8 crypto_binding_nonce[32];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::current_pac	src/eap_peer/eap_fast.c	/^	struct eap_fast_pac *current_pac;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_pac	file:	access:public
eap_fast_data::eap_seq	src/eap_server/eap_server_fast.c	/^	int eap_seq;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::emsk	src/eap_peer/eap_fast.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::fast_version	src/eap_peer/eap_fast.c	/^	int fast_version;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::fast_version	src/eap_server/eap_server_fast.c	/^	int fast_version;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::final_result	src/eap_server/eap_server_fast.c	/^	int final_result;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::force_version	src/eap_server/eap_server_fast.c	/^	int force_version;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::identity	src/eap_server/eap_server_fast.c	/^	u8 *identity; \/* from PAC-Opaque *\/$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::identity_len	src/eap_server/eap_server_fast.c	/^	size_t identity_len;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::key_block_p	src/eap_peer/eap_fast.c	/^	struct eap_fast_key_block_provisioning *key_block_p;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_key_block_provisioning	file:	access:public
eap_fast_data::key_block_p	src/eap_server/eap_server_fast.c	/^	struct eap_fast_key_block_provisioning *key_block_p;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_key_block_provisioning	file:	access:public
eap_fast_data::key_data	src/eap_peer/eap_fast.c	/^	u8 key_data[EAP_FAST_KEY_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::max_pac_list_len	src/eap_peer/eap_fast.c	/^	size_t max_pac_list_len;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::num_phase2_types	src/eap_peer/eap_fast.c	/^	size_t num_phase2_types;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::pac	src/eap_peer/eap_fast.c	/^	struct eap_fast_pac *pac;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_pac	file:	access:public
eap_fast_data::pac_key_lifetime	src/eap_server/eap_server_fast.c	/^	int pac_key_lifetime;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::pac_key_refresh_time	src/eap_server/eap_server_fast.c	/^	int pac_key_refresh_time;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::pac_opaque_encr	src/eap_server/eap_server_fast.c	/^	u8 pac_opaque_encr[16];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::peer_version	src/eap_server/eap_server_fast.c	/^	int peer_version;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::pending_phase2_req	src/eap_peer/eap_fast.c	/^	struct wpabuf *pending_phase2_req;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::wpabuf	file:	access:public
eap_fast_data::pending_phase2_resp	src/eap_server/eap_server_fast.c	/^	struct wpabuf *pending_phase2_resp;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::wpabuf	file:	access:public
eap_fast_data::phase2_method	src/eap_peer/eap_fast.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method	file:	access:public
eap_fast_data::phase2_method	src/eap_server/eap_server_fast.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method	file:	access:public
eap_fast_data::phase2_priv	src/eap_peer/eap_fast.c	/^	void *phase2_priv;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::phase2_priv	src/eap_server/eap_server_fast.c	/^	void *phase2_priv;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::phase2_success	src/eap_peer/eap_fast.c	/^	int phase2_success;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::phase2_type	src/eap_peer/eap_fast.c	/^	struct eap_method_type phase2_type;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method_type	file:	access:public
eap_fast_data::phase2_types	src/eap_peer/eap_fast.c	/^	struct eap_method_type *phase2_types;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method_type	file:	access:public
eap_fast_data::provisioning	src/eap_peer/eap_fast.c	/^	int provisioning; \/* doing PAC provisioning (not the normal auth) *\/$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::provisioning_allowed	src/eap_peer/eap_fast.c	/^	int provisioning_allowed; \/* Allowed PAC provisioning modes *\/$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::resuming	src/eap_peer/eap_fast.c	/^	int resuming; \/* starting a resumed session *\/$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::send_new_pac	src/eap_server/eap_server_fast.c	/^	int send_new_pac; \/* server triggered re-keying of Tunnel PAC *\/$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::session_ticket_used	src/eap_peer/eap_fast.c	/^	int session_ticket_used;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::simck	src/eap_peer/eap_fast.c	/^	u8 simck[EAP_FAST_SIMCK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::simck	src/eap_server/eap_server_fast.c	/^	u8 simck[EAP_FAST_SIMCK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::simck_idx	src/eap_peer/eap_fast.c	/^	int simck_idx;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::simck_idx	src/eap_server/eap_server_fast.c	/^	int simck_idx;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::srv_id	src/eap_server/eap_server_fast.c	/^	u8 *srv_id;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::srv_id_info	src/eap_server/eap_server_fast.c	/^	char *srv_id_info;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::srv_id_len	src/eap_server/eap_server_fast.c	/^	size_t srv_id_len;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::ssl	src/eap_peer/eap_fast.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_ssl_data	file:	access:public
eap_fast_data::ssl	src/eap_server/eap_server_fast.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_ssl_data	file:	access:public
eap_fast_data::state	src/eap_server/eap_server_fast.c	/^	} state;$/;"	m	struct:eap_fast_data	typeref:enum:eap_fast_data::__anon146	file:	access:public
eap_fast_data::success	src/eap_peer/eap_fast.c	/^	int success;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::tnc_started	src/eap_server/eap_server_fast.c	/^	int tnc_started;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_data::use_pac_binary_format	src/eap_peer/eap_fast.c	/^	int use_pac_binary_format;$/;"	m	struct:eap_fast_data	file:	access:public
eap_fast_decrypt	src/eap_peer/eap_fast.c	/^static int eap_fast_decrypt(struct eap_sm *sm, struct eap_fast_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct eap_method_ret *ret, const struct eap_hdr *req, const struct wpabuf *in_data, struct wpabuf **out_data)
eap_fast_deinit	src/eap_peer/eap_fast.c	/^static void eap_fast_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_deinit	src/eap_peer/eap_fast.c	/^static void eap_fast_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_deinit_pac_data	src/eap_peer/eap_fast_pac.c	/^static void eap_fast_deinit_pac_data(struct eap_fast_read_ctx *rc)$/;"	f	file:	signature:(struct eap_fast_read_ctx *rc)
eap_fast_derive_eap_emsk	src/eap_common/eap_fast_common.c	/^void eap_fast_derive_eap_emsk(const u8 *simck, u8 *emsk)$/;"	f	signature:(const u8 *simck, u8 *emsk)
eap_fast_derive_eap_emsk	src/eap_common/eap_fast_common.h	/^void eap_fast_derive_eap_emsk(const u8 *simck, u8 *emsk);$/;"	p	signature:(const u8 *simck, u8 *emsk)
eap_fast_derive_eap_msk	src/eap_common/eap_fast_common.c	/^void eap_fast_derive_eap_msk(const u8 *simck, u8 *msk)$/;"	f	signature:(const u8 *simck, u8 *msk)
eap_fast_derive_eap_msk	src/eap_common/eap_fast_common.h	/^void eap_fast_derive_eap_msk(const u8 *simck, u8 *msk);$/;"	p	signature:(const u8 *simck, u8 *msk)
eap_fast_derive_key	src/eap_common/eap_fast_common.c	/^u8 * eap_fast_derive_key(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, const char *label, size_t len)
eap_fast_derive_key	src/eap_common/eap_fast_common.h	/^u8 * eap_fast_derive_key(void *ssl_ctx, struct tls_connection *conn,$/;"	p	signature:(void *ssl_ctx, struct tls_connection *conn, const char *label, size_t len)
eap_fast_derive_key_auth	src/eap_peer/eap_fast.c	/^static void eap_fast_derive_key_auth(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_derive_key_auth	src/eap_server/eap_server_fast.c	/^static void eap_fast_derive_key_auth(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_derive_key_provisioning	src/eap_peer/eap_fast.c	/^static void eap_fast_derive_key_provisioning(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_derive_key_provisioning	src/eap_server/eap_server_fast.c	/^static void eap_fast_derive_key_provisioning(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_derive_keys	src/eap_peer/eap_fast.c	/^static void eap_fast_derive_keys(struct eap_sm *sm, struct eap_fast_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_derive_master_secret	src/eap_common/eap_fast_common.c	/^void eap_fast_derive_master_secret(const u8 *pac_key, const u8 *server_random,$/;"	f	signature:(const u8 *pac_key, const u8 *server_random, const u8 *client_random, u8 *master_secret)
eap_fast_derive_master_secret	src/eap_common/eap_fast_common.h	/^void eap_fast_derive_master_secret(const u8 *pac_key, const u8 *server_random,$/;"	p	signature:(const u8 *pac_key, const u8 *server_random, const u8 *client_random, u8 *master_secret)
eap_fast_derive_msk	src/eap_peer/eap_fast.c	/^static int eap_fast_derive_msk(struct eap_fast_data *data)$/;"	f	file:	signature:(struct eap_fast_data *data)
eap_fast_encrypt_phase2	src/eap_server/eap_server_fast.c	/^static int eap_fast_encrypt_phase2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct wpabuf *plain, int piggyback)
eap_fast_encrypt_response	src/eap_peer/eap_fast.c	/^static int eap_fast_encrypt_response(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct wpabuf *resp, u8 identifier, struct wpabuf **out_data)
eap_fast_free_pac	src/eap_peer/eap_fast_pac.c	/^void eap_fast_free_pac(struct eap_fast_pac *pac)$/;"	f	signature:(struct eap_fast_pac *pac)
eap_fast_free_pac	src/eap_peer/eap_fast_pac.h	/^void eap_fast_free_pac(struct eap_fast_pac *pac);$/;"	p	signature:(struct eap_fast_pac *pac)
eap_fast_getKey	src/eap_peer/eap_fast.c	/^static u8 * eap_fast_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_fast_getKey	src/eap_server/eap_server_fast.c	/^static u8 * eap_fast_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_fast_get_a_id	src/eap_peer/eap_fast.c	/^static const u8 * eap_fast_get_a_id(const u8 *buf, size_t len, size_t *id_len)$/;"	f	file:	signature:(const u8 *buf, size_t len, size_t *id_len)
eap_fast_get_cmk	src/eap_peer/eap_fast.c	/^static int eap_fast_get_cmk(struct eap_sm *sm, struct eap_fast_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 *cmk)
eap_fast_get_emsk	src/eap_peer/eap_fast.c	/^static u8 * eap_fast_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_fast_get_emsk	src/eap_server/eap_server_fast.c	/^static u8 * eap_fast_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_fast_get_pac	src/eap_peer/eap_fast_pac.c	/^struct eap_fast_pac * eap_fast_get_pac(struct eap_fast_pac *pac_root,$/;"	f	signature:(struct eap_fast_pac *pac_root, const u8 *a_id, size_t a_id_len, u16 pac_type)
eap_fast_get_pac	src/eap_peer/eap_fast_pac.h	/^struct eap_fast_pac * eap_fast_get_pac(struct eap_fast_pac *pac_root,$/;"	p	signature:(struct eap_fast_pac *pac_root, const u8 *a_id, size_t a_id_len, u16 pac_type)
eap_fast_get_phase2_key	src/eap_peer/eap_fast.c	/^static int eap_fast_get_phase2_key(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 *isk, size_t isk_len)
eap_fast_get_phase2_key	src/eap_server/eap_server_fast.c	/^static int eap_fast_get_phase2_key(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 *isk, size_t isk_len)
eap_fast_get_status	src/eap_peer/eap_fast.c	/^static int eap_fast_get_status(struct eap_sm *sm, void *priv, char *buf,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, char *buf, size_t buflen, int verbose)
eap_fast_init	src/eap_peer/eap_fast.c	/^static void * eap_fast_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_fast_init	src/eap_server/eap_server_fast.c	/^static void * eap_fast_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_fast_init_pac_data	src/eap_peer/eap_fast_pac.c	/^static int eap_fast_init_pac_data(struct eap_sm *sm, const char *pac_file,$/;"	f	file:	signature:(struct eap_sm *sm, const char *pac_file, struct eap_fast_read_ctx *rc)
eap_fast_init_phase2_method	src/eap_peer/eap_fast.c	/^static int eap_fast_init_phase2_method(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_isDone	src/eap_server/eap_server_fast.c	/^static Boolean eap_fast_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_isKeyAvailable	src/eap_peer/eap_fast.c	/^static Boolean eap_fast_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_isSuccess	src/eap_server/eap_server_fast.c	/^static Boolean eap_fast_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_key_block_provisioning	src/eap_common/eap_fast_common.h	/^struct eap_fast_key_block_provisioning {$/;"	s
eap_fast_key_block_provisioning::client_challenge	src/eap_common/eap_fast_common.h	/^	u8 client_challenge[16]; \/* MSCHAPv2 ClientChallenge *\/$/;"	m	struct:eap_fast_key_block_provisioning	access:public
eap_fast_key_block_provisioning::server_challenge	src/eap_common/eap_fast_common.h	/^	u8 server_challenge[16]; \/* MSCHAPv2 ServerChallenge *\/$/;"	m	struct:eap_fast_key_block_provisioning	access:public
eap_fast_key_block_provisioning::session_key_seed	src/eap_common/eap_fast_common.h	/^	u8 session_key_seed[EAP_FAST_SKS_LEN];$/;"	m	struct:eap_fast_key_block_provisioning	access:public
eap_fast_load_pac	src/eap_peer/eap_fast_pac.c	/^int eap_fast_load_pac(struct eap_sm *sm, struct eap_fast_pac **pac_root,$/;"	f	signature:(struct eap_sm *sm, struct eap_fast_pac **pac_root, const char *pac_file)
eap_fast_load_pac	src/eap_peer/eap_fast_pac.h	/^int eap_fast_load_pac(struct eap_sm *sm, struct eap_fast_pac **pac_root,$/;"	p	signature:(struct eap_sm *sm, struct eap_fast_pac **pac_root, const char *pac_file)
eap_fast_load_pac_bin	src/eap_peer/eap_fast_pac.c	/^int eap_fast_load_pac_bin(struct eap_sm *sm, struct eap_fast_pac **pac_root,$/;"	f	signature:(struct eap_sm *sm, struct eap_fast_pac **pac_root, const char *pac_file)
eap_fast_load_pac_bin	src/eap_peer/eap_fast_pac.h	/^int eap_fast_load_pac_bin(struct eap_sm *sm, struct eap_fast_pac **pac_root,$/;"	p	signature:(struct eap_sm *sm, struct eap_fast_pac **pac_root, const char *pac_file)
eap_fast_pac	src/eap_peer/eap_fast_pac.h	/^struct eap_fast_pac {$/;"	s
eap_fast_pac::a_id	src/eap_peer/eap_fast_pac.h	/^	u8 *a_id;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::a_id_info	src/eap_peer/eap_fast_pac.h	/^	u8 *a_id_info;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::a_id_info_len	src/eap_peer/eap_fast_pac.h	/^	size_t a_id_info_len;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::a_id_len	src/eap_peer/eap_fast_pac.h	/^	size_t a_id_len;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::i_id	src/eap_peer/eap_fast_pac.h	/^	u8 *i_id;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::i_id_len	src/eap_peer/eap_fast_pac.h	/^	size_t i_id_len;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::next	src/eap_peer/eap_fast_pac.h	/^	struct eap_fast_pac *next;$/;"	m	struct:eap_fast_pac	typeref:struct:eap_fast_pac::eap_fast_pac	access:public
eap_fast_pac::pac_info	src/eap_peer/eap_fast_pac.h	/^	u8 *pac_info;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::pac_info_len	src/eap_peer/eap_fast_pac.h	/^	size_t pac_info_len;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::pac_key	src/eap_peer/eap_fast_pac.h	/^	u8 pac_key[EAP_FAST_PAC_KEY_LEN];$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::pac_opaque	src/eap_peer/eap_fast_pac.h	/^	u8 *pac_opaque;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::pac_opaque_len	src/eap_peer/eap_fast_pac.h	/^	size_t pac_opaque_len;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac::pac_type	src/eap_peer/eap_fast_pac.h	/^	u16 pac_type;$/;"	m	struct:eap_fast_pac	access:public
eap_fast_pac_get_a_id	src/eap_peer/eap_fast_pac.c	/^static void eap_fast_pac_get_a_id(struct eap_fast_pac *pac)$/;"	f	file:	signature:(struct eap_fast_pac *pac)
eap_fast_pac_list_truncate	src/eap_peer/eap_fast_pac.c	/^size_t eap_fast_pac_list_truncate(struct eap_fast_pac *pac_root,$/;"	f	signature:(struct eap_fast_pac *pac_root, size_t max_len)
eap_fast_pac_list_truncate	src/eap_peer/eap_fast_pac.h	/^size_t eap_fast_pac_list_truncate(struct eap_fast_pac *pac_root,$/;"	p	signature:(struct eap_fast_pac *pac_root, size_t max_len)
eap_fast_pac_request	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_pac_request(void)$/;"	f	file:	signature:(void)
eap_fast_pac_type	src/eap_server/eap_server_fast.c	/^static int eap_fast_pac_type(u8 *pac, size_t len, u16 type)$/;"	f	file:	signature:(u8 *pac, size_t len, u16 type)
eap_fast_parse_a_id	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_a_id(struct eap_fast_pac *pac, char *pos)$/;"	f	file:	signature:(struct eap_fast_pac *pac, char *pos)
eap_fast_parse_a_id_info	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_a_id_info(struct eap_fast_pac *pac,$/;"	f	file:	signature:(struct eap_fast_pac *pac, char *pos)
eap_fast_parse_decrypted	src/eap_peer/eap_fast.c	/^static int eap_fast_parse_decrypted(struct wpabuf *decrypted,$/;"	f	file:	signature:(struct wpabuf *decrypted, struct eap_fast_tlv_parse *tlv, struct wpabuf **resp)
eap_fast_parse_end	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_end(struct eap_fast_pac **pac_root,$/;"	f	file:	signature:(struct eap_fast_pac **pac_root, struct eap_fast_pac **pac)
eap_fast_parse_hex	src/eap_peer/eap_fast_pac.c	/^static u8 * eap_fast_parse_hex(const char *value, size_t *len)$/;"	f	file:	signature:(const char *value, size_t *len)
eap_fast_parse_i_id	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_i_id(struct eap_fast_pac *pac, char *pos)$/;"	f	file:	signature:(struct eap_fast_pac *pac, char *pos)
eap_fast_parse_pac_info	src/eap_peer/eap_fast.c	/^static int eap_fast_parse_pac_info(struct eap_fast_pac *entry, int type,$/;"	f	file:	signature:(struct eap_fast_pac *entry, int type, u8 *pos, size_t len)
eap_fast_parse_pac_key	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_pac_key(struct eap_fast_pac *pac, char *pos)$/;"	f	file:	signature:(struct eap_fast_pac *pac, char *pos)
eap_fast_parse_pac_opaque	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_pac_opaque(struct eap_fast_pac *pac,$/;"	f	file:	signature:(struct eap_fast_pac *pac, char *pos)
eap_fast_parse_pac_tlv	src/eap_peer/eap_fast.c	/^static void eap_fast_parse_pac_tlv(struct eap_fast_pac *entry, int type,$/;"	f	file:	signature:(struct eap_fast_pac *entry, int type, u8 *pos, size_t len, int *pac_key_found)
eap_fast_parse_pac_type	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_pac_type(struct eap_fast_pac *pac,$/;"	f	file:	signature:(struct eap_fast_pac *pac, char *pos)
eap_fast_parse_phase1	src/eap_peer/eap_fast.c	/^static int eap_fast_parse_phase1(struct eap_fast_data *data,$/;"	f	file:	signature:(struct eap_fast_data *data, const char *phase1)
eap_fast_parse_start	src/eap_peer/eap_fast_pac.c	/^static const char * eap_fast_parse_start(struct eap_fast_pac **pac)$/;"	f	file:	signature:(struct eap_fast_pac **pac)
eap_fast_parse_tlv	src/eap_common/eap_fast_common.c	/^int eap_fast_parse_tlv(struct eap_fast_tlv_parse *tlv,$/;"	f	signature:(struct eap_fast_tlv_parse *tlv, int tlv_type, u8 *pos, int len)
eap_fast_parse_tlv	src/eap_common/eap_fast_common.h	/^int eap_fast_parse_tlv(struct eap_fast_tlv_parse *tlv,$/;"	p	signature:(struct eap_fast_tlv_parse *tlv, int tlv_type, u8 *pos, int len)
eap_fast_parse_tlvs	src/eap_server/eap_server_fast.c	/^static int eap_fast_parse_tlvs(struct wpabuf *data,$/;"	f	file:	signature:(struct wpabuf *data, struct eap_fast_tlv_parse *tlv)
eap_fast_phase1_done	src/eap_server/eap_server_fast.c	/^static int eap_fast_phase1_done(struct eap_sm *sm, struct eap_fast_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_phase2_init	src/eap_server/eap_server_fast.c	/^static int eap_fast_phase2_init(struct eap_sm *sm, struct eap_fast_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, EapType eap_type)
eap_fast_phase2_request	src/eap_peer/eap_fast.c	/^static int eap_fast_phase2_request(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct eap_method_ret *ret, struct eap_hdr *hdr, struct wpabuf **resp)
eap_fast_process	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_fast_process	src/eap_server/eap_server_fast.c	/^static void eap_fast_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_fast_process_crypto_binding	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_process_crypto_binding($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_fast_data *data, struct eap_method_ret *ret, struct eap_tlv_crypto_binding_tlv *_bind, size_t bind_len)
eap_fast_process_decrypted	src/eap_peer/eap_fast.c	/^static int eap_fast_process_decrypted(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct eap_method_ret *ret, const struct eap_hdr *req, struct wpabuf *decrypted, struct wpabuf **out_data)
eap_fast_process_eap_payload_tlv	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_process_eap_payload_tlv($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_fast_data *data, struct eap_method_ret *ret, u8 *eap_payload_tlv, size_t eap_payload_tlv_len)
eap_fast_process_msg	src/eap_server/eap_server_fast.c	/^static void eap_fast_process_msg(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, const struct wpabuf *respData)
eap_fast_process_pac	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_process_pac(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct eap_method_ret *ret, u8 *pac, size_t pac_len)
eap_fast_process_pac_info	src/eap_peer/eap_fast.c	/^static int eap_fast_process_pac_info(struct eap_fast_pac *entry)$/;"	f	file:	signature:(struct eap_fast_pac *entry)
eap_fast_process_pac_tlv	src/eap_peer/eap_fast.c	/^static int eap_fast_process_pac_tlv(struct eap_fast_pac *entry,$/;"	f	file:	signature:(struct eap_fast_pac *entry, u8 *pac, size_t pac_len)
eap_fast_process_phase1	src/eap_server/eap_server_fast.c	/^static int eap_fast_process_phase1(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_process_phase2	src/eap_server/eap_server_fast.c	/^static void eap_fast_process_phase2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct wpabuf *in_buf)
eap_fast_process_phase2_eap	src/eap_server/eap_server_fast.c	/^static void eap_fast_process_phase2_eap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 *in_data, size_t in_len)
eap_fast_process_phase2_response	src/eap_server/eap_server_fast.c	/^static void eap_fast_process_phase2_response(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 *in_data, size_t in_len)
eap_fast_process_phase2_start	src/eap_server/eap_server_fast.c	/^static int eap_fast_process_phase2_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_process_phase2_start	src/eap_server/eap_server_fast.c	/^static int eap_fast_process_phase2_start(struct eap_sm *sm,$/;"	p	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_process_phase2_tlvs	src/eap_server/eap_server_fast.c	/^static void eap_fast_process_phase2_tlvs(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct wpabuf *in_data)
eap_fast_process_start	src/eap_peer/eap_fast.c	/^static int eap_fast_process_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, u8 flags, const u8 *pos, size_t left)
eap_fast_process_version	src/eap_server/eap_server_fast.c	/^static int eap_fast_process_version(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, int peer_version)
eap_fast_prov	src/ap/ap_config.h	/^	int eap_fast_prov;$/;"	m	struct:hostapd_bss_config	access:public
eap_fast_prov	src/eap_server/eap.h	/^	int eap_fast_prov;$/;"	m	struct:eap_config	access:public
eap_fast_prov	src/eap_server/eap_i.h	/^	} eap_fast_prov;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon159	access:public
eap_fast_prov	src/eapol_auth/eapol_auth_sm.h	/^	int eap_fast_prov;$/;"	m	struct:eapol_auth_config	access:public
eap_fast_prov	src/radius/radius_server.c	/^	int eap_fast_prov;$/;"	m	struct:radius_server_data	file:	access:public
eap_fast_prov	src/radius/radius_server.h	/^	int eap_fast_prov;$/;"	m	struct:radius_server_conf	access:public
eap_fast_put_tlv	src/eap_common/eap_fast_common.c	/^void eap_fast_put_tlv(struct wpabuf *buf, u16 type, const void *data,$/;"	f	signature:(struct wpabuf *buf, u16 type, const void *data, u16 len)
eap_fast_put_tlv	src/eap_common/eap_fast_common.h	/^void eap_fast_put_tlv(struct wpabuf *buf, u16 type, const void *data,$/;"	p	signature:(struct wpabuf *buf, u16 type, const void *data, u16 len)
eap_fast_put_tlv_buf	src/eap_common/eap_fast_common.c	/^void eap_fast_put_tlv_buf(struct wpabuf *buf, u16 type,$/;"	f	signature:(struct wpabuf *buf, u16 type, const struct wpabuf *data)
eap_fast_put_tlv_buf	src/eap_common/eap_fast_common.h	/^void eap_fast_put_tlv_buf(struct wpabuf *buf, u16 type,$/;"	p	signature:(struct wpabuf *buf, u16 type, const struct wpabuf *data)
eap_fast_put_tlv_hdr	src/eap_common/eap_fast_common.c	/^void eap_fast_put_tlv_hdr(struct wpabuf *buf, u16 type, u16 len)$/;"	f	signature:(struct wpabuf *buf, u16 type, u16 len)
eap_fast_put_tlv_hdr	src/eap_common/eap_fast_common.h	/^void eap_fast_put_tlv_hdr(struct wpabuf *buf, u16 type, u16 len);$/;"	p	signature:(struct wpabuf *buf, u16 type, u16 len)
eap_fast_read_ctx	src/eap_peer/eap_fast_pac.c	/^struct eap_fast_read_ctx {$/;"	s	file:
eap_fast_read_ctx::buf	src/eap_peer/eap_fast_pac.c	/^	char *buf;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
eap_fast_read_ctx::buf_len	src/eap_peer/eap_fast_pac.c	/^	size_t buf_len;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
eap_fast_read_ctx::end	src/eap_peer/eap_fast_pac.c	/^	const char *end;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
eap_fast_read_ctx::f	src/eap_peer/eap_fast_pac.c	/^	FILE *f;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
eap_fast_read_ctx::line	src/eap_peer/eap_fast_pac.c	/^	int line;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
eap_fast_read_ctx::pos	src/eap_peer/eap_fast_pac.c	/^	const char *pos;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
eap_fast_read_line	src/eap_peer/eap_fast_pac.c	/^static int eap_fast_read_line(struct eap_fast_read_ctx *rc, char **value)$/;"	f	file:	signature:(struct eap_fast_read_ctx *rc, char **value)
eap_fast_remove_pac	src/eap_peer/eap_fast_pac.c	/^static void eap_fast_remove_pac(struct eap_fast_pac **pac_root,$/;"	f	file:	signature:(struct eap_fast_pac **pac_root, struct eap_fast_pac **pac_current, const u8 *a_id, size_t a_id_len, u16 pac_type)
eap_fast_req_failure	src/eap_server/eap_server_fast.c	/^static EapType eap_fast_req_failure(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_reset	src/eap_server/eap_server_fast.c	/^static void eap_fast_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_reset	src/eap_server/eap_server_fast.c	/^static void eap_fast_reset(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_fast_save_pac	src/eap_peer/eap_fast_pac.c	/^int eap_fast_save_pac(struct eap_sm *sm, struct eap_fast_pac *pac_root,$/;"	f	signature:(struct eap_sm *sm, struct eap_fast_pac *pac_root, const char *pac_file)
eap_fast_save_pac	src/eap_peer/eap_fast_pac.h	/^int eap_fast_save_pac(struct eap_sm *sm, struct eap_fast_pac *pac_root,$/;"	p	signature:(struct eap_sm *sm, struct eap_fast_pac *pac_root, const char *pac_file)
eap_fast_save_pac_bin	src/eap_peer/eap_fast_pac.c	/^int eap_fast_save_pac_bin(struct eap_sm *sm, struct eap_fast_pac *pac_root,$/;"	f	signature:(struct eap_sm *sm, struct eap_fast_pac *pac_root, const char *pac_file)
eap_fast_save_pac_bin	src/eap_peer/eap_fast_pac.h	/^int eap_fast_save_pac_bin(struct eap_sm *sm, struct eap_fast_pac *pac_root,$/;"	p	signature:(struct eap_sm *sm, struct eap_fast_pac *pac_root, const char *pac_file)
eap_fast_select_pac	src/eap_peer/eap_fast.c	/^static void eap_fast_select_pac(struct eap_fast_data *data,$/;"	f	file:	signature:(struct eap_fast_data *data, const u8 *a_id, size_t a_id_len)
eap_fast_select_phase2_method	src/eap_peer/eap_fast.c	/^static int eap_fast_select_phase2_method(struct eap_fast_data *data, u8 type)$/;"	f	file:	signature:(struct eap_fast_data *data, u8 type)
eap_fast_session_ticket_cb	src/eap_peer/eap_fast.c	/^static int eap_fast_session_ticket_cb(void *ctx, const u8 *ticket, size_t len,$/;"	f	file:	signature:(void *ctx, const u8 *ticket, size_t len, const u8 *client_random, const u8 *server_random, u8 *master_secret)
eap_fast_session_ticket_cb	src/eap_server/eap_server_fast.c	/^static int eap_fast_session_ticket_cb(void *ctx, const u8 *ticket, size_t len,$/;"	f	file:	signature:(void *ctx, const u8 *ticket, size_t len, const u8 *client_random, const u8 *server_random, u8 *master_secret)
eap_fast_set_provisioning_ciphers	src/eap_peer/eap_fast.c	/^static int eap_fast_set_provisioning_ciphers(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_state	src/eap_server/eap_server_fast.c	/^static void eap_fast_state(struct eap_fast_data *data, int state)$/;"	f	file:	signature:(struct eap_fast_data *data, int state)
eap_fast_state_txt	src/eap_server/eap_server_fast.c	/^static const char * eap_fast_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_fast_tlv_eap_payload	src/eap_common/eap_fast_common.c	/^struct wpabuf * eap_fast_tlv_eap_payload(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
eap_fast_tlv_eap_payload	src/eap_common/eap_fast_common.h	/^struct wpabuf * eap_fast_tlv_eap_payload(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
eap_fast_tlv_nak	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_tlv_nak(int vendor_id, int tlv_type)$/;"	f	file:	signature:(int vendor_id, int tlv_type)
eap_fast_tlv_pac_ack	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_tlv_pac_ack(void)$/;"	f	file:	signature:(void)
eap_fast_tlv_parse	src/eap_common/eap_fast_common.h	/^struct eap_fast_tlv_parse {$/;"	s
eap_fast_tlv_parse::crypto_binding	src/eap_common/eap_fast_common.h	/^	struct eap_tlv_crypto_binding_tlv *crypto_binding;$/;"	m	struct:eap_fast_tlv_parse	typeref:struct:eap_fast_tlv_parse::eap_tlv_crypto_binding_tlv	access:public
eap_fast_tlv_parse::crypto_binding_len	src/eap_common/eap_fast_common.h	/^	size_t crypto_binding_len;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::eap_payload_tlv	src/eap_common/eap_fast_common.h	/^	u8 *eap_payload_tlv;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::eap_payload_tlv_len	src/eap_common/eap_fast_common.h	/^	size_t eap_payload_tlv_len;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::iresult	src/eap_common/eap_fast_common.h	/^	int iresult;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::pac	src/eap_common/eap_fast_common.h	/^	u8 *pac;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::pac_len	src/eap_common/eap_fast_common.h	/^	size_t pac_len;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::request_action	src/eap_common/eap_fast_common.h	/^	int request_action;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_parse::result	src/eap_common/eap_fast_common.h	/^	int result;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_fast_tlv_result	src/eap_peer/eap_fast.c	/^static struct wpabuf * eap_fast_tlv_result(int status, int intermediate)$/;"	f	file:	signature:(int status, int intermediate)
eap_fast_update_icmk	src/eap_server/eap_server_fast.c	/^static int eap_fast_update_icmk(struct eap_sm *sm, struct eap_fast_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data)
eap_fast_use_pac_opaque	src/eap_peer/eap_fast.c	/^static int eap_fast_use_pac_opaque(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_fast_data *data, struct eap_fast_pac *pac)
eap_fast_validate_crypto_binding	src/eap_peer/eap_fast.c	/^static int eap_fast_validate_crypto_binding($/;"	f	file:	signature:( struct eap_tlv_crypto_binding_tlv *_bind)
eap_fast_validate_crypto_binding	src/eap_server/eap_server_fast.c	/^static int eap_fast_validate_crypto_binding($/;"	f	file:	signature:( struct eap_fast_data *data, struct eap_tlv_crypto_binding_tlv *b, size_t bind_len)
eap_fast_write	src/eap_peer/eap_fast_pac.c	/^static void eap_fast_write(char **buf, char **pos, size_t *buf_len,$/;"	f	file:	signature:(char **buf, char **pos, size_t *buf_len, const char *field, const u8 *data, size_t len, int txt)
eap_fast_write_crypto_binding	src/eap_peer/eap_fast.c	/^static void eap_fast_write_crypto_binding($/;"	f	file:	signature:( struct eap_tlv_crypto_binding_tlv *rbind, struct eap_tlv_crypto_binding_tlv *_bind, const u8 *cmk)
eap_fast_write_pac	src/eap_peer/eap_fast_pac.c	/^static int eap_fast_write_pac(struct eap_sm *sm, const char *pac_file,$/;"	f	file:	signature:(struct eap_sm *sm, const char *pac_file, char *buf, size_t len)
eap_fast_write_pac_request	src/eap_peer/eap_fast.c	/^static u8 * eap_fast_write_pac_request(u8 *pos, u16 pac_type)$/;"	f	file:	signature:(u8 *pos, u16 pac_type)
eap_get_config	src/eap_peer/eap.c	/^struct eap_peer_config * eap_get_config(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_get_config	src/eap_peer/eap_i.h	/^struct eap_peer_config * eap_get_config(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_get_config_blob	src/eap_peer/eap.c	/^const struct wpa_config_blob * eap_get_config_blob(struct eap_sm *sm,$/;"	f	signature:(struct eap_sm *sm, const char *name)
eap_get_config_blob	src/eap_peer/eap_i.h	/^eap_get_config_blob(struct eap_sm *sm, const char *name);$/;"	p	signature:(struct eap_sm *sm, const char *name)
eap_get_config_fragment_size	src/eap_peer/eap.c	/^int eap_get_config_fragment_size(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_get_config_fragment_size	src/eap_peer/eap_i.h	/^int eap_get_config_fragment_size(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_get_config_identity	src/eap_peer/eap.c	/^const u8 * eap_get_config_identity(struct eap_sm *sm, size_t *len)$/;"	f	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_identity	src/eap_peer/eap_i.h	/^const u8 * eap_get_config_identity(struct eap_sm *sm, size_t *len);$/;"	p	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_new_password	src/eap_peer/eap.c	/^const u8 * eap_get_config_new_password(struct eap_sm *sm, size_t *len)$/;"	f	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_new_password	src/eap_peer/eap_i.h	/^const u8 * eap_get_config_new_password(struct eap_sm *sm, size_t *len);$/;"	p	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_otp	src/eap_peer/eap.c	/^const u8 * eap_get_config_otp(struct eap_sm *sm, size_t *len)$/;"	f	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_otp	src/eap_peer/eap_i.h	/^const u8 * eap_get_config_otp(struct eap_sm *sm, size_t *len);$/;"	p	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_password	src/eap_peer/eap.c	/^const u8 * eap_get_config_password(struct eap_sm *sm, size_t *len)$/;"	f	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_password	src/eap_peer/eap_i.h	/^const u8 * eap_get_config_password(struct eap_sm *sm, size_t *len);$/;"	p	signature:(struct eap_sm *sm, size_t *len)
eap_get_config_password2	src/eap_peer/eap.c	/^const u8 * eap_get_config_password2(struct eap_sm *sm, size_t *len, int *hash)$/;"	f	signature:(struct eap_sm *sm, size_t *len, int *hash)
eap_get_config_password2	src/eap_peer/eap_i.h	/^const u8 * eap_get_config_password2(struct eap_sm *sm, size_t *len, int *hash);$/;"	p	signature:(struct eap_sm *sm, size_t *len, int *hash)
eap_get_config_phase1	src/eap_peer/eap.c	/^const char * eap_get_config_phase1(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_get_config_phase1	src/eap_peer/eap_i.h	/^const char * eap_get_config_phase1(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_get_config_phase2	src/eap_peer/eap.c	/^const char * eap_get_config_phase2(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_get_config_phase2	src/eap_peer/eap_i.h	/^const char * eap_get_config_phase2(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_get_eapKeyData	src/eap_peer/eap.c	/^const u8 * eap_get_eapKeyData(struct eap_sm *sm, size_t *len)$/;"	f	signature:(struct eap_sm *sm, size_t *len)
eap_get_eapKeyData	src/eap_peer/eap.h	/^const u8 * eap_get_eapKeyData(struct eap_sm *sm, size_t *len);$/;"	p	signature:(struct eap_sm *sm, size_t *len)
eap_get_eapRespData	src/eap_peer/eap.c	/^struct wpabuf * eap_get_eapRespData(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_get_eapRespData	src/eap_peer/eap.h	/^struct wpabuf * eap_get_eapRespData(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_get_id	src/eap_common/eap_common.c	/^u8 eap_get_id(const struct wpabuf *msg)$/;"	f	signature:(const struct wpabuf *msg)
eap_get_id	src/eap_common/eap_common.h	/^u8 eap_get_id(const struct wpabuf *msg);$/;"	p	signature:(const struct wpabuf *msg)
eap_get_identity	src/eap_server/eap.h	/^const u8 * eap_get_identity(struct eap_sm *sm, size_t *len);$/;"	p	signature:(struct eap_sm *sm, size_t *len)
eap_get_identity	src/eap_server/eap_server.c	/^const u8 * eap_get_identity(struct eap_sm *sm, size_t *len)$/;"	f	signature:(struct eap_sm *sm, size_t *len)
eap_get_interface	src/eap_server/eap.h	/^struct eap_eapol_interface * eap_get_interface(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_get_interface	src/eap_server/eap_server.c	/^struct eap_eapol_interface * eap_get_interface(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_get_name	src/eap_peer/eap_methods.c	/^const char * eap_get_name(int vendor, EapType type)$/;"	f	signature:(int vendor, EapType type)
eap_get_name	src/eap_peer/eap_methods.h	/^const char * eap_get_name(int vendor, EapType type);$/;"	p	signature:(int vendor, EapType type)
eap_get_name	src/eap_peer/eap_methods.h	/^static inline const char * eap_get_name(int vendor, EapType type)$/;"	f	signature:(int vendor, EapType type)
eap_get_names	src/eap_peer/eap_methods.c	/^size_t eap_get_names(char *buf, size_t buflen)$/;"	f	signature:(char *buf, size_t buflen)
eap_get_names	src/eap_peer/eap_methods.h	/^size_t eap_get_names(char *buf, size_t buflen);$/;"	p	signature:(char *buf, size_t buflen)
eap_get_names	src/eap_peer/eap_methods.h	/^static inline size_t eap_get_names(char *buf, size_t buflen)$/;"	f	signature:(char *buf, size_t buflen)
eap_get_names_as_string_array	src/eap_peer/eap_methods.c	/^char ** eap_get_names_as_string_array(size_t *num)$/;"	f	signature:(size_t *num)
eap_get_names_as_string_array	src/eap_peer/eap_methods.h	/^char ** eap_get_names_as_string_array(size_t *num);$/;"	p	signature:(size_t *num)
eap_get_names_as_string_array	src/eap_peer/eap_methods.h	/^static inline char ** eap_get_names_as_string_array(size_t *num)$/;"	f	signature:(size_t *num)
eap_get_phase2_type	src/eap_peer/eap.c	/^u32 eap_get_phase2_type(const char *name, int *vendor)$/;"	f	signature:(const char *name, int *vendor)
eap_get_phase2_type	src/eap_peer/eap.h	/^u32 eap_get_phase2_type(const char *name, int *vendor);$/;"	p	signature:(const char *name, int *vendor)
eap_get_phase2_types	src/eap_peer/eap.c	/^struct eap_method_type * eap_get_phase2_types(struct eap_peer_config *config,$/;"	f	signature:(struct eap_peer_config *config, size_t *count)
eap_get_phase2_types	src/eap_peer/eap.h	/^struct eap_method_type * eap_get_phase2_types(struct eap_peer_config *config,$/;"	p	signature:(struct eap_peer_config *config, size_t *count)
eap_get_type	src/eap_common/eap_common.c	/^EapType eap_get_type(const struct wpabuf *msg)$/;"	f	signature:(const struct wpabuf *msg)
eap_get_type	src/eap_common/eap_common.h	/^EapType eap_get_type(const struct wpabuf *msg);$/;"	p	signature:(const struct wpabuf *msg)
eap_gpsk_buildReq	src/eap_server/eap_server_gpsk.c	/^static struct wpabuf * eap_gpsk_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_gpsk_build_gpsk_1	src/eap_server/eap_server_gpsk.c	/^static struct wpabuf * eap_gpsk_build_gpsk_1(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, u8 id)
eap_gpsk_build_gpsk_3	src/eap_server/eap_server_gpsk.c	/^static struct wpabuf * eap_gpsk_build_gpsk_3(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, u8 id)
eap_gpsk_check	src/eap_server/eap_server_gpsk.c	/^static Boolean eap_gpsk_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_gpsk_compute_mic	src/eap_common/eap_gpsk_common.c	/^int eap_gpsk_compute_mic(const u8 *sk, size_t sk_len, int vendor,$/;"	f	signature:(const u8 *sk, size_t sk_len, int vendor, int specifier, const u8 *data, size_t len, u8 *mic)
eap_gpsk_compute_mic	src/eap_common/eap_gpsk_common.h	/^int eap_gpsk_compute_mic(const u8 *sk, size_t sk_len, int vendor,$/;"	p	signature:(const u8 *sk, size_t sk_len, int vendor, int specifier, const u8 *data, size_t len, u8 *mic)
eap_gpsk_compute_mic_aes	src/eap_common/eap_gpsk_common.c	/^static int eap_gpsk_compute_mic_aes(const u8 *sk, size_t sk_len,$/;"	f	file:	signature:(const u8 *sk, size_t sk_len, const u8 *data, size_t len, u8 *mic)
eap_gpsk_csuite	src/eap_common/eap_gpsk_common.h	/^struct eap_gpsk_csuite {$/;"	s
eap_gpsk_csuite::specifier	src/eap_common/eap_gpsk_common.h	/^	u8 specifier[2];$/;"	m	struct:eap_gpsk_csuite	access:public
eap_gpsk_csuite::vendor	src/eap_common/eap_gpsk_common.h	/^	u8 vendor[4];$/;"	m	struct:eap_gpsk_csuite	access:public
eap_gpsk_data	src/eap_peer/eap_gpsk.c	/^struct eap_gpsk_data {$/;"	s	file:
eap_gpsk_data	src/eap_server/eap_server_gpsk.c	/^struct eap_gpsk_data {$/;"	s	file:
eap_gpsk_data::FAILURE	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
eap_gpsk_data::FAILURE	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
eap_gpsk_data::GPSK_1	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
eap_gpsk_data::GPSK_1	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
eap_gpsk_data::GPSK_3	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
eap_gpsk_data::GPSK_3	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
eap_gpsk_data::SUCCESS	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon180	file:
eap_gpsk_data::SUCCESS	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gpsk_data::__anon152	file:
eap_gpsk_data::csuite_count	src/eap_server/eap_server_gpsk.c	/^	size_t csuite_count;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::csuite_list	src/eap_server/eap_server_gpsk.c	/^	struct eap_gpsk_csuite csuite_list[MAX_NUM_CSUITES];$/;"	m	struct:eap_gpsk_data	typeref:struct:eap_gpsk_data::eap_gpsk_csuite	file:	access:public
eap_gpsk_data::emsk	src/eap_peer/eap_gpsk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::emsk	src/eap_server/eap_server_gpsk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_peer	src/eap_peer/eap_gpsk.c	/^	u8 *id_peer;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_peer	src/eap_server/eap_server_gpsk.c	/^	u8 *id_peer;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_peer_len	src/eap_peer/eap_gpsk.c	/^	size_t id_peer_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_peer_len	src/eap_server/eap_server_gpsk.c	/^	size_t id_peer_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_server	src/eap_peer/eap_gpsk.c	/^	u8 *id_server;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_server	src/eap_server/eap_server_gpsk.c	/^	u8 *id_server;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_server_len	src/eap_peer/eap_gpsk.c	/^	size_t id_server_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::id_server_len	src/eap_server/eap_server_gpsk.c	/^	size_t id_server_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::msk	src/eap_peer/eap_gpsk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::msk	src/eap_server/eap_server_gpsk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::pk	src/eap_peer/eap_gpsk.c	/^	u8 pk[EAP_GPSK_MAX_PK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::pk	src/eap_server/eap_server_gpsk.c	/^	u8 pk[EAP_GPSK_MAX_PK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::pk_len	src/eap_peer/eap_gpsk.c	/^	size_t pk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::pk_len	src/eap_server/eap_server_gpsk.c	/^	size_t pk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::psk	src/eap_peer/eap_gpsk.c	/^	u8 *psk;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::psk_len	src/eap_peer/eap_gpsk.c	/^	size_t psk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::rand_peer	src/eap_peer/eap_gpsk.c	/^	u8 rand_peer[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::rand_peer	src/eap_server/eap_server_gpsk.c	/^	u8 rand_peer[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::rand_server	src/eap_peer/eap_gpsk.c	/^	u8 rand_server[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::rand_server	src/eap_server/eap_server_gpsk.c	/^	u8 rand_server[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::session_id	src/eap_peer/eap_gpsk.c	/^	u8 session_id;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::session_id_set	src/eap_peer/eap_gpsk.c	/^	int session_id_set;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::sk	src/eap_peer/eap_gpsk.c	/^	u8 sk[EAP_GPSK_MAX_SK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::sk	src/eap_server/eap_server_gpsk.c	/^	u8 sk[EAP_GPSK_MAX_SK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::sk_len	src/eap_peer/eap_gpsk.c	/^	size_t sk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::sk_len	src/eap_server/eap_server_gpsk.c	/^	size_t sk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::specifier	src/eap_peer/eap_gpsk.c	/^	int specifier; \/* CSuite\/Specifier *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::specifier	src/eap_server/eap_server_gpsk.c	/^	int specifier; \/* CSuite\/Specifier *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::state	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_gpsk_data	typeref:enum:eap_gpsk_data::__anon180	file:	access:public
eap_gpsk_data::state	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_gpsk_data	typeref:enum:eap_gpsk_data::__anon152	file:	access:public
eap_gpsk_data::vendor	src/eap_peer/eap_gpsk.c	/^	int vendor; \/* CSuite\/Specifier *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_data::vendor	src/eap_server/eap_server_gpsk.c	/^	int vendor; \/* CSuite\/Vendor *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
eap_gpsk_deinit	src/eap_peer/eap_gpsk.c	/^static void eap_gpsk_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gpsk_deinit	src/eap_peer/eap_gpsk.c	/^static void eap_gpsk_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_gpsk_derive_keys	src/eap_common/eap_gpsk_common.c	/^int eap_gpsk_derive_keys(const u8 *psk, size_t psk_len, int vendor,$/;"	f	signature:(const u8 *psk, size_t psk_len, int vendor, int specifier, const u8 *rand_peer, const u8 *rand_server, const u8 *id_peer, size_t id_peer_len, const u8 *id_server, size_t id_server_len, u8 *msk, u8 *emsk, u8 *sk, size_t *sk_len, u8 *pk, size_t *pk_len)
eap_gpsk_derive_keys	src/eap_common/eap_gpsk_common.h	/^int eap_gpsk_derive_keys(const u8 *psk, size_t psk_len, int vendor,$/;"	p	signature:(const u8 *psk, size_t psk_len, int vendor, int specifier, const u8 *rand_client, const u8 *rand_server, const u8 *id_client, size_t id_client_len, const u8 *id_server, size_t id_server_len, u8 *msk, u8 *emsk, u8 *sk, size_t *sk_len, u8 *pk, size_t *pk_len)
eap_gpsk_derive_keys_aes	src/eap_common/eap_gpsk_common.c	/^static int eap_gpsk_derive_keys_aes(const u8 *psk, size_t psk_len,$/;"	f	file:	signature:(const u8 *psk, size_t psk_len, const u8 *seed, size_t seed_len, u8 *msk, u8 *emsk, u8 *sk, size_t *sk_len, u8 *pk, size_t *pk_len)
eap_gpsk_derive_keys_helper	src/eap_common/eap_gpsk_common.c	/^static int eap_gpsk_derive_keys_helper(u32 csuite_specifier,$/;"	f	file:	signature:(u32 csuite_specifier, u8 *kdf_out, size_t kdf_out_len, const u8 *psk, size_t psk_len, const u8 *seed, size_t seed_len, u8 *msk, u8 *emsk, u8 *sk, size_t sk_len, u8 *pk, size_t pk_len)
eap_gpsk_derive_keys_sha256	src/eap_common/eap_gpsk_common.c	/^static int eap_gpsk_derive_keys_sha256(const u8 *psk, size_t psk_len,$/;"	f	file:	signature:(const u8 *psk, size_t psk_len, const u8 *seed, size_t seed_len, u8 *msk, u8 *emsk, u8 *sk, size_t *sk_len)
eap_gpsk_getKey	src/eap_peer/eap_gpsk.c	/^static u8 * eap_gpsk_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_gpsk_getKey	src/eap_server/eap_server_gpsk.c	/^static u8 * eap_gpsk_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_gpsk_get_emsk	src/eap_peer/eap_gpsk.c	/^static u8 * eap_gpsk_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_gpsk_get_emsk	src/eap_server/eap_server_gpsk.c	/^static u8 * eap_gpsk_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_gpsk_gkdf_cmac	src/eap_common/eap_gpsk_common.c	/^static int eap_gpsk_gkdf_cmac(const u8 *psk \/* Y *\/,$/;"	f	file:	signature:(const u8 *psk , const u8 *data , size_t data_len, u8 *buf, size_t len )
eap_gpsk_gkdf_sha256	src/eap_common/eap_gpsk_common.c	/^static int eap_gpsk_gkdf_sha256(const u8 *psk \/* Y *\/,$/;"	f	file:	signature:(const u8 *psk , const u8 *data , size_t data_len, u8 *buf, size_t len )
eap_gpsk_init	src/eap_peer/eap_gpsk.c	/^static void * eap_gpsk_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_gpsk_init	src/eap_server/eap_server_gpsk.c	/^static void * eap_gpsk_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_gpsk_isDone	src/eap_server/eap_server_gpsk.c	/^static Boolean eap_gpsk_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gpsk_isKeyAvailable	src/eap_peer/eap_gpsk.c	/^static Boolean eap_gpsk_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gpsk_isSuccess	src/eap_server/eap_server_gpsk.c	/^static Boolean eap_gpsk_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gpsk_mic_len	src/eap_common/eap_gpsk_common.c	/^size_t eap_gpsk_mic_len(int vendor, int specifier)$/;"	f	signature:(int vendor, int specifier)
eap_gpsk_mic_len	src/eap_common/eap_gpsk_common.h	/^size_t eap_gpsk_mic_len(int vendor, int specifier);$/;"	p	signature:(int vendor, int specifier)
eap_gpsk_process	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_gpsk_process	src/eap_server/eap_server_gpsk.c	/^static void eap_gpsk_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_gpsk_process_csuite_list	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_process_csuite_list(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, const u8 **list, size_t *list_len, const u8 *pos, const u8 *end)
eap_gpsk_process_gpsk_1	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_process_gpsk_1(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_gpsk_process_gpsk_2	src/eap_server/eap_server_gpsk.c	/^static void eap_gpsk_process_gpsk_2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, const u8 *payload, size_t payloadlen)
eap_gpsk_process_gpsk_3	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_process_gpsk_3(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_gpsk_process_gpsk_4	src/eap_server/eap_server_gpsk.c	/^static void eap_gpsk_process_gpsk_4(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, const u8 *payload, size_t payloadlen)
eap_gpsk_process_id_server	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_process_id_server(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *pos, const u8 *end)
eap_gpsk_process_rand_server	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_process_rand_server(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *pos, const u8 *end)
eap_gpsk_reset	src/eap_server/eap_server_gpsk.c	/^static void eap_gpsk_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gpsk_select_csuite	src/eap_peer/eap_gpsk.c	/^static int eap_gpsk_select_csuite(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_gpsk_data *data, const u8 *csuite_list, size_t csuite_list_len)
eap_gpsk_send_gpsk_2	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_send_gpsk_2(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, u8 identifier, const u8 *csuite_list, size_t csuite_list_len)
eap_gpsk_send_gpsk_2	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_send_gpsk_2(struct eap_gpsk_data *data,$/;"	p	file:	signature:(struct eap_gpsk_data *data, u8 identifier, const u8 *csuite_list, size_t csuite_list_len)
eap_gpsk_send_gpsk_4	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_send_gpsk_4(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, u8 identifier)
eap_gpsk_send_gpsk_4	src/eap_peer/eap_gpsk.c	/^static struct wpabuf * eap_gpsk_send_gpsk_4(struct eap_gpsk_data *data,$/;"	p	file:	signature:(struct eap_gpsk_data *data, u8 identifier)
eap_gpsk_state	src/eap_peer/eap_gpsk.c	/^static void eap_gpsk_state(struct eap_gpsk_data *data, int state)$/;"	f	file:	signature:(struct eap_gpsk_data *data, int state)
eap_gpsk_state	src/eap_server/eap_server_gpsk.c	/^static void eap_gpsk_state(struct eap_gpsk_data *data, int state)$/;"	f	file:	signature:(struct eap_gpsk_data *data, int state)
eap_gpsk_state_txt	src/eap_peer/eap_gpsk.c	/^static const char * eap_gpsk_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_gpsk_state_txt	src/eap_server/eap_server_gpsk.c	/^static const char * eap_gpsk_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_gpsk_supported_ciphersuite	src/eap_common/eap_gpsk_common.c	/^int eap_gpsk_supported_ciphersuite(int vendor, int specifier)$/;"	f	signature:(int vendor, int specifier)
eap_gpsk_supported_ciphersuite	src/eap_common/eap_gpsk_common.h	/^int eap_gpsk_supported_ciphersuite(int vendor, int specifier);$/;"	p	signature:(int vendor, int specifier)
eap_gpsk_validate_csuite	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_validate_csuite(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *pos, const u8 *end)
eap_gpsk_validate_gpsk_3_mic	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_validate_gpsk_3_mic(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *payload, const u8 *pos, const u8 *end)
eap_gpsk_validate_id_server	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_validate_id_server(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *pos, const u8 *end)
eap_gpsk_validate_pd_payload_2	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_validate_pd_payload_2(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *pos, const u8 *end)
eap_gpsk_validate_rand	src/eap_peer/eap_gpsk.c	/^static const u8 * eap_gpsk_validate_rand(struct eap_gpsk_data *data,$/;"	f	file:	signature:(struct eap_gpsk_data *data, const u8 *pos, const u8 *end)
eap_gtc_buildReq	src/eap_server/eap_server_gtc.c	/^static struct wpabuf * eap_gtc_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_gtc_check	src/eap_server/eap_server_gtc.c	/^static Boolean eap_gtc_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_gtc_data	src/eap_peer/eap_gtc.c	/^struct eap_gtc_data {$/;"	s	file:
eap_gtc_data	src/eap_server/eap_server_gtc.c	/^struct eap_gtc_data {$/;"	s	file:
eap_gtc_data::CONTINUE	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gtc_data::__anon141	file:
eap_gtc_data::FAILURE	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gtc_data::__anon141	file:
eap_gtc_data::SUCCESS	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_gtc_data::__anon141	file:
eap_gtc_data::prefix	src/eap_peer/eap_gtc.c	/^	int prefix;$/;"	m	struct:eap_gtc_data	file:	access:public
eap_gtc_data::prefix	src/eap_server/eap_server_gtc.c	/^	int prefix;$/;"	m	struct:eap_gtc_data	file:	access:public
eap_gtc_data::state	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	m	struct:eap_gtc_data	typeref:enum:eap_gtc_data::__anon141	file:	access:public
eap_gtc_deinit	src/eap_peer/eap_gtc.c	/^static void eap_gtc_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gtc_init	src/eap_peer/eap_gtc.c	/^static void * eap_gtc_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_gtc_init	src/eap_server/eap_server_gtc.c	/^static void * eap_gtc_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_gtc_isDone	src/eap_server/eap_server_gtc.c	/^static Boolean eap_gtc_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gtc_isSuccess	src/eap_server/eap_server_gtc.c	/^static Boolean eap_gtc_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_gtc_process	src/eap_peer/eap_gtc.c	/^static struct wpabuf * eap_gtc_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_gtc_process	src/eap_server/eap_server_gtc.c	/^static void eap_gtc_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_gtc_reset	src/eap_server/eap_server_gtc.c	/^static void eap_gtc_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_hdr	src/eap_common/eap_defs.h	/^struct eap_hdr {$/;"	s
eap_hdr::code	src/eap_common/eap_defs.h	/^	u8 code;$/;"	m	struct:eap_hdr	access:public
eap_hdr::identifier	src/eap_common/eap_defs.h	/^	u8 identifier;$/;"	m	struct:eap_hdr	access:public
eap_hdr::length	src/eap_common/eap_defs.h	/^	be16 length; \/* including code and identifier; network byte order *\/$/;"	m	struct:eap_hdr	access:public
eap_hdr_validate	src/eap_common/eap_common.c	/^const u8 * eap_hdr_validate(int vendor, EapType eap_type,$/;"	f	signature:(int vendor, EapType eap_type, const struct wpabuf *msg, size_t *plen)
eap_hdr_validate	src/eap_common/eap_common.h	/^const u8 * eap_hdr_validate(int vendor, EapType eap_type,$/;"	p	signature:(int vendor, EapType eap_type, const struct wpabuf *msg, size_t *plen)
eap_identity	src/wps/wps_i.h	/^	const u8 *eap_identity; \/* <= 64 octets *\/$/;"	m	struct:wps_parse_attr	access:public
eap_identity_buildReq	src/eap_server/eap_server_identity.c	/^static struct wpabuf * eap_identity_buildReq(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_identity_check	src/eap_server/eap_server_identity.c	/^static Boolean eap_identity_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_identity_data	src/eap_server/eap_server_identity.c	/^struct eap_identity_data {$/;"	s	file:
eap_identity_data::CONTINUE	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_identity_data::__anon129	file:
eap_identity_data::FAILURE	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_identity_data::__anon129	file:
eap_identity_data::SUCCESS	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_identity_data::__anon129	file:
eap_identity_data::pick_up	src/eap_server/eap_server_identity.c	/^	int pick_up;$/;"	m	struct:eap_identity_data	file:	access:public
eap_identity_data::state	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	m	struct:eap_identity_data	typeref:enum:eap_identity_data::__anon129	file:	access:public
eap_identity_init	src/eap_server/eap_server_identity.c	/^static void * eap_identity_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_identity_initPickUp	src/eap_server/eap_server_identity.c	/^static void * eap_identity_initPickUp(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_identity_isDone	src/eap_server/eap_server_identity.c	/^static Boolean eap_identity_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_identity_isSuccess	src/eap_server/eap_server_identity.c	/^static Boolean eap_identity_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_identity_len	src/wps/wps_i.h	/^	size_t eap_identity_len;$/;"	m	struct:wps_parse_attr	access:public
eap_identity_process	src/eap_server/eap_server_identity.c	/^static void eap_identity_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_identity_reset	src/eap_server/eap_server_identity.c	/^static void eap_identity_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_if	src/eap_server/eap_i.h	/^	struct eap_eapol_interface eap_if;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_eapol_interface	access:public
eap_if	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eap_eapol_interface *eap_if; \/\/ 指向EAP<-->EAPOL交互接口地址$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::eap_eapol_interface	access:public
eap_if	src/radius/radius_server.c	/^	struct eap_eapol_interface *eap_if;$/;"	m	struct:radius_session	typeref:struct:radius_session::eap_eapol_interface	file:	access:public
eap_ikev2_buildReq	src/eap_server/eap_server_ikev2.c	/^static struct wpabuf * eap_ikev2_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_ikev2_build_frag_ack	src/eap_common/eap_ikev2_common.c	/^struct wpabuf * eap_ikev2_build_frag_ack(u8 id, u8 code)$/;"	f	signature:(u8 id, u8 code)
eap_ikev2_build_frag_ack	src/eap_common/eap_ikev2_common.h	/^struct wpabuf * eap_ikev2_build_frag_ack(u8 id, u8 code);$/;"	p	signature:(u8 id, u8 code)
eap_ikev2_build_msg	src/eap_peer/eap_ikev2.c	/^static struct wpabuf * eap_ikev2_build_msg(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, struct eap_method_ret *ret, u8 id)
eap_ikev2_build_msg	src/eap_server/eap_server_ikev2.c	/^static struct wpabuf * eap_ikev2_build_msg(struct eap_ikev2_data *data, u8 id)$/;"	f	file:	signature:(struct eap_ikev2_data *data, u8 id)
eap_ikev2_check	src/eap_server/eap_server_ikev2.c	/^static Boolean eap_ikev2_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_ikev2_data	src/eap_peer/eap_ikev2.c	/^struct eap_ikev2_data {$/;"	s	file:
eap_ikev2_data	src/eap_server/eap_server_ikev2.c	/^struct eap_ikev2_data {$/;"	s	file:
eap_ikev2_data::DONE	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
eap_ikev2_data::DONE	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
eap_ikev2_data::FAIL	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
eap_ikev2_data::FAIL	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
eap_ikev2_data::FRAG_ACK	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
eap_ikev2_data::MSG	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
eap_ikev2_data::PROC_MSG	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
eap_ikev2_data::WAIT_FRAG_ACK	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
eap_ikev2_data::WAIT_FRAG_ACK	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon137	file:
eap_ikev2_data::WAIT_START	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_ikev2_data::__anon185	file:
eap_ikev2_data::fragment_size	src/eap_peer/eap_ikev2.c	/^	size_t fragment_size;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::fragment_size	src/eap_server/eap_server_ikev2.c	/^	size_t fragment_size;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::ikev2	src/eap_peer/eap_ikev2.c	/^	struct ikev2_responder_data ikev2;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::ikev2_responder_data	file:	access:public
eap_ikev2_data::ikev2	src/eap_server/eap_server_ikev2.c	/^	struct ikev2_initiator_data ikev2;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::ikev2_initiator_data	file:	access:public
eap_ikev2_data::in_buf	src/eap_peer/eap_ikev2.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
eap_ikev2_data::in_buf	src/eap_server/eap_server_ikev2.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
eap_ikev2_data::keymat	src/eap_peer/eap_ikev2.c	/^	u8 keymat[EAP_MSK_LEN + EAP_EMSK_LEN];$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::keymat	src/eap_server/eap_server_ikev2.c	/^	u8 keymat[EAP_MSK_LEN + EAP_EMSK_LEN];$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::keymat_ok	src/eap_peer/eap_ikev2.c	/^	int keymat_ok;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::keymat_ok	src/eap_server/eap_server_ikev2.c	/^	int keymat_ok;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::keys_ready	src/eap_peer/eap_ikev2.c	/^	int keys_ready;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::keys_ready	src/eap_server/eap_server_ikev2.c	/^	int keys_ready;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::out_buf	src/eap_peer/eap_ikev2.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
eap_ikev2_data::out_buf	src/eap_server/eap_server_ikev2.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
eap_ikev2_data::out_used	src/eap_peer/eap_ikev2.c	/^	size_t out_used;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::out_used	src/eap_server/eap_server_ikev2.c	/^	size_t out_used;$/;"	m	struct:eap_ikev2_data	file:	access:public
eap_ikev2_data::state	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_ikev2_data	typeref:enum:eap_ikev2_data::__anon185	file:	access:public
eap_ikev2_data::state	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_ikev2_data	typeref:enum:eap_ikev2_data::__anon137	file:	access:public
eap_ikev2_deinit	src/eap_peer/eap_ikev2.c	/^static void eap_ikev2_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ikev2_derive_keymat	src/eap_common/eap_ikev2_common.c	/^int eap_ikev2_derive_keymat(int prf, struct ikev2_keys *keys,$/;"	f	signature:(int prf, struct ikev2_keys *keys, const u8 *i_nonce, size_t i_nonce_len, const u8 *r_nonce, size_t r_nonce_len, u8 *keymat)
eap_ikev2_derive_keymat	src/eap_common/eap_ikev2_common.h	/^int eap_ikev2_derive_keymat(int prf, struct ikev2_keys *keys,$/;"	p	signature:(int prf, struct ikev2_keys *keys, const u8 *i_nonce, size_t i_nonce_len, const u8 *r_nonce, size_t r_nonce_len, u8 *keymat)
eap_ikev2_getKey	src/eap_peer/eap_ikev2.c	/^static u8 * eap_ikev2_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_ikev2_getKey	src/eap_server/eap_server_ikev2.c	/^static u8 * eap_ikev2_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_ikev2_get_emsk	src/eap_peer/eap_ikev2.c	/^static u8 * eap_ikev2_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_ikev2_get_emsk	src/eap_server/eap_server_ikev2.c	/^static u8 * eap_ikev2_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_ikev2_get_shared_secret	src/eap_server/eap_server_ikev2.c	/^static const u8 * eap_ikev2_get_shared_secret(void *ctx, const u8 *IDr,$/;"	f	file:	signature:(void *ctx, const u8 *IDr, size_t IDr_len, size_t *secret_len)
eap_ikev2_init	src/eap_peer/eap_ikev2.c	/^static void * eap_ikev2_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_ikev2_init	src/eap_server/eap_server_ikev2.c	/^static void * eap_ikev2_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_ikev2_isDone	src/eap_server/eap_server_ikev2.c	/^static Boolean eap_ikev2_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ikev2_isKeyAvailable	src/eap_peer/eap_ikev2.c	/^static Boolean eap_ikev2_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ikev2_isSuccess	src/eap_server/eap_server_ikev2.c	/^static Boolean eap_ikev2_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ikev2_peer_keymat	src/eap_peer/eap_ikev2.c	/^static int eap_ikev2_peer_keymat(struct eap_ikev2_data *data)$/;"	f	file:	signature:(struct eap_ikev2_data *data)
eap_ikev2_process	src/eap_peer/eap_ikev2.c	/^static struct wpabuf * eap_ikev2_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_ikev2_process	src/eap_server/eap_server_ikev2.c	/^static void eap_ikev2_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_ikev2_process_cont	src/eap_peer/eap_ikev2.c	/^static int eap_ikev2_process_cont(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, const u8 *buf, size_t len)
eap_ikev2_process_cont	src/eap_server/eap_server_ikev2.c	/^static int eap_ikev2_process_cont(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, const u8 *buf, size_t len)
eap_ikev2_process_fragment	src/eap_peer/eap_ikev2.c	/^static struct wpabuf * eap_ikev2_process_fragment(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, struct eap_method_ret *ret, u8 id, u8 flags, u32 message_length, const u8 *buf, size_t len)
eap_ikev2_process_fragment	src/eap_server/eap_server_ikev2.c	/^static int eap_ikev2_process_fragment(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, u8 flags, u32 message_length, const u8 *buf, size_t len)
eap_ikev2_process_icv	src/eap_peer/eap_ikev2.c	/^static int eap_ikev2_process_icv(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, const struct wpabuf *reqData, u8 flags, const u8 *pos, const u8 **end)
eap_ikev2_process_icv	src/eap_server/eap_server_ikev2.c	/^static int eap_ikev2_process_icv(struct eap_ikev2_data *data,$/;"	f	file:	signature:(struct eap_ikev2_data *data, const struct wpabuf *respData, u8 flags, const u8 *pos, const u8 **end)
eap_ikev2_reset	src/eap_server/eap_server_ikev2.c	/^static void eap_ikev2_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ikev2_server_keymat	src/eap_server/eap_server_ikev2.c	/^static int eap_ikev2_server_keymat(struct eap_ikev2_data *data)$/;"	f	file:	signature:(struct eap_ikev2_data *data)
eap_ikev2_state	src/eap_peer/eap_ikev2.c	/^static void eap_ikev2_state(struct eap_ikev2_data *data, int state)$/;"	f	file:	signature:(struct eap_ikev2_data *data, int state)
eap_ikev2_state	src/eap_server/eap_server_ikev2.c	/^static void eap_ikev2_state(struct eap_ikev2_data *data, int state)$/;"	f	file:	signature:(struct eap_ikev2_data *data, int state)
eap_ikev2_state_txt	src/eap_peer/eap_ikev2.c	/^static const char * eap_ikev2_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_ikev2_state_txt	src/eap_server/eap_server_ikev2.c	/^static const char * eap_ikev2_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_ikev2_validate_icv	src/eap_common/eap_ikev2_common.c	/^int eap_ikev2_validate_icv(int integ_alg, struct ikev2_keys *keys,$/;"	f	signature:(int integ_alg, struct ikev2_keys *keys, int initiator, const struct wpabuf *msg, const u8 *pos, const u8 *end)
eap_ikev2_validate_icv	src/eap_common/eap_ikev2_common.h	/^int eap_ikev2_validate_icv(int integ_alg, struct ikev2_keys *keys,$/;"	p	signature:(int integ_alg, struct ikev2_keys *keys, int initiator, const struct wpabuf *msg, const u8 *pos, const u8 *end)
eap_invalidate_cached_session	src/eap_peer/eap.c	/^void eap_invalidate_cached_session(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_invalidate_cached_session	src/eap_peer/eap.h	/^void eap_invalidate_cached_session(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_is_wps_pbc_enrollee	src/eap_peer/eap.c	/^int eap_is_wps_pbc_enrollee(struct eap_peer_config *conf)$/;"	f	signature:(struct eap_peer_config *conf)
eap_is_wps_pbc_enrollee	src/eap_peer/eap.h	/^int eap_is_wps_pbc_enrollee(struct eap_peer_config *conf);$/;"	p	signature:(struct eap_peer_config *conf)
eap_is_wps_pin_enrollee	src/eap_peer/eap.c	/^int eap_is_wps_pin_enrollee(struct eap_peer_config *conf)$/;"	f	signature:(struct eap_peer_config *conf)
eap_is_wps_pin_enrollee	src/eap_peer/eap.h	/^int eap_is_wps_pin_enrollee(struct eap_peer_config *conf);$/;"	p	signature:(struct eap_peer_config *conf)
eap_key_available	src/eap_peer/eap.c	/^int eap_key_available(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_key_available	src/eap_peer/eap.h	/^int eap_key_available(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_key_data	src/eapol_supp/eapol_supp_sm.c	/^struct eap_key_data {$/;"	s	file:
eap_key_data::encr_key	src/eapol_supp/eapol_supp_sm.c	/^	u8 encr_key[IEEE8021X_ENCR_KEY_LEN];$/;"	m	struct:eap_key_data	file:	access:public
eap_key_data::sign_key	src/eapol_supp/eapol_supp_sm.c	/^	u8 sign_key[IEEE8021X_SIGN_KEY_LEN];$/;"	m	struct:eap_key_data	file:	access:public
eap_leap_data	src/eap_peer/eap_leap.c	/^struct eap_leap_data {$/;"	s	file:
eap_leap_data::LEAP_DONE	src/eap_peer/eap_leap.c	/^		LEAP_DONE$/;"	e	enum:eap_leap_data::__anon167	file:
eap_leap_data::LEAP_WAIT_CHALLENGE	src/eap_peer/eap_leap.c	/^		LEAP_WAIT_CHALLENGE,$/;"	e	enum:eap_leap_data::__anon167	file:
eap_leap_data::LEAP_WAIT_RESPONSE	src/eap_peer/eap_leap.c	/^		LEAP_WAIT_RESPONSE,$/;"	e	enum:eap_leap_data::__anon167	file:
eap_leap_data::LEAP_WAIT_SUCCESS	src/eap_peer/eap_leap.c	/^		LEAP_WAIT_SUCCESS,$/;"	e	enum:eap_leap_data::__anon167	file:
eap_leap_data::ap_challenge	src/eap_peer/eap_leap.c	/^	u8 ap_challenge[LEAP_CHALLENGE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
eap_leap_data::ap_response	src/eap_peer/eap_leap.c	/^	u8 ap_response[LEAP_RESPONSE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
eap_leap_data::peer_challenge	src/eap_peer/eap_leap.c	/^	u8 peer_challenge[LEAP_CHALLENGE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
eap_leap_data::peer_response	src/eap_peer/eap_leap.c	/^	u8 peer_response[LEAP_RESPONSE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
eap_leap_data::state	src/eap_peer/eap_leap.c	/^	} state;$/;"	m	struct:eap_leap_data	typeref:enum:eap_leap_data::__anon167	file:	access:public
eap_leap_deinit	src/eap_peer/eap_leap.c	/^static void eap_leap_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_leap_getKey	src/eap_peer/eap_leap.c	/^static u8 * eap_leap_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_leap_init	src/eap_peer/eap_leap.c	/^static void * eap_leap_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_leap_isKeyAvailable	src/eap_peer/eap_leap.c	/^static Boolean eap_leap_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_leap_process	src/eap_peer/eap_leap.c	/^static struct wpabuf * eap_leap_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_leap_process_request	src/eap_peer/eap_leap.c	/^static struct wpabuf * eap_leap_process_request(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_leap_process_response	src/eap_peer/eap_leap.c	/^static struct wpabuf * eap_leap_process_response(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_leap_process_success	src/eap_peer/eap_leap.c	/^static struct wpabuf * eap_leap_process_success(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_len	src/eap_peer/eap_ttls.c	/^	size_t eap_len;$/;"	m	struct:ttls_parse_avp	file:	access:public
eap_len	src/eap_server/eap_server_ttls.c	/^	size_t eap_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_md5_buildReq	src/eap_server/eap_server_md5.c	/^static struct wpabuf * eap_md5_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_md5_check	src/eap_server/eap_server_md5.c	/^static Boolean eap_md5_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_md5_data	src/eap_server/eap_server_md5.c	/^struct eap_md5_data {$/;"	s	file:
eap_md5_data::CONTINUE	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	e	enum:eap_md5_data::__anon142	file:
eap_md5_data::FAILURE	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	e	enum:eap_md5_data::__anon142	file:
eap_md5_data::SUCCESS	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	e	enum:eap_md5_data::__anon142	file:
eap_md5_data::challenge	src/eap_server/eap_server_md5.c	/^	u8 challenge[CHALLENGE_LEN];    \/\/ 16字节的挑战字$/;"	m	struct:eap_md5_data	file:	access:public
eap_md5_data::state	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	m	struct:eap_md5_data	typeref:enum:eap_md5_data::__anon142	file:	access:public
eap_md5_deinit	src/eap_peer/eap_md5.c	/^static void eap_md5_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_md5_init	src/eap_peer/eap_md5.c	/^static void * eap_md5_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_md5_init	src/eap_server/eap_server_md5.c	/^static void * eap_md5_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_md5_isDone	src/eap_server/eap_server_md5.c	/^static Boolean eap_md5_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_md5_isSuccess	src/eap_server/eap_server_md5.c	/^static Boolean eap_md5_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_md5_process	src/eap_peer/eap_md5.c	/^static struct wpabuf * eap_md5_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_md5_process	src/eap_server/eap_server_md5.c	/^static void eap_md5_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_md5_reset	src/eap_server/eap_server_md5.c	/^static void eap_md5_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_method	src/eap_peer/eap_aka.c	/^	u8 eap_method;$/;"	m	struct:eap_aka_data	file:	access:public
eap_method	src/eap_peer/eap_i.h	/^struct eap_method {$/;"	s
eap_method	src/eap_server/eap_i.h	/^struct eap_method {$/;"	s
eap_method	src/eap_server/eap_server_aka.c	/^	u8 eap_method;$/;"	m	struct:eap_aka_data	file:	access:public
eap_method::buildReq	src/eap_server/eap_i.h	/^	struct wpabuf * (*buildReq)(struct eap_sm *sm, void *priv, u8 id);$/;"	m	struct:eap_method	typeref:struct:eap_method::buildReq	access:public
eap_method::check	src/eap_server/eap_i.h	/^	Boolean (*check)(struct eap_sm *sm, void *priv,$/;"	m	struct:eap_method	access:public
eap_method::deinit	src/eap_peer/eap_i.h	/^	void (*deinit)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::deinit_for_reauth	src/eap_peer/eap_i.h	/^	void (*deinit_for_reauth)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::dl_handle	src/eap_peer/eap_i.h	/^	void *dl_handle;$/;"	m	struct:eap_method	access:public
eap_method::free	src/eap_peer/eap_i.h	/^	void (*free)(struct eap_method *method);$/;"	m	struct:eap_method	access:public
eap_method::free	src/eap_server/eap_i.h	/^	void (*free)(struct eap_method *method);$/;"	m	struct:eap_method	access:public
eap_method::getKey	src/eap_peer/eap_i.h	/^	u8 * (*getKey)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
eap_method::getKey	src/eap_server/eap_i.h	/^	u8 * (*getKey)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
eap_method::getTimeout	src/eap_server/eap_i.h	/^	int (*getTimeout)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::get_emsk	src/eap_peer/eap_i.h	/^	u8 * (*get_emsk)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
eap_method::get_emsk	src/eap_server/eap_i.h	/^	u8 * (*get_emsk)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
eap_method::get_identity	src/eap_peer/eap_i.h	/^	const u8 * (*get_identity)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
eap_method::get_status	src/eap_peer/eap_i.h	/^	int (*get_status)(struct eap_sm *sm, void *priv, char *buf,$/;"	m	struct:eap_method	access:public
eap_method::has_reauth_data	src/eap_peer/eap_i.h	/^	Boolean (*has_reauth_data)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::init	src/eap_peer/eap_i.h	/^	void * (*init)(struct eap_sm *sm);$/;"	m	struct:eap_method	access:public
eap_method::init	src/eap_server/eap_i.h	/^	void * (*init)(struct eap_sm *sm);$/;"	m	struct:eap_method	access:public
eap_method::initPickUp	src/eap_server/eap_i.h	/^	void * (*initPickUp)(struct eap_sm *sm);$/;"	m	struct:eap_method	access:public
eap_method::init_for_reauth	src/eap_peer/eap_i.h	/^	void * (*init_for_reauth)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::isDone	src/eap_server/eap_i.h	/^	Boolean (*isDone)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::isKeyAvailable	src/eap_peer/eap_i.h	/^	Boolean (*isKeyAvailable)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::isSuccess	src/eap_server/eap_i.h	/^	Boolean (*isSuccess)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::method	src/eap_peer/eap_i.h	/^	EapType method;$/;"	m	struct:eap_method	access:public
eap_method::method	src/eap_server/eap_i.h	/^	EapType method;$/;"	m	struct:eap_method	access:public
eap_method::name	src/eap_peer/eap_i.h	/^	const char *name;$/;"	m	struct:eap_method	access:public
eap_method::name	src/eap_server/eap_i.h	/^	const char *name;$/;"	m	struct:eap_method	access:public
eap_method::next	src/eap_peer/eap_i.h	/^	struct eap_method *next;$/;"	m	struct:eap_method	typeref:struct:eap_method::eap_method	access:public
eap_method::next	src/eap_server/eap_i.h	/^	struct eap_method *next;$/;"	m	struct:eap_method	typeref:struct:eap_method::eap_method	access:public
eap_method::process	src/eap_peer/eap_i.h	/^	struct wpabuf * (*process)(struct eap_sm *sm, void *priv,$/;"	m	struct:eap_method	typeref:struct:eap_method::process	access:public
eap_method::process	src/eap_server/eap_i.h	/^	void (*process)(struct eap_sm *sm, void *priv,$/;"	m	struct:eap_method	access:public
eap_method::reset	src/eap_server/eap_i.h	/^	void (*reset)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
eap_method::vendor	src/eap_peer/eap_i.h	/^	int vendor;$/;"	m	struct:eap_method	access:public
eap_method::vendor	src/eap_server/eap_i.h	/^	int vendor;$/;"	m	struct:eap_method	access:public
eap_method::version	src/eap_peer/eap_i.h	/^	int version;$/;"	m	struct:eap_method	access:public
eap_method::version	src/eap_server/eap_i.h	/^	int version;$/;"	m	struct:eap_method	access:public
eap_method_priv	src/eap_peer/eap_i.h	/^	void *eap_method_priv;$/;"	m	struct:eap_sm	access:public
eap_method_priv	src/eap_server/eap_i.h	/^	void *eap_method_priv;$/;"	m	struct:eap_sm	access:public
eap_method_ret	src/eap_peer/eap_i.h	/^struct eap_method_ret {$/;"	s
eap_method_ret::allowNotifications	src/eap_peer/eap_i.h	/^	Boolean allowNotifications;$/;"	m	struct:eap_method_ret	access:public
eap_method_ret::decision	src/eap_peer/eap_i.h	/^	EapDecision decision;$/;"	m	struct:eap_method_ret	access:public
eap_method_ret::ignore	src/eap_peer/eap_i.h	/^	Boolean ignore;$/;"	m	struct:eap_method_ret	access:public
eap_method_ret::methodState	src/eap_peer/eap_i.h	/^	EapMethodState methodState;$/;"	m	struct:eap_method_ret	access:public
eap_method_type	src/eap_peer/eap.h	/^struct eap_method_type {$/;"	s
eap_method_type::method	src/eap_peer/eap.h	/^	u32 method;$/;"	m	struct:eap_method_type	access:public
eap_method_type::vendor	src/eap_peer/eap.h	/^	int vendor;$/;"	m	struct:eap_method_type	access:public
eap_methods	src/eap_peer/eap_config.h	/^	struct eap_method_type *eap_methods;$/;"	m	struct:eap_peer_config	typeref:struct:eap_peer_config::eap_method_type	access:public
eap_methods	src/eap_peer/eap_methods.c	/^static struct eap_method *eap_methods = NULL;$/;"	v	typeref:struct:eap_method	file:
eap_methods	src/eap_server/eap_server_methods.c	/^static struct eap_method *eap_methods;  \/\/ EAP方法的链表头$/;"	v	typeref:struct:eap_method	file:
eap_mschapv2_buildReq	src/eap_server/eap_server_mschapv2.c	/^static struct wpabuf * eap_mschapv2_buildReq(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_mschapv2_build_challenge	src/eap_server/eap_server_mschapv2.c	/^static struct wpabuf * eap_mschapv2_build_challenge($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_mschapv2_data *data, u8 id)
eap_mschapv2_build_failure_req	src/eap_server/eap_server_mschapv2.c	/^static struct wpabuf * eap_mschapv2_build_failure_req($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_mschapv2_data *data, u8 id)
eap_mschapv2_build_success_req	src/eap_server/eap_server_mschapv2.c	/^static struct wpabuf * eap_mschapv2_build_success_req($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_mschapv2_data *data, u8 id)
eap_mschapv2_challenge	src/eap_peer/eap_mschapv2.c	/^static struct wpabuf * eap_mschapv2_challenge($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_mschapv2_data *data, struct eap_method_ret *ret, const struct eap_mschapv2_hdr *req, size_t req_len, u8 id)
eap_mschapv2_challenge_reply	src/eap_peer/eap_mschapv2.c	/^static struct wpabuf * eap_mschapv2_challenge_reply($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_mschapv2_data *data, u8 id, u8 mschapv2_id, const u8 *auth_challenge)
eap_mschapv2_change_password	src/eap_peer/eap_mschapv2.c	/^static struct wpabuf * eap_mschapv2_change_password($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_mschapv2_data *data, struct eap_method_ret *ret, const struct eap_mschapv2_hdr *req, u8 id)
eap_mschapv2_check	src/eap_server/eap_server_mschapv2.c	/^static Boolean eap_mschapv2_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_mschapv2_check_config	src/eap_peer/eap_mschapv2.c	/^static int eap_mschapv2_check_config(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_mschapv2_check_mslen	src/eap_peer/eap_mschapv2.c	/^static int eap_mschapv2_check_mslen(struct eap_sm *sm, size_t len,$/;"	f	file:	signature:(struct eap_sm *sm, size_t len, const struct eap_mschapv2_hdr *ms)
eap_mschapv2_copy_challenge	src/eap_peer/eap_mschapv2.c	/^static void eap_mschapv2_copy_challenge(struct eap_mschapv2_data *data,$/;"	f	file:	signature:(struct eap_mschapv2_data *data, const struct wpabuf *reqData)
eap_mschapv2_data	src/eap_peer/eap_mschapv2.c	/^struct eap_mschapv2_data {$/;"	s	file:
eap_mschapv2_data	src/eap_server/eap_server_mschapv2.c	/^struct eap_mschapv2_data {$/;"	s	file:
eap_mschapv2_data::CHALLENGE	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
eap_mschapv2_data::FAILURE	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
eap_mschapv2_data::FAILURE_REQ	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
eap_mschapv2_data::SUCCESS	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
eap_mschapv2_data::SUCCESS_REQ	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	e	enum:eap_mschapv2_data::__anon140	file:
eap_mschapv2_data::auth_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 *auth_challenge;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::auth_challenge	src/eap_server/eap_server_mschapv2.c	/^	u8 auth_challenge[CHALLENGE_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::auth_challenge_from_tls	src/eap_server/eap_server_mschapv2.c	/^	int auth_challenge_from_tls;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::auth_response	src/eap_peer/eap_mschapv2.c	/^	u8 auth_response[MSCHAPV2_AUTH_RESPONSE_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::auth_response	src/eap_server/eap_server_mschapv2.c	/^	u8 auth_response[20];$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::auth_response_valid	src/eap_peer/eap_mschapv2.c	/^	int auth_response_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::master_key	src/eap_peer/eap_mschapv2.c	/^	u8 master_key[MSCHAPV2_MASTER_KEY_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::master_key	src/eap_server/eap_server_mschapv2.c	/^	u8 master_key[16];$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::master_key_valid	src/eap_peer/eap_mschapv2.c	/^	int master_key_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::master_key_valid	src/eap_server/eap_server_mschapv2.c	/^	int master_key_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::passwd_change_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 passwd_change_challenge[PASSWD_CHANGE_CHAL_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::passwd_change_challenge_valid	src/eap_peer/eap_mschapv2.c	/^	int passwd_change_challenge_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::passwd_change_version	src/eap_peer/eap_mschapv2.c	/^	int passwd_change_version;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::peer_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 *peer_challenge;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::peer_challenge	src/eap_server/eap_server_mschapv2.c	/^	u8 *peer_challenge;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::phase2	src/eap_peer/eap_mschapv2.c	/^	int phase2;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::prev_challenge	src/eap_peer/eap_mschapv2.c	/^	struct wpabuf *prev_challenge;$/;"	m	struct:eap_mschapv2_data	typeref:struct:eap_mschapv2_data::wpabuf	file:	access:public
eap_mschapv2_data::prev_error	src/eap_peer/eap_mschapv2.c	/^	int prev_error;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::resp_mschapv2_id	src/eap_server/eap_server_mschapv2.c	/^	u8 resp_mschapv2_id;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_data::state	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	m	struct:eap_mschapv2_data	typeref:enum:eap_mschapv2_data::__anon140	file:	access:public
eap_mschapv2_data::success	src/eap_peer/eap_mschapv2.c	/^	int success;$/;"	m	struct:eap_mschapv2_data	file:	access:public
eap_mschapv2_deinit	src/eap_peer/eap_mschapv2.c	/^static void eap_mschapv2_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_mschapv2_deinit	src/eap_peer/eap_mschapv2.c	/^static void eap_mschapv2_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_mschapv2_failure	src/eap_peer/eap_mschapv2.c	/^static struct wpabuf * eap_mschapv2_failure(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data, struct eap_method_ret *ret, const struct eap_mschapv2_hdr *req, size_t req_len, u8 id)
eap_mschapv2_failure_txt	src/eap_peer/eap_mschapv2.c	/^static int eap_mschapv2_failure_txt(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data, char *txt)
eap_mschapv2_getKey	src/eap_peer/eap_mschapv2.c	/^static u8 * eap_mschapv2_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_mschapv2_getKey	src/eap_server/eap_server_mschapv2.c	/^static u8 * eap_mschapv2_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_mschapv2_hdr	src/eap_peer/eap_mschapv2.c	/^struct eap_mschapv2_hdr {$/;"	s	file:
eap_mschapv2_hdr	src/eap_server/eap_server_mschapv2.c	/^struct eap_mschapv2_hdr {$/;"	s	file:
eap_mschapv2_hdr::ms_length	src/eap_peer/eap_mschapv2.c	/^	u8 ms_length[2]; \/* Note: misaligned; length - 5 *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
eap_mschapv2_hdr::ms_length	src/eap_server/eap_server_mschapv2.c	/^	u8 ms_length[2]; \/* Note: misaligned; length - 5 *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
eap_mschapv2_hdr::mschapv2_id	src/eap_peer/eap_mschapv2.c	/^	u8 mschapv2_id; \/* usually same as EAP identifier; must be changed$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
eap_mschapv2_hdr::mschapv2_id	src/eap_server/eap_server_mschapv2.c	/^	u8 mschapv2_id; \/* must be changed for challenges, but not for$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
eap_mschapv2_hdr::op_code	src/eap_peer/eap_mschapv2.c	/^	u8 op_code; \/* MSCHAPV2_OP_* *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
eap_mschapv2_hdr::op_code	src/eap_server/eap_server_mschapv2.c	/^	u8 op_code; \/* MSCHAPV2_OP_* *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
eap_mschapv2_init	src/eap_peer/eap_mschapv2.c	/^static void * eap_mschapv2_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_mschapv2_init	src/eap_server/eap_server_mschapv2.c	/^static void * eap_mschapv2_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_mschapv2_isDone	src/eap_server/eap_server_mschapv2.c	/^static Boolean eap_mschapv2_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_mschapv2_isKeyAvailable	src/eap_peer/eap_mschapv2.c	/^static Boolean eap_mschapv2_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_mschapv2_isSuccess	src/eap_server/eap_server_mschapv2.c	/^static Boolean eap_mschapv2_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_mschapv2_password_changed	src/eap_peer/eap_mschapv2.c	/^static void eap_mschapv2_password_changed(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data)
eap_mschapv2_process	src/eap_peer/eap_mschapv2.c	/^static struct wpabuf * eap_mschapv2_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_mschapv2_process	src/eap_server/eap_server_mschapv2.c	/^static void eap_mschapv2_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_mschapv2_process_failure_resp	src/eap_server/eap_server_mschapv2.c	/^static void eap_mschapv2_process_failure_resp(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data, struct wpabuf *respData)
eap_mschapv2_process_response	src/eap_server/eap_server_mschapv2.c	/^static void eap_mschapv2_process_response(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data, struct wpabuf *respData)
eap_mschapv2_process_success_resp	src/eap_server/eap_server_mschapv2.c	/^static void eap_mschapv2_process_success_resp(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data, struct wpabuf *respData)
eap_mschapv2_reset	src/eap_server/eap_server_mschapv2.c	/^static void eap_mschapv2_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_mschapv2_success	src/eap_peer/eap_mschapv2.c	/^static struct wpabuf * eap_mschapv2_success(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_mschapv2_data *data, struct eap_method_ret *ret, const struct eap_mschapv2_hdr *req, size_t req_len, u8 id)
eap_msg_alloc	src/eap_common/eap_common.c	/^struct wpabuf * eap_msg_alloc(int vendor, EapType type, size_t payload_len,$/;"	f	signature:(int vendor, EapType type, size_t payload_len, u8 code, u8 identifier)
eap_msg_alloc	src/eap_common/eap_common.h	/^struct wpabuf * eap_msg_alloc(int vendor, EapType type, size_t payload_len,$/;"	p	signature:(int vendor, EapType type, size_t payload_len, u8 code, u8 identifier)
eap_notify_lower_layer_success	src/eap_peer/eap.c	/^void eap_notify_lower_layer_success(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_notify_lower_layer_success	src/eap_peer/eap.h	/^void eap_notify_lower_layer_success(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_notify_pending	src/eap_peer/eap.c	/^void eap_notify_pending(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_notify_pending	src/eap_peer/eap_i.h	/^void eap_notify_pending(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_notify_success	src/eap_peer/eap.c	/^void eap_notify_success(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_notify_success	src/eap_peer/eap.h	/^void eap_notify_success(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_otp_deinit	src/eap_peer/eap_otp.c	/^static void eap_otp_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_otp_init	src/eap_peer/eap_otp.c	/^static void * eap_otp_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_otp_process	src/eap_peer/eap_otp.c	/^static struct wpabuf * eap_otp_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_param_needed	src/eap_peer/eap.h	/^	void (*eap_param_needed)(void *ctx, enum wpa_ctrl_req_type field,$/;"	m	struct:eapol_callbacks	access:public
eap_param_needed	src/eapol_supp/eapol_supp_sm.h	/^	void (*eap_param_needed)(void *ctx, enum wpa_ctrl_req_type field,$/;"	m	struct:eapol_ctx	access:public
eap_pax_alloc_resp	src/eap_peer/eap_pax.c	/^static struct wpabuf * eap_pax_alloc_resp(const struct eap_pax_hdr *req,$/;"	f	file:	signature:(const struct eap_pax_hdr *req, u8 id, u8 op_code, size_t plen)
eap_pax_buildReq	src/eap_server/eap_server_pax.c	/^static struct wpabuf * eap_pax_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_pax_build_std_1	src/eap_server/eap_server_pax.c	/^static struct wpabuf * eap_pax_build_std_1(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pax_data *data, u8 id)
eap_pax_build_std_3	src/eap_server/eap_server_pax.c	/^static struct wpabuf * eap_pax_build_std_3(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pax_data *data, u8 id)
eap_pax_check	src/eap_server/eap_server_pax.c	/^static Boolean eap_pax_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_pax_data	src/eap_peer/eap_pax.c	/^struct eap_pax_data {$/;"	s	file:
eap_pax_data	src/eap_server/eap_server_pax.c	/^struct eap_pax_data {$/;"	s	file:
eap_pax_data::FAILURE	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
eap_pax_data::PAX_DONE	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	e	enum:eap_pax_data::__anon169	file:
eap_pax_data::PAX_INIT	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	e	enum:eap_pax_data::__anon169	file:
eap_pax_data::PAX_STD_1	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
eap_pax_data::PAX_STD_2_SENT	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	e	enum:eap_pax_data::__anon169	file:
eap_pax_data::PAX_STD_3	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
eap_pax_data::SUCCESS	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_pax_data::__anon143	file:
eap_pax_data::__anon144::__anon145::x	src/eap_server/eap_server_pax.c	/^			u8 x[EAP_PAX_RAND_LEN]; \/* server rand *\/$/;"	m	struct:eap_pax_data::__anon144::__anon145	file:	access:public
eap_pax_data::__anon144::__anon145::y	src/eap_server/eap_server_pax.c	/^			u8 y[EAP_PAX_RAND_LEN]; \/* client rand *\/$/;"	m	struct:eap_pax_data::__anon144::__anon145	file:	access:public
eap_pax_data::__anon144::e	src/eap_server/eap_server_pax.c	/^		u8 e[2 * EAP_PAX_RAND_LEN];$/;"	m	union:eap_pax_data::__anon144	file:	access:public
eap_pax_data::__anon144::r	src/eap_server/eap_server_pax.c	/^		} r;$/;"	m	union:eap_pax_data::__anon144	typeref:struct:eap_pax_data::__anon144::__anon145	file:	access:public
eap_pax_data::__anon170::__anon171::x	src/eap_peer/eap_pax.c	/^			u8 x[EAP_PAX_RAND_LEN]; \/* server rand *\/$/;"	m	struct:eap_pax_data::__anon170::__anon171	file:	access:public
eap_pax_data::__anon170::__anon171::y	src/eap_peer/eap_pax.c	/^			u8 y[EAP_PAX_RAND_LEN]; \/* client rand *\/$/;"	m	struct:eap_pax_data::__anon170::__anon171	file:	access:public
eap_pax_data::__anon170::e	src/eap_peer/eap_pax.c	/^		u8 e[2 * EAP_PAX_RAND_LEN];$/;"	m	union:eap_pax_data::__anon170	file:	access:public
eap_pax_data::__anon170::r	src/eap_peer/eap_pax.c	/^		} r;$/;"	m	union:eap_pax_data::__anon170	typeref:struct:eap_pax_data::__anon170::__anon171	file:	access:public
eap_pax_data::ak	src/eap_peer/eap_pax.c	/^	u8 ak[EAP_PAX_AK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::ak	src/eap_server/eap_server_pax.c	/^	u8 ak[EAP_PAX_AK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::cid	src/eap_peer/eap_pax.c	/^	char *cid;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::cid	src/eap_server/eap_server_pax.c	/^	char *cid;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::cid_len	src/eap_peer/eap_pax.c	/^	size_t cid_len;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::cid_len	src/eap_server/eap_server_pax.c	/^	size_t cid_len;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::ck	src/eap_peer/eap_pax.c	/^	u8 ck[EAP_PAX_CK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::ck	src/eap_server/eap_server_pax.c	/^	u8 ck[EAP_PAX_CK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::dh_group_id	src/eap_peer/eap_pax.c	/^	u8 mac_id, dh_group_id, public_key_id;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::ick	src/eap_peer/eap_pax.c	/^	u8 ick[EAP_PAX_ICK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::ick	src/eap_server/eap_server_pax.c	/^	u8 ick[EAP_PAX_ICK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::keys_set	src/eap_server/eap_server_pax.c	/^	int keys_set;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::mac_id	src/eap_peer/eap_pax.c	/^	u8 mac_id, dh_group_id, public_key_id;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::mac_id	src/eap_server/eap_server_pax.c	/^	u8 mac_id;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::mk	src/eap_peer/eap_pax.c	/^	u8 mk[EAP_PAX_MK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::mk	src/eap_server/eap_server_pax.c	/^	u8 mk[EAP_PAX_MK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::public_key_id	src/eap_peer/eap_pax.c	/^	u8 mac_id, dh_group_id, public_key_id;$/;"	m	struct:eap_pax_data	file:	access:public
eap_pax_data::rand	src/eap_peer/eap_pax.c	/^	} rand;$/;"	m	struct:eap_pax_data	typeref:union:eap_pax_data::__anon170	file:	access:public
eap_pax_data::rand	src/eap_server/eap_server_pax.c	/^	} rand;$/;"	m	struct:eap_pax_data	typeref:union:eap_pax_data::__anon144	file:	access:public
eap_pax_data::state	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	m	struct:eap_pax_data	typeref:enum:eap_pax_data::__anon169	file:	access:public
eap_pax_data::state	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_pax_data	typeref:enum:eap_pax_data::__anon143	file:	access:public
eap_pax_deinit	src/eap_peer/eap_pax.c	/^static void eap_pax_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pax_deinit	src/eap_peer/eap_pax.c	/^static void eap_pax_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_pax_getKey	src/eap_peer/eap_pax.c	/^static u8 * eap_pax_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pax_getKey	src/eap_server/eap_server_pax.c	/^static u8 * eap_pax_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pax_get_emsk	src/eap_peer/eap_pax.c	/^static u8 * eap_pax_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pax_get_emsk	src/eap_server/eap_server_pax.c	/^static u8 * eap_pax_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pax_hdr	src/eap_common/eap_pax_common.h	/^struct eap_pax_hdr {$/;"	s
eap_pax_hdr::dh_group_id	src/eap_common/eap_pax_common.h	/^	u8 dh_group_id;$/;"	m	struct:eap_pax_hdr	access:public
eap_pax_hdr::flags	src/eap_common/eap_pax_common.h	/^	u8 flags;$/;"	m	struct:eap_pax_hdr	access:public
eap_pax_hdr::mac_id	src/eap_common/eap_pax_common.h	/^	u8 mac_id;$/;"	m	struct:eap_pax_hdr	access:public
eap_pax_hdr::op_code	src/eap_common/eap_pax_common.h	/^	u8 op_code;$/;"	m	struct:eap_pax_hdr	access:public
eap_pax_hdr::public_key_id	src/eap_common/eap_pax_common.h	/^	u8 public_key_id;$/;"	m	struct:eap_pax_hdr	access:public
eap_pax_init	src/eap_peer/eap_pax.c	/^static void * eap_pax_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_pax_init	src/eap_server/eap_server_pax.c	/^static void * eap_pax_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_pax_initial_key_derivation	src/eap_common/eap_pax_common.c	/^int eap_pax_initial_key_derivation(u8 mac_id, const u8 *ak, const u8 *e,$/;"	f	signature:(u8 mac_id, const u8 *ak, const u8 *e, u8 *mk, u8 *ck, u8 *ick)
eap_pax_initial_key_derivation	src/eap_common/eap_pax_common.h	/^int eap_pax_initial_key_derivation(u8 mac_id, const u8 *ak, const u8 *e,$/;"	p	signature:(u8 mac_id, const u8 *ak, const u8 *e, u8 *mk, u8 *ck, u8 *ick)
eap_pax_isDone	src/eap_server/eap_server_pax.c	/^static Boolean eap_pax_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pax_isKeyAvailable	src/eap_peer/eap_pax.c	/^static Boolean eap_pax_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pax_isSuccess	src/eap_server/eap_server_pax.c	/^static Boolean eap_pax_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pax_kdf	src/eap_common/eap_pax_common.c	/^int eap_pax_kdf(u8 mac_id, const u8 *key, size_t key_len,$/;"	f	signature:(u8 mac_id, const u8 *key, size_t key_len, const char *identifier, const u8 *entropy, size_t entropy_len, size_t output_len, u8 *output)
eap_pax_kdf	src/eap_common/eap_pax_common.h	/^int eap_pax_kdf(u8 mac_id, const u8 *key, size_t key_len,$/;"	p	signature:(u8 mac_id, const u8 *key, size_t key_len, const char *identifier, const u8 *entropy, size_t entropy_len, size_t output_len, u8 *output)
eap_pax_mac	src/eap_common/eap_pax_common.c	/^int eap_pax_mac(u8 mac_id, const u8 *key, size_t key_len,$/;"	f	signature:(u8 mac_id, const u8 *key, size_t key_len, const u8 *data1, size_t data1_len, const u8 *data2, size_t data2_len, const u8 *data3, size_t data3_len, u8 *mac)
eap_pax_mac	src/eap_common/eap_pax_common.h	/^int eap_pax_mac(u8 mac_id, const u8 *key, size_t key_len,$/;"	p	signature:(u8 mac_id, const u8 *key, size_t key_len, const u8 *data1, size_t data1_len, const u8 *data2, size_t data2_len, const u8 *data3, size_t data3_len, u8 *mac)
eap_pax_process	src/eap_peer/eap_pax.c	/^static struct wpabuf * eap_pax_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_pax_process	src/eap_server/eap_server_pax.c	/^static void eap_pax_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_pax_process_ack	src/eap_server/eap_server_pax.c	/^static void eap_pax_process_ack(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pax_data *data, struct wpabuf *respData)
eap_pax_process_std_1	src/eap_peer/eap_pax.c	/^static struct wpabuf * eap_pax_process_std_1(struct eap_pax_data *data,$/;"	f	file:	signature:(struct eap_pax_data *data, struct eap_method_ret *ret, u8 id, const struct eap_pax_hdr *req, size_t req_plen)
eap_pax_process_std_2	src/eap_server/eap_server_pax.c	/^static void eap_pax_process_std_2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pax_data *data, struct wpabuf *respData)
eap_pax_process_std_3	src/eap_peer/eap_pax.c	/^static struct wpabuf * eap_pax_process_std_3(struct eap_pax_data *data,$/;"	f	file:	signature:(struct eap_pax_data *data, struct eap_method_ret *ret, u8 id, const struct eap_pax_hdr *req, size_t req_plen)
eap_pax_reset	src/eap_server/eap_server_pax.c	/^static void eap_pax_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_payload_tlv	src/eap_common/eap_fast_common.h	/^	u8 *eap_payload_tlv;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_payload_tlv_len	src/eap_common/eap_fast_common.h	/^	size_t eap_payload_tlv_len;$/;"	m	struct:eap_fast_tlv_parse	access:public
eap_peap_buildReq	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peap_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_peap_build_phase2_req	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peap_build_phase2_req(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, u8 id)
eap_peap_build_phase2_soh	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peap_build_phase2_soh(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, u8 id)
eap_peap_build_phase2_term	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peap_build_phase2_term(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, u8 id, int success)
eap_peap_build_phase2_tlv	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peap_build_phase2_tlv(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, u8 id)
eap_peap_build_start	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peap_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, u8 id)
eap_peap_check	src/eap_server/eap_server_peap.c	/^static Boolean eap_peap_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_peap_data	src/eap_peer/eap_peap.c	/^struct eap_peap_data {$/;"	s	file:
eap_peap_data	src/eap_server/eap_server_peap.c	/^struct eap_peap_data {$/;"	s	file:
eap_peap_data::FAILURE	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::FAILURE_REQ	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::NO_BINDING	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon172	file:
eap_peap_data::NO_BINDING	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon162	file:
eap_peap_data::OPTIONAL_BINDING	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon172	file:
eap_peap_data::OPTIONAL_BINDING	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon162	file:
eap_peap_data::PHASE1	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::PHASE1_ID2	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::PHASE2_ID	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::PHASE2_METHOD	src/eap_server/eap_server_peap.c	/^		PHASE2_METHOD, PHASE2_SOH,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::PHASE2_SOH	src/eap_server/eap_server_peap.c	/^		PHASE2_METHOD, PHASE2_SOH,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::PHASE2_START	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::PHASE2_TLV	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::REQUIRE_BINDING	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon172	file:
eap_peap_data::REQUIRE_BINDING	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	e	enum:eap_peap_data::__anon162	file:
eap_peap_data::START	src/eap_server/eap_server_peap.c	/^		START, PHASE1, PHASE1_ID2, PHASE2_START, PHASE2_ID,$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::SUCCESS	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::SUCCESS_REQ	src/eap_server/eap_server_peap.c	/^		PHASE2_TLV, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE$/;"	e	enum:eap_peap_data::__anon160	file:
eap_peap_data::TLV_REQ_FAILURE	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	e	enum:eap_peap_data::__anon161	file:
eap_peap_data::TLV_REQ_NONE	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	e	enum:eap_peap_data::__anon161	file:
eap_peap_data::TLV_REQ_SUCCESS	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	e	enum:eap_peap_data::__anon161	file:
eap_peap_data::binding_nonce	src/eap_peer/eap_peap.c	/^	u8 binding_nonce[32];$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::binding_nonce	src/eap_server/eap_server_peap.c	/^	u8 binding_nonce[32];$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::cmk	src/eap_peer/eap_peap.c	/^	u8 cmk[20];$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::cmk	src/eap_server/eap_server_peap.c	/^	u8 cmk[20];$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::crypto_binding	src/eap_peer/eap_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon172	file:	access:public
eap_peap_data::crypto_binding	src/eap_server/eap_server_peap.c	/^	enum { NO_BINDING, OPTIONAL_BINDING, REQUIRE_BINDING } crypto_binding;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon162	file:	access:public
eap_peap_data::crypto_binding_sent	src/eap_server/eap_server_peap.c	/^	int crypto_binding_sent;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::crypto_binding_used	src/eap_peer/eap_peap.c	/^	int crypto_binding_used;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::crypto_binding_used	src/eap_server/eap_server_peap.c	/^	int crypto_binding_used;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::force_new_label	src/eap_peer/eap_peap.c	/^	int peap_version, force_peap_version, force_new_label;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::force_peap_version	src/eap_peer/eap_peap.c	/^	int peap_version, force_peap_version, force_new_label;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::force_version	src/eap_server/eap_server_peap.c	/^	int force_version;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::ipmk	src/eap_peer/eap_peap.c	/^	u8 ipmk[40];$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::ipmk	src/eap_server/eap_server_peap.c	/^	u8 ipmk[40];$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::key_data	src/eap_peer/eap_peap.c	/^	u8 *key_data;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::num_phase2_types	src/eap_peer/eap_peap.c	/^	size_t num_phase2_types;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::peap_outer_success	src/eap_peer/eap_peap.c	/^	int peap_outer_success; \/* 0 = PEAP terminated on Phase 2 inner$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::peap_version	src/eap_peer/eap_peap.c	/^	int peap_version, force_peap_version, force_new_label;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::peap_version	src/eap_server/eap_server_peap.c	/^	int peap_version;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::pending_phase2_req	src/eap_peer/eap_peap.c	/^	struct wpabuf *pending_phase2_req;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::wpabuf	file:	access:public
eap_peap_data::pending_phase2_resp	src/eap_server/eap_server_peap.c	/^	struct wpabuf *pending_phase2_resp;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::wpabuf	file:	access:public
eap_peap_data::phase2_eap_started	src/eap_peer/eap_peap.c	/^	int phase2_eap_started;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_eap_success	src/eap_peer/eap_peap.c	/^	int phase2_eap_success;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_key	src/eap_server/eap_server_peap.c	/^	u8 *phase2_key;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_key_len	src/eap_server/eap_server_peap.c	/^	size_t phase2_key_len;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_method	src/eap_peer/eap_peap.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method	file:	access:public
eap_peap_data::phase2_method	src/eap_server/eap_server_peap.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method	file:	access:public
eap_peap_data::phase2_priv	src/eap_peer/eap_peap.c	/^	void *phase2_priv;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_priv	src/eap_server/eap_server_peap.c	/^	void *phase2_priv;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_success	src/eap_peer/eap_peap.c	/^	int phase2_success;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::phase2_type	src/eap_peer/eap_peap.c	/^	struct eap_method_type phase2_type;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method_type	file:	access:public
eap_peap_data::phase2_types	src/eap_peer/eap_peap.c	/^	struct eap_method_type *phase2_types;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method_type	file:	access:public
eap_peap_data::reauth	src/eap_peer/eap_peap.c	/^	int reauth; \/* reauthentication *\/$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::recv_version	src/eap_server/eap_server_peap.c	/^	int recv_version;$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::resuming	src/eap_peer/eap_peap.c	/^	int resuming; \/* starting a resumed session *\/$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::soh	src/eap_peer/eap_peap.c	/^	int soh; \/* Whether IF-TNCCS-SOH (Statement of Health; Microsoft NAP)$/;"	m	struct:eap_peap_data	file:	access:public
eap_peap_data::soh_response	src/eap_server/eap_server_peap.c	/^	struct wpabuf *soh_response;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::wpabuf	file:	access:public
eap_peap_data::ssl	src/eap_peer/eap_peap.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_ssl_data	file:	access:public
eap_peap_data::ssl	src/eap_server/eap_server_peap.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_ssl_data	file:	access:public
eap_peap_data::state	src/eap_server/eap_server_peap.c	/^	} state;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon160	file:	access:public
eap_peap_data::tlv_request	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon161	file:	access:public
eap_peap_decrypt	src/eap_peer/eap_peap.c	/^static int eap_peap_decrypt(struct eap_sm *sm, struct eap_peap_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct eap_method_ret *ret, const struct eap_hdr *req, const struct wpabuf *in_data, struct wpabuf **out_data)
eap_peap_deinit	src/eap_peer/eap_peap.c	/^static void eap_peap_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_deinit	src/eap_peer/eap_peap.c	/^static void eap_peap_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_deinit_for_reauth	src/eap_peer/eap_peap.c	/^static void eap_peap_deinit_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_derive_cmk	src/eap_peer/eap_peap.c	/^static int eap_peap_derive_cmk(struct eap_sm *sm, struct eap_peap_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data)
eap_peap_derive_cmk	src/eap_server/eap_server_peap.c	/^static int eap_peap_derive_cmk(struct eap_sm *sm, struct eap_peap_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data)
eap_peap_getKey	src/eap_peer/eap_peap.c	/^static u8 * eap_peap_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_peap_getKey	src/eap_server/eap_server_peap.c	/^static u8 * eap_peap_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_peap_get_isk	src/eap_peer/eap_peap.c	/^static int eap_peap_get_isk(struct eap_sm *sm, struct eap_peap_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, u8 *isk, size_t isk_len)
eap_peap_get_isk	src/eap_server/eap_server_peap.c	/^static void eap_peap_get_isk(struct eap_peap_data *data,$/;"	f	file:	signature:(struct eap_peap_data *data, u8 *isk, size_t isk_len)
eap_peap_get_status	src/eap_peer/eap_peap.c	/^static int eap_peap_get_status(struct eap_sm *sm, void *priv, char *buf,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, char *buf, size_t buflen, int verbose)
eap_peap_has_reauth_data	src/eap_peer/eap_peap.c	/^static Boolean eap_peap_has_reauth_data(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_init	src/eap_peer/eap_peap.c	/^static void * eap_peap_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_peap_init	src/eap_server/eap_server_peap.c	/^static void * eap_peap_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_peap_init_for_reauth	src/eap_peer/eap_peap.c	/^static void * eap_peap_init_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_isDone	src/eap_server/eap_server_peap.c	/^static Boolean eap_peap_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_isKeyAvailable	src/eap_peer/eap_peap.c	/^static Boolean eap_peap_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_isSuccess	src/eap_server/eap_server_peap.c	/^static Boolean eap_peap_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_parse_phase1	src/eap_peer/eap_peap.c	/^static int eap_peap_parse_phase1(struct eap_peap_data *data,$/;"	f	file:	signature:(struct eap_peap_data *data, const char *phase1)
eap_peap_phase2_init	src/eap_server/eap_server_peap.c	/^static int eap_peap_phase2_init(struct eap_sm *sm, struct eap_peap_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, EapType eap_type)
eap_peap_phase2_request	src/eap_peer/eap_peap.c	/^static int eap_peap_phase2_request(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct eap_method_ret *ret, struct wpabuf *req, struct wpabuf **resp)
eap_peap_process	src/eap_peer/eap_peap.c	/^static struct wpabuf * eap_peap_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_peap_process	src/eap_server/eap_server_peap.c	/^static void eap_peap_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_peap_process_msg	src/eap_server/eap_server_peap.c	/^static void eap_peap_process_msg(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, const struct wpabuf *respData)
eap_peap_process_phase2	src/eap_server/eap_server_peap.c	/^static void eap_peap_process_phase2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, const struct wpabuf *respData, struct wpabuf *in_buf)
eap_peap_process_phase2_response	src/eap_server/eap_server_peap.c	/^static void eap_peap_process_phase2_response(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct wpabuf *in_data)
eap_peap_process_phase2_soh	src/eap_server/eap_server_peap.c	/^static void eap_peap_process_phase2_soh(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct wpabuf *in_data)
eap_peap_process_phase2_tlv	src/eap_server/eap_server_peap.c	/^static void eap_peap_process_phase2_tlv(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct wpabuf *in_data)
eap_peap_process_version	src/eap_server/eap_server_peap.c	/^static int eap_peap_process_version(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, int peer_version)
eap_peap_req_failure	src/eap_server/eap_server_peap.c	/^static void eap_peap_req_failure(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data)
eap_peap_req_success	src/eap_server/eap_server_peap.c	/^static void eap_peap_req_success(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data)
eap_peap_reset	src/eap_server/eap_server_peap.c	/^static void eap_peap_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_reset	src/eap_server/eap_server_peap.c	/^static void eap_peap_reset(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_peap_state	src/eap_server/eap_server_peap.c	/^static void eap_peap_state(struct eap_peap_data *data, int state)$/;"	f	file:	signature:(struct eap_peap_data *data, int state)
eap_peap_state_txt	src/eap_server/eap_server_peap.c	/^static const char * eap_peap_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_peapv2_start_phase2	src/eap_server/eap_server_peap.c	/^static int eap_peapv2_start_phase2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data)
eap_peapv2_tlv_eap_payload	src/eap_peer/eap_peap.c	/^static struct wpabuf * eap_peapv2_tlv_eap_payload(struct wpabuf *buf)$/;"	f	file:	signature:(struct wpabuf *buf)
eap_peapv2_tlv_eap_payload	src/eap_server/eap_server_peap.c	/^static struct wpabuf * eap_peapv2_tlv_eap_payload(struct wpabuf *buf)$/;"	f	file:	signature:(struct wpabuf *buf)
eap_peer_aka_prime_register	src/eap_peer/eap_aka.c	/^int eap_peer_aka_prime_register(void)$/;"	f	signature:(void)
eap_peer_aka_prime_register	src/eap_peer/eap_methods.h	/^int eap_peer_aka_prime_register(void);$/;"	p	signature:(void)
eap_peer_aka_register	src/eap_peer/eap_aka.c	/^int eap_peer_aka_register(void)$/;"	f	signature:(void)
eap_peer_aka_register	src/eap_peer/eap_methods.h	/^int eap_peer_aka_register(void);$/;"	p	signature:(void)
eap_peer_config	src/eap_peer/eap_config.h	/^struct eap_peer_config {$/;"	s
eap_peer_config::altsubject_match	src/eap_peer/eap_config.h	/^	u8 *altsubject_match;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::altsubject_match2	src/eap_peer/eap_config.h	/^	u8 *altsubject_match2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::anonymous_identity	src/eap_peer/eap_config.h	/^	u8 *anonymous_identity;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::anonymous_identity_len	src/eap_peer/eap_config.h	/^	size_t anonymous_identity_len;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::ca_cert	src/eap_peer/eap_config.h	/^	u8 *ca_cert;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::ca_cert2	src/eap_peer/eap_config.h	/^	u8 *ca_cert2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::ca_cert2_id	src/eap_peer/eap_config.h	/^	char *ca_cert2_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::ca_cert_id	src/eap_peer/eap_config.h	/^	char *ca_cert_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::ca_path	src/eap_peer/eap_config.h	/^	u8 *ca_path;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::ca_path2	src/eap_peer/eap_config.h	/^	u8 *ca_path2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::cert2_id	src/eap_peer/eap_config.h	/^	char *cert2_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::cert_id	src/eap_peer/eap_config.h	/^	char *cert_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::client_cert	src/eap_peer/eap_config.h	/^	u8 *client_cert;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::client_cert2	src/eap_peer/eap_config.h	/^	u8 *client_cert2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::dh_file	src/eap_peer/eap_config.h	/^	u8 *dh_file;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::dh_file2	src/eap_peer/eap_config.h	/^	u8 *dh_file2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::eap_methods	src/eap_peer/eap_config.h	/^	struct eap_method_type *eap_methods;$/;"	m	struct:eap_peer_config	typeref:struct:eap_peer_config::eap_method_type	access:public
eap_peer_config::engine	src/eap_peer/eap_config.h	/^	int engine;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::engine2	src/eap_peer/eap_config.h	/^	int engine2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::engine2_id	src/eap_peer/eap_config.h	/^	char *engine2_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::engine_id	src/eap_peer/eap_config.h	/^	char *engine_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::flags	src/eap_peer/eap_config.h	/^	u32 flags;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::fragment_size	src/eap_peer/eap_config.h	/^	int fragment_size;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::identity	src/eap_peer/eap_config.h	/^	u8 *identity;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::identity_len	src/eap_peer/eap_config.h	/^	size_t identity_len;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::key2_id	src/eap_peer/eap_config.h	/^	char *key2_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::key_id	src/eap_peer/eap_config.h	/^	char *key_id;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::mschapv2_retry	src/eap_peer/eap_config.h	/^	int mschapv2_retry;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::new_password	src/eap_peer/eap_config.h	/^	u8 *new_password;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::new_password_len	src/eap_peer/eap_config.h	/^	size_t new_password_len;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::otp	src/eap_peer/eap_config.h	/^	u8 *otp;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::otp_len	src/eap_peer/eap_config.h	/^	size_t otp_len;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pac_file	src/eap_peer/eap_config.h	/^	char *pac_file;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::password	src/eap_peer/eap_config.h	/^	u8 *password;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::password_len	src/eap_peer/eap_config.h	/^	size_t password_len;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pcsc	src/eap_peer/eap_config.h	/^	char *pcsc;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_identity	src/eap_peer/eap_config.h	/^	int pending_req_identity;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_new_password	src/eap_peer/eap_config.h	/^	int pending_req_new_password;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_otp	src/eap_peer/eap_config.h	/^	char *pending_req_otp;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_otp_len	src/eap_peer/eap_config.h	/^	size_t pending_req_otp_len;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_passphrase	src/eap_peer/eap_config.h	/^	int pending_req_passphrase;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_password	src/eap_peer/eap_config.h	/^	int pending_req_password;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pending_req_pin	src/eap_peer/eap_config.h	/^	int pending_req_pin;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::phase1	src/eap_peer/eap_config.h	/^	char *phase1;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::phase2	src/eap_peer/eap_config.h	/^	char *phase2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pin	src/eap_peer/eap_config.h	/^	char *pin;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::pin2	src/eap_peer/eap_config.h	/^	char *pin2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::private_key	src/eap_peer/eap_config.h	/^	u8 *private_key;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::private_key2	src/eap_peer/eap_config.h	/^	u8 *private_key2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::private_key2_passwd	src/eap_peer/eap_config.h	/^	u8 *private_key2_passwd;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::private_key_passwd	src/eap_peer/eap_config.h	/^	u8 *private_key_passwd;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::subject_match	src/eap_peer/eap_config.h	/^	u8 *subject_match;$/;"	m	struct:eap_peer_config	access:public
eap_peer_config::subject_match2	src/eap_peer/eap_config.h	/^	u8 *subject_match2;$/;"	m	struct:eap_peer_config	access:public
eap_peer_fast_register	src/eap_peer/eap_fast.c	/^int eap_peer_fast_register(void)$/;"	f	signature:(void)
eap_peer_fast_register	src/eap_peer/eap_methods.h	/^int eap_peer_fast_register(void);$/;"	p	signature:(void)
eap_peer_get_eap_method	src/eap_peer/eap_methods.c	/^const struct eap_method * eap_peer_get_eap_method(int vendor, EapType method)$/;"	f	signature:(int vendor, EapType method)
eap_peer_get_eap_method	src/eap_peer/eap_methods.h	/^const struct eap_method * eap_peer_get_eap_method(int vendor, EapType method);$/;"	p	signature:(int vendor, EapType method)
eap_peer_get_methods	src/eap_peer/eap_methods.c	/^const struct eap_method * eap_peer_get_methods(size_t *count)$/;"	f	signature:(size_t *count)
eap_peer_get_methods	src/eap_peer/eap_methods.h	/^const struct eap_method * eap_peer_get_methods(size_t *count);$/;"	p	signature:(size_t *count)
eap_peer_get_type	src/eap_peer/eap_methods.c	/^EapType eap_peer_get_type(const char *name, int *vendor)$/;"	f	signature:(const char *name, int *vendor)
eap_peer_get_type	src/eap_peer/eap_methods.h	/^EapType eap_peer_get_type(const char *name, int *vendor);$/;"	p	signature:(const char *name, int *vendor)
eap_peer_get_type	src/eap_peer/eap_methods.h	/^static inline EapType eap_peer_get_type(const char *name, int *vendor)$/;"	f	signature:(const char *name, int *vendor)
eap_peer_gpsk_register	src/eap_peer/eap_gpsk.c	/^int eap_peer_gpsk_register(void)$/;"	f	signature:(void)
eap_peer_gpsk_register	src/eap_peer/eap_methods.h	/^int eap_peer_gpsk_register(void);$/;"	p	signature:(void)
eap_peer_gtc_register	src/eap_peer/eap_gtc.c	/^int eap_peer_gtc_register(void)$/;"	f	signature:(void)
eap_peer_gtc_register	src/eap_peer/eap_methods.h	/^int eap_peer_gtc_register(void);$/;"	p	signature:(void)
eap_peer_ikev2_register	src/eap_peer/eap_ikev2.c	/^int eap_peer_ikev2_register(void)$/;"	f	signature:(void)
eap_peer_ikev2_register	src/eap_peer/eap_methods.h	/^int eap_peer_ikev2_register(void);$/;"	p	signature:(void)
eap_peer_leap_register	src/eap_peer/eap_leap.c	/^int eap_peer_leap_register(void)$/;"	f	signature:(void)
eap_peer_leap_register	src/eap_peer/eap_methods.h	/^int eap_peer_leap_register(void);$/;"	p	signature:(void)
eap_peer_md5_register	src/eap_peer/eap_md5.c	/^int eap_peer_md5_register(void)$/;"	f	signature:(void)
eap_peer_md5_register	src/eap_peer/eap_methods.h	/^int eap_peer_md5_register(void);$/;"	p	signature:(void)
eap_peer_method_alloc	src/eap_peer/eap_methods.c	/^struct eap_method * eap_peer_method_alloc(int version, int vendor,$/;"	f	signature:(int version, int vendor, EapType method, const char *name)
eap_peer_method_alloc	src/eap_peer/eap_methods.h	/^struct eap_method * eap_peer_method_alloc(int version, int vendor,$/;"	p	signature:(int version, int vendor, EapType method, const char *name)
eap_peer_method_free	src/eap_peer/eap_methods.c	/^void eap_peer_method_free(struct eap_method *method)$/;"	f	signature:(struct eap_method *method)
eap_peer_method_free	src/eap_peer/eap_methods.h	/^void eap_peer_method_free(struct eap_method *method);$/;"	p	signature:(struct eap_method *method)
eap_peer_method_load	src/eap_peer/eap_methods.c	/^int eap_peer_method_load(const char *so)$/;"	f	signature:(const char *so)
eap_peer_method_load	src/eap_peer/eap_methods.h	/^int eap_peer_method_load(const char *so);$/;"	p	signature:(const char *so)
eap_peer_method_load	src/eap_peer/eap_methods.h	/^static inline int eap_peer_method_load(const char *so)$/;"	f	signature:(const char *so)
eap_peer_method_register	src/eap_peer/eap_methods.c	/^int eap_peer_method_register(struct eap_method *method)$/;"	f	signature:(struct eap_method *method)
eap_peer_method_register	src/eap_peer/eap_methods.h	/^int eap_peer_method_register(struct eap_method *method);$/;"	p	signature:(struct eap_method *method)
eap_peer_method_unload	src/eap_peer/eap_methods.c	/^int eap_peer_method_unload(struct eap_method *method)$/;"	f	signature:(struct eap_method *method)
eap_peer_method_unload	src/eap_peer/eap_methods.h	/^int eap_peer_method_unload(struct eap_method *method);$/;"	p	signature:(struct eap_method *method)
eap_peer_method_unload	src/eap_peer/eap_methods.h	/^static inline int eap_peer_method_unload(struct eap_method *method)$/;"	f	signature:(struct eap_method *method)
eap_peer_mschapv2_register	src/eap_peer/eap_methods.h	/^int eap_peer_mschapv2_register(void);$/;"	p	signature:(void)
eap_peer_mschapv2_register	src/eap_peer/eap_mschapv2.c	/^int eap_peer_mschapv2_register(void)$/;"	f	signature:(void)
eap_peer_otp_register	src/eap_peer/eap_methods.h	/^int eap_peer_otp_register(void);$/;"	p	signature:(void)
eap_peer_otp_register	src/eap_peer/eap_otp.c	/^int eap_peer_otp_register(void)$/;"	f	signature:(void)
eap_peer_pax_register	src/eap_peer/eap_methods.h	/^int eap_peer_pax_register(void);$/;"	p	signature:(void)
eap_peer_pax_register	src/eap_peer/eap_pax.c	/^int eap_peer_pax_register(void)$/;"	f	signature:(void)
eap_peer_peap_register	src/eap_peer/eap_methods.h	/^int eap_peer_peap_register(void);$/;"	p	signature:(void)
eap_peer_peap_register	src/eap_peer/eap_peap.c	/^int eap_peer_peap_register(void)$/;"	f	signature:(void)
eap_peer_psk_register	src/eap_peer/eap_methods.h	/^int eap_peer_psk_register(void);$/;"	p	signature:(void)
eap_peer_psk_register	src/eap_peer/eap_psk.c	/^int eap_peer_psk_register(void)$/;"	f	signature:(void)
eap_peer_pwd_register	src/eap_peer/eap_methods.h	/^int eap_peer_pwd_register(void);$/;"	p	signature:(void)
eap_peer_pwd_register	src/eap_peer/eap_pwd.c	/^int eap_peer_pwd_register(void)$/;"	f	signature:(void)
eap_peer_register_methods	src/eap_peer/eap_methods.h	/^static inline int eap_peer_register_methods(void)$/;"	f	signature:(void)
eap_peer_req_is_duplicate	src/eap_peer/eap.c	/^static int eap_peer_req_is_duplicate(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_peer_sake_register	src/eap_peer/eap_methods.h	/^int eap_peer_sake_register(void);$/;"	p	signature:(void)
eap_peer_sake_register	src/eap_peer/eap_sake.c	/^int eap_peer_sake_register(void)$/;"	f	signature:(void)
eap_peer_select_phase2_methods	src/eap_peer/eap_tls_common.c	/^int eap_peer_select_phase2_methods(struct eap_peer_config *config,$/;"	f	signature:(struct eap_peer_config *config, const char *prefix, struct eap_method_type **types, size_t *num_types)
eap_peer_select_phase2_methods	src/eap_peer/eap_tls_common.h	/^int eap_peer_select_phase2_methods(struct eap_peer_config *config,$/;"	p	signature:(struct eap_peer_config *config, const char *prefix, struct eap_method_type **types, size_t *num_types)
eap_peer_sim_register	src/eap_peer/eap_methods.h	/^int eap_peer_sim_register(void);$/;"	p	signature:(void)
eap_peer_sim_register	src/eap_peer/eap_sim.c	/^int eap_peer_sim_register(void)$/;"	f	signature:(void)
eap_peer_sm_deinit	src/eap_peer/eap.c	/^void eap_peer_sm_deinit(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_peer_sm_deinit	src/eap_peer/eap.h	/^void eap_peer_sm_deinit(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_peer_sm_init	src/eap_peer/eap.c	/^struct eap_sm * eap_peer_sm_init(void *eapol_ctx,$/;"	f	signature:(void *eapol_ctx, struct eapol_callbacks *eapol_cb, void *msg_ctx, struct eap_config *conf)
eap_peer_sm_init	src/eap_peer/eap.h	/^struct eap_sm * eap_peer_sm_init(void *eapol_ctx,$/;"	p	signature:(void *eapol_ctx, struct eapol_callbacks *eapol_cb, void *msg_ctx, struct eap_config *conf)
eap_peer_sm_step	src/eap_peer/eap.c	/^int eap_peer_sm_step(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_peer_sm_step	src/eap_peer/eap.h	/^int eap_peer_sm_step(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_peer_sm_step_idle	src/eap_peer/eap.c	/^static void eap_peer_sm_step_idle(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_peer_sm_step_local	src/eap_peer/eap.c	/^static void eap_peer_sm_step_local(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_peer_sm_step_received	src/eap_peer/eap.c	/^static void eap_peer_sm_step_received(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_peer_sm_tls_event	src/eap_peer/eap.c	/^static void eap_peer_sm_tls_event(void *ctx, enum tls_event ev,$/;"	f	file:	signature:(void *ctx, enum tls_event ev, union tls_event_data *data)
eap_peer_tls_build_ack	src/eap_peer/eap_tls_common.c	/^struct wpabuf * eap_peer_tls_build_ack(u8 id, EapType eap_type,$/;"	f	signature:(u8 id, EapType eap_type, int peap_version)
eap_peer_tls_build_ack	src/eap_peer/eap_tls_common.h	/^struct wpabuf * eap_peer_tls_build_ack(u8 id, EapType eap_type,$/;"	p	signature:(u8 id, EapType eap_type, int peap_version)
eap_peer_tls_data_reassemble	src/eap_peer/eap_tls_common.c	/^static const struct wpabuf * eap_peer_tls_data_reassemble($/;"	f	file:	signature:( struct eap_ssl_data *data, const struct wpabuf *in_data, int *need_more_input)
eap_peer_tls_decrypt	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_decrypt(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const struct wpabuf *in_data, struct wpabuf **in_decrypted)
eap_peer_tls_decrypt	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_decrypt(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const struct wpabuf *in_data, struct wpabuf **in_decrypted)
eap_peer_tls_derive_key	src/eap_peer/eap_tls_common.c	/^u8 * eap_peer_tls_derive_key(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const char *label, size_t len)
eap_peer_tls_derive_key	src/eap_peer/eap_tls_common.h	/^u8 * eap_peer_tls_derive_key(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const char *label, size_t len)
eap_peer_tls_encrypt	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_encrypt(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, EapType eap_type, int peap_version, u8 id, const struct wpabuf *in_data, struct wpabuf **out_data)
eap_peer_tls_encrypt	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_encrypt(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, EapType eap_type, int peap_version, u8 id, const struct wpabuf *in_data, struct wpabuf **out_data)
eap_peer_tls_phase2_nak	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_phase2_nak(struct eap_method_type *types, size_t num_types,$/;"	f	signature:(struct eap_method_type *types, size_t num_types, struct eap_hdr *hdr, struct wpabuf **resp)
eap_peer_tls_phase2_nak	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_phase2_nak(struct eap_method_type *types, size_t num_types,$/;"	p	signature:(struct eap_method_type *types, size_t num_types, struct eap_hdr *hdr, struct wpabuf **resp)
eap_peer_tls_process_helper	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_process_helper(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, EapType eap_type, int peap_version, u8 id, const u8 *in_data, size_t in_len, struct wpabuf **out_data)
eap_peer_tls_process_helper	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_process_helper(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, EapType eap_type, int peap_version, u8 id, const u8 *in_data, size_t in_len, struct wpabuf **out_data)
eap_peer_tls_process_init	src/eap_peer/eap_tls_common.c	/^const u8 * eap_peer_tls_process_init(struct eap_sm *sm,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, EapType eap_type, struct eap_method_ret *ret, const struct wpabuf *reqData, size_t *len, u8 *flags)
eap_peer_tls_process_init	src/eap_peer/eap_tls_common.h	/^const u8 * eap_peer_tls_process_init(struct eap_sm *sm,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, EapType eap_type, struct eap_method_ret *ret, const struct wpabuf *reqData, size_t *len, u8 *flags)
eap_peer_tls_reassemble_fragment	src/eap_peer/eap_tls_common.c	/^static int eap_peer_tls_reassemble_fragment(struct eap_ssl_data *data,$/;"	f	file:	signature:(struct eap_ssl_data *data, const struct wpabuf *in_data)
eap_peer_tls_reauth_init	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_reauth_init(struct eap_sm *sm, struct eap_ssl_data *data)$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_peer_tls_reauth_init	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_reauth_init(struct eap_sm *sm, struct eap_ssl_data *data);$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_peer_tls_register	src/eap_peer/eap_methods.h	/^int eap_peer_tls_register(void);$/;"	p	signature:(void)
eap_peer_tls_register	src/eap_peer/eap_tls.c	/^int eap_peer_tls_register(void)$/;"	f	signature:(void)
eap_peer_tls_reset_input	src/eap_peer/eap_tls_common.c	/^void eap_peer_tls_reset_input(struct eap_ssl_data *data)$/;"	f	signature:(struct eap_ssl_data *data)
eap_peer_tls_reset_input	src/eap_peer/eap_tls_common.h	/^void eap_peer_tls_reset_input(struct eap_ssl_data *data);$/;"	p	signature:(struct eap_ssl_data *data)
eap_peer_tls_reset_output	src/eap_peer/eap_tls_common.c	/^void eap_peer_tls_reset_output(struct eap_ssl_data *data)$/;"	f	signature:(struct eap_ssl_data *data)
eap_peer_tls_reset_output	src/eap_peer/eap_tls_common.h	/^void eap_peer_tls_reset_output(struct eap_ssl_data *data);$/;"	p	signature:(struct eap_ssl_data *data)
eap_peer_tls_ssl_deinit	src/eap_peer/eap_tls_common.c	/^void eap_peer_tls_ssl_deinit(struct eap_sm *sm, struct eap_ssl_data *data)$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_peer_tls_ssl_deinit	src/eap_peer/eap_tls_common.h	/^void eap_peer_tls_ssl_deinit(struct eap_sm *sm, struct eap_ssl_data *data);$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_peer_tls_ssl_init	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_ssl_init(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, struct eap_peer_config *config)
eap_peer_tls_ssl_init	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_ssl_init(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, struct eap_peer_config *config)
eap_peer_tls_status	src/eap_peer/eap_tls_common.c	/^int eap_peer_tls_status(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, char *buf, size_t buflen, int verbose)
eap_peer_tls_status	src/eap_peer/eap_tls_common.h	/^int eap_peer_tls_status(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, char *buf, size_t buflen, int verbose)
eap_peer_tnc_register	src/eap_peer/eap_methods.h	/^int eap_peer_tnc_register(void);$/;"	p	signature:(void)
eap_peer_tnc_register	src/eap_peer/eap_tnc.c	/^int eap_peer_tnc_register(void)$/;"	f	signature:(void)
eap_peer_ttls_register	src/eap_peer/eap_methods.h	/^int eap_peer_ttls_register(void);$/;"	p	signature:(void)
eap_peer_ttls_register	src/eap_peer/eap_ttls.c	/^int eap_peer_ttls_register(void)$/;"	f	signature:(void)
eap_peer_unregister_methods	src/eap_peer/eap_methods.c	/^void eap_peer_unregister_methods(void)$/;"	f	signature:(void)
eap_peer_unregister_methods	src/eap_peer/eap_methods.h	/^static inline void eap_peer_unregister_methods(void)$/;"	f	signature:(void)
eap_peer_unregister_methods	src/eap_peer/eap_methods.h	/^void eap_peer_unregister_methods(void);$/;"	p	signature:(void)
eap_peer_vendor_test_register	src/eap_peer/eap_methods.h	/^int eap_peer_vendor_test_register(void);$/;"	p	signature:(void)
eap_peer_vendor_test_register	src/eap_peer/eap_vendor_test.c	/^int eap_peer_vendor_test_register(void)$/;"	f	signature:(void)
eap_peer_wsc_register	src/eap_peer/eap_methods.h	/^int eap_peer_wsc_register(void);$/;"	p	signature:(void)
eap_peer_wsc_register	src/eap_peer/eap_wsc.c	/^int eap_peer_wsc_register(void)$/;"	f	signature:(void)
eap_psk_buildReq	src/eap_server/eap_server_psk.c	/^static struct wpabuf * eap_psk_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_psk_build_1	src/eap_server/eap_server_psk.c	/^static struct wpabuf * eap_psk_build_1(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_psk_data *data, u8 id)
eap_psk_build_3	src/eap_server/eap_server_psk.c	/^static struct wpabuf * eap_psk_build_3(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_psk_data *data, u8 id)
eap_psk_check	src/eap_server/eap_server_psk.c	/^static Boolean eap_psk_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_psk_data	src/eap_peer/eap_psk.c	/^struct eap_psk_data {$/;"	s	file:
eap_psk_data	src/eap_server/eap_server_psk.c	/^struct eap_psk_data {$/;"	s	file:
eap_psk_data::FAILURE	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
eap_psk_data::PSK_1	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
eap_psk_data::PSK_3	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
eap_psk_data::PSK_DONE	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	e	enum:eap_psk_data::__anon178	file:
eap_psk_data::PSK_INIT	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	e	enum:eap_psk_data::__anon178	file:
eap_psk_data::PSK_MAC_SENT	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	e	enum:eap_psk_data::__anon178	file:
eap_psk_data::SUCCESS	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	e	enum:eap_psk_data::__anon131	file:
eap_psk_data::ak	src/eap_peer/eap_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::ak	src/eap_server/eap_server_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::emsk	src/eap_peer/eap_psk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::emsk	src/eap_server/eap_server_psk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_p	src/eap_peer/eap_psk.c	/^	u8 *id_s, *id_p;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_p	src/eap_server/eap_server_psk.c	/^	u8 *id_p, *id_s;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_p_len	src/eap_peer/eap_psk.c	/^	size_t id_s_len, id_p_len;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_p_len	src/eap_server/eap_server_psk.c	/^	size_t id_p_len, id_s_len;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_s	src/eap_peer/eap_psk.c	/^	u8 *id_s, *id_p;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_s	src/eap_server/eap_server_psk.c	/^	u8 *id_p, *id_s;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_s_len	src/eap_peer/eap_psk.c	/^	size_t id_s_len, id_p_len;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::id_s_len	src/eap_server/eap_server_psk.c	/^	size_t id_p_len, id_s_len;$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::kdk	src/eap_peer/eap_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::kdk	src/eap_server/eap_server_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::msk	src/eap_peer/eap_psk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::msk	src/eap_server/eap_server_psk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::rand_p	src/eap_peer/eap_psk.c	/^	u8 rand_p[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::rand_p	src/eap_server/eap_server_psk.c	/^	u8 rand_p[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::rand_s	src/eap_server/eap_server_psk.c	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::state	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	m	struct:eap_psk_data	typeref:enum:eap_psk_data::__anon178	file:	access:public
eap_psk_data::state	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_psk_data	typeref:enum:eap_psk_data::__anon131	file:	access:public
eap_psk_data::tek	src/eap_peer/eap_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_data::tek	src/eap_server/eap_server_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
eap_psk_deinit	src/eap_peer/eap_psk.c	/^static void eap_psk_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_psk_derive_keys	src/eap_common/eap_psk_common.c	/^int eap_psk_derive_keys(const u8 *kdk, const u8 *rand_p, u8 *tek, u8 *msk,$/;"	f	signature:(const u8 *kdk, const u8 *rand_p, u8 *tek, u8 *msk, u8 *emsk)
eap_psk_derive_keys	src/eap_common/eap_psk_common.h	/^int __must_check eap_psk_derive_keys(const u8 *kdk, const u8 *rand_p, u8 *tek,$/;"	p	signature:(const u8 *kdk, const u8 *rand_p, u8 *tek, u8 *msk, u8 *emsk)
eap_psk_getKey	src/eap_peer/eap_psk.c	/^static u8 * eap_psk_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_psk_getKey	src/eap_server/eap_server_psk.c	/^static u8 * eap_psk_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_psk_get_emsk	src/eap_peer/eap_psk.c	/^static u8 * eap_psk_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_psk_get_emsk	src/eap_server/eap_server_psk.c	/^static u8 * eap_psk_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_psk_hdr_1	src/eap_common/eap_psk_common.h	/^struct eap_psk_hdr_1 {$/;"	s
eap_psk_hdr_1::flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_1	access:public
eap_psk_hdr_1::rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_1	access:public
eap_psk_hdr_2	src/eap_common/eap_psk_common.h	/^struct eap_psk_hdr_2 {$/;"	s
eap_psk_hdr_2::flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_2	access:public
eap_psk_hdr_2::mac_p	src/eap_common/eap_psk_common.h	/^	u8 mac_p[EAP_PSK_MAC_LEN];$/;"	m	struct:eap_psk_hdr_2	access:public
eap_psk_hdr_2::rand_p	src/eap_common/eap_psk_common.h	/^	u8 rand_p[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_2	access:public
eap_psk_hdr_2::rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_2	access:public
eap_psk_hdr_3	src/eap_common/eap_psk_common.h	/^struct eap_psk_hdr_3 {$/;"	s
eap_psk_hdr_3::flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_3	access:public
eap_psk_hdr_3::mac_s	src/eap_common/eap_psk_common.h	/^	u8 mac_s[EAP_PSK_MAC_LEN];$/;"	m	struct:eap_psk_hdr_3	access:public
eap_psk_hdr_3::rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_3	access:public
eap_psk_hdr_4	src/eap_common/eap_psk_common.h	/^struct eap_psk_hdr_4 {$/;"	s
eap_psk_hdr_4::flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_4	access:public
eap_psk_hdr_4::rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_4	access:public
eap_psk_init	src/eap_peer/eap_psk.c	/^static void * eap_psk_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_psk_init	src/eap_server/eap_server_psk.c	/^static void * eap_psk_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_psk_isDone	src/eap_server/eap_server_psk.c	/^static Boolean eap_psk_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_psk_isKeyAvailable	src/eap_peer/eap_psk.c	/^static Boolean eap_psk_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_psk_isSuccess	src/eap_server/eap_server_psk.c	/^static Boolean eap_psk_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_psk_key_setup	src/eap_common/eap_psk_common.c	/^int eap_psk_key_setup(const u8 *psk, u8 *ak, u8 *kdk)$/;"	f	signature:(const u8 *psk, u8 *ak, u8 *kdk)
eap_psk_key_setup	src/eap_common/eap_psk_common.h	/^int __must_check eap_psk_key_setup(const u8 *psk, u8 *ak, u8 *kdk);$/;"	p	signature:(const u8 *psk, u8 *ak, u8 *kdk)
eap_psk_process	src/eap_peer/eap_psk.c	/^static struct wpabuf * eap_psk_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_psk_process	src/eap_server/eap_server_psk.c	/^static void eap_psk_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_psk_process_1	src/eap_peer/eap_psk.c	/^static struct wpabuf * eap_psk_process_1(struct eap_psk_data *data,$/;"	f	file:	signature:(struct eap_psk_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_psk_process_2	src/eap_server/eap_server_psk.c	/^static void eap_psk_process_2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_psk_data *data, struct wpabuf *respData)
eap_psk_process_3	src/eap_peer/eap_psk.c	/^static struct wpabuf * eap_psk_process_3(struct eap_psk_data *data,$/;"	f	file:	signature:(struct eap_psk_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_psk_process_4	src/eap_server/eap_server_psk.c	/^static void eap_psk_process_4(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_psk_data *data, struct wpabuf *respData)
eap_psk_reset	src/eap_server/eap_server_psk.c	/^static void eap_psk_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pwd_build_commit_req	src/eap_server/eap_server_pwd.c	/^eap_pwd_build_commit_req(struct eap_sm *sm, struct eap_pwd_data *data, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, u8 id)
eap_pwd_build_confirm_req	src/eap_server/eap_server_pwd.c	/^eap_pwd_build_confirm_req(struct eap_sm *sm, struct eap_pwd_data *data, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, u8 id)
eap_pwd_build_id_req	src/eap_server/eap_server_pwd.c	/^eap_pwd_build_id_req(struct eap_sm *sm, struct eap_pwd_data *data, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, u8 id)
eap_pwd_build_req	src/eap_server/eap_server_pwd.c	/^eap_pwd_build_req(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_pwd_check	src/eap_server/eap_server_pwd.c	/^static Boolean eap_pwd_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_pwd_data	src/eap_peer/eap_pwd.c	/^struct eap_pwd_data {$/;"	s	file:
eap_pwd_data	src/eap_server/eap_server_pwd.c	/^struct eap_pwd_data {$/;"	s	file:
eap_pwd_data::FAILURE	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
eap_pwd_data::FAILURE	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
eap_pwd_data::PWD_Commit_Req	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
eap_pwd_data::PWD_Commit_Req	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
eap_pwd_data::PWD_Confirm_Req	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
eap_pwd_data::PWD_Confirm_Req	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
eap_pwd_data::PWD_ID_Req	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
eap_pwd_data::PWD_ID_Req	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
eap_pwd_data::SUCCESS	src/eap_peer/eap_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon179	file:
eap_pwd_data::SUCCESS	src/eap_server/eap_server_pwd.c	/^		PWD_ID_Req, PWD_Commit_Req, PWD_Confirm_Req, SUCCESS, FAILURE$/;"	e	enum:eap_pwd_data::__anon136	file:
eap_pwd_data::bnctx	src/eap_peer/eap_pwd.c	/^	BN_CTX *bnctx;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::bnctx	src/eap_server/eap_server_pwd.c	/^	BN_CTX *bnctx;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::emsk	src/eap_peer/eap_pwd.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::emsk	src/eap_server/eap_server_pwd.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::group_num	src/eap_peer/eap_pwd.c	/^	u16 group_num;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::group_num	src/eap_server/eap_server_pwd.c	/^	u16 group_num;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::grp	src/eap_peer/eap_pwd.c	/^	EAP_PWD_group *grp;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::grp	src/eap_server/eap_server_pwd.c	/^	EAP_PWD_group *grp;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_peer	src/eap_peer/eap_pwd.c	/^	u8 *id_peer;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_peer	src/eap_server/eap_server_pwd.c	/^	u8 *id_peer;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_peer_len	src/eap_peer/eap_pwd.c	/^	size_t id_peer_len;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_peer_len	src/eap_server/eap_server_pwd.c	/^	size_t id_peer_len;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_server	src/eap_peer/eap_pwd.c	/^	u8 *id_server;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_server	src/eap_server/eap_server_pwd.c	/^	u8 *id_server;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_server_len	src/eap_peer/eap_pwd.c	/^	size_t id_server_len;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::id_server_len	src/eap_server/eap_server_pwd.c	/^	size_t id_server_len;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::k	src/eap_peer/eap_pwd.c	/^	BIGNUM *k;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::k	src/eap_server/eap_server_pwd.c	/^	BIGNUM *k;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::msk	src/eap_peer/eap_pwd.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::msk	src/eap_server/eap_server_pwd.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::my_confirm	src/eap_server/eap_server_pwd.c	/^	u8 my_confirm[SHA256_DIGEST_LENGTH];$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::my_element	src/eap_peer/eap_pwd.c	/^	EC_POINT *my_element;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::my_element	src/eap_server/eap_server_pwd.c	/^	EC_POINT *my_element;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::my_scalar	src/eap_peer/eap_pwd.c	/^	BIGNUM *my_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::my_scalar	src/eap_server/eap_server_pwd.c	/^	BIGNUM *my_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::password	src/eap_peer/eap_pwd.c	/^	u8 *password;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::password	src/eap_server/eap_server_pwd.c	/^	u8 *password;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::password_len	src/eap_peer/eap_pwd.c	/^	size_t password_len;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::password_len	src/eap_server/eap_server_pwd.c	/^	size_t password_len;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::peer_element	src/eap_server/eap_server_pwd.c	/^	EC_POINT *peer_element;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::peer_scalar	src/eap_server/eap_server_pwd.c	/^	BIGNUM *peer_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::private_value	src/eap_peer/eap_pwd.c	/^	BIGNUM *private_value;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::private_value	src/eap_server/eap_server_pwd.c	/^	BIGNUM *private_value;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::server_element	src/eap_peer/eap_pwd.c	/^	EC_POINT *server_element;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::server_scalar	src/eap_peer/eap_pwd.c	/^	BIGNUM *server_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_data::state	src/eap_peer/eap_pwd.c	/^	} state;$/;"	m	struct:eap_pwd_data	typeref:enum:eap_pwd_data::__anon179	file:	access:public
eap_pwd_data::state	src/eap_server/eap_server_pwd.c	/^	} state;$/;"	m	struct:eap_pwd_data	typeref:enum:eap_pwd_data::__anon136	file:	access:public
eap_pwd_data::token	src/eap_server/eap_server_pwd.c	/^	u32 token;$/;"	m	struct:eap_pwd_data	file:	access:public
eap_pwd_deinit	src/eap_peer/eap_pwd.c	/^static void eap_pwd_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pwd_get_emsk	src/eap_peer/eap_pwd.c	/^static u8 * eap_pwd_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pwd_get_emsk	src/eap_server/eap_server_pwd.c	/^static u8 * eap_pwd_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pwd_getkey	src/eap_peer/eap_pwd.c	/^static u8 * eap_pwd_getkey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pwd_getkey	src/eap_server/eap_server_pwd.c	/^static u8 * eap_pwd_getkey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_pwd_hdr	src/eap_common/eap_pwd_common.h	/^struct eap_pwd_hdr {$/;"	s
eap_pwd_hdr::exch	src/eap_common/eap_pwd_common.h	/^	u8 exch:6;$/;"	m	struct:eap_pwd_hdr	access:public
eap_pwd_hdr::l_bit	src/eap_common/eap_pwd_common.h	/^	u8 l_bit:1;$/;"	m	struct:eap_pwd_hdr	access:public
eap_pwd_hdr::m_bit	src/eap_common/eap_pwd_common.h	/^	u8 m_bit:1;$/;"	m	struct:eap_pwd_hdr	access:public
eap_pwd_hdr::total_length	src/eap_common/eap_pwd_common.h	/^	u8 total_length[0];         \/* included when l_bit is set *\/$/;"	m	struct:eap_pwd_hdr	access:public
eap_pwd_id	src/eap_common/eap_pwd_common.h	/^struct eap_pwd_id {$/;"	s
eap_pwd_id::group_num	src/eap_common/eap_pwd_common.h	/^	be16 group_num;$/;"	m	struct:eap_pwd_id	access:public
eap_pwd_id::identity	src/eap_common/eap_pwd_common.h	/^	u8 identity[0];     \/* length inferred from payload *\/$/;"	m	struct:eap_pwd_id	access:public
eap_pwd_id::prep	src/eap_common/eap_pwd_common.h	/^	u8 prep;$/;"	m	struct:eap_pwd_id	access:public
eap_pwd_id::prf	src/eap_common/eap_pwd_common.h	/^	u8 prf;$/;"	m	struct:eap_pwd_id	access:public
eap_pwd_id::random_function	src/eap_common/eap_pwd_common.h	/^	u8 random_function;$/;"	m	struct:eap_pwd_id	access:public
eap_pwd_id::token	src/eap_common/eap_pwd_common.h	/^	u8 token[4];$/;"	m	struct:eap_pwd_id	access:public
eap_pwd_init	src/eap_peer/eap_pwd.c	/^static void * eap_pwd_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_pwd_init	src/eap_server/eap_server_pwd.c	/^static void * eap_pwd_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_pwd_is_done	src/eap_server/eap_server_pwd.c	/^static Boolean eap_pwd_is_done(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pwd_is_success	src/eap_server/eap_server_pwd.c	/^static Boolean eap_pwd_is_success(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pwd_kdf	src/eap_common/eap_pwd_common.c	/^void eap_pwd_kdf(u8 *key, int keylen, u8 *label, int labellen,$/;"	f	signature:(u8 *key, int keylen, u8 *label, int labellen, u8 *result, int resultbitlen)
eap_pwd_key_available	src/eap_peer/eap_pwd.c	/^static Boolean eap_pwd_key_available(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pwd_perform_commit_exchange	src/eap_peer/eap_pwd.c	/^eap_pwd_perform_commit_exchange(struct eap_sm *sm, struct eap_pwd_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_pwd_perform_confirm_exchange	src/eap_peer/eap_pwd.c	/^eap_pwd_perform_confirm_exchange(struct eap_sm *sm, struct eap_pwd_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_pwd_perform_id_exchange	src/eap_peer/eap_pwd.c	/^eap_pwd_perform_id_exchange(struct eap_sm *sm, struct eap_pwd_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_pwd_process	src/eap_peer/eap_pwd.c	/^eap_pwd_process(struct eap_sm *sm, void *priv, struct eap_method_ret *ret,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_pwd_process	src/eap_server/eap_server_pwd.c	/^static void eap_pwd_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_pwd_process_commit_resp	src/eap_server/eap_server_pwd.c	/^eap_pwd_process_commit_resp(struct eap_sm *sm, struct eap_pwd_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, const u8 *payload, size_t payload_len)
eap_pwd_process_confirm_resp	src/eap_server/eap_server_pwd.c	/^eap_pwd_process_confirm_resp(struct eap_sm *sm, struct eap_pwd_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, const u8 *payload, size_t payload_len)
eap_pwd_process_id_resp	src/eap_server/eap_server_pwd.c	/^static void eap_pwd_process_id_resp(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_pwd_data *data, const u8 *payload, size_t payload_len)
eap_pwd_reset	src/eap_server/eap_server_pwd.c	/^static void eap_pwd_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_pwd_state	src/eap_peer/eap_pwd.c	/^static void eap_pwd_state(struct eap_pwd_data *data, int state)$/;"	f	file:	signature:(struct eap_pwd_data *data, int state)
eap_pwd_state	src/eap_server/eap_server_pwd.c	/^static void eap_pwd_state(struct eap_pwd_data *data, int state)$/;"	f	file:	signature:(struct eap_pwd_data *data, int state)
eap_pwd_state_txt	src/eap_peer/eap_pwd.c	/^static const char * eap_pwd_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_pwd_state_txt	src/eap_server/eap_server_pwd.c	/^static const char * eap_pwd_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_reauth_period	src/ap/ap_config.h	/^	int eap_reauth_period;                  \/\/ 重认证周期，大于0意味着该功能使能(只用于认证系统)$/;"	m	struct:hostapd_bss_config	access:public
eap_reauth_period	src/eapol_auth/eapol_auth_sm.h	/^	int eap_reauth_period;  \/\/ 重认证周期，目前固定3600s$/;"	m	struct:eapol_auth_config	access:public
eap_register_scard_ctx	src/eap_peer/eap.c	/^void eap_register_scard_ctx(struct eap_sm *sm, void *ctx)$/;"	f	signature:(struct eap_sm *sm, void *ctx)
eap_register_scard_ctx	src/eap_peer/eap.h	/^void eap_register_scard_ctx(struct eap_sm *sm, void *ctx);$/;"	p	signature:(struct eap_sm *sm, void *ctx)
eap_req_id_text	src/ap/ap_config.h	/^	char *eap_req_id_text; \/* optional displayable message sent with$/;"	m	struct:hostapd_bss_config	access:public
eap_req_id_text	src/eapol_auth/eapol_auth_sm.h	/^	char *eap_req_id_text; \/* a copy of this will be allocated *\/$/;"	m	struct:eapol_auth_config	access:public
eap_req_id_text	src/radius/radius_server.c	/^	char *eap_req_id_text;$/;"	m	struct:radius_server_data	file:	access:public
eap_req_id_text	src/radius/radius_server.h	/^	const char *eap_req_id_text;$/;"	m	struct:radius_server_conf	access:public
eap_req_id_text_len	src/ap/ap_config.h	/^	size_t eap_req_id_text_len;             \/\/ 上面这段可显示信息的长度$/;"	m	struct:hostapd_bss_config	access:public
eap_req_id_text_len	src/eapol_auth/eapol_auth_sm.h	/^	size_t eap_req_id_text_len;$/;"	m	struct:eapol_auth_config	access:public
eap_req_id_text_len	src/radius/radius_server.c	/^	size_t eap_req_id_text_len;$/;"	m	struct:radius_server_data	file:	access:public
eap_req_id_text_len	src/radius/radius_server.h	/^	size_t eap_req_id_text_len;$/;"	m	struct:radius_server_conf	access:public
eap_sake_add_attr	src/eap_common/eap_sake_common.c	/^void eap_sake_add_attr(struct wpabuf *buf, u8 type, const u8 *data,$/;"	f	signature:(struct wpabuf *buf, u8 type, const u8 *data, size_t len)
eap_sake_add_attr	src/eap_common/eap_sake_common.h	/^void eap_sake_add_attr(struct wpabuf *buf, u8 type, const u8 *data,$/;"	p	signature:(struct wpabuf *buf, u8 type, const u8 *data, size_t len)
eap_sake_buildReq	src/eap_server/eap_server_sake.c	/^static struct wpabuf * eap_sake_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_sake_build_challenge	src/eap_server/eap_server_sake.c	/^static struct wpabuf * eap_sake_build_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, u8 id)
eap_sake_build_confirm	src/eap_server/eap_server_sake.c	/^static struct wpabuf * eap_sake_build_confirm(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, u8 id)
eap_sake_build_identity	src/eap_server/eap_server_sake.c	/^static struct wpabuf * eap_sake_build_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, u8 id)
eap_sake_build_msg	src/eap_peer/eap_sake.c	/^static struct wpabuf * eap_sake_build_msg(struct eap_sake_data *data,$/;"	f	file:	signature:(struct eap_sake_data *data, int id, size_t length, u8 subtype)
eap_sake_build_msg	src/eap_server/eap_server_sake.c	/^static struct wpabuf * eap_sake_build_msg(struct eap_sake_data *data,$/;"	f	file:	signature:(struct eap_sake_data *data, u8 id, size_t length, u8 subtype)
eap_sake_check	src/eap_server/eap_server_sake.c	/^static Boolean eap_sake_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_sake_compute_mic	src/eap_common/eap_sake_common.c	/^int eap_sake_compute_mic(const u8 *tek_auth,$/;"	f	signature:(const u8 *tek_auth, const u8 *rand_s, const u8 *rand_p, const u8 *serverid, size_t serverid_len, const u8 *peerid, size_t peerid_len, int peer, const u8 *eap, size_t eap_len, const u8 *mic_pos, u8 *mic)
eap_sake_compute_mic	src/eap_common/eap_sake_common.h	/^int eap_sake_compute_mic(const u8 *tek_auth,$/;"	p	signature:(const u8 *tek_auth, const u8 *rand_s, const u8 *rand_p, const u8 *serverid, size_t serverid_len, const u8 *peerid, size_t peerid_len, int peer, const u8 *eap, size_t eap_len, const u8 *mic_pos, u8 *mic)
eap_sake_data	src/eap_peer/eap_sake.c	/^struct eap_sake_data {$/;"	s	file:
eap_sake_data	src/eap_server/eap_server_sake.c	/^struct eap_sake_data {$/;"	s	file:
eap_sake_data::CHALLENGE	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
eap_sake_data::CHALLENGE	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
eap_sake_data::CONFIRM	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
eap_sake_data::CONFIRM	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
eap_sake_data::FAILURE	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
eap_sake_data::FAILURE	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
eap_sake_data::IDENTITY	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
eap_sake_data::IDENTITY	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
eap_sake_data::SUCCESS	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon164	file:
eap_sake_data::SUCCESS	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sake_data::__anon127	file:
eap_sake_data::__anon128::auth	src/eap_server/eap_server_sake.c	/^		u8 auth[EAP_SAKE_TEK_AUTH_LEN];$/;"	m	struct:eap_sake_data::__anon128	file:	access:public
eap_sake_data::__anon128::cipher	src/eap_server/eap_server_sake.c	/^		u8 cipher[EAP_SAKE_TEK_CIPHER_LEN];$/;"	m	struct:eap_sake_data::__anon128	file:	access:public
eap_sake_data::__anon165::auth	src/eap_peer/eap_sake.c	/^		u8 auth[EAP_SAKE_TEK_AUTH_LEN];$/;"	m	struct:eap_sake_data::__anon165	file:	access:public
eap_sake_data::__anon165::cipher	src/eap_peer/eap_sake.c	/^		u8 cipher[EAP_SAKE_TEK_CIPHER_LEN];$/;"	m	struct:eap_sake_data::__anon165	file:	access:public
eap_sake_data::emsk	src/eap_peer/eap_sake.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::emsk	src/eap_server/eap_server_sake.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::msk	src/eap_peer/eap_sake.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::msk	src/eap_server/eap_server_sake.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::peerid	src/eap_peer/eap_sake.c	/^	u8 *peerid;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::peerid	src/eap_server/eap_server_sake.c	/^	u8 *peerid;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::peerid_len	src/eap_peer/eap_sake.c	/^	size_t peerid_len;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::peerid_len	src/eap_server/eap_server_sake.c	/^	size_t peerid_len;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::rand_p	src/eap_peer/eap_sake.c	/^	u8 rand_p[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::rand_p	src/eap_server/eap_server_sake.c	/^	u8 rand_p[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::rand_s	src/eap_peer/eap_sake.c	/^	u8 rand_s[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::rand_s	src/eap_server/eap_server_sake.c	/^	u8 rand_s[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::root_secret_a	src/eap_peer/eap_sake.c	/^	u8 root_secret_a[EAP_SAKE_ROOT_SECRET_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::root_secret_b	src/eap_peer/eap_sake.c	/^	u8 root_secret_b[EAP_SAKE_ROOT_SECRET_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::serverid	src/eap_peer/eap_sake.c	/^	u8 *serverid;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::serverid	src/eap_server/eap_server_sake.c	/^	u8 *serverid;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::serverid_len	src/eap_peer/eap_sake.c	/^	size_t serverid_len;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::serverid_len	src/eap_server/eap_server_sake.c	/^	size_t serverid_len;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::session_id	src/eap_peer/eap_sake.c	/^	u8 session_id;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::session_id	src/eap_server/eap_server_sake.c	/^	u8 session_id;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::session_id_set	src/eap_peer/eap_sake.c	/^	int session_id_set;$/;"	m	struct:eap_sake_data	file:	access:public
eap_sake_data::state	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	m	struct:eap_sake_data	typeref:enum:eap_sake_data::__anon164	file:	access:public
eap_sake_data::state	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	m	struct:eap_sake_data	typeref:enum:eap_sake_data::__anon127	file:	access:public
eap_sake_data::tek	src/eap_peer/eap_sake.c	/^	} tek;$/;"	m	struct:eap_sake_data	typeref:struct:eap_sake_data::__anon165	file:	access:public
eap_sake_data::tek	src/eap_server/eap_server_sake.c	/^	} tek;$/;"	m	struct:eap_sake_data	typeref:struct:eap_sake_data::__anon128	file:	access:public
eap_sake_deinit	src/eap_peer/eap_sake.c	/^static void eap_sake_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sake_deinit	src/eap_peer/eap_sake.c	/^static void eap_sake_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_sake_derive_keys	src/eap_common/eap_sake_common.c	/^void eap_sake_derive_keys(const u8 *root_secret_a, const u8 *root_secret_b,$/;"	f	signature:(const u8 *root_secret_a, const u8 *root_secret_b, const u8 *rand_s, const u8 *rand_p, u8 *tek, u8 *msk, u8 *emsk)
eap_sake_derive_keys	src/eap_common/eap_sake_common.h	/^void eap_sake_derive_keys(const u8 *root_secret_a, const u8 *root_secret_b,$/;"	p	signature:(const u8 *root_secret_a, const u8 *root_secret_b, const u8 *rand_s, const u8 *rand_p, u8 *tek, u8 *msk, u8 *emsk)
eap_sake_getKey	src/eap_peer/eap_sake.c	/^static u8 * eap_sake_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sake_getKey	src/eap_server/eap_server_sake.c	/^static u8 * eap_sake_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sake_get_emsk	src/eap_peer/eap_sake.c	/^static u8 * eap_sake_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sake_get_emsk	src/eap_server/eap_server_sake.c	/^static u8 * eap_sake_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sake_hdr	src/eap_common/eap_sake_common.h	/^struct eap_sake_hdr {$/;"	s
eap_sake_hdr::session_id	src/eap_common/eap_sake_common.h	/^	u8 session_id;$/;"	m	struct:eap_sake_hdr	access:public
eap_sake_hdr::subtype	src/eap_common/eap_sake_common.h	/^	u8 subtype;$/;"	m	struct:eap_sake_hdr	access:public
eap_sake_hdr::version	src/eap_common/eap_sake_common.h	/^	u8 version; \/* EAP_SAKE_VERSION *\/$/;"	m	struct:eap_sake_hdr	access:public
eap_sake_init	src/eap_peer/eap_sake.c	/^static void * eap_sake_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_sake_init	src/eap_server/eap_server_sake.c	/^static void * eap_sake_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_sake_isDone	src/eap_server/eap_server_sake.c	/^static Boolean eap_sake_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sake_isKeyAvailable	src/eap_peer/eap_sake.c	/^static Boolean eap_sake_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sake_isSuccess	src/eap_server/eap_server_sake.c	/^static Boolean eap_sake_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sake_kdf	src/eap_common/eap_sake_common.c	/^static void eap_sake_kdf(const u8 *key, size_t key_len, const char *label,$/;"	f	file:	signature:(const u8 *key, size_t key_len, const char *label, const u8 *data, size_t data_len, const u8 *data2, size_t data2_len, u8 *buf, size_t buf_len)
eap_sake_parse_add_attr	src/eap_common/eap_sake_common.c	/^static int eap_sake_parse_add_attr(struct eap_sake_parse_attr *attr,$/;"	f	file:	signature:(struct eap_sake_parse_attr *attr, const u8 *pos)
eap_sake_parse_attr	src/eap_common/eap_sake_common.h	/^struct eap_sake_parse_attr {$/;"	s
eap_sake_parse_attr::any_id_req	src/eap_common/eap_sake_common.h	/^	const u8 *any_id_req;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::encr_data	src/eap_common/eap_sake_common.h	/^	const u8 *encr_data;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::encr_data_len	src/eap_common/eap_sake_common.h	/^	size_t encr_data_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::iv	src/eap_common/eap_sake_common.h	/^	const u8 *iv;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::iv_len	src/eap_common/eap_sake_common.h	/^	size_t iv_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::mic_p	src/eap_common/eap_sake_common.h	/^	const u8 *mic_p;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::mic_s	src/eap_common/eap_sake_common.h	/^	const u8 *mic_s;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::msk_life	src/eap_common/eap_sake_common.h	/^	const u8 *msk_life;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::next_tmpid	src/eap_common/eap_sake_common.h	/^	const u8 *next_tmpid;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::next_tmpid_len	src/eap_common/eap_sake_common.h	/^	size_t next_tmpid_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::peerid	src/eap_common/eap_sake_common.h	/^	const u8 *peerid;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::peerid_len	src/eap_common/eap_sake_common.h	/^	size_t peerid_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::perm_id_req	src/eap_common/eap_sake_common.h	/^	const u8 *perm_id_req;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::rand_p	src/eap_common/eap_sake_common.h	/^	const u8 *rand_p;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::rand_s	src/eap_common/eap_sake_common.h	/^	const u8 *rand_s;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::serverid	src/eap_common/eap_sake_common.h	/^	const u8 *serverid;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::serverid_len	src/eap_common/eap_sake_common.h	/^	size_t serverid_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::spi_p	src/eap_common/eap_sake_common.h	/^	const u8 *spi_p;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::spi_p_len	src/eap_common/eap_sake_common.h	/^	size_t spi_p_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::spi_s	src/eap_common/eap_sake_common.h	/^	const u8 *spi_s;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attr::spi_s_len	src/eap_common/eap_sake_common.h	/^	size_t spi_s_len;$/;"	m	struct:eap_sake_parse_attr	access:public
eap_sake_parse_attributes	src/eap_common/eap_sake_common.c	/^int eap_sake_parse_attributes(const u8 *buf, size_t len,$/;"	f	signature:(const u8 *buf, size_t len, struct eap_sake_parse_attr *attr)
eap_sake_parse_attributes	src/eap_common/eap_sake_common.h	/^int eap_sake_parse_attributes(const u8 *buf, size_t len,$/;"	p	signature:(const u8 *buf, size_t len, struct eap_sake_parse_attr *attr)
eap_sake_process	src/eap_peer/eap_sake.c	/^static struct wpabuf * eap_sake_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_sake_process	src/eap_server/eap_server_sake.c	/^static void eap_sake_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_sake_process_auth_reject	src/eap_server/eap_server_sake.c	/^static void eap_sake_process_auth_reject(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, const struct wpabuf *respData, const u8 *payload, size_t payloadlen)
eap_sake_process_challenge	src/eap_peer/eap_sake.c	/^static struct wpabuf * eap_sake_process_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_sake_process_challenge	src/eap_server/eap_server_sake.c	/^static void eap_sake_process_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, const struct wpabuf *respData, const u8 *payload, size_t payloadlen)
eap_sake_process_confirm	src/eap_peer/eap_sake.c	/^static struct wpabuf * eap_sake_process_confirm(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_sake_process_confirm	src/eap_server/eap_server_sake.c	/^static void eap_sake_process_confirm(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, const struct wpabuf *respData, const u8 *payload, size_t payloadlen)
eap_sake_process_identity	src/eap_peer/eap_sake.c	/^static struct wpabuf * eap_sake_process_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, struct eap_method_ret *ret, const struct wpabuf *reqData, const u8 *payload, size_t payload_len)
eap_sake_process_identity	src/eap_server/eap_server_sake.c	/^static void eap_sake_process_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sake_data *data, const struct wpabuf *respData, const u8 *payload, size_t payloadlen)
eap_sake_reset	src/eap_server/eap_server_sake.c	/^static void eap_sake_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sake_state	src/eap_peer/eap_sake.c	/^static void eap_sake_state(struct eap_sake_data *data, int state)$/;"	f	file:	signature:(struct eap_sake_data *data, int state)
eap_sake_state	src/eap_server/eap_server_sake.c	/^static void eap_sake_state(struct eap_sake_data *data, int state)$/;"	f	file:	signature:(struct eap_sake_data *data, int state)
eap_sake_state_txt	src/eap_peer/eap_sake.c	/^static const char * eap_sake_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_sake_state_txt	src/eap_server/eap_server_sake.c	/^static const char * eap_sake_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_seq	src/eap_server/eap_server_fast.c	/^	int eap_seq;$/;"	m	struct:eap_fast_data	file:	access:public
eap_server	src/ap/ap_config.h	/^	int eap_server; \/* Use internal EAP server instead of external$/;"	m	struct:hostapd_bss_config	access:public
eap_server	src/eap_server/eap.h	/^	int eap_server;$/;"	m	struct:eap_config	access:public
eap_server	src/eap_server/eap_i.h	/^	int eap_server;$/;"	m	struct:eap_sm	access:public
eap_server	src/eapol_auth/eapol_auth_sm.h	/^	int eap_server;         \/\/ 标志位，代表是否使用内部EAP服务器，0 = 使用外部$/;"	m	struct:eapol_auth_config	access:public
eap_server_aka_prime_register	src/eap_server/eap_methods.h	/^int eap_server_aka_prime_register(void);$/;"	p	signature:(void)
eap_server_aka_prime_register	src/eap_server/eap_server_aka.c	/^int eap_server_aka_prime_register(void)$/;"	f	signature:(void)
eap_server_aka_register	src/eap_server/eap_methods.h	/^int eap_server_aka_register(void);$/;"	p	signature:(void)
eap_server_aka_register	src/eap_server/eap_server_aka.c	/^int eap_server_aka_register(void)$/;"	f	signature:(void)
eap_server_clear_identity	src/eap_server/eap.h	/^void eap_server_clear_identity(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_server_clear_identity	src/eap_server/eap_server.c	/^void eap_server_clear_identity(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_server_fast_register	src/eap_server/eap_methods.h	/^int eap_server_fast_register(void);$/;"	p	signature:(void)
eap_server_fast_register	src/eap_server/eap_server_fast.c	/^int eap_server_fast_register(void)$/;"	f	signature:(void)
eap_server_get_eap_method	src/eap_server/eap_methods.h	/^const struct eap_method * eap_server_get_eap_method(int vendor,$/;"	p	signature:(int vendor, EapType method)
eap_server_get_eap_method	src/eap_server/eap_server_methods.c	/^const struct eap_method * eap_server_get_eap_method(int vendor, EapType method)$/;"	f	signature:(int vendor, EapType method)
eap_server_get_name	src/eap_server/eap_methods.h	/^const char * eap_server_get_name(int vendor, EapType type);$/;"	p	signature:(int vendor, EapType type)
eap_server_get_name	src/eap_server/eap_server_methods.c	/^const char * eap_server_get_name(int vendor, EapType type)$/;"	f	signature:(int vendor, EapType type)
eap_server_get_type	src/eap_server/eap_methods.h	/^EapType eap_server_get_type(const char *name, int *vendor);$/;"	p	signature:(const char *name, int *vendor)
eap_server_get_type	src/eap_server/eap_server_methods.c	/^EapType eap_server_get_type(const char *name, int *vendor)$/;"	f	signature:(const char *name, int *vendor)
eap_server_gpsk_register	src/eap_server/eap_methods.h	/^int eap_server_gpsk_register(void);$/;"	p	signature:(void)
eap_server_gpsk_register	src/eap_server/eap_server_gpsk.c	/^int eap_server_gpsk_register(void)$/;"	f	signature:(void)
eap_server_gtc_register	src/eap_server/eap_methods.h	/^int eap_server_gtc_register(void);$/;"	p	signature:(void)
eap_server_gtc_register	src/eap_server/eap_server_gtc.c	/^int eap_server_gtc_register(void)$/;"	f	signature:(void)
eap_server_identity_register	src/eap_server/eap_methods.h	/^int eap_server_identity_register(void);$/;"	p	signature:(void)
eap_server_identity_register	src/eap_server/eap_server_identity.c	/^int eap_server_identity_register(void)$/;"	f	signature:(void)
eap_server_ikev2_register	src/eap_server/eap_methods.h	/^int eap_server_ikev2_register(void);$/;"	p	signature:(void)
eap_server_ikev2_register	src/eap_server/eap_server_ikev2.c	/^int eap_server_ikev2_register(void)$/;"	f	signature:(void)
eap_server_md5_register	src/eap_server/eap_methods.h	/^int eap_server_md5_register(void);$/;"	p	signature:(void)
eap_server_md5_register	src/eap_server/eap_server_md5.c	/^int eap_server_md5_register(void)$/;"	f	signature:(void)
eap_server_method_alloc	src/eap_server/eap_methods.h	/^struct eap_method * eap_server_method_alloc(int version, int vendor,$/;"	p	signature:(int version, int vendor, EapType method, const char *name)
eap_server_method_alloc	src/eap_server/eap_server_methods.c	/^struct eap_method * eap_server_method_alloc(int version, int vendor,$/;"	f	signature:(int version, int vendor, EapType method, const char *name)
eap_server_method_free	src/eap_server/eap_methods.h	/^void eap_server_method_free(struct eap_method *method);$/;"	p	signature:(struct eap_method *method)
eap_server_method_free	src/eap_server/eap_server_methods.c	/^void eap_server_method_free(struct eap_method *method)$/;"	f	signature:(struct eap_method *method)
eap_server_method_register	src/eap_server/eap_methods.h	/^int eap_server_method_register(struct eap_method *method);$/;"	p	signature:(struct eap_method *method)
eap_server_method_register	src/eap_server/eap_server_methods.c	/^int eap_server_method_register(struct eap_method *method)$/;"	f	signature:(struct eap_method *method)
eap_server_mschapv2_register	src/eap_server/eap_methods.h	/^int eap_server_mschapv2_register(void);$/;"	p	signature:(void)
eap_server_mschapv2_register	src/eap_server/eap_server_mschapv2.c	/^int eap_server_mschapv2_register(void)$/;"	f	signature:(void)
eap_server_pax_register	src/eap_server/eap_methods.h	/^int eap_server_pax_register(void);$/;"	p	signature:(void)
eap_server_pax_register	src/eap_server/eap_server_pax.c	/^int eap_server_pax_register(void)$/;"	f	signature:(void)
eap_server_peap_register	src/eap_server/eap_methods.h	/^int eap_server_peap_register(void);$/;"	p	signature:(void)
eap_server_peap_register	src/eap_server/eap_server_peap.c	/^int eap_server_peap_register(void)$/;"	f	signature:(void)
eap_server_psk_register	src/eap_server/eap_methods.h	/^int eap_server_psk_register(void);$/;"	p	signature:(void)
eap_server_psk_register	src/eap_server/eap_server_psk.c	/^int eap_server_psk_register(void)$/;"	f	signature:(void)
eap_server_pwd_register	src/eap_server/eap_methods.h	/^int eap_server_pwd_register(void);$/;"	p	signature:(void)
eap_server_pwd_register	src/eap_server/eap_server_pwd.c	/^int eap_server_pwd_register(void)$/;"	f	signature:(void)
eap_server_register_methods	hostapd/eap_register.c	/^int eap_server_register_methods(void)$/;"	f	signature:(void)
eap_server_register_methods	hostapd/eap_register.h	/^int eap_server_register_methods(void);$/;"	p	signature:(void)
eap_server_sake_register	src/eap_server/eap_methods.h	/^int eap_server_sake_register(void);$/;"	p	signature:(void)
eap_server_sake_register	src/eap_server/eap_server_sake.c	/^int eap_server_sake_register(void)$/;"	f	signature:(void)
eap_server_sim_register	src/eap_server/eap_methods.h	/^int eap_server_sim_register(void);$/;"	p	signature:(void)
eap_server_sim_register	src/eap_server/eap_server_sim.c	/^int eap_server_sim_register(void)$/;"	f	signature:(void)
eap_server_sm_deinit	src/eap_server/eap.h	/^void eap_server_sm_deinit(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_server_sm_deinit	src/eap_server/eap_server.c	/^void eap_server_sm_deinit(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_server_sm_init	src/eap_server/eap.h	/^struct eap_sm * eap_server_sm_init(void *eapol_ctx,$/;"	p	signature:(void *eapol_ctx, struct eapol_callbacks *eapol_cb, struct eap_config *eap_conf)
eap_server_sm_init	src/eap_server/eap_server.c	/^struct eap_sm * eap_server_sm_init(void *eapol_ctx,$/;"	f	signature:(void *eapol_ctx, struct eapol_callbacks *eapol_cb, struct eap_config *conf)
eap_server_sm_step	src/eap_server/eap.h	/^int eap_server_sm_step(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_server_sm_step	src/eap_server/eap_server.c	/^int eap_server_sm_step(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_server_tls_build_ack	src/eap_server/eap_server_tls_common.c	/^struct wpabuf * eap_server_tls_build_ack(u8 id, int eap_type, int version)$/;"	f	signature:(u8 id, int eap_type, int version)
eap_server_tls_build_ack	src/eap_server/eap_tls_common.h	/^struct wpabuf * eap_server_tls_build_ack(u8 id, int eap_type, int version);$/;"	p	signature:(u8 id, int eap_type, int version)
eap_server_tls_build_msg	src/eap_server/eap_server_tls_common.c	/^struct wpabuf * eap_server_tls_build_msg(struct eap_ssl_data *data,$/;"	f	signature:(struct eap_ssl_data *data, int eap_type, int version, u8 id)
eap_server_tls_build_msg	src/eap_server/eap_tls_common.h	/^struct wpabuf * eap_server_tls_build_msg(struct eap_ssl_data *data,$/;"	p	signature:(struct eap_ssl_data *data, int eap_type, int version, u8 id)
eap_server_tls_derive_key	src/eap_server/eap_server_tls_common.c	/^u8 * eap_server_tls_derive_key(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, char *label, size_t len)
eap_server_tls_derive_key	src/eap_server/eap_tls_common.h	/^u8 * eap_server_tls_derive_key(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, char *label, size_t len)
eap_server_tls_encrypt	src/eap_server/eap_server_tls_common.c	/^struct wpabuf * eap_server_tls_encrypt(struct eap_sm *sm,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const struct wpabuf *plain)
eap_server_tls_encrypt	src/eap_server/eap_tls_common.h	/^struct wpabuf * eap_server_tls_encrypt(struct eap_sm *sm,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const struct wpabuf *plain)
eap_server_tls_free_in_buf	src/eap_server/eap_server_tls_common.c	/^static void eap_server_tls_free_in_buf(struct eap_ssl_data *data)$/;"	f	file:	signature:(struct eap_ssl_data *data)
eap_server_tls_free_in_buf	src/eap_server/eap_server_tls_common.c	/^static void eap_server_tls_free_in_buf(struct eap_ssl_data *data);$/;"	p	file:	signature:(struct eap_ssl_data *data)
eap_server_tls_phase1	src/eap_server/eap_server_tls_common.c	/^int eap_server_tls_phase1(struct eap_sm *sm, struct eap_ssl_data *data)$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_server_tls_phase1	src/eap_server/eap_tls_common.h	/^int eap_server_tls_phase1(struct eap_sm *sm, struct eap_ssl_data *data);$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_server_tls_process	src/eap_server/eap_server_tls_common.c	/^int eap_server_tls_process(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, struct wpabuf *respData, void *priv, int eap_type, int (*proc_version)(struct eap_sm *sm, void *priv, int peer_version), void (*proc_msg)(struct eap_sm *sm, void *priv, const struct wpabuf *respData))
eap_server_tls_process	src/eap_server/eap_tls_common.h	/^int eap_server_tls_process(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, struct wpabuf *respData, void *priv, int eap_type, int (*proc_version)(struct eap_sm *sm, void *priv, int peer_version), void (*proc_msg)(struct eap_sm *sm, void *priv, const struct wpabuf *respData))
eap_server_tls_process_cont	src/eap_server/eap_server_tls_common.c	/^static int eap_server_tls_process_cont(struct eap_ssl_data *data,$/;"	f	file:	signature:(struct eap_ssl_data *data, const u8 *buf, size_t len)
eap_server_tls_process_fragment	src/eap_server/eap_server_tls_common.c	/^static int eap_server_tls_process_fragment(struct eap_ssl_data *data,$/;"	f	file:	signature:(struct eap_ssl_data *data, u8 flags, u32 message_length, const u8 *buf, size_t len)
eap_server_tls_reassemble	src/eap_server/eap_server_tls_common.c	/^static int eap_server_tls_reassemble(struct eap_ssl_data *data, u8 flags,$/;"	f	file:	signature:(struct eap_ssl_data *data, u8 flags, const u8 **pos, size_t *left)
eap_server_tls_register	src/eap_server/eap_methods.h	/^int eap_server_tls_register(void);$/;"	p	signature:(void)
eap_server_tls_register	src/eap_server/eap_server_tls.c	/^int eap_server_tls_register(void)$/;"	f	signature:(void)
eap_server_tls_ssl_deinit	src/eap_server/eap_server_tls_common.c	/^void eap_server_tls_ssl_deinit(struct eap_sm *sm, struct eap_ssl_data *data)$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_server_tls_ssl_deinit	src/eap_server/eap_tls_common.h	/^void eap_server_tls_ssl_deinit(struct eap_sm *sm, struct eap_ssl_data *data);$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data)
eap_server_tls_ssl_init	src/eap_server/eap_server_tls_common.c	/^int eap_server_tls_ssl_init(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	signature:(struct eap_sm *sm, struct eap_ssl_data *data, int verify_peer)
eap_server_tls_ssl_init	src/eap_server/eap_tls_common.h	/^int eap_server_tls_ssl_init(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	p	signature:(struct eap_sm *sm, struct eap_ssl_data *data, int verify_peer)
eap_server_tlv_register	src/eap_server/eap_methods.h	/^int eap_server_tlv_register(void);$/;"	p	signature:(void)
eap_server_tnc_register	src/eap_server/eap_methods.h	/^int eap_server_tnc_register(void);$/;"	p	signature:(void)
eap_server_tnc_register	src/eap_server/eap_server_tnc.c	/^int eap_server_tnc_register(void)$/;"	f	signature:(void)
eap_server_ttls_register	src/eap_server/eap_methods.h	/^int eap_server_ttls_register(void);$/;"	p	signature:(void)
eap_server_ttls_register	src/eap_server/eap_server_ttls.c	/^int eap_server_ttls_register(void)$/;"	f	signature:(void)
eap_server_unregister_methods	src/eap_server/eap_methods.h	/^void eap_server_unregister_methods(void);$/;"	p	signature:(void)
eap_server_unregister_methods	src/eap_server/eap_server_methods.c	/^void eap_server_unregister_methods(void)$/;"	f	signature:(void)
eap_server_vendor_test_register	src/eap_server/eap_methods.h	/^int eap_server_vendor_test_register(void);$/;"	p	signature:(void)
eap_server_vendor_test_register	src/eap_server/eap_server_vendor_test.c	/^int eap_server_vendor_test_register(void)$/;"	f	signature:(void)
eap_server_wsc_register	src/eap_server/eap_methods.h	/^int eap_server_wsc_register(void);$/;"	p	signature:(void)
eap_server_wsc_register	src/eap_server/eap_server_wsc.c	/^int eap_server_wsc_register(void)$/;"	f	signature:(void)
eap_set_config_blob	src/eap_peer/eap.c	/^void eap_set_config_blob(struct eap_sm *sm, struct wpa_config_blob *blob)$/;"	f	signature:(struct eap_sm *sm, struct wpa_config_blob *blob)
eap_set_config_blob	src/eap_peer/eap_i.h	/^void eap_set_config_blob(struct eap_sm *sm, struct wpa_config_blob *blob);$/;"	p	signature:(struct eap_sm *sm, struct wpa_config_blob *blob)
eap_set_fast_reauth	src/eap_peer/eap.c	/^void eap_set_fast_reauth(struct eap_sm *sm, int enabled)$/;"	f	signature:(struct eap_sm *sm, int enabled)
eap_set_fast_reauth	src/eap_peer/eap.h	/^void eap_set_fast_reauth(struct eap_sm *sm, int enabled);$/;"	p	signature:(struct eap_sm *sm, int enabled)
eap_set_force_disabled	src/eap_peer/eap.c	/^void eap_set_force_disabled(struct eap_sm *sm, int disabled)$/;"	f	signature:(struct eap_sm *sm, int disabled)
eap_set_force_disabled	src/eap_peer/eap.h	/^void eap_set_force_disabled(struct eap_sm *sm, int disabled);$/;"	p	signature:(struct eap_sm *sm, int disabled)
eap_set_workaround	src/eap_peer/eap.c	/^void eap_set_workaround(struct eap_sm *sm, unsigned int workaround)$/;"	f	signature:(struct eap_sm *sm, unsigned int workaround)
eap_set_workaround	src/eap_peer/eap.h	/^void eap_set_workaround(struct eap_sm *sm, unsigned int workaround);$/;"	p	signature:(struct eap_sm *sm, unsigned int workaround)
eap_sim_add_mac	src/eap_common/eap_sim_common.c	/^void eap_sim_add_mac(const u8 *k_aut, const u8 *msg, size_t msg_len, u8 *mac,$/;"	f	signature:(const u8 *k_aut, const u8 *msg, size_t msg_len, u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_add_mac	src/eap_common/eap_sim_common.h	/^void eap_sim_add_mac(const u8 *k_aut, const u8 *msg, size_t msg_len, u8 *mac,$/;"	p	signature:(const u8 *k_aut, const u8 *msg, size_t msg_len, u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_add_mac_sha256	src/eap_common/eap_sim_common.c	/^void eap_sim_add_mac_sha256(const u8 *k_aut, const u8 *msg, size_t msg_len,$/;"	f	signature:(const u8 *k_aut, const u8 *msg, size_t msg_len, u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_add_mac_sha256	src/eap_common/eap_sim_common.h	/^void eap_sim_add_mac_sha256(const u8 *k_aut, const u8 *msg, size_t msg_len,$/;"	p	signature:(const u8 *k_aut, const u8 *msg, size_t msg_len, u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_aka_result_ind	src/ap/ap_config.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:hostapd_bss_config	access:public
eap_sim_aka_result_ind	src/eap_server/eap.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:eap_config	access:public
eap_sim_aka_result_ind	src/eap_server/eap_i.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:eap_sm	access:public
eap_sim_aka_result_ind	src/eapol_auth/eapol_auth_sm.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:eapol_auth_config	access:public
eap_sim_aka_result_ind	src/radius/radius_server.c	/^	int eap_sim_aka_result_ind;$/;"	m	struct:radius_server_data	file:	access:public
eap_sim_aka_result_ind	src/radius/radius_server.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:radius_server_conf	access:public
eap_sim_attrs	src/eap_common/eap_sim_common.h	/^struct eap_sim_attrs {$/;"	s
eap_sim_attrs::autn	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::auts	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::bidding	src/eap_common/eap_sim_common.h	/^	const u8 *bidding;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::checkcode	src/eap_common/eap_sim_common.h	/^	const u8 *checkcode;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::checkcode_len	src/eap_common/eap_sim_common.h	/^	size_t checkcode_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::client_error_code	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::counter	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::counter_too_small	src/eap_common/eap_sim_common.h	/^	int counter_too_small;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::encr_data	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::encr_data_len	src/eap_common/eap_sim_common.h	/^	size_t num_chal, version_list_len, encr_data_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::id_req	src/eap_common/eap_sim_common.h	/^	enum eap_sim_id_req id_req;$/;"	m	struct:eap_sim_attrs	typeref:enum:eap_sim_attrs::eap_sim_id_req	access:public
eap_sim_attrs::identity	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::identity_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::iv	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::kdf	src/eap_common/eap_sim_common.h	/^	u16 kdf[EAP_AKA_PRIME_KDF_MAX];$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::kdf_count	src/eap_common/eap_sim_common.h	/^	size_t kdf_count;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::kdf_input	src/eap_common/eap_sim_common.h	/^	const u8 *kdf_input;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::kdf_input_len	src/eap_common/eap_sim_common.h	/^	size_t kdf_input_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::mac	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::next_pseudonym	src/eap_common/eap_sim_common.h	/^	const u8 *next_pseudonym, *next_reauth_id;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::next_pseudonym_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::next_reauth_id	src/eap_common/eap_sim_common.h	/^	const u8 *next_pseudonym, *next_reauth_id;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::next_reauth_id_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::nonce_mt	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::nonce_s	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::notification	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::num_chal	src/eap_common/eap_sim_common.h	/^	size_t num_chal, version_list_len, encr_data_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::rand	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::res	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::res_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::res_len_bits	src/eap_common/eap_sim_common.h	/^	size_t res_len_bits;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::result_ind	src/eap_common/eap_sim_common.h	/^	int result_ind;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::selected_version	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::version_list	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_attrs::version_list_len	src/eap_common/eap_sim_common.h	/^	size_t num_chal, version_list_len, encr_data_len;$/;"	m	struct:eap_sim_attrs	access:public
eap_sim_buildReq	src/eap_server/eap_server_sim.c	/^static struct wpabuf * eap_sim_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_sim_build_challenge	src/eap_server/eap_server_sim.c	/^static struct wpabuf * eap_sim_build_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id)
eap_sim_build_encr	src/eap_server/eap_server_sim.c	/^static int eap_sim_build_encr(struct eap_sm *sm, struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct eap_sim_msg *msg, u16 counter, const u8 *nonce_s)
eap_sim_build_notification	src/eap_server/eap_server_sim.c	/^static struct wpabuf * eap_sim_build_notification(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id)
eap_sim_build_reauth	src/eap_server/eap_server_sim.c	/^static struct wpabuf * eap_sim_build_reauth(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id)
eap_sim_build_start	src/eap_server/eap_server_sim.c	/^static struct wpabuf * eap_sim_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id)
eap_sim_check	src/eap_server/eap_server_sim.c	/^static Boolean eap_sim_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_sim_clear_identities	src/eap_peer/eap_sim.c	/^static void eap_sim_clear_identities(struct eap_sim_data *data, int id)$/;"	f	file:	signature:(struct eap_sim_data *data, int id)
eap_sim_client_error	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_client_error(struct eap_sim_data *data, u8 id,$/;"	f	file:	signature:(struct eap_sim_data *data, u8 id, int err)
eap_sim_data	src/eap_peer/eap_sim.c	/^struct eap_sim_data {$/;"	s	file:
eap_sim_data	src/eap_server/eap_server_sim.c	/^struct eap_sim_data {$/;"	s	file:
eap_sim_data::CHALLENGE	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
eap_sim_data::CONTINUE	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
eap_sim_data::FAILURE	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
eap_sim_data::FAILURE	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
eap_sim_data::NOTIFICATION	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
eap_sim_data::REAUTH	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
eap_sim_data::RESULT_FAILURE	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
eap_sim_data::RESULT_SUCCESS	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
eap_sim_data::START	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
eap_sim_data::SUCCESS	src/eap_peer/eap_sim.c	/^		CONTINUE, RESULT_SUCCESS, RESULT_FAILURE, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon168	file:
eap_sim_data::SUCCESS	src/eap_server/eap_server_sim.c	/^		START, CHALLENGE, REAUTH, NOTIFICATION, SUCCESS, FAILURE$/;"	e	enum:eap_sim_data::__anon130	file:
eap_sim_data::counter	src/eap_peer/eap_sim.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::counter	src/eap_server/eap_server_sim.c	/^	u16 counter;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::counter_too_small	src/eap_peer/eap_sim.c	/^	unsigned int counter, counter_too_small;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::emsk	src/eap_peer/eap_sim.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::emsk	src/eap_server/eap_server_sim.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::k_aut	src/eap_peer/eap_sim.c	/^	u8 k_aut[EAP_SIM_K_AUT_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::k_aut	src/eap_server/eap_server_sim.c	/^	u8 k_aut[EAP_SIM_K_AUT_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::k_encr	src/eap_peer/eap_sim.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::k_encr	src/eap_server/eap_server_sim.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::kc	src/eap_peer/eap_sim.c	/^	u8 kc[3][EAP_SIM_KC_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::kc	src/eap_server/eap_server_sim.c	/^	u8 kc[EAP_SIM_MAX_CHAL][EAP_SIM_KC_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::last_eap_identity	src/eap_peer/eap_sim.c	/^	u8 *last_eap_identity;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::last_eap_identity_len	src/eap_peer/eap_sim.c	/^	size_t last_eap_identity_len;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::min_num_chal	src/eap_peer/eap_sim.c	/^	size_t min_num_chal, num_chal;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::mk	src/eap_peer/eap_sim.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::mk	src/eap_server/eap_server_sim.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::msk	src/eap_peer/eap_sim.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::msk	src/eap_server/eap_server_sim.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::next_pseudonym	src/eap_server/eap_server_sim.c	/^	char *next_pseudonym;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::next_reauth_id	src/eap_server/eap_server_sim.c	/^	char *next_reauth_id;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::nonce_mt	src/eap_peer/eap_sim.c	/^	u8 nonce_mt[EAP_SIM_NONCE_MT_LEN], nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::nonce_mt	src/eap_server/eap_server_sim.c	/^	u8 nonce_mt[EAP_SIM_NONCE_MT_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::nonce_s	src/eap_peer/eap_sim.c	/^	u8 nonce_mt[EAP_SIM_NONCE_MT_LEN], nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::nonce_s	src/eap_server/eap_server_sim.c	/^	u8 nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::notification	src/eap_server/eap_server_sim.c	/^	u16 notification;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::num_chal	src/eap_peer/eap_sim.c	/^	size_t min_num_chal, num_chal;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::num_chal	src/eap_server/eap_server_sim.c	/^	int num_chal;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::num_id_req	src/eap_peer/eap_sim.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::num_notification	src/eap_peer/eap_sim.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::pseudonym	src/eap_peer/eap_sim.c	/^	u8 *pseudonym;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::pseudonym_len	src/eap_peer/eap_sim.c	/^	size_t pseudonym_len;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::rand	src/eap_peer/eap_sim.c	/^	u8 rand[3][GSM_RAND_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::rand	src/eap_server/eap_server_sim.c	/^	u8 rand[EAP_SIM_MAX_CHAL][GSM_RAND_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::reauth	src/eap_peer/eap_sim.c	/^	int reauth;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::reauth	src/eap_server/eap_server_sim.c	/^	struct eap_sim_reauth *reauth;$/;"	m	struct:eap_sim_data	typeref:struct:eap_sim_data::eap_sim_reauth	file:	access:public
eap_sim_data::reauth_id	src/eap_peer/eap_sim.c	/^	u8 *reauth_id;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::reauth_id_len	src/eap_peer/eap_sim.c	/^	size_t reauth_id_len;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::result_ind	src/eap_peer/eap_sim.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::selected_version	src/eap_peer/eap_sim.c	/^	int selected_version;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::sres	src/eap_peer/eap_sim.c	/^	u8 sres[3][EAP_SIM_SRES_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::sres	src/eap_server/eap_server_sim.c	/^	u8 sres[EAP_SIM_MAX_CHAL][EAP_SIM_SRES_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::state	src/eap_peer/eap_sim.c	/^	} state;$/;"	m	struct:eap_sim_data	typeref:enum:eap_sim_data::__anon168	file:	access:public
eap_sim_data::state	src/eap_server/eap_server_sim.c	/^	} state;$/;"	m	struct:eap_sim_data	typeref:enum:eap_sim_data::__anon130	file:	access:public
eap_sim_data::use_result_ind	src/eap_peer/eap_sim.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::use_result_ind	src/eap_server/eap_server_sim.c	/^	int use_result_ind;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::ver_list	src/eap_peer/eap_sim.c	/^	u8 *ver_list;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_data::ver_list_len	src/eap_peer/eap_sim.c	/^	size_t ver_list_len;$/;"	m	struct:eap_sim_data	file:	access:public
eap_sim_db	src/ap/ap_config.h	/^	char *eap_sim_db;$/;"	m	struct:hostapd_bss_config	access:public
eap_sim_db_add_pending	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_add_pending(struct eap_sim_db_data *data,$/;"	f	file:	signature:(struct eap_sim_db_data *data, struct eap_sim_db_pending *entry)
eap_sim_db_add_pseudonym	src/eap_server/eap_sim_db.c	/^int eap_sim_db_add_pseudonym(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, char *pseudonym)
eap_sim_db_add_pseudonym	src/eap_server/eap_sim_db.h	/^int eap_sim_db_add_pseudonym(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, char *pseudonym)
eap_sim_db_add_reauth	src/eap_server/eap_sim_db.c	/^int eap_sim_db_add_reauth(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, char *reauth_id, u16 counter, const u8 *mk)
eap_sim_db_add_reauth	src/eap_server/eap_sim_db.h	/^int eap_sim_db_add_reauth(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, char *reauth_id, u16 counter, const u8 *mk)
eap_sim_db_add_reauth_data	src/eap_server/eap_sim_db.c	/^eap_sim_db_add_reauth_data(struct eap_sim_db_data *data, const u8 *identity,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const u8 *identity, size_t identity_len, char *reauth_id, u16 counter)
eap_sim_db_add_reauth_prime	src/eap_server/eap_sim_db.c	/^int eap_sim_db_add_reauth_prime(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, char *reauth_id, u16 counter, const u8 *k_encr, const u8 *k_aut, const u8 *k_re)
eap_sim_db_add_reauth_prime	src/eap_server/eap_sim_db.h	/^int eap_sim_db_add_reauth_prime(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, char *reauth_id, u16 counter, const u8 *k_encr, const u8 *k_aut, const u8 *k_re)
eap_sim_db_aka_resp_auth	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_aka_resp_auth(struct eap_sim_db_data *data,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const char *imsi, char *buf)
eap_sim_db_close_socket	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_close_socket(struct eap_sim_db_data *data)$/;"	f	file:	signature:(struct eap_sim_db_data *data)
eap_sim_db_data	src/eap_server/eap_sim_db.c	/^struct eap_sim_db_data {$/;"	s	file:
eap_sim_db_data::ctx	src/eap_server/eap_sim_db.c	/^	void *ctx;$/;"	m	struct:eap_sim_db_data	file:	access:public
eap_sim_db_data::fname	src/eap_server/eap_sim_db.c	/^	char *fname;$/;"	m	struct:eap_sim_db_data	file:	access:public
eap_sim_db_data::get_complete_cb	src/eap_server/eap_sim_db.c	/^	void (*get_complete_cb)(void *ctx, void *session_ctx);$/;"	m	struct:eap_sim_db_data	file:	access:public
eap_sim_db_data::local_sock	src/eap_server/eap_sim_db.c	/^	char *local_sock;$/;"	m	struct:eap_sim_db_data	file:	access:public
eap_sim_db_data::pending	src/eap_server/eap_sim_db.c	/^	struct eap_sim_db_pending *pending;$/;"	m	struct:eap_sim_db_data	typeref:struct:eap_sim_db_data::eap_sim_db_pending	file:	access:public
eap_sim_db_data::pseudonyms	src/eap_server/eap_sim_db.c	/^	struct eap_sim_pseudonym *pseudonyms;$/;"	m	struct:eap_sim_db_data	typeref:struct:eap_sim_db_data::eap_sim_pseudonym	file:	access:public
eap_sim_db_data::reauths	src/eap_server/eap_sim_db.c	/^	struct eap_sim_reauth *reauths;$/;"	m	struct:eap_sim_db_data	typeref:struct:eap_sim_db_data::eap_sim_reauth	file:	access:public
eap_sim_db_data::sock	src/eap_server/eap_sim_db.c	/^	int sock;$/;"	m	struct:eap_sim_db_data	file:	access:public
eap_sim_db_deinit	src/eap_server/eap_sim_db.c	/^void eap_sim_db_deinit(void *priv)$/;"	f	signature:(void *priv)
eap_sim_db_deinit	src/eap_server/eap_sim_db.h	/^void eap_sim_db_deinit(void *priv);$/;"	p	signature:(void *priv)
eap_sim_db_expire_pending	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_expire_pending(struct eap_sim_db_data *data)$/;"	f	file:	signature:(struct eap_sim_db_data *data)
eap_sim_db_free_pseudonym	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_free_pseudonym(struct eap_sim_pseudonym *p)$/;"	f	file:	signature:(struct eap_sim_pseudonym *p)
eap_sim_db_free_reauth	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_free_reauth(struct eap_sim_reauth *r)$/;"	f	file:	signature:(struct eap_sim_reauth *r)
eap_sim_db_get_aka_auth	src/eap_server/eap_sim_db.c	/^int eap_sim_db_get_aka_auth(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, u8 *_rand, u8 *autn, u8 *ik, u8 *ck, u8 *res, size_t *res_len, void *cb_session_ctx)
eap_sim_db_get_aka_auth	src/eap_server/eap_sim_db.h	/^int eap_sim_db_get_aka_auth(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, u8 *_rand, u8 *autn, u8 *ik, u8 *ck, u8 *res, size_t *res_len, void *cb_session_ctx)
eap_sim_db_get_gsm_triplets	src/eap_server/eap_sim_db.c	/^int eap_sim_db_get_gsm_triplets(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, int max_chal, u8 *_rand, u8 *kc, u8 *sres, void *cb_session_ctx)
eap_sim_db_get_gsm_triplets	src/eap_server/eap_sim_db.h	/^int eap_sim_db_get_gsm_triplets(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, int max_chal, u8 *_rand, u8 *kc, u8 *sres, void *cb_session_ctx)
eap_sim_db_get_next	src/eap_server/eap_sim_db.c	/^static char * eap_sim_db_get_next(struct eap_sim_db_data *data, char prefix)$/;"	f	file:	signature:(struct eap_sim_db_data *data, char prefix)
eap_sim_db_get_next_pseudonym	src/eap_server/eap_sim_db.c	/^char * eap_sim_db_get_next_pseudonym(void *priv, enum eap_sim_db_method method)$/;"	f	signature:(void *priv, enum eap_sim_db_method method)
eap_sim_db_get_next_pseudonym	src/eap_server/eap_sim_db.h	/^char * eap_sim_db_get_next_pseudonym(void *priv,$/;"	p	signature:(void *priv, enum eap_sim_db_method method)
eap_sim_db_get_next_reauth_id	src/eap_server/eap_sim_db.c	/^char * eap_sim_db_get_next_reauth_id(void *priv, enum eap_sim_db_method method)$/;"	f	signature:(void *priv, enum eap_sim_db_method method)
eap_sim_db_get_next_reauth_id	src/eap_server/eap_sim_db.h	/^char * eap_sim_db_get_next_reauth_id(void *priv,$/;"	p	signature:(void *priv, enum eap_sim_db_method method)
eap_sim_db_get_pending	src/eap_server/eap_sim_db.c	/^eap_sim_db_get_pending(struct eap_sim_db_data *data, const u8 *imsi,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const u8 *imsi, size_t imsi_len, int aka)
eap_sim_db_get_permanent	src/eap_server/eap_sim_db.c	/^const u8 * eap_sim_db_get_permanent(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, size_t *len)
eap_sim_db_get_permanent	src/eap_server/eap_sim_db.h	/^const u8 * eap_sim_db_get_permanent(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, size_t *len)
eap_sim_db_get_pseudonym	src/eap_server/eap_sim_db.c	/^eap_sim_db_get_pseudonym(struct eap_sim_db_data *data, const u8 *identity,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const u8 *identity, size_t identity_len)
eap_sim_db_get_pseudonym_id	src/eap_server/eap_sim_db.c	/^eap_sim_db_get_pseudonym_id(struct eap_sim_db_data *data, const u8 *identity,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const u8 *identity, size_t identity_len)
eap_sim_db_get_reauth	src/eap_server/eap_sim_db.c	/^eap_sim_db_get_reauth(struct eap_sim_db_data *data, const u8 *identity,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const u8 *identity, size_t identity_len)
eap_sim_db_get_reauth_entry	src/eap_server/eap_sim_db.c	/^eap_sim_db_get_reauth_entry(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len)
eap_sim_db_get_reauth_entry	src/eap_server/eap_sim_db.h	/^eap_sim_db_get_reauth_entry(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len)
eap_sim_db_get_reauth_id	src/eap_server/eap_sim_db.c	/^eap_sim_db_get_reauth_id(struct eap_sim_db_data *data, const u8 *identity,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const u8 *identity, size_t identity_len)
eap_sim_db_identity_known	src/eap_server/eap_sim_db.c	/^int eap_sim_db_identity_known(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len)
eap_sim_db_identity_known	src/eap_server/eap_sim_db.h	/^int eap_sim_db_identity_known(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len)
eap_sim_db_init	src/eap_server/eap_sim_db.c	/^void * eap_sim_db_init(const char *config,$/;"	f	signature:(const char *config, void (*get_complete_cb)(void *ctx, void *session_ctx), void *ctx)
eap_sim_db_init	src/eap_server/eap_sim_db.h	/^void * eap_sim_db_init(const char *config,$/;"	p	signature:(const char *config, void (*get_complete_cb)(void *ctx, void *session_ctx), void *ctx)
eap_sim_db_method	src/eap_server/eap_sim_db.h	/^enum eap_sim_db_method {$/;"	g
eap_sim_db_open_socket	src/eap_server/eap_sim_db.c	/^static int eap_sim_db_open_socket(struct eap_sim_db_data *data)$/;"	f	file:	signature:(struct eap_sim_db_data *data)
eap_sim_db_pending	src/eap_server/eap_sim_db.c	/^struct eap_sim_db_pending {$/;"	s	file:
eap_sim_db_pending::FAILURE	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sim_db_pending::__anon148	file:
eap_sim_db_pending::PENDING	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sim_db_pending::__anon148	file:
eap_sim_db_pending::SUCCESS	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	e	enum:eap_sim_db_pending::__anon148	file:
eap_sim_db_pending::__anon149::__anon150::kc	src/eap_server/eap_sim_db.c	/^			u8 kc[EAP_SIM_MAX_CHAL][EAP_SIM_KC_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
eap_sim_db_pending::__anon149::__anon150::num_chal	src/eap_server/eap_sim_db.c	/^			int num_chal;$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
eap_sim_db_pending::__anon149::__anon150::rand	src/eap_server/eap_sim_db.c	/^			u8 rand[EAP_SIM_MAX_CHAL][GSM_RAND_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
eap_sim_db_pending::__anon149::__anon150::sres	src/eap_server/eap_sim_db.c	/^			u8 sres[EAP_SIM_MAX_CHAL][EAP_SIM_SRES_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
eap_sim_db_pending::__anon149::__anon151::autn	src/eap_server/eap_sim_db.c	/^			u8 autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::__anon151::ck	src/eap_server/eap_sim_db.c	/^			u8 ck[EAP_AKA_CK_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::__anon151::ik	src/eap_server/eap_sim_db.c	/^			u8 ik[EAP_AKA_IK_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::__anon151::rand	src/eap_server/eap_sim_db.c	/^			u8 rand[EAP_AKA_RAND_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::__anon151::res	src/eap_server/eap_sim_db.c	/^			u8 res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::__anon151::res_len	src/eap_server/eap_sim_db.c	/^			size_t res_len;$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::aka	src/eap_server/eap_sim_db.c	/^		} aka;$/;"	m	union:eap_sim_db_pending::__anon149	typeref:struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
eap_sim_db_pending::__anon149::sim	src/eap_server/eap_sim_db.c	/^		} sim;$/;"	m	union:eap_sim_db_pending::__anon149	typeref:struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
eap_sim_db_pending::aka	src/eap_server/eap_sim_db.c	/^	int aka;$/;"	m	struct:eap_sim_db_pending	file:	access:public
eap_sim_db_pending::cb_session_ctx	src/eap_server/eap_sim_db.c	/^	void *cb_session_ctx;$/;"	m	struct:eap_sim_db_pending	file:	access:public
eap_sim_db_pending::imsi	src/eap_server/eap_sim_db.c	/^	u8 imsi[20];$/;"	m	struct:eap_sim_db_pending	file:	access:public
eap_sim_db_pending::imsi_len	src/eap_server/eap_sim_db.c	/^	size_t imsi_len;$/;"	m	struct:eap_sim_db_pending	file:	access:public
eap_sim_db_pending::next	src/eap_server/eap_sim_db.c	/^	struct eap_sim_db_pending *next;$/;"	m	struct:eap_sim_db_pending	typeref:struct:eap_sim_db_pending::eap_sim_db_pending	file:	access:public
eap_sim_db_pending::state	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	m	struct:eap_sim_db_pending	typeref:enum:eap_sim_db_pending::__anon148	file:	access:public
eap_sim_db_pending::timestamp	src/eap_server/eap_sim_db.c	/^	struct os_time timestamp;$/;"	m	struct:eap_sim_db_pending	typeref:struct:eap_sim_db_pending::os_time	file:	access:public
eap_sim_db_pending::u	src/eap_server/eap_sim_db.c	/^	} u;$/;"	m	struct:eap_sim_db_pending	typeref:union:eap_sim_db_pending::__anon149	file:	access:public
eap_sim_db_priv	src/ap/hostapd.h	/^	void *eap_sim_db_priv;$/;"	m	struct:hostapd_data	access:public
eap_sim_db_priv	src/eap_server/eap.h	/^	void *eap_sim_db_priv;$/;"	m	struct:eap_config	access:public
eap_sim_db_priv	src/eap_server/eap_i.h	/^	void *eap_sim_db_priv;$/;"	m	struct:eap_sm	access:public
eap_sim_db_priv	src/eapol_auth/eapol_auth_sm.h	/^	void *eap_sim_db_priv;$/;"	m	struct:eapol_auth_config	access:public
eap_sim_db_priv	src/radius/radius_server.c	/^	void *eap_sim_db_priv;$/;"	m	struct:radius_server_data	file:	access:public
eap_sim_db_priv	src/radius/radius_server.h	/^	void *eap_sim_db_priv;$/;"	m	struct:radius_server_conf	access:public
eap_sim_db_receive	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
eap_sim_db_remove_reauth	src/eap_server/eap_sim_db.c	/^void eap_sim_db_remove_reauth(void *priv, struct eap_sim_reauth *reauth)$/;"	f	signature:(void *priv, struct eap_sim_reauth *reauth)
eap_sim_db_remove_reauth	src/eap_server/eap_sim_db.h	/^void eap_sim_db_remove_reauth(void *priv, struct eap_sim_reauth *reauth);$/;"	p	signature:(void *priv, struct eap_sim_reauth *reauth)
eap_sim_db_resynchronize	src/eap_server/eap_sim_db.c	/^int eap_sim_db_resynchronize(void *priv, const u8 *identity,$/;"	f	signature:(void *priv, const u8 *identity, size_t identity_len, const u8 *auts, const u8 *_rand)
eap_sim_db_resynchronize	src/eap_server/eap_sim_db.h	/^int eap_sim_db_resynchronize(void *priv, const u8 *identity,$/;"	p	signature:(void *priv, const u8 *identity, size_t identity_len, const u8 *auts, const u8 *_rand)
eap_sim_db_send	src/eap_server/eap_sim_db.c	/^static int eap_sim_db_send(struct eap_sim_db_data *data, const char *msg,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const char *msg, size_t len)
eap_sim_db_sim_resp_auth	src/eap_server/eap_sim_db.c	/^static void eap_sim_db_sim_resp_auth(struct eap_sim_db_data *data,$/;"	f	file:	signature:(struct eap_sim_db_data *data, const char *imsi, char *buf)
eap_sim_deinit	src/eap_peer/eap_sim.c	/^static void eap_sim_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_deinit_for_reauth	src/eap_peer/eap_sim.c	/^static void eap_sim_deinit_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_derive_keys	src/eap_common/eap_sim_common.c	/^int eap_sim_derive_keys(const u8 *mk, u8 *k_encr, u8 *k_aut, u8 *msk, u8 *emsk)$/;"	f	signature:(const u8 *mk, u8 *k_encr, u8 *k_aut, u8 *msk, u8 *emsk)
eap_sim_derive_keys	src/eap_common/eap_sim_common.h	/^int eap_sim_derive_keys(const u8 *mk, u8 *k_encr, u8 *k_aut, u8 *msk,$/;"	p	signature:(const u8 *mk, u8 *k_encr, u8 *k_aut, u8 *msk, u8 *emsk)
eap_sim_derive_keys_reauth	src/eap_common/eap_sim_common.c	/^int eap_sim_derive_keys_reauth(u16 _counter,$/;"	f	signature:(u16 _counter, const u8 *identity, size_t identity_len, const u8 *nonce_s, const u8 *mk, u8 *msk, u8 *emsk)
eap_sim_derive_keys_reauth	src/eap_common/eap_sim_common.h	/^int eap_sim_derive_keys_reauth(u16 _counter,$/;"	p	signature:(u16 _counter, const u8 *identity, size_t identity_len, const u8 *nonce_s, const u8 *mk, u8 *msk, u8 *emsk)
eap_sim_derive_mk	src/eap_common/eap_sim_common.c	/^void eap_sim_derive_mk(const u8 *identity, size_t identity_len,$/;"	f	signature:(const u8 *identity, size_t identity_len, const u8 *nonce_mt, u16 selected_version, const u8 *ver_list, size_t ver_list_len, int num_chal, const u8 *kc, u8 *mk)
eap_sim_derive_mk	src/eap_common/eap_sim_common.h	/^void eap_sim_derive_mk(const u8 *identity, size_t identity_len,$/;"	p	signature:(const u8 *identity, size_t identity_len, const u8 *nonce_mt, u16 selected_version, const u8 *ver_list, size_t ver_list_len, int num_chal, const u8 *kc, u8 *mk)
eap_sim_getKey	src/eap_peer/eap_sim.c	/^static u8 * eap_sim_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sim_getKey	src/eap_server/eap_server_sim.c	/^static u8 * eap_sim_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sim_get_emsk	src/eap_peer/eap_sim.c	/^static u8 * eap_sim_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sim_get_emsk	src/eap_server/eap_server_sim.c	/^static u8 * eap_sim_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sim_get_identity	src/eap_peer/eap_sim.c	/^static const u8 * eap_sim_get_identity(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_sim_gsm_auth	src/eap_peer/eap_sim.c	/^static int eap_sim_gsm_auth(struct eap_sm *sm, struct eap_sim_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data)
eap_sim_has_reauth_data	src/eap_peer/eap_sim.c	/^static Boolean eap_sim_has_reauth_data(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_id_req	src/eap_common/eap_sim_common.h	/^enum eap_sim_id_req {$/;"	g
eap_sim_init	src/eap_peer/eap_sim.c	/^static void * eap_sim_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_sim_init	src/eap_server/eap_server_sim.c	/^static void * eap_sim_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_sim_init_for_reauth	src/eap_peer/eap_sim.c	/^static void * eap_sim_init_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_isDone	src/eap_server/eap_server_sim.c	/^static Boolean eap_sim_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_isKeyAvailable	src/eap_peer/eap_sim.c	/^static Boolean eap_sim_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_isSuccess	src/eap_server/eap_server_sim.c	/^static Boolean eap_sim_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_learn_ids	src/eap_peer/eap_sim.c	/^static int eap_sim_learn_ids(struct eap_sm *sm, struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct eap_sim_attrs *attr)
eap_sim_msg	src/eap_common/eap_sim_common.c	/^struct eap_sim_msg {$/;"	s	file:
eap_sim_msg::buf	src/eap_common/eap_sim_common.c	/^	struct wpabuf *buf;$/;"	m	struct:eap_sim_msg	typeref:struct:eap_sim_msg::wpabuf	file:	access:public
eap_sim_msg::encr	src/eap_common/eap_sim_common.c	/^	size_t mac, iv, encr; \/* index from buf *\/$/;"	m	struct:eap_sim_msg	file:	access:public
eap_sim_msg::iv	src/eap_common/eap_sim_common.c	/^	size_t mac, iv, encr; \/* index from buf *\/$/;"	m	struct:eap_sim_msg	file:	access:public
eap_sim_msg::mac	src/eap_common/eap_sim_common.c	/^	size_t mac, iv, encr; \/* index from buf *\/$/;"	m	struct:eap_sim_msg	file:	access:public
eap_sim_msg::type	src/eap_common/eap_sim_common.c	/^	int type;$/;"	m	struct:eap_sim_msg	file:	access:public
eap_sim_msg_add	src/eap_common/eap_sim_common.c	/^u8 * eap_sim_msg_add(struct eap_sim_msg *msg, u8 attr, u16 value,$/;"	f	signature:(struct eap_sim_msg *msg, u8 attr, u16 value, const u8 *data, size_t len)
eap_sim_msg_add	src/eap_common/eap_sim_common.h	/^u8 * eap_sim_msg_add(struct eap_sim_msg *msg, u8 attr,$/;"	p	signature:(struct eap_sim_msg *msg, u8 attr, u16 value, const u8 *data, size_t len)
eap_sim_msg_add_encr_end	src/eap_common/eap_sim_common.c	/^int eap_sim_msg_add_encr_end(struct eap_sim_msg *msg, u8 *k_encr, int attr_pad)$/;"	f	signature:(struct eap_sim_msg *msg, u8 *k_encr, int attr_pad)
eap_sim_msg_add_encr_end	src/eap_common/eap_sim_common.h	/^int eap_sim_msg_add_encr_end(struct eap_sim_msg *msg, u8 *k_encr,$/;"	p	signature:(struct eap_sim_msg *msg, u8 *k_encr, int attr_pad)
eap_sim_msg_add_encr_start	src/eap_common/eap_sim_common.c	/^int eap_sim_msg_add_encr_start(struct eap_sim_msg *msg, u8 attr_iv,$/;"	f	signature:(struct eap_sim_msg *msg, u8 attr_iv, u8 attr_encr)
eap_sim_msg_add_encr_start	src/eap_common/eap_sim_common.h	/^int eap_sim_msg_add_encr_start(struct eap_sim_msg *msg, u8 attr_iv,$/;"	p	signature:(struct eap_sim_msg *msg, u8 attr_iv, u8 attr_encr)
eap_sim_msg_add_full	src/eap_common/eap_sim_common.c	/^u8 * eap_sim_msg_add_full(struct eap_sim_msg *msg, u8 attr,$/;"	f	signature:(struct eap_sim_msg *msg, u8 attr, const u8 *data, size_t len)
eap_sim_msg_add_full	src/eap_common/eap_sim_common.h	/^u8 * eap_sim_msg_add_full(struct eap_sim_msg *msg, u8 attr,$/;"	p	signature:(struct eap_sim_msg *msg, u8 attr, const u8 *data, size_t len)
eap_sim_msg_add_mac	src/eap_common/eap_sim_common.c	/^u8 * eap_sim_msg_add_mac(struct eap_sim_msg *msg, u8 attr)$/;"	f	signature:(struct eap_sim_msg *msg, u8 attr)
eap_sim_msg_add_mac	src/eap_common/eap_sim_common.h	/^u8 * eap_sim_msg_add_mac(struct eap_sim_msg *msg, u8 attr);$/;"	p	signature:(struct eap_sim_msg *msg, u8 attr)
eap_sim_msg_finish	src/eap_common/eap_sim_common.c	/^struct wpabuf * eap_sim_msg_finish(struct eap_sim_msg *msg, const u8 *k_aut,$/;"	f	signature:(struct eap_sim_msg *msg, const u8 *k_aut, const u8 *extra, size_t extra_len)
eap_sim_msg_finish	src/eap_common/eap_sim_common.h	/^struct wpabuf * eap_sim_msg_finish(struct eap_sim_msg *msg, const u8 *k_aut,$/;"	p	signature:(struct eap_sim_msg *msg, const u8 *k_aut, const u8 *extra, size_t extra_len)
eap_sim_msg_free	src/eap_common/eap_sim_common.c	/^void eap_sim_msg_free(struct eap_sim_msg *msg)$/;"	f	signature:(struct eap_sim_msg *msg)
eap_sim_msg_free	src/eap_common/eap_sim_common.h	/^void eap_sim_msg_free(struct eap_sim_msg *msg);$/;"	p	signature:(struct eap_sim_msg *msg)
eap_sim_msg_init	src/eap_common/eap_sim_common.c	/^struct eap_sim_msg * eap_sim_msg_init(int code, int id, int type, int subtype)$/;"	f	signature:(int code, int id, int type, int subtype)
eap_sim_msg_init	src/eap_common/eap_sim_common.h	/^struct eap_sim_msg * eap_sim_msg_init(int code, int id, int type, int subtype);$/;"	p	signature:(int code, int id, int type, int subtype)
eap_sim_parse_attr	src/eap_common/eap_sim_common.c	/^int eap_sim_parse_attr(const u8 *start, const u8 *end,$/;"	f	signature:(const u8 *start, const u8 *end, struct eap_sim_attrs *attr, int aka, int encr)
eap_sim_parse_attr	src/eap_common/eap_sim_common.h	/^int eap_sim_parse_attr(const u8 *start, const u8 *end,$/;"	p	signature:(const u8 *start, const u8 *end, struct eap_sim_attrs *attr, int aka, int encr)
eap_sim_parse_encr	src/eap_common/eap_sim_common.c	/^u8 * eap_sim_parse_encr(const u8 *k_encr, const u8 *encr_data,$/;"	f	signature:(const u8 *k_encr, const u8 *encr_data, size_t encr_data_len, const u8 *iv, struct eap_sim_attrs *attr, int aka)
eap_sim_parse_encr	src/eap_common/eap_sim_common.h	/^u8 * eap_sim_parse_encr(const u8 *k_encr, const u8 *encr_data,$/;"	p	signature:(const u8 *k_encr, const u8 *encr_data, size_t encr_data_len, const u8 *iv, struct eap_sim_attrs *attr, int aka)
eap_sim_prf	src/eap_common/eap_sim_common.c	/^static int eap_sim_prf(const u8 *key, u8 *x, size_t xlen)$/;"	f	file:	signature:(const u8 *key, u8 *x, size_t xlen)
eap_sim_process	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_sim_process	src/eap_server/eap_server_sim.c	/^static void eap_sim_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_sim_process_challenge	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_process_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_sim_process_challenge	src/eap_server/eap_server_sim.c	/^static void eap_sim_process_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_sim_process_client_error	src/eap_server/eap_server_sim.c	/^static void eap_sim_process_client_error(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_sim_process_notification	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_process_notification($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_sim_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_sim_process_notification	src/eap_server/eap_server_sim.c	/^static void eap_sim_process_notification(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_sim_process_notification_auth	src/eap_peer/eap_sim.c	/^static int eap_sim_process_notification_auth(struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sim_data *data, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_sim_process_notification_reauth	src/eap_peer/eap_sim.c	/^static int eap_sim_process_notification_reauth(struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sim_data *data, struct eap_sim_attrs *attr)
eap_sim_process_reauth	src/eap_server/eap_server_sim.c	/^static void eap_sim_process_reauth(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_sim_process_reauthentication	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_process_reauthentication($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_sim_data *data, u8 id, const struct wpabuf *reqData, struct eap_sim_attrs *attr)
eap_sim_process_start	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_process_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id, struct eap_sim_attrs *attr)
eap_sim_process_start	src/eap_server/eap_server_sim.c	/^static void eap_sim_process_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, struct wpabuf *respData, struct eap_sim_attrs *attr)
eap_sim_pseudonym	src/eap_server/eap_sim_db.c	/^struct eap_sim_pseudonym {$/;"	s	file:
eap_sim_pseudonym::identity	src/eap_server/eap_sim_db.c	/^	u8 *identity;$/;"	m	struct:eap_sim_pseudonym	file:	access:public
eap_sim_pseudonym::identity_len	src/eap_server/eap_sim_db.c	/^	size_t identity_len;$/;"	m	struct:eap_sim_pseudonym	file:	access:public
eap_sim_pseudonym::next	src/eap_server/eap_sim_db.c	/^	struct eap_sim_pseudonym *next;$/;"	m	struct:eap_sim_pseudonym	typeref:struct:eap_sim_pseudonym::eap_sim_pseudonym	file:	access:public
eap_sim_pseudonym::pseudonym	src/eap_server/eap_sim_db.c	/^	char *pseudonym;$/;"	m	struct:eap_sim_pseudonym	file:	access:public
eap_sim_reauth	src/eap_server/eap_sim_db.h	/^struct eap_sim_reauth {$/;"	s
eap_sim_reauth::aka_prime	src/eap_server/eap_sim_db.h	/^	int aka_prime;$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::counter	src/eap_server/eap_sim_db.h	/^	u16 counter;$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::identity	src/eap_server/eap_sim_db.h	/^	u8 *identity;$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::identity_len	src/eap_server/eap_sim_db.h	/^	size_t identity_len;$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::k_aut	src/eap_server/eap_sim_db.h	/^	u8 k_aut[EAP_AKA_PRIME_K_AUT_LEN];$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::k_encr	src/eap_server/eap_sim_db.h	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::k_re	src/eap_server/eap_sim_db.h	/^	u8 k_re[EAP_AKA_PRIME_K_RE_LEN];$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::mk	src/eap_server/eap_sim_db.h	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_reauth::next	src/eap_server/eap_sim_db.h	/^	struct eap_sim_reauth *next;$/;"	m	struct:eap_sim_reauth	typeref:struct:eap_sim_reauth::eap_sim_reauth	access:public
eap_sim_reauth::reauth_id	src/eap_server/eap_sim_db.h	/^	char *reauth_id;$/;"	m	struct:eap_sim_reauth	access:public
eap_sim_report_notification	src/eap_common/eap_sim_common.c	/^void eap_sim_report_notification(void *msg_ctx, int notification, int aka)$/;"	f	signature:(void *msg_ctx, int notification, int aka)
eap_sim_report_notification	src/eap_common/eap_sim_common.h	/^void eap_sim_report_notification(void *msg_ctx, int notification, int aka);$/;"	p	signature:(void *msg_ctx, int notification, int aka)
eap_sim_reset	src/eap_server/eap_server_sim.c	/^static void eap_sim_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_sim_response_challenge	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_response_challenge(struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sim_data *data, u8 id)
eap_sim_response_notification	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_response_notification(struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sim_data *data, u8 id, u16 notification)
eap_sim_response_reauth	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_response_reauth(struct eap_sim_data *data,$/;"	f	file:	signature:(struct eap_sim_data *data, u8 id, int counter_too_small, const u8 *nonce_s)
eap_sim_response_start	src/eap_peer/eap_sim.c	/^static struct wpabuf * eap_sim_response_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_sim_data *data, u8 id, enum eap_sim_id_req id_req)
eap_sim_state	src/eap_peer/eap_sim.c	/^static void eap_sim_state(struct eap_sim_data *data, int state)$/;"	f	file:	signature:(struct eap_sim_data *data, int state)
eap_sim_state	src/eap_server/eap_server_sim.c	/^static void eap_sim_state(struct eap_sim_data *data, int state)$/;"	f	file:	signature:(struct eap_sim_data *data, int state)
eap_sim_state_txt	src/eap_peer/eap_sim.c	/^static const char * eap_sim_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_sim_state_txt	src/eap_server/eap_server_sim.c	/^static const char * eap_sim_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_sim_supported_ver	src/eap_peer/eap_sim.c	/^static int eap_sim_supported_ver(int version)$/;"	f	file:	signature:(int version)
eap_sim_supported_ver	src/eap_server/eap_server_sim.c	/^static int eap_sim_supported_ver(struct eap_sim_data *data, int version)$/;"	f	file:	signature:(struct eap_sim_data *data, int version)
eap_sim_verify_mac	src/eap_common/eap_sim_common.c	/^int eap_sim_verify_mac(const u8 *k_aut, const struct wpabuf *req,$/;"	f	signature:(const u8 *k_aut, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_verify_mac	src/eap_common/eap_sim_common.h	/^int eap_sim_verify_mac(const u8 *k_aut, const struct wpabuf *req,$/;"	p	signature:(const u8 *k_aut, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_verify_mac_sha256	src/eap_common/eap_sim_common.c	/^int eap_sim_verify_mac_sha256(const u8 *k_aut, const struct wpabuf *req,$/;"	f	signature:(const u8 *k_aut, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_verify_mac_sha256	src/eap_common/eap_sim_common.h	/^int eap_sim_verify_mac_sha256(const u8 *k_aut, const struct wpabuf *req,$/;"	p	signature:(const u8 *k_aut, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_sim_verify_mac_sha256	src/eap_common/eap_sim_common.h	/^static inline int eap_sim_verify_mac_sha256(const u8 *k_aut,$/;"	f	signature:(const u8 *k_aut, const struct wpabuf *req, const u8 *mac, const u8 *extra, size_t extra_len)
eap_sm	src/eap_peer/eap_i.h	/^struct eap_sm {$/;"	s
eap_sm	src/eap_server/eap_i.h	/^struct eap_sm {$/;"	s
eap_sm::ANON_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
eap_sm::AUTH_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
eap_sm::BOTH_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
eap_sm::ClientTimeout	src/eap_peer/eap_i.h	/^	int ClientTimeout;$/;"	m	struct:eap_sm	access:public
eap_sm::DECISION_CONTINUE	src/eap_server/eap_i.h	/^		DECISION_SUCCESS, DECISION_FAILURE, DECISION_CONTINUE,$/;"	e	enum:eap_sm::__anon157
eap_sm::DECISION_FAILURE	src/eap_server/eap_i.h	/^		DECISION_SUCCESS, DECISION_FAILURE, DECISION_CONTINUE,$/;"	e	enum:eap_sm::__anon157
eap_sm::DECISION_PASSTHROUGH	src/eap_server/eap_i.h	/^		DECISION_PASSTHROUGH$/;"	e	enum:eap_sm::__anon157
eap_sm::DECISION_SUCCESS	src/eap_server/eap_i.h	/^		DECISION_SUCCESS, DECISION_FAILURE, DECISION_CONTINUE,$/;"	e	enum:eap_sm::__anon157
eap_sm::EAP_AAA_IDLE	src/eap_server/eap_i.h	/^		EAP_AAA_REQUEST, EAP_AAA_RESPONSE, EAP_AAA_IDLE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_AAA_REQUEST	src/eap_server/eap_i.h	/^		EAP_AAA_REQUEST, EAP_AAA_RESPONSE, EAP_AAA_IDLE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_AAA_RESPONSE	src/eap_server/eap_i.h	/^		EAP_AAA_REQUEST, EAP_AAA_RESPONSE, EAP_AAA_IDLE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_DISABLED	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_DISABLED	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_DISCARD	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_DISCARD	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_DISCARD2	src/eap_server/eap_i.h	/^		EAP_RECEIVED2, EAP_DISCARD2, EAP_SEND_REQUEST2,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_FAILURE	src/eap_peer/eap_i.h	/^		EAP_FAILURE$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_FAILURE	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_FAILURE2	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE2, EAP_FAILURE2, EAP_SUCCESS2$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_GET_METHOD	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_IDENTITY	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_IDLE	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_IDLE	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_IDLE2	src/eap_server/eap_i.h	/^		EAP_INITIALIZE_PASSTHROUGH, EAP_IDLE2, EAP_RETRANSMIT2,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_INITIALIZE	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_INITIALIZE	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_INITIALIZE_PASSTHROUGH	src/eap_server/eap_i.h	/^		EAP_INITIALIZE_PASSTHROUGH, EAP_IDLE2, EAP_RETRANSMIT2,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_INTEGRITY_CHECK	src/eap_server/eap_i.h	/^		EAP_INTEGRITY_CHECK, EAP_METHOD_RESPONSE, EAP_METHOD_REQUEST,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_METHOD	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_METHOD_REQUEST	src/eap_server/eap_i.h	/^		EAP_INTEGRITY_CHECK, EAP_METHOD_RESPONSE, EAP_METHOD_REQUEST,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_METHOD_RESPONSE	src/eap_server/eap_i.h	/^		EAP_INTEGRITY_CHECK, EAP_METHOD_RESPONSE, EAP_METHOD_REQUEST,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_NAK	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_NOTIFICATION	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_PICK_UP_METHOD	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE, EAP_PICK_UP_METHOD,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_PROPOSE_METHOD	src/eap_server/eap_i.h	/^		EAP_PROPOSE_METHOD, EAP_SELECT_ACTION, EAP_SEND_REQUEST,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_RECEIVED	src/eap_peer/eap_i.h	/^		EAP_INITIALIZE, EAP_DISABLED, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_RECEIVED	src/eap_server/eap_i.h	/^		EAP_DISABLED, EAP_INITIALIZE, EAP_IDLE, EAP_RECEIVED,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_RECEIVED2	src/eap_server/eap_i.h	/^		EAP_RECEIVED2, EAP_DISCARD2, EAP_SEND_REQUEST2,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_RETRANSMIT	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_RETRANSMIT	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_RETRANSMIT2	src/eap_server/eap_i.h	/^		EAP_INITIALIZE_PASSTHROUGH, EAP_IDLE2, EAP_RETRANSMIT2,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_SELECT_ACTION	src/eap_server/eap_i.h	/^		EAP_PROPOSE_METHOD, EAP_SELECT_ACTION, EAP_SEND_REQUEST,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_SEND_REQUEST	src/eap_server/eap_i.h	/^		EAP_PROPOSE_METHOD, EAP_SELECT_ACTION, EAP_SEND_REQUEST,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_SEND_REQUEST2	src/eap_server/eap_i.h	/^		EAP_RECEIVED2, EAP_DISCARD2, EAP_SEND_REQUEST2,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_SEND_RESPONSE	src/eap_peer/eap_i.h	/^		EAP_GET_METHOD, EAP_METHOD, EAP_SEND_RESPONSE, EAP_DISCARD,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_SUCCESS	src/eap_peer/eap_i.h	/^		EAP_IDENTITY, EAP_NOTIFICATION, EAP_RETRANSMIT, EAP_SUCCESS,$/;"	e	enum:eap_sm::__anon184
eap_sm::EAP_SUCCESS	src/eap_server/eap_i.h	/^		EAP_DISCARD, EAP_NAK, EAP_RETRANSMIT, EAP_SUCCESS, EAP_FAILURE,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_SUCCESS2	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE2, EAP_FAILURE2, EAP_SUCCESS2$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_TIMEOUT_FAILURE	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE, EAP_PICK_UP_METHOD,$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_TIMEOUT_FAILURE2	src/eap_server/eap_i.h	/^		EAP_TIMEOUT_FAILURE2, EAP_FAILURE2, EAP_SUCCESS2$/;"	e	enum:eap_sm::__anon155
eap_sm::EAP_state	src/eap_peer/eap_i.h	/^	} EAP_state;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon184	access:public
eap_sm::EAP_state	src/eap_server/eap_i.h	/^	} EAP_state;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon155	access:public
eap_sm::METHOD_CONTINUE	src/eap_server/eap_i.h	/^		METHOD_PROPOSED, METHOD_CONTINUE, METHOD_END$/;"	e	enum:eap_sm::__anon156
eap_sm::METHOD_END	src/eap_server/eap_i.h	/^		METHOD_PROPOSED, METHOD_CONTINUE, METHOD_END$/;"	e	enum:eap_sm::__anon156
eap_sm::METHOD_PENDING_CONT	src/eap_server/eap_i.h	/^		METHOD_PENDING_NONE, METHOD_PENDING_WAIT, METHOD_PENDING_CONT$/;"	e	enum:eap_sm::__anon158
eap_sm::METHOD_PENDING_NONE	src/eap_server/eap_i.h	/^		METHOD_PENDING_NONE, METHOD_PENDING_WAIT, METHOD_PENDING_CONT$/;"	e	enum:eap_sm::__anon158
eap_sm::METHOD_PENDING_WAIT	src/eap_server/eap_i.h	/^		METHOD_PENDING_NONE, METHOD_PENDING_WAIT, METHOD_PENDING_CONT$/;"	e	enum:eap_sm::__anon158
eap_sm::METHOD_PROPOSED	src/eap_server/eap_i.h	/^		METHOD_PROPOSED, METHOD_CONTINUE, METHOD_END$/;"	e	enum:eap_sm::__anon156
eap_sm::MaxRetrans	src/eap_server/eap_i.h	/^	int MaxRetrans;$/;"	m	struct:eap_sm	access:public
eap_sm::NO_PROV	src/eap_server/eap_i.h	/^		NO_PROV, ANON_PROV, AUTH_PROV, BOTH_PROV$/;"	e	enum:eap_sm::__anon159
eap_sm::allowNotifications	src/eap_peer/eap_i.h	/^	Boolean allowNotifications; \/* peer state machine <-> methods *\/$/;"	m	struct:eap_sm	access:public
eap_sm::assoc_p2p_ie	src/eap_server/eap_i.h	/^	struct wpabuf *assoc_p2p_ie;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
eap_sm::assoc_wps_ie	src/eap_server/eap_i.h	/^	struct wpabuf *assoc_wps_ie;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
eap_sm::auth_challenge	src/eap_peer/eap_i.h	/^	u8 *peer_challenge, *auth_challenge;$/;"	m	struct:eap_sm	access:public
eap_sm::auth_challenge	src/eap_server/eap_i.h	/^	u8 *auth_challenge;$/;"	m	struct:eap_sm	access:public
eap_sm::backend_auth	src/eap_server/eap_i.h	/^	Boolean backend_auth;$/;"	m	struct:eap_sm	access:public
eap_sm::changed	src/eap_peer/eap_i.h	/^	Boolean changed;$/;"	m	struct:eap_sm	access:public
eap_sm::changed	src/eap_server/eap_i.h	/^	Boolean changed;$/;"	m	struct:eap_sm	access:public
eap_sm::currentId	src/eap_server/eap_i.h	/^	int currentId;$/;"	m	struct:eap_sm	access:public
eap_sm::currentMethod	src/eap_server/eap_i.h	/^	EapType currentMethod;$/;"	m	struct:eap_sm	access:public
eap_sm::decision	src/eap_peer/eap_i.h	/^	EapDecision decision;$/;"	m	struct:eap_sm	access:public
eap_sm::decision	src/eap_server/eap_i.h	/^	} decision;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon157	access:public
eap_sm::eapKeyAvailable	src/eap_peer/eap_i.h	/^	Boolean eapKeyAvailable; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	access:public
eap_sm::eapKeyData	src/eap_peer/eap_i.h	/^	u8 *eapKeyData; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	access:public
eap_sm::eapKeyDataLen	src/eap_peer/eap_i.h	/^	size_t eapKeyDataLen; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	access:public
eap_sm::eapRespData	src/eap_peer/eap_i.h	/^	struct wpabuf *eapRespData; \/* peer to lower layer *\/$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
eap_sm::eap_fast_a_id	src/eap_server/eap_i.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_fast_a_id_info	src/eap_server/eap_i.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_fast_a_id_len	src/eap_server/eap_i.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_fast_prov	src/eap_server/eap_i.h	/^	} eap_fast_prov;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon159	access:public
eap_sm::eap_if	src/eap_server/eap_i.h	/^	struct eap_eapol_interface eap_if;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_eapol_interface	access:public
eap_sm::eap_method_priv	src/eap_peer/eap_i.h	/^	void *eap_method_priv;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_method_priv	src/eap_server/eap_i.h	/^	void *eap_method_priv;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_server	src/eap_server/eap_i.h	/^	int eap_server;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_sim_aka_result_ind	src/eap_server/eap_i.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:eap_sm	access:public
eap_sm::eap_sim_db_priv	src/eap_server/eap_i.h	/^	void *eap_sim_db_priv;$/;"	m	struct:eap_sm	access:public
eap_sm::eapol_cb	src/eap_peer/eap_i.h	/^	struct eapol_callbacks *eapol_cb;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eapol_callbacks	access:public
eap_sm::eapol_cb	src/eap_server/eap_i.h	/^	struct eapol_callbacks *eapol_cb;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eapol_callbacks	access:public
eap_sm::eapol_ctx	src/eap_peer/eap_i.h	/^	void *eapol_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::eapol_ctx	src/eap_server/eap_i.h	/^	void *eapol_ctx, *msg_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::fast_reauth	src/eap_peer/eap_i.h	/^	int fast_reauth;$/;"	m	struct:eap_sm	access:public
eap_sm::force_disabled	src/eap_peer/eap_i.h	/^	int force_disabled;$/;"	m	struct:eap_sm	access:public
eap_sm::fragment_size	src/eap_server/eap_i.h	/^	int fragment_size;$/;"	m	struct:eap_sm	access:public
eap_sm::identity	src/eap_server/eap_i.h	/^	u8 *identity;$/;"	m	struct:eap_sm	access:public
eap_sm::identity_len	src/eap_server/eap_i.h	/^	size_t identity_len;$/;"	m	struct:eap_sm	access:public
eap_sm::ignore	src/eap_peer/eap_i.h	/^	Boolean ignore;$/;"	m	struct:eap_sm	access:public
eap_sm::ignore	src/eap_server/eap_i.h	/^	Boolean ignore;$/;"	m	struct:eap_sm	access:public
eap_sm::init_phase2	src/eap_peer/eap_i.h	/^	int init_phase2;$/;"	m	struct:eap_sm	access:public
eap_sm::init_phase2	src/eap_server/eap_i.h	/^	int init_phase2;$/;"	m	struct:eap_sm	access:public
eap_sm::lastId	src/eap_peer/eap_i.h	/^	int lastId;$/;"	m	struct:eap_sm	access:public
eap_sm::lastId	src/eap_server/eap_i.h	/^	int lastId; \/* Identifier used in the last EAP-Packet *\/$/;"	m	struct:eap_sm	access:public
eap_sm::lastReqData	src/eap_server/eap_i.h	/^	struct wpabuf *lastReqData;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
eap_sm::lastRespData	src/eap_peer/eap_i.h	/^	struct wpabuf *lastRespData;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
eap_sm::last_md5	src/eap_peer/eap_i.h	/^	u8 last_md5[16]; \/* MD5() of the previously received EAP packet; used$/;"	m	struct:eap_sm	access:public
eap_sm::leap_done	src/eap_peer/eap_i.h	/^	Boolean leap_done;$/;"	m	struct:eap_sm	access:public
eap_sm::m	src/eap_peer/eap_i.h	/^	const struct eap_method *m; \/* selected EAP method *\/$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_method	access:public
eap_sm::m	src/eap_server/eap_i.h	/^	const struct eap_method *m; \/* selected EAP method *\/$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_method	access:public
eap_sm::methodState	src/eap_peer/eap_i.h	/^	EapMethodState methodState;$/;"	m	struct:eap_sm	access:public
eap_sm::methodState	src/eap_server/eap_i.h	/^	} methodState;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon156	access:public
eap_sm::methodTimeout	src/eap_server/eap_i.h	/^	int methodTimeout;$/;"	m	struct:eap_sm	access:public
eap_sm::method_pending	src/eap_server/eap_i.h	/^	} method_pending;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon158	access:public
eap_sm::msg_ctx	src/eap_peer/eap_i.h	/^	void *msg_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::msg_ctx	src/eap_server/eap_i.h	/^	void *eapol_ctx, *msg_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::num_rounds	src/eap_peer/eap_i.h	/^	int num_rounds;$/;"	m	struct:eap_sm	access:public
eap_sm::num_rounds	src/eap_server/eap_i.h	/^	int num_rounds;$/;"	m	struct:eap_sm	access:public
eap_sm::pac_key_lifetime	src/eap_server/eap_i.h	/^	int pac_key_lifetime;$/;"	m	struct:eap_sm	access:public
eap_sm::pac_key_refresh_time	src/eap_server/eap_i.h	/^	int pac_key_refresh_time;$/;"	m	struct:eap_sm	access:public
eap_sm::pac_opaque_encr_key	src/eap_server/eap_i.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:eap_sm	access:public
eap_sm::pbc_in_m1	src/eap_server/eap_i.h	/^	int pbc_in_m1;$/;"	m	struct:eap_sm	access:public
eap_sm::peap_done	src/eap_peer/eap_i.h	/^	Boolean peap_done;$/;"	m	struct:eap_sm	access:public
eap_sm::peer_addr	src/eap_server/eap_i.h	/^	u8 peer_addr[ETH_ALEN];$/;"	m	struct:eap_sm	access:public
eap_sm::peer_challenge	src/eap_peer/eap_i.h	/^	u8 *peer_challenge, *auth_challenge;$/;"	m	struct:eap_sm	access:public
eap_sm::peer_challenge	src/eap_server/eap_i.h	/^	u8 *peer_challenge;$/;"	m	struct:eap_sm	access:public
eap_sm::prev_failure	src/eap_peer/eap_i.h	/^	int prev_failure;$/;"	m	struct:eap_sm	access:public
eap_sm::pwd_group	src/eap_server/eap_i.h	/^	u16 pwd_group;$/;"	m	struct:eap_sm	access:public
eap_sm::reqId	src/eap_peer/eap_i.h	/^	int reqId;$/;"	m	struct:eap_sm	access:public
eap_sm::reqMethod	src/eap_peer/eap_i.h	/^	EapType reqMethod;$/;"	m	struct:eap_sm	access:public
eap_sm::reqVendor	src/eap_peer/eap_i.h	/^	int reqVendor;$/;"	m	struct:eap_sm	access:public
eap_sm::reqVendorMethod	src/eap_peer/eap_i.h	/^	u32 reqVendorMethod;$/;"	m	struct:eap_sm	access:public
eap_sm::req_md5	src/eap_peer/eap_i.h	/^	u8 req_md5[16]; \/* MD5() of the current EAP packet *\/$/;"	m	struct:eap_sm	access:public
eap_sm::require_identity_match	src/eap_server/eap_i.h	/^	int require_identity_match;$/;"	m	struct:eap_sm	access:public
eap_sm::respId	src/eap_server/eap_i.h	/^	int respId;$/;"	m	struct:eap_sm	access:public
eap_sm::respMethod	src/eap_server/eap_i.h	/^	EapType respMethod;$/;"	m	struct:eap_sm	access:public
eap_sm::respVendor	src/eap_server/eap_i.h	/^	int respVendor;$/;"	m	struct:eap_sm	access:public
eap_sm::respVendorMethod	src/eap_server/eap_i.h	/^	u32 respVendorMethod;$/;"	m	struct:eap_sm	access:public
eap_sm::retransCount	src/eap_server/eap_i.h	/^	int retransCount;$/;"	m	struct:eap_sm	access:public
eap_sm::rxFailure	src/eap_peer/eap_i.h	/^	Boolean rxFailure;$/;"	m	struct:eap_sm	access:public
eap_sm::rxReq	src/eap_peer/eap_i.h	/^	Boolean rxReq;$/;"	m	struct:eap_sm	access:public
eap_sm::rxResp	src/eap_peer/eap_i.h	/^	Boolean rxResp \/* LEAP only *\/;$/;"	m	struct:eap_sm	access:public
eap_sm::rxResp	src/eap_server/eap_i.h	/^	Boolean rxResp;$/;"	m	struct:eap_sm	access:public
eap_sm::rxSuccess	src/eap_peer/eap_i.h	/^	Boolean rxSuccess;$/;"	m	struct:eap_sm	access:public
eap_sm::scard_ctx	src/eap_peer/eap_i.h	/^	void *scard_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::selectedMethod	src/eap_peer/eap_i.h	/^	EapType selectedMethod;$/;"	m	struct:eap_sm	access:public
eap_sm::ssl_ctx	src/eap_peer/eap_i.h	/^	void *ssl_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::ssl_ctx	src/eap_server/eap_i.h	/^	void *ssl_ctx;$/;"	m	struct:eap_sm	access:public
eap_sm::start_reauth	src/eap_server/eap_i.h	/^	Boolean start_reauth;$/;"	m	struct:eap_sm	access:public
eap_sm::tnc	src/eap_server/eap_i.h	/^	int tnc;$/;"	m	struct:eap_sm	access:public
eap_sm::update_user	src/eap_server/eap_i.h	/^	Boolean update_user;$/;"	m	struct:eap_sm	access:public
eap_sm::user	src/eap_server/eap_i.h	/^	struct eap_user *user;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_user	access:public
eap_sm::user_eap_method_index	src/eap_server/eap_i.h	/^	int user_eap_method_index;$/;"	m	struct:eap_sm	access:public
eap_sm::workaround	src/eap_peer/eap_i.h	/^	unsigned int workaround;$/;"	m	struct:eap_sm	access:public
eap_sm::wps	src/eap_peer/eap_i.h	/^	struct wps_context *wps;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wps_context	access:public
eap_sm::wps	src/eap_server/eap_i.h	/^	struct wps_context *wps;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wps_context	access:public
eap_sm_Policy_doPickUp	src/eap_server/eap_server.c	/^static Boolean eap_sm_Policy_doPickUp(struct eap_sm *sm, EapType method)$/;"	f	file:	signature:(struct eap_sm *sm, EapType method)
eap_sm_Policy_doPickUp	src/eap_server/eap_server.c	/^static Boolean eap_sm_Policy_doPickUp(struct eap_sm *sm, EapType method);$/;"	p	file:	signature:(struct eap_sm *sm, EapType method)
eap_sm_Policy_getDecision	src/eap_server/eap_server.c	/^static int eap_sm_Policy_getDecision(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_sm_Policy_getDecision	src/eap_server/eap_server.c	/^static int eap_sm_Policy_getDecision(struct eap_sm *sm);$/;"	p	file:	signature:(struct eap_sm *sm)
eap_sm_Policy_getNextMethod	src/eap_server/eap_server.c	/^static EapType eap_sm_Policy_getNextMethod(struct eap_sm *sm, int *vendor)$/;"	f	file:	signature:(struct eap_sm *sm, int *vendor)
eap_sm_Policy_getNextMethod	src/eap_server/eap_server.c	/^static EapType eap_sm_Policy_getNextMethod(struct eap_sm *sm, int *vendor);$/;"	p	file:	signature:(struct eap_sm *sm, int *vendor)
eap_sm_Policy_update	src/eap_server/eap_server.c	/^static void eap_sm_Policy_update(struct eap_sm *sm, const u8 *nak_list,$/;"	f	file:	signature:(struct eap_sm *sm, const u8 *nak_list, size_t len)
eap_sm_Policy_update	src/eap_server/eap_server.c	/^static void eap_sm_Policy_update(struct eap_sm *sm, const u8 *nak_list,$/;"	p	file:	signature:(struct eap_sm *sm, const u8 *nak_list, size_t len)
eap_sm_abort	src/eap_peer/eap.c	/^void eap_sm_abort(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_abort	src/eap_peer/eap.h	/^void eap_sm_abort(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_allowMethod	src/eap_peer/eap.c	/^static Boolean eap_sm_allowMethod(struct eap_sm *sm, int vendor,$/;"	f	file:	signature:(struct eap_sm *sm, int vendor, EapType method)
eap_sm_allowMethod	src/eap_peer/eap.c	/^static Boolean eap_sm_allowMethod(struct eap_sm *sm, int vendor,$/;"	p	file:	signature:(struct eap_sm *sm, int vendor, EapType method)
eap_sm_buildFailure	src/eap_server/eap_server.c	/^static struct wpabuf * eap_sm_buildFailure(struct eap_sm *sm, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, u8 id)
eap_sm_buildFailure	src/eap_server/eap_server.c	/^static struct wpabuf * eap_sm_buildFailure(struct eap_sm *sm, u8 id);$/;"	p	file:	signature:(struct eap_sm *sm, u8 id)
eap_sm_buildIdentity	src/eap_peer/eap.c	/^struct wpabuf * eap_sm_buildIdentity(struct eap_sm *sm, int id, int encrypted)$/;"	f	signature:(struct eap_sm *sm, int id, int encrypted)
eap_sm_buildIdentity	src/eap_peer/eap.h	/^struct wpabuf * eap_sm_buildIdentity(struct eap_sm *sm, int id, int encrypted);$/;"	p	signature:(struct eap_sm *sm, int id, int encrypted)
eap_sm_buildNak	src/eap_peer/eap.c	/^static struct wpabuf * eap_sm_buildNak(struct eap_sm *sm, int id)$/;"	f	file:	signature:(struct eap_sm *sm, int id)
eap_sm_buildNak	src/eap_peer/eap.c	/^static struct wpabuf * eap_sm_buildNak(struct eap_sm *sm, int id);$/;"	p	file:	signature:(struct eap_sm *sm, int id)
eap_sm_buildNotify	src/eap_peer/eap.c	/^static struct wpabuf * eap_sm_buildNotify(int id)$/;"	f	file:	signature:(int id)
eap_sm_buildNotify	src/eap_peer/eap.c	/^static struct wpabuf * eap_sm_buildNotify(int id);$/;"	p	file:	signature:(int id)
eap_sm_buildSuccess	src/eap_server/eap_server.c	/^static struct wpabuf * eap_sm_buildSuccess(struct eap_sm *sm, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, u8 id)
eap_sm_buildSuccess	src/eap_server/eap_server.c	/^static struct wpabuf * eap_sm_buildSuccess(struct eap_sm *sm, u8 id);$/;"	p	file:	signature:(struct eap_sm *sm, u8 id)
eap_sm_build_expanded_nak	src/eap_peer/eap.c	/^static struct wpabuf * eap_sm_build_expanded_nak($/;"	f	file:	signature:( struct eap_sm *sm, int id, const struct eap_method *methods, size_t count)
eap_sm_calculateTimeout	src/eap_server/eap_server.c	/^static int eap_sm_calculateTimeout(struct eap_sm *sm, int retransCount,$/;"	f	file:	signature:(struct eap_sm *sm, int retransCount, int eapSRTT, int eapRTTVAR, int methodTimeout)
eap_sm_calculateTimeout	src/eap_server/eap_server.c	/^static int eap_sm_calculateTimeout(struct eap_sm *sm, int retransCount,$/;"	p	file:	signature:(struct eap_sm *sm, int retransCount, int eapSRTT, int eapRTTVAR, int methodTimeout)
eap_sm_decision_txt	src/eap_peer/eap.c	/^static const char * eap_sm_decision_txt(EapDecision decision)$/;"	f	file:	signature:(EapDecision decision)
eap_sm_decision_txt	src/eap_peer/eap.c	/^static const char * eap_sm_decision_txt(EapDecision decision);$/;"	p	file:	signature:(EapDecision decision)
eap_sm_getId	src/eap_server/eap_server.c	/^static int eap_sm_getId(const struct wpabuf *data)$/;"	f	file:	signature:(const struct wpabuf *data)
eap_sm_getId	src/eap_server/eap_server.c	/^static int eap_sm_getId(const struct wpabuf *data);$/;"	p	file:	signature:(const struct wpabuf *data)
eap_sm_get_method_name	src/eap_peer/eap.c	/^const char * eap_sm_get_method_name(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_get_method_name	src/eap_peer/eap.h	/^const char * eap_sm_get_method_name(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_get_scard_identity	src/eap_peer/eap.c	/^static int eap_sm_get_scard_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peer_config *conf)
eap_sm_get_status	src/eap_peer/eap.c	/^int eap_sm_get_status(struct eap_sm *sm, char *buf, size_t buflen, int verbose)$/;"	f	signature:(struct eap_sm *sm, char *buf, size_t buflen, int verbose)
eap_sm_get_status	src/eap_peer/eap.h	/^int eap_sm_get_status(struct eap_sm *sm, char *buf, size_t buflen,$/;"	p	signature:(struct eap_sm *sm, char *buf, size_t buflen, int verbose)
eap_sm_imsi_identity	src/eap_peer/eap.c	/^static int eap_sm_imsi_identity(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peer_config *conf)
eap_sm_method_pending	src/eap_server/eap.h	/^int eap_sm_method_pending(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_method_pending	src/eap_server/eap_server.c	/^int eap_sm_method_pending(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_method_state_txt	src/eap_peer/eap.c	/^static const char * eap_sm_method_state_txt(EapMethodState state)$/;"	f	file:	signature:(EapMethodState state)
eap_sm_method_state_txt	src/eap_peer/eap.c	/^static const char * eap_sm_method_state_txt(EapMethodState state);$/;"	p	file:	signature:(EapMethodState state)
eap_sm_nextId	src/eap_server/eap_server.c	/^static int eap_sm_nextId(struct eap_sm *sm, int id)$/;"	f	file:	signature:(struct eap_sm *sm, int id)
eap_sm_nextId	src/eap_server/eap_server.c	/^static int eap_sm_nextId(struct eap_sm *sm, int id);$/;"	p	file:	signature:(struct eap_sm *sm, int id)
eap_sm_notify_cached	src/eap_server/eap.h	/^void eap_sm_notify_cached(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_notify_cached	src/eap_server/eap_server.c	/^void eap_sm_notify_cached(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_notify_ctrl_attached	src/eap_peer/eap.c	/^void eap_sm_notify_ctrl_attached(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_notify_ctrl_attached	src/eap_peer/eap.h	/^void eap_sm_notify_ctrl_attached(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_parseEapReq	src/eap_peer/eap.c	/^static void eap_sm_parseEapReq(struct eap_sm *sm, const struct wpabuf *req)$/;"	f	file:	signature:(struct eap_sm *sm, const struct wpabuf *req)
eap_sm_parseEapReq	src/eap_peer/eap.c	/^static void eap_sm_parseEapReq(struct eap_sm *sm, const struct wpabuf *req);$/;"	p	file:	signature:(struct eap_sm *sm, const struct wpabuf *req)
eap_sm_parseEapResp	src/eap_server/eap_server.c	/^static void eap_sm_parseEapResp(struct eap_sm *sm, const struct wpabuf *resp)$/;"	f	file:	signature:(struct eap_sm *sm, const struct wpabuf *resp)
eap_sm_parseEapResp	src/eap_server/eap_server.c	/^static void eap_sm_parseEapResp(struct eap_sm *sm, const struct wpabuf *resp);$/;"	p	file:	signature:(struct eap_sm *sm, const struct wpabuf *resp)
eap_sm_pending_cb	src/eap_server/eap.h	/^void eap_sm_pending_cb(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_pending_cb	src/eap_server/eap_server.c	/^void eap_sm_pending_cb(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_processIdentity	src/eap_peer/eap.c	/^static void eap_sm_processIdentity(struct eap_sm *sm, const struct wpabuf *req)$/;"	f	file:	signature:(struct eap_sm *sm, const struct wpabuf *req)
eap_sm_processIdentity	src/eap_peer/eap.c	/^static void eap_sm_processIdentity(struct eap_sm *sm,$/;"	p	file:	signature:(struct eap_sm *sm, const struct wpabuf *req)
eap_sm_processNotify	src/eap_peer/eap.c	/^static void eap_sm_processNotify(struct eap_sm *sm, const struct wpabuf *req)$/;"	f	file:	signature:(struct eap_sm *sm, const struct wpabuf *req)
eap_sm_processNotify	src/eap_peer/eap.c	/^static void eap_sm_processNotify(struct eap_sm *sm, const struct wpabuf *req);$/;"	p	file:	signature:(struct eap_sm *sm, const struct wpabuf *req)
eap_sm_process_nak	src/eap_server/eap_i.h	/^void eap_sm_process_nak(struct eap_sm *sm, const u8 *nak_list, size_t len);$/;"	p	signature:(struct eap_sm *sm, const u8 *nak_list, size_t len)
eap_sm_process_nak	src/eap_server/eap_server.c	/^void eap_sm_process_nak(struct eap_sm *sm, const u8 *nak_list, size_t len)$/;"	f	signature:(struct eap_sm *sm, const u8 *nak_list, size_t len)
eap_sm_request	src/eap_peer/eap.c	/^static void eap_sm_request(struct eap_sm *sm, enum wpa_ctrl_req_type field,$/;"	f	file:	signature:(struct eap_sm *sm, enum wpa_ctrl_req_type field, const char *msg, size_t msglen)
eap_sm_request	src/eap_peer/eap.c	1547;"	d	file:
eap_sm_request_identity	src/eap_peer/eap.c	/^void eap_sm_request_identity(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_request_identity	src/eap_peer/eap.h	/^void eap_sm_request_identity(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_request_new_password	src/eap_peer/eap.c	/^void eap_sm_request_new_password(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_request_new_password	src/eap_peer/eap.h	/^void eap_sm_request_new_password(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_request_otp	src/eap_peer/eap.c	/^void eap_sm_request_otp(struct eap_sm *sm, const char *msg, size_t msg_len)$/;"	f	signature:(struct eap_sm *sm, const char *msg, size_t msg_len)
eap_sm_request_otp	src/eap_peer/eap.h	/^void eap_sm_request_otp(struct eap_sm *sm, const char *msg, size_t msg_len);$/;"	p	signature:(struct eap_sm *sm, const char *msg, size_t msg_len)
eap_sm_request_passphrase	src/eap_peer/eap.c	/^void eap_sm_request_passphrase(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_request_passphrase	src/eap_peer/eap.h	/^void eap_sm_request_passphrase(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_request_password	src/eap_peer/eap.c	/^void eap_sm_request_password(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_request_password	src/eap_peer/eap.h	/^void eap_sm_request_password(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_request_pin	src/eap_peer/eap.c	/^void eap_sm_request_pin(struct eap_sm *sm)$/;"	f	signature:(struct eap_sm *sm)
eap_sm_request_pin	src/eap_peer/eap.h	/^void eap_sm_request_pin(struct eap_sm *sm);$/;"	p	signature:(struct eap_sm *sm)
eap_sm_set_scard_pin	src/eap_peer/eap.c	/^static int eap_sm_set_scard_pin(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peer_config *conf)
eap_sm_state_txt	src/eap_peer/eap.c	/^static const char * eap_sm_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_ssl_data	src/eap_peer/eap_tls_common.h	/^struct eap_ssl_data {$/;"	s
eap_ssl_data	src/eap_server/eap_tls_common.h	/^struct eap_ssl_data {$/;"	s
eap_ssl_data::FRAG_ACK	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	e	enum:eap_ssl_data::__anon138
eap_ssl_data::MSG	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	e	enum:eap_ssl_data::__anon138
eap_ssl_data::WAIT_FRAG_ACK	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	e	enum:eap_ssl_data::__anon138
eap_ssl_data::conn	src/eap_peer/eap_tls_common.h	/^	struct tls_connection *conn;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::tls_connection	access:public
eap_ssl_data::conn	src/eap_server/eap_tls_common.h	/^	struct tls_connection *conn;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::tls_connection	access:public
eap_ssl_data::eap	src/eap_peer/eap_tls_common.h	/^	struct eap_sm *eap;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::eap_sm	access:public
eap_ssl_data::eap	src/eap_server/eap_tls_common.h	/^	struct eap_sm *eap;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::eap_sm	access:public
eap_ssl_data::include_tls_length	src/eap_peer/eap_tls_common.h	/^	int include_tls_length;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::phase2	src/eap_peer/eap_tls_common.h	/^	int phase2;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::phase2	src/eap_server/eap_tls_common.h	/^	int phase2;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::state	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	m	struct:eap_ssl_data	typeref:enum:eap_ssl_data::__anon138	access:public
eap_ssl_data::tls_in	src/eap_peer/eap_tls_common.h	/^	struct wpabuf *tls_in;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
eap_ssl_data::tls_in	src/eap_server/eap_tls_common.h	/^	struct wpabuf *tls_in;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
eap_ssl_data::tls_in_left	src/eap_peer/eap_tls_common.h	/^	size_t tls_in_left;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::tls_in_total	src/eap_peer/eap_tls_common.h	/^	size_t tls_in_total;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::tls_out	src/eap_peer/eap_tls_common.h	/^	struct wpabuf *tls_out;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
eap_ssl_data::tls_out	src/eap_server/eap_tls_common.h	/^	struct wpabuf *tls_out;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
eap_ssl_data::tls_out_limit	src/eap_peer/eap_tls_common.h	/^	size_t tls_out_limit;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::tls_out_limit	src/eap_server/eap_tls_common.h	/^	size_t tls_out_limit;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::tls_out_pos	src/eap_peer/eap_tls_common.h	/^	size_t tls_out_pos;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::tls_out_pos	src/eap_server/eap_tls_common.h	/^	size_t tls_out_pos;$/;"	m	struct:eap_ssl_data	access:public
eap_ssl_data::tmpbuf	src/eap_server/eap_tls_common.h	/^	struct wpabuf tmpbuf;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
eap_success_workaround	src/eap_peer/eap.c	/^static int eap_success_workaround(struct eap_sm *sm, int reqId, int lastId)$/;"	f	file:	signature:(struct eap_sm *sm, int reqId, int lastId)
eap_tls_buildReq	src/eap_server/eap_server_tls.c	/^static struct wpabuf * eap_tls_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_tls_build_start	src/eap_server/eap_server_tls.c	/^static struct wpabuf * eap_tls_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_tls_data *data, u8 id)
eap_tls_check	src/eap_server/eap_server_tls.c	/^static Boolean eap_tls_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_tls_check_blob	src/eap_peer/eap_tls_common.c	/^static int eap_tls_check_blob(struct eap_sm *sm, const char **name,$/;"	f	file:	signature:(struct eap_sm *sm, const char **name, const u8 **data, size_t *data_len)
eap_tls_data	src/eap_peer/eap_tls.c	/^struct eap_tls_data {$/;"	s	file:
eap_tls_data	src/eap_server/eap_server_tls.c	/^struct eap_tls_data {$/;"	s	file:
eap_tls_data::CONTINUE	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
eap_tls_data::FAILURE	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
eap_tls_data::START	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
eap_tls_data::SUCCESS	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	e	enum:eap_tls_data::__anon153	file:
eap_tls_data::established	src/eap_server/eap_server_tls.c	/^	int established;$/;"	m	struct:eap_tls_data	file:	access:public
eap_tls_data::key_data	src/eap_peer/eap_tls.c	/^	u8 *key_data;$/;"	m	struct:eap_tls_data	file:	access:public
eap_tls_data::ssl	src/eap_peer/eap_tls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_tls_data	typeref:struct:eap_tls_data::eap_ssl_data	file:	access:public
eap_tls_data::ssl	src/eap_server/eap_server_tls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_tls_data	typeref:struct:eap_tls_data::eap_ssl_data	file:	access:public
eap_tls_data::state	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	m	struct:eap_tls_data	typeref:enum:eap_tls_data::__anon153	file:	access:public
eap_tls_deinit	src/eap_peer/eap_tls.c	/^static void eap_tls_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_deinit	src/eap_peer/eap_tls.c	/^static void eap_tls_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_deinit_for_reauth	src/eap_peer/eap_tls.c	/^static void eap_tls_deinit_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_failure	src/eap_peer/eap_tls.c	/^static struct wpabuf * eap_tls_failure(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_tls_data *data, struct eap_method_ret *ret, int res, struct wpabuf *resp, u8 id)
eap_tls_getKey	src/eap_peer/eap_tls.c	/^static u8 * eap_tls_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_tls_getKey	src/eap_server/eap_server_tls.c	/^static u8 * eap_tls_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_tls_get_emsk	src/eap_peer/eap_tls.c	/^static u8 * eap_tls_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_tls_get_emsk	src/eap_server/eap_server_tls.c	/^static u8 * eap_tls_get_emsk(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_tls_get_status	src/eap_peer/eap_tls.c	/^static int eap_tls_get_status(struct eap_sm *sm, void *priv, char *buf,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, char *buf, size_t buflen, int verbose)
eap_tls_has_reauth_data	src/eap_peer/eap_tls.c	/^static Boolean eap_tls_has_reauth_data(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_init	src/eap_peer/eap_tls.c	/^static void * eap_tls_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_tls_init	src/eap_server/eap_server_tls.c	/^static void * eap_tls_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_tls_init_connection	src/eap_peer/eap_tls_common.c	/^static int eap_tls_init_connection(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ssl_data *data, struct eap_peer_config *config, struct tls_connection_params *params)
eap_tls_init_for_reauth	src/eap_peer/eap_tls.c	/^static void * eap_tls_init_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_isDone	src/eap_server/eap_server_tls.c	/^static Boolean eap_tls_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_isKeyAvailable	src/eap_peer/eap_tls.c	/^static Boolean eap_tls_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_isSuccess	src/eap_server/eap_server_tls.c	/^static Boolean eap_tls_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_params_flags	src/eap_peer/eap_tls_common.c	/^static void eap_tls_params_flags(struct tls_connection_params *params,$/;"	f	file:	signature:(struct tls_connection_params *params, const char *txt)
eap_tls_params_from_conf	src/eap_peer/eap_tls_common.c	/^static int eap_tls_params_from_conf(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ssl_data *data, struct tls_connection_params *params, struct eap_peer_config *config, int phase2)
eap_tls_params_from_conf1	src/eap_peer/eap_tls_common.c	/^static void eap_tls_params_from_conf1(struct tls_connection_params *params,$/;"	f	file:	signature:(struct tls_connection_params *params, struct eap_peer_config *config)
eap_tls_params_from_conf2	src/eap_peer/eap_tls_common.c	/^static void eap_tls_params_from_conf2(struct tls_connection_params *params,$/;"	f	file:	signature:(struct tls_connection_params *params, struct eap_peer_config *config)
eap_tls_prf	src/crypto/tls_schannel.c	/^	u8 eap_tls_prf[128];$/;"	m	struct:tls_connection	file:	access:public
eap_tls_prf_set	src/crypto/tls_schannel.c	/^	int eap_tls_prf_set;$/;"	m	struct:tls_connection	file:	access:public
eap_tls_process	src/eap_peer/eap_tls.c	/^static struct wpabuf * eap_tls_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_tls_process	src/eap_server/eap_server_tls.c	/^static void eap_tls_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_tls_process_input	src/eap_peer/eap_tls_common.c	/^static int eap_tls_process_input(struct eap_sm *sm, struct eap_ssl_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ssl_data *data, const u8 *in_data, size_t in_len, struct wpabuf **out_data)
eap_tls_process_msg	src/eap_server/eap_server_tls.c	/^static void eap_tls_process_msg(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, const struct wpabuf *respData)
eap_tls_process_output	src/eap_peer/eap_tls_common.c	/^static int eap_tls_process_output(struct eap_ssl_data *data, EapType eap_type,$/;"	f	file:	signature:(struct eap_ssl_data *data, EapType eap_type, int peap_version, u8 id, int ret, struct wpabuf **out_data)
eap_tls_reset	src/eap_server/eap_server_tls.c	/^static void eap_tls_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_reset	src/eap_server/eap_server_tls.c	/^static void eap_tls_reset(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_tls_state	src/eap_server/eap_server_tls.c	/^static void eap_tls_state(struct eap_tls_data *data, int state)$/;"	f	file:	signature:(struct eap_tls_data *data, int state)
eap_tls_state_txt	src/eap_server/eap_server_tls.c	/^static const char * eap_tls_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_tls_success	src/eap_peer/eap_tls.c	/^static void eap_tls_success(struct eap_sm *sm, struct eap_tls_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_tls_data *data, struct eap_method_ret *ret)
eap_tlv_add_cryptobinding	src/eap_peer/eap_peap.c	/^static int eap_tlv_add_cryptobinding(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct wpabuf *buf)
eap_tlv_build_nak	src/eap_peer/eap_peap.c	/^static struct wpabuf * eap_tlv_build_nak(int id, u16 nak_type)$/;"	f	file:	signature:(int id, u16 nak_type)
eap_tlv_build_result	src/eap_peer/eap_peap.c	/^static struct wpabuf * eap_tlv_build_result(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, int crypto_tlv_used, int id, u16 status)
eap_tlv_crypto_binding_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_crypto_binding_tlv {$/;"	s
eap_tlv_crypto_binding_tlv::compound_mac	src/eap_common/eap_tlv_common.h	/^	u8 compound_mac[20];$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::nonce	src/eap_common/eap_tlv_common.h	/^	u8 nonce[32];$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::received_version	src/eap_common/eap_tlv_common.h	/^	u8 received_version;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::reserved	src/eap_common/eap_tlv_common.h	/^	u8 reserved;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::subtype	src/eap_common/eap_tlv_common.h	/^	u8 subtype;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_crypto_binding_tlv::version	src/eap_common/eap_tlv_common.h	/^	u8 version;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
eap_tlv_hdr	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_hdr {$/;"	s
eap_tlv_hdr::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_hdr	access:public
eap_tlv_hdr::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_hdr	access:public
eap_tlv_intermediate_result_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_intermediate_result_tlv {$/;"	s
eap_tlv_intermediate_result_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_intermediate_result_tlv	access:public
eap_tlv_intermediate_result_tlv::status	src/eap_common/eap_tlv_common.h	/^	be16 status;$/;"	m	struct:eap_tlv_intermediate_result_tlv	access:public
eap_tlv_intermediate_result_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_intermediate_result_tlv	access:public
eap_tlv_nak_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_nak_tlv {$/;"	s
eap_tlv_nak_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_nak_tlv	access:public
eap_tlv_nak_tlv::nak_type	src/eap_common/eap_tlv_common.h	/^	be16 nak_type;$/;"	m	struct:eap_tlv_nak_tlv	access:public
eap_tlv_nak_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_nak_tlv	access:public
eap_tlv_nak_tlv::vendor_id	src/eap_common/eap_tlv_common.h	/^	be32 vendor_id;$/;"	m	struct:eap_tlv_nak_tlv	access:public
eap_tlv_pac_ack_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_pac_ack_tlv {$/;"	s
eap_tlv_pac_ack_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
eap_tlv_pac_ack_tlv::pac_len	src/eap_common/eap_tlv_common.h	/^	be16 pac_len;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
eap_tlv_pac_ack_tlv::pac_type	src/eap_common/eap_tlv_common.h	/^	be16 pac_type;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
eap_tlv_pac_ack_tlv::result	src/eap_common/eap_tlv_common.h	/^	be16 result;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
eap_tlv_pac_ack_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
eap_tlv_pac_type_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_pac_type_tlv {$/;"	s
eap_tlv_pac_type_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_pac_type_tlv	access:public
eap_tlv_pac_type_tlv::pac_type	src/eap_common/eap_tlv_common.h	/^	be16 pac_type;$/;"	m	struct:eap_tlv_pac_type_tlv	access:public
eap_tlv_pac_type_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type; \/* PAC_TYPE_PAC_TYPE *\/$/;"	m	struct:eap_tlv_pac_type_tlv	access:public
eap_tlv_process	src/eap_peer/eap_peap.c	/^static int eap_tlv_process(struct eap_sm *sm, struct eap_peap_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, struct eap_method_ret *ret, const struct wpabuf *req, struct wpabuf **resp, int force_failure)
eap_tlv_request_action_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_request_action_tlv {$/;"	s
eap_tlv_request_action_tlv::action	src/eap_common/eap_tlv_common.h	/^	be16 action;$/;"	m	struct:eap_tlv_request_action_tlv	access:public
eap_tlv_request_action_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_request_action_tlv	access:public
eap_tlv_request_action_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_request_action_tlv	access:public
eap_tlv_result_tlv	src/eap_common/eap_tlv_common.h	/^struct eap_tlv_result_tlv {$/;"	s
eap_tlv_result_tlv::length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_result_tlv	access:public
eap_tlv_result_tlv::status	src/eap_common/eap_tlv_common.h	/^	be16 status;$/;"	m	struct:eap_tlv_result_tlv	access:public
eap_tlv_result_tlv::tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_result_tlv	access:public
eap_tlv_validate_cryptobinding	src/eap_peer/eap_peap.c	/^static int eap_tlv_validate_cryptobinding(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, const u8 *crypto_tlv, size_t crypto_tlv_len)
eap_tlv_validate_cryptobinding	src/eap_server/eap_server_peap.c	/^static int eap_tlv_validate_cryptobinding(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_peap_data *data, const u8 *crypto_tlv, size_t crypto_tlv_len)
eap_tnc_build	src/eap_server/eap_server_tnc.c	/^static struct wpabuf * eap_tnc_build(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_tnc_data *data)
eap_tnc_buildReq	src/eap_server/eap_server_tnc.c	/^static struct wpabuf * eap_tnc_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_tnc_build_frag_ack	src/eap_peer/eap_tnc.c	/^static struct wpabuf * eap_tnc_build_frag_ack(u8 id, u8 code)$/;"	f	file:	signature:(u8 id, u8 code)
eap_tnc_build_frag_ack	src/eap_server/eap_server_tnc.c	/^static struct wpabuf * eap_tnc_build_frag_ack(u8 id, u8 code)$/;"	f	file:	signature:(u8 id, u8 code)
eap_tnc_build_msg	src/eap_peer/eap_tnc.c	/^static struct wpabuf * eap_tnc_build_msg(struct eap_tnc_data *data,$/;"	f	file:	signature:(struct eap_tnc_data *data, struct eap_method_ret *ret, u8 id)
eap_tnc_build_msg	src/eap_server/eap_server_tnc.c	/^static struct wpabuf * eap_tnc_build_msg(struct eap_tnc_data *data, u8 id)$/;"	f	file:	signature:(struct eap_tnc_data *data, u8 id)
eap_tnc_build_recommendation	src/eap_server/eap_server_tnc.c	/^static struct wpabuf * eap_tnc_build_recommendation(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_tnc_data *data)
eap_tnc_build_start	src/eap_server/eap_server_tnc.c	/^static struct wpabuf * eap_tnc_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_tnc_data *data, u8 id)
eap_tnc_check	src/eap_server/eap_server_tnc.c	/^static Boolean eap_tnc_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_tnc_data	src/eap_peer/eap_tnc.c	/^struct eap_tnc_data {$/;"	s	file:
eap_tnc_data	src/eap_server/eap_server_tnc.c	/^struct eap_tnc_data {$/;"	s	file:
eap_tnc_data::ALLOW	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
eap_tnc_data::CONTINUE	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::DONE	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
eap_tnc_data::DONE	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::FAIL	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
eap_tnc_data::FAIL	src/eap_server/eap_server_tnc.c	/^		FAIL$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::FRAG_ACK	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::ISOLATE	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
eap_tnc_data::NO_ACCESS	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
eap_tnc_data::NO_RECOMMENDATION	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	e	enum:eap_tnc_data::__anon147	file:
eap_tnc_data::PROC_MSG	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
eap_tnc_data::RECOMMENDATION	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::START	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::WAIT_FRAG_ACK	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
eap_tnc_data::WAIT_FRAG_ACK	src/eap_server/eap_server_tnc.c	/^		START, CONTINUE, RECOMMENDATION, FRAG_ACK, WAIT_FRAG_ACK, DONE,$/;"	e	enum:eap_tnc_data::eap_tnc_state	file:
eap_tnc_data::WAIT_START	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_tnc_data::__anon163	file:
eap_tnc_data::eap_tnc_state	src/eap_server/eap_server_tnc.c	/^	enum eap_tnc_state {$/;"	g	struct:eap_tnc_data	file:	access:public
eap_tnc_data::fragment_size	src/eap_peer/eap_tnc.c	/^	size_t fragment_size;$/;"	m	struct:eap_tnc_data	file:	access:public
eap_tnc_data::fragment_size	src/eap_server/eap_server_tnc.c	/^	size_t fragment_size;$/;"	m	struct:eap_tnc_data	file:	access:public
eap_tnc_data::in_buf	src/eap_peer/eap_tnc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
eap_tnc_data::in_buf	src/eap_server/eap_server_tnc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
eap_tnc_data::out_buf	src/eap_peer/eap_tnc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
eap_tnc_data::out_buf	src/eap_server/eap_server_tnc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
eap_tnc_data::out_used	src/eap_peer/eap_tnc.c	/^	size_t out_used;$/;"	m	struct:eap_tnc_data	file:	access:public
eap_tnc_data::out_used	src/eap_server/eap_server_tnc.c	/^	size_t out_used;$/;"	m	struct:eap_tnc_data	file:	access:public
eap_tnc_data::recommendation	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	m	struct:eap_tnc_data	typeref:enum:eap_tnc_data::__anon147	file:	access:public
eap_tnc_data::state	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_tnc_data	typeref:enum:eap_tnc_data::__anon163	file:	access:public
eap_tnc_data::state	src/eap_server/eap_server_tnc.c	/^	} state;$/;"	m	struct:eap_tnc_data	typeref:enum:eap_tnc_data::eap_tnc_state	file:	access:public
eap_tnc_data::tncc	src/eap_peer/eap_tnc.c	/^	struct tncc_data *tncc;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::tncc_data	file:	access:public
eap_tnc_data::tncs	src/eap_server/eap_server_tnc.c	/^	struct tncs_data *tncs;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::tncs_data	file:	access:public
eap_tnc_data::was_done	src/eap_server/eap_server_tnc.c	/^	unsigned int was_done:1;$/;"	m	struct:eap_tnc_data	file:	access:public
eap_tnc_data::was_fail	src/eap_server/eap_server_tnc.c	/^	unsigned int was_fail:1;$/;"	m	struct:eap_tnc_data	file:	access:public
eap_tnc_deinit	src/eap_peer/eap_tnc.c	/^static void eap_tnc_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tnc_init	src/eap_peer/eap_tnc.c	/^static void * eap_tnc_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_tnc_init	src/eap_server/eap_server_tnc.c	/^static void * eap_tnc_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_tnc_isDone	src/eap_server/eap_server_tnc.c	/^static Boolean eap_tnc_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tnc_isSuccess	src/eap_server/eap_server_tnc.c	/^static Boolean eap_tnc_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tnc_process	src/eap_peer/eap_tnc.c	/^static struct wpabuf * eap_tnc_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_tnc_process	src/eap_server/eap_server_tnc.c	/^static void eap_tnc_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_tnc_process_cont	src/eap_peer/eap_tnc.c	/^static int eap_tnc_process_cont(struct eap_tnc_data *data,$/;"	f	file:	signature:(struct eap_tnc_data *data, const u8 *buf, size_t len)
eap_tnc_process_cont	src/eap_server/eap_server_tnc.c	/^static int eap_tnc_process_cont(struct eap_tnc_data *data,$/;"	f	file:	signature:(struct eap_tnc_data *data, const u8 *buf, size_t len)
eap_tnc_process_fragment	src/eap_peer/eap_tnc.c	/^static struct wpabuf * eap_tnc_process_fragment(struct eap_tnc_data *data,$/;"	f	file:	signature:(struct eap_tnc_data *data, struct eap_method_ret *ret, u8 id, u8 flags, u32 message_length, const u8 *buf, size_t len)
eap_tnc_process_fragment	src/eap_server/eap_server_tnc.c	/^static int eap_tnc_process_fragment(struct eap_tnc_data *data,$/;"	f	file:	signature:(struct eap_tnc_data *data, u8 flags, u32 message_length, const u8 *buf, size_t len)
eap_tnc_reset	src/eap_server/eap_server_tnc.c	/^static void eap_tnc_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_tnc_set_state	src/eap_server/eap_server_tnc.c	/^static void eap_tnc_set_state(struct eap_tnc_data *data,$/;"	f	file:	signature:(struct eap_tnc_data *data, enum eap_tnc_state new_state)
eap_tnc_state	src/eap_server/eap_server_tnc.c	/^	enum eap_tnc_state {$/;"	g	struct:eap_tnc_data	file:	access:public
eap_tnc_state_txt	src/eap_server/eap_server_tnc.c	/^static const char * eap_tnc_state_txt(enum eap_tnc_state state)$/;"	f	file:	signature:(enum eap_tnc_state state)
eap_ttls_avp	src/eap_server/eap_server_ttls.c	/^struct eap_ttls_avp {$/;"	s	file:
eap_ttls_avp::chap_challenge	src/eap_server/eap_server_ttls.c	/^	u8 *chap_challenge;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::chap_challenge_len	src/eap_server/eap_server_ttls.c	/^	size_t chap_challenge_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::chap_password	src/eap_server/eap_server_ttls.c	/^	u8 *chap_password;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::chap_password_len	src/eap_server/eap_server_ttls.c	/^	size_t chap_password_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::eap	src/eap_server/eap_server_ttls.c	/^	u8 *eap;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::eap_len	src/eap_server/eap_server_ttls.c	/^	size_t eap_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::mschap2_response	src/eap_server/eap_server_ttls.c	/^	u8 *mschap2_response;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::mschap2_response_len	src/eap_server/eap_server_ttls.c	/^	size_t mschap2_response_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::mschap_challenge	src/eap_server/eap_server_ttls.c	/^	u8 *mschap_challenge;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::mschap_challenge_len	src/eap_server/eap_server_ttls.c	/^	size_t mschap_challenge_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::mschap_response	src/eap_server/eap_server_ttls.c	/^	u8 *mschap_response;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::mschap_response_len	src/eap_server/eap_server_ttls.c	/^	size_t mschap_response_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::user_name	src/eap_server/eap_server_ttls.c	/^	u8 *user_name;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::user_name_len	src/eap_server/eap_server_ttls.c	/^	size_t user_name_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::user_password	src/eap_server/eap_server_ttls.c	/^	u8 *user_password;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp::user_password_len	src/eap_server/eap_server_ttls.c	/^	size_t user_password_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
eap_ttls_avp_add	src/eap_peer/eap_ttls.c	/^static u8 * eap_ttls_avp_add(u8 *start, u8 *avphdr, u32 avp_code,$/;"	f	file:	signature:(u8 *start, u8 *avphdr, u32 avp_code, u32 vendor_id, int mandatory, const u8 *data, size_t len)
eap_ttls_avp_encapsulate	src/eap_peer/eap_ttls.c	/^static int eap_ttls_avp_encapsulate(struct wpabuf **resp, u32 avp_code,$/;"	f	file:	signature:(struct wpabuf **resp, u32 avp_code, int mandatory)
eap_ttls_avp_encapsulate	src/eap_server/eap_server_ttls.c	/^static struct wpabuf * eap_ttls_avp_encapsulate(struct wpabuf *resp,$/;"	f	file:	signature:(struct wpabuf *resp, u32 avp_code, int mandatory)
eap_ttls_avp_hdr	src/eap_peer/eap_ttls.c	/^static u8 * eap_ttls_avp_hdr(u8 *avphdr, u32 avp_code, u32 vendor_id,$/;"	f	file:	signature:(u8 *avphdr, u32 avp_code, u32 vendor_id, int mandatory, size_t len)
eap_ttls_avp_hdr	src/eap_server/eap_server_ttls.c	/^static u8 * eap_ttls_avp_hdr(u8 *avphdr, u32 avp_code, u32 vendor_id,$/;"	f	file:	signature:(u8 *avphdr, u32 avp_code, u32 vendor_id, int mandatory, size_t len)
eap_ttls_avp_parse	src/eap_server/eap_server_ttls.c	/^static int eap_ttls_avp_parse(struct wpabuf *buf, struct eap_ttls_avp *parse)$/;"	f	file:	signature:(struct wpabuf *buf, struct eap_ttls_avp *parse)
eap_ttls_buildReq	src/eap_server/eap_server_ttls.c	/^static struct wpabuf * eap_ttls_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_ttls_build_phase2_eap_req	src/eap_server/eap_server_ttls.c	/^static struct wpabuf * eap_ttls_build_phase2_eap_req($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_ttls_data *data, u8 id)
eap_ttls_build_phase2_mschapv2	src/eap_server/eap_server_ttls.c	/^static struct wpabuf * eap_ttls_build_phase2_mschapv2($/;"	f	file:	signature:( struct eap_sm *sm, struct eap_ttls_data *data)
eap_ttls_build_start	src/eap_server/eap_server_ttls.c	/^static struct wpabuf * eap_ttls_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, u8 id)
eap_ttls_check	src/eap_server/eap_server_ttls.c	/^static Boolean eap_ttls_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_ttls_check_auth_status	src/eap_peer/eap_ttls.c	/^static void eap_ttls_check_auth_status(struct eap_sm *sm, $/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret)
eap_ttls_data	src/eap_peer/eap_ttls.c	/^struct eap_ttls_data {$/;"	s	file:
eap_ttls_data	src/eap_server/eap_server_ttls.c	/^struct eap_ttls_data {$/;"	s	file:
eap_ttls_data::EAP_TTLS_PHASE2_CHAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_CHAP$/;"	e	enum:eap_ttls_data::phase2_types	file:
eap_ttls_data::EAP_TTLS_PHASE2_EAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_EAP,$/;"	e	enum:eap_ttls_data::phase2_types	file:
eap_ttls_data::EAP_TTLS_PHASE2_MSCHAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_MSCHAP,$/;"	e	enum:eap_ttls_data::phase2_types	file:
eap_ttls_data::EAP_TTLS_PHASE2_MSCHAPV2	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_MSCHAPV2,$/;"	e	enum:eap_ttls_data::phase2_types	file:
eap_ttls_data::EAP_TTLS_PHASE2_PAP	src/eap_peer/eap_ttls.c	/^		EAP_TTLS_PHASE2_PAP,$/;"	e	enum:eap_ttls_data::phase2_types	file:
eap_ttls_data::FAILURE	src/eap_server/eap_server_ttls.c	/^		PHASE2_MSCHAPV2_RESP, SUCCESS, FAILURE$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::PHASE1	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::PHASE2_METHOD	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::PHASE2_MSCHAPV2_RESP	src/eap_server/eap_server_ttls.c	/^		PHASE2_MSCHAPV2_RESP, SUCCESS, FAILURE$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::PHASE2_START	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::START	src/eap_server/eap_server_ttls.c	/^		START, PHASE1, PHASE2_START, PHASE2_METHOD,$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::SUCCESS	src/eap_server/eap_server_ttls.c	/^		PHASE2_MSCHAPV2_RESP, SUCCESS, FAILURE$/;"	e	enum:eap_ttls_data::__anon126	file:
eap_ttls_data::auth_response	src/eap_peer/eap_ttls.c	/^	u8 auth_response[MSCHAPV2_AUTH_RESPONSE_LEN];$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::auth_response_valid	src/eap_peer/eap_ttls.c	/^	int auth_response_valid;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::ident	src/eap_peer/eap_ttls.c	/^	u8 ident;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::key_data	src/eap_peer/eap_ttls.c	/^	u8 *key_data;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::master_key	src/eap_peer/eap_ttls.c	/^	u8 master_key[MSCHAPV2_MASTER_KEY_LEN]; \/* MSCHAPv2 master key *\/$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::mschapv2_auth_response	src/eap_server/eap_server_ttls.c	/^	u8 mschapv2_auth_response[20];$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::mschapv2_ident	src/eap_server/eap_server_ttls.c	/^	u8 mschapv2_ident;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::mschapv2_resp_ok	src/eap_server/eap_server_ttls.c	/^	int mschapv2_resp_ok;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::num_phase2_eap_types	src/eap_peer/eap_ttls.c	/^	size_t num_phase2_eap_types;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::pending_phase2_eap_resp	src/eap_server/eap_server_ttls.c	/^	struct wpabuf *pending_phase2_eap_resp;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::wpabuf	file:	access:public
eap_ttls_data::pending_phase2_req	src/eap_peer/eap_ttls.c	/^	struct wpabuf *pending_phase2_req;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::wpabuf	file:	access:public
eap_ttls_data::phase2_eap_type	src/eap_peer/eap_ttls.c	/^	struct eap_method_type phase2_eap_type;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method_type	file:	access:public
eap_ttls_data::phase2_eap_types	src/eap_peer/eap_ttls.c	/^	struct eap_method_type *phase2_eap_types;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method_type	file:	access:public
eap_ttls_data::phase2_method	src/eap_peer/eap_ttls.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method	file:	access:public
eap_ttls_data::phase2_method	src/eap_server/eap_server_ttls.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method	file:	access:public
eap_ttls_data::phase2_priv	src/eap_peer/eap_ttls.c	/^	void *phase2_priv;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::phase2_priv	src/eap_server/eap_server_ttls.c	/^	void *phase2_priv;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::phase2_start	src/eap_peer/eap_ttls.c	/^	int phase2_start;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::phase2_success	src/eap_peer/eap_ttls.c	/^	int phase2_success;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::phase2_type	src/eap_peer/eap_ttls.c	/^	} phase2_type;$/;"	m	struct:eap_ttls_data	typeref:enum:eap_ttls_data::phase2_types	file:	access:public
eap_ttls_data::phase2_types	src/eap_peer/eap_ttls.c	/^	enum phase2_types {$/;"	g	struct:eap_ttls_data	file:	access:public
eap_ttls_data::ready_for_tnc	src/eap_peer/eap_ttls.c	/^	int ready_for_tnc;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::reauth	src/eap_peer/eap_ttls.c	/^	int reauth; \/* reauthentication *\/$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::resuming	src/eap_peer/eap_ttls.c	/^	int resuming; \/* starting a resumed session *\/$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::ssl	src/eap_peer/eap_ttls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_ssl_data	file:	access:public
eap_ttls_data::ssl	src/eap_server/eap_server_ttls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_ssl_data	file:	access:public
eap_ttls_data::state	src/eap_server/eap_server_ttls.c	/^	} state;$/;"	m	struct:eap_ttls_data	typeref:enum:eap_ttls_data::__anon126	file:	access:public
eap_ttls_data::tnc_started	src/eap_peer/eap_ttls.c	/^	int tnc_started;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::tnc_started	src/eap_server/eap_server_ttls.c	/^	int tnc_started;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::ttls_version	src/eap_peer/eap_ttls.c	/^	int ttls_version;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_data::ttls_version	src/eap_server/eap_server_ttls.c	/^	int ttls_version;$/;"	m	struct:eap_ttls_data	file:	access:public
eap_ttls_decrypt	src/eap_peer/eap_ttls.c	/^static int eap_ttls_decrypt(struct eap_sm *sm, struct eap_ttls_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, u8 identifier, const struct wpabuf *in_data, struct wpabuf **out_data)
eap_ttls_deinit	src/eap_peer/eap_ttls.c	/^static void eap_ttls_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_deinit	src/eap_peer/eap_ttls.c	/^static void eap_ttls_deinit(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_deinit_for_reauth	src/eap_peer/eap_ttls.c	/^static void eap_ttls_deinit_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_encrypt_response	src/eap_peer/eap_ttls.c	/^static int eap_ttls_encrypt_response(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct wpabuf *resp, u8 identifier, struct wpabuf **out_data)
eap_ttls_fake_identity_request	src/eap_peer/eap_ttls.c	/^static u8 * eap_ttls_fake_identity_request(void)$/;"	f	file:	signature:(void)
eap_ttls_getKey	src/eap_peer/eap_ttls.c	/^static u8 * eap_ttls_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_ttls_getKey	src/eap_server/eap_server_ttls.c	/^static u8 * eap_ttls_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_ttls_get_status	src/eap_peer/eap_ttls.c	/^static int eap_ttls_get_status(struct eap_sm *sm, void *priv, char *buf,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, char *buf, size_t buflen, int verbose)
eap_ttls_has_reauth_data	src/eap_peer/eap_ttls.c	/^static Boolean eap_ttls_has_reauth_data(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_implicit_challenge	src/eap_peer/eap_ttls.c	/^static u8 * eap_ttls_implicit_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, size_t len)
eap_ttls_implicit_challenge	src/eap_server/eap_server_ttls.c	/^static u8 * eap_ttls_implicit_challenge(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, size_t len)
eap_ttls_implicit_identity_request	src/eap_peer/eap_ttls.c	/^static int eap_ttls_implicit_identity_request(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, u8 identifier, struct wpabuf **out_data)
eap_ttls_init	src/eap_peer/eap_ttls.c	/^static void * eap_ttls_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_ttls_init	src/eap_server/eap_server_ttls.c	/^static void * eap_ttls_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_ttls_init_for_reauth	src/eap_peer/eap_ttls.c	/^static void * eap_ttls_init_for_reauth(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_isDone	src/eap_server/eap_server_ttls.c	/^static Boolean eap_ttls_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_isKeyAvailable	src/eap_peer/eap_ttls.c	/^static Boolean eap_ttls_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_isSuccess	src/eap_server/eap_server_ttls.c	/^static Boolean eap_ttls_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_parse_attr_eap	src/eap_peer/eap_ttls.c	/^static int eap_ttls_parse_attr_eap(const u8 *dpos, size_t dlen,$/;"	f	file:	signature:(const u8 *dpos, size_t dlen, struct ttls_parse_avp *parse)
eap_ttls_parse_avp	src/eap_peer/eap_ttls.c	/^static int eap_ttls_parse_avp(u8 *pos, size_t left,$/;"	f	file:	signature:(u8 *pos, size_t left, struct ttls_parse_avp *parse)
eap_ttls_parse_avps	src/eap_peer/eap_ttls.c	/^static int eap_ttls_parse_avps(struct wpabuf *in_decrypted,$/;"	f	file:	signature:(struct wpabuf *in_decrypted, struct ttls_parse_avp *parse)
eap_ttls_phase2_eap_deinit	src/eap_peer/eap_ttls.c	/^static void eap_ttls_phase2_eap_deinit(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data)
eap_ttls_phase2_eap_init	src/eap_server/eap_server_ttls.c	/^static int eap_ttls_phase2_eap_init(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, EapType eap_type)
eap_ttls_phase2_eap_process	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_eap_process(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct eap_hdr *hdr, size_t len, struct wpabuf **resp)
eap_ttls_phase2_request	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct eap_hdr *hdr, struct wpabuf **resp)
eap_ttls_phase2_request_chap	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request_chap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct wpabuf **resp)
eap_ttls_phase2_request_eap	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request_eap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct eap_hdr *hdr, struct wpabuf **resp)
eap_ttls_phase2_request_eap_method	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request_eap_method(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct eap_hdr *hdr, size_t len, u8 method, struct wpabuf **resp)
eap_ttls_phase2_request_mschap	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request_mschap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct wpabuf **resp)
eap_ttls_phase2_request_mschapv2	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request_mschapv2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct wpabuf **resp)
eap_ttls_phase2_request_pap	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_request_pap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct wpabuf **resp)
eap_ttls_phase2_select_eap_method	src/eap_peer/eap_ttls.c	/^static void eap_ttls_phase2_select_eap_method(struct eap_ttls_data *data,$/;"	f	file:	signature:(struct eap_ttls_data *data, u8 method)
eap_ttls_phase2_start	src/eap_peer/eap_ttls.c	/^static int eap_ttls_phase2_start(struct eap_sm *sm, struct eap_ttls_data *data,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, u8 identifier, struct wpabuf **out_data)
eap_ttls_process	src/eap_peer/eap_ttls.c	/^static struct wpabuf * eap_ttls_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_ttls_process	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_ttls_process_decrypted	src/eap_peer/eap_ttls.c	/^static int eap_ttls_process_decrypted(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, u8 identifier, struct ttls_parse_avp *parse, struct wpabuf *in_decrypted, struct wpabuf **out_data)
eap_ttls_process_handshake	src/eap_peer/eap_ttls.c	/^static int eap_ttls_process_handshake(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, u8 identifier, const u8 *in_data, size_t in_len, struct wpabuf **out_data)
eap_ttls_process_msg	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_msg(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, const struct wpabuf *respData)
eap_ttls_process_phase2	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct wpabuf *in_buf)
eap_ttls_process_phase2_chap	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2_chap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, const u8 *challenge, size_t challenge_len, const u8 *password, size_t password_len)
eap_ttls_process_phase2_eap	src/eap_peer/eap_ttls.c	/^static int eap_ttls_process_phase2_eap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct ttls_parse_avp *parse, struct wpabuf **resp)
eap_ttls_process_phase2_eap	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2_eap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, const u8 *eap, size_t eap_len)
eap_ttls_process_phase2_eap_response	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2_eap_response(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, u8 *in_data, size_t in_len)
eap_ttls_process_phase2_mschap	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2_mschap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, u8 *challenge, size_t challenge_len, u8 *response, size_t response_len)
eap_ttls_process_phase2_mschapv2	src/eap_peer/eap_ttls.c	/^static int eap_ttls_process_phase2_mschapv2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct ttls_parse_avp *parse)
eap_ttls_process_phase2_mschapv2	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2_mschapv2(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, u8 *challenge, size_t challenge_len, u8 *response, size_t response_len)
eap_ttls_process_phase2_pap	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_process_phase2_pap(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, const u8 *user_password, size_t user_password_len)
eap_ttls_process_tnc_start	src/eap_peer/eap_ttls.c	/^static int eap_ttls_process_tnc_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data, struct eap_method_ret *ret, struct ttls_parse_avp *parse, struct wpabuf **resp)
eap_ttls_process_version	src/eap_server/eap_server_ttls.c	/^static int eap_ttls_process_version(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, int peer_version)
eap_ttls_reset	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_reset	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_reset(struct eap_sm *sm, void *priv);$/;"	p	file:	signature:(struct eap_sm *sm, void *priv)
eap_ttls_start_tnc	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_start_tnc(struct eap_sm *sm, struct eap_ttls_data *data)$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data)
eap_ttls_state	src/eap_server/eap_server_ttls.c	/^static void eap_ttls_state(struct eap_ttls_data *data, int state)$/;"	f	file:	signature:(struct eap_ttls_data *data, int state)
eap_ttls_state_txt	src/eap_server/eap_server_ttls.c	/^static const char * eap_ttls_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_ttls_v0_derive_key	src/eap_peer/eap_ttls.c	/^static int eap_ttls_v0_derive_key(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_ttls_data *data)
eap_type	src/wps/wps_i.h	/^	const u8 *eap_type; \/* <= 8 octets *\/$/;"	m	struct:wps_parse_attr	access:public
eap_type_authsrv	src/ap/pmksa_cache_auth.h	/^	u8 eap_type_authsrv;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
eap_type_authsrv	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 eap_type_authsrv; \/* EAP type of the last EAP packet from$/;"	m	struct:eapol_state_machine	access:public
eap_type_len	src/wps/wps_i.h	/^	size_t eap_type_len;$/;"	m	struct:wps_parse_attr	access:public
eap_type_supp	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 eap_type_supp; \/* EAP type of the last EAP packet from Supplicant 记录了从请求者发来的最后一个EAP报文的type字段*\/$/;"	m	struct:eapol_state_machine	access:public
eap_type_text	src/ap/ieee802_1x.h	/^char *eap_type_text(u8 type);$/;"	p	signature:(u8 type)
eap_update_len	src/eap_common/eap_common.c	/^void eap_update_len(struct wpabuf *msg)$/;"	f	signature:(struct wpabuf *msg)
eap_update_len	src/eap_common/eap_common.h	/^void eap_update_len(struct wpabuf *msg);$/;"	p	signature:(struct wpabuf *msg)
eap_user	src/ap/ap_config.h	/^	struct hostapd_eap_user *eap_user;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_eap_user	access:public
eap_user	src/eap_server/eap.h	/^struct eap_user {$/;"	s
eap_user::__anon133::method	src/eap_server/eap.h	/^		u32 method;$/;"	m	struct:eap_user::__anon133	access:public
eap_user::__anon133::vendor	src/eap_server/eap.h	/^		int vendor;$/;"	m	struct:eap_user::__anon133	access:public
eap_user::force_version	src/eap_server/eap.h	/^	int force_version;$/;"	m	struct:eap_user	access:public
eap_user::methods	src/eap_server/eap.h	/^	} methods[EAP_MAX_METHODS];$/;"	m	struct:eap_user	typeref:struct:eap_user::__anon133	access:public
eap_user::password	src/eap_server/eap.h	/^	u8 *password;$/;"	m	struct:eap_user	access:public
eap_user::password_hash	src/eap_server/eap.h	/^	int password_hash; \/* whether password is hashed with$/;"	m	struct:eap_user	access:public
eap_user::password_len	src/eap_server/eap.h	/^	size_t password_len;$/;"	m	struct:eap_user	access:public
eap_user::phase2	src/eap_server/eap.h	/^	int phase2;$/;"	m	struct:eap_user	access:public
eap_user::ttls_auth	src/eap_server/eap.h	/^	int ttls_auth; \/* bitfield of$/;"	m	struct:eap_user	access:public
eap_user_free	src/eap_server/eap_server.c	/^static void eap_user_free(struct eap_user *user)$/;"	f	file:	signature:(struct eap_user *user)
eap_user_free	src/eap_server/eap_server.c	/^static void eap_user_free(struct eap_user *user);$/;"	p	file:	signature:(struct eap_user *user)
eap_user_get	src/eap_server/eap_i.h	/^int eap_user_get(struct eap_sm *sm, const u8 *identity, size_t identity_len,$/;"	p	signature:(struct eap_sm *sm, const u8 *identity, size_t identity_len, int phase2)
eap_user_get	src/eap_server/eap_server.c	/^int eap_user_get(struct eap_sm *sm, const u8 *identity, size_t identity_len,$/;"	f	signature:(struct eap_sm *sm, const u8 *identity, size_t identity_len, int phase2)
eap_vendor_ready	src/eap_peer/eap_vendor_test.c	/^static void eap_vendor_ready(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eap_vendor_test_buildReq	src/eap_server/eap_server_vendor_test.c	/^static struct wpabuf * eap_vendor_test_buildReq(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_vendor_test_check	src/eap_server/eap_server_vendor_test.c	/^static Boolean eap_vendor_test_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_vendor_test_data	src/eap_peer/eap_vendor_test.c	/^struct eap_vendor_test_data {$/;"	s	file:
eap_vendor_test_data	src/eap_server/eap_server_vendor_test.c	/^struct eap_vendor_test_data {$/;"	s	file:
eap_vendor_test_data::CONFIRM	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	e	enum:eap_vendor_test_data::__anon176	file:
eap_vendor_test_data::CONFIRM	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
eap_vendor_test_data::FAILURE	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
eap_vendor_test_data::INIT	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	e	enum:eap_vendor_test_data::__anon176	file:
eap_vendor_test_data::INIT	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
eap_vendor_test_data::SUCCESS	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	e	enum:eap_vendor_test_data::__anon176	file:
eap_vendor_test_data::SUCCESS	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	e	enum:eap_vendor_test_data::__anon154	file:
eap_vendor_test_data::first_try	src/eap_peer/eap_vendor_test.c	/^	int first_try;$/;"	m	struct:eap_vendor_test_data	file:	access:public
eap_vendor_test_data::state	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	m	struct:eap_vendor_test_data	typeref:enum:eap_vendor_test_data::__anon176	file:	access:public
eap_vendor_test_data::state	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	m	struct:eap_vendor_test_data	typeref:enum:eap_vendor_test_data::__anon154	file:	access:public
eap_vendor_test_deinit	src/eap_peer/eap_vendor_test.c	/^static void eap_vendor_test_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_vendor_test_getKey	src/eap_peer/eap_vendor_test.c	/^static u8 * eap_vendor_test_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_vendor_test_getKey	src/eap_server/eap_server_vendor_test.c	/^static u8 * eap_vendor_test_getKey(struct eap_sm *sm, void *priv, size_t *len)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, size_t *len)
eap_vendor_test_init	src/eap_peer/eap_vendor_test.c	/^static void * eap_vendor_test_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_vendor_test_init	src/eap_server/eap_server_vendor_test.c	/^static void * eap_vendor_test_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_vendor_test_isDone	src/eap_server/eap_server_vendor_test.c	/^static Boolean eap_vendor_test_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_vendor_test_isKeyAvailable	src/eap_peer/eap_vendor_test.c	/^static Boolean eap_vendor_test_isKeyAvailable(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_vendor_test_isSuccess	src/eap_server/eap_server_vendor_test.c	/^static Boolean eap_vendor_test_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_vendor_test_process	src/eap_peer/eap_vendor_test.c	/^static struct wpabuf * eap_vendor_test_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_vendor_test_process	src/eap_server/eap_server_vendor_test.c	/^static void eap_vendor_test_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_vendor_test_reset	src/eap_server/eap_server_vendor_test.c	/^static void eap_vendor_test_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_vendor_test_state	src/eap_server/eap_server_vendor_test.c	/^static void eap_vendor_test_state(struct eap_vendor_test_data *data,$/;"	f	file:	signature:(struct eap_vendor_test_data *data, int state)
eap_vendor_test_state_txt	src/eap_server/eap_server_vendor_test.c	/^static const char * eap_vendor_test_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_workaround	src/rsn_supp/wpa.h	/^	int eap_workaround;$/;"	m	struct:rsn_supp_config	access:public
eap_workaround	src/rsn_supp/wpa_i.h	/^	int eap_workaround;$/;"	m	struct:wpa_sm	access:public
eap_wsc_buildReq	src/eap_server/eap_server_wsc.c	/^static struct wpabuf * eap_wsc_buildReq(struct eap_sm *sm, void *priv, u8 id)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, u8 id)
eap_wsc_build_frag_ack	src/eap_common/eap_wsc_common.c	/^struct wpabuf * eap_wsc_build_frag_ack(u8 id, u8 code)$/;"	f	signature:(u8 id, u8 code)
eap_wsc_build_frag_ack	src/eap_common/eap_wsc_common.h	/^struct wpabuf * eap_wsc_build_frag_ack(u8 id, u8 code);$/;"	p	signature:(u8 id, u8 code)
eap_wsc_build_msg	src/eap_peer/eap_wsc.c	/^static struct wpabuf * eap_wsc_build_msg(struct eap_wsc_data *data,$/;"	f	file:	signature:(struct eap_wsc_data *data, struct eap_method_ret *ret, u8 id)
eap_wsc_build_msg	src/eap_server/eap_server_wsc.c	/^static struct wpabuf * eap_wsc_build_msg(struct eap_wsc_data *data, u8 id)$/;"	f	file:	signature:(struct eap_wsc_data *data, u8 id)
eap_wsc_build_start	src/eap_server/eap_server_wsc.c	/^static struct wpabuf * eap_wsc_build_start(struct eap_sm *sm,$/;"	f	file:	signature:(struct eap_sm *sm, struct eap_wsc_data *data, u8 id)
eap_wsc_check	src/eap_server/eap_server_wsc.c	/^static Boolean eap_wsc_check(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_wsc_data	src/eap_peer/eap_wsc.c	/^struct eap_wsc_data {$/;"	s	file:
eap_wsc_data	src/eap_server/eap_server_wsc.c	/^struct eap_wsc_data {$/;"	s	file:
eap_wsc_data::DONE	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
eap_wsc_data::DONE	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
eap_wsc_data::FAIL	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
eap_wsc_data::FAIL	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
eap_wsc_data::FRAG_ACK	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
eap_wsc_data::FRAG_ACK	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
eap_wsc_data::MESG	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
eap_wsc_data::MESG	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
eap_wsc_data::START	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
eap_wsc_data::WAIT_FRAG_ACK	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
eap_wsc_data::WAIT_FRAG_ACK	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon132	file:
eap_wsc_data::WAIT_START	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	e	enum:eap_wsc_data::__anon181	file:
eap_wsc_data::ext_reg_timeout	src/eap_server/eap_server_wsc.c	/^	int ext_reg_timeout;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::fragment_size	src/eap_peer/eap_wsc.c	/^	size_t fragment_size;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::fragment_size	src/eap_server/eap_server_wsc.c	/^	size_t fragment_size;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::in_buf	src/eap_peer/eap_wsc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
eap_wsc_data::in_buf	src/eap_server/eap_server_wsc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
eap_wsc_data::in_op_code	src/eap_peer/eap_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::wsc_op_code	file:	access:public
eap_wsc_data::in_op_code	src/eap_server/eap_server_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::wsc_op_code	file:	access:public
eap_wsc_data::out_buf	src/eap_peer/eap_wsc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
eap_wsc_data::out_buf	src/eap_server/eap_server_wsc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
eap_wsc_data::out_op_code	src/eap_peer/eap_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::	file:	access:public
eap_wsc_data::out_op_code	src/eap_server/eap_server_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::	file:	access:public
eap_wsc_data::out_used	src/eap_peer/eap_wsc.c	/^	size_t out_used;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::out_used	src/eap_server/eap_server_wsc.c	/^	size_t out_used;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::registrar	src/eap_peer/eap_wsc.c	/^	int registrar;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::registrar	src/eap_server/eap_server_wsc.c	/^	int registrar;$/;"	m	struct:eap_wsc_data	file:	access:public
eap_wsc_data::state	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::__anon181	file:	access:public
eap_wsc_data::state	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::__anon132	file:	access:public
eap_wsc_data::wps	src/eap_peer/eap_wsc.c	/^	struct wps_data *wps;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wps_data	file:	access:public
eap_wsc_data::wps	src/eap_server/eap_server_wsc.c	/^	struct wps_data *wps;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wps_data	file:	access:public
eap_wsc_data::wps_ctx	src/eap_peer/eap_wsc.c	/^	struct wps_context *wps_ctx;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wps_context	file:	access:public
eap_wsc_deinit	src/eap_peer/eap_wsc.c	/^static void eap_wsc_deinit(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_wsc_ext_reg_timeout	src/eap_server/eap_server_wsc.c	/^static void eap_wsc_ext_reg_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eap_wsc_getTimeout	src/eap_server/eap_server_wsc.c	/^static int eap_wsc_getTimeout(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_wsc_init	src/eap_peer/eap_wsc.c	/^static void * eap_wsc_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_wsc_init	src/eap_server/eap_server_wsc.c	/^static void * eap_wsc_init(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eap_wsc_isDone	src/eap_server/eap_server_wsc.c	/^static Boolean eap_wsc_isDone(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_wsc_isSuccess	src/eap_server/eap_server_wsc.c	/^static Boolean eap_wsc_isSuccess(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_wsc_new_ap_settings	src/eap_peer/eap_wsc.c	/^static int eap_wsc_new_ap_settings(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const char *params)
eap_wsc_process	src/eap_peer/eap_wsc.c	/^static struct wpabuf * eap_wsc_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct eap_method_ret *ret, const struct wpabuf *reqData)
eap_wsc_process	src/eap_server/eap_server_wsc.c	/^static void eap_wsc_process(struct eap_sm *sm, void *priv,$/;"	f	file:	signature:(struct eap_sm *sm, void *priv, struct wpabuf *respData)
eap_wsc_process_cont	src/eap_peer/eap_wsc.c	/^static int eap_wsc_process_cont(struct eap_wsc_data *data,$/;"	f	file:	signature:(struct eap_wsc_data *data, const u8 *buf, size_t len, u8 op_code)
eap_wsc_process_cont	src/eap_server/eap_server_wsc.c	/^static int eap_wsc_process_cont(struct eap_wsc_data *data,$/;"	f	file:	signature:(struct eap_wsc_data *data, const u8 *buf, size_t len, u8 op_code)
eap_wsc_process_fragment	src/eap_peer/eap_wsc.c	/^static struct wpabuf * eap_wsc_process_fragment(struct eap_wsc_data *data,$/;"	f	file:	signature:(struct eap_wsc_data *data, struct eap_method_ret *ret, u8 id, u8 flags, u8 op_code, u16 message_length, const u8 *buf, size_t len)
eap_wsc_process_fragment	src/eap_server/eap_server_wsc.c	/^static int eap_wsc_process_fragment(struct eap_wsc_data *data,$/;"	f	file:	signature:(struct eap_wsc_data *data, u8 flags, u8 op_code, u16 message_length, const u8 *buf, size_t len)
eap_wsc_reset	src/eap_server/eap_server_wsc.c	/^static void eap_wsc_reset(struct eap_sm *sm, void *priv)$/;"	f	file:	signature:(struct eap_sm *sm, void *priv)
eap_wsc_state	src/eap_peer/eap_wsc.c	/^static void eap_wsc_state(struct eap_wsc_data *data, int state)$/;"	f	file:	signature:(struct eap_wsc_data *data, int state)
eap_wsc_state	src/eap_server/eap_server_wsc.c	/^static void eap_wsc_state(struct eap_wsc_data *data, int state)$/;"	f	file:	signature:(struct eap_wsc_data *data, int state)
eap_wsc_state_txt	src/eap_peer/eap_wsc.c	/^static const char * eap_wsc_state_txt(int state)$/;"	f	file:	signature:(int state)
eap_wsc_state_txt	src/eap_server/eap_server_wsc.c	/^static const char * eap_wsc_state_txt(int state)$/;"	f	file:	signature:(int state)
eapdata	src/eap_peer/eap_ttls.c	/^	u8 *eapdata;$/;"	m	struct:ttls_parse_avp	file:	access:public
eapol	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eapol_authenticator *eapol;  \/\/ 指向eapol认证控制块$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::eapol_authenticator	access:public
eapol	src/rsn_supp/wpa_i.h	/^	struct eapol_sm *eapol; \/* EAPOL state machine from upper level code *\/$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::eapol_sm	access:public
eapolEap	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean eapolEap;       \/\/ 作为认证者，接收到承载了EAP-PACKET(通常是一个resp)的EAPOL报文时设置TRUE；BE_AUTH SM 进入REQUEST(非标准)\/RESPONSE状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapolEap	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapolEap;$/;"	m	struct:eapol_sm	file:	access:public
eapolLogoff	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean eapolLogoff;    \/\/ eapol层接收到eapol-logoff报文时设置TRUE；状态机进入DISCONNECTED\/HELD状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapolStart	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean eapolStart;     \/\/ eapol层接收到eapol-start报文时设置TRUE；状态机进入AUTHENTICATING\/FORCE_AUTH\/FORCE_UNAUTH状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_auth	src/ap/hostapd.h	/^	struct eapol_authenticator *eapol_auth; \/\/ 供认证者使用的eapol层数据块$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::eapol_authenticator	access:public
eapol_auth_alloc	src/eapol_auth/eapol_auth_sm.c	/^eapol_auth_alloc(struct eapol_authenticator *eapol, const u8 *addr,$/;"	f	signature:(struct eapol_authenticator *eapol, const u8 *addr, int flags, const struct wpabuf *assoc_wps_ie, const struct wpabuf *assoc_p2p_ie, void *sta_ctx)
eapol_auth_alloc	src/eapol_auth/eapol_auth_sm.h	/^eapol_auth_alloc(struct eapol_authenticator *eapol, const u8 *addr,$/;"	p	signature:(struct eapol_authenticator *eapol, const u8 *addr, int flags, const struct wpabuf *assoc_wps_ie, const struct wpabuf *assoc_p2p_ie, void *sta_ctx)
eapol_auth_cb	src/eapol_auth/eapol_auth_sm.h	/^struct eapol_auth_cb {$/;"	s
eapol_auth_cb::aaa_send	src/eapol_auth/eapol_auth_sm.h	/^	void (*aaa_send)(void *ctx, void *sta_ctx, const u8 *data,$/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::abort_auth	src/eapol_auth/eapol_auth_sm.h	/^	void (*abort_auth)(void *ctx, void *sta_ctx);                           \/\/ _ieee802_1x_abort_auth $/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::eapol_event	src/eapol_auth/eapol_auth_sm.h	/^	void (*eapol_event)(void *ctx, void *sta_ctx, enum eapol_event type);   \/\/ ieee802_1x_eapol_event$/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::eapol_send	src/eapol_auth/eapol_auth_sm.h	/^	void (*eapol_send)(void *ctx, void *sta_ctx, u8 type, const u8 *data,$/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::finished	src/eapol_auth/eapol_auth_sm.h	/^	void (*finished)(void *ctx, void *sta_ctx, int success, int preauth);   \/\/ _ieee802_1x_finished $/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::get_eap_user	src/eapol_auth/eapol_auth_sm.h	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,  $/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::logger	src/eapol_auth/eapol_auth_sm.h	/^	void (*logger)(void *ctx, const u8 *addr, eapol_logger_level level,                                       $/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::set_port_authorized	src/eapol_auth/eapol_auth_sm.h	/^	void (*set_port_authorized)(void *ctx, void *sta_ctx, int authorized);  \/\/ ieee802_1x_set_port_authorized$/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::sta_entry_alive	src/eapol_auth/eapol_auth_sm.h	/^	int (*sta_entry_alive)(void *ctx, const u8 *addr);                      \/\/ ieee802_1x_sta_entry_alive$/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_cb::tx_key	src/eapol_auth/eapol_auth_sm.h	/^	void (*tx_key)(void *ctx, void *sta_ctx);                               \/\/ _ieee802_1x_tx_key$/;"	m	struct:eapol_auth_cb	access:public
eapol_auth_conf_clone	src/eapol_auth/eapol_auth_sm.c	/^static int eapol_auth_conf_clone(struct eapol_auth_config *dst,$/;"	f	file:	signature:(struct eapol_auth_config *dst, struct eapol_auth_config *src)
eapol_auth_conf_free	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_conf_free(struct eapol_auth_config *conf)$/;"	f	file:	signature:(struct eapol_auth_config *conf)
eapol_auth_config	src/eapol_auth/eapol_auth_sm.h	/^struct eapol_auth_config {$/;"	s
eapol_auth_config::ctx	src/eapol_auth/eapol_auth_sm.h	/^	void *ctx;  \/\/ 指向所属的bss(也就是hostapd_data结构体)$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_fast_a_id	src/eapol_auth/eapol_auth_sm.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_fast_a_id_info	src/eapol_auth/eapol_auth_sm.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_fast_a_id_len	src/eapol_auth/eapol_auth_sm.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_fast_prov	src/eapol_auth/eapol_auth_sm.h	/^	int eap_fast_prov;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_reauth_period	src/eapol_auth/eapol_auth_sm.h	/^	int eap_reauth_period;  \/\/ 重认证周期，目前固定3600s$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_req_id_text	src/eapol_auth/eapol_auth_sm.h	/^	char *eap_req_id_text; \/* a copy of this will be allocated *\/$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_req_id_text_len	src/eapol_auth/eapol_auth_sm.h	/^	size_t eap_req_id_text_len;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_server	src/eapol_auth/eapol_auth_sm.h	/^	int eap_server;         \/\/ 标志位，代表是否使用内部EAP服务器，0 = 使用外部$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_sim_aka_result_ind	src/eapol_auth/eapol_auth_sm.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::eap_sim_db_priv	src/eapol_auth/eapol_auth_sm.h	/^	void *eap_sim_db_priv;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::fragment_size	src/eapol_auth/eapol_auth_sm.h	/^	int fragment_size;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::individual_wep_key_len	src/eapol_auth/eapol_auth_sm.h	/^	int individual_wep_key_len;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::msg_ctx	src/eapol_auth/eapol_auth_sm.h	/^	void *msg_ctx;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::pac_key_lifetime	src/eapol_auth/eapol_auth_sm.h	/^	int pac_key_lifetime;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::pac_key_refresh_time	src/eapol_auth/eapol_auth_sm.h	/^	int pac_key_refresh_time;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::pac_opaque_encr_key	src/eapol_auth/eapol_auth_sm.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::pbc_in_m1	src/eapol_auth/eapol_auth_sm.h	/^	int pbc_in_m1;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::pwd_group	src/eapol_auth/eapol_auth_sm.h	/^	u16 pwd_group;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::ssl_ctx	src/eapol_auth/eapol_auth_sm.h	/^	void *ssl_ctx;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::tnc	src/eapol_auth/eapol_auth_sm.h	/^	int tnc;$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::wpa	src/eapol_auth/eapol_auth_sm.h	/^	int wpa;                \/\/ wpa\/wpa2功能选择位$/;"	m	struct:eapol_auth_config	access:public
eapol_auth_config::wps	src/eapol_auth/eapol_auth_sm.h	/^	struct wps_context *wps;$/;"	m	struct:eapol_auth_config	typeref:struct:eapol_auth_config::wps_context	access:public
eapol_auth_deinit	src/eapol_auth/eapol_auth_sm.c	/^void eapol_auth_deinit(struct eapol_authenticator *eapol)$/;"	f	signature:(struct eapol_authenticator *eapol)
eapol_auth_deinit	src/eapol_auth/eapol_auth_sm.h	/^void eapol_auth_deinit(struct eapol_authenticator *eapol);$/;"	p	signature:(struct eapol_authenticator *eapol)
eapol_auth_dump_state	src/eapol_auth/eapol_auth_dump.c	/^void eapol_auth_dump_state(FILE *f, const char *prefix,$/;"	f	signature:(FILE *f, const char *prefix, struct eapol_state_machine *sm)
eapol_auth_dump_state	src/eapol_auth/eapol_auth_sm.h	/^void eapol_auth_dump_state(FILE *f, const char *prefix,$/;"	p	signature:(FILE *f, const char *prefix, struct eapol_state_machine *sm)
eapol_auth_eap_pending_cb	src/eapol_auth/eapol_auth_sm.c	/^int eapol_auth_eap_pending_cb(struct eapol_state_machine *sm, void *ctx)$/;"	f	signature:(struct eapol_state_machine *sm, void *ctx)
eapol_auth_eap_pending_cb	src/eapol_auth/eapol_auth_sm.h	/^int eapol_auth_eap_pending_cb(struct eapol_state_machine *sm, void *ctx);$/;"	p	signature:(struct eapol_state_machine *sm, void *ctx)
eapol_auth_free	src/eapol_auth/eapol_auth_sm.c	/^void eapol_auth_free(struct eapol_state_machine *sm)$/;"	f	signature:(struct eapol_state_machine *sm)
eapol_auth_free	src/eapol_auth/eapol_auth_sm.h	/^void eapol_auth_free(struct eapol_state_machine *sm);$/;"	p	signature:(struct eapol_state_machine *sm)
eapol_auth_init	src/eapol_auth/eapol_auth_sm.c	/^struct eapol_authenticator * eapol_auth_init(struct eapol_auth_config *conf,$/;"	f	signature:(struct eapol_auth_config *conf, struct eapol_auth_cb *cb)
eapol_auth_init	src/eapol_auth/eapol_auth_sm.h	/^struct eapol_authenticator * eapol_auth_init(struct eapol_auth_config *conf,$/;"	p	signature:(struct eapol_auth_config *conf, struct eapol_auth_cb *cb)
eapol_auth_initialize	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_initialize(struct eapol_state_machine *sm)$/;"	f	file:	signature:(struct eapol_state_machine *sm)
eapol_auth_initialize	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_initialize(struct eapol_state_machine *sm);$/;"	p	file:	signature:(struct eapol_state_machine *sm)
eapol_auth_logger	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_logger(struct eapol_authenticator *eapol,$/;"	f	file:	signature:(struct eapol_authenticator *eapol, const u8 *addr, eapol_logger_level level, const char *txt)
eapol_auth_step	src/eapol_auth/eapol_auth_sm.c	/^void eapol_auth_step(struct eapol_state_machine *sm)$/;"	f	signature:(struct eapol_state_machine *sm)
eapol_auth_step	src/eapol_auth/eapol_auth_sm.h	/^void eapol_auth_step(struct eapol_state_machine *sm);$/;"	p	signature:(struct eapol_state_machine *sm)
eapol_auth_tx_canned_eap	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_tx_canned_eap(struct eapol_state_machine *sm,$/;"	f	file:	signature:(struct eapol_state_machine *sm, int success)
eapol_auth_tx_req	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_tx_req(struct eapol_state_machine *sm)$/;"	f	file:	signature:(struct eapol_state_machine *sm)
eapol_auth_vlogger	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_auth_vlogger(struct eapol_authenticator *eapol,$/;"	f	file:	signature:(struct eapol_authenticator *eapol, const u8 *addr, eapol_logger_level level, const char *fmt, ...)
eapol_authenticator	src/eapol_auth/eapol_auth_sm_i.h	/^struct eapol_authenticator {$/;"	s
eapol_authenticator::cb	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eapol_auth_cb cb;        \/\/ 回调函数集$/;"	m	struct:eapol_authenticator	typeref:struct:eapol_authenticator::eapol_auth_cb	access:public
eapol_authenticator::conf	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eapol_auth_config conf;  \/\/ 配置信息$/;"	m	struct:eapol_authenticator	typeref:struct:eapol_authenticator::eapol_auth_config	access:public
eapol_authenticator::default_wep_key	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *default_wep_key;$/;"	m	struct:eapol_authenticator	access:public
eapol_authenticator::default_wep_key_idx	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 default_wep_key_idx;$/;"	m	struct:eapol_authenticator	access:public
eapol_bool_var	src/eap_peer/eap.h	/^enum eapol_bool_var {$/;"	g
eapol_callbacks	src/eap_peer/eap.h	/^struct eapol_callbacks {$/;"	s
eapol_callbacks	src/eap_server/eap.h	/^struct eapol_callbacks {$/;"	s
eapol_callbacks::eap_param_needed	src/eap_peer/eap.h	/^	void (*eap_param_needed)(void *ctx, enum wpa_ctrl_req_type field,$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::get_bool	src/eap_peer/eap.h	/^	Boolean (*get_bool)(void *ctx, enum eapol_bool_var variable);$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::get_config	src/eap_peer/eap.h	/^	struct eap_peer_config * (*get_config)(void *ctx);$/;"	m	struct:eapol_callbacks	typeref:struct:eapol_callbacks::get_config	access:public
eapol_callbacks::get_config_blob	src/eap_peer/eap.h	/^	const struct wpa_config_blob * (*get_config_blob)(void *ctx,$/;"	m	struct:eapol_callbacks	typeref:struct:eapol_callbacks::get_config_blob	access:public
eapol_callbacks::get_eapReqData	src/eap_peer/eap.h	/^	struct wpabuf * (*get_eapReqData)(void *ctx);$/;"	m	struct:eapol_callbacks	typeref:struct:eapol_callbacks::get_eapReqData	access:public
eapol_callbacks::get_eap_req_id_text	src/eap_server/eap.h	/^	const char * (*get_eap_req_id_text)(void *ctx, size_t *len);$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::get_eap_user	src/eap_server/eap.h	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::get_int	src/eap_peer/eap.h	/^	unsigned int (*get_int)(void *ctx, enum eapol_int_var variable);$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::notify_cert	src/eap_peer/eap.h	/^	void (*notify_cert)(void *ctx, int depth, const char *subject,$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::notify_pending	src/eap_peer/eap.h	/^	void (*notify_pending)(void *ctx);$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::set_bool	src/eap_peer/eap.h	/^	void (*set_bool)(void *ctx, enum eapol_bool_var variable,$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::set_config_blob	src/eap_peer/eap.h	/^	void (*set_config_blob)(void *ctx, struct wpa_config_blob *blob);$/;"	m	struct:eapol_callbacks	access:public
eapol_callbacks::set_int	src/eap_peer/eap.h	/^	void (*set_int)(void *ctx, enum eapol_int_var variable,$/;"	m	struct:eapol_callbacks	access:public
eapol_cb	src/eap_peer/eap_i.h	/^	struct eapol_callbacks *eapol_cb;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eapol_callbacks	access:public
eapol_cb	src/eap_server/eap_i.h	/^	struct eapol_callbacks *eapol_cb;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eapol_callbacks	access:public
eapol_cb	src/eapol_auth/eapol_auth_sm.c	/^static struct eapol_callbacks eapol_cb =$/;"	v	typeref:struct:eapol_callbacks	file:
eapol_cb	src/eapol_auth/eapol_auth_sm.c	/^static struct eapol_callbacks eapol_cb;$/;"	v	typeref:struct:eapol_callbacks	file:
eapol_cb	src/eapol_supp/eapol_supp_sm.c	/^static struct eapol_callbacks eapol_cb =$/;"	v	typeref:struct:eapol_callbacks	file:
eapol_config	src/eapol_supp/eapol_supp_sm.h	/^struct eapol_config {$/;"	s
eapol_config::accept_802_1x_keys	src/eapol_supp/eapol_supp_sm.h	/^	int accept_802_1x_keys;$/;"	m	struct:eapol_config	access:public
eapol_config::eap_disabled	src/eapol_supp/eapol_supp_sm.h	/^	int eap_disabled;$/;"	m	struct:eapol_config	access:public
eapol_config::fast_reauth	src/eapol_supp/eapol_supp_sm.h	/^	int fast_reauth;$/;"	m	struct:eapol_config	access:public
eapol_config::required_keys	src/eapol_supp/eapol_supp_sm.h	/^	int required_keys;$/;"	m	struct:eapol_config	access:public
eapol_config::workaround	src/eapol_supp/eapol_supp_sm.h	/^	unsigned int workaround;$/;"	m	struct:eapol_config	access:public
eapol_ctx	src/eap_peer/eap_i.h	/^	void *eapol_ctx;$/;"	m	struct:eap_sm	access:public
eapol_ctx	src/eap_server/eap_i.h	/^	void *eapol_ctx, *msg_ctx;$/;"	m	struct:eap_sm	access:public
eapol_ctx	src/eapol_supp/eapol_supp_sm.h	/^struct eapol_ctx {$/;"	s
eapol_ctx::aborted_cached	src/eapol_supp/eapol_supp_sm.h	/^	void (*aborted_cached)(void *ctx);$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*cb)(struct eapol_sm *eapol, int success, void *ctx);$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::cb_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *cb_ctx;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::cert_cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*cert_cb)(void *ctx, int depth, const char *subject,$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::cert_in_cb	src/eapol_supp/eapol_supp_sm.h	/^	int cert_in_cb;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *ctx;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::eap_param_needed	src/eapol_supp/eapol_supp_sm.h	/^	void (*eap_param_needed)(void *ctx, enum wpa_ctrl_req_type field,$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::eapol_done_cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*eapol_done_cb)(void *ctx);$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::eapol_send	src/eapol_supp/eapol_supp_sm.h	/^	int (*eapol_send)(void *ctx, int type, const u8 *buf, size_t len);$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::eapol_send_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *eapol_send_ctx;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::get_config_blob	src/eapol_supp/eapol_supp_sm.h	/^	const struct wpa_config_blob * (*get_config_blob)(void *ctx,$/;"	m	struct:eapol_ctx	typeref:struct:eapol_ctx::get_config_blob	access:public
eapol_ctx::msg_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *msg_ctx;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::opensc_engine_path	src/eapol_supp/eapol_supp_sm.h	/^	const char *opensc_engine_path;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::pkcs11_engine_path	src/eapol_supp/eapol_supp_sm.h	/^	const char *pkcs11_engine_path;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::pkcs11_module_path	src/eapol_supp/eapol_supp_sm.h	/^	const char *pkcs11_module_path;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::port_cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*port_cb)(void *ctx, int authorized);$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::preauth	src/eapol_supp/eapol_supp_sm.h	/^	int preauth;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::scard_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *scard_ctx;$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::set_config_blob	src/eapol_supp/eapol_supp_sm.h	/^	void (*set_config_blob)(void *ctx, struct wpa_config_blob *blob);$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::set_wep_key	src/eapol_supp/eapol_supp_sm.h	/^	int (*set_wep_key)(void *ctx, int unicast, int keyidx,$/;"	m	struct:eapol_ctx	access:public
eapol_ctx::wps	src/eapol_supp/eapol_supp_sm.h	/^	struct wps_context *wps;$/;"	m	struct:eapol_ctx	typeref:struct:eapol_ctx::wps_context	access:public
eapol_done_cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*eapol_done_cb)(void *ctx);$/;"	m	struct:eapol_ctx	access:public
eapol_enable_timer_tick	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_enable_timer_tick(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_event	src/eapol_auth/eapol_auth_sm.h	/^	void (*eapol_event)(void *ctx, void *sta_ctx, enum eapol_event type);   \/\/ ieee802_1x_eapol_event$/;"	m	struct:eapol_auth_cb	access:public
eapol_event	src/eapol_auth/eapol_auth_sm.h	/^enum eapol_event {$/;"	g
eapol_get_bool	src/eap_peer/eap.c	/^static Boolean eapol_get_bool(struct eap_sm *sm, enum eapol_bool_var var)$/;"	f	file:	signature:(struct eap_sm *sm, enum eapol_bool_var var)
eapol_get_eapReqData	src/eap_peer/eap.c	/^static struct wpabuf * eapol_get_eapReqData(struct eap_sm *sm)$/;"	f	file:	signature:(struct eap_sm *sm)
eapol_get_int	src/eap_peer/eap.c	/^static unsigned int eapol_get_int(struct eap_sm *sm, enum eapol_int_var var)$/;"	f	file:	signature:(struct eap_sm *sm, enum eapol_int_var var)
eapol_int_var	src/eap_peer/eap.h	/^enum eapol_int_var {$/;"	g
eapol_key_crypt	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *eapol_key_crypt;$/;"	m	struct:eapol_state_machine	access:public
eapol_key_crypt_len	src/eapol_auth/eapol_auth_sm_i.h	/^	size_t eapol_key_crypt_len;$/;"	m	struct:eapol_state_machine	access:public
eapol_key_index_workaround	src/ap/ap_config.h	/^	int eapol_key_index_workaround;$/;"	m	struct:hostapd_bss_config	access:public
eapol_key_sign	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *eapol_key_sign;$/;"	m	struct:eapol_state_machine	access:public
eapol_key_sign_len	src/eapol_auth/eapol_auth_sm_i.h	/^	size_t eapol_key_sign_len;$/;"	m	struct:eapol_state_machine	access:public
eapol_key_timeout_first	src/ap/wpa_auth.c	/^static const u32 eapol_key_timeout_first = 100; \/* ms *\/$/;"	v	file:
eapol_key_timeout_subseq	src/ap/wpa_auth.c	/^static const u32 eapol_key_timeout_subseq = 1000; \/* ms *\/$/;"	v	file:
eapol_logger_level	src/eapol_auth/eapol_auth_sm.h	/^} eapol_logger_level;$/;"	t	typeref:enum:__anon72
eapol_port_control	src/eapol_supp/eapol_supp_sm.c	/^static const char * eapol_port_control(PortControl ctrl)$/;"	f	file:	signature:(PortControl ctrl)
eapol_port_status	src/eapol_supp/eapol_supp_sm.c	/^static const char * eapol_port_status(PortStatus status)$/;"	f	file:	signature:(PortStatus status)
eapol_port_timers_tick	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_port_timers_tick(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eapol_port_timers_tick	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_port_timers_tick(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eapol_rx	src/drivers/driver.h	/^	struct eapol_rx {$/;"	s	union:wpa_event_data	access:public
eapol_rx	src/drivers/driver.h	/^	} eapol_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::eapol_rx	access:public
eapol_send	src/eapol_auth/eapol_auth_sm.h	/^	void (*eapol_send)(void *ctx, void *sta_ctx, u8 type, const u8 *data,$/;"	m	struct:eapol_auth_cb	access:public
eapol_send	src/eapol_supp/eapol_supp_sm.h	/^	int (*eapol_send)(void *ctx, int type, const u8 *buf, size_t len);$/;"	m	struct:eapol_ctx	access:public
eapol_send_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *eapol_send_ctx;$/;"	m	struct:eapol_ctx	access:public
eapol_set_bool	src/eap_peer/eap.c	/^static void eapol_set_bool(struct eap_sm *sm, enum eapol_bool_var var,$/;"	f	file:	signature:(struct eap_sm *sm, enum eapol_bool_var var, Boolean value)
eapol_set_int	src/eap_peer/eap.c	/^static void eapol_set_int(struct eap_sm *sm, enum eapol_int_var var,$/;"	f	file:	signature:(struct eap_sm *sm, enum eapol_int_var var, unsigned int value)
eapol_sm	src/ap/sta_info.h	/^	struct eapol_state_machine *eapol_sm;       \/\/ eapol层状态机组$/;"	m	struct:sta_info	typeref:struct:sta_info::eapol_state_machine	access:public
eapol_sm	src/eapol_supp/eapol_supp_sm.c	/^struct eapol_sm {$/;"	s	file:
eapol_sm::EAPOL_CB_FAILURE	src/eapol_supp/eapol_supp_sm.c	/^	enum { EAPOL_CB_IN_PROGRESS = 0, EAPOL_CB_SUCCESS, EAPOL_CB_FAILURE }$/;"	e	enum:eapol_sm::__anon21	file:
eapol_sm::EAPOL_CB_IN_PROGRESS	src/eapol_supp/eapol_supp_sm.c	/^	enum { EAPOL_CB_IN_PROGRESS = 0, EAPOL_CB_SUCCESS, EAPOL_CB_FAILURE }$/;"	e	enum:eapol_sm::__anon21	file:
eapol_sm::EAPOL_CB_SUCCESS	src/eapol_supp/eapol_supp_sm.c	/^	enum { EAPOL_CB_IN_PROGRESS = 0, EAPOL_CB_SUCCESS, EAPOL_CB_FAILURE }$/;"	e	enum:eapol_sm::__anon21	file:
eapol_sm::KEY_RX_KEY_RECEIVE	src/eapol_supp/eapol_supp_sm.c	/^		KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE$/;"	e	enum:eapol_sm::__anon19	file:
eapol_sm::KEY_RX_NO_KEY_RECEIVE	src/eapol_supp/eapol_supp_sm.c	/^		KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE$/;"	e	enum:eapol_sm::__anon19	file:
eapol_sm::KEY_RX_UNKNOWN	src/eapol_supp/eapol_supp_sm.c	/^		KEY_RX_UNKNOWN = 0,$/;"	e	enum:eapol_sm::__anon19	file:
eapol_sm::KEY_RX_state	src/eapol_supp/eapol_supp_sm.c	/^	} KEY_RX_state;$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon19	file:	access:public
eapol_sm::SUPP_BE_FAIL	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_FAIL = 6,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_IDLE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_IDLE = 2,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_INITIALIZE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_INITIALIZE = 1,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_RECEIVE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_RECEIVE = 4,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_REQUEST	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_REQUEST = 3,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_RESPONSE	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_RESPONSE = 5,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_SUCCESS	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_SUCCESS = 8$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_TIMEOUT	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_TIMEOUT = 7, $/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_UNKNOWN	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_BE_UNKNOWN = 0,$/;"	e	enum:eapol_sm::__anon20	file:
eapol_sm::SUPP_BE_state	src/eapol_supp/eapol_supp_sm.c	/^	} SUPP_BE_state; \/* dot1xSuppBackendPaeState *\/$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon20	file:	access:public
eapol_sm::SUPP_PAE_AUTHENTICATED	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_AUTHENTICATED = 5,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_AUTHENTICATING	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_AUTHENTICATING = 4,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_CONNECTING	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_CONNECTING = 3,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_DISCONNECTED	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_DISCONNECTED = 1,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_HELD	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_HELD = 7,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_LOGOFF	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_LOGOFF = 2,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_RESTART	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_RESTART = 8,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_S_FORCE_AUTH	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_S_FORCE_AUTH = 9,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_S_FORCE_UNAUTH	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_S_FORCE_UNAUTH = 10$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_UNKNOWN	src/eapol_supp/eapol_supp_sm.c	/^		SUPP_PAE_UNKNOWN = 0,$/;"	e	enum:eapol_sm::__anon18	file:
eapol_sm::SUPP_PAE_state	src/eapol_supp/eapol_supp_sm.c	/^	} SUPP_PAE_state; \/* dot1xSuppPaeState *\/$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon18	file:	access:public
eapol_sm::altAccept	src/eapol_supp/eapol_supp_sm.c	/^	Boolean altAccept; \/* for EAP *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::altReject	src/eapol_supp/eapol_supp_sm.c	/^	Boolean altReject; \/* for EAP *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::authPeriod	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int authPeriod; \/* dot1xSuppAuthPeriod *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::authWhile	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int authWhile;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::broadcast_key_received	src/eapol_supp/eapol_supp_sm.c	/^	Boolean unicast_key_received, broadcast_key_received;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::cached_pmk	src/eapol_supp/eapol_supp_sm.c	/^	Boolean cached_pmk;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::cb_status	src/eapol_supp/eapol_supp_sm.c	/^		cb_status;$/;"	m	struct:eapol_sm	typeref:enum:eapol_sm::__anon21	file:	access:public
eapol_sm::changed	src/eapol_supp/eapol_supp_sm.c	/^	Boolean changed;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::conf	src/eapol_supp/eapol_supp_sm.c	/^	struct eapol_config conf;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eapol_config	file:	access:public
eapol_sm::config	src/eapol_supp/eapol_supp_sm.c	/^	struct eap_peer_config *config;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eap_peer_config	file:	access:public
eapol_sm::ctx	src/eapol_supp/eapol_supp_sm.c	/^	struct eapol_ctx *ctx;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eapol_ctx	file:	access:public
eapol_sm::dot1xSuppEapLengthErrorFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapLengthErrorFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolLogoffFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolLogoffFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolReqFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolReqFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolReqIdFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolReqIdFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolRespFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolRespFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppEapolStartFramesTx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppEapolStartFramesTx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppInvalidEapolFramesRx	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppInvalidEapolFramesRx;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppLastEapolFrameSource	src/eapol_supp/eapol_supp_sm.c	/^	unsigned char dot1xSuppLastEapolFrameSource[6];$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::dot1xSuppLastEapolFrameVersion	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int dot1xSuppLastEapolFrameVersion;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eap	src/eapol_supp/eapol_supp_sm.c	/^	struct eap_sm *eap;$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::eap_sm	file:	access:public
eapol_sm::eapFail	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapFail;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eapNoResp	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapNoResp;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eapReq	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapReq;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eapReqData	src/eapol_supp/eapol_supp_sm.c	/^	struct wpabuf *eapReqData; \/* for EAP *\/$/;"	m	struct:eapol_sm	typeref:struct:eapol_sm::wpabuf	file:	access:public
eapol_sm::eapResp	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapResp;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eapRestart	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapRestart;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eapSuccess	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapSuccess;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::eapolEap	src/eapol_supp/eapol_supp_sm.c	/^	Boolean eapolEap;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::heldPeriod	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int heldPeriod; \/* dot1xSuppHeldPeriod *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::heldWhile	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int heldWhile;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::idleWhile	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int idleWhile; \/* for EAP state machine *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::initial_req	src/eapol_supp/eapol_supp_sm.c	/^	Boolean initial_req;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::initialize	src/eapol_supp/eapol_supp_sm.c	/^	Boolean initialize;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::keyDone	src/eapol_supp/eapol_supp_sm.c	/^	Boolean keyDone;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::keyRun	src/eapol_supp/eapol_supp_sm.c	/^	Boolean keyRun;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::last_replay_counter	src/eapol_supp/eapol_supp_sm.c	/^	u8 last_replay_counter[16];$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::last_rx_key	src/eapol_supp/eapol_supp_sm.c	/^	u8 *last_rx_key;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::last_rx_key_len	src/eapol_supp/eapol_supp_sm.c	/^	size_t last_rx_key_len;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::logoffSent	src/eapol_supp/eapol_supp_sm.c	/^	Boolean logoffSent;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::maxStart	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int maxStart; \/* dot1xSuppMaxStart *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::portControl	src/eapol_supp/eapol_supp_sm.c	/^	PortControl portControl;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::portEnabled	src/eapol_supp/eapol_supp_sm.c	/^	Boolean portEnabled;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::portValid	src/eapol_supp/eapol_supp_sm.c	/^	Boolean portValid;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::replay_counter_valid	src/eapol_supp/eapol_supp_sm.c	/^	Boolean replay_counter_valid;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::rxKey	src/eapol_supp/eapol_supp_sm.c	/^	Boolean rxKey;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::sPortMode	src/eapol_supp/eapol_supp_sm.c	/^	PortControl sPortMode;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::startCount	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int startCount;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::startPeriod	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int startPeriod; \/* dot1xSuppStartPeriod *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::startWhen	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int startWhen;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::suppAbort	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppAbort;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::suppFail	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppFail;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::suppPortStatus	src/eapol_supp/eapol_supp_sm.c	/^	PortStatus suppPortStatus;  \/* dot1xSuppControlledPortStatus *\/$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::suppStart	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppStart;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::suppSuccess	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppSuccess;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::suppTimeout	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppTimeout;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::timer_tick_enabled	src/eapol_supp/eapol_supp_sm.c	/^	int timer_tick_enabled;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::unicast_key_received	src/eapol_supp/eapol_supp_sm.c	/^	Boolean unicast_key_received, broadcast_key_received;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm::userLogoff	src/eapol_supp/eapol_supp_sm.c	/^	Boolean userLogoff;$/;"	m	struct:eapol_sm	file:	access:public
eapol_sm_abortSupp	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_abortSupp(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_abortSupp	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_abortSupp(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_abort_cached	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_abort_cached(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_abort_cached	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_abort_cached(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_configure	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_configure(struct eapol_sm *sm, int heldPeriod, int authPeriod,$/;"	f	signature:(struct eapol_sm *sm, int heldPeriod, int authPeriod, int startPeriod, int maxStart)
eapol_sm_configure	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_configure(struct eapol_sm *sm, int heldPeriod,$/;"	f	signature:(struct eapol_sm *sm, int heldPeriod, int authPeriod, int startPeriod, int maxStart)
eapol_sm_configure	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_configure(struct eapol_sm *sm, int heldPeriod, int authPeriod,$/;"	p	signature:(struct eapol_sm *sm, int heldPeriod, int authPeriod, int startPeriod, int maxStart)
eapol_sm_deinit	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_deinit(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_deinit	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_deinit(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_deinit	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_deinit(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_eap_param_needed	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_eap_param_needed(void *ctx, enum wpa_ctrl_req_type field,$/;"	f	file:	signature:(void *ctx, enum wpa_ctrl_req_type field, const char *txt)
eapol_sm_eap_param_needed	src/eapol_supp/eapol_supp_sm.c	1822;"	d	file:
eapol_sm_getSuppRsp	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_getSuppRsp(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_getSuppRsp	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_getSuppRsp(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_get_bool	src/eapol_supp/eapol_supp_sm.c	/^static Boolean eapol_sm_get_bool(void *ctx, enum eapol_bool_var variable)$/;"	f	file:	signature:(void *ctx, enum eapol_bool_var variable)
eapol_sm_get_config	src/eapol_supp/eapol_supp_sm.c	/^static struct eap_peer_config * eapol_sm_get_config(void *ctx)$/;"	f	file:	signature:(void *ctx)
eapol_sm_get_config_blob	src/eapol_supp/eapol_supp_sm.c	/^eapol_sm_get_config_blob(void *ctx, const char *name)$/;"	f	file:	signature:(void *ctx, const char *name)
eapol_sm_get_eapReqData	src/eapol_supp/eapol_supp_sm.c	/^static struct wpabuf * eapol_sm_get_eapReqData(void *ctx)$/;"	f	file:	signature:(void *ctx)
eapol_sm_get_eap_req_id_text	src/eapol_auth/eapol_auth_sm.c	/^static const char * eapol_sm_get_eap_req_id_text(void *ctx, size_t *len)$/;"	f	file:	signature:(void *ctx, size_t *len)
eapol_sm_get_eap_user	src/eapol_auth/eapol_auth_sm.c	/^static int eapol_sm_get_eap_user(void *ctx, const u8 *identity,$/;"	f	file:	signature:(void *ctx, const u8 *identity, size_t identity_len, int phase2, struct eap_user *user)
eapol_sm_get_int	src/eapol_supp/eapol_supp_sm.c	/^static unsigned int eapol_sm_get_int(void *ctx, enum eapol_int_var variable)$/;"	f	file:	signature:(void *ctx, enum eapol_int_var variable)
eapol_sm_get_key	src/eapol_supp/eapol_supp_sm.c	/^int eapol_sm_get_key(struct eapol_sm *sm, u8 *key, size_t len)$/;"	f	signature:(struct eapol_sm *sm, u8 *key, size_t len)
eapol_sm_get_key	src/eapol_supp/eapol_supp_sm.h	/^int eapol_sm_get_key(struct eapol_sm *sm, u8 *key, size_t len);$/;"	p	signature:(struct eapol_sm *sm, u8 *key, size_t len)
eapol_sm_get_key	src/eapol_supp/eapol_supp_sm.h	/^static inline int eapol_sm_get_key(struct eapol_sm *sm, u8 *key, size_t len)$/;"	f	signature:(struct eapol_sm *sm, u8 *key, size_t len)
eapol_sm_get_method_name	src/eapol_supp/eapol_supp_sm.c	/^const char * eapol_sm_get_method_name(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_get_method_name	src/eapol_supp/eapol_supp_sm.h	/^const char * eapol_sm_get_method_name(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_get_method_name	src/eapol_supp/eapol_supp_sm.h	/^static inline const char * eapol_sm_get_method_name(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_get_mib	src/eapol_supp/eapol_supp_sm.c	/^int eapol_sm_get_mib(struct eapol_sm *sm, char *buf, size_t buflen)$/;"	f	signature:(struct eapol_sm *sm, char *buf, size_t buflen)
eapol_sm_get_mib	src/eapol_supp/eapol_supp_sm.h	/^int eapol_sm_get_mib(struct eapol_sm *sm, char *buf, size_t buflen);$/;"	p	signature:(struct eapol_sm *sm, char *buf, size_t buflen)
eapol_sm_get_mib	src/eapol_supp/eapol_supp_sm.h	/^static inline int eapol_sm_get_mib(struct eapol_sm *sm, char *buf,$/;"	f	signature:(struct eapol_sm *sm, char *buf, size_t buflen)
eapol_sm_get_status	src/eapol_supp/eapol_supp_sm.c	/^int eapol_sm_get_status(struct eapol_sm *sm, char *buf, size_t buflen,$/;"	f	signature:(struct eapol_sm *sm, char *buf, size_t buflen, int verbose)
eapol_sm_get_status	src/eapol_supp/eapol_supp_sm.h	/^int eapol_sm_get_status(struct eapol_sm *sm, char *buf, size_t buflen,$/;"	p	signature:(struct eapol_sm *sm, char *buf, size_t buflen, int verbose)
eapol_sm_get_status	src/eapol_supp/eapol_supp_sm.h	/^static inline int eapol_sm_get_status(struct eapol_sm *sm, char *buf,$/;"	f	signature:(struct eapol_sm *sm, char *buf, size_t buflen, int verbose)
eapol_sm_init	src/eapol_supp/eapol_supp_sm.c	/^struct eapol_sm *eapol_sm_init(struct eapol_ctx *ctx)$/;"	f	signature:(struct eapol_ctx *ctx)
eapol_sm_init	src/eapol_supp/eapol_supp_sm.h	/^static inline struct eapol_sm *eapol_sm_init(struct eapol_ctx *ctx)$/;"	f	signature:(struct eapol_ctx *ctx)
eapol_sm_init	src/eapol_supp/eapol_supp_sm.h	/^struct eapol_sm *eapol_sm_init(struct eapol_ctx *ctx);$/;"	p	signature:(struct eapol_ctx *ctx)
eapol_sm_invalidate_cached_session	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_invalidate_cached_session(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_invalidate_cached_session	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_invalidate_cached_session(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_invalidate_cached_session	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_invalidate_cached_session(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_notify_cached	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_cached(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_cached	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_cached(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_cached	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_cached(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_notify_cert	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_notify_cert(void *ctx, int depth, const char *subject,$/;"	f	file:	signature:(void *ctx, int depth, const char *subject, const char *cert_hash, const struct wpabuf *cert)
eapol_sm_notify_config	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_config(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, struct eap_peer_config *config, const struct eapol_config *conf)
eapol_sm_notify_config	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_config(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, struct eap_peer_config *config, struct eapol_config *conf)
eapol_sm_notify_config	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_config(struct eapol_sm *sm,$/;"	p	signature:(struct eapol_sm *sm, struct eap_peer_config *config, const struct eapol_config *conf)
eapol_sm_notify_ctrl_attached	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_ctrl_attached(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_ctrl_attached	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_ctrl_attached(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_ctrl_attached	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_ctrl_attached(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_notify_ctrl_response	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_ctrl_response(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_ctrl_response	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_ctrl_response(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_ctrl_response	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_ctrl_response(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_notify_eap_fail	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_eap_fail(struct eapol_sm *sm, Boolean fail)$/;"	f	signature:(struct eapol_sm *sm, Boolean fail)
eapol_sm_notify_eap_fail	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_eap_fail(struct eapol_sm *sm, Boolean fail)$/;"	f	signature:(struct eapol_sm *sm, Boolean fail)
eapol_sm_notify_eap_fail	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_eap_fail(struct eapol_sm *sm, Boolean fail);$/;"	p	signature:(struct eapol_sm *sm, Boolean fail)
eapol_sm_notify_eap_success	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_eap_success(struct eapol_sm *sm, Boolean success)$/;"	f	signature:(struct eapol_sm *sm, Boolean success)
eapol_sm_notify_eap_success	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_eap_success(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, Boolean success)
eapol_sm_notify_eap_success	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_eap_success(struct eapol_sm *sm, Boolean success);$/;"	p	signature:(struct eapol_sm *sm, Boolean success)
eapol_sm_notify_logoff	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_logoff(struct eapol_sm *sm, Boolean logoff)$/;"	f	signature:(struct eapol_sm *sm, Boolean logoff)
eapol_sm_notify_logoff	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_logoff(struct eapol_sm *sm, Boolean logoff)$/;"	f	signature:(struct eapol_sm *sm, Boolean logoff)
eapol_sm_notify_logoff	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_logoff(struct eapol_sm *sm, Boolean logoff);$/;"	p	signature:(struct eapol_sm *sm, Boolean logoff)
eapol_sm_notify_lower_layer_success	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_lower_layer_success(struct eapol_sm *sm, int in_eapol_sm)$/;"	f	signature:(struct eapol_sm *sm, int in_eapol_sm)
eapol_sm_notify_lower_layer_success	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_lower_layer_success(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, int in_eapol_sm)
eapol_sm_notify_lower_layer_success	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_lower_layer_success(struct eapol_sm *sm, int in_eapol_sm);$/;"	p	signature:(struct eapol_sm *sm, int in_eapol_sm)
eapol_sm_notify_pending	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_notify_pending(void *ctx)$/;"	f	file:	signature:(void *ctx)
eapol_sm_notify_pmkid_attempt	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_pmkid_attempt(struct eapol_sm *sm, int attempt)$/;"	f	signature:(struct eapol_sm *sm, int attempt)
eapol_sm_notify_pmkid_attempt	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_pmkid_attempt(struct eapol_sm *sm, int attempt);$/;"	p	signature:(struct eapol_sm *sm, int attempt)
eapol_sm_notify_pmkid_attempt	src/eapol_supp/eapol_supp_sm.h	340;"	d
eapol_sm_notify_portControl	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_portControl(struct eapol_sm *sm, PortControl portControl)$/;"	f	signature:(struct eapol_sm *sm, PortControl portControl)
eapol_sm_notify_portControl	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_portControl(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, PortControl portControl)
eapol_sm_notify_portControl	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_portControl(struct eapol_sm *sm, PortControl portControl);$/;"	p	signature:(struct eapol_sm *sm, PortControl portControl)
eapol_sm_notify_portEnabled	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_portEnabled(struct eapol_sm *sm, Boolean enabled)$/;"	f	signature:(struct eapol_sm *sm, Boolean enabled)
eapol_sm_notify_portEnabled	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_portEnabled(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, Boolean enabled)
eapol_sm_notify_portEnabled	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_portEnabled(struct eapol_sm *sm, Boolean enabled);$/;"	p	signature:(struct eapol_sm *sm, Boolean enabled)
eapol_sm_notify_portValid	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_portValid(struct eapol_sm *sm, Boolean valid)$/;"	f	signature:(struct eapol_sm *sm, Boolean valid)
eapol_sm_notify_portValid	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_portValid(struct eapol_sm *sm,$/;"	f	signature:(struct eapol_sm *sm, Boolean valid)
eapol_sm_notify_portValid	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_portValid(struct eapol_sm *sm, Boolean valid);$/;"	p	signature:(struct eapol_sm *sm, Boolean valid)
eapol_sm_notify_tx_eapol_key	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_notify_tx_eapol_key(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_tx_eapol_key	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_notify_tx_eapol_key(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_notify_tx_eapol_key	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_notify_tx_eapol_key(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_processKey	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_processKey(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_processKey	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_processKey(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_register_scard_ctx	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_register_scard_ctx(struct eapol_sm *sm, void *ctx)$/;"	f	signature:(struct eapol_sm *sm, void *ctx)
eapol_sm_register_scard_ctx	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_register_scard_ctx(struct eapol_sm *sm, void *ctx);$/;"	p	signature:(struct eapol_sm *sm, void *ctx)
eapol_sm_register_scard_ctx	src/eapol_supp/eapol_supp_sm.h	341;"	d
eapol_sm_request_reauth	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_request_reauth(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_request_reauth	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_request_reauth(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_request_reauth	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_request_reauth(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_rx_eapol	src/eapol_supp/eapol_supp_sm.c	/^int eapol_sm_rx_eapol(struct eapol_sm *sm, const u8 *src, const u8 *buf,$/;"	f	signature:(struct eapol_sm *sm, const u8 *src, const u8 *buf, size_t len)
eapol_sm_rx_eapol	src/eapol_supp/eapol_supp_sm.h	/^int eapol_sm_rx_eapol(struct eapol_sm *sm, const u8 *src, const u8 *buf,$/;"	p	signature:(struct eapol_sm *sm, const u8 *src, const u8 *buf, size_t len)
eapol_sm_rx_eapol	src/eapol_supp/eapol_supp_sm.h	/^static inline int eapol_sm_rx_eapol(struct eapol_sm *sm, const u8 *src,$/;"	f	signature:(struct eapol_sm *sm, const u8 *src, const u8 *buf, size_t len)
eapol_sm_set_bool	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_bool(void *ctx, enum eapol_bool_var variable,$/;"	f	file:	signature:(void *ctx, enum eapol_bool_var variable, Boolean value)
eapol_sm_set_config_blob	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_config_blob(void *ctx, struct wpa_config_blob *blob)$/;"	f	file:	signature:(void *ctx, struct wpa_config_blob *blob)
eapol_sm_set_int	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_int(void *ctx, enum eapol_int_var variable,$/;"	f	file:	signature:(void *ctx, enum eapol_int_var variable, unsigned int value)
eapol_sm_set_port_authorized	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_port_authorized(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_set_port_authorized	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_port_authorized(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_set_port_unauthorized	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_port_unauthorized(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_set_port_unauthorized	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_set_port_unauthorized(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_sta_entry_alive	src/eapol_auth/eapol_auth_sm.c	/^static int eapol_sm_sta_entry_alive(struct eapol_authenticator *eapol,$/;"	f	file:	signature:(struct eapol_authenticator *eapol, const u8 *addr)
eapol_sm_step	src/eapol_supp/eapol_supp_sm.c	/^void eapol_sm_step(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_step	src/eapol_supp/eapol_supp_sm.h	/^static inline void eapol_sm_step(struct eapol_sm *sm)$/;"	f	signature:(struct eapol_sm *sm)
eapol_sm_step	src/eapol_supp/eapol_supp_sm.h	/^void eapol_sm_step(struct eapol_sm *sm);$/;"	p	signature:(struct eapol_sm *sm)
eapol_sm_step_cb	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_sm_step_cb(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eapol_sm_step_cb	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_sm_step_cb(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eapol_sm_step_run	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_sm_step_run(struct eapol_state_machine *sm)$/;"	f	file:	signature:(struct eapol_state_machine *sm)
eapol_sm_step_run	src/eapol_auth/eapol_auth_sm.c	/^static void eapol_sm_step_run(struct eapol_state_machine *sm);$/;"	p	file:	signature:(struct eapol_state_machine *sm)
eapol_sm_step_timeout	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_step_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eapol_sm_step_timeout	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_step_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
eapol_sm_txLogoff	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_txLogoff(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_txLogoff	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_txLogoff(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_txStart	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_txStart(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_txStart	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_txStart(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sm_txSuppRsp	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_txSuppRsp(struct eapol_sm *sm)$/;"	f	file:	signature:(struct eapol_sm *sm)
eapol_sm_txSuppRsp	src/eapol_supp/eapol_supp_sm.c	/^static void eapol_sm_txSuppRsp(struct eapol_sm *sm);$/;"	p	file:	signature:(struct eapol_sm *sm)
eapol_sock	src/drivers/driver_nl80211.c	/^	int eapol_sock; \/* socket for EAPOL frames *\/$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
eapol_state_machine	src/eapol_auth/eapol_auth_sm_i.h	/^struct eapol_state_machine {$/;"	s
eapol_state_machine::AUTH_KEY_TX_KEY_TRANSMIT	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_KEY_TX_NO_KEY_TRANSMIT, AUTH_KEY_TX_KEY_TRANSMIT$/;"	e	enum:eapol_state_machine::__anon69
eapol_state_machine::AUTH_KEY_TX_NO_KEY_TRANSMIT	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_KEY_TX_NO_KEY_TRANSMIT, AUTH_KEY_TX_KEY_TRANSMIT$/;"	e	enum:eapol_state_machine::__anon69
eapol_state_machine::AUTH_PAE_ABORTING	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_ABORTING, AUTH_PAE_HELD, AUTH_PAE_FORCE_AUTH,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_AUTHENTICATED	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_AUTHENTICATING, AUTH_PAE_AUTHENTICATED,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_AUTHENTICATING	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_AUTHENTICATING, AUTH_PAE_AUTHENTICATED,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_CONNECTING	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_PAE_INITIALIZE, AUTH_PAE_DISCONNECTED, AUTH_PAE_CONNECTING,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_DISCONNECTED	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_PAE_INITIALIZE, AUTH_PAE_DISCONNECTED, AUTH_PAE_CONNECTING,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_FORCE_AUTH	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_ABORTING, AUTH_PAE_HELD, AUTH_PAE_FORCE_AUTH,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_FORCE_UNAUTH	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_FORCE_UNAUTH, AUTH_PAE_RESTART } auth_pae_state;    \/\/ Authenticator PAE状态机$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_HELD	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_ABORTING, AUTH_PAE_HELD, AUTH_PAE_FORCE_AUTH,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_INITIALIZE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { AUTH_PAE_INITIALIZE, AUTH_PAE_DISCONNECTED, AUTH_PAE_CONNECTING,$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::AUTH_PAE_RESTART	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_FORCE_UNAUTH, AUTH_PAE_RESTART } auth_pae_state;    \/\/ Authenticator PAE状态机$/;"	e	enum:eapol_state_machine::__anon66
eapol_state_machine::BE_AUTH_FAIL	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_IDLE	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_IGNORE	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_IGNORE$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_INITIALIZE	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_REQUEST	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { BE_AUTH_REQUEST, BE_AUTH_RESPONSE, BE_AUTH_SUCCESS,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_RESPONSE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { BE_AUTH_REQUEST, BE_AUTH_RESPONSE, BE_AUTH_SUCCESS,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_SUCCESS	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { BE_AUTH_REQUEST, BE_AUTH_RESPONSE, BE_AUTH_SUCCESS,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::BE_AUTH_TIMEOUT	src/eapol_auth/eapol_auth_sm_i.h	/^	       BE_AUTH_FAIL, BE_AUTH_TIMEOUT, BE_AUTH_IDLE, BE_AUTH_INITIALIZE,$/;"	e	enum:eapol_state_machine::__anon67
eapol_state_machine::CTRL_DIR_FORCE_BOTH	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { CTRL_DIR_FORCE_BOTH, CTRL_DIR_IN_OR_BOTH } ctrl_dir_state;   \/\/ 受控方向状态机$/;"	e	enum:eapol_state_machine::__anon71
eapol_state_machine::CTRL_DIR_IN_OR_BOTH	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { CTRL_DIR_FORCE_BOTH, CTRL_DIR_IN_OR_BOTH } ctrl_dir_state;   \/\/ 受控方向状态机$/;"	e	enum:eapol_state_machine::__anon71
eapol_state_machine::KEY_RX_KEY_RECEIVE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE } key_rx_state;    \/\/ key接收状态机$/;"	e	enum:eapol_state_machine::__anon70
eapol_state_machine::KEY_RX_NO_KEY_RECEIVE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE } key_rx_state;    \/\/ key接收状态机$/;"	e	enum:eapol_state_machine::__anon70
eapol_state_machine::REAUTH_TIMER_INITIALIZE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { REAUTH_TIMER_INITIALIZE, REAUTH_TIMER_REAUTHENTICATE$/;"	e	enum:eapol_state_machine::__anon68
eapol_state_machine::REAUTH_TIMER_REAUTHENTICATE	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { REAUTH_TIMER_INITIALIZE, REAUTH_TIMER_REAUTHENTICATE$/;"	e	enum:eapol_state_machine::__anon68
eapol_state_machine::aWhile	src/eapol_auth/eapol_auth_sm_i.h	/^	int aWhile;     \/\/ 用于BE_AUTH SM ，定义了eapol层递交eapolEap报文给eap层，然后等待回复的计时,超时值为serverTimeout(也就是BE_AUTH_DEFAULT_serverTimeout)$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::addr	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 addr[ETH_ALEN]; \/* Supplicant address 请求者mac地址*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::adminControlledDirections	src/eapol_auth/eapol_auth_sm_i.h	/^	ControlledDirection adminControlledDirections;  \/\/ 受控方向，本值不会被CTRL_DIR SM修改$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAbort	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authAbort;  \/\/ AUTH_PAE SM 进入ABORTING状态时设置TRUE；BE_AUTH SM 进入INITIALIZE状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthEapLogoffWhileAuthenticated	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapLogoffWhileAuthenticated;    \/\/ 记录了在AUTHENTICATED状态下收到eapol-start报文而进入DISCONNECTED状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthEapLogoffWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapLogoffWhileAuthenticating;   \/\/ 记录了在AUTHENTICATING状态下收到eapol-logoff报文而进入ABORTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthEapStartsWhileAuthenticated	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapStartsWhileAuthenticated;    \/\/ 记录了在AUTHENTICATED状态下收到eapol-start报文而进入CONNECTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthEapStartsWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthEapStartsWhileAuthenticating;   \/\/ 记录了在AUTHENTICATING状态下收到eapol-start报文而进入ABORTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthFailWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthFailWhileAuthenticating;        \/\/ 记录了在AUTHENTICATING状态下，因为authFail标志被置为TRUE,而进入HELD状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthReauthsWhileAuthenticated	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthReauthsWhileAuthenticated;      \/\/ 记录了在AUTHENTICATED状态下，因为reAuthenticate标志被置为TRUE,而进入RESTART状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthSuccessesWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthSuccessesWhileAuthenticating;   \/\/ 记录了在AUTHENTICATING状态下，因为authSuccess标志被置为TRUE,而进入AUTHENTICATED状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authAuthTimeoutsWhileAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authAuthTimeoutsWhileAuthenticating;    \/\/ 记录了在AUTHENTICATING状态下，因为authTimeout标志被置为TRUE,而进入ABORTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authEapLogoffsWhileConnecting	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authEapLogoffsWhileConnecting;          \/\/ 记录了在CONNECTING状态下收到eapol-logoff报文而进入DISCONNECTED状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authEntersAuthenticating	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authEntersAuthenticating;               \/\/ 记录了在CONNECTING状态下收到eap-resp\/identify报文而进入AUTHENTICATING状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authEntersConnecting	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter authEntersConnecting;                   \/\/ 记录了进入CONNECTING状态的次数$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authFail	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authFail;   \/\/ BE_AUTH SM 进入FAIL状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authPortStatus	src/eapol_auth/eapol_auth_sm_i.h	/^	PortState authPortStatus;   \/\/ 端口当前状态,由AUTH_PAE SM 完全控制$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authStart	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authStart;      \/\/ AUTH_PAE SM 进入AUTHENTICATING状态时设置TRUE；BE_AUTH SM 进入IDLE状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authSuccess	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authSuccess;    \/\/ BE_AUTH SM 进入SUCCESS状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::authTimeout	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean authTimeout;    \/\/ BE_AUTH SM 进入TIMEOUT状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::auth_key_tx_state	src/eapol_auth/eapol_auth_sm_i.h	/^	} auth_key_tx_state;    \/\/ 认证者key发送状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon69	access:public
eapol_state_machine::auth_pae_state	src/eapol_auth/eapol_auth_sm_i.h	/^	       AUTH_PAE_FORCE_UNAUTH, AUTH_PAE_RESTART } auth_pae_state;    \/\/ Authenticator PAE状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon66	access:public
eapol_state_machine::backendAccessChallenges	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendAccessChallenges;                                                          $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::backendAuthFails	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendAuthFails;                   \/\/ 记录了BE_AUTH SM 从RESPONSE进入FAIL的数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::backendAuthSuccesses	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendAuthSuccesses;                                                             $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::backendOtherRequestsToSupplicant	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendOtherRequestsToSupplicant;   \/\/ 记录了BE_AUTH SM 发送给请求者request的数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::backendResponses	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter backendResponses;                   \/\/ 记录了BE_AUTH SM 发送给EAP层response的数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::be_auth_state	src/eapol_auth/eapol_auth_sm_i.h	/^	} be_auth_state;    \/\/ 后台认证状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon67	access:public
eapol_state_machine::changed	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean changed;    \/\/ 记录eapol层状态机组的状态是否发生变化$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::ctrl_dir_state	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { CTRL_DIR_FORCE_BOTH, CTRL_DIR_IN_OR_BOTH } ctrl_dir_state;   \/\/ 受控方向状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon71	access:public
eapol_state_machine::dot1xAuthEapLengthErrorFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapLengthErrorFramesRx;   $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolFramesRx;            \/\/ 记录了接收eapol帧数量 $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolFramesTx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolFramesTx;            \/\/ 记录了发送eapol帧数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolLogoffFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolLogoffFramesRx;                                                     $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolReqFramesTx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolReqFramesTx;         \/\/ 记录了发送code = req的eapol帧数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolReqIdFramesTx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolReqIdFramesTx;       \/\/ 记录了发送code = req,type=id的eapol帧数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolRespFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolRespFramesRx;        \/\/ 记录了接收eap-resp帧数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolRespIdFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolRespIdFramesRx;      \/\/ 记录了接收eap-resp-id帧数量$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthEapolStartFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthEapolStartFramesRx;                                                      $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthInvalidEapolFramesRx	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthInvalidEapolFramesRx;                                                    $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::dot1xAuthLastEapolFrameVersion	src/eapol_auth/eapol_auth_sm_i.h	/^	Counter dot1xAuthLastEapolFrameVersion;    \/\/ 记录了最近收到的eapol帧的版本2001\/2004\/2010$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eap	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eap_sm *eap; \/\/ 指向EAP层状态机$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::eap_sm	access:public
eapol_state_machine::eap_if	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eap_eapol_interface *eap_if; \/\/ 指向EAP<-->EAPOL交互接口地址$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::eap_eapol_interface	access:public
eapol_state_machine::eap_type_authsrv	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 eap_type_authsrv; \/* EAP type of the last EAP packet from$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eap_type_supp	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 eap_type_supp; \/* EAP type of the last EAP packet from Supplicant 记录了从请求者发来的最后一个EAP报文的type字段*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapol	src/eapol_auth/eapol_auth_sm_i.h	/^	struct eapol_authenticator *eapol;  \/\/ 指向eapol认证控制块$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::eapol_authenticator	access:public
eapol_state_machine::eapolEap	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean eapolEap;       \/\/ 作为认证者，接收到承载了EAP-PACKET(通常是一个resp)的EAPOL报文时设置TRUE；BE_AUTH SM 进入REQUEST(非标准)\/RESPONSE状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapolLogoff	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean eapolLogoff;    \/\/ eapol层接收到eapol-logoff报文时设置TRUE；状态机进入DISCONNECTED\/HELD状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapolStart	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean eapolStart;     \/\/ eapol层接收到eapol-start报文时设置TRUE；状态机进入AUTHENTICATING\/FORCE_AUTH\/FORCE_UNAUTH状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapol_key_crypt	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *eapol_key_crypt;$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapol_key_crypt_len	src/eapol_auth/eapol_auth_sm_i.h	/^	size_t eapol_key_crypt_len;$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapol_key_sign	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *eapol_key_sign;$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::eapol_key_sign_len	src/eapol_auth/eapol_auth_sm_i.h	/^	size_t eapol_key_sign_len;$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::flags	src/eapol_auth/eapol_auth_sm_i.h	/^	int flags; \/* EAPOL_SM_* eapol层附加功能位的集合*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::identity	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *identity;           \/\/ AAA接口在封装eap-resp-identify数据到radius报文时会记录下用户名信息$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::identity_len	src/eapol_auth/eapol_auth_sm_i.h	/^	size_t identity_len;    \/\/ 记录的用户名长度$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::initialize	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean initialize;     \/\/ 当该标志强制初始化eapol层所有状态机$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::initializing	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean initializing; \/* in process of initializing state machines 标志位，表示正在进行状态机初始化*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::keyDone	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean keyDone;                                                                                                                                           $/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::keyRun	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean keyRun;         \/\/ BE_AUTH SM 进入SUCCESS状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING\/ABORTING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::keyTxEnabled	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean keyTxEnabled;$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::key_rx_state	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE } key_rx_state;    \/\/ key接收状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon70	access:public
eapol_state_machine::last_eap_id	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 last_eap_id; \/* last used EAP Identifier 记录了最后一个使用的EAP报文的Identify字段*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::last_recv_radius	src/eapol_auth/eapol_auth_sm_i.h	/^	struct radius_msg *last_recv_radius;    \/\/ 指向最近一个收到的radius报文$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::radius_msg	access:public
eapol_state_machine::operControlledDirections	src/eapol_auth/eapol_auth_sm_i.h	/^	ControlledDirection operControlledDirections;   \/\/ 受控方向，本值会被CTRL_DIR SM写入adminControlledDirections$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::operEdge	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean operEdge;                               \/\/ 端口没有开启VLAN时，此标志位设置为TRUE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::portControl	src/eapol_auth/eapol_auth_sm_i.h	/^	PortTypes portControl;  \/\/ 受控端口的全局控制模式,作为802.1x认证者，在eapol_auth_alloc时设置了固定值AUTO$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::portMode	src/eapol_auth/eapol_auth_sm_i.h	/^	PortTypes portMode;     \/\/ AUTH_PEA SM私有的端口模式,初始化时设置Auto，进入FORCE_AUTH状态时设置ForceAuthorized，进入FORCE_UNAUTH状态时设置ForceUnauthorized$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::portValid	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean portValid;      \/\/ 只在无线网络中(wpa功能开启时)被用到$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::quietPeriod	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int quietPeriod; \/* default 60; 0..65535 静默时间,应该是认证失败后到重新认证的间隔，用于设置定时器quietWhile*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::quietWhile	src/eapol_auth/eapol_auth_sm_i.h	/^	int quietWhile; \/\/ 用于AUTH_PAE SM，此时间内认证者不会接受任何请求者，超时值为quietPeriod(也就是AUTH_PAE_DEFAULT_quietPeriod)$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::radius_class	src/eapol_auth/eapol_auth_sm_i.h	/^	struct radius_class_data radius_class;$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::radius_class_data	access:public
eapol_state_machine::radius_identifier	src/eapol_auth/eapol_auth_sm_i.h	/^	int radius_identifier;              \/\/ 记录了radius客户端最近发送的radius-request报文的id字段(实际是0～255)$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reAuthCount	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int reAuthCount;   \/\/ 状态机进入CONNECTING状态时累加，一旦超过reAuthMax则进入DISCONNECTED状态，进入DISCONNECTED\/AUTHENTICATED时清0$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reAuthEnabled	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean reAuthEnabled;  \/\/ 重认证功能使能位(只用于认证系统)$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reAuthMax	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int reAuthMax; \/* default 2 重认证次数*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reAuthPeriod	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int reAuthPeriod; \/* default 3600 s 重认证周期(可以由本地配置文件设置，也可以被radius服务器设置),用于设置重认证定时器reAuthWhen*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reAuthWhen	src/eapol_auth/eapol_auth_sm_i.h	/^	int reAuthWhen; \/\/ 用于REAUTH_TIMER SM ，定义了认证系统发起重认证的间隔,超时值为reAuthPeriod$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reAuthenticate	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean reAuthenticate; \/\/ Reauthentication Timer状态机进入REAUTHENTICATE状态时设置TRUE；Authenticator PAE状态机进入CONNECTING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::reauth_timer_state	src/eapol_auth/eapol_auth_sm_i.h	/^	} reauth_timer_state;   \/\/ 重认证定时器状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon68	access:public
eapol_state_machine::rxKey	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean rxKey;$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::serverTimeout	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int serverTimeout; \/* default 30; 1..X 后台服务器认证超时时间，用于设置定时器aWhile*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_state_machine::sta	src/eapol_auth/eapol_auth_sm_i.h	/^	void *sta; \/* station context pointer to use in callbacks 指向对应站表元素控制块*\/$/;"	m	struct:eapol_state_machine	access:public
eapol_supp_be_state	src/eapol_supp/eapol_supp_sm.c	/^static const char *eapol_supp_be_state(int state)$/;"	f	file:	signature:(int state)
eapol_supp_pae_state	src/eapol_supp/eapol_supp_sm.c	/^static const char *eapol_supp_pae_state(int state)$/;"	f	file:	signature:(int state)
eapol_version	src/ap/ap_config.h	/^	int eapol_version;$/;"	m	struct:hostapd_bss_config	access:public
eapol_version	src/ap/wpa_auth.h	/^	int eapol_version;$/;"	m	struct:wpa_auth_config	access:public
ecw2cw	src/ap/ap_config.c	101;"	d	file:
ecw2cw	src/ap/ap_config.c	124;"	d	file:
edit_cb_ctx	src/utils/edit.c	/^static void *edit_cb_ctx;$/;"	v	file:
edit_cb_ctx	src/utils/edit_readline.c	/^static void *edit_cb_ctx;$/;"	v	file:
edit_cb_ctx	src/utils/edit_simple.c	/^static void *edit_cb_ctx;$/;"	v	file:
edit_clear_line	src/utils/edit.c	/^void edit_clear_line(void)$/;"	f	signature:(void)
edit_clear_line	src/utils/edit.h	/^void edit_clear_line(void);$/;"	p	signature:(void)
edit_clear_line	src/utils/edit_readline.c	/^void edit_clear_line(void)$/;"	f	signature:(void)
edit_clear_line	src/utils/edit_simple.c	/^void edit_clear_line(void)$/;"	f	signature:(void)
edit_cmd_cb	src/utils/edit.c	/^static void (*edit_cmd_cb)(void *ctx, char *cmd);$/;"	v	file:
edit_cmd_cb	src/utils/edit_readline.c	/^static void (*edit_cmd_cb)(void *ctx, char *cmd);$/;"	v	file:
edit_cmd_cb	src/utils/edit_simple.c	/^static void (*edit_cmd_cb)(void *ctx, char *cmd);$/;"	v	file:
edit_completion_cb	src/utils/edit.c	/^static char ** (*edit_completion_cb)(void *ctx, const char *cmd, int pos) =$/;"	v	file:
edit_completion_cb	src/utils/edit_readline.c	/^static char ** (*edit_completion_cb)(void *ctx, const char *cmd, int pos) =$/;"	v	file:
edit_deinit	src/utils/edit.c	/^void edit_deinit(const char *history_file,$/;"	f	signature:(const char *history_file, int (*filter_cb)(void *ctx, const char *cmd))
edit_deinit	src/utils/edit.h	/^void edit_deinit(const char *history_file,$/;"	p	signature:(const char *history_file, int (*filter_cb)(void *ctx, const char *cmd))
edit_deinit	src/utils/edit_readline.c	/^void edit_deinit(const char *history_file,$/;"	f	signature:(const char *history_file, int (*filter_cb)(void *ctx, const char *cmd))
edit_deinit	src/utils/edit_simple.c	/^void edit_deinit(const char *history_file,$/;"	f	signature:(const char *history_file, int (*filter_cb)(void *ctx, const char *cmd))
edit_eof_cb	src/utils/edit.c	/^static void (*edit_eof_cb)(void *ctx);$/;"	v	file:
edit_eof_cb	src/utils/edit_readline.c	/^static void (*edit_eof_cb)(void *ctx);$/;"	v	file:
edit_eof_cb	src/utils/edit_simple.c	/^static void (*edit_eof_cb)(void *ctx);$/;"	v	file:
edit_history	src/utils/edit.c	/^struct edit_history {$/;"	s	file:
edit_history::list	src/utils/edit.c	/^	struct dl_list list;$/;"	m	struct:edit_history	typeref:struct:edit_history::dl_list	file:	access:public
edit_history::str	src/utils/edit.c	/^	char str[1];$/;"	m	struct:edit_history	file:	access:public
edit_init	src/utils/edit.c	/^int edit_init(void (*cmd_cb)(void *ctx, char *cmd),$/;"	f	signature:(void (*cmd_cb)(void *ctx, char *cmd), void (*eof_cb)(void *ctx), char ** (*completion_cb)(void *ctx, const char *cmd, int pos), void *ctx, const char *history_file)
edit_init	src/utils/edit.h	/^int edit_init(void (*cmd_cb)(void *ctx, char *cmd),$/;"	p	signature:(void (*cmd_cb)(void *ctx, char *cmd), void (*eof_cb)(void *ctx), char ** (*completion_cb)(void *ctx, const char *cmd, int pos), void *ctx, const char *history_file)
edit_init	src/utils/edit_readline.c	/^int edit_init(void (*cmd_cb)(void *ctx, char *cmd),$/;"	f	signature:(void (*cmd_cb)(void *ctx, char *cmd), void (*eof_cb)(void *ctx), char ** (*completion_cb)(void *ctx, const char *cmd, int pos), void *ctx, const char *history_file)
edit_init	src/utils/edit_simple.c	/^int edit_init(void (*cmd_cb)(void *ctx, char *cmd),$/;"	f	signature:(void (*cmd_cb)(void *ctx, char *cmd), void (*eof_cb)(void *ctx), char ** (*completion_cb)(void *ctx, const char *cmd, int pos), void *ctx, const char *history_file)
edit_key_code	src/utils/edit.c	/^enum edit_key_code {$/;"	g	file:
edit_read_char	src/utils/edit.c	/^static void edit_read_char(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
edit_read_char	src/utils/edit_readline.c	/^static void edit_read_char(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
edit_read_char	src/utils/edit_simple.c	/^static void edit_read_char(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
edit_read_key	src/utils/edit.c	/^static enum edit_key_code edit_read_key(int sock)$/;"	f	file:	signature:(int sock)
edit_redraw	src/utils/edit.c	/^void edit_redraw(void)$/;"	f	signature:(void)
edit_redraw	src/utils/edit.h	/^void edit_redraw(void);$/;"	p	signature:(void)
edit_redraw	src/utils/edit_readline.c	/^void edit_redraw(void)$/;"	f	signature:(void)
edit_redraw	src/utils/edit_simple.c	/^void edit_redraw(void)$/;"	f	signature:(void)
eid	src/common/ieee802_11_defs.h	/^	u8 eid; \/* 221 = 0xdd *\/$/;"	m	struct:wmm_tspec_element	access:public
ek	src/crypto/crypto_internal-cipher.c	/^			u32 ek[32];$/;"	m	struct:crypto_cipher::__anon186::__anon190	file:	access:public
ek	src/crypto/des_i.h	/^	u32 ek[3][32];$/;"	m	struct:des3_key_s	access:public
ek	src/eap_common/ikev2_common.c	/^	u32 ek[3][32];$/;"	m	struct:des3_key_s	file:	access:public
elem_id	src/common/wpa_common.h	/^	u8 elem_id; \/* WLAN_EID_RSN *\/$/;"	m	struct:rsn_ie_hdr	access:public
elem_id	src/common/wpa_common.h	/^	u8 elem_id;$/;"	m	struct:wpa_ie_hdr	access:public
elem_id	src/drivers/driver_broadcom.c	/^	u8 elem_id;$/;"	m	struct:bss_ie_hdr	file:	access:public
element_id	src/common/ieee802_11_defs.h	/^					u8 element_id;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
eloop	src/utils/eloop.c	/^static struct eloop_data eloop;$/;"	v	typeref:struct:eloop_data	file:
eloop	src/utils/eloop_none.c	/^static struct eloop_data eloop;$/;"	v	typeref:struct:eloop_data	file:
eloop	src/utils/eloop_win.c	/^static struct eloop_data eloop;$/;"	v	typeref:struct:eloop_data	file:
eloop_cancel_timeout	src/utils/eloop.c	/^int eloop_cancel_timeout(eloop_timeout_handler handler,$/;"	f	signature:(eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_cancel_timeout	src/utils/eloop.h	/^int eloop_cancel_timeout(eloop_timeout_handler handler,$/;"	p	signature:(eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_cancel_timeout	src/utils/eloop_none.c	/^int eloop_cancel_timeout(void (*handler)(void *eloop_ctx, void *sock_ctx),$/;"	f	signature:(void (*handler)(void *eloop_ctx, void *sock_ctx), void *eloop_data, void *user_data)
eloop_cancel_timeout	src/utils/eloop_win.c	/^int eloop_cancel_timeout(eloop_timeout_handler handler,$/;"	f	signature:(eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_data	src/utils/eloop.c	/^	void *eloop_data;           \/\/ 回调函数参数2$/;"	m	struct:eloop_sock	file:	access:public
eloop_data	src/utils/eloop.c	/^	void *eloop_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_data	src/utils/eloop.c	/^struct eloop_data {$/;"	s	file:
eloop_data	src/utils/eloop_none.c	/^	void *eloop_data;$/;"	m	struct:eloop_sock	file:	access:public
eloop_data	src/utils/eloop_none.c	/^	void *eloop_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_data	src/utils/eloop_none.c	/^struct eloop_data {$/;"	s	file:
eloop_data	src/utils/eloop_win.c	/^	void *eloop_data;$/;"	m	struct:eloop_event	file:	access:public
eloop_data	src/utils/eloop_win.c	/^	void *eloop_data;$/;"	m	struct:eloop_sock	file:	access:public
eloop_data	src/utils/eloop_win.c	/^	void *eloop_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_data	src/utils/eloop_win.c	/^struct eloop_data {$/;"	s	file:
eloop_data::event_count	src/utils/eloop_win.c	/^	size_t event_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::events	src/utils/eloop_win.c	/^	struct eloop_event *events;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_event	file:	access:public
eloop_data::exceptions	src/utils/eloop.c	/^	struct eloop_sock_table exceptions;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock_table	file:	access:public
eloop_data::handles	src/utils/eloop_win.c	/^	HANDLE *handles;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::max_sock	src/utils/eloop.c	/^	int max_sock;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::max_sock	src/utils/eloop_none.c	/^	int max_sock, reader_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::max_sock	src/utils/eloop_win.c	/^	int max_sock;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::num_handles	src/utils/eloop_win.c	/^	size_t num_handles;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::pending_terminate	src/utils/eloop.c	/^	int pending_terminate;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::pending_terminate	src/utils/eloop_none.c	/^	int pending_terminate;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::pending_terminate	src/utils/eloop_win.c	/^	int pending_terminate;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::reader_count	src/utils/eloop_none.c	/^	int max_sock, reader_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::reader_count	src/utils/eloop_win.c	/^	size_t reader_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::reader_table_changed	src/utils/eloop.c	/^	int reader_table_changed;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::reader_table_changed	src/utils/eloop_none.c	/^	int reader_table_changed;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::reader_table_changed	src/utils/eloop_win.c	/^	int reader_table_changed;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::readers	src/utils/eloop.c	/^	struct eloop_sock_table readers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock_table	file:	access:public
eloop_data::readers	src/utils/eloop_none.c	/^	struct eloop_sock *readers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock	file:	access:public
eloop_data::readers	src/utils/eloop_win.c	/^	struct eloop_sock *readers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock	file:	access:public
eloop_data::signal_count	src/utils/eloop.c	/^	int signal_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::signal_count	src/utils/eloop_none.c	/^	int signal_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::signal_count	src/utils/eloop_win.c	/^	int signal_count;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::signaled	src/utils/eloop.c	/^	int signaled;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::signaled	src/utils/eloop_none.c	/^	int signaled;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::signaled	src/utils/eloop_win.c	/^	int signaled;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::signals	src/utils/eloop.c	/^	struct eloop_signal *signals;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
eloop_data::signals	src/utils/eloop_none.c	/^	struct eloop_signal *signals;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
eloop_data::signals	src/utils/eloop_win.c	/^	struct eloop_signal *signals;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
eloop_data::term_event	src/utils/eloop_win.c	/^	HANDLE term_event;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::term_signal	src/utils/eloop_win.c	/^	struct eloop_signal term_signal;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
eloop_data::terminate	src/utils/eloop.c	/^	int terminate;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::terminate	src/utils/eloop_none.c	/^	int terminate;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::terminate	src/utils/eloop_win.c	/^	int terminate;$/;"	m	struct:eloop_data	file:	access:public
eloop_data::timeout	src/utils/eloop.c	/^	struct dl_list timeout;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::dl_list	file:	access:public
eloop_data::timeout	src/utils/eloop_none.c	/^	struct eloop_timeout *timeout;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_timeout	file:	access:public
eloop_data::timeout	src/utils/eloop_win.c	/^	struct eloop_timeout *timeout;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_timeout	file:	access:public
eloop_data::writers	src/utils/eloop.c	/^	struct eloop_sock_table writers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock_table	file:	access:public
eloop_destroy	src/utils/eloop.c	/^void eloop_destroy(void)$/;"	f	signature:(void)
eloop_destroy	src/utils/eloop.h	/^void eloop_destroy(void);$/;"	p	signature:(void)
eloop_destroy	src/utils/eloop_none.c	/^void eloop_destroy(void)$/;"	f	signature:(void)
eloop_destroy	src/utils/eloop_win.c	/^void eloop_destroy(void)$/;"	f	signature:(void)
eloop_event	src/utils/eloop_win.c	/^struct eloop_event {$/;"	s	file:
eloop_event::eloop_data	src/utils/eloop_win.c	/^	void *eloop_data;$/;"	m	struct:eloop_event	file:	access:public
eloop_event::event	src/utils/eloop_win.c	/^	HANDLE event;$/;"	m	struct:eloop_event	file:	access:public
eloop_event::handler	src/utils/eloop_win.c	/^	eloop_event_handler handler;$/;"	m	struct:eloop_event	file:	access:public
eloop_event::user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_event	file:	access:public
eloop_event_handler	src/utils/eloop.h	/^typedef void (*eloop_event_handler)(void *eloop_data, void *user_ctx);$/;"	t
eloop_event_type	src/utils/eloop.h	/^} eloop_event_type;$/;"	t	typeref:enum:__anon28
eloop_get_sock_table	src/utils/eloop.c	/^static struct eloop_sock_table *eloop_get_sock_table(eloop_event_type type)$/;"	f	file:	signature:(eloop_event_type type)
eloop_handle_alarm	src/utils/eloop.c	/^static void eloop_handle_alarm(int sig)$/;"	f	file:	signature:(int sig)
eloop_handle_console_ctrl	src/utils/eloop_win.c	/^static BOOL eloop_handle_console_ctrl(DWORD type)$/;"	f	file:	signature:(DWORD type)
eloop_handle_signal	src/utils/eloop.c	/^static void eloop_handle_signal(int sig)$/;"	f	file:	signature:(int sig)
eloop_init	src/utils/eloop.c	/^int eloop_init(void)$/;"	f	signature:(void)
eloop_init	src/utils/eloop.h	/^int eloop_init(void);$/;"	p	signature:(void)
eloop_init	src/utils/eloop_none.c	/^int eloop_init(void)$/;"	f	signature:(void)
eloop_init	src/utils/eloop_win.c	/^int eloop_init(void)$/;"	f	signature:(void)
eloop_is_timeout_registered	src/utils/eloop.c	/^int eloop_is_timeout_registered(eloop_timeout_handler handler,$/;"	f	signature:(eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_is_timeout_registered	src/utils/eloop.h	/^int eloop_is_timeout_registered(eloop_timeout_handler handler,$/;"	p	signature:(eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_is_timeout_registered	src/utils/eloop_none.c	/^int eloop_is_timeout_registered(void (*handler)(void *eloop_ctx,$/;"	f	signature:(void (*handler)(void *eloop_ctx, void *timeout_ctx), void *eloop_data, void *user_data)
eloop_is_timeout_registered	src/utils/eloop_win.c	/^int eloop_is_timeout_registered(eloop_timeout_handler handler,$/;"	f	signature:(eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_prepare_handles	src/utils/eloop_win.c	/^static int eloop_prepare_handles(void)$/;"	f	file:	signature:(void)
eloop_process_pending_signals	src/utils/eloop.c	/^static void eloop_process_pending_signals(void)$/;"	f	file:	signature:(void)
eloop_process_pending_signals	src/utils/eloop_none.c	/^static void eloop_process_pending_signals(void)$/;"	f	file:	signature:(void)
eloop_process_pending_signals	src/utils/eloop_win.c	/^static void eloop_process_pending_signals(void)$/;"	f	file:	signature:(void)
eloop_register_event	src/utils/eloop.h	/^int eloop_register_event(void *event, size_t event_size,$/;"	p	signature:(void *event, size_t event_size, eloop_event_handler handler, void *eloop_data, void *user_data)
eloop_register_event	src/utils/eloop_win.c	/^int eloop_register_event(void *event, size_t event_size,$/;"	f	signature:(void *event, size_t event_size, eloop_event_handler handler, void *eloop_data, void *user_data)
eloop_register_read_sock	src/utils/eloop.c	/^int eloop_register_read_sock(int sock, eloop_sock_handler handler,$/;"	f	signature:(int sock, eloop_sock_handler handler, void *eloop_data, void *user_data)
eloop_register_read_sock	src/utils/eloop.h	/^int eloop_register_read_sock(int sock, eloop_sock_handler handler,$/;"	p	signature:(int sock, eloop_sock_handler handler, void *eloop_data, void *user_data)
eloop_register_read_sock	src/utils/eloop_none.c	/^int eloop_register_read_sock(int sock,$/;"	f	signature:(int sock, void (*handler)(int sock, void *eloop_ctx, void *sock_ctx), void *eloop_data, void *user_data)
eloop_register_read_sock	src/utils/eloop_win.c	/^int eloop_register_read_sock(int sock, eloop_sock_handler handler,$/;"	f	signature:(int sock, eloop_sock_handler handler, void *eloop_data, void *user_data)
eloop_register_signal	src/utils/eloop.c	/^int eloop_register_signal(int sig, eloop_signal_handler handler,$/;"	f	signature:(int sig, eloop_signal_handler handler, void *user_data)
eloop_register_signal	src/utils/eloop.h	/^int eloop_register_signal(int sig, eloop_signal_handler handler,$/;"	p	signature:(int sig, eloop_signal_handler handler, void *user_data)
eloop_register_signal	src/utils/eloop_none.c	/^int eloop_register_signal(int sig,$/;"	f	signature:(int sig, void (*handler)(int sig, void *eloop_ctx, void *signal_ctx), void *user_data)
eloop_register_signal	src/utils/eloop_win.c	/^int eloop_register_signal(int sig, eloop_signal_handler handler,$/;"	f	signature:(int sig, eloop_signal_handler handler, void *user_data)
eloop_register_signal_reconfig	src/utils/eloop.c	/^int eloop_register_signal_reconfig(eloop_signal_handler handler,$/;"	f	signature:(eloop_signal_handler handler, void *user_data)
eloop_register_signal_reconfig	src/utils/eloop.h	/^int eloop_register_signal_reconfig(eloop_signal_handler handler,$/;"	p	signature:(eloop_signal_handler handler, void *user_data)
eloop_register_signal_reconfig	src/utils/eloop_none.c	/^int eloop_register_signal_reconfig(void (*handler)(int sig, void *eloop_ctx,$/;"	f	signature:(void (*handler)(int sig, void *eloop_ctx, void *signal_ctx), void *user_data)
eloop_register_signal_reconfig	src/utils/eloop_win.c	/^int eloop_register_signal_reconfig(eloop_signal_handler handler,$/;"	f	signature:(eloop_signal_handler handler, void *user_data)
eloop_register_signal_terminate	src/utils/eloop.c	/^int eloop_register_signal_terminate(eloop_signal_handler handler,$/;"	f	signature:(eloop_signal_handler handler, void *user_data)
eloop_register_signal_terminate	src/utils/eloop.h	/^int eloop_register_signal_terminate(eloop_signal_handler handler,$/;"	p	signature:(eloop_signal_handler handler, void *user_data)
eloop_register_signal_terminate	src/utils/eloop_none.c	/^int eloop_register_signal_terminate(void (*handler)(int sig, void *eloop_ctx,$/;"	f	signature:(void (*handler)(int sig, void *eloop_ctx, void *signal_ctx), void *user_data)
eloop_register_signal_terminate	src/utils/eloop_win.c	/^int eloop_register_signal_terminate(eloop_signal_handler handler,$/;"	f	signature:(eloop_signal_handler handler, void *user_data)
eloop_register_sock	src/utils/eloop.c	/^int eloop_register_sock(int sock, eloop_event_type type,$/;"	f	signature:(int sock, eloop_event_type type, eloop_sock_handler handler, void *eloop_data, void *user_data)
eloop_register_sock	src/utils/eloop.h	/^int eloop_register_sock(int sock, eloop_event_type type,$/;"	p	signature:(int sock, eloop_event_type type, eloop_sock_handler handler, void *eloop_data, void *user_data)
eloop_register_timeout	src/utils/eloop.c	/^int eloop_register_timeout(unsigned int secs, unsigned int usecs,$/;"	f	signature:(unsigned int secs, unsigned int usecs, eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_register_timeout	src/utils/eloop.h	/^int eloop_register_timeout(unsigned int secs, unsigned int usecs,$/;"	p	signature:(unsigned int secs, unsigned int usecs, eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_register_timeout	src/utils/eloop_none.c	/^int eloop_register_timeout(unsigned int secs, unsigned int usecs,$/;"	f	signature:(unsigned int secs, unsigned int usecs, void (*handler)(void *eloop_ctx, void *timeout_ctx), void *eloop_data, void *user_data)
eloop_register_timeout	src/utils/eloop_win.c	/^int eloop_register_timeout(unsigned int secs, unsigned int usecs,$/;"	f	signature:(unsigned int secs, unsigned int usecs, eloop_timeout_handler handler, void *eloop_data, void *user_data)
eloop_remove_timeout	src/utils/eloop.c	/^static void eloop_remove_timeout(struct eloop_timeout *timeout)$/;"	f	file:	signature:(struct eloop_timeout *timeout)
eloop_run	src/utils/eloop.c	/^void eloop_run(void)$/;"	f	signature:(void)
eloop_run	src/utils/eloop.h	/^void eloop_run(void);$/;"	p	signature:(void)
eloop_run	src/utils/eloop_none.c	/^void eloop_run(void)$/;"	f	signature:(void)
eloop_run	src/utils/eloop_win.c	/^void eloop_run(void)$/;"	f	signature:(void)
eloop_signal	src/utils/eloop.c	/^struct eloop_signal {$/;"	s	file:
eloop_signal	src/utils/eloop_none.c	/^struct eloop_signal {$/;"	s	file:
eloop_signal	src/utils/eloop_win.c	/^struct eloop_signal {$/;"	s	file:
eloop_signal::handler	src/utils/eloop.c	/^	eloop_signal_handler handler;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::handler	src/utils/eloop_none.c	/^	void (*handler)(int sig, void *eloop_ctx, void *signal_ctx);$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::handler	src/utils/eloop_win.c	/^	eloop_signal_handler handler;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::sig	src/utils/eloop.c	/^	int sig;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::sig	src/utils/eloop_none.c	/^	int sig;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::sig	src/utils/eloop_win.c	/^	int sig;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::signaled	src/utils/eloop.c	/^	int signaled;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::signaled	src/utils/eloop_none.c	/^	int signaled;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::signaled	src/utils/eloop_win.c	/^	int signaled;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::user_data	src/utils/eloop.c	/^	void *user_data;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::user_data	src/utils/eloop_none.c	/^	void *user_data;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal::user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_signal	file:	access:public
eloop_signal_handler	src/utils/eloop.h	/^typedef void (*eloop_signal_handler)(int sig, void *signal_ctx);$/;"	t
eloop_sigsegv_handler	src/utils/eloop.c	/^static void eloop_sigsegv_handler(int sig)$/;"	f	file:	signature:(int sig)
eloop_sock	src/utils/eloop.c	/^struct eloop_sock {$/;"	s	file:
eloop_sock	src/utils/eloop_none.c	/^struct eloop_sock {$/;"	s	file:
eloop_sock	src/utils/eloop_win.c	/^struct eloop_sock {$/;"	s	file:
eloop_sock::WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(eloop);$/;"	p	struct:eloop_sock	file:	access:public
eloop_sock::WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(user);$/;"	p	struct:eloop_sock	file:	access:public
eloop_sock::eloop_data	src/utils/eloop.c	/^	void *eloop_data;           \/\/ 回调函数参数2$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::eloop_data	src/utils/eloop_none.c	/^	void *eloop_data;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::eloop_data	src/utils/eloop_win.c	/^	void *eloop_data;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::event	src/utils/eloop_win.c	/^	WSAEVENT event;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::handler	src/utils/eloop.c	/^	eloop_sock_handler handler; \/\/ 事件发生时的回调函数$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::handler	src/utils/eloop_none.c	/^	void (*handler)(int sock, void *eloop_ctx, void *sock_ctx);$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::handler	src/utils/eloop_win.c	/^	eloop_sock_handler handler;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::sock	src/utils/eloop.c	/^	int sock;                   \/\/ 描述符$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::sock	src/utils/eloop_none.c	/^	int sock;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::sock	src/utils/eloop_win.c	/^	int sock;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::user_data	src/utils/eloop.c	/^	void *user_data;            \/\/ 回调函数参数3$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::user_data	src/utils/eloop_none.c	/^	void *user_data;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock::user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_sock	file:	access:public
eloop_sock_handler	src/utils/eloop.h	/^typedef void (*eloop_sock_handler)(int sock, void *eloop_ctx, void *sock_ctx);$/;"	t
eloop_sock_table	src/utils/eloop.c	/^struct eloop_sock_table {$/;"	s	file:
eloop_sock_table::changed	src/utils/eloop.c	/^	int changed;$/;"	m	struct:eloop_sock_table	file:	access:public
eloop_sock_table::count	src/utils/eloop.c	/^	int count;                  \/\/ 已经注册的socket个数$/;"	m	struct:eloop_sock_table	file:	access:public
eloop_sock_table::table	src/utils/eloop.c	/^	struct eloop_sock *table;   \/\/ 列表$/;"	m	struct:eloop_sock_table	typeref:struct:eloop_sock_table::eloop_sock	file:	access:public
eloop_sock_table_add_sock	src/utils/eloop.c	/^static int eloop_sock_table_add_sock(struct eloop_sock_table *table,$/;"	f	file:	signature:(struct eloop_sock_table *table, int sock, eloop_sock_handler handler, void *eloop_data, void *user_data)
eloop_sock_table_destroy	src/utils/eloop.c	/^static void eloop_sock_table_destroy(struct eloop_sock_table *table)$/;"	f	file:	signature:(struct eloop_sock_table *table)
eloop_sock_table_dispatch	src/utils/eloop.c	/^static void eloop_sock_table_dispatch(struct eloop_sock_table *table,$/;"	f	file:	signature:(struct eloop_sock_table *table, fd_set *fds)
eloop_sock_table_remove_sock	src/utils/eloop.c	/^static void eloop_sock_table_remove_sock(struct eloop_sock_table *table,$/;"	f	file:	signature:(struct eloop_sock_table *table, int sock)
eloop_sock_table_set_fds	src/utils/eloop.c	/^static void eloop_sock_table_set_fds(struct eloop_sock_table *table,$/;"	f	file:	signature:(struct eloop_sock_table *table, fd_set *fds)
eloop_terminate	src/utils/eloop.c	/^void eloop_terminate(void)$/;"	f	signature:(void)
eloop_terminate	src/utils/eloop.h	/^void eloop_terminate(void);$/;"	p	signature:(void)
eloop_terminate	src/utils/eloop_none.c	/^void eloop_terminate(void)$/;"	f	signature:(void)
eloop_terminate	src/utils/eloop_win.c	/^void eloop_terminate(void)$/;"	f	signature:(void)
eloop_terminated	src/utils/eloop.c	/^int eloop_terminated(void)$/;"	f	signature:(void)
eloop_terminated	src/utils/eloop.h	/^int eloop_terminated(void);$/;"	p	signature:(void)
eloop_terminated	src/utils/eloop_none.c	/^int eloop_terminated(void)$/;"	f	signature:(void)
eloop_terminated	src/utils/eloop_win.c	/^int eloop_terminated(void)$/;"	f	signature:(void)
eloop_timeout	src/utils/eloop.c	/^struct eloop_timeout {$/;"	s	file:
eloop_timeout	src/utils/eloop_none.c	/^struct eloop_timeout {$/;"	s	file:
eloop_timeout	src/utils/eloop_win.c	/^struct eloop_timeout {$/;"	s	file:
eloop_timeout::WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(eloop);$/;"	p	struct:eloop_timeout	file:	access:public
eloop_timeout::WPA_TRACE_REF	src/utils/eloop.c	/^	WPA_TRACE_REF(user);$/;"	p	struct:eloop_timeout	file:	access:public
eloop_timeout::eloop_data	src/utils/eloop.c	/^	void *eloop_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::eloop_data	src/utils/eloop_none.c	/^	void *eloop_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::eloop_data	src/utils/eloop_win.c	/^	void *eloop_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::handler	src/utils/eloop.c	/^	eloop_timeout_handler handler;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::handler	src/utils/eloop_none.c	/^	void (*handler)(void *eloop_ctx, void *sock_ctx);$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::handler	src/utils/eloop_win.c	/^	eloop_timeout_handler handler;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::list	src/utils/eloop.c	/^	struct dl_list list;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::dl_list	file:	access:public
eloop_timeout::next	src/utils/eloop_none.c	/^	struct eloop_timeout *next;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::eloop_timeout	file:	access:public
eloop_timeout::next	src/utils/eloop_win.c	/^	struct eloop_timeout *next;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::eloop_timeout	file:	access:public
eloop_timeout::time	src/utils/eloop.c	/^	struct os_time time;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::os_time	file:	access:public
eloop_timeout::time	src/utils/eloop_none.c	/^	struct os_time time;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::os_time	file:	access:public
eloop_timeout::time	src/utils/eloop_win.c	/^	struct os_time time;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::os_time	file:	access:public
eloop_timeout::user_data	src/utils/eloop.c	/^	void *user_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::user_data	src/utils/eloop_none.c	/^	void *user_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout::user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_timeout	file:	access:public
eloop_timeout_handler	src/utils/eloop.h	/^typedef void (*eloop_timeout_handler)(void *eloop_data, void *user_ctx);$/;"	t
eloop_trace_sock_add_ref	src/utils/eloop.c	/^static void eloop_trace_sock_add_ref(struct eloop_sock_table *table)$/;"	f	file:	signature:(struct eloop_sock_table *table)
eloop_trace_sock_add_ref	src/utils/eloop.c	118;"	d	file:
eloop_trace_sock_remove_ref	src/utils/eloop.c	/^static void eloop_trace_sock_remove_ref(struct eloop_sock_table *table)$/;"	f	file:	signature:(struct eloop_sock_table *table)
eloop_trace_sock_remove_ref	src/utils/eloop.c	119;"	d	file:
eloop_unregister_event	src/utils/eloop.h	/^void eloop_unregister_event(void *event, size_t event_size);$/;"	p	signature:(void *event, size_t event_size)
eloop_unregister_event	src/utils/eloop_win.c	/^void eloop_unregister_event(void *event, size_t event_size)$/;"	f	signature:(void *event, size_t event_size)
eloop_unregister_read_sock	src/utils/eloop.c	/^void eloop_unregister_read_sock(int sock)$/;"	f	signature:(int sock)
eloop_unregister_read_sock	src/utils/eloop.h	/^void eloop_unregister_read_sock(int sock);$/;"	p	signature:(int sock)
eloop_unregister_read_sock	src/utils/eloop_none.c	/^void eloop_unregister_read_sock(int sock)$/;"	f	signature:(int sock)
eloop_unregister_read_sock	src/utils/eloop_win.c	/^void eloop_unregister_read_sock(int sock)$/;"	f	signature:(int sock)
eloop_unregister_sock	src/utils/eloop.c	/^void eloop_unregister_sock(int sock, eloop_event_type type)$/;"	f	signature:(int sock, eloop_event_type type)
eloop_unregister_sock	src/utils/eloop.h	/^void eloop_unregister_sock(int sock, eloop_event_type type);$/;"	p	signature:(int sock, eloop_event_type type)
eloop_wait_for_read_sock	src/utils/eloop.c	/^void eloop_wait_for_read_sock(int sock)$/;"	f	signature:(int sock)
eloop_wait_for_read_sock	src/utils/eloop.h	/^void eloop_wait_for_read_sock(int sock);$/;"	p	signature:(int sock)
eloop_wait_for_read_sock	src/utils/eloop_none.c	/^void eloop_wait_for_read_sock(int sock)$/;"	f	signature:(int sock)
eloop_wait_for_read_sock	src/utils/eloop_win.c	/^void eloop_wait_for_read_sock(int sock)$/;"	f	signature:(int sock)
email	src/tls/x509v3.h	/^	char *email; \/* emailAddress *\/$/;"	m	struct:x509_name	access:public
emsk	src/eap_peer/eap_aka.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
emsk	src/eap_peer/eap_fast.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
emsk	src/eap_peer/eap_gpsk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
emsk	src/eap_peer/eap_psk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
emsk	src/eap_peer/eap_pwd.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
emsk	src/eap_peer/eap_sake.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
emsk	src/eap_peer/eap_sim.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
emsk	src/eap_server/eap_server_aka.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
emsk	src/eap_server/eap_server_gpsk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
emsk	src/eap_server/eap_server_psk.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
emsk	src/eap_server/eap_server_pwd.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
emsk	src/eap_server/eap_server_sake.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
emsk	src/eap_server/eap_server_sim.c	/^	u8 emsk[EAP_EMSK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
emsk	src/wps/wps_i.h	/^	u8 emsk[WPS_EMSK_LEN];$/;"	m	struct:wps_data	access:public
enabled	src/drivers/driver.h	/^	int enabled;$/;"	m	struct:wpa_bss_params	access:public
enc	src/crypto/crypto_gnutls.c	/^	gcry_cipher_hd_t enc;$/;"	m	struct:crypto_cipher	file:	access:public
enc	src/crypto/crypto_openssl.c	/^	EVP_CIPHER_CTX enc;$/;"	m	struct:crypto_cipher	file:	access:public
enc	src/drivers/driver.h	/^	unsigned int enc;$/;"	m	struct:wpa_driver_capa	access:public
enc_capa	src/drivers/wireless_copy.h	/^	__u32		enc_capa;	\/* IW_ENC_CAPA_* bit field *\/$/;"	m	struct:iw_range	access:public
encoding	src/drivers/wireless_copy.h	/^	struct iw_point	encoding;	\/* Encoding stuff : tokens *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point	access:public
encoding_login_index	src/drivers/wireless_copy.h	/^	__u8	encoding_login_index;	\/* token index for login token *\/$/;"	m	struct:iw_range	access:public
encoding_size	src/drivers/wireless_copy.h	/^	__u16	encoding_size[IW_MAX_ENCODING_SIZES];	\/* Different token sizes *\/$/;"	m	struct:iw_range	access:public
encr	src/eap_common/eap_sim_common.c	/^	size_t mac, iv, encr; \/* index from buf *\/$/;"	m	struct:eap_sim_msg	file:	access:public
encr	src/eap_peer/ikev2.h	/^	int encr;$/;"	m	struct:ikev2_proposal_data	access:public
encr	src/eap_server/ikev2.h	/^	int encr;$/;"	m	struct:ikev2_proposal_data	access:public
encr_data	src/eap_common/eap_sake_common.h	/^	const u8 *encr_data;$/;"	m	struct:eap_sake_parse_attr	access:public
encr_data	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
encr_data_len	src/eap_common/eap_sake_common.h	/^	size_t encr_data_len;$/;"	m	struct:eap_sake_parse_attr	access:public
encr_data_len	src/eap_common/eap_sim_common.h	/^	size_t num_chal, version_list_len, encr_data_len;$/;"	m	struct:eap_sim_attrs	access:public
encr_hash	src/eap_peer/eap_mschapv2.c	/^	u8 encr_hash[16];$/;"	m	struct:ms_change_password	file:	access:public
encr_key	src/eapol_supp/eapol_supp_sm.c	/^	u8 encr_key[IEEE8021X_ENCR_KEY_LEN];$/;"	m	struct:eap_key_data	file:	access:public
encr_next_payload	src/eap_common/ikev2_common.h	/^	u8 encr_next_payload;$/;"	m	struct:ikev2_payloads	access:public
encr_password	src/eap_peer/eap_mschapv2.c	/^	u8 encr_password[516];$/;"	m	struct:ms_change_password	file:	access:public
encr_settings	src/wps/wps_i.h	/^	const u8 *encr_settings;$/;"	m	struct:wps_parse_attr	access:public
encr_settings_len	src/wps/wps_i.h	/^	size_t encr_settings_len;$/;"	m	struct:wps_parse_attr	access:public
encr_type	src/wps/wps.h	/^	u16 encr_type;$/;"	m	struct:wps_credential	access:public
encr_type	src/wps/wps_i.h	/^	const u8 *encr_type; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
encr_type	src/wps/wps_i.h	/^	u16 encr_type;$/;"	m	struct:wps_data	access:public
encr_type_flags	src/wps/wps_i.h	/^	const u8 *encr_type_flags; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
encr_types	src/wps/wps.h	/^	u16 encr_types;$/;"	m	struct:wps_context	access:public
encrypt_ms_key	src/radius/radius.c	/^static void encrypt_ms_key(const u8 *key, size_t key_len, u16 salt,$/;"	f	file:	signature:(const u8 *key, size_t key_len, u16 salt, const u8 *req_authenticator, const u8 *secret, size_t secret_len, u8 *ebuf, size_t *elen)
encrypt_pw_block_with_password_hash	src/crypto/ms_funcs.c	/^int encrypt_pw_block_with_password_hash($/;"	f	signature:( const u8 *password, size_t password_len, const u8 *password_hash, u8 *pw_block)
encrypt_pw_block_with_password_hash	src/crypto/ms_funcs.h	/^int __must_check encrypt_pw_block_with_password_hash($/;"	p	signature:( const u8 *password, size_t password_len, const u8 *password_hash, u8 *pw_block)
encrypted	src/eap_common/ikev2_common.h	/^	const u8 *encrypted;$/;"	m	struct:ikev2_payloads	access:public
encrypted_len	src/eap_common/ikev2_common.h	/^	size_t encrypted_len;$/;"	m	struct:ikev2_payloads	access:public
end	src/eap_peer/eap_fast_pac.c	/^	const char *end;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
engine	src/crypto/tls.h	/^	int engine;$/;"	m	struct:tls_connection_params	access:public
engine	src/crypto/tls_openssl.c	/^	ENGINE *engine;        \/* functional reference to the engine *\/$/;"	m	struct:tls_connection	file:	access:public
engine	src/eap_peer/eap_config.h	/^	int engine;$/;"	m	struct:eap_peer_config	access:public
engine2	src/eap_peer/eap_config.h	/^	int engine2;$/;"	m	struct:eap_peer_config	access:public
engine2_id	src/eap_peer/eap_config.h	/^	char *engine2_id;$/;"	m	struct:eap_peer_config	access:public
engine_id	src/crypto/tls.h	/^	const char *engine_id;$/;"	m	struct:tls_connection_params	access:public
engine_id	src/eap_peer/eap_config.h	/^	char *engine_id;$/;"	m	struct:eap_peer_config	access:public
enrollee	src/wps/wps.h	/^		int enrollee;$/;"	m	struct:wps_event_data::wps_event_pwd_auth_fail	access:public
enrollee	src/wps/wps.h	/^	} enrollee;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_enrollee	access:public
enrollee_addr	src/wps/wps_registrar.c	/^	u8 enrollee_addr[ETH_ALEN];$/;"	m	struct:wps_uuid_pin	file:	access:public
enrollee_nonce	src/wps/wps_i.h	/^	const u8 *enrollee_nonce; \/* WPS_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
enrollee_seen_cb	src/wps/wps.h	/^	void (*enrollee_seen_cb)(void *ctx, const u8 *addr, const u8 *uuid_e,$/;"	m	struct:wps_registrar_config	access:public
enrollee_seen_cb	src/wps/wps_registrar.c	/^	void (*enrollee_seen_cb)(void *ctx, const u8 *addr, const u8 *uuid_e,$/;"	m	struct:wps_registrar	file:	access:public
entity	src/crypto/tls_gnutls.c	/^	gnutls_connection_end_t entity;$/;"	m	struct:__anon192	file:	access:public
entropy	src/crypto/random.c	/^static unsigned int entropy = 0;$/;"	v	file:
er	src/wps/wps_er.h	/^	struct wps_er *er;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::wps_er	access:public
er	src/wps/wps_i.h	/^	int er;$/;"	m	struct:wps_data	access:public
erp	src/ap/ap_list.h	/^	int erp; \/* ERP Info or -1 if ERP info element not present *\/$/;"	m	struct:ap_info	access:public
erp_info	src/common/ieee802_11_common.h	/^	const u8 *erp_info;$/;"	m	struct:ieee802_11_elems	access:public
erp_info_len	src/common/ieee802_11_common.h	/^	u8 erp_info_len;$/;"	m	struct:ieee802_11_elems	access:public
err	src/drivers/driver_hostap.h	/^			u32 err;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
errWirelessNoError	src/drivers/Apple80211.h	13;"	d
error	src/ap/wpa_auth_ie.h	/^	const u8 *error;$/;"	m	struct:wpa_eapol_ie_parse	access:public
error	src/crypto/crypto_cryptoapi.c	/^	int error;$/;"	m	struct:crypto_hash	file:	access:public
error	src/crypto/crypto_libtomcrypt.c	/^	int error;$/;"	m	struct:crypto_hash	file:	access:public
error	src/drivers/driver_nl80211.c	/^	unsigned int error:1;$/;"	m	struct:wiphy_info_data	file:	access:public
error	src/rsn_supp/wpa_ie.h	/^	const u8 *error;$/;"	m	struct:wpa_eapol_ie_parse	access:public
error_handler	src/drivers/driver_nl80211.c	/^static int error_handler(struct sockaddr_nl *nla, struct nlmsgerr *err,$/;"	f	file:	signature:(struct sockaddr_nl *nla, struct nlmsgerr *err, void *arg)
error_indication	src/wps/wps.h	/^		u16 error_indication;$/;"	m	struct:wps_event_data::wps_event_fail	access:public
error_indication	src/wps/wps_i.h	/^	u16 error_indication;$/;"	m	struct:wps_data	access:public
error_len	src/ap/wpa_auth_ie.h	/^	size_t error_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
error_len	src/rsn_supp/wpa_ie.h	/^	size_t error_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
error_type	src/common/wpa_common.h	/^	be16 error_type;$/;"	m	struct:rsn_error_kde	access:public
error_type	src/eap_peer/ikev2.h	/^	u16 error_type;$/;"	m	struct:ikev2_responder_data	access:public
errors	hostapd/ctrl_iface.c	/^	int errors;$/;"	m	struct:wpa_ctrl_dst	file:	access:public
esc_seq_to_key	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key(char *seq)$/;"	f	file:	signature:(char *seq)
esc_seq_to_key1	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key1(int param1, int param2, char last)$/;"	f	file:	signature:(int param1, int param2, char last)
esc_seq_to_key1_alt	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key1_alt(char last)$/;"	f	file:	signature:(char last)
esc_seq_to_key1_alt_shift	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key1_alt_shift(char last)$/;"	f	file:	signature:(char last)
esc_seq_to_key1_ctrl	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key1_ctrl(char last)$/;"	f	file:	signature:(char last)
esc_seq_to_key1_no	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key1_no(char last)$/;"	f	file:	signature:(char last)
esc_seq_to_key1_shift	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key1_shift(char last)$/;"	f	file:	signature:(char last)
esc_seq_to_key2	src/utils/edit.c	/^static enum edit_key_code esc_seq_to_key2(int param1, int param2, char last)$/;"	f	file:	signature:(int param1, int param2, char last)
esr	src/ap/ap_config.h	/^	int esr;$/;"	m	struct:hostapd_bss_config	access:public
essid	src/drivers/wireless_copy.h	/^	__u8		essid[IW_ESSID_MAX_SIZE];$/;"	m	struct:iw_scan_req	access:public
essid	src/drivers/wireless_copy.h	/^	struct iw_point	essid;		\/* Extended network name *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point	access:public
essid_len	src/drivers/wireless_copy.h	/^	__u8		essid_len;$/;"	m	struct:iw_scan_req	access:public
established	src/crypto/tls_gnutls.c	/^	int established;$/;"	m	struct:tls_connection	file:	access:public
established	src/crypto/tls_nss.c	/^	int established;$/;"	m	struct:tls_connection	file:	access:public
established	src/crypto/tls_schannel.c	/^	int established, start;$/;"	m	struct:tls_connection	file:	access:public
established	src/eap_server/eap_server_tls.c	/^	int established;$/;"	m	struct:eap_tls_data	file:	access:public
eth	src/l2_packet/l2_packet_pcap.c	/^	eth_t *eth;$/;"	m	struct:l2_packet_data	file:	access:public
eth_get	src/l2_packet/l2_packet_freebsd.c	/^static int eth_get(const char *device, u8 ea[ETH_ALEN])$/;"	f	file:	signature:(const char *device, u8 ea[ETH_ALEN])
eth_get	src/wps/wps_upnp.c	/^static int eth_get(const char *device, u8 ea[ETH_ALEN])$/;"	f	file:	signature:(const char *device, u8 ea[ETH_ALEN])
ether_send	src/rsn_supp/wpa.h	/^	int (*ether_send)(void *ctx, const u8 *dest, u16 proto, const u8 *buf,$/;"	m	struct:wpa_sm_ctx	access:public
ether_sprintf	src/drivers/driver_atheros.c	/^ether_sprintf(const u8 *addr)$/;"	f	file:	signature:(const u8 *addr)
ether_sprintf	src/drivers/driver_bsd.c	/^ether_sprintf(const u8 *addr)$/;"	f	file:	signature:(const u8 *addr)
ether_sprintf	src/drivers/driver_madwifi.c	/^ether_sprintf(const u8 *addr)$/;"	f	file:	signature:(const u8 *addr)
ethertype	src/drivers/driver_wired.c	/^	u16 ethertype;$/;"	m	struct:ieee8023_hdr	file:	access:public
event	src/utils/eloop_win.c	/^	HANDLE event;$/;"	m	struct:eloop_event	file:	access:public
event	src/utils/eloop_win.c	/^	WSAEVENT event;$/;"	m	struct:eloop_sock	file:	access:public
event_add	src/wps/wps_upnp_event.c	/^int event_add(struct subscription *s, const struct wpabuf *data, int probereq)$/;"	f	signature:(struct subscription *s, const struct wpabuf *data, int probereq)
event_add	src/wps/wps_upnp_i.h	/^int event_add(struct subscription *s, const struct wpabuf *data, int probereq);$/;"	p	signature:(struct subscription *s, const struct wpabuf *data, int probereq)
event_addr_failure	src/wps/wps_upnp_event.c	/^static void event_addr_failure(struct wps_event_ *e)$/;"	f	file:	signature:(struct wps_event_ *e)
event_avail	src/drivers/driver_ndis.h	/^	HANDLE events_pipe, event_avail;$/;"	m	struct:wpa_driver_ndis_data	access:public
event_avail	src/drivers/ndis_events.c	/^	HANDLE read_pipe, write_pipe, event_avail;$/;"	m	struct:ndis_events_data	file:	access:public
event_build_message	src/wps/wps_upnp_event.c	/^static struct wpabuf * event_build_message(struct wps_event_ *e)$/;"	f	file:	signature:(struct wps_event_ *e)
event_capa	src/drivers/wireless_copy.h	/^	__u32		event_capa[6];$/;"	m	struct:iw_range	access:public
event_cb	src/crypto/tls.h	/^	void (*event_cb)(void *ctx, enum tls_event ev,$/;"	m	struct:tls_config	access:public
event_cb	src/crypto/tls_openssl.c	/^	void (*event_cb)(void *ctx, enum tls_event ev,$/;"	m	struct:tls_global	file:	access:public
event_cb	src/wps/wps.h	/^	void (*event_cb)(void *ctx, enum wps_event event,$/;"	m	struct:wps_context	access:public
event_clean	src/wps/wps_upnp_event.c	/^static void event_clean(struct wps_event_ *e)$/;"	f	file:	signature:(struct wps_event_ *e)
event_count	src/utils/eloop_win.c	/^	size_t event_count;$/;"	m	struct:eloop_data	file:	access:public
event_delete	src/wps/wps_upnp_event.c	/^static void event_delete(struct wps_event_ *e)$/;"	f	file:	signature:(struct wps_event_ *e)
event_delete_all	src/wps/wps_upnp_event.c	/^void event_delete_all(struct subscription *s)$/;"	f	signature:(struct subscription *s)
event_delete_all	src/wps/wps_upnp_i.h	/^void event_delete_all(struct subscription *s);$/;"	p	signature:(struct subscription *s)
event_dequeue	src/wps/wps_upnp_event.c	/^static struct wps_event_ *event_dequeue(struct subscription *s)$/;"	f	file:	signature:(struct subscription *s)
event_http_cb	src/wps/wps_upnp_event.c	/^static void event_http_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
event_id	src/wps/wps_er.h	/^	unsigned int event_id;$/;"	m	struct:wps_er	access:public
event_queue	src/drivers/driver_ndis.h	/^	HANDLE event_queue; \/* NDISUIO notifier MsgQueue *\/$/;"	m	struct:wpa_driver_ndis_data	access:public
event_queue	src/wps/wps_upnp_i.h	/^	struct dl_list event_queue; \/* Queued event messages. *\/$/;"	m	struct:subscription	typeref:struct:subscription::dl_list	access:public
event_retry	src/wps/wps_upnp_event.c	/^static void event_retry(struct wps_event_ *e, int do_next_address)$/;"	f	file:	signature:(struct wps_event_ *e, int do_next_address)
event_send_all_later	src/wps/wps_upnp_event.c	/^void event_send_all_later(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
event_send_all_later	src/wps/wps_upnp_i.h	/^void event_send_all_later(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
event_send_all_later_handler	src/wps/wps_upnp_event.c	/^static void event_send_all_later_handler(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
event_send_all_queued	src/wps/wps_upnp_i.h	/^	int event_send_all_queued; \/* if we are scheduled to send events soon$/;"	m	struct:upnp_wps_device_sm	access:public
event_send_start	src/wps/wps_upnp_event.c	/^static int event_send_start(struct subscription *s)$/;"	f	file:	signature:(struct subscription *s)
event_send_stop_all	src/wps/wps_upnp_event.c	/^void event_send_stop_all(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
event_send_stop_all	src/wps/wps_upnp_i.h	/^void event_send_stop_all(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
event_sock	src/drivers/driver_broadcom.c	/^	int event_sock;$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
event_sub_url	src/wps/wps_er.h	/^	char *event_sub_url;$/;"	m	struct:wps_er_ap	access:public
event_to_string	src/drivers/driver.h	/^const char * event_to_string(enum wpa_event_type event);$/;"	p	signature:(enum wpa_event_type event)
event_to_string	src/drivers/driver_common.c	/^const char * event_to_string(enum wpa_event_type event)$/;"	f	signature:(enum wpa_event_type event)
event_types	src/drivers/driver_ndis_.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT,$/;"	g	file:
event_types	src/drivers/ndis_events.c	/^enum event_types { EVENT_CONNECT, EVENT_DISCONNECT, EVENT_MEDIA_SPECIFIC,$/;"	g	file:
events	src/drivers/driver_ndis.h	/^	struct ndis_events_data *events;$/;"	m	struct:wpa_driver_ndis_data	typeref:struct:wpa_driver_ndis_data::ndis_events_data	access:public
events	src/utils/eloop_win.c	/^	struct eloop_event *events;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_event	file:	access:public
events_pipe	src/drivers/driver_ndis.h	/^	HANDLE events_pipe, event_avail;$/;"	m	struct:wpa_driver_ndis_data	access:public
exceptions	src/utils/eloop.c	/^	struct eloop_sock_table exceptions;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock_table	file:	access:public
exch	src/eap_common/eap_pwd_common.h	/^	u8 exch:6;$/;"	m	struct:eap_pwd_hdr	access:public
exchange_type	src/eap_common/ikev2_common.h	/^	u8 exchange_type;$/;"	m	struct:ikev2_hdr	access:public
expanded_key_material	src/tls/tlsv1_common.h	/^	size_t expanded_key_material;$/;"	m	struct:tls_cipher_data	access:public
expiration	src/ap/pmksa_cache_auth.h	/^	os_time_t expiration;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
expiration	src/rsn_supp/peerkey.h	/^	os_time_t expiration;$/;"	m	struct:wpa_peerkey	access:public
expiration	src/rsn_supp/pmksa_cache.h	/^	os_time_t expiration;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
expiration	src/wps/wps_registrar.c	/^	struct os_time expiration;$/;"	m	struct:wps_uuid_pin	typeref:struct:wps_uuid_pin::os_time	file:	access:public
ext_capab	src/rsn_supp/wpa_ie.h	/^	const u8 *ext_capab;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ext_capab_len	src/rsn_supp/wpa_ie.h	/^	size_t ext_capab_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ext_data	src/utils/wpabuf.h	/^	u8 *ext_data; \/* pointer to external data; NULL if data follows$/;"	m	struct:wpabuf	access:public
ext_flags	src/drivers/wireless_copy.h	/^	__u32		ext_flags; \/* IW_ENCODE_EXT_* *\/$/;"	m	struct:iw_encode_ext	access:public
ext_listen_interval	src/p2p/p2p_i.h	/^	u16 ext_listen_interval;$/;"	m	struct:p2p_device	access:public
ext_listen_interval	src/p2p/p2p_i.h	/^	unsigned int ext_listen_interval;$/;"	m	struct:p2p_data	access:public
ext_listen_interval_sec	src/p2p/p2p_i.h	/^	unsigned int ext_listen_interval_sec;$/;"	m	struct:p2p_data	access:public
ext_listen_interval_usec	src/p2p/p2p_i.h	/^	unsigned int ext_listen_interval_usec;$/;"	m	struct:p2p_data	access:public
ext_listen_only	src/p2p/p2p_i.h	/^	int ext_listen_only;$/;"	m	struct:p2p_data	access:public
ext_listen_period	src/p2p/p2p_i.h	/^	u16 ext_listen_period;$/;"	m	struct:p2p_device	access:public
ext_listen_period	src/p2p/p2p_i.h	/^	unsigned int ext_listen_period;$/;"	m	struct:p2p_data	access:public
ext_listen_timing	src/p2p/p2p_i.h	/^	const u8 *ext_listen_timing;$/;"	m	struct:p2p_message	access:public
ext_reg	src/wps/wps_i.h	/^	int ext_reg;$/;"	m	struct:wps_data	access:public
ext_reg_timeout	src/eap_server/eap_server_wsc.c	/^	int ext_reg_timeout;$/;"	m	struct:eap_wsc_data	file:	access:public
ext_supp_rates	src/common/ieee802_11_common.h	/^	const u8 *ext_supp_rates;$/;"	m	struct:ieee802_11_elems	access:public
ext_supp_rates	src/rsn_supp/wpa_ie.h	/^	const u8 *ext_supp_rates;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ext_supp_rates_len	src/common/ieee802_11_common.h	/^	u8 ext_supp_rates_len;$/;"	m	struct:ieee802_11_elems	access:public
ext_supp_rates_len	src/rsn_supp/wpa_ie.h	/^	size_t ext_supp_rates_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
extensions_present	src/tls/x509v3.h	/^	unsigned int extensions_present;$/;"	m	struct:x509_certificate	access:public
extra_cred	src/ap/ap_config.h	/^	u8 *extra_cred;$/;"	m	struct:hostapd_bss_config	access:public
extra_cred	src/wps/wps.h	/^	const u8 *extra_cred;$/;"	m	struct:wps_registrar_config	access:public
extra_cred	src/wps/wps_registrar.c	/^	struct wpabuf *extra_cred;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wpabuf	file:	access:public
extra_cred_len	src/ap/ap_config.h	/^	size_t extra_cred_len;$/;"	m	struct:hostapd_bss_config	access:public
extra_cred_len	src/wps/wps.h	/^	size_t extra_cred_len;$/;"	m	struct:wps_registrar_config	access:public
extra_ies	src/drivers/driver.h	/^	const u8 *extra_ies;$/;"	m	struct:wpa_driver_scan_params	access:public
extra_ies_len	src/drivers/driver.h	/^	size_t extra_ies_len;$/;"	m	struct:wpa_driver_scan_params	access:public
f	src/eap_peer/eap_fast_pac.c	/^	FILE *f;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
fail	src/wps/wps.h	/^	} fail;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_fail	access:public
failed	src/crypto/tls_gnutls.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
failed	src/crypto/tls_openssl.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
failed	src/crypto/tls_schannel.c	/^	int failed, read_alerts, write_alerts;$/;"	m	struct:tls_connection	file:	access:public
family_data	src/drivers/driver_nl80211.c	/^struct family_data {$/;"	s	file:
family_data::group	src/drivers/driver_nl80211.c	/^	const char *group;$/;"	m	struct:family_data	file:	access:public
family_data::id	src/drivers/driver_nl80211.c	/^	int id;$/;"	m	struct:family_data	file:	access:public
family_handler	src/drivers/driver_nl80211.c	/^static int family_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
fast_mp_montgomery_reduce	src/tls/libtommath.c	/^int fast_mp_montgomery_reduce (mp_int * x, mp_int * n, mp_digit rho)$/;"	f	signature:(mp_int * x, mp_int * n, mp_digit rho)
fast_reauth	src/eap_peer/eap_i.h	/^	int fast_reauth;$/;"	m	struct:eap_sm	access:public
fast_reauth	src/eapol_supp/eapol_supp_sm.h	/^	int fast_reauth;$/;"	m	struct:eapol_config	access:public
fast_reauth	src/rsn_supp/wpa_i.h	/^	int fast_reauth; \/* whether EAP fast re-authentication is enabled *\/$/;"	m	struct:wpa_sm	access:public
fast_s_mp_mul_digs	src/tls/libtommath.c	/^static int fast_s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
fast_s_mp_mul_digs	src/tls/libtommath.c	/^static int fast_s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
fast_s_mp_sqr	src/tls/libtommath.c	/^static int fast_s_mp_sqr (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
fast_s_mp_sqr	src/tls/libtommath.c	/^static int fast_s_mp_sqr (mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
fast_version	src/eap_peer/eap_fast.c	/^	int fast_version;$/;"	m	struct:eap_fast_data	file:	access:public
fast_version	src/eap_server/eap_server_fast.c	/^	int fast_version;$/;"	m	struct:eap_fast_data	file:	access:public
fd	src/crypto/tls_nss.c	/^	PRFileDesc *fd;$/;"	m	struct:tls_connection	file:	access:public
fd	src/drivers/driver_roboswitch.c	/^	int fd, is_5350;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
fd	src/drivers/rfkill.c	/^	int fd;$/;"	m	struct:rfkill_data	file:	access:public
fd	src/l2_packet/l2_packet_linux.c	/^	int fd; \/* packet socket for EAPOL frames *\/$/;"	m	struct:l2_packet_data	file:	access:public
fd	src/l2_packet/l2_packet_none.c	/^	int fd;$/;"	m	struct:l2_packet_data	file:	access:public
fd	src/l2_packet/l2_packet_privsep.c	/^	int fd; \/* UNIX domain socket for privsep access *\/$/;"	m	struct:l2_packet_data	file:	access:public
fd	src/wps/http_server.c	/^	int fd;$/;"	m	struct:http_request	file:	access:public
fd	src/wps/http_server.c	/^	int fd;$/;"	m	struct:http_server	file:	access:public
fh_params	src/common/ieee802_11_common.h	/^	const u8 *fh_params;$/;"	m	struct:ieee802_11_elems	access:public
fh_params_len	src/common/ieee802_11_common.h	/^	u8 fh_params_len;$/;"	m	struct:ieee802_11_elems	access:public
file	src/drivers/driver_wired.c	/^	u_int8_t file[128];$/;"	m	struct:dhcp_message	file:	access:public
filename	src/utils/trace.c	/^	const char *filename;$/;"	m	struct:bfd_data	file:	access:public
filter_addr	src/wps/wps_er.h	/^	struct in_addr filter_addr;$/;"	m	struct:wps_er	typeref:struct:wps_er::in_addr	access:public
filter_ssids	src/drivers/driver.h	/^	} *filter_ssids;$/;"	m	struct:wpa_driver_scan_params	typeref:struct:wpa_driver_scan_params::wpa_driver_scan_filter	access:public
filter_ssids	src/drivers/driver_nl80211.c	/^	struct wpa_driver_scan_filter *filter_ssids;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::wpa_driver_scan_filter	file:	access:public
filter_strings	src/utils/edit.c	/^static int filter_strings(char **c, char *str, size_t len)$/;"	f	file:	signature:(char **c, char *str, size_t len)
final_result	src/eap_server/eap_server_fast.c	/^	int final_result;$/;"	m	struct:eap_fast_data	file:	access:public
find_addr_sect	src/utils/trace.c	/^static void find_addr_sect(bfd *abfd, asection *section, void *obj)$/;"	f	file:	signature:(bfd *abfd, asection *section, void *obj)
find_dev_id	src/p2p/p2p_i.h	/^	u8 *find_dev_id;$/;"	m	struct:p2p_data	access:public
find_dev_id_buf	src/p2p/p2p_i.h	/^	u8 find_dev_id_buf[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
find_er	src/wps/wps_upnp_web.c	/^static struct subscription * find_er(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct sockaddr_in *cli)
find_er_addr	src/wps/wps_upnp_web.c	/^static int find_er_addr(struct subscription *s, struct sockaddr_in *cli)$/;"	f	file:	signature:(struct subscription *s, struct sockaddr_in *cli)
find_type	src/p2p/p2p_i.h	/^	enum p2p_discovery_type find_type;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_discovery_type	access:public
finish_handler	src/drivers/driver_nl80211.c	/^static int finish_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
finished	src/eapol_auth/eapol_auth_sm.h	/^	void (*finished)(void *ctx, void *sta_ctx, int success, int preauth);   \/\/ _ieee802_1x_finished $/;"	m	struct:eapol_auth_cb	access:public
fips186_2_prf	src/crypto/crypto.h	/^int __must_check fips186_2_prf(const u8 *seed, size_t seed_len, u8 *x,$/;"	p	signature:(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)
fips186_2_prf	src/crypto/fips_prf_cryptoapi.c	/^int fips186_2_prf(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)$/;"	f	signature:(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)
fips186_2_prf	src/crypto/fips_prf_gnutls.c	/^int fips186_2_prf(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)$/;"	f	signature:(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)
fips186_2_prf	src/crypto/fips_prf_internal.c	/^int fips186_2_prf(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)$/;"	f	signature:(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)
fips186_2_prf	src/crypto/fips_prf_nss.c	/^int fips186_2_prf(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)$/;"	f	signature:(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)
fips186_2_prf	src/crypto/fips_prf_openssl.c	/^int fips186_2_prf(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)$/;"	f	signature:(const u8 *seed, size_t seed_len, u8 *x, size_t xlen)
fips_mode	src/crypto/tls.h	/^	int fips_mode;$/;"	m	struct:tls_config	access:public
first_bss	src/drivers/driver_nl80211.c	/^	struct i802_bss first_bss;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::i802_bss	file:	access:public
first_proto	src/l2_packet/l2_packet_ndis.c	/^	unsigned short first_proto;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
first_sta_seen	src/ap/wpa_auth_i.h	/^	Boolean first_sta_seen;$/;"	m	struct:wpa_group	access:public
first_try	src/eap_peer/eap_vendor_test.c	/^	int first_try;$/;"	m	struct:eap_vendor_test_data	file:	access:public
first_try	src/radius/radius_client.c	/^	os_time_t first_try;$/;"	m	struct:radius_msg_list	file:	access:public
fixed	src/drivers/wireless_copy.h	/^  __u8		fixed;		\/* Hardware should not use auto select *\/$/;"	m	struct:iw_param	access:public
flag	src/drivers/driver.h	/^	int flag;$/;"	m	struct:hostapd_channel_data	access:public
flags	src/ap/hostapd.h	/^	int flags; \/* HOSTAPD_RATE_ flags *\/$/;"	m	struct:hostapd_rate_data	access:public
flags	src/ap/sta_info.h	/^	u32 flags; \/* Bitfield of WLAN_STA_* *\/$/;"	m	struct:sta_info	access:public
flags	src/crypto/tls.h	/^	unsigned int flags;$/;"	m	struct:tls_connection_params	access:public
flags	src/crypto/tls_openssl.c	/^	unsigned int flags;$/;"	m	struct:tls_connection	file:	access:public
flags	src/drivers/driver.h	/^	u32 flags; \/* bitmask of WPA_STA_* flags *\/$/;"	m	struct:hostapd_sta_add_params	access:public
flags	src/drivers/driver.h	/^	unsigned int flags; \/* HOSTAPD_MODE_FLAG_* *\/$/;"	m	struct:hostapd_hw_modes	access:public
flags	src/drivers/driver.h	/^	unsigned int flags;$/;"	m	struct:wpa_driver_capa	access:public
flags	src/drivers/driver.h	/^	unsigned int flags;$/;"	m	struct:wpa_scan_res	access:public
flags	src/drivers/driver.h	/^	unsigned long flags;$/;"	m	struct:hostap_sta_driver_data	access:public
flags	src/drivers/driver_hostap.h	/^			u32 flags;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
flags	src/drivers/driver_wired.c	/^	u_int16_t flags;$/;"	m	struct:dhcp_message	file:	access:public
flags	src/drivers/wireless_copy.h	/^	__u16 flags;$/;"	m	struct:compat_iw_point	access:public
flags	src/drivers/wireless_copy.h	/^	__u32		flags; \/* IW_PMKID_CAND_* *\/$/;"	m	struct:iw_pmkid_cand	access:public
flags	src/drivers/wireless_copy.h	/^	__u32		flags;$/;"	m	struct:iw_michaelmicfailure	access:public
flags	src/drivers/wireless_copy.h	/^	__u8		flags;		\/* Flags (fixed\/auto) *\/$/;"	m	struct:iw_freq	access:public
flags	src/drivers/wireless_copy.h	/^	__u8		flags; \/* reserved as padding; use zero, this may$/;"	m	struct:iw_scan_req	access:public
flags	src/drivers/wireless_copy.h	/^  __u16		flags;		\/* Optional params *\/$/;"	m	struct:iw_point	access:public
flags	src/drivers/wireless_copy.h	/^  __u16		flags;		\/* Various specifc flags (if any) *\/$/;"	m	struct:iw_param	access:public
flags	src/eap_common/eap_pax_common.h	/^	u8 flags;$/;"	m	struct:eap_pax_hdr	access:public
flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_1	access:public
flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_2	access:public
flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_3	access:public
flags	src/eap_common/eap_psk_common.h	/^	u8 flags;$/;"	m	struct:eap_psk_hdr_4	access:public
flags	src/eap_common/ikev2_common.h	/^	u8 flags;$/;"	m	struct:ikev2_hdr	access:public
flags	src/eap_common/ikev2_common.h	/^	u8 flags;$/;"	m	struct:ikev2_payload_hdr	access:public
flags	src/eap_peer/eap_config.h	/^	u32 flags;$/;"	m	struct:eap_peer_config	access:public
flags	src/eap_peer/eap_mschapv2.c	/^	u8 flags;$/;"	m	struct:ms_response	file:	access:public
flags	src/eap_peer/eap_mschapv2.c	/^	u8 flags[2];$/;"	m	struct:ms_change_password	file:	access:public
flags	src/eapol_auth/eapol_auth_sm_i.h	/^	int flags; \/* EAPOL_SM_* eapol层附加功能位的集合*\/$/;"	m	struct:eapol_state_machine	access:public
flags	src/p2p/p2p_i.h	/^	unsigned int flags;$/;"	m	struct:p2p_device	access:public
flags	src/wps/wps_registrar.c	/^	int flags;$/;"	m	struct:wps_uuid_pin	file:	access:public
flags_and	src/drivers/driver_hostap.h	/^			u32 flags_and;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon82	access:public
flags_or	src/drivers/driver_hostap.h	/^			u32 flags_or;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon82	access:public
flush	src/drivers/driver.h	/^	int (*flush)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
flush_pmkid	src/drivers/driver.h	/^	int (*flush_pmkid)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
fname	src/eap_server/eap_sim_db.c	/^	char *fname;$/;"	m	struct:eap_sim_db_data	file:	access:public
for_all_peers	src/p2p/p2p_i.h	/^	int for_all_peers;$/;"	m	struct:p2p_sd_query	access:public
for_each_auth	src/ap/wpa_auth.h	/^	int (*for_each_auth)(void *ctx, int (*cb)(struct wpa_authenticator *a,$/;"	m	struct:wpa_auth_callbacks	access:public
for_each_interface	src/ap/hostapd.h	/^	int (*for_each_interface)(struct hapd_interfaces *interfaces,$/;"	m	struct:hostapd_iface	access:public
for_each_sta	src/ap/wpa_auth.h	/^	int (*for_each_sta)(void *ctx, int (*cb)(struct wpa_state_machine *sm,$/;"	m	struct:wpa_auth_callbacks	access:public
force_client_addr	src/radius/radius_client.h	/^	int force_client_addr;$/;"	m	struct:hostapd_radius_servers	access:public
force_disabled	src/eap_peer/eap_i.h	/^	int force_disabled;$/;"	m	struct:eap_sm	access:public
force_new_label	src/eap_peer/eap_peap.c	/^	int peap_version, force_peap_version, force_new_label;$/;"	m	struct:eap_peap_data	file:	access:public
force_pbc_overlap	src/wps/wps_registrar.c	/^	int force_pbc_overlap;$/;"	m	struct:wps_registrar	file:	access:public
force_peap_version	src/eap_peer/eap_peap.c	/^	int peap_version, force_peap_version, force_new_label;$/;"	m	struct:eap_peap_data	file:	access:public
force_version	src/ap/ap_config.h	/^	int force_version;$/;"	m	struct:hostapd_eap_user	access:public
force_version	src/eap_server/eap.h	/^	int force_version;$/;"	m	struct:eap_user	access:public
force_version	src/eap_server/eap_server_fast.c	/^	int force_version;$/;"	m	struct:eap_fast_data	file:	access:public
force_version	src/eap_server/eap_server_peap.c	/^	int force_version;$/;"	m	struct:eap_peap_data	file:	access:public
format_date	src/wps/wps_upnp.c	/^void format_date(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
format_date	src/wps/wps_upnp_i.h	/^void format_date(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
format_wps_device_xml	src/wps/wps_upnp_web.c	/^static void format_wps_device_xml(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct wpabuf *buf)
found	src/utils/trace.c	/^	bfd_boolean found;$/;"	m	struct:bfd_data	file:	access:public
fprint_char	hostapd/dump_state.c	/^static void fprint_char(FILE *f, char c)$/;"	f	file:	signature:(FILE *f, char c)
frag	src/drivers/wireless_copy.h	/^	struct iw_param	frag;		\/* Fragmentation threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
fragm_threshold	src/ap/ap_config.h	/^	int fragm_threshold;$/;"	m	struct:hostapd_config	access:public
fragment	src/drivers/wireless_copy.h	/^	__u32		fragment;	\/* Rx : Can't perform MAC reassembly *\/$/;"	m	struct:iw_discarded	access:public
fragment_size	src/ap/ap_config.h	/^	int fragment_size;$/;"	m	struct:hostapd_bss_config	access:public
fragment_size	src/eap_peer/eap_config.h	/^	int fragment_size;$/;"	m	struct:eap_peer_config	access:public
fragment_size	src/eap_peer/eap_ikev2.c	/^	size_t fragment_size;$/;"	m	struct:eap_ikev2_data	file:	access:public
fragment_size	src/eap_peer/eap_tnc.c	/^	size_t fragment_size;$/;"	m	struct:eap_tnc_data	file:	access:public
fragment_size	src/eap_peer/eap_wsc.c	/^	size_t fragment_size;$/;"	m	struct:eap_wsc_data	file:	access:public
fragment_size	src/eap_server/eap.h	/^	int fragment_size;$/;"	m	struct:eap_config	access:public
fragment_size	src/eap_server/eap_i.h	/^	int fragment_size;$/;"	m	struct:eap_sm	access:public
fragment_size	src/eap_server/eap_server_ikev2.c	/^	size_t fragment_size;$/;"	m	struct:eap_ikev2_data	file:	access:public
fragment_size	src/eap_server/eap_server_tnc.c	/^	size_t fragment_size;$/;"	m	struct:eap_tnc_data	file:	access:public
fragment_size	src/eap_server/eap_server_wsc.c	/^	size_t fragment_size;$/;"	m	struct:eap_wsc_data	file:	access:public
fragment_size	src/eapol_auth/eapol_auth_sm.h	/^	int fragment_size;$/;"	m	struct:eapol_auth_config	access:public
frame	src/drivers/driver.h	/^		const u8 *frame;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
frame_control	src/common/ieee802_11_defs.h	/^	le16 frame_control;$/;"	m	struct:ieee80211_hdr	access:public
frame_control	src/common/ieee802_11_defs.h	/^	le16 frame_control;$/;"	m	struct:ieee80211_mgmt	access:public
frame_len	src/drivers/driver.h	/^		size_t frame_len;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_rrb_frame	access:public
free	src/eap_peer/eap_i.h	/^	void (*free)(struct eap_method *method);$/;"	m	struct:eap_method	access:public
free	src/eap_server/eap_i.h	/^	void (*free)(struct eap_method *method);$/;"	m	struct:eap_method	access:public
free	src/utils/os.h	492;"	d
free_cb	src/ap/pmksa_cache_auth.c	/^	void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx);$/;"	m	struct:rsn_pmksa_cache	file:	access:public
free_cb	src/rsn_supp/pmksa_cache.c	/^	void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx,$/;"	m	struct:rsn_pmksa_cache	file:	access:public
free_completions	src/utils/edit.c	/^static void free_completions(char **c)$/;"	f	file:	signature:(char **c)
free_crypt_prov	src/crypto/tls_openssl.c	/^	BOOL free_crypt_prov;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
freq	src/ap/hostapd.h	/^	int freq;$/;"	m	struct:hostapd_iface	access:public
freq	src/common/privsep_commands.h	/^	int freq;$/;"	m	struct:privsep_cmd_associate	access:public
freq	src/drivers/driver.h	/^		int freq;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
freq	src/drivers/driver.h	/^		int freq;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
freq	src/drivers/driver.h	/^		int freq;$/;"	m	struct:wpa_event_data::rx_action	access:public
freq	src/drivers/driver.h	/^		unsigned int freq;$/;"	m	struct:wpa_event_data::assoc_info	access:public
freq	src/drivers/driver.h	/^		unsigned int freq;$/;"	m	struct:wpa_event_data::remain_on_channel	access:public
freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:hostapd_freq_params	access:public
freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:wpa_driver_associate_params	access:public
freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:wpa_driver_auth_params	access:public
freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:wpa_scan_res	access:public
freq	src/drivers/driver.h	/^	short freq;$/;"	m	struct:hostapd_channel_data	access:public
freq	src/drivers/wireless_copy.h	/^	struct iw_freq	freq;		\/* frequency or channel :$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_freq	access:public
freq	src/drivers/wireless_copy.h	/^	struct iw_freq	freq[IW_MAX_FREQUENCIES];	\/* list *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_freq	access:public
freq	src/p2p/p2p.h	/^	int freq;$/;"	m	struct:p2p_go_neg_results	access:public
freq	src/p2p/p2p_i.h	/^	unsigned int freq;$/;"	m	struct:p2p_pending_action_tx	access:public
freq_24	src/drivers/driver.h	/^		int freq_24;$/;"	m	struct:wpa_event_data::best_channel	access:public
freq_5	src/drivers/driver.h	/^		int freq_5;$/;"	m	struct:wpa_event_data::best_channel	access:public
freq_list	src/p2p/p2p.h	/^	int freq_list[P2P_MAX_CHANNELS];$/;"	m	struct:p2p_go_neg_results	access:public
freq_overall	src/drivers/driver.h	/^		int freq_overall;$/;"	m	struct:wpa_event_data::best_channel	access:public
freqs	src/drivers/driver.h	/^		const int *freqs;$/;"	m	struct:wpa_event_data::scan_info	access:public
freqs	src/drivers/driver.h	/^	int *freqs;$/;"	m	struct:wpa_driver_scan_params	access:public
frequency	src/drivers/driver.h	/^	u32 frequency;$/;"	m	struct:wpa_signal_info	access:public
frequency_list	src/drivers/driver_broadcom.c	/^static const int frequency_list[] = { $/;"	v	file:
friendly_name	src/ap/ap_config.h	/^	char *friendly_name;$/;"	m	struct:hostapd_bss_config	access:public
friendly_name	src/wps/wps.h	/^		const char *friendly_name;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
friendly_name	src/wps/wps.h	/^	char *friendly_name;$/;"	m	struct:wps_context	access:public
friendly_name	src/wps/wps_er.h	/^	char *friendly_name;$/;"	m	struct:wps_er_ap	access:public
from_unknown_sta	src/drivers/driver_nl80211.c	/^static void from_unknown_sta(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, u8 *buf, size_t len)
ft_action	src/drivers/driver.h	/^		int ft_action;$/;"	m	struct:wpa_event_data::ft_ies	access:public
ft_action_req	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED ft_action_req;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
ft_action_resp	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED ft_action_resp;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ft_capab	src/common/wpa_common.h	/^	u8 ft_capab;$/;"	m	struct:rsn_mdie	access:public
ft_check_msg_2_of_4	src/ap/wpa_auth.c	/^static int ft_check_msg_2_of_4(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_ie_parse *kde)
ft_completed	src/ap/wpa_auth_i.h	/^	unsigned int ft_completed:1;$/;"	m	struct:wpa_state_machine	access:public
ft_completed	src/rsn_supp/wpa_i.h	/^	int ft_completed;$/;"	m	struct:wpa_sm	access:public
ft_ies	src/drivers/driver.h	/^	const u8 *ft_ies;$/;"	m	struct:wpa_driver_associate_params	access:public
ft_ies	src/drivers/driver.h	/^	struct ft_ies {$/;"	s	union:wpa_event_data	access:public
ft_ies	src/drivers/driver.h	/^	} ft_ies;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ft_ies	access:public
ft_ies_len	src/drivers/driver.h	/^	size_t ft_ies_len;$/;"	m	struct:wpa_driver_associate_params	access:public
ft_md	src/drivers/driver.h	/^	const u8 *ft_md;$/;"	m	struct:wpa_driver_associate_params	access:public
ft_over_ds	src/ap/ap_config.h	/^	int ft_over_ds;$/;"	m	struct:hostapd_bss_config	access:public
ft_over_ds	src/ap/wpa_auth.h	/^	int ft_over_ds;$/;"	m	struct:wpa_auth_config	access:public
ft_pmk_cache	src/ap/wpa_auth_i.h	/^	struct wpa_ft_pmk_cache *ft_pmk_cache;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_ft_pmk_cache	access:public
ft_r0kh_r1kh_pull_frame	src/ap/wpa_auth.h	/^struct ft_r0kh_r1kh_pull_frame {$/;"	s
ft_r0kh_r1kh_pull_frame::ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::data_length	src/ap/wpa_auth.h	/^	le16 data_length; \/* little endian length of data (44) *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::key_wrap_extra	src/ap/wpa_auth.h	/^	u8 key_wrap_extra[8];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::nonce	src/ap/wpa_auth.h	/^	u8 nonce[16];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_R0KH_R1KH_PULL *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::pad	src/ap/wpa_auth.h	/^	u8 pad[4]; \/* 8-octet boundary for AES key wrap *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::pmk_r0_name	src/ap/wpa_auth.h	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::r1kh_id	src/ap/wpa_auth.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_pull_frame::s1kh_id	src/ap/wpa_auth.h	/^	u8 s1kh_id[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
ft_r0kh_r1kh_push_frame	src/ap/wpa_auth.h	/^struct ft_r0kh_r1kh_push_frame {$/;"	s
ft_r0kh_r1kh_push_frame::ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::data_length	src/ap/wpa_auth.h	/^	le16 data_length; \/* little endian length of data (88) *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::key_wrap_extra	src/ap/wpa_auth.h	/^	u8 key_wrap_extra[8];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_R0KH_R1KH_PUSH *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::pad	src/ap/wpa_auth.h	/^	u8 pad[6]; \/* 8-octet boundary for AES key wrap *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::pairwise	src/ap/wpa_auth.h	/^	le16 pairwise;$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::pmk_r0_name	src/ap/wpa_auth.h	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::pmk_r1	src/ap/wpa_auth.h	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::pmk_r1_name	src/ap/wpa_auth.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::r1kh_id	src/ap/wpa_auth.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::s1kh_id	src/ap/wpa_auth.h	/^	u8 s1kh_id[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_push_frame::timestamp	src/ap/wpa_auth.h	/^	u8 timestamp[4]; \/* current time in seconds since unix epoch, little$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
ft_r0kh_r1kh_resp_frame	src/ap/wpa_auth.h	/^struct ft_r0kh_r1kh_resp_frame {$/;"	s
ft_r0kh_r1kh_resp_frame::ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::data_length	src/ap/wpa_auth.h	/^	le16 data_length; \/* little endian length of data (76) *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::key_wrap_extra	src/ap/wpa_auth.h	/^	u8 key_wrap_extra[8];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::nonce	src/ap/wpa_auth.h	/^	u8 nonce[16]; \/* copied from pull *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_R0KH_R1KH_RESP *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::pad	src/ap/wpa_auth.h	/^	u8 pad[2]; \/* 8-octet boundary for AES key wrap *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::pairwise	src/ap/wpa_auth.h	/^	le16 pairwise;$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::pmk_r1	src/ap/wpa_auth.h	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::pmk_r1_name	src/ap/wpa_auth.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::r1kh_id	src/ap/wpa_auth.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN]; \/* copied from pull *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_r0kh_r1kh_resp_frame::s1kh_id	src/ap/wpa_auth.h	/^	u8 s1kh_id[ETH_ALEN]; \/* copied from pull *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
ft_remote_r0kh	src/ap/wpa_auth.h	/^struct ft_remote_r0kh {$/;"	s
ft_remote_r0kh::addr	src/ap/wpa_auth.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:ft_remote_r0kh	access:public
ft_remote_r0kh::id	src/ap/wpa_auth.h	/^	u8 id[FT_R0KH_ID_MAX_LEN];$/;"	m	struct:ft_remote_r0kh	access:public
ft_remote_r0kh::id_len	src/ap/wpa_auth.h	/^	size_t id_len;$/;"	m	struct:ft_remote_r0kh	access:public
ft_remote_r0kh::key	src/ap/wpa_auth.h	/^	u8 key[16];$/;"	m	struct:ft_remote_r0kh	access:public
ft_remote_r0kh::next	src/ap/wpa_auth.h	/^	struct ft_remote_r0kh *next;$/;"	m	struct:ft_remote_r0kh	typeref:struct:ft_remote_r0kh::ft_remote_r0kh	access:public
ft_remote_r1kh	src/ap/wpa_auth.h	/^struct ft_remote_r1kh {$/;"	s
ft_remote_r1kh::addr	src/ap/wpa_auth.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:ft_remote_r1kh	access:public
ft_remote_r1kh::id	src/ap/wpa_auth.h	/^	u8 id[FT_R1KH_ID_LEN];$/;"	m	struct:ft_remote_r1kh	access:public
ft_remote_r1kh::key	src/ap/wpa_auth.h	/^	u8 key[16];$/;"	m	struct:ft_remote_r1kh	access:public
ft_remote_r1kh::next	src/ap/wpa_auth.h	/^	struct ft_remote_r1kh *next;$/;"	m	struct:ft_remote_r1kh	typeref:struct:ft_remote_r1kh::ft_remote_r1kh	access:public
ft_rrb_frame	src/ap/wpa_auth.h	/^struct ft_rrb_frame {$/;"	s
ft_rrb_frame::action_length	src/ap/wpa_auth.h	/^	le16 action_length; \/* little endian length of action_frame *\/$/;"	m	struct:ft_rrb_frame	access:public
ft_rrb_frame::ap_address	src/ap/wpa_auth.h	/^	u8 ap_address[ETH_ALEN];$/;"	m	struct:ft_rrb_frame	access:public
ft_rrb_frame::frame_type	src/ap/wpa_auth.h	/^	u8 frame_type; \/* RSN_REMOTE_FRAME_TYPE_FT_RRB *\/$/;"	m	struct:ft_rrb_frame	access:public
ft_rrb_frame::packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_REQUEST\/FT_PACKET_RESPONSE *\/$/;"	m	struct:ft_rrb_frame	access:public
ft_rrb_rx	src/drivers/driver.h	/^	struct ft_rrb_rx {$/;"	s	union:wpa_event_data	access:public
ft_rrb_rx	src/drivers/driver.h	/^	} ft_rrb_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ft_rrb_rx	access:public
ft_validate_ftie	src/rsn_supp/wpa.c	/^static int ft_validate_ftie(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, struct wpa_eapol_ie_parse *ie, const u8 *assoc_resp_ftie)
ft_validate_mdie	src/rsn_supp/wpa.c	/^static int ft_validate_mdie(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, struct wpa_eapol_ie_parse *ie, const u8 *assoc_resp_mdie)
ft_validate_rsnie	src/rsn_supp/wpa.c	/^static int ft_validate_rsnie(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, struct wpa_eapol_ie_parse *ie)
ftie	src/ap/wpa_auth_ie.h	/^	const u8 *ftie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ftie	src/common/ieee802_11_common.h	/^	const u8 *ftie;$/;"	m	struct:ieee802_11_elems	access:public
ftie	src/common/wpa_common.h	/^	const u8 *ftie;$/;"	m	struct:wpa_ft_ies	access:public
ftie	src/rsn_supp/wpa_ie.h	/^	const u8 *ftie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ftie_len	src/ap/wpa_auth_ie.h	/^	size_t ftie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ftie_len	src/common/ieee802_11_common.h	/^	u8 ftie_len;$/;"	m	struct:ieee802_11_elems	access:public
ftie_len	src/common/wpa_common.h	/^	size_t ftie_len;$/;"	m	struct:wpa_ft_ies	access:public
ftie_len	src/rsn_supp/wpa_ie.h	/^	size_t ftie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
full_dynamic_vlan	src/ap/hostapd.h	/^	struct full_dynamic_vlan *full_dynamic_vlan;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::full_dynamic_vlan	access:public
full_dynamic_vlan	src/ap/vlan_init.c	/^struct full_dynamic_vlan {$/;"	s	file:
full_dynamic_vlan::s	src/ap/vlan_init.c	/^	int s; \/* socket on which to listen for new\/removed interfaces. *\/$/;"	m	struct:full_dynamic_vlan	file:	access:public
full_dynamic_vlan_deinit	src/ap/vlan_init.c	/^static void full_dynamic_vlan_deinit(struct full_dynamic_vlan *priv)$/;"	f	file:	signature:(struct full_dynamic_vlan *priv)
full_dynamic_vlan_init	src/ap/vlan_init.c	/^full_dynamic_vlan_init(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
func	src/ap/wps_hostapd.c	/^	int (*func)(struct hostapd_data *h, void *ctx);$/;"	m	struct:wps_for_each_data	file:	access:public
function	src/utils/trace.c	/^	const char *function;$/;"	m	struct:bfd_data	file:	access:public
g_driver_down	src/drivers/driver_ralink.c	/^	u8 g_driver_down;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
gas_add_adv_proto_anqp	src/common/gas.c	/^static void gas_add_adv_proto_anqp(struct wpabuf *buf, u8 query_resp_len_limit,$/;"	f	file:	signature:(struct wpabuf *buf, u8 query_resp_len_limit, u8 pame_bi)
gas_anqp_add_element	src/common/gas.c	/^u8 * gas_anqp_add_element(struct wpabuf *buf, u16 info_id)$/;"	f	signature:(struct wpabuf *buf, u16 info_id)
gas_anqp_add_element	src/common/gas.h	/^u8 * gas_anqp_add_element(struct wpabuf *buf, u16 info_id);$/;"	p	signature:(struct wpabuf *buf, u16 info_id)
gas_anqp_build_comeback_resp	src/common/gas.c	/^struct wpabuf * gas_anqp_build_comeback_resp(u8 dialog_token, u16 status_code,$/;"	f	signature:(u8 dialog_token, u16 status_code, u8 frag_id, u8 more, u16 comeback_delay, size_t size)
gas_anqp_build_comeback_resp	src/common/gas.h	/^struct wpabuf * gas_anqp_build_comeback_resp(u8 dialog_token, u16 status_code,$/;"	p	signature:(u8 dialog_token, u16 status_code, u8 frag_id, u8 more, u16 comeback_delay, size_t size)
gas_anqp_build_comeback_resp_buf	src/common/gas.c	/^struct wpabuf * gas_anqp_build_comeback_resp_buf(u8 dialog_token,$/;"	f	signature:(u8 dialog_token, u16 status_code, u8 frag_id, u8 more, u16 comeback_delay, struct wpabuf *payload)
gas_anqp_build_comeback_resp_buf	src/common/gas.h	/^struct wpabuf * gas_anqp_build_comeback_resp_buf(u8 dialog_token,$/;"	p	signature:(u8 dialog_token, u16 status_code, u8 frag_id, u8 more, u16 comeback_delay, struct wpabuf *payload)
gas_anqp_build_initial_req	src/common/gas.c	/^struct wpabuf * gas_anqp_build_initial_req(u8 dialog_token, size_t size)$/;"	f	signature:(u8 dialog_token, size_t size)
gas_anqp_build_initial_req	src/common/gas.h	/^struct wpabuf * gas_anqp_build_initial_req(u8 dialog_token, size_t size);$/;"	p	signature:(u8 dialog_token, size_t size)
gas_anqp_build_initial_resp	src/common/gas.c	/^struct wpabuf * gas_anqp_build_initial_resp(u8 dialog_token, u16 status_code,$/;"	f	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, size_t size)
gas_anqp_build_initial_resp	src/common/gas.h	/^struct wpabuf * gas_anqp_build_initial_resp(u8 dialog_token, u16 status_code,$/;"	p	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, size_t size)
gas_anqp_build_initial_resp_buf	src/common/gas.c	/^struct wpabuf * gas_anqp_build_initial_resp_buf(u8 dialog_token,$/;"	f	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, struct wpabuf *payload)
gas_anqp_build_initial_resp_buf	src/common/gas.h	/^struct wpabuf * gas_anqp_build_initial_resp_buf(u8 dialog_token,$/;"	p	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, struct wpabuf *payload)
gas_anqp_set_element_len	src/common/gas.c	/^void gas_anqp_set_element_len(struct wpabuf *buf, u8 *len_pos)$/;"	f	signature:(struct wpabuf *buf, u8 *len_pos)
gas_anqp_set_element_len	src/common/gas.h	/^void gas_anqp_set_element_len(struct wpabuf *buf, u8 *len_pos);$/;"	p	signature:(struct wpabuf *buf, u8 *len_pos)
gas_anqp_set_len	src/common/gas.c	/^void gas_anqp_set_len(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
gas_anqp_set_len	src/common/gas.h	/^void gas_anqp_set_len(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
gas_build_comeback_req	src/common/gas.c	/^struct wpabuf * gas_build_comeback_req(u8 dialog_token)$/;"	f	signature:(u8 dialog_token)
gas_build_comeback_req	src/common/gas.h	/^struct wpabuf * gas_build_comeback_req(u8 dialog_token);$/;"	p	signature:(u8 dialog_token)
gas_build_comeback_resp	src/common/gas.c	/^gas_build_comeback_resp(u8 dialog_token, u16 status_code, u8 frag_id, u8 more,$/;"	f	file:	signature:(u8 dialog_token, u16 status_code, u8 frag_id, u8 more, u16 comeback_delay, size_t size)
gas_build_initial_req	src/common/gas.c	/^static struct wpabuf * gas_build_initial_req(u8 dialog_token, size_t size)$/;"	f	file:	signature:(u8 dialog_token, size_t size)
gas_build_initial_resp	src/common/gas.c	/^gas_build_initial_resp(u8 dialog_token, u16 status_code, u16 comeback_delay,$/;"	f	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, size_t size)
gas_build_initial_resp	src/common/gas.h	/^struct wpabuf * gas_build_initial_resp(u8 dialog_token, u16 status_code,$/;"	p	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, size_t size)
gas_build_req	src/common/gas.c	/^gas_build_req(u8 action, u8 dialog_token, size_t size)$/;"	f	file:	signature:(u8 action, u8 dialog_token, size_t size)
gas_build_resp	src/common/gas.c	/^gas_build_resp(u8 action, u8 dialog_token, u16 status_code, u8 frag_id,$/;"	f	file:	signature:(u8 action, u8 dialog_token, u16 status_code, u8 frag_id, u8 more, u16 comeback_delay, size_t size)
generate_authenticator_response	src/crypto/ms_funcs.c	/^int generate_authenticator_response(const u8 *password, size_t password_len,$/;"	f	signature:(const u8 *password, size_t password_len, const u8 *peer_challenge, const u8 *auth_challenge, const u8 *username, size_t username_len, const u8 *nt_response, u8 *response)
generate_authenticator_response	src/crypto/ms_funcs.h	/^int generate_authenticator_response(const u8 *password, size_t password_len,$/;"	p	signature:(const u8 *password, size_t password_len, const u8 *peer_challenge, const u8 *auth_challenge, const u8 *username, size_t username_len, const u8 *nt_response, u8 *response)
generate_authenticator_response_pwhash	src/crypto/ms_funcs.c	/^int generate_authenticator_response_pwhash($/;"	f	signature:( const u8 *password_hash, const u8 *peer_challenge, const u8 *auth_challenge, const u8 *username, size_t username_len, const u8 *nt_response, u8 *response)
generate_authenticator_response_pwhash	src/crypto/ms_funcs.h	/^int generate_authenticator_response_pwhash($/;"	p	signature:( const u8 *password_hash, const u8 *peer_challenge, const u8 *auth_challenge, const u8 *username, size_t username_len, const u8 *nt_response, u8 *response)
generate_nt_response	src/crypto/ms_funcs.c	/^int generate_nt_response(const u8 *auth_challenge, const u8 *peer_challenge,$/;"	f	signature:(const u8 *auth_challenge, const u8 *peer_challenge, const u8 *username, size_t username_len, const u8 *password, size_t password_len, u8 *response)
generate_nt_response	src/crypto/ms_funcs.h	/^int generate_nt_response(const u8 *auth_challenge, const u8 *peer_challenge,$/;"	p	signature:(const u8 *auth_challenge, const u8 *peer_challenge, const u8 *username, size_t username_len, const u8 *password, size_t password_len, u8 *response)
generate_nt_response_pwhash	src/crypto/ms_funcs.c	/^int generate_nt_response_pwhash(const u8 *auth_challenge,$/;"	f	signature:(const u8 *auth_challenge, const u8 *peer_challenge, const u8 *username, size_t username_len, const u8 *password_hash, u8 *response)
generate_nt_response_pwhash	src/crypto/ms_funcs.h	/^int generate_nt_response_pwhash(const u8 *auth_challenge,$/;"	p	signature:(const u8 *auth_challenge, const u8 *peer_challenge, const u8 *username, size_t username_len, const u8 *password_hash, u8 *response)
generator	src/crypto/dh_groups.h	/^	const u8 *generator;$/;"	m	struct:dh_group	access:public
generator_len	src/crypto/dh_groups.h	/^	size_t generator_len;$/;"	m	struct:dh_group	access:public
generic_elem	src/drivers/driver_hostap.h	/^		} generic_elem;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon84	access:public
generic_ie	src/drivers/driver_hostap.c	/^	u8 *generic_ie;$/;"	m	struct:hostap_driver_data	file:	access:public
generic_ie_len	src/drivers/driver_hostap.c	/^	size_t generic_ie_len;$/;"	m	struct:hostap_driver_data	file:	access:public
genl_ctrl_alloc_cache	src/drivers/driver_nl80211.c	101;"	d	file:
genl_ctrl_resolve	src/drivers/driver_nl80211.c	2197;"	d	file:
get80211param	src/drivers/driver_bsd.c	/^get80211param(struct bsd_driver_data *drv, int op)$/;"	f	file:	signature:(struct bsd_driver_data *drv, int op)
get80211var	src/drivers/driver_bsd.c	/^get80211var(struct bsd_driver_data *drv, int op, void *arg, int arg_len)$/;"	f	file:	signature:(struct bsd_driver_data *drv, int op, void *arg, int arg_len)
getKey	src/eap_peer/eap_i.h	/^	u8 * (*getKey)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
getKey	src/eap_server/eap_i.h	/^	u8 * (*getKey)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
getTimeout	src/eap_server/eap_i.h	/^	int (*getTimeout)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
get_args	src/drivers/wireless_copy.h	/^	__u16		get_args;	\/* Type and number of args *\/$/;"	m	struct:iw_priv_args	access:public
get_asymetric_start_key	src/crypto/ms_funcs.c	/^int get_asymetric_start_key(const u8 *master_key, u8 *session_key,$/;"	f	signature:(const u8 *master_key, u8 *session_key, size_t session_key_len, int is_send, int is_server)
get_asymetric_start_key	src/crypto/ms_funcs.h	/^int get_asymetric_start_key(const u8 *master_key, u8 *session_key,$/;"	p	signature:(const u8 *master_key, u8 *session_key, size_t session_key_len, int is_send, int is_server)
get_beacon_ie	src/rsn_supp/wpa.h	/^	int (*get_beacon_ie)(void *ctx);$/;"	m	struct:wpa_sm_ctx	access:public
get_bool	src/eap_peer/eap.h	/^	Boolean (*get_bool)(void *ctx, enum eapol_bool_var variable);$/;"	m	struct:eapol_callbacks	access:public
get_bssid	src/drivers/driver.h	/^	int (*get_bssid)(void *priv, u8 *bssid);$/;"	m	struct:wpa_driver_ops	access:public
get_bssid	src/rsn_supp/wpa.h	/^	int (*get_bssid)(void *ctx, u8 *bssid);$/;"	m	struct:wpa_sm_ctx	access:public
get_capa	src/drivers/driver.h	/^	int (*get_capa)(void *priv, struct wpa_driver_capa *capa);$/;"	m	struct:wpa_driver_ops	access:public
get_complete_cb	src/eap_server/eap_sim_db.c	/^	void (*get_complete_cb)(void *ctx, void *session_ctx);$/;"	m	struct:eap_sim_db_data	file:	access:public
get_config	src/eap_peer/eap.h	/^	struct eap_peer_config * (*get_config)(void *ctx);$/;"	m	struct:eapol_callbacks	typeref:struct:eapol_callbacks::get_config	access:public
get_config_blob	src/eap_peer/eap.h	/^	const struct wpa_config_blob * (*get_config_blob)(void *ctx,$/;"	m	struct:eapol_callbacks	typeref:struct:eapol_callbacks::get_config_blob	access:public
get_config_blob	src/eapol_supp/eapol_supp_sm.h	/^	const struct wpa_config_blob * (*get_config_blob)(void *ctx,$/;"	m	struct:eapol_ctx	typeref:struct:eapol_ctx::get_config_blob	access:public
get_config_blob	src/rsn_supp/wpa.h	/^	const struct wpa_config_blob * (*get_config_blob)(void *ctx,$/;"	m	struct:wpa_sm_ctx	typeref:struct:wpa_sm_ctx::get_config_blob	access:public
get_eapReqData	src/eap_peer/eap.h	/^	struct wpabuf * (*get_eapReqData)(void *ctx);$/;"	m	struct:eapol_callbacks	typeref:struct:eapol_callbacks::get_eapReqData	access:public
get_eap_req_id_text	src/eap_server/eap.h	/^	const char * (*get_eap_req_id_text)(void *ctx, size_t *len);$/;"	m	struct:eapol_callbacks	access:public
get_eap_user	src/eap_server/eap.h	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,$/;"	m	struct:eapol_callbacks	access:public
get_eap_user	src/eapol_auth/eapol_auth_sm.h	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,  $/;"	m	struct:eapol_auth_cb	access:public
get_eap_user	src/radius/radius_server.c	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,$/;"	m	struct:radius_server_data	file:	access:public
get_eap_user	src/radius/radius_server.h	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,$/;"	m	struct:radius_server_conf	access:public
get_eapol	src/ap/wpa_auth.h	/^	int (*get_eapol)(void *ctx, const u8 *addr, wpa_eapol_variable var);$/;"	m	struct:wpa_auth_callbacks	access:public
get_emsk	src/eap_peer/eap_i.h	/^	u8 * (*get_emsk)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
get_emsk	src/eap_server/eap_i.h	/^	u8 * (*get_emsk)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
get_file_name	src/wps/wps_ufd.c	/^static int get_file_name(struct wps_context *wps, int registrar,$/;"	f	file:	signature:(struct wps_context *wps, int registrar, const char *path, char *file_name)
get_group5_prime	src/crypto/crypto_openssl.c	/^static BIGNUM * get_group5_prime(void)$/;"	f	file:	signature:(void)
get_gsm_triplet	hostapd/hlr_auc_gw.c	/^static struct gsm_triplet * get_gsm_triplet(const char *imsi)$/;"	f	file:	signature:(const char *imsi)
get_hapd_bssid	src/ap/drv_callbacks.c	/^static struct hostapd_data * get_hapd_bssid(struct hostapd_iface *iface,$/;"	f	file:	signature:(struct hostapd_iface *iface, const u8 *bssid)
get_hdr_bssid	src/common/ieee802_11_common.c	/^const u8 * get_hdr_bssid(const struct ieee80211_hdr *hdr, size_t len)$/;"	f	signature:(const struct ieee80211_hdr *hdr, size_t len)
get_hdr_bssid	src/common/ieee802_11_common.h	/^const u8 * get_hdr_bssid(const struct ieee80211_hdr *hdr, size_t len);$/;"	p	signature:(const struct ieee80211_hdr *hdr, size_t len)
get_hw_feature_data	src/drivers/driver.h	/^	struct hostapd_hw_modes * (*get_hw_feature_data)(void *priv,$/;"	m	struct:wpa_driver_ops	typeref:struct:wpa_driver_ops::get_hw_feature_data	access:public
get_identity	src/eap_peer/eap_i.h	/^	const u8 * (*get_identity)(struct eap_sm *sm, void *priv, size_t *len);$/;"	m	struct:eap_method	access:public
get_ifname	src/drivers/driver.h	/^	const char * (*get_ifname)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
get_inact_sec	src/drivers/driver.h	/^	int (*get_inact_sec)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
get_info_sta	src/drivers/driver_hostap.h	/^		} get_info_sta;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon80	access:public
get_int	src/eap_peer/eap.h	/^	unsigned int (*get_int)(void *ctx, enum eapol_int_var variable);$/;"	m	struct:eapol_callbacks	access:public
get_interfaces	src/drivers/driver.h	/^	struct wpa_interface_info * (*get_interfaces)(void *global_priv);$/;"	m	struct:wpa_driver_ops	typeref:struct:wpa_driver_ops::get_interfaces	access:public
get_key_handler	src/drivers/driver_nl80211.c	/^static int get_key_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
get_link_noise	src/drivers/driver_nl80211.c	/^static int get_link_noise(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
get_link_signal	src/drivers/driver_nl80211.c	/^static int get_link_signal(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
get_mac_addr	src/drivers/driver.h	/^	const u8 * (*get_mac_addr)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
get_master_key	src/crypto/ms_funcs.c	/^int get_master_key(const u8 *password_hash_hash, const u8 *nt_response,$/;"	f	signature:(const u8 *password_hash_hash, const u8 *nt_response, u8 *master_key)
get_master_key	src/crypto/ms_funcs.h	/^int get_master_key(const u8 *password_hash_hash, const u8 *nt_response,$/;"	p	signature:(const u8 *password_hash_hash, const u8 *nt_response, u8 *master_key)
get_milenage	hostapd/hlr_auc_gw.c	/^static struct milenage_parameters * get_milenage(const char *imsi)$/;"	f	file:	signature:(const char *imsi)
get_msk	src/ap/wpa_auth.h	/^	int (*get_msk)(void *ctx, const u8 *addr, u8 *msk, size_t *len);$/;"	m	struct:wpa_auth_callbacks	access:public
get_netif_info	src/wps/wps_upnp.c	/^int get_netif_info(const char *net_if, unsigned *ip_addr, char **ip_addr_text,$/;"	f	signature:(const char *net_if, unsigned *ip_addr, char **ip_addr_text, u8 mac[ETH_ALEN])
get_netif_info	src/wps/wps_upnp_i.h	/^int get_netif_info(const char *net_if, unsigned *ip_addr, char **ip_addr_text,$/;"	p	signature:(const char *net_if, unsigned *ip_addr, char **ip_addr_text, u8 mac[ETH_ALEN])
get_network_ctx	src/rsn_supp/wpa.h	/^	void * (*get_network_ctx)(void *ctx);$/;"	m	struct:wpa_sm_ctx	access:public
get_noa	src/drivers/driver.h	/^	int (*get_noa)(void *priv, u8 *buf, size_t buf_len);$/;"	m	struct:wpa_driver_ops	access:public
get_noa	src/p2p/p2p.h	/^	int (*get_noa)(void *ctx, const u8 *interface_addr, u8 *buf,$/;"	m	struct:p2p_config	access:public
get_noise_for_scan_results	src/drivers/driver_nl80211.c	/^static int get_noise_for_scan_results(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
get_own_uuid	src/ap/wps_hostapd.c	/^static const u8 * get_own_uuid(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
get_prg_fname	src/utils/trace.c	/^static void get_prg_fname(void)$/;"	f	file:	signature:(void)
get_psk	src/ap/wpa_auth.h	/^	const u8 * (*get_psk)(void *ctx, const u8 *addr, const u8 *prev_psk);$/;"	m	struct:wpa_auth_callbacks	access:public
get_radio_name	src/drivers/driver.h	/^	const char * (*get_radio_name)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
get_scan_results2	src/drivers/driver.h	/^	 struct wpa_scan_results * (*get_scan_results2)(void *priv);$/;"	m	struct:wpa_driver_ops	typeref:struct:wpa_driver_ops::get_scan_results2	access:public
get_seqnum	src/ap/wpa_auth.h	/^	int (*get_seqnum)(void *ctx, const u8 *addr, int idx, u8 *seq);$/;"	m	struct:wpa_auth_callbacks	access:public
get_seqnum	src/drivers/driver.h	/^	int (*get_seqnum)(const char *ifname, void *priv, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
get_shared_secret	src/eap_server/ikev2.h	/^	const u8 * (*get_shared_secret)(void *ctx, const u8 *IDr,$/;"	m	struct:ikev2_initiator_data	access:public
get_ssid	src/drivers/driver.h	/^	int (*get_ssid)(void *priv, u8 *ssid);$/;"	m	struct:wpa_driver_ops	access:public
get_sta_handler	src/drivers/driver_nl80211.c	/^static int get_sta_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
get_state	src/rsn_supp/wpa.h	/^	enum wpa_states (*get_state)(void *ctx);$/;"	m	struct:wpa_sm_ctx	typeref:enum:wpa_sm_ctx::get_state	access:public
get_status	src/eap_peer/eap_i.h	/^	int (*get_status)(struct eap_sm *sm, void *priv, char *buf,$/;"	m	struct:eap_method	access:public
get_unaligned	src/utils/radiotap.c	30;"	d	file:
get_uuid_cb	src/ap/wps_hostapd.c	/^static int get_uuid_cb(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
get_x509_cert	src/crypto/tls_openssl.c	/^static struct wpabuf * get_x509_cert(X509 *cert)$/;"	f	file:	signature:(X509 *cert)
getopt	src/utils/common.c	/^int getopt(int argc, char *const argv[], const char *optstring)$/;"	f	signature:(int argc, char *const argv[], const char *optstring)
getopt	src/utils/common.h	/^int getopt(int argc, char *const argv[], const char *optstring);$/;"	p	signature:(int argc, char *const argv[], const char *optstring)
gf_mulx	src/crypto/aes-omac1.c	/^static void gf_mulx(u8 *pad)$/;"	f	file:	signature:(u8 *pad)
giaddr	src/drivers/driver_wired.c	/^	u_int32_t giaddr;$/;"	m	struct:dhcp_message	file:	access:public
global	hostapd/main.c	/^static struct hapd_global global;$/;"	v	typeref:struct:hapd_global	file:
global	src/drivers/driver_nl80211.c	/^	struct nl80211_global *global;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::nl80211_global	file:	access:public
global	src/drivers/driver_test.c	/^	struct wpa_driver_test_global *global;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::wpa_driver_test_global	file:	access:public
global_deinit	src/drivers/driver.h	/^	void (*global_deinit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
global_init	src/drivers/driver.h	/^	void * (*global_init)(void);$/;"	m	struct:wpa_driver_ops	access:public
global_priv	src/drivers/driver.h	/^	void *global_priv;$/;"	m	struct:wpa_init_params	access:public
gnutls_get_appl_data	src/crypto/tls_gnutls.c	/^static struct wpabuf * gnutls_get_appl_data(struct tls_connection *conn)$/;"	f	file:	signature:(struct tls_connection *conn)
gnutls_session_int	src/crypto/tls_gnutls.c	/^struct gnutls_session_int {$/;"	s	file:
gnutls_session_int::security_parameters	src/crypto/tls_gnutls.c	/^	security_parameters_st security_parameters;$/;"	m	struct:gnutls_session_int	file:	access:public
go_connected	src/p2p/p2p.h	/^	int (*go_connected)(void *ctx, const u8 *dev_addr);$/;"	m	struct:p2p_config	access:public
go_intent	src/p2p/p2p_i.h	/^	const u8 *go_intent;$/;"	m	struct:p2p_message	access:public
go_intent	src/p2p/p2p_i.h	/^	u8 go_intent;$/;"	m	struct:p2p_data	access:public
go_neg_completed	src/p2p/p2p.h	/^	void (*go_neg_completed)(void *ctx, struct p2p_go_neg_results *res);$/;"	m	struct:p2p_config	access:public
go_neg_peer	src/p2p/p2p_i.h	/^	struct p2p_device *go_neg_peer;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
go_neg_req_rx	src/p2p/p2p.h	/^	void (*go_neg_req_rx)(void *ctx, const u8 *src, u16 dev_passwd_id);$/;"	m	struct:p2p_config	access:public
go_neg_req_sent	src/p2p/p2p_i.h	/^	int go_neg_req_sent;$/;"	m	struct:p2p_device	access:public
go_state	src/p2p/p2p_i.h	/^	enum p2p_go_state go_state;$/;"	m	struct:p2p_device	typeref:enum:p2p_device::p2p_go_state	access:public
go_timeout	src/p2p/p2p_i.h	/^	u8 go_timeout;$/;"	m	struct:p2p_device	access:public
got_body	src/wps/httpread.c	/^	int got_body;           \/* nonzero when body is finalized *\/$/;"	m	struct:httpread	file:	access:public
got_content_length	src/wps/httpread.c	/^	int got_content_length; \/* true if we know content length for sure *\/$/;"	m	struct:httpread	file:	access:public
got_file	src/wps/httpread.c	/^	int got_file;           \/* here when we are done *\/$/;"	m	struct:httpread	file:	access:public
got_hdr	src/wps/httpread.c	/^	int got_hdr;            \/* nonzero when header is finalized *\/$/;"	m	struct:httpread	file:	access:public
group	src/ap/ap_config.h	/^	int group;$/;"	m	struct:hostapd_wpa_psk	access:public
group	src/ap/wpa_auth_i.h	/^	struct wpa_group *group;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_group	access:public
group	src/ap/wpa_auth_i.h	/^	struct wpa_group *group;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::wpa_group	access:public
group	src/drivers/driver_nl80211.c	/^	const char *group;$/;"	m	struct:family_data	file:	access:public
group	src/eap_common/eap_pwd_common.h	/^	EC_GROUP *group;$/;"	m	struct:group_definition_	access:public
group_bssid	src/p2p/p2p_i.h	/^	const u8 *group_bssid;$/;"	m	struct:p2p_message	access:public
group_capab	src/drivers/driver.h	/^		u8 group_capab;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
group_capab	src/drivers/driver.h	/^		u8 group_capab;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
group_capab	src/p2p/p2p.h	/^	u8 group_capab;$/;"	m	struct:p2p_peer_info	access:public
group_cipher	src/common/wpa_common.h	/^	int group_cipher;$/;"	m	struct:wpa_ie_data	access:public
group_cipher	src/drivers/driver.h	/^	unsigned int group_cipher;$/;"	m	struct:wpa_driver_ap_params	access:public
group_cipher	src/rsn_supp/wpa_i.h	/^	unsigned int group_cipher;$/;"	m	struct:wpa_sm	access:public
group_definition_	src/eap_common/eap_pwd_common.h	/^typedef struct group_definition_ {$/;"	s
group_definition_::group	src/eap_common/eap_pwd_common.h	/^	EC_GROUP *group;$/;"	m	struct:group_definition_	access:public
group_definition_::group_num	src/eap_common/eap_pwd_common.h	/^	u16 group_num;$/;"	m	struct:group_definition_	access:public
group_definition_::order	src/eap_common/eap_pwd_common.h	/^	BIGNUM *order;$/;"	m	struct:group_definition_	access:public
group_definition_::prime	src/eap_common/eap_pwd_common.h	/^	BIGNUM *prime;$/;"	m	struct:group_definition_	access:public
group_definition_::pwe	src/eap_common/eap_pwd_common.h	/^	EC_POINT *pwe;$/;"	m	struct:group_definition_	access:public
group_formation	src/p2p/p2p_group.c	/^	int group_formation;$/;"	m	struct:p2p_group	file:	access:public
group_id	src/p2p/p2p_i.h	/^	const u8 *group_id;$/;"	m	struct:p2p_message	access:public
group_id_len	src/p2p/p2p_i.h	/^	size_t group_id_len;$/;"	m	struct:p2p_message	access:public
group_info	src/p2p/p2p_i.h	/^	const u8 *group_info;$/;"	m	struct:p2p_message	access:public
group_info_len	src/p2p/p2p_i.h	/^	size_t group_info_len;$/;"	m	struct:p2p_message	access:public
group_num	src/eap_common/eap_pwd_common.h	/^	be16 group_num;$/;"	m	struct:eap_pwd_id	access:public
group_num	src/eap_common/eap_pwd_common.h	/^	u16 group_num;$/;"	m	struct:group_definition_	access:public
group_num	src/eap_peer/eap_pwd.c	/^	u16 group_num;$/;"	m	struct:eap_pwd_data	file:	access:public
group_num	src/eap_server/eap_server_pwd.c	/^	u16 group_num;$/;"	m	struct:eap_pwd_data	file:	access:public
group_suite	src/common/privsep_commands.h	/^	int group_suite;$/;"	m	struct:privsep_cmd_associate	access:public
group_suite	src/drivers/driver.h	/^	enum wpa_cipher group_suite;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wpa_cipher	access:public
groups	src/p2p/p2p_i.h	/^	struct p2p_group **groups;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_group	access:public
grp	src/eap_peer/eap_pwd.c	/^	EAP_PWD_group *grp;$/;"	m	struct:eap_pwd_data	file:	access:public
grp	src/eap_server/eap_server_pwd.c	/^	EAP_PWD_group *grp;$/;"	m	struct:eap_pwd_data	file:	access:public
gsm_db	hostapd/hlr_auc_gw.c	/^static struct gsm_triplet *gsm_db = NULL, *gsm_db_pos = NULL;$/;"	v	typeref:struct:gsm_triplet	file:
gsm_db_pos	hostapd/hlr_auc_gw.c	/^static struct gsm_triplet *gsm_db = NULL, *gsm_db_pos = NULL;$/;"	v	typeref:struct:	file:
gsm_milenage	src/crypto/milenage.c	/^int gsm_milenage(const u8 *opc, const u8 *k, const u8 *_rand, u8 *sres, u8 *kc)$/;"	f	signature:(const u8 *opc, const u8 *k, const u8 *_rand, u8 *sres, u8 *kc)
gsm_milenage	src/crypto/milenage.h	/^int gsm_milenage(const u8 *opc, const u8 *k, const u8 *_rand, u8 *sres,$/;"	p	signature:(const u8 *opc, const u8 *k, const u8 *_rand, u8 *sres, u8 *kc)
gsm_triplet	hostapd/hlr_auc_gw.c	/^struct gsm_triplet {$/;"	s	file:
gsm_triplet::_rand	hostapd/hlr_auc_gw.c	/^	u8 _rand[16];$/;"	m	struct:gsm_triplet	file:	access:public
gsm_triplet::imsi	hostapd/hlr_auc_gw.c	/^	char imsi[20];$/;"	m	struct:gsm_triplet	file:	access:public
gsm_triplet::kc	hostapd/hlr_auc_gw.c	/^	u8 kc[8];$/;"	m	struct:gsm_triplet	file:	access:public
gsm_triplet::next	hostapd/hlr_auc_gw.c	/^	struct gsm_triplet *next;$/;"	m	struct:gsm_triplet	typeref:struct:gsm_triplet::gsm_triplet	file:	access:public
gsm_triplet::sres	hostapd/hlr_auc_gw.c	/^	u8 sres[4];$/;"	m	struct:gsm_triplet	file:	access:public
gtk	src/ap/wpa_auth_ie.h	/^	const u8 *gtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
gtk	src/common/wpa_common.h	/^	const u8 *gtk;$/;"	m	struct:wpa_ft_ies	access:public
gtk	src/rsn_supp/wpa.c	/^	u8 gtk[32];$/;"	m	struct:wpa_gtk_data	file:	access:public
gtk	src/rsn_supp/wpa_ie.h	/^	const u8 *gtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
gtk_len	src/ap/wpa_auth_ie.h	/^	size_t gtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
gtk_len	src/common/wpa_common.h	/^	size_t gtk_len;$/;"	m	struct:wpa_ft_ies	access:public
gtk_len	src/rsn_supp/wpa.c	/^	int gtk_len;$/;"	m	struct:wpa_gtk_data	file:	access:public
gtk_len	src/rsn_supp/wpa_ie.h	/^	size_t gtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
h_dest	src/l2_packet/l2_packet.h	/^	u8 h_dest[ETH_ALEN];$/;"	m	struct:l2_ethhdr	access:public
h_proto	src/l2_packet/l2_packet.h	/^	be16 h_proto;$/;"	m	struct:l2_ethhdr	access:public
h_source	src/l2_packet/l2_packet.h	/^	u8 h_source[ETH_ALEN];$/;"	m	struct:l2_ethhdr	access:public
handle	src/drivers/driver_nl80211.c	/^	struct nl_handle *handle;$/;"	m	struct:nl80211_handles	typeref:struct:nl80211_handles::nl_handle	file:	access:public
handle_action	src/ap/ieee802_11.c	/^static void handle_action(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
handle_assoc	src/ap/ieee802_11.c	/^static void handle_assoc(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len, int reassoc)
handle_assoc_cb	src/ap/ieee802_11.c	/^static void handle_assoc_cb(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len, int reassoc, int ok)
handle_auth	src/ap/ieee802_11.c	/^static void handle_auth(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
handle_auth_cb	src/ap/ieee802_11.c	/^static void handle_auth_cb(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len, int ok)
handle_auth_ft_finish	src/ap/ieee802_11.c	/^static void handle_auth_ft_finish(void *ctx, const u8 *dst, const u8 *bssid,$/;"	f	file:	signature:(void *ctx, const u8 *dst, const u8 *bssid, u16 auth_transaction, u16 status, const u8 *ies, size_t ies_len)
handle_beacon	src/ap/ieee802_11.c	/^static void handle_beacon(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len, struct hostapd_frame_info *fi)
handle_data	src/drivers/driver_hostap.c	/^static void handle_data(struct hostap_driver_data *drv, u8 *buf, size_t len,$/;"	f	file:	signature:(struct hostap_driver_data *drv, u8 *buf, size_t len, u16 stype)
handle_data	src/drivers/driver_wired.c	/^static void handle_data(void *ctx, unsigned char *buf, size_t len)$/;"	f	file:	signature:(void *ctx, unsigned char *buf, size_t len)
handle_deauth	src/ap/ieee802_11.c	/^static void handle_deauth(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
handle_deauth_cb	src/ap/ieee802_11.c	/^static void handle_deauth_cb(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len, int ok)
handle_dhcp	src/drivers/driver_wired.c	/^static void handle_dhcp(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
handle_disassoc	src/ap/ieee802_11.c	/^static void handle_disassoc(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
handle_disassoc_cb	src/ap/ieee802_11.c	/^static void handle_disassoc_cb(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len, int ok)
handle_dump_state	hostapd/main.c	/^static void handle_dump_state(int sig, void *signal_ctx)$/;"	f	file:	signature:(int sig, void *signal_ctx)
handle_dump_state_iface	hostapd/dump_state.c	/^int handle_dump_state_iface(struct hostapd_iface *iface, void *ctx)$/;"	f	signature:(struct hostapd_iface *iface, void *ctx)
handle_dump_state_iface	hostapd/dump_state.h	/^int handle_dump_state_iface(struct hostapd_iface *iface, void *ctx);$/;"	p	signature:(struct hostapd_iface *iface, void *ctx)
handle_eap	src/ap/ieee802_1x.c	/^static void handle_eap(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 *buf, size_t len)
handle_eap_response	src/ap/ieee802_1x.c	/^static void handle_eap_response(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, struct eap_hdr *eap, size_t len)
handle_eapol	src/drivers/driver_nl80211.c	/^static void handle_eapol(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
handle_frame	src/drivers/driver_hostap.c	/^static void handle_frame(struct hostap_driver_data *drv, u8 *buf, size_t len)$/;"	f	file:	signature:(struct hostap_driver_data *drv, u8 *buf, size_t len)
handle_frame	src/drivers/driver_nl80211.c	/^static void handle_frame(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, u8 *buf, size_t len, int datarate, int ssi_signal)
handle_monitor_read	src/drivers/driver_nl80211.c	/^static void handle_monitor_read(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
handle_probe_req	src/ap/beacon.c	/^void handle_probe_req(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
handle_probe_req	src/ap/beacon.h	/^void handle_probe_req(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
handle_read	src/drivers/driver_atheros.c	/^handle_read(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
handle_read	src/drivers/driver_bsd.c	/^handle_read(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
handle_read	src/drivers/driver_hostap.c	/^static void handle_read(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
handle_read	src/drivers/driver_madwifi.c	/^handle_read(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
handle_read	src/drivers/driver_wired.c	/^static void handle_read(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
handle_reload	hostapd/main.c	/^static void handle_reload(int sig, void *signal_ctx)$/;"	f	file:	signature:(int sig, void *signal_ctx)
handle_reload_iface	hostapd/main.c	/^static int handle_reload_iface(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
handle_term	hostapd/hlr_auc_gw.c	/^static void handle_term(int sig)$/;"	f	file:	signature:(int sig)
handle_term	hostapd/main.c	/^static void handle_term(int sig, void *signal_ctx)$/;"	f	file:	signature:(int sig, void *signal_ctx)
handle_tx_callback	src/drivers/driver_hostap.c	/^static void handle_tx_callback(struct hostap_driver_data *drv, u8 *buf,$/;"	f	file:	signature:(struct hostap_driver_data *drv, u8 *buf, size_t len, int ok)
handle_tx_callback	src/drivers/driver_nl80211.c	/^static void handle_tx_callback(void *ctx, u8 *buf, size_t len, int ok)$/;"	f	file:	signature:(void *ctx, u8 *buf, size_t len, int ok)
handler	hostapd/hostapd_cli.c	/^	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);$/;"	m	struct:hostapd_cli_cmd	file:	access:public
handler	src/radius/radius_client.c	/^	RadiusRxResult (*handler)(struct radius_msg *msg,$/;"	m	struct:radius_rx_handler	file:	access:public
handler	src/utils/eloop.c	/^	eloop_signal_handler handler;$/;"	m	struct:eloop_signal	file:	access:public
handler	src/utils/eloop.c	/^	eloop_sock_handler handler; \/\/ 事件发生时的回调函数$/;"	m	struct:eloop_sock	file:	access:public
handler	src/utils/eloop.c	/^	eloop_timeout_handler handler;$/;"	m	struct:eloop_timeout	file:	access:public
handler	src/utils/eloop_none.c	/^	void (*handler)(int sig, void *eloop_ctx, void *signal_ctx);$/;"	m	struct:eloop_signal	file:	access:public
handler	src/utils/eloop_none.c	/^	void (*handler)(int sock, void *eloop_ctx, void *sock_ctx);$/;"	m	struct:eloop_sock	file:	access:public
handler	src/utils/eloop_none.c	/^	void (*handler)(void *eloop_ctx, void *sock_ctx);$/;"	m	struct:eloop_timeout	file:	access:public
handler	src/utils/eloop_win.c	/^	eloop_event_handler handler;$/;"	m	struct:eloop_event	file:	access:public
handler	src/utils/eloop_win.c	/^	eloop_signal_handler handler;$/;"	m	struct:eloop_signal	file:	access:public
handler	src/utils/eloop_win.c	/^	eloop_sock_handler handler;$/;"	m	struct:eloop_sock	file:	access:public
handler	src/utils/eloop_win.c	/^	eloop_timeout_handler handler;$/;"	m	struct:eloop_timeout	file:	access:public
handles	src/utils/eloop_win.c	/^	HANDLE *handles;$/;"	m	struct:eloop_data	file:	access:public
hapd	src/ap/iapp.c	/^	struct hostapd_data *hapd;$/;"	m	struct:iapp_data	typeref:struct:iapp_data::hostapd_data	file:	access:public
hapd	src/ap/preauth_auth.c	/^	struct hostapd_data *hapd;$/;"	m	struct:rsn_preauth_interface	typeref:struct:rsn_preauth_interface::hostapd_data	file:	access:public
hapd	src/ap/utils.c	/^	struct hostapd_data *hapd;$/;"	m	struct:prune_data	typeref:struct:prune_data::hostapd_data	file:	access:public
hapd	src/drivers/driver_atheros.c	/^	struct hostapd_data *hapd;		\/* back pointer *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::hostapd_data	file:	access:public
hapd	src/drivers/driver_bsd.c	/^	struct hostapd_data *hapd;	\/* back pointer *\/$/;"	m	struct:bsd_driver_data	typeref:struct:bsd_driver_data::hostapd_data	file:	access:public
hapd	src/drivers/driver_hostap.c	/^	struct hostapd_data *hapd;$/;"	m	struct:hostap_driver_data	typeref:struct:hostap_driver_data::hostapd_data	file:	access:public
hapd	src/drivers/driver_madwifi.c	/^	struct hostapd_data *hapd;		\/* back pointer *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::hostapd_data	file:	access:public
hapd	src/drivers/driver_none.c	/^	struct hostapd_data *hapd;$/;"	m	struct:none_driver_data	typeref:struct:none_driver_data::hostapd_data	file:	access:public
hapd_deinit	src/drivers/driver.h	/^	void (*hapd_deinit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
hapd_get_ssid	src/drivers/driver.h	/^	int (*hapd_get_ssid)(void *priv, u8 *buf, int len);$/;"	m	struct:wpa_driver_ops	access:public
hapd_global	hostapd/main.c	/^struct hapd_global {$/;"	s	file:
hapd_global::drv_count	hostapd/main.c	/^	size_t drv_count;$/;"	m	struct:hapd_global	file:	access:public
hapd_global::drv_priv	hostapd/main.c	/^	void **drv_priv;$/;"	m	struct:hapd_global	file:	access:public
hapd_init	src/drivers/driver.h	/^	void * (*hapd_init)(struct hostapd_data *hapd,$/;"	m	struct:wpa_driver_ops	access:public
hapd_interfaces	hostapd/main.c	/^struct hapd_interfaces {$/;"	s	file:
hapd_interfaces::count	hostapd/main.c	/^	size_t count;       \/\/ 接口数量$/;"	m	struct:hapd_interfaces	file:	access:public
hapd_interfaces::iface	hostapd/main.c	/^	struct hostapd_iface **iface;   \/\/ 接口数组$/;"	m	struct:hapd_interfaces	typeref:struct:hapd_interfaces::hostapd_iface	file:	access:public
hapd_new_ap_event	src/ap/wps_hostapd.c	/^static void hapd_new_ap_event(struct hostapd_data *hapd, const u8 *attr,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *attr, size_t attr_len)
hapd_send_eapol	src/drivers/driver.h	/^	int (*hapd_send_eapol)(void *priv, const u8 *addr, const u8 *data,$/;"	m	struct:wpa_driver_ops	access:public
hapd_set_countermeasures	src/drivers/driver.h	/^	int (*hapd_set_countermeasures)(void *priv, int enabled);$/;"	m	struct:wpa_driver_ops	access:public
hapd_set_ssid	src/drivers/driver.h	/^	int (*hapd_set_ssid)(void *priv, const u8 *buf, int len);$/;"	m	struct:wpa_driver_ops	access:public
hapd_wps_cred_cb	src/ap/wps_hostapd.c	/^static int hapd_wps_cred_cb(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
hard	src/drivers/rfkill.c	/^	u8 hard;$/;"	m	struct:rfkill_event	file:	access:public
has_GTK	src/ap/wpa_auth_i.h	/^	Boolean has_GTK;$/;"	m	struct:wpa_state_machine	access:public
has_capability	src/drivers/driver_ndis.h	/^	int has_capability;$/;"	m	struct:wpa_driver_ndis_data	access:public
has_capability	src/drivers/driver_nl80211.c	/^	int has_capability;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
has_capability	src/drivers/driver_wext.h	/^	int has_capability;$/;"	m	struct:wpa_driver_wext_data	access:public
has_reauth_data	src/eap_peer/eap_i.h	/^	Boolean (*has_reauth_data)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
hash	src/crypto/crypto_cryptoapi.c	/^	HCRYPTHASH hash;$/;"	m	struct:crypto_hash	file:	access:public
hash	src/crypto/tls.h	/^		const u8 *hash;$/;"	m	struct:tls_event_data::__anon195	access:public
hash	src/tls/tlsv1_common.h	/^	tls_hash hash;$/;"	m	struct:tls_cipher_suite	access:public
hash_alg	src/tls/tlsv1_record.h	/^	enum crypto_hash_alg hash_alg;$/;"	m	struct:tlsv1_record_layer	typeref:enum:tlsv1_record_layer::crypto_hash_alg	access:public
hash_len	src/crypto/tls.h	/^		size_t hash_len;$/;"	m	struct:tls_event_data::__anon195	access:public
hash_len	src/eap_common/ikev2_common.h	/^	size_t hash_len;$/;"	m	struct:ikev2_integ_alg	access:public
hash_len	src/eap_common/ikev2_common.h	/^	size_t hash_len;$/;"	m	struct:ikev2_prf_alg	access:public
hash_nt_password_hash	src/crypto/ms_funcs.c	/^int hash_nt_password_hash(const u8 *password_hash, u8 *password_hash_hash)$/;"	f	signature:(const u8 *password_hash, u8 *password_hash_hash)
hash_nt_password_hash	src/crypto/ms_funcs.h	/^int hash_nt_password_hash(const u8 *password_hash, u8 *password_hash_hash);$/;"	p	signature:(const u8 *password_hash, u8 *password_hash_hash)
hash_size	src/tls/tlsv1_record.h	/^	size_t hash_size;$/;"	m	struct:tlsv1_record_layer	access:public
have_ifidx	src/drivers/driver_nl80211.c	/^static inline int have_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
have_ifidx	src/drivers/driver_nl80211.c	/^static int have_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
have_ifidx	src/drivers/driver_nl80211.c	/^static int have_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx);$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
hdr	src/radius/radius.c	/^	struct radius_hdr *hdr; \/\/ 指向radius帧头$/;"	m	struct:radius_msg	typeref:struct:radius_msg::radius_hdr	file:	access:public
hdr	src/wps/httpread.c	/^	char hdr[HTTPREAD_HEADER_MAX_SIZE+1];   \/* headers stored here *\/$/;"	m	struct:httpread	file:	access:public
hdr_nbytes	src/wps/httpread.c	/^	int hdr_nbytes;$/;"	m	struct:httpread	file:	access:public
hdr_type	src/wps/httpread.c	/^	enum httpread_hdr_type hdr_type;$/;"	m	struct:httpread	typeref:enum:httpread::httpread_hdr_type	file:	access:public
head	src/drivers/driver.h	/^	const u8 *head;$/;"	m	struct:wpa_driver_ap_params	access:public
head_len	src/drivers/driver.h	/^	size_t head_len;$/;"	m	struct:wpa_driver_ap_params	access:public
heldPeriod	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int heldPeriod; \/* dot1xSuppHeldPeriod *\/$/;"	m	struct:eapol_sm	file:	access:public
heldWhile	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int heldWhile;$/;"	m	struct:eapol_sm	file:	access:public
hessid	src/ap/ap_config.h	/^	u8 hessid[ETH_ALEN];$/;"	m	struct:hostapd_bss_config	access:public
hessid	src/drivers/driver.h	/^	const u8 *hessid;$/;"	m	struct:wpa_driver_ap_params	access:public
hex2byte	src/utils/common.c	/^int hex2byte(const char *hex)$/;"	f	signature:(const char *hex)
hex2byte	src/utils/common.h	/^int hex2byte(const char *hex);$/;"	p	signature:(const char *hex)
hex2num	src/utils/common.c	/^static int hex2num(char c)$/;"	f	file:	signature:(char c)
hex_value	src/wps/httpread.c	/^static int hex_value(int c)$/;"	f	file:	signature:(int c)
hexstr2bin	src/utils/common.c	/^int hexstr2bin(const char *hex, u8 *buf, size_t len)$/;"	f	signature:(const char *hex, u8 *buf, size_t len)
hexstr2bin	src/utils/common.h	/^int hexstr2bin(const char *hex, u8 *buf, size_t len);$/;"	p	signature:(const char *hex, u8 *buf, size_t len)
hide_ssid	src/drivers/driver.h	/^	enum hide_ssid hide_ssid;$/;"	m	struct:wpa_driver_ap_params	typeref:enum:wpa_driver_ap_params::hide_ssid	access:public
hide_ssid	src/drivers/driver.h	/^enum hide_ssid {$/;"	g
high	src/drivers/wireless_copy.h	/^	struct iw_quality	high;		\/* High threshold *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality	access:public
history_add	src/utils/edit.c	/^static void history_add(const char *str)$/;"	f	file:	signature:(const char *str)
history_curr	src/utils/edit.c	/^static struct edit_history *history_curr;$/;"	v	typeref:struct:edit_history	file:
history_debug_dump	src/utils/edit.c	/^static void history_debug_dump(void)$/;"	f	file:	signature:(void)
history_list	src/utils/edit.c	/^static struct dl_list history_list;$/;"	v	typeref:struct:dl_list	file:
history_next	src/utils/edit.c	/^static void history_next(void)$/;"	f	file:	signature:(void)
history_prev	src/utils/edit.c	/^static void history_prev(void)$/;"	f	file:	signature:(void)
history_read	src/utils/edit.c	/^static void history_read(const char *fname)$/;"	f	file:	signature:(const char *fname)
history_use	src/utils/edit.c	/^static void history_use(void)$/;"	f	file:	signature:(void)
history_write	src/utils/edit.c	/^static void history_write(const char *fname,$/;"	f	file:	signature:(const char *fname, int (*filter_cb)(void *ctx, const char *cmd))
hlen	src/drivers/driver_wired.c	/^	u_int8_t hlen;$/;"	m	struct:dhcp_message	file:	access:public
hmac	src/crypto/crypto_libtomcrypt.c	/^		hmac_state hmac;$/;"	m	union:crypto_hash::__anon198	file:	access:public
hmac_md5	src/crypto/md5.c	/^int hmac_md5(const u8 *key, size_t key_len, const u8 *data, size_t data_len,$/;"	f	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_md5	src/crypto/md5.h	/^int hmac_md5(const u8 *key, size_t key_len, const u8 *data, size_t data_len,$/;"	p	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_md5_non_fips_allow	src/crypto/md5-non-fips.c	/^int hmac_md5_non_fips_allow(const u8 *key, size_t key_len, const u8 *data,$/;"	f	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_md5_non_fips_allow	src/crypto/md5.h	/^int hmac_md5_non_fips_allow(const u8 *key, size_t key_len, const u8 *data,$/;"	p	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_md5_non_fips_allow	src/crypto/md5.h	32;"	d
hmac_md5_vector	src/crypto/md5.c	/^int hmac_md5_vector(const u8 *key, size_t key_len, size_t num_elem,$/;"	f	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_md5_vector	src/crypto/md5.h	/^int hmac_md5_vector(const u8 *key, size_t key_len, size_t num_elem,$/;"	p	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_md5_vector_non_fips_allow	src/crypto/md5-non-fips.c	/^int hmac_md5_vector_non_fips_allow(const u8 *key, size_t key_len,$/;"	f	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_md5_vector_non_fips_allow	src/crypto/md5.h	/^int hmac_md5_vector_non_fips_allow(const u8 *key, size_t key_len,$/;"	p	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_md5_vector_non_fips_allow	src/crypto/md5.h	31;"	d
hmac_sha1	src/crypto/sha1.c	/^int hmac_sha1(const u8 *key, size_t key_len, const u8 *data, size_t data_len,$/;"	f	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_sha1	src/crypto/sha1.h	/^int hmac_sha1(const u8 *key, size_t key_len, const u8 *data, size_t data_len,$/;"	p	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_sha1_vector	src/crypto/sha1.c	/^int hmac_sha1_vector(const u8 *key, size_t key_len, size_t num_elem,$/;"	f	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_sha1_vector	src/crypto/sha1.h	/^int hmac_sha1_vector(const u8 *key, size_t key_len, size_t num_elem,$/;"	p	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_sha256	src/crypto/sha256.c	/^void hmac_sha256(const u8 *key, size_t key_len, const u8 *data,$/;"	f	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_sha256	src/crypto/sha256.h	/^void hmac_sha256(const u8 *key, size_t key_len, const u8 *data,$/;"	p	signature:(const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *mac)
hmac_sha256_vector	src/crypto/sha256.c	/^void hmac_sha256_vector(const u8 *key, size_t key_len, size_t num_elem,$/;"	f	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hmac_sha256_vector	src/crypto/sha256.h	/^void hmac_sha256_vector(const u8 *key, size_t key_len, size_t num_elem,$/;"	p	signature:(const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
hnext	src/ap/ap_list.h	/^	struct ap_info *hnext; \/* next entry in hash table list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
hnext	src/ap/pmksa_cache_auth.h	/^	struct rsn_pmksa_cache_entry *next, *hnext;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::	access:public
hnext	src/ap/sta_info.h	/^	struct sta_info *hnext; \/* next entry in hash table list *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::sta_info	access:public
hops	src/drivers/driver_wired.c	/^	u_int8_t hops;$/;"	m	struct:dhcp_message	file:	access:public
host_to_be16	src/utils/common.h	189;"	d
host_to_be16	src/utils/common.h	217;"	d
host_to_be16	src/utils/common.h	230;"	d
host_to_be32	src/utils/common.h	192;"	d
host_to_be32	src/utils/common.h	221;"	d
host_to_be32	src/utils/common.h	233;"	d
host_to_be64	src/utils/common.h	225;"	d
host_to_be64	src/utils/common.h	237;"	d
host_to_le16	src/utils/common.h	187;"	d
host_to_le16	src/utils/common.h	215;"	d
host_to_le16	src/utils/common.h	228;"	d
host_to_le32	src/utils/common.h	219;"	d
host_to_le64	src/utils/common.h	223;"	d
host_to_le64	src/utils/common.h	235;"	d
hostap_driver_data	src/drivers/driver_hostap.c	/^struct hostap_driver_data {$/;"	s	file:
hostap_driver_data::generic_ie	src/drivers/driver_hostap.c	/^	u8 *generic_ie;$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::generic_ie_len	src/drivers/driver_hostap.c	/^	size_t generic_ie_len;$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::hapd	src/drivers/driver_hostap.c	/^	struct hostapd_data *hapd;$/;"	m	struct:hostap_driver_data	typeref:struct:hostap_driver_data::hostapd_data	file:	access:public
hostap_driver_data::iface	src/drivers/driver_hostap.c	/^	char iface[IFNAMSIZ + 1];$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::ioctl_sock	src/drivers/driver_hostap.c	/^	int ioctl_sock; \/* socket for ioctl() use *\/$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::netlink	src/drivers/driver_hostap.c	/^	struct netlink_data *netlink;$/;"	m	struct:hostap_driver_data	typeref:struct:hostap_driver_data::netlink_data	file:	access:public
hostap_driver_data::sock	src/drivers/driver_hostap.c	/^	int sock; \/* raw packet socket for driver access *\/$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::we_version	src/drivers/driver_hostap.c	/^	int we_version;$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::wps_ie	src/drivers/driver_hostap.c	/^	u8 *wps_ie;$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_data::wps_ie_len	src/drivers/driver_hostap.c	/^	size_t wps_ie_len;$/;"	m	struct:hostap_driver_data	file:	access:public
hostap_driver_deinit	src/drivers/driver_hostap.c	/^static void hostap_driver_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
hostap_flush	src/drivers/driver_hostap.c	/^static int hostap_flush(void *priv)$/;"	f	file:	signature:(void *priv)
hostap_get_hw_feature_data	src/drivers/driver_hostap.c	/^static struct hostapd_hw_modes * hostap_get_hw_feature_data(void *priv,$/;"	f	file:	signature:(void *priv, u16 *num_modes, u16 *flags)
hostap_get_inact_sec	src/drivers/driver_hostap.c	/^static int hostap_get_inact_sec(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
hostap_get_seqnum	src/drivers/driver_hostap.c	/^static int hostap_get_seqnum(const char *ifname, void *priv, const u8 *addr,$/;"	f	file:	signature:(const char *ifname, void *priv, const u8 *addr, int idx, u8 *seq)
hostap_get_we_version	src/drivers/driver_hostap.c	/^static int hostap_get_we_version(struct hostap_driver_data *drv)$/;"	f	file:	signature:(struct hostap_driver_data *drv)
hostap_init	src/drivers/driver_hostap.c	/^static void * hostap_init(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
hostap_init_sockets	src/drivers/driver_hostap.c	/^static int hostap_init_sockets(struct hostap_driver_data *drv, u8 *own_addr)$/;"	f	file:	signature:(struct hostap_driver_data *drv, u8 *own_addr)
hostap_ioctl_prism2param	src/drivers/driver_hostap.c	/^static int hostap_ioctl_prism2param(void *priv, int param, int value)$/;"	f	file:	signature:(void *priv, int param, int value)
hostap_read_sta_data	src/drivers/driver_hostap.c	/^static int hostap_read_sta_data(void *priv,$/;"	f	file:	signature:(void *priv, struct hostap_sta_driver_data *data, const u8 *addr)
hostap_security_policy	src/ap/ap_config.h	/^typedef enum hostap_security_policy {$/;"	g
hostap_send_eapol	src/drivers/driver_hostap.c	/^static int hostap_send_eapol(void *priv, const u8 *addr, const u8 *data,$/;"	f	file:	signature:(void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
hostap_send_mlme	src/drivers/driver_hostap.c	/^static int hostap_send_mlme(void *priv, const u8 *msg, size_t len)$/;"	f	file:	signature:(void *priv, const u8 *msg, size_t len)
hostap_set_ap_wps_ie	src/drivers/driver_hostap.c	/^static int hostap_set_ap_wps_ie(void *priv, const struct wpabuf *beacon,$/;"	f	file:	signature:(void *priv, const struct wpabuf *beacon, const struct wpabuf *proberesp, const struct wpabuf *assocresp)
hostap_set_freq	src/drivers/driver_hostap.c	/^static int hostap_set_freq(void *priv, struct hostapd_freq_params *freq)$/;"	f	file:	signature:(void *priv, struct hostapd_freq_params *freq)
hostap_set_generic_elem	src/drivers/driver_hostap.c	/^static int hostap_set_generic_elem(void *priv,$/;"	f	file:	signature:(void *priv, const u8 *elem, size_t elem_len)
hostap_set_ieee8021x	src/drivers/driver_hostap.c	/^static int hostap_set_ieee8021x(void *priv, struct wpa_bss_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_bss_params *params)
hostap_set_iface_flags	src/drivers/driver_hostap.c	/^static int hostap_set_iface_flags(void *priv, int dev_up)$/;"	f	file:	signature:(void *priv, int dev_up)
hostap_set_iface_flags	src/drivers/driver_hostap.c	/^static int hostap_set_iface_flags(void *priv, int dev_up);$/;"	p	file:	signature:(void *priv, int dev_up)
hostap_set_privacy	src/drivers/driver_hostap.c	/^static int hostap_set_privacy(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
hostap_set_ssid	src/drivers/driver_hostap.c	/^static int hostap_set_ssid(void *priv, const u8 *buf, int len)$/;"	f	file:	signature:(void *priv, const u8 *buf, int len)
hostap_sta_add	src/drivers/driver_hostap.c	/^static int hostap_sta_add(void *priv, struct hostapd_sta_add_params *params)$/;"	f	file:	signature:(void *priv, struct hostapd_sta_add_params *params)
hostap_sta_clear_stats	src/drivers/driver_hostap.c	/^static int hostap_sta_clear_stats(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
hostap_sta_deauth	src/drivers/driver_hostap.c	/^static int hostap_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason)
hostap_sta_disassoc	src/drivers/driver_hostap.c	/^static int hostap_sta_disassoc(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason)
hostap_sta_driver_data	src/drivers/driver.h	/^struct hostap_sta_driver_data {$/;"	s
hostap_sta_driver_data::current_tx_rate	src/drivers/driver.h	/^	unsigned long current_tx_rate;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::flags	src/drivers/driver.h	/^	unsigned long flags;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::inactive_msec	src/drivers/driver.h	/^	unsigned long inactive_msec;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::last_ack_rssi	src/drivers/driver.h	/^	int last_ack_rssi;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::last_rssi	src/drivers/driver.h	/^	int last_rssi;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::num_ps_buf_frames	src/drivers/driver.h	/^	unsigned long num_ps_buf_frames;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::rx_bytes	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::rx_packets	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::tx_bytes	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::tx_packets	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::tx_retry_count	src/drivers/driver.h	/^	unsigned long tx_retry_count;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_driver_data::tx_retry_failed	src/drivers/driver.h	/^	unsigned long tx_retry_failed;$/;"	m	struct:hostap_sta_driver_data	access:public
hostap_sta_remove	src/drivers/driver_hostap.c	/^static int hostap_sta_remove(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
hostap_sta_set_flags	src/drivers/driver_hostap.c	/^static int hostap_sta_set_flags(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int total_flags, int flags_or, int flags_and)
hostap_wireless_event_init	src/drivers/driver_hostap.c	/^static int hostap_wireless_event_init(struct hostap_driver_data *drv)$/;"	f	file:	signature:(struct hostap_driver_data *drv)
hostapd_acl_cache_free	src/ap/ieee802_11_auth.c	/^static void hostapd_acl_cache_free(struct hostapd_cached_radius_acl *acl_cache)$/;"	f	file:	signature:(struct hostapd_cached_radius_acl *acl_cache)
hostapd_acl_cache_get	src/ap/ieee802_11_auth.c	/^static int hostapd_acl_cache_get(struct hostapd_data *hapd, const u8 *addr,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *addr, u32 *session_timeout, u32 *acct_interim_interval, int *vlan_id)
hostapd_acl_comp	hostapd/config_file.c	/^static int hostapd_acl_comp(const void *a, const void *b)$/;"	f	file:	signature:(const void *a, const void *b)
hostapd_acl_deinit	src/ap/ieee802_11_auth.c	/^void hostapd_acl_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_acl_deinit	src/ap/ieee802_11_auth.h	/^void hostapd_acl_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_acl_expire	src/ap/ieee802_11_auth.c	/^static void hostapd_acl_expire(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
hostapd_acl_expire_cache	src/ap/ieee802_11_auth.c	/^static void hostapd_acl_expire_cache(struct hostapd_data *hapd, os_time_t now)$/;"	f	file:	signature:(struct hostapd_data *hapd, os_time_t now)
hostapd_acl_expire_queries	src/ap/ieee802_11_auth.c	/^static void hostapd_acl_expire_queries(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, os_time_t now)
hostapd_acl_init	src/ap/ieee802_11_auth.c	/^int hostapd_acl_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_acl_init	src/ap/ieee802_11_auth.h	/^int hostapd_acl_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_acl_query_data	src/ap/ieee802_11_auth.c	/^struct hostapd_acl_query_data {$/;"	s	file:
hostapd_acl_query_data::addr	src/ap/ieee802_11_auth.c	/^	macaddr addr;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
hostapd_acl_query_data::auth_msg	src/ap/ieee802_11_auth.c	/^	u8 *auth_msg; \/* IEEE 802.11 authentication frame from station *\/$/;"	m	struct:hostapd_acl_query_data	file:	access:public
hostapd_acl_query_data::auth_msg_len	src/ap/ieee802_11_auth.c	/^	size_t auth_msg_len;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
hostapd_acl_query_data::next	src/ap/ieee802_11_auth.c	/^	struct hostapd_acl_query_data *next;$/;"	m	struct:hostapd_acl_query_data	typeref:struct:hostapd_acl_query_data::hostapd_acl_query_data	file:	access:public
hostapd_acl_query_data::radius_id	src/ap/ieee802_11_auth.c	/^	u8 radius_id;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
hostapd_acl_query_data::timestamp	src/ap/ieee802_11_auth.c	/^	os_time_t timestamp;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
hostapd_acl_query_free	src/ap/ieee802_11_auth.c	/^static void hostapd_acl_query_free(struct hostapd_acl_query_data *query)$/;"	f	file:	signature:(struct hostapd_acl_query_data *query)
hostapd_acl_recv_radius	src/ap/ieee802_11_auth.c	/^hostapd_acl_recv_radius(struct radius_msg *msg, struct radius_msg *req,$/;"	f	file:	signature:(struct radius_msg *msg, struct radius_msg *req, const u8 *shared_secret, size_t shared_secret_len, void *data)
hostapd_add_sta_node	src/ap/ap_drv_ops.c	/^int hostapd_add_sta_node(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, u16 auth_alg)
hostapd_add_sta_node	src/ap/ap_drv_ops.h	/^int hostapd_add_sta_node(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, u16 auth_alg)
hostapd_add_tspec	src/ap/ap_drv_ops.c	/^int hostapd_add_tspec(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, u8 *tspec_ie, size_t tspec_ielen)
hostapd_add_tspec	src/ap/ap_drv_ops.h	/^int hostapd_add_tspec(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, u8 *tspec_ie, size_t tspec_ielen)
hostapd_addr	src/drivers/driver_test.c	/^	struct sockaddr_un hostapd_addr;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::sockaddr_un	file:	access:public
hostapd_addr_set	src/drivers/driver_test.c	/^	int hostapd_addr_set;$/;"	m	struct:wpa_driver_test_data	file:	access:public
hostapd_addr_udp	src/drivers/driver_test.c	/^	struct sockaddr_in hostapd_addr_udp;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::sockaddr_in	file:	access:public
hostapd_addr_udp_set	src/drivers/driver_test.c	/^	int hostapd_addr_udp_set;$/;"	m	struct:wpa_driver_test_data	file:	access:public
hostapd_alloc_bss_data	src/ap/hostapd.c	/^hostapd_alloc_bss_data(struct hostapd_iface *hapd_iface,$/;"	f	signature:(struct hostapd_iface *hapd_iface, struct hostapd_config *conf, struct hostapd_bss_config *bss)
hostapd_alloc_bss_data	src/ap/hostapd.h	/^hostapd_alloc_bss_data(struct hostapd_iface *hapd_iface,$/;"	p	signature:(struct hostapd_iface *hapd_iface, struct hostapd_config *conf, struct hostapd_bss_config *bss)
hostapd_allowed_address	src/ap/ieee802_11_auth.c	/^int hostapd_allowed_address(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *msg, size_t len, u32 *session_timeout, u32 *acct_interim_interval, int *vlan_id)
hostapd_allowed_address	src/ap/ieee802_11_auth.h	/^int hostapd_allowed_address(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *msg, size_t len, u32 *session_timeout, u32 *acct_interim_interval, int *vlan_id)
hostapd_broadcast_key_clear_iface	src/ap/hostapd.c	/^static void hostapd_broadcast_key_clear_iface(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, char *ifname)
hostapd_broadcast_wep_clear	src/ap/hostapd.c	/^static int hostapd_broadcast_wep_clear(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_broadcast_wep_clear	src/ap/hostapd.c	/^static int hostapd_broadcast_wep_clear(struct hostapd_data *hapd);$/;"	p	file:	signature:(struct hostapd_data *hapd)
hostapd_broadcast_wep_set	src/ap/hostapd.c	/^static int hostapd_broadcast_wep_set(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_bss_config	src/ap/ap_config.h	/^struct hostapd_bss_config {$/;"	s
hostapd_bss_config::ACCEPT_UNLESS_DENIED	src/ap/ap_config.h	/^		ACCEPT_UNLESS_DENIED = 0,$/;"	e	enum:hostapd_bss_config::__anon3
hostapd_bss_config::DENY_UNLESS_ACCEPTED	src/ap/ap_config.h	/^		DENY_UNLESS_ACCEPTED = 1,$/;"	e	enum:hostapd_bss_config::__anon3
hostapd_bss_config::USE_EXTERNAL_RADIUS_AUTH	src/ap/ap_config.h	/^		USE_EXTERNAL_RADIUS_AUTH = 2$/;"	e	enum:hostapd_bss_config::__anon3
hostapd_bss_config::accept_mac	src/ap/ap_config.h	/^	struct mac_acl_entry *accept_mac;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::mac_acl_entry	access:public
hostapd_bss_config::access_network_type	src/ap/ap_config.h	/^	int access_network_type;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::acct_interim_interval	src/ap/ap_config.h	/^	int acct_interim_interval;              \/\/ 本地配置的 对于某个确定的会话，中间更新流量信息的时间间隔$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ap_max_inactivity	src/ap/ap_config.h	/^	int ap_max_inactivity;      \/\/ 定义了每个站表元素的老化时间$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ap_pin	src/ap/ap_config.h	/^	char *ap_pin;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ap_settings	src/ap/ap_config.h	/^	u8 *ap_settings;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ap_settings_len	src/ap/ap_config.h	/^	size_t ap_settings_len;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ap_setup_locked	src/ap/ap_config.h	/^	int ap_setup_locked;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::asra	src/ap/ap_config.h	/^	int asra;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::assoc_sa_query_max_timeout	src/ap/ap_config.h	/^	unsigned int assoc_sa_query_max_timeout;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::assoc_sa_query_retry_timeout	src/ap/ap_config.h	/^	int assoc_sa_query_retry_timeout;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::auth_algs	src/ap/ap_config.h	/^	int auth_algs; \/* bitfield of allowed IEEE 802.11 authentication$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::bridge	src/ap/ap_config.h	/^	char bridge[IFNAMSIZ + 1];      \/\/ 此bss所属的网桥名，网桥这个参数这里似乎没有用在wire类型的驱动器中$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::broadcast_key_idx_max	src/ap/ap_config.h	/^	int broadcast_key_idx_min, broadcast_key_idx_max;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::broadcast_key_idx_min	src/ap/ap_config.h	/^	int broadcast_key_idx_min, broadcast_key_idx_max;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::bssid	src/ap/ap_config.h	/^	macaddr bssid;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ca_cert	src/ap/ap_config.h	/^	char *ca_cert;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::check_crl	src/ap/ap_config.h	/^	int check_crl;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::config_methods	src/ap/ap_config.h	/^	char *config_methods;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ctrl_interface	src/ap/ap_config.h	/^	char *ctrl_interface; \/* directory for UNIX domain sockets *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ctrl_interface_gid	src/ap/ap_config.h	/^	gid_t ctrl_interface_gid;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ctrl_interface_gid_set	src/ap/ap_config.h	/^	int ctrl_interface_gid_set;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::default_wep_key_len	src/ap/ap_config.h	/^	size_t default_wep_key_len;             \/\/ 设置WEP用的key长度(不用wep就不用管)$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::deny_mac	src/ap/ap_config.h	/^	struct mac_acl_entry *deny_mac;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::mac_acl_entry	access:public
hostapd_bss_config::device_name	src/ap/ap_config.h	/^	char *device_name;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::device_type	src/ap/ap_config.h	/^	u8 device_type[WPS_DEV_TYPE_LEN];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::dh_file	src/ap/ap_config.h	/^	char *dh_file;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::disable_11n	src/ap/ap_config.h	/^	int disable_11n;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::disable_pmksa_caching	src/ap/ap_config.h	/^	int disable_pmksa_caching;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::disassoc_low_ack	src/ap/ap_config.h	/^	int disassoc_low_ack;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::dtim_period	src/ap/ap_config.h	/^	int dtim_period;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::dump_log_name	src/ap/ap_config.h	/^	char *dump_log_name; \/* file name for state dump (SIGUSR1) *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_fast_a_id	src/ap/ap_config.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_fast_a_id_info	src/ap/ap_config.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_fast_a_id_len	src/ap/ap_config.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_fast_prov	src/ap/ap_config.h	/^	int eap_fast_prov;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_reauth_period	src/ap/ap_config.h	/^	int eap_reauth_period;                  \/\/ 重认证周期，大于0意味着该功能使能(只用于认证系统)$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_req_id_text	src/ap/ap_config.h	/^	char *eap_req_id_text; \/* optional displayable message sent with$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_req_id_text_len	src/ap/ap_config.h	/^	size_t eap_req_id_text_len;             \/\/ 上面这段可显示信息的长度$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_server	src/ap/ap_config.h	/^	int eap_server; \/* Use internal EAP server instead of external$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_sim_aka_result_ind	src/ap/ap_config.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_sim_db	src/ap/ap_config.h	/^	char *eap_sim_db;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eap_user	src/ap/ap_config.h	/^	struct hostapd_eap_user *eap_user;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_eap_user	access:public
hostapd_bss_config::eapol_key_index_workaround	src/ap/ap_config.h	/^	int eapol_key_index_workaround;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::eapol_version	src/ap/ap_config.h	/^	int eapol_version;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::esr	src/ap/ap_config.h	/^	int esr;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::extra_cred	src/ap/ap_config.h	/^	u8 *extra_cred;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::extra_cred_len	src/ap/ap_config.h	/^	size_t extra_cred_len;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::fragment_size	src/ap/ap_config.h	/^	int fragment_size;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::friendly_name	src/ap/ap_config.h	/^	char *friendly_name;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ft_over_ds	src/ap/ap_config.h	/^	int ft_over_ds;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::hessid	src/ap/ap_config.h	/^	u8 hessid[ETH_ALEN];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::iapp_iface	src/ap/ap_config.h	/^	char iapp_iface[IFNAMSIZ + 1]; \/* interface used with IAPP broadcast$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ieee80211w	src/ap/ap_config.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::mfp_options	access:public
hostapd_bss_config::ieee802_11f	src/ap/ap_config.h	/^	int ieee802_11f; \/* use IEEE 802.11f (IAPP) *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ieee802_1x	src/ap/ap_config.h	/^	int ieee802_1x; \/* use IEEE 802.1X *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::iface	src/ap/ap_config.h	/^	char iface[IFNAMSIZ + 1];       \/\/ 此bss名$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ignore_broadcast_ssid	src/ap/ap_config.h	/^	int ignore_broadcast_ssid;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::individual_wep_key_len	src/ap/ap_config.h	/^	int individual_wep_key_len;             \/\/ 设置WEP用的key周期$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::internet	src/ap/ap_config.h	/^	int internet;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::interworking	src/ap/ap_config.h	/^	int interworking;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::isolate	src/ap/ap_config.h	/^	int isolate;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::logger_stdout	src/ap/ap_config.h	/^	unsigned int logger_stdout; \/* module bitfield *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::logger_stdout_level	src/ap/ap_config.h	/^	enum hostapd_logger_level logger_syslog_level, logger_stdout_level;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::	access:public
hostapd_bss_config::logger_syslog	src/ap/ap_config.h	/^	unsigned int logger_syslog; \/* module bitfield *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::logger_syslog_level	src/ap/ap_config.h	/^	enum hostapd_logger_level logger_syslog_level, logger_stdout_level;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::hostapd_logger_level	access:public
hostapd_bss_config::macaddr_acl	src/ap/ap_config.h	/^	} macaddr_acl;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::__anon3	access:public
hostapd_bss_config::manufacturer	src/ap/ap_config.h	/^	char *manufacturer;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::manufacturer_url	src/ap/ap_config.h	/^	char *manufacturer_url;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::max_listen_interval	src/ap/ap_config.h	/^	u16 max_listen_interval;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::max_num_sta	src/ap/ap_config.h	/^	int max_num_sta; \/* maximum number of STAs in station table *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::mobility_domain	src/ap/ap_config.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::model_description	src/ap/ap_config.h	/^	char *model_description;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::model_name	src/ap/ap_config.h	/^	char *model_name;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::model_number	src/ap/ap_config.h	/^	char *model_number;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::model_url	src/ap/ap_config.h	/^	char *model_url;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::nas_identifier	src/ap/ap_config.h	/^	char *nas_identifier;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::num_accept_mac	src/ap/ap_config.h	/^	int num_accept_mac;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::num_deny_mac	src/ap/ap_config.h	/^	int num_deny_mac;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::okc	src/ap/ap_config.h	/^	int okc; \/* Opportunistic Key Caching *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::os_version	src/ap/ap_config.h	/^	u8 os_version[4];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::own_ip_addr	src/ap/ap_config.h	/^	struct hostapd_ip_addr own_ip_addr;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_ip_addr	access:public
hostapd_bss_config::p2p	src/ap/ap_config.h	/^	int p2p;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::pac_key_lifetime	src/ap/ap_config.h	/^	int pac_key_lifetime;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::pac_key_refresh_time	src/ap/ap_config.h	/^	int pac_key_refresh_time;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::pac_opaque_encr_key	src/ap/ap_config.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::pbc_in_m1	src/ap/ap_config.h	/^	int pbc_in_m1;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::peerkey	src/ap/ap_config.h	/^	int peerkey;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::pmk_r1_push	src/ap/ap_config.h	/^	int pmk_r1_push;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::private_key	src/ap/ap_config.h	/^	char *private_key;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::private_key_passwd	src/ap/ap_config.h	/^	char *private_key_passwd;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::pwd_group	src/ap/ap_config.h	/^	u16 pwd_group;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::r0_key_lifetime	src/ap/ap_config.h	/^	u32 r0_key_lifetime;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::r0kh_list	src/ap/ap_config.h	/^	struct ft_remote_r0kh *r0kh_list;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::ft_remote_r0kh	access:public
hostapd_bss_config::r1_key_holder	src/ap/ap_config.h	/^	u8 r1_key_holder[FT_R1KH_ID_LEN];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::r1kh_list	src/ap/ap_config.h	/^	struct ft_remote_r1kh *r1kh_list;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::ft_remote_r1kh	access:public
hostapd_bss_config::radius	src/ap/ap_config.h	/^	struct hostapd_radius_servers *radius;  \/\/ radius客户端配置的radius服务器信息$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_radius_servers	access:public
hostapd_bss_config::radius_server_auth_port	src/ap/ap_config.h	/^	int radius_server_auth_port;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::radius_server_clients	src/ap/ap_config.h	/^	char *radius_server_clients;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::radius_server_ipv6	src/ap/ap_config.h	/^	int radius_server_ipv6;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::reassociation_deadline	src/ap/ap_config.h	/^	u32 reassociation_deadline;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::roaming_consortium	src/ap/ap_config.h	/^	struct hostapd_roaming_consortium *roaming_consortium;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_roaming_consortium	access:public
hostapd_bss_config::roaming_consortium_count	src/ap/ap_config.h	/^	unsigned int roaming_consortium_count;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::rsn_pairwise	src/ap/ap_config.h	/^	int rsn_pairwise;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::rsn_preauth	src/ap/ap_config.h	/^	int rsn_preauth;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::rsn_preauth_interfaces	src/ap/ap_config.h	/^	char *rsn_preauth_interfaces;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::serial_number	src/ap/ap_config.h	/^	char *serial_number;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::server_cert	src/ap/ap_config.h	/^	char *server_cert;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::skip_cred_build	src/ap/ap_config.h	/^	int skip_cred_build;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::ssid	src/ap/ap_config.h	/^	struct hostapd_ssid ssid;               \/\/ ssid(服务集标识)控制块，用来区分不同的网络$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_ssid	access:public
hostapd_bss_config::tdls	src/ap/ap_config.h	/^	int tdls;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::test_socket	src/ap/ap_config.h	/^	char *test_socket; \/* UNIX domain socket path for driver_test *\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::time_advertisement	src/ap/ap_config.h	/^	int time_advertisement;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::time_zone	src/ap/ap_config.h	/^	char *time_zone;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::tnc	src/ap/ap_config.h	/^	int tnc;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::uesa	src/ap/ap_config.h	/^	int uesa;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::upc	src/ap/ap_config.h	/^	char *upc;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::upnp_iface	src/ap/ap_config.h	/^	char *upnp_iface;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::use_pae_group_addr	src/ap/ap_config.h	/^	int use_pae_group_addr; \/* Whether to send EAPOL frames to PAE group$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::uuid	src/ap/ap_config.h	/^	u8 uuid[16];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::venue_group	src/ap/ap_config.h	/^	u8 venue_group;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::venue_info_set	src/ap/ap_config.h	/^	int venue_info_set;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::venue_type	src/ap/ap_config.h	/^	u8 venue_type;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::vlan	src/ap/ap_config.h	/^	struct hostapd_vlan *vlan, *vlan_tail;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_vlan	access:public
hostapd_bss_config::vlan_tail	src/ap/ap_config.h	/^	struct hostapd_vlan *vlan, *vlan_tail;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::	access:public
hostapd_bss_config::wds_bridge	src/ap/ap_config.h	/^	char wds_bridge[IFNAMSIZ + 1];$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wds_sta	src/ap/ap_config.h	/^	int wds_sta;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wep_rekeying_period	src/ap/ap_config.h	/^	int wep_rekeying_period;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wmm_enabled	src/ap/ap_config.h	/^	int wmm_enabled;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wmm_uapsd	src/ap/ap_config.h	/^	int wmm_uapsd;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa	src/ap/ap_config.h	/^	int wpa; \/* bitfield of WPA_PROTO_WPA, WPA_PROTO_RSN  wpa\/wpa2功能选择位*\/$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_gmk_rekey	src/ap/ap_config.h	/^	int wpa_gmk_rekey;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_group	src/ap/ap_config.h	/^	int wpa_group;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_group_rekey	src/ap/ap_config.h	/^	int wpa_group_rekey;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_key_mgmt	src/ap/ap_config.h	/^	int wpa_key_mgmt;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_pairwise	src/ap/ap_config.h	/^	int wpa_pairwise;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_ptk_rekey	src/ap/ap_config.h	/^	int wpa_ptk_rekey;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wpa_strict_rekey	src/ap/ap_config.h	/^	int wpa_strict_rekey;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wps_cred_processing	src/ap/ap_config.h	/^	int wps_cred_processing;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wps_pin_requests	src/ap/ap_config.h	/^	char *wps_pin_requests;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wps_state	src/ap/ap_config.h	/^	int wps_state;$/;"	m	struct:hostapd_bss_config	access:public
hostapd_bss_config::wps_vendor_ext	src/ap/ap_config.h	/^	struct wpabuf *wps_vendor_ext[MAX_WPS_VENDOR_EXTENSIONS];$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::wpabuf	access:public
hostapd_build_ap_extra_ies	src/ap/ap_drv_ops.c	/^int hostapd_build_ap_extra_ies(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct wpabuf **beacon_ret, struct wpabuf **proberesp_ret, struct wpabuf **assocresp_ret)
hostapd_build_ap_extra_ies	src/ap/ap_drv_ops.h	/^int hostapd_build_ap_extra_ies(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct wpabuf **beacon, struct wpabuf **proberesp, struct wpabuf **assocresp)
hostapd_cached_radius_acl	src/ap/ieee802_11_auth.c	/^struct hostapd_cached_radius_acl {$/;"	s	file:
hostapd_cached_radius_acl::accepted	src/ap/ieee802_11_auth.c	/^	int accepted; \/* HOSTAPD_ACL_* *\/$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
hostapd_cached_radius_acl::acct_interim_interval	src/ap/ieee802_11_auth.c	/^	u32 acct_interim_interval;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
hostapd_cached_radius_acl::addr	src/ap/ieee802_11_auth.c	/^	macaddr addr;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
hostapd_cached_radius_acl::next	src/ap/ieee802_11_auth.c	/^	struct hostapd_cached_radius_acl *next;$/;"	m	struct:hostapd_cached_radius_acl	typeref:struct:hostapd_cached_radius_acl::hostapd_cached_radius_acl	file:	access:public
hostapd_cached_radius_acl::session_timeout	src/ap/ieee802_11_auth.c	/^	u32 session_timeout;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
hostapd_cached_radius_acl::timestamp	src/ap/ieee802_11_auth.c	/^	os_time_t timestamp;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
hostapd_cached_radius_acl::vlan_id	src/ap/ieee802_11_auth.c	/^	int vlan_id;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
hostapd_channel_data	src/drivers/driver.h	/^struct hostapd_channel_data {$/;"	s
hostapd_channel_data::chan	src/drivers/driver.h	/^	short chan;$/;"	m	struct:hostapd_channel_data	access:public
hostapd_channel_data::flag	src/drivers/driver.h	/^	int flag;$/;"	m	struct:hostapd_channel_data	access:public
hostapd_channel_data::freq	src/drivers/driver.h	/^	short freq;$/;"	m	struct:hostapd_channel_data	access:public
hostapd_channel_data::max_tx_power	src/drivers/driver.h	/^	u8 max_tx_power;$/;"	m	struct:hostapd_channel_data	access:public
hostapd_check_ht_capab	src/ap/hw_features.c	/^int hostapd_check_ht_capab(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_check_ht_capab	src/ap/hw_features.h	/^int hostapd_check_ht_capab(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_check_ht_capab	src/ap/hw_features.h	/^static inline int hostapd_check_ht_capab(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_cleanup	src/ap/hostapd.c	/^static void hostapd_cleanup(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_cleanup_iface	src/ap/hostapd.c	/^static void hostapd_cleanup_iface(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_cleanup_iface_pre	src/ap/hostapd.c	/^static void hostapd_cleanup_iface_pre(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_cli_action	hostapd/hostapd_cli.c	/^static void hostapd_cli_action(struct wpa_ctrl *ctrl)$/;"	f	file:	signature:(struct wpa_ctrl *ctrl)
hostapd_cli_action_process	hostapd/hostapd_cli.c	/^static void hostapd_cli_action_process(char *msg, size_t len)$/;"	f	file:	signature:(char *msg, size_t len)
hostapd_cli_attached	hostapd/hostapd_cli.c	/^static int hostapd_cli_attached = 0;$/;"	v	file:
hostapd_cli_cleanup	hostapd/hostapd_cli.c	/^static void hostapd_cli_cleanup(void)$/;"	f	file:	signature:(void)
hostapd_cli_close_connection	hostapd/hostapd_cli.c	/^static void hostapd_cli_close_connection(void)$/;"	f	file:	signature:(void)
hostapd_cli_cmd	hostapd/hostapd_cli.c	/^struct hostapd_cli_cmd {$/;"	s	file:
hostapd_cli_cmd::cmd	hostapd/hostapd_cli.c	/^	const char *cmd;$/;"	m	struct:hostapd_cli_cmd	file:	access:public
hostapd_cli_cmd::handler	hostapd/hostapd_cli.c	/^	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);$/;"	m	struct:hostapd_cli_cmd	file:	access:public
hostapd_cli_cmd_all_sta	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_all_sta(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_deauthenticate	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_deauthenticate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_disassociate	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_disassociate(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_ess_disassoc	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_ess_disassoc(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_get	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_get(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_get_config	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_get_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_help	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_help(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_interface	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_interface(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_level	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_level(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_license	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_license(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_mib	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_mib(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_new_sta	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_new_sta(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_ping	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_ping(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_quit	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_quit(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_relog	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_relog(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_sa_query	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_sa_query(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_set	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_set(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_sta	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_sta(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_wps_ap_pin	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_wps_ap_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_wps_check_pin	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_wps_check_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_wps_config	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_wps_config(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_wps_oob	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_wps_oob(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_wps_pbc	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_wps_pbc(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_cmd_wps_pin	hostapd/hostapd_cli.c	/^static int hostapd_cli_cmd_wps_pin(struct wpa_ctrl *ctrl, int argc,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
hostapd_cli_commands	hostapd/hostapd_cli.c	/^static struct hostapd_cli_cmd hostapd_cli_commands[] = {$/;"	v	typeref:struct:hostapd_cli_cmd	file:
hostapd_cli_edit_cmd_cb	hostapd/hostapd_cli.c	/^static void hostapd_cli_edit_cmd_cb(void *ctx, char *cmd)$/;"	f	file:	signature:(void *ctx, char *cmd)
hostapd_cli_edit_eof_cb	hostapd/hostapd_cli.c	/^static void hostapd_cli_edit_eof_cb(void *ctx)$/;"	f	file:	signature:(void *ctx)
hostapd_cli_eloop_terminate	hostapd/hostapd_cli.c	/^static void hostapd_cli_eloop_terminate(int sig, void *signal_ctx)$/;"	f	file:	signature:(int sig, void *signal_ctx)
hostapd_cli_exec	hostapd/hostapd_cli.c	/^static int hostapd_cli_exec(const char *program, const char *arg1,$/;"	f	file:	signature:(const char *program, const char *arg1, const char *arg2)
hostapd_cli_full_license	hostapd/hostapd_cli.c	/^static const char *hostapd_cli_full_license =$/;"	v	file:
hostapd_cli_interactive	hostapd/hostapd_cli.c	/^static void hostapd_cli_interactive(void)$/;"	f	file:	signature:(void)
hostapd_cli_license	hostapd/hostapd_cli.c	/^static const char *hostapd_cli_license =$/;"	v	file:
hostapd_cli_list_interfaces	hostapd/hostapd_cli.c	/^static void hostapd_cli_list_interfaces(struct wpa_ctrl *ctrl)$/;"	f	file:	signature:(struct wpa_ctrl *ctrl)
hostapd_cli_msg_cb	hostapd/hostapd_cli.c	/^static void hostapd_cli_msg_cb(char *msg, size_t len)$/;"	f	file:	signature:(char *msg, size_t len)
hostapd_cli_open_connection	hostapd/hostapd_cli.c	/^static struct wpa_ctrl * hostapd_cli_open_connection(const char *ifname)$/;"	f	file:	signature:(const char *ifname)
hostapd_cli_ping	hostapd/hostapd_cli.c	/^static void hostapd_cli_ping(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
hostapd_cli_quit	hostapd/hostapd_cli.c	/^static int hostapd_cli_quit = 0;$/;"	v	file:
hostapd_cli_recv_pending	hostapd/hostapd_cli.c	/^static void hostapd_cli_recv_pending(struct wpa_ctrl *ctrl, int in_read,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int in_read, int action_monitor)
hostapd_cli_version	hostapd/hostapd_cli.c	/^static const char *hostapd_cli_version =$/;"	v	file:
hostapd_client_poll_ok	src/ap/ieee802_11.c	/^void hostapd_client_poll_ok(struct hostapd_data *hapd, const u8 *addr)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_client_poll_ok	src/ap/ieee802_11.h	/^void hostapd_client_poll_ok(struct hostapd_data *hapd, const u8 *addr);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_config	src/ap/ap_config.h	/^struct hostapd_config {$/;"	s
hostapd_config::LONG_PREAMBLE	src/ap/ap_config.h	/^		LONG_PREAMBLE = 0,$/;"	e	enum:hostapd_config::__anon4
hostapd_config::SHORT_PREAMBLE	src/ap/ap_config.h	/^		SHORT_PREAMBLE = 1$/;"	e	enum:hostapd_config::__anon4
hostapd_config::ap_table_expiration_time	src/ap/ap_config.h	/^	int ap_table_expiration_time;$/;"	m	struct:hostapd_config	access:public
hostapd_config::ap_table_max_size	src/ap/ap_config.h	/^	int ap_table_max_size;$/;"	m	struct:hostapd_config	access:public
hostapd_config::basic_rates	src/ap/ap_config.h	/^	int *basic_rates;$/;"	m	struct:hostapd_config	access:public
hostapd_config::beacon_int	src/ap/ap_config.h	/^	u16 beacon_int;$/;"	m	struct:hostapd_config	access:public
hostapd_config::bss	src/ap/ap_config.h	/^	struct hostapd_bss_config *bss, *last_bss;$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::hostapd_bss_config	access:public
hostapd_config::channel	src/ap/ap_config.h	/^	u8 channel;$/;"	m	struct:hostapd_config	access:public
hostapd_config::country	src/ap/ap_config.h	/^	char country[3]; \/* first two octets: country code as described in$/;"	m	struct:hostapd_config	access:public
hostapd_config::driver	src/ap/ap_config.h	/^    const struct wpa_driver_ops *driver;    \/\/ 指向具体类型驱动程序API集合$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::wpa_driver_ops	access:public
hostapd_config::fragm_threshold	src/ap/ap_config.h	/^	int fragm_threshold;$/;"	m	struct:hostapd_config	access:public
hostapd_config::ht_capab	src/ap/ap_config.h	/^	u16 ht_capab;$/;"	m	struct:hostapd_config	access:public
hostapd_config::ht_op_mode_fixed	src/ap/ap_config.h	/^	int ht_op_mode_fixed;$/;"	m	struct:hostapd_config	access:public
hostapd_config::hw_mode	src/ap/ap_config.h	/^	enum hostapd_hw_mode hw_mode; \/* HOSTAPD_MODE_IEEE80211A, .. *\/$/;"	m	struct:hostapd_config	typeref:enum:hostapd_config::hostapd_hw_mode	access:public
hostapd_config::ieee80211d	src/ap/ap_config.h	/^	int ieee80211d;$/;"	m	struct:hostapd_config	access:public
hostapd_config::ieee80211n	src/ap/ap_config.h	/^	int ieee80211n;$/;"	m	struct:hostapd_config	access:public
hostapd_config::last_bss	src/ap/ap_config.h	/^	struct hostapd_bss_config *bss, *last_bss;$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::	access:public
hostapd_config::num_bss	src/ap/ap_config.h	/^	size_t num_bss;     \/\/ 当前接口下bss的数量，同时也代表了有多少个网桥$/;"	m	struct:hostapd_config	access:public
hostapd_config::preamble	src/ap/ap_config.h	/^	} preamble;$/;"	m	struct:hostapd_config	typeref:enum:hostapd_config::__anon4	access:public
hostapd_config::require_ht	src/ap/ap_config.h	/^	int require_ht;$/;"	m	struct:hostapd_config	access:public
hostapd_config::rts_threshold	src/ap/ap_config.h	/^	int rts_threshold;$/;"	m	struct:hostapd_config	access:public
hostapd_config::secondary_channel	src/ap/ap_config.h	/^	int secondary_channel;$/;"	m	struct:hostapd_config	access:public
hostapd_config::send_probe_response	src/ap/ap_config.h	/^	u8 send_probe_response;$/;"	m	struct:hostapd_config	access:public
hostapd_config::supported_rates	src/ap/ap_config.h	/^	int *supported_rates;$/;"	m	struct:hostapd_config	access:public
hostapd_config::tx_queue	src/ap/ap_config.h	/^	struct hostapd_tx_queue_params tx_queue[NUM_TX_QUEUES];$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::hostapd_tx_queue_params	access:public
hostapd_config::wmm_ac_params	src/ap/ap_config.h	/^	struct hostapd_wmm_ac_params wmm_ac_params[4];$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::hostapd_wmm_ac_params	access:public
hostapd_config_bss	hostapd/config_file.c	/^static int hostapd_config_bss(struct hostapd_config *conf, const char *ifname)$/;"	f	file:	signature:(struct hostapd_config *conf, const char *ifname)
hostapd_config_check	hostapd/config_file.c	/^static int hostapd_config_check(struct hostapd_config *conf)$/;"	f	file:	signature:(struct hostapd_config *conf)
hostapd_config_check_bss	hostapd/config_file.c	/^static int hostapd_config_check_bss(struct hostapd_bss_config *bss,$/;"	f	file:	signature:(struct hostapd_bss_config *bss, struct hostapd_config *conf)
hostapd_config_defaults	src/ap/ap_config.c	/^struct hostapd_config * hostapd_config_defaults(void)$/;"	f	signature:(void)
hostapd_config_defaults	src/ap/ap_config.h	/^struct hostapd_config * hostapd_config_defaults(void);$/;"	p	signature:(void)
hostapd_config_defaults_bss	src/ap/ap_config.c	/^void hostapd_config_defaults_bss(struct hostapd_bss_config *bss)$/;"	f	signature:(struct hostapd_bss_config *bss)
hostapd_config_defaults_bss	src/ap/ap_config.h	/^void hostapd_config_defaults_bss(struct hostapd_bss_config *bss);$/;"	p	signature:(struct hostapd_bss_config *bss)
hostapd_config_free	src/ap/ap_config.c	/^void hostapd_config_free(struct hostapd_config *conf)$/;"	f	signature:(struct hostapd_config *conf)
hostapd_config_free	src/ap/ap_config.h	/^void hostapd_config_free(struct hostapd_config *conf);$/;"	p	signature:(struct hostapd_config *conf)
hostapd_config_free_bss	src/ap/ap_config.c	/^static void hostapd_config_free_bss(struct hostapd_bss_config *conf)$/;"	f	file:	signature:(struct hostapd_bss_config *conf)
hostapd_config_free_eap_user	src/ap/ap_config.c	/^static void hostapd_config_free_eap_user(struct hostapd_eap_user *user)$/;"	f	file:	signature:(struct hostapd_eap_user *user)
hostapd_config_free_radius	src/ap/ap_config.c	/^static void hostapd_config_free_radius(struct hostapd_radius_server *servers,$/;"	f	file:	signature:(struct hostapd_radius_server *servers, int num_servers)
hostapd_config_free_vlan	src/ap/ap_config.c	/^static void hostapd_config_free_vlan(struct hostapd_bss_config *bss)$/;"	f	file:	signature:(struct hostapd_bss_config *bss)
hostapd_config_free_wep	src/ap/ap_config.c	/^static void hostapd_config_free_wep(struct hostapd_wep_keys *keys)$/;"	f	file:	signature:(struct hostapd_wep_keys *keys)
hostapd_config_ht_capab	hostapd/config_file.c	/^static int hostapd_config_ht_capab(struct hostapd_config *conf,$/;"	f	file:	signature:(struct hostapd_config *conf, const char *capab)
hostapd_config_parse_cipher	hostapd/config_file.c	/^static int hostapd_config_parse_cipher(int line, const char *value)$/;"	f	file:	signature:(int line, const char *value)
hostapd_config_parse_key_mgmt	hostapd/config_file.c	/^static int hostapd_config_parse_key_mgmt(int line, const char *value)$/;"	f	file:	signature:(int line, const char *value)
hostapd_config_read	hostapd/config_file.c	/^struct hostapd_config * hostapd_config_read(const char *fname)$/;"	f	signature:(const char *fname)
hostapd_config_read	hostapd/config_file.h	/^struct hostapd_config * hostapd_config_read(const char *fname);$/;"	p	signature:(const char *fname)
hostapd_config_read_eap_user	hostapd/config_file.c	/^static int hostapd_config_read_eap_user(const char *fname,$/;"	f	file:	signature:(const char *fname, struct hostapd_bss_config *conf)
hostapd_config_read_int10	hostapd/config_file.c	/^static int hostapd_config_read_int10(const char *value)$/;"	f	file:	signature:(const char *value)
hostapd_config_read_maclist	hostapd/config_file.c	/^static int hostapd_config_read_maclist(const char *fname,$/;"	f	file:	signature:(const char *fname, struct mac_acl_entry **acl, int *num)
hostapd_config_read_radius_addr	hostapd/config_file.c	/^hostapd_config_read_radius_addr(struct hostapd_radius_server **server,$/;"	f	file:	signature:(struct hostapd_radius_server **server, int *num_server, const char *val, int def_port, struct hostapd_radius_server **curr_serv)
hostapd_config_read_vlan_file	hostapd/config_file.c	/^static int hostapd_config_read_vlan_file(struct hostapd_bss_config *bss,$/;"	f	file:	signature:(struct hostapd_bss_config *bss, const char *fname)
hostapd_config_read_wep	hostapd/config_file.c	/^static int hostapd_config_read_wep(struct hostapd_wep_keys *wep, int keyidx,$/;"	f	file:	signature:(struct hostapd_wep_keys *wep, int keyidx, char *val)
hostapd_config_read_wpa_psk	src/ap/ap_config.c	/^static int hostapd_config_read_wpa_psk(const char *fname,$/;"	f	file:	signature:(const char *fname, struct hostapd_ssid *ssid)
hostapd_config_tx_queue	hostapd/config_file.c	/^static int hostapd_config_tx_queue(struct hostapd_config *conf, char *name,$/;"	f	file:	signature:(struct hostapd_config *conf, char *name, char *val)
hostapd_config_wmm_ac	hostapd/config_file.c	/^static int hostapd_config_wmm_ac(struct hostapd_config *conf, char *name,$/;"	f	file:	signature:(struct hostapd_config *conf, char *name, char *val)
hostapd_ctrl_iface_attach	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_attach(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sockaddr_un *from, socklen_t fromlen)
hostapd_ctrl_iface_deauthenticate	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_deauthenticate(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *txtaddr)
hostapd_ctrl_iface_deinit	hostapd/ctrl_iface.c	/^void hostapd_ctrl_iface_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_deinit	hostapd/ctrl_iface.h	/^static inline void hostapd_ctrl_iface_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_deinit	hostapd/ctrl_iface.h	/^void hostapd_ctrl_iface_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_detach	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_detach(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sockaddr_un *from, socklen_t fromlen)
hostapd_ctrl_iface_disassociate	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_disassociate(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *txtaddr)
hostapd_ctrl_iface_ess_disassoc	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_ess_disassoc(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *cmd)
hostapd_ctrl_iface_get	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_get(struct hostapd_data *hapd, char *cmd,$/;"	f	file:	signature:(struct hostapd_data *hapd, char *cmd, char *buf, size_t buflen)
hostapd_ctrl_iface_get_config	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_get_config(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
hostapd_ctrl_iface_init	hostapd/ctrl_iface.c	/^int hostapd_ctrl_iface_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_init	hostapd/ctrl_iface.h	/^int hostapd_ctrl_iface_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_init	hostapd/ctrl_iface.h	/^static inline int hostapd_ctrl_iface_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_level	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_level(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sockaddr_un *from, socklen_t fromlen, char *level)
hostapd_ctrl_iface_msg_cb	hostapd/ctrl_iface.c	/^static void hostapd_ctrl_iface_msg_cb(void *ctx, int level,$/;"	f	file:	signature:(void *ctx, int level, const char *txt, size_t len)
hostapd_ctrl_iface_new_sta	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_new_sta(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *txtaddr)
hostapd_ctrl_iface_path	hostapd/ctrl_iface.c	/^static char * hostapd_ctrl_iface_path(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_ctrl_iface_receive	hostapd/ctrl_iface.c	/^static void hostapd_ctrl_iface_receive(int sock, void *eloop_ctx,$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
hostapd_ctrl_iface_sa_query	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_sa_query(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *txtaddr)
hostapd_ctrl_iface_send	hostapd/ctrl_iface.c	/^static void hostapd_ctrl_iface_send(struct hostapd_data *hapd, int level,$/;"	f	file:	signature:(struct hostapd_data *hapd, int level, const char *buf, size_t len)
hostapd_ctrl_iface_send	hostapd/ctrl_iface.c	/^static void hostapd_ctrl_iface_send(struct hostapd_data *hapd, int level,$/;"	p	file:	signature:(struct hostapd_data *hapd, int level, const char *buf, size_t len)
hostapd_ctrl_iface_set	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_set(struct hostapd_data *hapd, char *cmd)$/;"	f	file:	signature:(struct hostapd_data *hapd, char *cmd)
hostapd_ctrl_iface_sta	src/ap/ctrl_iface_ap.c	/^int hostapd_ctrl_iface_sta(struct hostapd_data *hapd, const char *txtaddr,$/;"	f	signature:(struct hostapd_data *hapd, const char *txtaddr, char *buf, size_t buflen)
hostapd_ctrl_iface_sta	src/ap/ctrl_iface_ap.h	/^int hostapd_ctrl_iface_sta(struct hostapd_data *hapd, const char *txtaddr,$/;"	p	signature:(struct hostapd_data *hapd, const char *txtaddr, char *buf, size_t buflen)
hostapd_ctrl_iface_sta_first	src/ap/ctrl_iface_ap.c	/^int hostapd_ctrl_iface_sta_first(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
hostapd_ctrl_iface_sta_first	src/ap/ctrl_iface_ap.h	/^int hostapd_ctrl_iface_sta_first(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
hostapd_ctrl_iface_sta_mib	src/ap/ctrl_iface_ap.c	/^static int hostapd_ctrl_iface_sta_mib(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
hostapd_ctrl_iface_sta_next	src/ap/ctrl_iface_ap.c	/^int hostapd_ctrl_iface_sta_next(struct hostapd_data *hapd, const char *txtaddr,$/;"	f	signature:(struct hostapd_data *hapd, const char *txtaddr, char *buf, size_t buflen)
hostapd_ctrl_iface_sta_next	src/ap/ctrl_iface_ap.h	/^int hostapd_ctrl_iface_sta_next(struct hostapd_data *hapd, const char *txtaddr,$/;"	p	signature:(struct hostapd_data *hapd, const char *txtaddr, char *buf, size_t buflen)
hostapd_ctrl_iface_wps_ap_pin	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_wps_ap_pin(struct hostapd_data *hapd, char *txt,$/;"	f	file:	signature:(struct hostapd_data *hapd, char *txt, char *buf, size_t buflen)
hostapd_ctrl_iface_wps_check_pin	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_wps_check_pin($/;"	f	file:	signature:( struct hostapd_data *hapd, char *cmd, char *buf, size_t buflen)
hostapd_ctrl_iface_wps_config	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_wps_config(struct hostapd_data *hapd, char *txt)$/;"	f	file:	signature:(struct hostapd_data *hapd, char *txt)
hostapd_ctrl_iface_wps_oob	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_wps_oob(struct hostapd_data *hapd, char *txt)$/;"	f	file:	signature:(struct hostapd_data *hapd, char *txt)
hostapd_ctrl_iface_wps_pin	hostapd/ctrl_iface.c	/^static int hostapd_ctrl_iface_wps_pin(struct hostapd_data *hapd, char *txt)$/;"	f	file:	signature:(struct hostapd_data *hapd, char *txt)
hostapd_data	src/ap/hostapd.h	/^struct hostapd_data {$/;"	s
hostapd_data::acct_session_id_hi	src/ap/hostapd.h	/^	u32 acct_session_id_hi, acct_session_id_lo;$/;"	m	struct:hostapd_data	access:public
hostapd_data::acct_session_id_lo	src/ap/hostapd.h	/^	u32 acct_session_id_hi, acct_session_id_lo;$/;"	m	struct:hostapd_data	access:public
hostapd_data::acl_cache	src/ap/hostapd.h	/^	struct hostapd_cached_radius_acl *acl_cache;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_cached_radius_acl	access:public
hostapd_data::acl_queries	src/ap/hostapd.h	/^	struct hostapd_acl_query_data *acl_queries;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_acl_query_data	access:public
hostapd_data::ap_pin_failures	src/ap/hostapd.h	/^	unsigned int ap_pin_failures;$/;"	m	struct:hostapd_data	access:public
hostapd_data::ap_pin_failures_consecutive	src/ap/hostapd.h	/^	unsigned int ap_pin_failures_consecutive;$/;"	m	struct:hostapd_data	access:public
hostapd_data::ap_pin_lockout_time	src/ap/hostapd.h	/^	unsigned int ap_pin_lockout_time;$/;"	m	struct:hostapd_data	access:public
hostapd_data::beacon_set_done	src/ap/hostapd.h	/^	int beacon_set_done;$/;"	m	struct:hostapd_data	access:public
hostapd_data::conf	src/ap/hostapd.h	/^	struct hostapd_bss_config *conf;    \/\/ 指向上层hostapd_iface->conf->bss[i]，保存此bss的配置信息$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_bss_config	access:public
hostapd_data::ctrl_dst	src/ap/hostapd.h	/^	struct wpa_ctrl_dst *ctrl_dst;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpa_ctrl_dst	access:public
hostapd_data::ctrl_sock	src/ap/hostapd.h	/^	int ctrl_sock;          \/\/ 本地socket fd $/;"	m	struct:hostapd_data	access:public
hostapd_data::driver	src/ap/hostapd.h	/^	const struct wpa_driver_ops *driver;    \/\/ 指向此bss所使用的具体类型驱动API集合$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpa_driver_ops	access:public
hostapd_data::drv_priv	src/ap/hostapd.h	/^	void *drv_priv;                         \/\/ 指向此bss所使用的具体类型驱动控制块$/;"	m	struct:hostapd_data	access:public
hostapd_data::eap_sim_db_priv	src/ap/hostapd.h	/^	void *eap_sim_db_priv;$/;"	m	struct:hostapd_data	access:public
hostapd_data::eapol_auth	src/ap/hostapd.h	/^	struct eapol_authenticator *eapol_auth; \/\/ 供认证者使用的eapol层数据块$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::eapol_authenticator	access:public
hostapd_data::full_dynamic_vlan	src/ap/hostapd.h	/^	struct full_dynamic_vlan *full_dynamic_vlan;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::full_dynamic_vlan	access:public
hostapd_data::iapp	src/ap/hostapd.h	/^	struct iapp_data *iapp;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::iapp_data	access:public
hostapd_data::iconf	src/ap/hostapd.h	/^	struct hostapd_config *iconf;       \/\/ 指向上层hostapd_iface->conf $/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_config	access:public
hostapd_data::iface	src/ap/hostapd.h	/^	struct hostapd_iface *iface;        \/\/ 指向上层hostapd_iface$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_iface	access:public
hostapd_data::interface_added	src/ap/hostapd.h	/^	int interface_added; \/* virtual interface added for this BSS *\/$/;"	m	struct:hostapd_data	access:public
hostapd_data::l2	src/ap/hostapd.h	/^	struct l2_packet_data *l2;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::l2_packet_data	access:public
hostapd_data::michael_mic_failure	src/ap/hostapd.h	/^	time_t michael_mic_failure;$/;"	m	struct:hostapd_data	access:public
hostapd_data::michael_mic_failures	src/ap/hostapd.h	/^	int michael_mic_failures;$/;"	m	struct:hostapd_data	access:public
hostapd_data::msg_ctx	src/ap/hostapd.h	/^	void *msg_ctx; \/* ctx for wpa_msg() calls *\/$/;"	m	struct:hostapd_data	access:public
hostapd_data::msg_ctx_parent	src/ap/hostapd.h	/^	void *msg_ctx_parent; \/* parent interface ctx for wpa_msg() calls *\/$/;"	m	struct:hostapd_data	access:public
hostapd_data::new_assoc_sta_cb	src/ap/hostapd.h	/^	void (*new_assoc_sta_cb)(struct hostapd_data *hapd,$/;"	m	struct:hostapd_data	access:public
hostapd_data::noa_duration	src/ap/hostapd.h	/^	int noa_duration;$/;"	m	struct:hostapd_data	access:public
hostapd_data::noa_enabled	src/ap/hostapd.h	/^	int noa_enabled;$/;"	m	struct:hostapd_data	access:public
hostapd_data::noa_start	src/ap/hostapd.h	/^	int noa_start;$/;"	m	struct:hostapd_data	access:public
hostapd_data::num_probereq_cb	src/ap/hostapd.h	/^	size_t num_probereq_cb;$/;"	m	struct:hostapd_data	access:public
hostapd_data::num_sta	src/ap/hostapd.h	/^	int num_sta; \/* number of entries in sta_list 链表形式站表中入口数量*\/$/;"	m	struct:hostapd_data	access:public
hostapd_data::num_sta_no_p2p	src/ap/hostapd.h	/^	int num_sta_no_p2p;$/;"	m	struct:hostapd_data	access:public
hostapd_data::own_addr	src/ap/hostapd.h	/^	u8 own_addr[ETH_ALEN];      \/\/ 保存此bss的BSSID（对于wire类型驱动器来说就是mac，调用driver层初始化时被配置）$/;"	m	struct:hostapd_data	access:public
hostapd_data::p2p	src/ap/hostapd.h	/^	struct p2p_data *p2p;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::p2p_data	access:public
hostapd_data::p2p_beacon_ie	src/ap/hostapd.h	/^	struct wpabuf *p2p_beacon_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
hostapd_data::p2p_group	src/ap/hostapd.h	/^	struct p2p_group *p2p_group;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::p2p_group	access:public
hostapd_data::p2p_probe_resp_ie	src/ap/hostapd.h	/^	struct wpabuf *p2p_probe_resp_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
hostapd_data::parameter_set_count	src/ap/hostapd.h	/^	int parameter_set_count;$/;"	m	struct:hostapd_data	access:public
hostapd_data::preauth_iface	src/ap/hostapd.h	/^	struct rsn_preauth_interface *preauth_iface;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::rsn_preauth_interface	access:public
hostapd_data::probereq_cb	src/ap/hostapd.h	/^	struct hostapd_probereq_cb *probereq_cb;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_probereq_cb	access:public
hostapd_data::public_action_cb	src/ap/hostapd.h	/^	void (*public_action_cb)(void *ctx, const u8 *buf, size_t len,$/;"	m	struct:hostapd_data	access:public
hostapd_data::public_action_cb_ctx	src/ap/hostapd.h	/^	void *public_action_cb_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::radius	src/ap/hostapd.h	/^	struct radius_client_data *radius;      \/\/ radius客户端控制块$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::radius_client_data	access:public
hostapd_data::radius_srv	src/ap/hostapd.h	/^	struct radius_server_data *radius_srv;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::radius_server_data	access:public
hostapd_data::setup_complete_cb	src/ap/hostapd.h	/^	void (*setup_complete_cb)(void *ctx);$/;"	m	struct:hostapd_data	access:public
hostapd_data::setup_complete_cb_ctx	src/ap/hostapd.h	/^	void *setup_complete_cb_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::ssl_ctx	src/ap/hostapd.h	/^	void *ssl_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::sta_aid	src/ap/hostapd.h	/^	u32 sta_aid[AID_WORDS];$/;"	m	struct:hostapd_data	access:public
hostapd_data::sta_authorized_cb	src/ap/hostapd.h	/^	void (*sta_authorized_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:hostapd_data	access:public
hostapd_data::sta_authorized_cb_ctx	src/ap/hostapd.h	/^	void *sta_authorized_cb_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::sta_hash	src/ap/hostapd.h	/^	struct sta_info *sta_hash[STA_HASH_SIZE];   \/\/ 拉链式hash表，记录了所有站表入口$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::sta_info	access:public
hostapd_data::sta_list	src/ap/hostapd.h	/^	struct sta_info *sta_list; \/* STA info list head 站表链表头*\/$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::sta_info	access:public
hostapd_data::time_adv	src/ap/hostapd.h	/^	struct wpabuf *time_adv;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
hostapd_data::time_update_counter	src/ap/hostapd.h	/^	u8 time_update_counter;$/;"	m	struct:hostapd_data	access:public
hostapd_data::tkip_countermeasures	src/ap/hostapd.h	/^	int tkip_countermeasures;$/;"	m	struct:hostapd_data	access:public
hostapd_data::vendor_action_cb	src/ap/hostapd.h	/^	int (*vendor_action_cb)(void *ctx, const u8 *buf, size_t len,$/;"	m	struct:hostapd_data	access:public
hostapd_data::vendor_action_cb_ctx	src/ap/hostapd.h	/^	void *vendor_action_cb_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::wpa_auth	src/ap/hostapd.h	/^	struct wpa_authenticator *wpa_auth;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpa_authenticator	access:public
hostapd_data::wps	src/ap/hostapd.h	/^	struct wps_context *wps;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wps_context	access:public
hostapd_data::wps_beacon_ie	src/ap/hostapd.h	/^	struct wpabuf *wps_beacon_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
hostapd_data::wps_event_cb	src/ap/hostapd.h	/^	void (*wps_event_cb)(void *ctx, enum wps_event event,$/;"	m	struct:hostapd_data	access:public
hostapd_data::wps_event_cb_ctx	src/ap/hostapd.h	/^	void *wps_event_cb_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::wps_probe_resp_ie	src/ap/hostapd.h	/^	struct wpabuf *wps_probe_resp_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
hostapd_data::wps_reg_success_cb	src/ap/hostapd.h	/^	void (*wps_reg_success_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:hostapd_data	access:public
hostapd_data::wps_reg_success_cb_ctx	src/ap/hostapd.h	/^	void *wps_reg_success_cb_ctx;$/;"	m	struct:hostapd_data	access:public
hostapd_data::wps_upnp	src/ap/hostapd.h	/^	struct upnp_wps_device_sm *wps_upnp;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::upnp_wps_device_sm	access:public
hostapd_deinit_wpa	src/ap/wpa_auth_glue.c	/^void hostapd_deinit_wpa(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_deinit_wpa	src/ap/wpa_auth_glue.h	/^void hostapd_deinit_wpa(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_deinit_wps	src/ap/wps_hostapd.c	/^void hostapd_deinit_wps(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_deinit_wps	src/ap/wps_hostapd.h	/^static inline void hostapd_deinit_wps(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_deinit_wps	src/ap/wps_hostapd.h	/^void hostapd_deinit_wps(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_derive_psk	src/ap/ap_config.c	/^static int hostapd_derive_psk(struct hostapd_ssid *ssid)$/;"	f	file:	signature:(struct hostapd_ssid *ssid)
hostapd_driver_commit	src/ap/ap_drv_ops.c	/^int hostapd_driver_commit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_driver_commit	src/ap/ap_drv_ops.h	/^int hostapd_driver_commit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_driver_get_scan_results	src/ap/ap_drv_ops.c	/^struct wpa_scan_results * hostapd_driver_get_scan_results($/;"	f	signature:( struct hostapd_data *hapd)
hostapd_driver_get_scan_results	src/ap/ap_drv_ops.h	/^struct wpa_scan_results * hostapd_driver_get_scan_results($/;"	p	signature:( struct hostapd_data *hapd)
hostapd_driver_init	hostapd/main.c	/^static int hostapd_driver_init(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_driver_scan	src/ap/ap_drv_ops.c	/^int hostapd_driver_scan(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct wpa_driver_scan_params *params)
hostapd_driver_scan	src/ap/ap_drv_ops.h	/^int hostapd_driver_scan(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct wpa_driver_scan_params *params)
hostapd_driver_set_noa	src/ap/ap_drv_ops.c	/^int hostapd_driver_set_noa(struct hostapd_data *hapd, u8 count, int start,$/;"	f	signature:(struct hostapd_data *hapd, u8 count, int start, int duration)
hostapd_driver_set_noa	src/ap/ap_drv_ops.h	/^int hostapd_driver_set_noa(struct hostapd_data *hapd, u8 count, int start,$/;"	p	signature:(struct hostapd_data *hapd, u8 count, int start, int duration)
hostapd_drv_get_inact_sec	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_get_inact_sec(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_drv_hapd_send_eapol	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_hapd_send_eapol(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *data, size_t data_len, int encrypt, u32 flags)
hostapd_drv_none	src/ap/ap_drv_ops.c	/^int hostapd_drv_none(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_drv_none	src/ap/ap_drv_ops.h	/^int hostapd_drv_none(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_drv_poll_client	src/ap/ap_drv_ops.h	/^static inline void hostapd_drv_poll_client(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *own_addr, const u8 *addr, int qos)
hostapd_drv_read_sta_data	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_read_sta_data($/;"	f	signature:( struct hostapd_data *hapd, struct hostap_sta_driver_data *data, const u8 *addr)
hostapd_drv_send_mlme	src/ap/ap_drv_ops.c	/^int hostapd_drv_send_mlme(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const void *msg, size_t len)
hostapd_drv_send_mlme	src/ap/ap_drv_ops.h	/^int hostapd_drv_send_mlme(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const void *msg, size_t len)
hostapd_drv_set_ap	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_set_ap(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct wpa_driver_ap_params *params)
hostapd_drv_set_authmode	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_set_authmode(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, int auth_algs)
hostapd_drv_set_countermeasures	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_set_countermeasures(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, int enabled)
hostapd_drv_set_key	src/ap/ap_drv_ops.c	/^int hostapd_drv_set_key(const char *ifname, struct hostapd_data *hapd,$/;"	f	signature:(const char *ifname, struct hostapd_data *hapd, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
hostapd_drv_set_key	src/ap/ap_drv_ops.h	/^int hostapd_drv_set_key(const char *ifname,$/;"	p	signature:(const char *ifname, struct hostapd_data *hapd, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
hostapd_drv_set_radius_acl_auth	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_set_radius_acl_auth(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *mac, int accepted, u32 session_timeout)
hostapd_drv_set_radius_acl_expire	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_set_radius_acl_expire(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *mac)
hostapd_drv_set_sta_vlan	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_set_sta_vlan(const char *ifname,$/;"	f	signature:(const char *ifname, struct hostapd_data *hapd, const u8 *addr, int vlan_id)
hostapd_drv_sta_clear_stats	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_sta_clear_stats(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_drv_sta_deauth	src/ap/ap_drv_ops.c	/^int hostapd_drv_sta_deauth(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, int reason)
hostapd_drv_sta_deauth	src/ap/ap_drv_ops.h	/^int hostapd_drv_sta_deauth(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, int reason)
hostapd_drv_sta_disassoc	src/ap/ap_drv_ops.c	/^int hostapd_drv_sta_disassoc(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, int reason)
hostapd_drv_sta_disassoc	src/ap/ap_drv_ops.h	/^int hostapd_drv_sta_disassoc(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, int reason)
hostapd_drv_sta_remove	src/ap/ap_drv_ops.h	/^static inline int hostapd_drv_sta_remove(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_dump_state	hostapd/dump_state.c	/^static void hostapd_dump_state(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_eap_user	src/ap/ap_config.h	/^struct hostapd_eap_user {$/;"	s
hostapd_eap_user::__anon2::method	src/ap/ap_config.h	/^		u32 method;$/;"	m	struct:hostapd_eap_user::__anon2	access:public
hostapd_eap_user::__anon2::vendor	src/ap/ap_config.h	/^		int vendor;$/;"	m	struct:hostapd_eap_user::__anon2	access:public
hostapd_eap_user::force_version	src/ap/ap_config.h	/^	int force_version;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::identity	src/ap/ap_config.h	/^	u8 *identity;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::identity_len	src/ap/ap_config.h	/^	size_t identity_len;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::methods	src/ap/ap_config.h	/^	} methods[EAP_USER_MAX_METHODS];$/;"	m	struct:hostapd_eap_user	typeref:struct:hostapd_eap_user::__anon2	access:public
hostapd_eap_user::next	src/ap/ap_config.h	/^	struct hostapd_eap_user *next;$/;"	m	struct:hostapd_eap_user	typeref:struct:hostapd_eap_user::hostapd_eap_user	access:public
hostapd_eap_user::password	src/ap/ap_config.h	/^	u8 *password;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::password_hash	src/ap/ap_config.h	/^	unsigned int password_hash:1; \/* whether password is hashed with$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::password_len	src/ap/ap_config.h	/^	size_t password_len;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::phase2	src/ap/ap_config.h	/^	int phase2;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::ttls_auth	src/ap/ap_config.h	/^	int ttls_auth; \/* EAP_TTLS_AUTH_* bitfield *\/$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eap_user::wildcard_prefix	src/ap/ap_config.h	/^	unsigned int wildcard_prefix:1;$/;"	m	struct:hostapd_eap_user	access:public
hostapd_eid_adv_proto	src/ap/ieee802_11.h	/^u8 * hostapd_eid_adv_proto(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_adv_proto	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_adv_proto(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_assoc_comeback_time	src/ap/ieee802_11.h	/^u8 * hostapd_eid_assoc_comeback_time(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 *eid)
hostapd_eid_assoc_comeback_time	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_assoc_comeback_time(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 *eid)
hostapd_eid_country	src/ap/beacon.c	/^static u8 * hostapd_eid_country(struct hostapd_data *hapd, u8 *eid,$/;"	f	file:	signature:(struct hostapd_data *hapd, u8 *eid, int max_len)
hostapd_eid_country_add	src/ap/beacon.c	/^static u8 * hostapd_eid_country_add(u8 *pos, u8 *end, int chan_spacing,$/;"	f	file:	signature:(u8 *pos, u8 *end, int chan_spacing, struct hostapd_channel_data *start, struct hostapd_channel_data *prev)
hostapd_eid_ds_params	src/ap/beacon.c	/^static u8 * hostapd_eid_ds_params(struct hostapd_data *hapd, u8 *eid)$/;"	f	file:	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_erp_info	src/ap/beacon.c	/^static u8 * hostapd_eid_erp_info(struct hostapd_data *hapd, u8 *eid)$/;"	f	file:	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ext_capab	src/ap/ieee802_11.h	/^u8 * hostapd_eid_ext_capab(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ext_capab	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_ext_capab(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ext_supp_rates	src/ap/ieee802_11.c	/^u8 * hostapd_eid_ext_supp_rates(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ext_supp_rates	src/ap/ieee802_11.h	/^u8 * hostapd_eid_ext_supp_rates(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ht_capabilities	src/ap/ieee802_11.h	/^u8 * hostapd_eid_ht_capabilities(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ht_capabilities	src/ap/ieee802_11_ht.c	/^u8 * hostapd_eid_ht_capabilities(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ht_operation	src/ap/ieee802_11.h	/^u8 * hostapd_eid_ht_operation(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_ht_operation	src/ap/ieee802_11_ht.c	/^u8 * hostapd_eid_ht_operation(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_interworking	src/ap/ieee802_11.h	/^u8 * hostapd_eid_interworking(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_interworking	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_interworking(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_p2p_manage	src/ap/p2p_hostapd.c	/^u8 * hostapd_eid_p2p_manage(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_p2p_manage	src/ap/p2p_hostapd.h	/^u8 * hostapd_eid_p2p_manage(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_roaming_consortium	src/ap/ieee802_11.h	/^u8 * hostapd_eid_roaming_consortium(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_roaming_consortium	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_roaming_consortium(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_supp_rates	src/ap/ieee802_11.c	/^u8 * hostapd_eid_supp_rates(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_supp_rates	src/ap/ieee802_11.h	/^u8 * hostapd_eid_supp_rates(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_time_adv	src/ap/ieee802_11.h	/^u8 * hostapd_eid_time_adv(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_time_adv	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_time_adv(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_time_zone	src/ap/ieee802_11.h	/^u8 * hostapd_eid_time_zone(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_time_zone	src/ap/ieee802_11_shared.c	/^u8 * hostapd_eid_time_zone(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_wmm	src/ap/wmm.c	/^u8 * hostapd_eid_wmm(struct hostapd_data *hapd, u8 *eid)$/;"	f	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_wmm	src/ap/wmm.h	/^u8 * hostapd_eid_wmm(struct hostapd_data *hapd, u8 *eid);$/;"	p	signature:(struct hostapd_data *hapd, u8 *eid)
hostapd_eid_wmm_valid	src/ap/wmm.c	/^int hostapd_eid_wmm_valid(struct hostapd_data *hapd, const u8 *eid, size_t len)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *eid, size_t len)
hostapd_eid_wmm_valid	src/ap/wmm.h	/^int hostapd_eid_wmm_valid(struct hostapd_data *hapd, const u8 *eid,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *eid, size_t len)
hostapd_eid_wpa	src/ap/beacon.c	/^static u8 * hostapd_eid_wpa(struct hostapd_data *hapd, u8 *eid, size_t len)$/;"	f	file:	signature:(struct hostapd_data *hapd, u8 *eid, size_t len)
hostapd_event_eapol_rx	src/ap/drv_callbacks.c	/^static void hostapd_event_eapol_rx(struct hostapd_data *hapd, const u8 *src,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *src, const u8 *data, size_t data_len)
hostapd_event_new_sta	src/ap/drv_callbacks.c	/^static int hostapd_event_new_sta(struct hostapd_data *hapd, const u8 *addr)$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_event_sta_low_ack	src/ap/drv_callbacks.c	/^void hostapd_event_sta_low_ack(struct hostapd_data *hapd, const u8 *addr)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_event_sta_low_ack	src/ap/hostapd.h	/^void hostapd_event_sta_low_ack(struct hostapd_data *hapd, const u8 *addr);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_flush	src/ap/ap_drv_ops.c	/^int hostapd_flush(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_flush	src/ap/ap_drv_ops.h	/^int hostapd_flush(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_flush_old_stations	src/ap/hostapd.c	/^static int hostapd_flush_old_stations(struct hostapd_data *hapd, u16 reason)$/;"	f	file:	signature:(struct hostapd_data *hapd, u16 reason)
hostapd_flush_old_stations	src/ap/hostapd.c	/^static int hostapd_flush_old_stations(struct hostapd_data *hapd, u16 reason);$/;"	p	file:	signature:(struct hostapd_data *hapd, u16 reason)
hostapd_for_each_interface	hostapd/main.c	/^static int hostapd_for_each_interface(struct hapd_interfaces *interfaces,$/;"	f	file:	signature:(struct hapd_interfaces *interfaces, int (*cb)(struct hostapd_iface *iface, void *ctx), void *ctx)
hostapd_frame_info	src/ap/hostapd.h	/^struct hostapd_frame_info {$/;"	s
hostapd_frame_info::channel	src/ap/hostapd.h	/^	u32 channel;$/;"	m	struct:hostapd_frame_info	access:public
hostapd_frame_info::datarate	src/ap/hostapd.h	/^	u32 datarate;$/;"	m	struct:hostapd_frame_info	access:public
hostapd_frame_info::ssi_signal	src/ap/hostapd.h	/^	u32 ssi_signal;$/;"	m	struct:hostapd_frame_info	access:public
hostapd_free_ap_extra_ies	src/ap/ap_drv_ops.c	/^void hostapd_free_ap_extra_ies(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct wpabuf *beacon, struct wpabuf *proberesp, struct wpabuf *assocresp)
hostapd_free_ap_extra_ies	src/ap/ap_drv_ops.h	/^void hostapd_free_ap_extra_ies(struct hostapd_data *hapd, struct wpabuf *beacon,$/;"	p	signature:(struct hostapd_data *hapd, struct wpabuf *beacon, struct wpabuf *proberesp, struct wpabuf *assocresp)
hostapd_free_aps	src/ap/ap_list.c	/^static void hostapd_free_aps(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_free_hw_features	src/ap/hw_features.c	/^void hostapd_free_hw_features(struct hostapd_hw_modes *hw_features,$/;"	f	signature:(struct hostapd_hw_modes *hw_features, size_t num_hw_features)
hostapd_free_hw_features	src/ap/hw_features.h	/^hostapd_free_hw_features(struct hostapd_hw_modes *hw_features,$/;"	f	signature:(struct hostapd_hw_modes *hw_features, size_t num_hw_features)
hostapd_free_hw_features	src/ap/hw_features.h	/^void hostapd_free_hw_features(struct hostapd_hw_modes *hw_features,$/;"	p	signature:(struct hostapd_hw_modes *hw_features, size_t num_hw_features)
hostapd_free_stas	src/ap/sta_info.c	/^void hostapd_free_stas(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_free_stas	src/ap/sta_info.h	/^void hostapd_free_stas(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_freq_params	src/drivers/driver.h	/^struct hostapd_freq_params {$/;"	s
hostapd_freq_params::channel	src/drivers/driver.h	/^	int channel;$/;"	m	struct:hostapd_freq_params	access:public
hostapd_freq_params::freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:hostapd_freq_params	access:public
hostapd_freq_params::ht_enabled	src/drivers/driver.h	/^	int ht_enabled;$/;"	m	struct:hostapd_freq_params	access:public
hostapd_freq_params::mode	src/drivers/driver.h	/^	int mode;$/;"	m	struct:hostapd_freq_params	access:public
hostapd_freq_params::sec_channel_offset	src/drivers/driver.h	/^	int sec_channel_offset; \/* 0 = HT40 disabled, -1 = HT40 enabled,$/;"	m	struct:hostapd_freq_params	access:public
hostapd_get_aid	src/ap/ieee802_11.c	/^static int hostapd_get_aid(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
hostapd_get_eap_user	src/ap/ap_config.c	/^hostapd_get_eap_user(const struct hostapd_bss_config *conf, const u8 *identity,$/;"	f	signature:(const struct hostapd_bss_config *conf, const u8 *identity, size_t identity_len, int phase2)
hostapd_get_eap_user	src/ap/ap_config.h	/^hostapd_get_eap_user(const struct hostapd_bss_config *conf, const u8 *identity,$/;"	p	signature:(const struct hostapd_bss_config *conf, const u8 *identity, size_t identity_len, int phase2)
hostapd_get_ht_capab	src/ap/ieee802_11.h	/^void hostapd_get_ht_capab(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct ieee80211_ht_capabilities *ht_cap, struct ieee80211_ht_capabilities *neg_ht_cap)
hostapd_get_ht_capab	src/ap/ieee802_11_ht.c	/^void hostapd_get_ht_capab(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct ieee80211_ht_capabilities *ht_cap, struct ieee80211_ht_capabilities *neg_ht_cap)
hostapd_get_hw_feature_data	src/ap/ap_drv_ops.c	/^hostapd_get_hw_feature_data(struct hostapd_data *hapd, u16 *num_modes,$/;"	f	signature:(struct hostapd_data *hapd, u16 *num_modes, u16 *flags)
hostapd_get_hw_feature_data	src/ap/ap_drv_ops.h	/^hostapd_get_hw_feature_data(struct hostapd_data *hapd, u16 *num_modes,$/;"	p	signature:(struct hostapd_data *hapd, u16 *num_modes, u16 *flags)
hostapd_get_hw_features	src/ap/hw_features.c	/^int hostapd_get_hw_features(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_get_hw_features	src/ap/hw_features.h	/^int hostapd_get_hw_features(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_get_hw_features	src/ap/hw_features.h	/^static inline int hostapd_get_hw_features(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_get_ntp_timestamp	src/ap/ieee802_1x.h	/^void hostapd_get_ntp_timestamp(u8 *buf);$/;"	p	signature:(u8 *buf)
hostapd_get_psk	src/ap/ap_config.c	/^const u8 * hostapd_get_psk(const struct hostapd_bss_config *conf,$/;"	f	signature:(const struct hostapd_bss_config *conf, const u8 *addr, const u8 *prev_psk)
hostapd_get_psk	src/ap/ap_config.h	/^const u8 * hostapd_get_psk(const struct hostapd_bss_config *conf,$/;"	p	signature:(const struct hostapd_bss_config *conf, const u8 *addr, const u8 *prev_psk)
hostapd_get_seqnum	src/ap/ap_drv_ops.c	/^int hostapd_get_seqnum(const char *ifname, struct hostapd_data *hapd,$/;"	f	signature:(const char *ifname, struct hostapd_data *hapd, const u8 *addr, int idx, u8 *seq)
hostapd_get_seqnum	src/ap/ap_drv_ops.h	/^int hostapd_get_seqnum(const char *ifname, struct hostapd_data *hapd,$/;"	p	signature:(const char *ifname, struct hostapd_data *hapd, const u8 *addr, int idx, u8 *seq)
hostapd_get_ssid	src/ap/ap_drv_ops.c	/^int hostapd_get_ssid(struct hostapd_data *hapd, u8 *buf, size_t len)$/;"	f	signature:(struct hostapd_data *hapd, u8 *buf, size_t len)
hostapd_get_ssid	src/ap/ap_drv_ops.h	/^int hostapd_get_ssid(struct hostapd_data *hapd, u8 *buf, size_t len);$/;"	p	signature:(struct hostapd_data *hapd, u8 *buf, size_t len)
hostapd_get_vlan_id_ifname	src/ap/ap_config.c	/^const char * hostapd_get_vlan_id_ifname(struct hostapd_vlan *vlan, int vlan_id)$/;"	f	signature:(struct hostapd_vlan *vlan, int vlan_id)
hostapd_get_vlan_id_ifname	src/ap/ap_config.h	/^const char * hostapd_get_vlan_id_ifname(struct hostapd_vlan *vlan,$/;"	p	signature:(struct hostapd_vlan *vlan, int vlan_id)
hostapd_global_deinit	hostapd/main.c	/^static void hostapd_global_deinit(const char *pid_file)$/;"	f	file:	signature:(const char *pid_file)
hostapd_global_init	hostapd/main.c	/^static int hostapd_global_init(struct hapd_interfaces *interfaces,$/;"	f	file:	signature:(struct hapd_interfaces *interfaces, const char *entropy_file)
hostapd_global_run	hostapd/main.c	/^static int hostapd_global_run(struct hapd_interfaces *ifaces, int daemonize,$/;"	f	file:	signature:(struct hapd_interfaces *ifaces, int daemonize, const char *pid_file)
hostapd_ht_operation_update	src/ap/ieee802_11.h	/^int hostapd_ht_operation_update(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_ht_operation_update	src/ap/ieee802_11_ht.c	/^int hostapd_ht_operation_update(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_hw_get_channel	src/ap/hw_features.c	/^int hostapd_hw_get_channel(struct hostapd_data *hapd, int freq)$/;"	f	signature:(struct hostapd_data *hapd, int freq)
hostapd_hw_get_channel	src/ap/hw_features.h	/^int hostapd_hw_get_channel(struct hostapd_data *hapd, int freq);$/;"	p	signature:(struct hostapd_data *hapd, int freq)
hostapd_hw_get_freq	src/ap/hw_features.c	/^int hostapd_hw_get_freq(struct hostapd_data *hapd, int chan)$/;"	f	signature:(struct hostapd_data *hapd, int chan)
hostapd_hw_get_freq	src/ap/hw_features.h	/^int hostapd_hw_get_freq(struct hostapd_data *hapd, int chan);$/;"	p	signature:(struct hostapd_data *hapd, int chan)
hostapd_hw_get_freq	src/ap/hw_features.h	/^static inline int hostapd_hw_get_freq(struct hostapd_data *hapd, int chan)$/;"	f	signature:(struct hostapd_data *hapd, int chan)
hostapd_hw_mode	src/common/defs.h	/^enum hostapd_hw_mode {$/;"	g
hostapd_hw_mode_txt	src/ap/hw_features.c	/^const char * hostapd_hw_mode_txt(int mode)$/;"	f	signature:(int mode)
hostapd_hw_mode_txt	src/ap/hw_features.h	/^const char * hostapd_hw_mode_txt(int mode);$/;"	p	signature:(int mode)
hostapd_hw_mode_txt	src/ap/hw_features.h	/^static inline const char * hostapd_hw_mode_txt(int mode)$/;"	f	signature:(int mode)
hostapd_hw_modes	src/drivers/driver.h	/^struct hostapd_hw_modes {$/;"	s
hostapd_hw_modes::a_mpdu_params	src/drivers/driver.h	/^	u8 a_mpdu_params;$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_hw_modes::channels	src/drivers/driver.h	/^	struct hostapd_channel_data *channels;$/;"	m	struct:hostapd_hw_modes	typeref:struct:hostapd_hw_modes::hostapd_channel_data	access:public
hostapd_hw_modes::flags	src/drivers/driver.h	/^	unsigned int flags; \/* HOSTAPD_MODE_FLAG_* *\/$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_hw_modes::ht_capab	src/drivers/driver.h	/^	u16 ht_capab;$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_hw_modes::mcs_set	src/drivers/driver.h	/^	u8 mcs_set[16];$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_hw_modes::mode	src/drivers/driver.h	/^	enum hostapd_hw_mode mode;$/;"	m	struct:hostapd_hw_modes	typeref:enum:hostapd_hw_modes::hostapd_hw_mode	access:public
hostapd_hw_modes::num_channels	src/drivers/driver.h	/^	int num_channels;$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_hw_modes::num_rates	src/drivers/driver.h	/^	int num_rates;$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_hw_modes::rates	src/drivers/driver.h	/^	int *rates;$/;"	m	struct:hostapd_hw_modes	access:public
hostapd_if_add	src/ap/ap_drv_ops.c	/^int hostapd_if_add(struct hostapd_data *hapd, enum wpa_driver_if_type type,$/;"	f	signature:(struct hostapd_data *hapd, enum wpa_driver_if_type type, const char *ifname, const u8 *addr, void *bss_ctx, void **drv_priv, char *force_ifname, u8 *if_addr, const char *bridge)
hostapd_if_add	src/ap/ap_drv_ops.h	/^int hostapd_if_add(struct hostapd_data *hapd, enum wpa_driver_if_type type,$/;"	p	signature:(struct hostapd_data *hapd, enum wpa_driver_if_type type, const char *ifname, const u8 *addr, void *bss_ctx, void **drv_priv, char *force_ifname, u8 *if_addr, const char *bridge)
hostapd_if_remove	src/ap/ap_drv_ops.c	/^int hostapd_if_remove(struct hostapd_data *hapd, enum wpa_driver_if_type type,$/;"	f	signature:(struct hostapd_data *hapd, enum wpa_driver_if_type type, const char *ifname)
hostapd_if_remove	src/ap/ap_drv_ops.h	/^int hostapd_if_remove(struct hostapd_data *hapd, enum wpa_driver_if_type type,$/;"	p	signature:(struct hostapd_data *hapd, enum wpa_driver_if_type type, const char *ifname)
hostapd_iface	src/ap/hostapd.h	/^struct hostapd_iface {$/;"	s
hostapd_iface::ap_hash	src/ap/hostapd.h	/^	struct ap_info *ap_hash[STA_HASH_SIZE];$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::ap_info	access:public
hostapd_iface::ap_iter_list	src/ap/hostapd.h	/^	struct ap_info *ap_iter_list;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::ap_info	access:public
hostapd_iface::ap_list	src/ap/hostapd.h	/^	struct ap_info *ap_list; \/* AP info list head *\/$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::ap_info	access:public
hostapd_iface::bss	src/ap/hostapd.h	/^    struct hostapd_data **bss;              \/\/ bss列表，描述各bss的配置$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_data	access:public
hostapd_iface::conf	src/ap/hostapd.h	/^	struct hostapd_config *conf;            \/\/ 根据配置文件生成的配置控制块$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_config	access:public
hostapd_iface::config_fname	src/ap/hostapd.h	/^	char *config_fname;                     \/\/ 保存了命令行输入的配置文件名$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::config_read_cb	src/ap/hostapd.h	/^	struct hostapd_config * (*config_read_cb)(const char *config_fname);$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::config_read_cb	access:public
hostapd_iface::ctrl_iface_deinit	src/ap/hostapd.h	/^	void (*ctrl_iface_deinit)(struct hostapd_data *hapd);$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::ctrl_iface_init	src/ap/hostapd.h	/^	int (*ctrl_iface_init)(struct hostapd_data *hapd);      \/\/ 在hostapd_init中注册，在hostapd_setup_bss调用，用于初始化CLI的socket接口$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::current_mode	src/ap/hostapd.h	/^	struct hostapd_hw_modes *current_mode;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_hw_modes	access:public
hostapd_iface::current_rates	src/ap/hostapd.h	/^	struct hostapd_rate_data *current_rates;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_rate_data	access:public
hostapd_iface::drv_flags	src/ap/hostapd.h	/^	unsigned int drv_flags;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::for_each_interface	src/ap/hostapd.h	/^	int (*for_each_interface)(struct hapd_interfaces *interfaces,$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::freq	src/ap/hostapd.h	/^	int freq;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::ht_op_mode	src/ap/hostapd.h	/^	u16 ht_op_mode;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::hw_features	src/ap/hostapd.h	/^	struct hostapd_hw_modes *hw_features;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_hw_modes	access:public
hostapd_iface::hw_flags	src/ap/hostapd.h	/^	u16 hw_flags;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::interfaces	src/ap/hostapd.h	/^	struct hapd_interfaces *interfaces;     \/\/ 指向父结构，也就是接口集合的指针$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hapd_interfaces	access:public
hostapd_iface::num_ap	src/ap/hostapd.h	/^	int num_ap; \/* number of entries in ap_list *\/$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_bss	src/ap/hostapd.h	/^	size_t num_bss;                         \/\/ 接口中bss数量$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_hw_features	src/ap/hostapd.h	/^	int num_hw_features;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_rates	src/ap/hostapd.h	/^	int num_rates;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_sta_ht_20mhz	src/ap/hostapd.h	/^	int num_sta_ht_20mhz;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_sta_ht_no_gf	src/ap/hostapd.h	/^	int num_sta_ht_no_gf;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_sta_no_ht	src/ap/hostapd.h	/^	int num_sta_no_ht;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_sta_no_short_preamble	src/ap/hostapd.h	/^	int num_sta_no_short_preamble;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_sta_no_short_slot_time	src/ap/hostapd.h	/^	int num_sta_no_short_slot_time;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::num_sta_non_erp	src/ap/hostapd.h	/^	int num_sta_non_erp;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::olbc	src/ap/hostapd.h	/^	int olbc; \/* Overlapping Legacy BSS Condition *\/$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::olbc_ht	src/ap/hostapd.h	/^	int olbc_ht;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::owner	src/ap/hostapd.h	/^	void *owner;$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::reload_config	src/ap/hostapd.h	/^	int (*reload_config)(struct hostapd_iface *iface);$/;"	m	struct:hostapd_iface	access:public
hostapd_iface::scan_cb	src/ap/hostapd.h	/^	void (*scan_cb)(struct hostapd_iface *iface);$/;"	m	struct:hostapd_iface	access:public
hostapd_init	hostapd/main.c	/^static struct hostapd_iface * hostapd_init(const char *config_file)$/;"	f	file:	signature:(const char *config_file)
hostapd_init_wps	src/ap/wps_hostapd.c	/^int hostapd_init_wps(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_bss_config *conf)
hostapd_init_wps	src/ap/wps_hostapd.h	/^int hostapd_init_wps(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct hostapd_bss_config *conf)
hostapd_init_wps	src/ap/wps_hostapd.h	/^static inline int hostapd_init_wps(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_bss_config *conf)
hostapd_init_wps_complete	src/ap/wps_hostapd.c	/^int hostapd_init_wps_complete(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_init_wps_complete	src/ap/wps_hostapd.h	/^int hostapd_init_wps_complete(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_init_wps_complete	src/ap/wps_hostapd.h	/^static inline int hostapd_init_wps_complete(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_interface_deinit	src/ap/hostapd.c	/^void hostapd_interface_deinit(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_interface_deinit	src/ap/hostapd.h	/^void hostapd_interface_deinit(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_interface_deinit_free	hostapd/main.c	/^static void hostapd_interface_deinit_free(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_interface_free	src/ap/hostapd.c	/^void hostapd_interface_free(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_interface_free	src/ap/hostapd.h	/^void hostapd_interface_free(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_interface_init	hostapd/main.c	/^hostapd_interface_init(struct hapd_interfaces *interfaces,$/;"	f	file:	signature:(struct hapd_interfaces *interfaces, const char *config_fname, int debug)
hostapd_ioctl	src/drivers/driver_hostap.c	/^static int hostapd_ioctl(struct wpa_driver_hostap_data *drv,$/;"	f	file:	signature:(struct wpa_driver_hostap_data *drv, struct prism2_hostapd_param *param, int len, int show_err)
hostapd_ioctl	src/drivers/driver_hostap.c	/^static int hostapd_ioctl(void *priv, struct prism2_hostapd_param *param,$/;"	f	file:	signature:(void *priv, struct prism2_hostapd_param *param, int len)
hostapd_ioctl	src/drivers/driver_hostap.c	/^static int hostapd_ioctl(void *priv, struct prism2_hostapd_param *param,$/;"	p	file:	signature:(void *priv, struct prism2_hostapd_param *param, int len)
hostapd_ioctl_set_generic_elem	src/drivers/driver_hostap.c	/^static int hostapd_ioctl_set_generic_elem(struct hostap_driver_data *drv)$/;"	f	file:	signature:(struct hostap_driver_data *drv)
hostapd_ip_addr	src/utils/ip_addr.h	/^struct hostapd_ip_addr {$/;"	s
hostapd_ip_addr::__anon27::max_len	src/utils/ip_addr.h	/^		u8 max_len[16];$/;"	m	union:hostapd_ip_addr::__anon27	access:public
hostapd_ip_addr::__anon27::v4	src/utils/ip_addr.h	/^		struct in_addr v4;$/;"	m	union:hostapd_ip_addr::__anon27	typeref:struct:hostapd_ip_addr::__anon27::in_addr	access:public
hostapd_ip_addr::__anon27::v6	src/utils/ip_addr.h	/^		struct in6_addr v6;$/;"	m	union:hostapd_ip_addr::__anon27	typeref:struct:hostapd_ip_addr::__anon27::in6_addr	access:public
hostapd_ip_addr::af	src/utils/ip_addr.h	/^	int af; \/* AF_INET \/ AF_INET6 *\/$/;"	m	struct:hostapd_ip_addr	access:public
hostapd_ip_addr::u	src/utils/ip_addr.h	/^	} u;$/;"	m	struct:hostapd_ip_addr	typeref:union:hostapd_ip_addr::__anon27	access:public
hostapd_ip_diff	src/utils/ip_addr.c	/^int hostapd_ip_diff(struct hostapd_ip_addr *a, struct hostapd_ip_addr *b)$/;"	f	signature:(struct hostapd_ip_addr *a, struct hostapd_ip_addr *b)
hostapd_ip_diff	src/utils/ip_addr.h	/^int hostapd_ip_diff(struct hostapd_ip_addr *a, struct hostapd_ip_addr *b);$/;"	p	signature:(struct hostapd_ip_addr *a, struct hostapd_ip_addr *b)
hostapd_ip_txt	src/utils/ip_addr.c	/^const char * hostapd_ip_txt(const struct hostapd_ip_addr *addr, char *buf,$/;"	f	signature:(const struct hostapd_ip_addr *addr, char *buf, size_t buflen)
hostapd_ip_txt	src/utils/ip_addr.h	/^const char * hostapd_ip_txt(const struct hostapd_ip_addr *addr, char *buf,$/;"	p	signature:(const struct hostapd_ip_addr *addr, char *buf, size_t buflen)
hostapd_logger	src/utils/wpa_debug.c	/^void hostapd_logger(void *ctx, const u8 *addr, unsigned int module, int level,$/;"	f	signature:(void *ctx, const u8 *addr, unsigned int module, int level, const char *fmt, ...)
hostapd_logger	src/utils/wpa_debug.h	241;"	d
hostapd_logger_cb	hostapd/main.c	/^static void hostapd_logger_cb(void *ctx, const u8 *addr, unsigned int module,$/;"	f	file:	signature:(void *ctx, const u8 *addr, unsigned int module, int level, const char *txt, size_t len)
hostapd_logger_cb	src/utils/wpa_debug.c	/^static hostapd_logger_cb_func hostapd_logger_cb = NULL;$/;"	v	file:
hostapd_logger_cb_func	src/utils/wpa_debug.h	/^typedef void (*hostapd_logger_cb_func)(void *ctx, const u8 *addr,$/;"	t
hostapd_logger_level	src/utils/wpa_debug.h	/^enum hostapd_logger_level {$/;"	g
hostapd_logger_register_cb	src/utils/wpa_debug.c	/^void hostapd_logger_register_cb(hostapd_logger_cb_func func)$/;"	f	signature:(hostapd_logger_cb_func func)
hostapd_logger_register_cb	src/utils/wpa_debug.h	/^void hostapd_logger_register_cb(hostapd_logger_cb_func func);$/;"	p	signature:(hostapd_logger_cb_func func)
hostapd_logger_register_cb	src/utils/wpa_debug.h	242;"	d
hostapd_mac_comp	src/ap/ap_config.c	/^int hostapd_mac_comp(const void *a, const void *b)$/;"	f	signature:(const void *a, const void *b)
hostapd_mac_comp	src/ap/ap_config.h	/^int hostapd_mac_comp(const void *a, const void *b);$/;"	p	signature:(const void *a, const void *b)
hostapd_mac_comp_empty	src/ap/ap_config.c	/^int hostapd_mac_comp_empty(const void *a)$/;"	f	signature:(const void *a)
hostapd_mac_comp_empty	src/ap/ap_config.h	/^int hostapd_mac_comp_empty(const void *a);$/;"	p	signature:(const void *a)
hostapd_maclist_found	src/ap/ap_config.c	/^int hostapd_maclist_found(struct mac_acl_entry *list, int num_entries,$/;"	f	signature:(struct mac_acl_entry *list, int num_entries, const u8 *addr, int *vlan_id)
hostapd_maclist_found	src/ap/ap_config.h	/^int hostapd_maclist_found(struct mac_acl_entry *list, int num_entries,$/;"	p	signature:(struct mac_acl_entry *list, int num_entries, const u8 *addr, int *vlan_id)
hostapd_mgmt_rx	src/ap/drv_callbacks.c	/^static void hostapd_mgmt_rx(struct hostapd_data *hapd, struct rx_mgmt *rx_mgmt)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct rx_mgmt *rx_mgmt)
hostapd_mgmt_tx_cb	src/ap/drv_callbacks.c	/^static void hostapd_mgmt_tx_cb(struct hostapd_data *hapd, const u8 *buf,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len, u16 stype, int ok)
hostapd_msg_ifname_cb	hostapd/main.c	/^static const char * hostapd_msg_ifname_cb(void *ctx)$/;"	f	file:	signature:(void *ctx)
hostapd_new_assoc_sta	src/ap/hostapd.c	/^void hostapd_new_assoc_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int reassoc)
hostapd_new_assoc_sta	src/ap/hostapd.h	/^void hostapd_new_assoc_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int reassoc)
hostapd_notif_assoc	src/ap/drv_callbacks.c	/^int hostapd_notif_assoc(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
hostapd_notif_assoc	src/ap/hostapd.h	/^int hostapd_notif_assoc(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *ie, size_t ielen, int reassoc)
hostapd_notif_disassoc	src/ap/drv_callbacks.c	/^void hostapd_notif_disassoc(struct hostapd_data *hapd, const u8 *addr)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_notif_disassoc	src/ap/hostapd.h	/^void hostapd_notif_disassoc(struct hostapd_data *hapd, const u8 *addr);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_own_capab_info	src/ap/ieee802_11.c	/^u16 hostapd_own_capab_info(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int probe)
hostapd_own_capab_info	src/ap/ieee802_11.h	/^u16 hostapd_own_capab_info(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int probe)
hostapd_p2p_get_mib_sta	src/ap/p2p_hostapd.c	/^int hostapd_p2p_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
hostapd_p2p_get_mib_sta	src/ap/p2p_hostapd.h	/^int hostapd_p2p_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
hostapd_p2p_get_mib_sta	src/ap/p2p_hostapd.h	/^static inline int hostapd_p2p_get_mib_sta(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
hostapd_p2p_non_p2p_sta_connected	src/ap/p2p_hostapd.c	/^void hostapd_p2p_non_p2p_sta_connected(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_p2p_non_p2p_sta_connected	src/ap/p2p_hostapd.h	/^void hostapd_p2p_non_p2p_sta_connected(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_p2p_non_p2p_sta_disconnected	src/ap/p2p_hostapd.c	/^void hostapd_p2p_non_p2p_sta_disconnected(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_p2p_non_p2p_sta_disconnected	src/ap/p2p_hostapd.h	/^void hostapd_p2p_non_p2p_sta_disconnected(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_p2p_set_noa	src/ap/p2p_hostapd.c	/^int hostapd_p2p_set_noa(struct hostapd_data *hapd, u8 count, int start,$/;"	f	signature:(struct hostapd_data *hapd, u8 count, int start, int duration)
hostapd_p2p_set_noa	src/ap/p2p_hostapd.h	/^int hostapd_p2p_set_noa(struct hostapd_data *hapd, u8 count, int start,$/;"	p	signature:(struct hostapd_data *hapd, u8 count, int start, int duration)
hostapd_parse_ip_addr	src/utils/ip_addr.c	/^int hostapd_parse_ip_addr(const char *txt, struct hostapd_ip_addr *addr)$/;"	f	signature:(const char *txt, struct hostapd_ip_addr *addr)
hostapd_parse_ip_addr	src/utils/ip_addr.h	/^int hostapd_parse_ip_addr(const char *txt, struct hostapd_ip_addr *addr);$/;"	p	signature:(const char *txt, struct hostapd_ip_addr *addr)
hostapd_parse_rates	hostapd/config_file.c	/^static int hostapd_parse_rates(int **rate_list, char *val)$/;"	f	file:	signature:(int **rate_list, char *val)
hostapd_prepare_rates	src/ap/hw_features.c	/^int hostapd_prepare_rates(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_hw_modes *mode)
hostapd_prepare_rates	src/ap/hw_features.h	/^int hostapd_prepare_rates(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct hostapd_hw_modes *mode)
hostapd_prepare_rates	src/ap/hw_features.h	/^static inline int hostapd_prepare_rates(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_hw_modes *mode)
hostapd_probe_req_rx	src/ap/drv_callbacks.c	/^int hostapd_probe_req_rx(struct hostapd_data *hapd, const u8 *sa, const u8 *da,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 *da, const u8 *bssid, const u8 *ie, size_t ie_len)
hostapd_probe_req_rx	src/ap/hostapd.h	/^int hostapd_probe_req_rx(struct hostapd_data *hapd, const u8 *sa, const u8 *da,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 *da, const u8 *bssid, const u8 *ie, size_t ie_len)
hostapd_probereq_cb	src/ap/hostapd.h	/^struct hostapd_probereq_cb {$/;"	s
hostapd_probereq_cb::cb	src/ap/hostapd.h	/^	int (*cb)(void *ctx, const u8 *sa, const u8 *da, const u8 *bssid,$/;"	m	struct:hostapd_probereq_cb	access:public
hostapd_probereq_cb::ctx	src/ap/hostapd.h	/^	void *ctx;$/;"	m	struct:hostapd_probereq_cb	access:public
hostapd_prune_associations	src/ap/hostapd.h	/^void hostapd_prune_associations(struct hostapd_data *hapd, const u8 *addr);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_prune_associations	src/ap/utils.c	/^void hostapd_prune_associations(struct hostapd_data *hapd, const u8 *addr)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
hostapd_pwd_auth_fail	src/ap/wps_hostapd.c	/^static void hostapd_pwd_auth_fail(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wps_event_pwd_auth_fail *data)
hostapd_radius_acl_query	src/ap/ieee802_11_auth.c	/^static int hostapd_radius_acl_query(struct hostapd_data *hapd, const u8 *addr,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *addr, struct hostapd_acl_query_data *query)
hostapd_radius_get_eap_user	src/ap/authsrv.c	/^static int hostapd_radius_get_eap_user(void *ctx, const u8 *identity,$/;"	f	file:	signature:(void *ctx, const u8 *identity, size_t identity_len, int phase2, struct eap_user *user)
hostapd_radius_server	src/radius/radius_client.h	/^struct hostapd_radius_server {$/;"	s
hostapd_radius_server::access_accepts	src/radius/radius_client.h	/^	u32 access_accepts;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::access_challenges	src/radius/radius_client.h	/^	u32 access_challenges;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::access_rejects	src/radius/radius_client.h	/^	u32 access_rejects;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::addr	src/radius/radius_client.h	/^	struct hostapd_ip_addr addr;$/;"	m	struct:hostapd_radius_server	typeref:struct:hostapd_radius_server::hostapd_ip_addr	access:public
hostapd_radius_server::bad_authenticators	src/radius/radius_client.h	/^	u32 bad_authenticators;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::index	src/radius/radius_client.h	/^	int index;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::malformed_responses	src/radius/radius_client.h	/^	u32 malformed_responses;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::packets_dropped	src/radius/radius_client.h	/^	u32 packets_dropped;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::port	src/radius/radius_client.h	/^	int port;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::requests	src/radius/radius_client.h	/^	u32 requests;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::responses	src/radius/radius_client.h	/^	u32 responses;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::retransmissions	src/radius/radius_client.h	/^	u32 retransmissions;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::round_trip_time	src/radius/radius_client.h	/^	int round_trip_time;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::shared_secret	src/radius/radius_client.h	/^	u8 *shared_secret;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::shared_secret_len	src/radius/radius_client.h	/^	size_t shared_secret_len;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::timeouts	src/radius/radius_client.h	/^	u32 timeouts;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_server::unknown_types	src/radius/radius_client.h	/^	u32 unknown_types;$/;"	m	struct:hostapd_radius_server	access:public
hostapd_radius_servers	src/radius/radius_client.h	/^struct hostapd_radius_servers {$/;"	s
hostapd_radius_servers::acct_server	src/radius/radius_client.h	/^	struct hostapd_radius_server *acct_server;$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
hostapd_radius_servers::acct_servers	src/radius/radius_client.h	/^	struct hostapd_radius_server *acct_servers; \/\/ radius计费服务器信息管理块$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
hostapd_radius_servers::auth_server	src/radius/radius_client.h	/^	struct hostapd_radius_server *auth_server;$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
hostapd_radius_servers::auth_servers	src/radius/radius_client.h	/^	struct hostapd_radius_server *auth_servers; \/\/ radius认证服务器信息管理块数组$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_radius_server	access:public
hostapd_radius_servers::client_addr	src/radius/radius_client.h	/^	struct hostapd_ip_addr client_addr;$/;"	m	struct:hostapd_radius_servers	typeref:struct:hostapd_radius_servers::hostapd_ip_addr	access:public
hostapd_radius_servers::force_client_addr	src/radius/radius_client.h	/^	int force_client_addr;$/;"	m	struct:hostapd_radius_servers	access:public
hostapd_radius_servers::msg_dumps	src/radius/radius_client.h	/^	int msg_dumps;$/;"	m	struct:hostapd_radius_servers	access:public
hostapd_radius_servers::num_acct_servers	src/radius/radius_client.h	/^	int num_acct_servers;$/;"	m	struct:hostapd_radius_servers	access:public
hostapd_radius_servers::num_auth_servers	src/radius/radius_client.h	/^	int num_auth_servers;$/;"	m	struct:hostapd_radius_servers	access:public
hostapd_radius_servers::retry_primary_interval	src/radius/radius_client.h	/^	int retry_primary_interval;$/;"	m	struct:hostapd_radius_servers	access:public
hostapd_rate_data	src/ap/hostapd.h	/^struct hostapd_rate_data {$/;"	s
hostapd_rate_data::flags	src/ap/hostapd.h	/^	int flags; \/* HOSTAPD_RATE_ flags *\/$/;"	m	struct:hostapd_rate_data	access:public
hostapd_rate_data::rate	src/ap/hostapd.h	/^	int rate; \/* rate in 100 kbps *\/$/;"	m	struct:hostapd_rate_data	access:public
hostapd_rate_found	src/ap/ap_config.c	/^int hostapd_rate_found(int *list, int rate)$/;"	f	signature:(int *list, int rate)
hostapd_rate_found	src/ap/ap_config.h	/^int hostapd_rate_found(int *list, int rate);$/;"	p	signature:(int *list, int rate)
hostapd_reconfig_wpa	src/ap/wpa_auth_glue.c	/^void hostapd_reconfig_wpa(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_reconfig_wpa	src/ap/wpa_auth_glue.h	/^void hostapd_reconfig_wpa(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_register_probereq_cb	src/ap/hostapd.h	/^int hostapd_register_probereq_cb(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, int (*cb)(void *ctx, const u8 *sa, const u8 *da, const u8 *bssid, const u8 *ie, size_t ie_len), void *ctx)
hostapd_register_probereq_cb	src/ap/utils.c	/^int hostapd_register_probereq_cb(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, int (*cb)(void *ctx, const u8 *sa, const u8 *da, const u8 *bssid, const u8 *ie, size_t ie_len), void *ctx)
hostapd_reload_bss	src/ap/hostapd.c	/^static void hostapd_reload_bss(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_reload_config	src/ap/hostapd.c	/^int hostapd_reload_config(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_reload_config	src/ap/hostapd.h	/^int hostapd_reload_config(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_roaming_consortium	src/ap/ap_config.h	/^struct hostapd_roaming_consortium {$/;"	s
hostapd_roaming_consortium::len	src/ap/ap_config.h	/^	u8 len;$/;"	m	struct:hostapd_roaming_consortium	access:public
hostapd_roaming_consortium::oi	src/ap/ap_config.h	/^	u8 oi[MAX_ROAMING_CONSORTIUM_LEN];$/;"	m	struct:hostapd_roaming_consortium	access:public
hostapd_rrb_receive	src/ap/wpa_auth_glue.c	/^static void hostapd_rrb_receive(void *ctx, const u8 *src_addr, const u8 *buf,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
hostapd_rx_action	src/ap/drv_callbacks.c	/^static void hostapd_rx_action(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct rx_action *rx_action)
hostapd_rx_from_unknown_sta	src/ap/drv_callbacks.c	/^static void hostapd_rx_from_unknown_sta(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *bssid, const u8 *addr, int wds)
hostapd_rx_req_put_wlan_response	src/ap/wps_hostapd.c	/^static int hostapd_rx_req_put_wlan_response($/;"	f	file:	signature:( void *priv, enum upnp_wps_wlanevent_type ev_type, const u8 *mac_addr, const struct wpabuf *msg, enum wps_msg_type msg_type)
hostapd_sa_query_action	src/ap/ieee802_11.c	/^static void hostapd_sa_query_action(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
hostapd_select_hw_mode	src/ap/hw_features.c	/^int hostapd_select_hw_mode(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_select_hw_mode	src/ap/hw_features.h	/^int hostapd_select_hw_mode(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_select_hw_mode	src/ap/hw_features.h	/^static inline int hostapd_select_hw_mode(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_set_ap_wps_ie	src/ap/ap_drv_ops.c	/^int hostapd_set_ap_wps_ie(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_set_ap_wps_ie	src/ap/ap_drv_ops.h	/^int hostapd_set_ap_wps_ie(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_set_authorized	src/ap/ap_drv_ops.c	/^int hostapd_set_authorized(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int authorized)
hostapd_set_authorized	src/ap/ap_drv_ops.h	/^int hostapd_set_authorized(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int authorized)
hostapd_set_country	src/ap/ap_drv_ops.c	/^int hostapd_set_country(struct hostapd_data *hapd, const char *country)$/;"	f	signature:(struct hostapd_data *hapd, const char *country)
hostapd_set_country	src/ap/ap_drv_ops.h	/^int hostapd_set_country(struct hostapd_data *hapd, const char *country);$/;"	p	signature:(struct hostapd_data *hapd, const char *country)
hostapd_set_drv_ieee8021x	src/ap/ap_drv_ops.c	/^int hostapd_set_drv_ieee8021x(struct hostapd_data *hapd, const char *ifname,$/;"	f	signature:(struct hostapd_data *hapd, const char *ifname, int enabled)
hostapd_set_drv_ieee8021x	src/ap/ap_drv_ops.h	/^int hostapd_set_drv_ieee8021x(struct hostapd_data *hapd, const char *ifname,$/;"	p	signature:(struct hostapd_data *hapd, const char *ifname, int enabled)
hostapd_set_frag	src/ap/ap_drv_ops.c	/^int hostapd_set_frag(struct hostapd_data *hapd, int frag)$/;"	f	signature:(struct hostapd_data *hapd, int frag)
hostapd_set_frag	src/ap/ap_drv_ops.h	/^int hostapd_set_frag(struct hostapd_data *hapd, int frag);$/;"	p	signature:(struct hostapd_data *hapd, int frag)
hostapd_set_freq	src/ap/ap_drv_ops.c	/^int hostapd_set_freq(struct hostapd_data *hapd, int mode, int freq,$/;"	f	signature:(struct hostapd_data *hapd, int mode, int freq, int channel, int ht_enabled, int sec_channel_offset)
hostapd_set_freq	src/ap/ap_drv_ops.h	/^int hostapd_set_freq(struct hostapd_data *hapd, int mode, int freq,$/;"	p	signature:(struct hostapd_data *hapd, int mode, int freq, int channel, int ht_enabled, int sec_channel_offset)
hostapd_set_generic_elem	src/ap/ap_drv_ops.c	/^int hostapd_set_generic_elem(struct hostapd_data *hapd, const u8 *elem,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *elem, size_t elem_len)
hostapd_set_generic_elem	src/ap/ap_drv_ops.h	/^int hostapd_set_generic_elem(struct hostapd_data *hapd, const u8 *elem,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *elem, size_t elem_len)
hostapd_set_ieee8021x	src/ap/ap_drv_ops.c	/^int hostapd_set_ieee8021x(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct wpa_bss_params *params)
hostapd_set_ieee8021x	src/ap/ap_drv_ops.h	/^int hostapd_set_ieee8021x(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct wpa_bss_params *params)
hostapd_set_privacy	src/ap/ap_drv_ops.c	/^int hostapd_set_privacy(struct hostapd_data *hapd, int enabled)$/;"	f	signature:(struct hostapd_data *hapd, int enabled)
hostapd_set_privacy	src/ap/ap_drv_ops.h	/^int hostapd_set_privacy(struct hostapd_data *hapd, int enabled);$/;"	p	signature:(struct hostapd_data *hapd, int enabled)
hostapd_set_rate_sets	src/ap/ap_drv_ops.c	/^int hostapd_set_rate_sets(struct hostapd_data *hapd, int *supp_rates,$/;"	f	signature:(struct hostapd_data *hapd, int *supp_rates, int *basic_rates, int mode)
hostapd_set_rate_sets	src/ap/ap_drv_ops.h	/^int hostapd_set_rate_sets(struct hostapd_data *hapd, int *supp_rates,$/;"	p	signature:(struct hostapd_data *hapd, int *supp_rates, int *basic_rates, int mode)
hostapd_set_rts	src/ap/ap_drv_ops.c	/^int hostapd_set_rts(struct hostapd_data *hapd, int rts)$/;"	f	signature:(struct hostapd_data *hapd, int rts)
hostapd_set_rts	src/ap/ap_drv_ops.h	/^int hostapd_set_rts(struct hostapd_data *hapd, int rts);$/;"	p	signature:(struct hostapd_data *hapd, int rts)
hostapd_set_ssid	src/ap/ap_drv_ops.c	/^int hostapd_set_ssid(struct hostapd_data *hapd, const u8 *buf, size_t len)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len)
hostapd_set_ssid	src/ap/ap_drv_ops.h	/^int hostapd_set_ssid(struct hostapd_data *hapd, const u8 *buf, size_t len);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len)
hostapd_set_sta_flags	src/ap/ap_drv_ops.c	/^int hostapd_set_sta_flags(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
hostapd_set_sta_flags	src/ap/ap_drv_ops.h	/^int hostapd_set_sta_flags(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
hostapd_set_tx_queue_params	src/ap/ap_drv_ops.c	/^int hostapd_set_tx_queue_params(struct hostapd_data *hapd, int queue, int aifs,$/;"	f	signature:(struct hostapd_data *hapd, int queue, int aifs, int cw_min, int cw_max, int burst_time)
hostapd_set_tx_queue_params	src/ap/ap_drv_ops.h	/^int hostapd_set_tx_queue_params(struct hostapd_data *hapd, int queue, int aifs,$/;"	p	signature:(struct hostapd_data *hapd, int queue, int aifs, int cw_min, int cw_max, int burst_time)
hostapd_set_wds_sta	src/ap/ap_drv_ops.c	/^int hostapd_set_wds_sta(struct hostapd_data *hapd, const u8 *addr, int aid,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, int aid, int val)
hostapd_set_wds_sta	src/ap/ap_drv_ops.h	/^int hostapd_set_wds_sta(struct hostapd_data *hapd, const u8 *addr, int aid,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, int aid, int val)
hostapd_setup_bss	src/ap/hostapd.c	/^static int hostapd_setup_bss(struct hostapd_data *hapd, int first)$/;"	f	file:	signature:(struct hostapd_data *hapd, int first)
hostapd_setup_encryption	src/ap/hostapd.c	/^static int hostapd_setup_encryption(char *iface, struct hostapd_data *hapd)$/;"	f	file:	signature:(char *iface, struct hostapd_data *hapd)
hostapd_setup_encryption	src/ap/hostapd.c	/^static int hostapd_setup_encryption(char *iface, struct hostapd_data *hapd);$/;"	p	file:	signature:(char *iface, struct hostapd_data *hapd)
hostapd_setup_interface	src/ap/hostapd.c	/^int hostapd_setup_interface(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
hostapd_setup_interface	src/ap/hostapd.h	/^int hostapd_setup_interface(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
hostapd_setup_interface_complete	src/ap/hostapd.c	/^int hostapd_setup_interface_complete(struct hostapd_iface *iface, int err)$/;"	f	signature:(struct hostapd_iface *iface, int err)
hostapd_setup_interface_complete	src/ap/hostapd.h	/^int hostapd_setup_interface_complete(struct hostapd_iface *iface, int err);$/;"	p	signature:(struct hostapd_iface *iface, int err)
hostapd_setup_radius_srv	src/ap/authsrv.c	/^static int hostapd_setup_radius_srv(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_setup_wpa	src/ap/wpa_auth_glue.c	/^int hostapd_setup_wpa(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_setup_wpa	src/ap/wpa_auth_glue.h	/^int hostapd_setup_wpa(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_setup_wpa_psk	src/ap/ap_config.c	/^int hostapd_setup_wpa_psk(struct hostapd_bss_config *conf)$/;"	f	signature:(struct hostapd_bss_config *conf)
hostapd_setup_wpa_psk	src/ap/ap_config.h	/^int hostapd_setup_wpa_psk(struct hostapd_bss_config *conf);$/;"	p	signature:(struct hostapd_bss_config *conf)
hostapd_sim_db_cb	src/ap/authsrv.c	/^static void hostapd_sim_db_cb(void *ctx, void *session_ctx)$/;"	f	file:	signature:(void *ctx, void *session_ctx)
hostapd_sim_db_cb_sta	src/ap/authsrv.c	/^static int hostapd_sim_db_cb_sta(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, void *ctx)
hostapd_ssid	src/ap/ap_config.h	/^struct hostapd_ssid {$/;"	s
hostapd_ssid::dyn_vlan_keys	src/ap/ap_config.h	/^	struct hostapd_wep_keys **dyn_vlan_keys;$/;"	m	struct:hostapd_ssid	typeref:struct:hostapd_ssid::hostapd_wep_keys	access:public
hostapd_ssid::dynamic_vlan	src/ap/ap_config.h	/^	int dynamic_vlan;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::max_dyn_vlan_keys	src/ap/ap_config.h	/^	size_t max_dyn_vlan_keys;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::security_policy	src/ap/ap_config.h	/^	secpolicy security_policy;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::ssid	src/ap/ap_config.h	/^	char ssid[HOSTAPD_MAX_SSID_LEN + 1];$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::ssid_len	src/ap/ap_config.h	/^	size_t ssid_len;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::ssid_set	src/ap/ap_config.h	/^	int ssid_set;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::vlan	src/ap/ap_config.h	/^	char vlan[IFNAMSIZ + 1];$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::vlan_tagged_interface	src/ap/ap_config.h	/^	char *vlan_tagged_interface;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::wep	src/ap/ap_config.h	/^	struct hostapd_wep_keys wep;$/;"	m	struct:hostapd_ssid	typeref:struct:hostapd_ssid::hostapd_wep_keys	access:public
hostapd_ssid::wpa_passphrase	src/ap/ap_config.h	/^	char *wpa_passphrase;$/;"	m	struct:hostapd_ssid	access:public
hostapd_ssid::wpa_psk	src/ap/ap_config.h	/^	struct hostapd_wpa_psk *wpa_psk;$/;"	m	struct:hostapd_ssid	typeref:struct:hostapd_ssid::hostapd_wpa_psk	access:public
hostapd_ssid::wpa_psk_file	src/ap/ap_config.h	/^	char *wpa_psk_file;$/;"	m	struct:hostapd_ssid	access:public
hostapd_sta_add	src/ap/ap_drv_ops.c	/^int hostapd_sta_add(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, u16 aid, u16 capability, const u8 *supp_rates, size_t supp_rates_len, u16 listen_interval, const struct ieee80211_ht_capabilities *ht_capab, u32 flags)
hostapd_sta_add	src/ap/ap_drv_ops.h	/^int hostapd_sta_add(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, u16 aid, u16 capability, const u8 *supp_rates, size_t supp_rates_len, u16 listen_interval, const struct ieee80211_ht_capabilities *ht_capab, u32 flags)
hostapd_sta_add_params	src/drivers/driver.h	/^struct hostapd_sta_add_params {$/;"	s
hostapd_sta_add_params::addr	src/drivers/driver.h	/^	const u8 *addr;$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::aid	src/drivers/driver.h	/^	u16 aid;$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::capability	src/drivers/driver.h	/^	u16 capability;$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::flags	src/drivers/driver.h	/^	u32 flags; \/* bitmask of WPA_STA_* flags *\/$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::ht_capabilities	src/drivers/driver.h	/^	const struct ieee80211_ht_capabilities *ht_capabilities;$/;"	m	struct:hostapd_sta_add_params	typeref:struct:hostapd_sta_add_params::ieee80211_ht_capabilities	access:public
hostapd_sta_add_params::listen_interval	src/drivers/driver.h	/^	u16 listen_interval;$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::set	src/drivers/driver.h	/^	int set; \/* Set STA parameters instead of add *\/$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::supp_rates	src/drivers/driver.h	/^	const u8 *supp_rates;$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_add_params::supp_rates_len	src/drivers/driver.h	/^	size_t supp_rates_len;$/;"	m	struct:hostapd_sta_add_params	access:public
hostapd_sta_assoc	src/ap/ap_drv_ops.c	/^int hostapd_sta_assoc(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, int reassoc, u16 status, const u8 *ie, size_t len)
hostapd_sta_assoc	src/ap/ap_drv_ops.h	/^int hostapd_sta_assoc(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, int reassoc, u16 status, const u8 *ie, size_t len)
hostapd_sta_auth	src/ap/ap_drv_ops.c	/^int hostapd_sta_auth(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, u16 seq, u16 status, const u8 *ie, size_t len)
hostapd_sta_auth	src/ap/ap_drv_ops.h	/^int hostapd_sta_auth(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, u16 seq, u16 status, const u8 *ie, size_t len)
hostapd_sta_flags_to_drv	src/ap/ap_drv_ops.c	/^u32 hostapd_sta_flags_to_drv(u32 flags)$/;"	f	signature:(u32 flags)
hostapd_sta_flags_to_drv	src/ap/ap_drv_ops.h	/^u32 hostapd_sta_flags_to_drv(u32 flags);$/;"	p	signature:(u32 flags)
hostapd_sta_set_flags	src/ap/ap_drv_ops.c	/^int hostapd_sta_set_flags(struct hostapd_data *hapd, u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, u8 *addr, int total_flags, int flags_or, int flags_and)
hostapd_sta_set_flags	src/ap/ap_drv_ops.h	/^int hostapd_sta_set_flags(struct hostapd_data *hapd, u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, u8 *addr, int total_flags, int flags_or, int flags_and)
hostapd_tx_queue_params	src/ap/ap_config.h	/^struct hostapd_tx_queue_params {$/;"	s
hostapd_tx_queue_params	src/ap/hostapd.c	/^static void hostapd_tx_queue_params(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_tx_queue_params::aifs	src/ap/ap_config.h	/^	int aifs;$/;"	m	struct:hostapd_tx_queue_params	access:public
hostapd_tx_queue_params::burst	src/ap/ap_config.h	/^	int burst; \/* maximum burst time in 0.1 ms, i.e., 10 = 1 ms *\/$/;"	m	struct:hostapd_tx_queue_params	access:public
hostapd_tx_queue_params::cwmax	src/ap/ap_config.h	/^	int cwmax;$/;"	m	struct:hostapd_tx_queue_params	access:public
hostapd_tx_queue_params::cwmin	src/ap/ap_config.h	/^	int cwmin;$/;"	m	struct:hostapd_tx_queue_params	access:public
hostapd_tx_status	src/ap/ieee802_11.c	/^void hostapd_tx_status(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *buf, size_t len, int ack)
hostapd_tx_status	src/ap/ieee802_11.h	/^void hostapd_tx_status(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *buf, size_t len, int ack)
hostapd_update_time_adv	src/ap/ieee802_11.h	/^int hostapd_update_time_adv(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_update_time_adv	src/ap/ieee802_11_shared.c	/^int hostapd_update_time_adv(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_update_wps	src/ap/wps_hostapd.c	/^void hostapd_update_wps(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_update_wps	src/ap/wps_hostapd.h	/^static inline void hostapd_update_wps(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_update_wps	src/ap/wps_hostapd.h	/^void hostapd_update_wps(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_validate_bssid_configuration	src/ap/hostapd.c	/^static int hostapd_validate_bssid_configuration(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
hostapd_vlan	src/ap/ap_config.h	/^struct hostapd_vlan {$/;"	s
hostapd_vlan::clean	src/ap/ap_config.h	/^	int clean;$/;"	m	struct:hostapd_vlan	access:public
hostapd_vlan::dynamic_vlan	src/ap/ap_config.h	/^	int dynamic_vlan;$/;"	m	struct:hostapd_vlan	access:public
hostapd_vlan::ifname	src/ap/ap_config.h	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:hostapd_vlan	access:public
hostapd_vlan::next	src/ap/ap_config.h	/^	struct hostapd_vlan *next;$/;"	m	struct:hostapd_vlan	typeref:struct:hostapd_vlan::hostapd_vlan	access:public
hostapd_vlan::vlan_id	src/ap/ap_config.h	/^	int vlan_id; \/* VLAN ID or -1 (VLAN_ID_WILDCARD) for wildcard entry *\/$/;"	m	struct:hostapd_vlan	access:public
hostapd_vlan_if_add	src/ap/ap_drv_ops.c	/^int hostapd_vlan_if_add(struct hostapd_data *hapd, const char *ifname)$/;"	f	signature:(struct hostapd_data *hapd, const char *ifname)
hostapd_vlan_if_add	src/ap/ap_drv_ops.h	/^int hostapd_vlan_if_add(struct hostapd_data *hapd, const char *ifname);$/;"	p	signature:(struct hostapd_data *hapd, const char *ifname)
hostapd_vlan_if_remove	src/ap/ap_drv_ops.c	/^int hostapd_vlan_if_remove(struct hostapd_data *hapd, const char *ifname)$/;"	f	signature:(struct hostapd_data *hapd, const char *ifname)
hostapd_vlan_if_remove	src/ap/ap_drv_ops.h	/^int hostapd_vlan_if_remove(struct hostapd_data *hapd, const char *ifname);$/;"	p	signature:(struct hostapd_data *hapd, const char *ifname)
hostapd_wep_key_cmp	src/ap/ap_config.c	/^int hostapd_wep_key_cmp(struct hostapd_wep_keys *a, struct hostapd_wep_keys *b)$/;"	f	signature:(struct hostapd_wep_keys *a, struct hostapd_wep_keys *b)
hostapd_wep_key_cmp	src/ap/ap_config.h	/^int hostapd_wep_key_cmp(struct hostapd_wep_keys *a,$/;"	p	signature:(struct hostapd_wep_keys *a, struct hostapd_wep_keys *b)
hostapd_wep_keys	src/ap/ap_config.h	/^struct hostapd_wep_keys {$/;"	s
hostapd_wep_keys::default_len	src/ap/ap_config.h	/^	size_t default_len; \/* key length used for dynamic key generation *\/$/;"	m	struct:hostapd_wep_keys	access:public
hostapd_wep_keys::idx	src/ap/ap_config.h	/^	u8 idx;$/;"	m	struct:hostapd_wep_keys	access:public
hostapd_wep_keys::key	src/ap/ap_config.h	/^	u8 *key[NUM_WEP_KEYS];$/;"	m	struct:hostapd_wep_keys	access:public
hostapd_wep_keys::keys_set	src/ap/ap_config.h	/^	int keys_set;$/;"	m	struct:hostapd_wep_keys	access:public
hostapd_wep_keys::len	src/ap/ap_config.h	/^	size_t len[NUM_WEP_KEYS];$/;"	m	struct:hostapd_wep_keys	access:public
hostapd_wireless_event_rtm_newlink	src/drivers/driver_hostap.c	/^static void hostapd_wireless_event_rtm_newlink(void *ctx,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
hostapd_wireless_event_wireless	src/drivers/driver_hostap.c	/^static void hostapd_wireless_event_wireless(struct hostap_driver_data *drv,$/;"	f	file:	signature:(struct hostap_driver_data *drv, char *data, int len)
hostapd_wireless_event_wireless_custom	src/drivers/driver_hostap.c	/^hostapd_wireless_event_wireless_custom(struct hostap_driver_data *drv,$/;"	f	file:	signature:(struct hostap_driver_data *drv, char *custom)
hostapd_wmm_ac_params	src/ap/ap_config.h	/^struct hostapd_wmm_ac_params {$/;"	s
hostapd_wmm_ac_params::admission_control_mandatory	src/ap/ap_config.h	/^	int admission_control_mandatory;$/;"	m	struct:hostapd_wmm_ac_params	access:public
hostapd_wmm_ac_params::aifs	src/ap/ap_config.h	/^	int aifs;$/;"	m	struct:hostapd_wmm_ac_params	access:public
hostapd_wmm_ac_params::cwmax	src/ap/ap_config.h	/^	int cwmax;$/;"	m	struct:hostapd_wmm_ac_params	access:public
hostapd_wmm_ac_params::cwmin	src/ap/ap_config.h	/^	int cwmin;$/;"	m	struct:hostapd_wmm_ac_params	access:public
hostapd_wmm_ac_params::txop_limit	src/ap/ap_config.h	/^	int txop_limit; \/* in units of 32us *\/$/;"	m	struct:hostapd_wmm_ac_params	access:public
hostapd_wmm_action	src/ap/wmm.c	/^void hostapd_wmm_action(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
hostapd_wmm_action	src/ap/wmm.h	/^void hostapd_wmm_action(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, size_t len)
hostapd_wpa_auth_add_sta	src/ap/wpa_auth_glue.c	/^hostapd_wpa_auth_add_sta(void *ctx, const u8 *sta_addr)$/;"	f	file:	signature:(void *ctx, const u8 *sta_addr)
hostapd_wpa_auth_conf	src/ap/wpa_auth_glue.c	/^static void hostapd_wpa_auth_conf(struct hostapd_bss_config *conf,$/;"	f	file:	signature:(struct hostapd_bss_config *conf, struct wpa_auth_config *wconf)
hostapd_wpa_auth_disconnect	src/ap/wpa_auth_glue.c	/^static void hostapd_wpa_auth_disconnect(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, u16 reason)
hostapd_wpa_auth_for_each_auth	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_for_each_auth($/;"	f	file:	signature:( void *ctx, int (*cb)(struct wpa_authenticator *sm, void *ctx), void *cb_ctx)
hostapd_wpa_auth_for_each_sta	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_for_each_sta($/;"	f	file:	signature:( void *ctx, int (*cb)(struct wpa_state_machine *sm, void *ctx), void *cb_ctx)
hostapd_wpa_auth_ft_iter	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_ft_iter(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
hostapd_wpa_auth_get_eapol	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_get_eapol(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, wpa_eapol_variable var)
hostapd_wpa_auth_get_msk	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_get_msk(void *ctx, const u8 *addr, u8 *msk,$/;"	f	file:	signature:(void *ctx, const u8 *addr, u8 *msk, size_t *len)
hostapd_wpa_auth_get_psk	src/ap/wpa_auth_glue.c	/^static const u8 * hostapd_wpa_auth_get_psk(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, const u8 *prev_psk)
hostapd_wpa_auth_get_seqnum	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_get_seqnum(void *ctx, const u8 *addr, int idx,$/;"	f	file:	signature:(void *ctx, const u8 *addr, int idx, u8 *seq)
hostapd_wpa_auth_logger	src/ap/wpa_auth_glue.c	/^static void hostapd_wpa_auth_logger(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, logger_level level, const char *txt)
hostapd_wpa_auth_mic_failure_report	src/ap/wpa_auth_glue.c	/^static void hostapd_wpa_auth_mic_failure_report(void *ctx, const u8 *addr)$/;"	f	file:	signature:(void *ctx, const u8 *addr)
hostapd_wpa_auth_send_eapol	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_send_eapol(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, const u8 *data, size_t data_len, int encrypt)
hostapd_wpa_auth_send_ether	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_send_ether(void *ctx, const u8 *dst, u16 proto,$/;"	f	file:	signature:(void *ctx, const u8 *dst, u16 proto, const u8 *data, size_t data_len)
hostapd_wpa_auth_send_ft_action	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_send_ft_action(void *ctx, const u8 *dst,$/;"	f	file:	signature:(void *ctx, const u8 *dst, const u8 *data, size_t data_len)
hostapd_wpa_auth_set_eapol	src/ap/wpa_auth_glue.c	/^static void hostapd_wpa_auth_set_eapol(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, wpa_eapol_variable var, int value)
hostapd_wpa_auth_set_key	src/ap/wpa_auth_glue.c	/^static int hostapd_wpa_auth_set_key(void *ctx, int vlan_id, enum wpa_alg alg,$/;"	f	file:	signature:(void *ctx, int vlan_id, enum wpa_alg alg, const u8 *addr, int idx, u8 *key, size_t key_len)
hostapd_wpa_psk	src/ap/ap_config.h	/^struct hostapd_wpa_psk {$/;"	s
hostapd_wpa_psk::addr	src/ap/ap_config.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:hostapd_wpa_psk	access:public
hostapd_wpa_psk::group	src/ap/ap_config.h	/^	int group;$/;"	m	struct:hostapd_wpa_psk	access:public
hostapd_wpa_psk::next	src/ap/ap_config.h	/^	struct hostapd_wpa_psk *next;$/;"	m	struct:hostapd_wpa_psk	typeref:struct:hostapd_wpa_psk::hostapd_wpa_psk	access:public
hostapd_wpa_psk::psk	src/ap/ap_config.h	/^	u8 psk[PMK_LEN];$/;"	m	struct:hostapd_wpa_psk	access:public
hostapd_wps_add_pin	src/ap/wps_hostapd.c	/^int hostapd_wps_add_pin(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, const char *uuid, const char *pin, int timeout)
hostapd_wps_add_pin	src/ap/wps_hostapd.h	/^int hostapd_wps_add_pin(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, const char *uuid, const char *pin, int timeout)
hostapd_wps_ap_pin_disable	src/ap/wps_hostapd.c	/^void hostapd_wps_ap_pin_disable(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_wps_ap_pin_disable	src/ap/wps_hostapd.h	/^void hostapd_wps_ap_pin_disable(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_wps_ap_pin_enable	src/ap/wps_hostapd.c	/^static void hostapd_wps_ap_pin_enable(struct hostapd_data *hapd, int timeout)$/;"	f	file:	signature:(struct hostapd_data *hapd, int timeout)
hostapd_wps_ap_pin_get	src/ap/wps_hostapd.c	/^const char * hostapd_wps_ap_pin_get(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_wps_ap_pin_get	src/ap/wps_hostapd.h	/^const char * hostapd_wps_ap_pin_get(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_wps_ap_pin_random	src/ap/wps_hostapd.c	/^const char * hostapd_wps_ap_pin_random(struct hostapd_data *hapd, int timeout)$/;"	f	signature:(struct hostapd_data *hapd, int timeout)
hostapd_wps_ap_pin_random	src/ap/wps_hostapd.h	/^const char * hostapd_wps_ap_pin_random(struct hostapd_data *hapd, int timeout);$/;"	p	signature:(struct hostapd_data *hapd, int timeout)
hostapd_wps_ap_pin_set	src/ap/wps_hostapd.c	/^int hostapd_wps_ap_pin_set(struct hostapd_data *hapd, const char *pin,$/;"	f	signature:(struct hostapd_data *hapd, const char *pin, int timeout)
hostapd_wps_ap_pin_set	src/ap/wps_hostapd.h	/^int hostapd_wps_ap_pin_set(struct hostapd_data *hapd, const char *pin,$/;"	p	signature:(struct hostapd_data *hapd, const char *pin, int timeout)
hostapd_wps_ap_pin_success	src/ap/wps_hostapd.c	/^static void hostapd_wps_ap_pin_success(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_wps_ap_pin_timeout	src/ap/wps_hostapd.c	/^static void hostapd_wps_ap_pin_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
hostapd_wps_ap_pin_timeout	src/ap/wps_hostapd.c	/^static void hostapd_wps_ap_pin_timeout(void *eloop_data, void *user_ctx);$/;"	p	file:	signature:(void *eloop_data, void *user_ctx)
hostapd_wps_button_pushed	src/ap/wps_hostapd.c	/^int hostapd_wps_button_pushed(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *p2p_dev_addr)
hostapd_wps_button_pushed	src/ap/wps_hostapd.h	/^int hostapd_wps_button_pushed(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *p2p_dev_addr)
hostapd_wps_button_pushed	src/ap/wps_hostapd.h	/^static inline int hostapd_wps_button_pushed(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *p2p_dev_addr)
hostapd_wps_clear_ies	src/ap/wps_hostapd.c	/^static void hostapd_wps_clear_ies(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_wps_config_ap	src/ap/wps_hostapd.c	/^int hostapd_wps_config_ap(struct hostapd_data *hapd, const char *ssid,$/;"	f	signature:(struct hostapd_data *hapd, const char *ssid, const char *auth, const char *encr, const char *key)
hostapd_wps_config_ap	src/ap/wps_hostapd.h	/^int hostapd_wps_config_ap(struct hostapd_data *hapd, const char *ssid,$/;"	p	signature:(struct hostapd_data *hapd, const char *ssid, const char *auth, const char *encr, const char *key)
hostapd_wps_cred_cb	src/ap/wps_hostapd.c	/^static int hostapd_wps_cred_cb(void *ctx, const struct wps_credential *cred)$/;"	f	file:	signature:(void *ctx, const struct wps_credential *cred)
hostapd_wps_enrollee_seen_cb	src/ap/wps_hostapd.c	/^static void hostapd_wps_enrollee_seen_cb(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, const u8 *uuid_e, const u8 *pri_dev_type, u16 config_methods, u16 dev_password_id, u8 request_type, const char *dev_name)
hostapd_wps_event_cb	src/ap/wps_hostapd.c	/^static void hostapd_wps_event_cb(void *ctx, enum wps_event event,$/;"	f	file:	signature:(void *ctx, enum wps_event event, union wps_event_data *data)
hostapd_wps_event_fail	src/ap/wps_hostapd.c	/^static void hostapd_wps_event_fail(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wps_event_fail *fail)
hostapd_wps_for_each	src/ap/wps_hostapd.c	/^static int hostapd_wps_for_each(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, int (*func)(struct hostapd_data *h, void *ctx), void *ctx)
hostapd_wps_get_mib_sta	src/ap/wps_hostapd.c	/^int hostapd_wps_get_mib_sta(struct hostapd_data *hapd, const u8 *addr,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, char *buf, size_t buflen)
hostapd_wps_get_mib_sta	src/ap/wps_hostapd.h	/^int hostapd_wps_get_mib_sta(struct hostapd_data *hapd, const u8 *addr,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, char *buf, size_t buflen)
hostapd_wps_get_mib_sta	src/ap/wps_hostapd.h	/^static inline int hostapd_wps_get_mib_sta(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, char *buf, size_t buflen)
hostapd_wps_new_psk_cb	src/ap/wps_hostapd.c	/^static int hostapd_wps_new_psk_cb(void *ctx, const u8 *mac_addr, const u8 *psk,$/;"	f	file:	signature:(void *ctx, const u8 *mac_addr, const u8 *psk, size_t psk_len)
hostapd_wps_pin_needed_cb	src/ap/wps_hostapd.c	/^static void hostapd_wps_pin_needed_cb(void *ctx, const u8 *uuid_e,$/;"	f	file:	signature:(void *ctx, const u8 *uuid_e, const struct wps_device_data *dev)
hostapd_wps_probe_req_rx	src/ap/wps_hostapd.c	/^static int hostapd_wps_probe_req_rx(void *ctx, const u8 *addr, const u8 *da,$/;"	f	file:	signature:(void *ctx, const u8 *addr, const u8 *da, const u8 *bssid, const u8 *ie, size_t ie_len)
hostapd_wps_probe_req_rx	src/ap/wps_hostapd.c	/^static int hostapd_wps_probe_req_rx(void *ctx, const u8 *addr, const u8 *da,$/;"	p	file:	signature:(void *ctx, const u8 *addr, const u8 *da, const u8 *bssid, const u8 *ie, size_t ie_len)
hostapd_wps_reenable_ap_pin	src/ap/wps_hostapd.c	/^static void hostapd_wps_reenable_ap_pin(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
hostapd_wps_reg_success_cb	src/ap/wps_hostapd.c	/^static void hostapd_wps_reg_success_cb(void *ctx, const u8 *mac_addr,$/;"	f	file:	signature:(void *ctx, const u8 *mac_addr, const u8 *uuid_e)
hostapd_wps_set_ie_cb	src/ap/wps_hostapd.c	/^static int hostapd_wps_set_ie_cb(void *ctx, struct wpabuf *beacon_ie,$/;"	f	file:	signature:(void *ctx, struct wpabuf *beacon_ie, struct wpabuf *probe_resp_ie)
hostapd_wps_set_vendor_ext	src/ap/wps_hostapd.c	/^static int hostapd_wps_set_vendor_ext(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wps_context *wps)
hostapd_wps_start_oob	src/ap/wps_hostapd.c	/^int hostapd_wps_start_oob(struct hostapd_data *hapd, char *device_type,$/;"	f	signature:(struct hostapd_data *hapd, char *device_type, char *path, char *method, char *name)
hostapd_wps_start_oob	src/ap/wps_hostapd.h	/^int hostapd_wps_start_oob(struct hostapd_data *hapd, char *device_type,$/;"	p	signature:(struct hostapd_data *hapd, char *device_type, char *path, char *method, char *name)
hostapd_wps_update_ie	src/ap/wps_hostapd.c	/^void hostapd_wps_update_ie(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
hostapd_wps_update_ie	src/ap/wps_hostapd.h	/^void hostapd_wps_update_ie(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
hostapd_wps_upnp_deinit	src/ap/wps_hostapd.c	/^static void hostapd_wps_upnp_deinit(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
hostapd_wps_upnp_deinit	src/ap/wps_hostapd.c	/^static void hostapd_wps_upnp_deinit(struct hostapd_data *hapd);$/;"	p	file:	signature:(struct hostapd_data *hapd)
hostapd_wps_upnp_init	src/ap/wps_hostapd.c	/^static int hostapd_wps_upnp_init(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wps_context *wps)
hostapd_wps_upnp_init	src/ap/wps_hostapd.c	/^static int hostapd_wps_upnp_init(struct hostapd_data *hapd,$/;"	p	file:	signature:(struct hostapd_data *hapd, struct wps_context *wps)
hour	src/utils/os.h	/^	int hour; \/* 0..23 *\/$/;"	m	struct:os_tm	access:public
hread	src/wps/http_client.c	/^	struct httpread *hread;$/;"	m	struct:http_client	typeref:struct:http_client::httpread	file:	access:public
hread	src/wps/http_server.c	/^	struct httpread *hread;$/;"	m	struct:http_request	typeref:struct:http_request::httpread	file:	access:public
hsecurity	src/crypto/tls_schannel.c	/^	HMODULE hsecurity;$/;"	m	struct:tls_global	file:	access:public
ht_20mhz_set	src/ap/sta_info.h	/^	unsigned int ht_20mhz_set:1;$/;"	m	struct:sta_info	access:public
ht_capab	src/ap/ap_config.h	/^	u16 ht_capab;$/;"	m	struct:hostapd_config	access:public
ht_capab	src/drivers/driver.h	/^	u16 ht_capab;$/;"	m	struct:hostapd_hw_modes	access:public
ht_capabilities	src/ap/sta_info.h	/^	struct ieee80211_ht_capabilities *ht_capabilities;$/;"	m	struct:sta_info	typeref:struct:sta_info::ieee80211_ht_capabilities	access:public
ht_capabilities	src/common/ieee802_11_common.h	/^	const u8 *ht_capabilities;$/;"	m	struct:ieee802_11_elems	access:public
ht_capabilities	src/drivers/driver.h	/^	const struct ieee80211_ht_capabilities *ht_capabilities;$/;"	m	struct:hostapd_sta_add_params	typeref:struct:hostapd_sta_add_params::ieee80211_ht_capabilities	access:public
ht_capabilities_info	src/common/ieee802_11_defs.h	/^	le16 ht_capabilities_info;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ht_capabilities_len	src/common/ieee802_11_common.h	/^	u8 ht_capabilities_len;$/;"	m	struct:ieee802_11_elems	access:public
ht_enabled	src/drivers/driver.h	/^	int ht_enabled;$/;"	m	struct:hostapd_freq_params	access:public
ht_extended_capabilities	src/common/ieee802_11_defs.h	/^	le16 ht_extended_capabilities;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ht_op_mode	src/ap/hostapd.h	/^	u16 ht_op_mode;$/;"	m	struct:hostapd_iface	access:public
ht_op_mode_fixed	src/ap/ap_config.h	/^	int ht_op_mode_fixed;$/;"	m	struct:hostapd_config	access:public
ht_operation	src/common/ieee802_11_common.h	/^	const u8 *ht_operation;$/;"	m	struct:ieee802_11_elems	access:public
ht_operation_len	src/common/ieee802_11_common.h	/^	u8 ht_operation_len;$/;"	m	struct:ieee802_11_elems	access:public
ht_opmode	src/drivers/driver.h	/^	int ht_opmode;$/;"	m	struct:wpa_driver_ap_params	access:public
ht_param	src/common/ieee802_11_defs.h	/^	u8 ht_param;$/;"	m	struct:ieee80211_ht_operation	access:public
ht_support	src/ap/ap_list.h	/^	int ht_support;$/;"	m	struct:ap_info	access:public
http	src/wps/wps_er.h	/^	struct http_client *http;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::http_client	access:public
http	src/wps/wps_er.h	/^	struct http_client *http;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::http_client	access:public
http_client	src/wps/http_client.c	/^struct http_client {$/;"	s	file:
http_client::body	src/wps/http_client.c	/^	struct wpabuf body;$/;"	m	struct:http_client	typeref:struct:http_client::wpabuf	file:	access:public
http_client::cb	src/wps/http_client.c	/^	void (*cb)(void *ctx, struct http_client *c,$/;"	m	struct:http_client	file:	access:public
http_client::cb_ctx	src/wps/http_client.c	/^	void *cb_ctx;$/;"	m	struct:http_client	file:	access:public
http_client::dst	src/wps/http_client.c	/^	struct sockaddr_in dst;$/;"	m	struct:http_client	typeref:struct:http_client::sockaddr_in	file:	access:public
http_client::hread	src/wps/http_client.c	/^	struct httpread *hread;$/;"	m	struct:http_client	typeref:struct:http_client::httpread	file:	access:public
http_client::max_response	src/wps/http_client.c	/^	size_t max_response;$/;"	m	struct:http_client	file:	access:public
http_client::req	src/wps/http_client.c	/^	struct wpabuf *req;$/;"	m	struct:http_client	typeref:struct:http_client::wpabuf	file:	access:public
http_client::req_pos	src/wps/http_client.c	/^	size_t req_pos;$/;"	m	struct:http_client	file:	access:public
http_client::sd	src/wps/http_client.c	/^	int sd;$/;"	m	struct:http_client	file:	access:public
http_client_addr	src/wps/http_client.c	/^struct http_client * http_client_addr(struct sockaddr_in *dst,$/;"	f	signature:(struct sockaddr_in *dst, struct wpabuf *req, size_t max_response, void (*cb)(void *ctx, struct http_client *c, enum http_client_event event), void *cb_ctx)
http_client_addr	src/wps/http_client.h	/^struct http_client * http_client_addr(struct sockaddr_in *dst,$/;"	p	signature:(struct sockaddr_in *dst, struct wpabuf *req, size_t max_response, void (*cb)(void *ctx, struct http_client *c, enum http_client_event event), void *cb_ctx)
http_client_event	src/wps/http_client.h	/^enum http_client_event {$/;"	g
http_client_free	src/wps/http_client.c	/^void http_client_free(struct http_client *c)$/;"	f	signature:(struct http_client *c)
http_client_free	src/wps/http_client.h	/^void http_client_free(struct http_client *c);$/;"	p	signature:(struct http_client *c)
http_client_get_body	src/wps/http_client.c	/^struct wpabuf * http_client_get_body(struct http_client *c)$/;"	f	signature:(struct http_client *c)
http_client_get_body	src/wps/http_client.h	/^struct wpabuf * http_client_get_body(struct http_client *c);$/;"	p	signature:(struct http_client *c)
http_client_get_hdr_line	src/wps/http_client.c	/^char * http_client_get_hdr_line(struct http_client *c, const char *tag)$/;"	f	signature:(struct http_client *c, const char *tag)
http_client_get_hdr_line	src/wps/http_client.h	/^char * http_client_get_hdr_line(struct http_client *c, const char *tag);$/;"	p	signature:(struct http_client *c, const char *tag)
http_client_got_response	src/wps/http_client.c	/^static void http_client_got_response(struct httpread *handle, void *cookie,$/;"	f	file:	signature:(struct httpread *handle, void *cookie, enum httpread_event e)
http_client_timeout	src/wps/http_client.c	/^static void http_client_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
http_client_tx_ready	src/wps/http_client.c	/^static void http_client_tx_ready(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
http_client_url	src/wps/http_client.c	/^struct http_client * http_client_url(const char *url,$/;"	f	signature:(const char *url, struct wpabuf *req, size_t max_response, void (*cb)(void *ctx, struct http_client *c, enum http_client_event event), void *cb_ctx)
http_client_url	src/wps/http_client.h	/^struct http_client * http_client_url(const char *url,$/;"	p	signature:(const char *url, struct wpabuf *req, size_t max_response, void (*cb)(void *ctx, struct http_client *c, enum http_client_event event), void *cb_ctx)
http_client_url_parse	src/wps/http_client.c	/^char * http_client_url_parse(const char *url, struct sockaddr_in *dst,$/;"	f	signature:(const char *url, struct sockaddr_in *dst, char **ret_path)
http_client_url_parse	src/wps/http_client.h	/^char * http_client_url_parse(const char *url, struct sockaddr_in *dst,$/;"	p	signature:(const char *url, struct sockaddr_in *dst, char **path)
http_connection_close	src/wps/wps_upnp_web.c	/^static const char *http_connection_close =$/;"	v	file:
http_event	src/wps/wps_upnp_event.c	/^	struct http_client *http_event;$/;"	m	struct:wps_event_	typeref:struct:wps_event_::http_client	file:	access:public
http_link_update	src/wps/http_client.c	/^char * http_link_update(char *url, const char *base)$/;"	f	signature:(char *url, const char *base)
http_link_update	src/wps/http_client.h	/^char * http_link_update(char *url, const char *base);$/;"	p	signature:(char *url, const char *base)
http_port	src/wps/wps_er.h	/^	int http_port;$/;"	m	struct:wps_er	access:public
http_put_date	src/wps/wps_er.c	/^static void http_put_date(struct wpabuf *buf)$/;"	f	file:	signature:(struct wpabuf *buf)
http_put_date	src/wps/wps_upnp_web.c	/^static void http_put_date(struct wpabuf *buf)$/;"	f	file:	signature:(struct wpabuf *buf)
http_put_empty	src/wps/wps_upnp_web.c	/^static void http_put_empty(struct wpabuf *buf, enum http_reply_code code)$/;"	f	file:	signature:(struct wpabuf *buf, enum http_reply_code code)
http_put_reply_code	src/wps/wps_upnp_web.c	/^static void http_put_reply_code(struct wpabuf *buf, enum http_reply_code code)$/;"	f	file:	signature:(struct wpabuf *buf, enum http_reply_code code)
http_reply_code	src/wps/http.h	/^enum http_reply_code {$/;"	g
http_request	src/wps/http_server.c	/^struct http_request {$/;"	s	file:
http_request::cli	src/wps/http_server.c	/^	struct sockaddr_in cli;$/;"	m	struct:http_request	typeref:struct:http_request::sockaddr_in	file:	access:public
http_request::fd	src/wps/http_server.c	/^	int fd;$/;"	m	struct:http_request	file:	access:public
http_request::hread	src/wps/http_server.c	/^	struct httpread *hread;$/;"	m	struct:http_request	typeref:struct:http_request::httpread	file:	access:public
http_request::next	src/wps/http_server.c	/^	struct http_request *next;$/;"	m	struct:http_request	typeref:struct:http_request::http_request	file:	access:public
http_request::srv	src/wps/http_server.c	/^	struct http_server *srv;$/;"	m	struct:http_request	typeref:struct:http_request::http_server	file:	access:public
http_request_cb	src/wps/http_server.c	/^static void http_request_cb(struct httpread *handle, void *cookie,$/;"	f	file:	signature:(struct httpread *handle, void *cookie, enum httpread_event en)
http_request_deinit	src/wps/http_server.c	/^void http_request_deinit(struct http_request *req)$/;"	f	signature:(struct http_request *req)
http_request_deinit	src/wps/http_server.h	/^void http_request_deinit(struct http_request *req);$/;"	p	signature:(struct http_request *req)
http_request_free_all	src/wps/http_server.c	/^static void http_request_free_all(struct http_request *req)$/;"	f	file:	signature:(struct http_request *req)
http_request_get_cli_addr	src/wps/http_server.c	/^struct sockaddr_in * http_request_get_cli_addr(struct http_request *req)$/;"	f	signature:(struct http_request *req)
http_request_get_cli_addr	src/wps/http_server.h	/^struct sockaddr_in * http_request_get_cli_addr(struct http_request *req);$/;"	p	signature:(struct http_request *req)
http_request_get_data	src/wps/http_server.c	/^char * http_request_get_data(struct http_request *req)$/;"	f	signature:(struct http_request *req)
http_request_get_data	src/wps/http_server.h	/^char * http_request_get_data(struct http_request *req);$/;"	p	signature:(struct http_request *req)
http_request_get_hdr	src/wps/http_server.c	/^char * http_request_get_hdr(struct http_request *req)$/;"	f	signature:(struct http_request *req)
http_request_get_hdr	src/wps/http_server.h	/^char * http_request_get_hdr(struct http_request *req);$/;"	p	signature:(struct http_request *req)
http_request_get_hdr_line	src/wps/http_server.c	/^char * http_request_get_hdr_line(struct http_request *req, const char *tag)$/;"	f	signature:(struct http_request *req, const char *tag)
http_request_get_hdr_line	src/wps/http_server.h	/^char * http_request_get_hdr_line(struct http_request *req, const char *tag);$/;"	p	signature:(struct http_request *req, const char *tag)
http_request_get_type	src/wps/http_server.c	/^enum httpread_hdr_type http_request_get_type(struct http_request *req)$/;"	f	signature:(struct http_request *req)
http_request_get_type	src/wps/http_server.h	/^enum httpread_hdr_type http_request_get_type(struct http_request *req);$/;"	p	signature:(struct http_request *req)
http_request_get_uri	src/wps/http_server.c	/^char * http_request_get_uri(struct http_request *req)$/;"	f	signature:(struct http_request *req)
http_request_get_uri	src/wps/http_server.h	/^char * http_request_get_uri(struct http_request *req);$/;"	p	signature:(struct http_request *req)
http_request_init	src/wps/http_server.c	/^static struct http_request * http_request_init(struct http_server *srv, int fd,$/;"	f	file:	signature:(struct http_server *srv, int fd, struct sockaddr_in *cli)
http_request_send	src/wps/http_server.c	/^void http_request_send(struct http_request *req, struct wpabuf *resp)$/;"	f	signature:(struct http_request *req, struct wpabuf *resp)
http_request_send	src/wps/http_server.h	/^void http_request_send(struct http_request *req, struct wpabuf *resp);$/;"	p	signature:(struct http_request *req, struct wpabuf *resp)
http_request_send_and_deinit	src/wps/http_server.c	/^void http_request_send_and_deinit(struct http_request *req,$/;"	f	signature:(struct http_request *req, struct wpabuf *resp)
http_request_send_and_deinit	src/wps/http_server.h	/^void http_request_send_and_deinit(struct http_request *req,$/;"	p	signature:(struct http_request *req, struct wpabuf *resp)
http_server	src/wps/http_server.c	/^struct http_server {$/;"	s	file:
http_server::cb	src/wps/http_server.c	/^	void (*cb)(void *ctx, struct http_request *req);$/;"	m	struct:http_server	file:	access:public
http_server::cb_ctx	src/wps/http_server.c	/^	void *cb_ctx;$/;"	m	struct:http_server	file:	access:public
http_server::fd	src/wps/http_server.c	/^	int fd;$/;"	m	struct:http_server	file:	access:public
http_server::port	src/wps/http_server.c	/^	int port;$/;"	m	struct:http_server	file:	access:public
http_server::request_count	src/wps/http_server.c	/^	unsigned int request_count;$/;"	m	struct:http_server	file:	access:public
http_server::requests	src/wps/http_server.c	/^	struct http_request *requests;$/;"	m	struct:http_server	typeref:struct:http_server::http_request	file:	access:public
http_server_cb	src/wps/http_server.c	/^static void http_server_cb(int sd, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sd, void *eloop_ctx, void *sock_ctx)
http_server_deinit	src/wps/http_server.c	/^void http_server_deinit(struct http_server *srv)$/;"	f	signature:(struct http_server *srv)
http_server_deinit	src/wps/http_server.h	/^void http_server_deinit(struct http_server *srv);$/;"	p	signature:(struct http_server *srv)
http_server_get_port	src/wps/http_server.c	/^int http_server_get_port(struct http_server *srv)$/;"	f	signature:(struct http_server *srv)
http_server_get_port	src/wps/http_server.h	/^int http_server_get_port(struct http_server *srv);$/;"	p	signature:(struct http_server *srv)
http_server_hdr	src/wps/wps_upnp_web.c	/^static const char *http_server_hdr =$/;"	v	file:
http_server_init	src/wps/http_server.c	/^struct http_server * http_server_init(struct in_addr *addr, int port,$/;"	f	signature:(struct in_addr *addr, int port, void (*cb)(void *ctx, struct http_request *req), void *cb_ctx)
http_server_init	src/wps/http_server.h	/^struct http_server * http_server_init(struct in_addr *addr, int port,$/;"	p	signature:(struct in_addr *addr, int port, void (*cb)(void *ctx, struct http_request *req), void *cb_ctx)
http_srv	src/wps/wps_er.h	/^	struct http_server *http_srv;$/;"	m	struct:wps_er	typeref:struct:wps_er::http_server	access:public
httpread	src/wps/httpread.c	/^struct httpread {$/;"	s	file:
httpread::body	src/wps/httpread.c	/^	char *body;$/;"	m	struct:httpread	file:	access:public
httpread::body_alloc_nbytes	src/wps/httpread.c	/^	int body_alloc_nbytes;  \/* amount allocated *\/$/;"	m	struct:httpread	file:	access:public
httpread::body_nbytes	src/wps/httpread.c	/^	int body_nbytes;$/;"	m	struct:httpread	file:	access:public
httpread::cb	src/wps/httpread.c	/^	void (*cb)(struct httpread *handle, void *cookie,$/;"	m	struct:httpread	file:	access:public
httpread::chunk_size	src/wps/httpread.c	/^	int chunk_size;         \/* data of chunk (not hdr or ending CRLF)*\/$/;"	m	struct:httpread	file:	access:public
httpread::chunk_start	src/wps/httpread.c	/^	int chunk_start;        \/* offset in body of chunk hdr or data *\/$/;"	m	struct:httpread	file:	access:public
httpread::chunked	src/wps/httpread.c	/^	int chunked;            \/* nonzero for chunked data *\/$/;"	m	struct:httpread	file:	access:public
httpread::content_length	src/wps/httpread.c	/^	int content_length;     \/* body length,  iff got_content_length *\/$/;"	m	struct:httpread	file:	access:public
httpread::cookie	src/wps/httpread.c	/^	void *cookie;   \/* pass to callback *\/$/;"	m	struct:httpread	file:	access:public
httpread::got_body	src/wps/httpread.c	/^	int got_body;           \/* nonzero when body is finalized *\/$/;"	m	struct:httpread	file:	access:public
httpread::got_content_length	src/wps/httpread.c	/^	int got_content_length; \/* true if we know content length for sure *\/$/;"	m	struct:httpread	file:	access:public
httpread::got_file	src/wps/httpread.c	/^	int got_file;           \/* here when we are done *\/$/;"	m	struct:httpread	file:	access:public
httpread::got_hdr	src/wps/httpread.c	/^	int got_hdr;            \/* nonzero when header is finalized *\/$/;"	m	struct:httpread	file:	access:public
httpread::hdr	src/wps/httpread.c	/^	char hdr[HTTPREAD_HEADER_MAX_SIZE+1];   \/* headers stored here *\/$/;"	m	struct:httpread	file:	access:public
httpread::hdr_nbytes	src/wps/httpread.c	/^	int hdr_nbytes;$/;"	m	struct:httpread	file:	access:public
httpread::hdr_type	src/wps/httpread.c	/^	enum httpread_hdr_type hdr_type;$/;"	m	struct:httpread	typeref:enum:httpread::httpread_hdr_type	file:	access:public
httpread::in_chunk_data	src/wps/httpread.c	/^	int in_chunk_data;      \/* 0=in\/at header, 1=in the data or tail*\/$/;"	m	struct:httpread	file:	access:public
httpread::in_trailer	src/wps/httpread.c	/^	int in_trailer;         \/* in header fields after data (chunked only)*\/$/;"	m	struct:httpread	file:	access:public
httpread::max_bytes	src/wps/httpread.c	/^	int max_bytes;          \/* maximum file size else abort it *\/$/;"	m	struct:httpread	file:	access:public
httpread::reply_code	src/wps/httpread.c	/^	int reply_code;         \/* for type REPLY, e.g. 200 for HTTP\/1.1 200 OK *\/$/;"	m	struct:httpread	file:	access:public
httpread::sd	src/wps/httpread.c	/^	int sd;         \/* descriptor of TCP socket to read from *\/$/;"	m	struct:httpread	file:	access:public
httpread::sd_registered	src/wps/httpread.c	/^	int sd_registered;      \/* nonzero if we need to unregister socket *\/$/;"	m	struct:httpread	file:	access:public
httpread::timeout_seconds	src/wps/httpread.c	/^	int timeout_seconds;            \/* 0 or total duration timeout period *\/$/;"	m	struct:httpread	file:	access:public
httpread::to_registered	src/wps/httpread.c	/^	int to_registered;      \/* nonzero if we need to unregister timeout *\/$/;"	m	struct:httpread	file:	access:public
httpread::trailer_empty_cr	src/wps/httpread.c	/^		trailer_empty_cr,       \/* empty line + CR *\/$/;"	e	enum:httpread::trailer_state	file:
httpread::trailer_line_begin	src/wps/httpread.c	/^		trailer_line_begin = 0,$/;"	e	enum:httpread::trailer_state	file:
httpread::trailer_nonempty	src/wps/httpread.c	/^		trailer_nonempty,$/;"	e	enum:httpread::trailer_state	file:
httpread::trailer_nonempty_cr	src/wps/httpread.c	/^		trailer_nonempty_cr,$/;"	e	enum:httpread::trailer_state	file:
httpread::trailer_state	src/wps/httpread.c	/^	enum trailer_state {$/;"	g	struct:httpread	file:	access:public
httpread::trailer_state	src/wps/httpread.c	/^	} trailer_state;$/;"	m	struct:httpread	typeref:enum:httpread::trailer_state	file:	access:public
httpread::uri	src/wps/httpread.c	/^	char *uri;$/;"	m	struct:httpread	file:	access:public
httpread::version	src/wps/httpread.c	/^	int version;            \/* 1 if we've seen 1.1 *\/$/;"	m	struct:httpread	file:	access:public
httpread_create	src/wps/httpread.c	/^struct httpread * httpread_create($/;"	f	signature:( int sd, void (*cb)(struct httpread *handle, void *cookie, enum httpread_event e), void *cookie, int max_bytes, int timeout_seconds )
httpread_create	src/wps/httpread.h	/^struct httpread * httpread_create($/;"	p	signature:( int sd, void (*cb)(struct httpread *handle, void *cookie, enum httpread_event e), void *cookie, int max_bytes, int timeout_seconds )
httpread_data_get	src/wps/httpread.c	/^void * httpread_data_get(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_data_get	src/wps/httpread.h	/^void * httpread_data_get(struct httpread *h);$/;"	p	signature:(struct httpread *h)
httpread_debug	src/wps/httpread.c	60;"	d	file:
httpread_destroy	src/wps/httpread.c	/^void httpread_destroy(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_destroy	src/wps/httpread.h	/^void httpread_destroy(struct httpread *h);$/;"	p	signature:(struct httpread *h)
httpread_event	src/wps/httpread.h	/^enum httpread_event {$/;"	g
httpread_hdr_analyze	src/wps/httpread.c	/^static int httpread_hdr_analyze(struct httpread *h)$/;"	f	file:	signature:(struct httpread *h)
httpread_hdr_get	src/wps/httpread.c	/^char * httpread_hdr_get(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_hdr_get	src/wps/httpread.h	/^char * httpread_hdr_get(struct httpread *h);$/;"	p	signature:(struct httpread *h)
httpread_hdr_line_get	src/wps/httpread.c	/^char * httpread_hdr_line_get(struct httpread *h, const char *tag)$/;"	f	signature:(struct httpread *h, const char *tag)
httpread_hdr_line_get	src/wps/httpread.h	/^char * httpread_hdr_line_get(struct httpread *h, const char *tag);$/;"	p	signature:(struct httpread *h, const char *tag)
httpread_hdr_option_analyze	src/wps/httpread.c	/^static int httpread_hdr_option_analyze($/;"	f	file:	signature:( struct httpread *h, char *hbp )
httpread_hdr_type	src/wps/httpread.h	/^enum httpread_hdr_type {$/;"	g
httpread_hdr_type_get	src/wps/httpread.c	/^enum httpread_hdr_type httpread_hdr_type_get(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_hdr_type_get	src/wps/httpread.h	/^enum httpread_hdr_type httpread_hdr_type_get(struct httpread *h);$/;"	p	signature:(struct httpread *h)
httpread_length_get	src/wps/httpread.c	/^int httpread_length_get(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_length_get	src/wps/httpread.h	/^int httpread_length_get(struct httpread *h);$/;"	p	signature:(struct httpread *h)
httpread_read_handler	src/wps/httpread.c	/^static void httpread_read_handler(int sd, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sd, void *eloop_ctx, void *sock_ctx)
httpread_reply_code_get	src/wps/httpread.c	/^int httpread_reply_code_get(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_reply_code_get	src/wps/httpread.h	/^int httpread_reply_code_get(struct httpread *h);$/;"	p	signature:(struct httpread *h)
httpread_timeout_handler	src/wps/httpread.c	/^static void httpread_timeout_handler(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
httpread_timeout_handler	src/wps/httpread.c	/^static void httpread_timeout_handler(void *eloop_data, void *user_ctx);$/;"	p	file:	signature:(void *eloop_data, void *user_ctx)
httpread_uri_get	src/wps/httpread.c	/^char * httpread_uri_get(struct httpread *h)$/;"	f	signature:(struct httpread *h)
httpread_uri_get	src/wps/httpread.h	/^char *httpread_uri_get(struct httpread *h);$/;"	p	signature:(struct httpread *h)
htype	src/drivers/driver_wired.c	/^	u_int8_t htype;$/;"	m	struct:dhcp_message	file:	access:public
hw_features	src/ap/hostapd.h	/^	struct hostapd_hw_modes *hw_features;$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hostapd_hw_modes	access:public
hw_flags	src/ap/hostapd.h	/^	u16 hw_flags;$/;"	m	struct:hostapd_iface	access:public
hw_mode	src/ap/ap_config.h	/^	enum hostapd_hw_mode hw_mode; \/* HOSTAPD_MODE_IEEE80211A, .. *\/$/;"	m	struct:hostapd_config	typeref:enum:hostapd_config::hostapd_hw_mode	access:public
hwaddr_aton	src/utils/common.c	/^int hwaddr_aton(const char *txt, u8 *addr)$/;"	f	signature:(const char *txt, u8 *addr)
hwaddr_aton	src/utils/common.h	/^int hwaddr_aton(const char *txt, u8 *addr);$/;"	p	signature:(const char *txt, u8 *addr)
hwaddr_aton2	src/utils/common.c	/^int hwaddr_aton2(const char *txt, u8 *addr)$/;"	f	signature:(const char *txt, u8 *addr)
hwaddr_aton2	src/utils/common.h	/^int hwaddr_aton2(const char *txt, u8 *addr);$/;"	p	signature:(const char *txt, u8 *addr)
hwaddr_compact_aton	src/utils/common.c	/^int hwaddr_compact_aton(const char *txt, u8 *addr)$/;"	f	signature:(const char *txt, u8 *addr)
hwaddr_compact_aton	src/utils/common.h	/^int hwaddr_compact_aton(const char *txt, u8 *addr);$/;"	p	signature:(const char *txt, u8 *addr)
i	src/drivers/wireless_copy.h	/^	__u8		i;		\/* List index (when in range struct) *\/$/;"	m	struct:iw_freq	access:public
i802_bss	src/drivers/driver_nl80211.c	/^struct i802_bss {$/;"	s	file:
i802_bss::added_bridge	src/drivers/driver_nl80211.c	/^	unsigned int added_bridge:1;$/;"	m	struct:i802_bss	file:	access:public
i802_bss::added_if_into_bridge	src/drivers/driver_nl80211.c	/^	unsigned int added_if_into_bridge:1;$/;"	m	struct:i802_bss	file:	access:public
i802_bss::beacon_set	src/drivers/driver_nl80211.c	/^	unsigned int beacon_set:1;$/;"	m	struct:i802_bss	file:	access:public
i802_bss::brname	src/drivers/driver_nl80211.c	/^	char brname[IFNAMSIZ];$/;"	m	struct:i802_bss	file:	access:public
i802_bss::drv	src/drivers/driver_nl80211.c	/^	struct wpa_driver_nl80211_data *drv;$/;"	m	struct:i802_bss	typeref:struct:i802_bss::wpa_driver_nl80211_data	file:	access:public
i802_bss::ifindex	src/drivers/driver_nl80211.c	/^	int ifindex;$/;"	m	struct:i802_bss	file:	access:public
i802_bss::ifname	src/drivers/driver_nl80211.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:i802_bss	file:	access:public
i802_bss::next	src/drivers/driver_nl80211.c	/^	struct i802_bss *next;$/;"	m	struct:i802_bss	typeref:struct:i802_bss::i802_bss	file:	access:public
i802_check_bridge	src/drivers/driver_nl80211.c	/^static int i802_check_bridge(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct i802_bss *bss, const char *brname, const char *ifname)
i802_deinit	src/drivers/driver_nl80211.c	/^static void i802_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
i802_flush	src/drivers/driver_nl80211.c	/^static int i802_flush(void *priv)$/;"	f	file:	signature:(void *priv)
i802_get_inact_sec	src/drivers/driver_nl80211.c	/^static int i802_get_inact_sec(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
i802_get_seqnum	src/drivers/driver_nl80211.c	/^static int i802_get_seqnum(const char *iface, void *priv, const u8 *addr,$/;"	f	file:	signature:(const char *iface, void *priv, const u8 *addr, int idx, u8 *seq)
i802_init	src/drivers/driver_nl80211.c	/^static void *i802_init(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
i802_read_sta_data	src/drivers/driver_nl80211.c	/^static int i802_read_sta_data(void *priv, struct hostap_sta_driver_data *data,$/;"	f	file:	signature:(void *priv, struct hostap_sta_driver_data *data, const u8 *addr)
i802_set_frag	src/drivers/driver_nl80211.c	/^static int i802_set_frag(void *priv, int frag)$/;"	f	file:	signature:(void *priv, int frag)
i802_set_freq	src/drivers/driver_nl80211.c	/^static int i802_set_freq(void *priv, struct hostapd_freq_params *freq)$/;"	f	file:	signature:(void *priv, struct hostapd_freq_params *freq)
i802_set_freq	src/drivers/driver_nl80211.c	/^static int i802_set_freq(void *priv, struct hostapd_freq_params *freq);$/;"	p	file:	signature:(void *priv, struct hostapd_freq_params *freq)
i802_set_rate_sets	src/drivers/driver_nl80211.c	/^static int i802_set_rate_sets(void *priv, int *supp_rates, int *basic_rates,$/;"	f	file:	signature:(void *priv, int *supp_rates, int *basic_rates, int mode)
i802_set_rts	src/drivers/driver_nl80211.c	/^static int i802_set_rts(void *priv, int rts)$/;"	f	file:	signature:(void *priv, int rts)
i802_set_sta_vlan	src/drivers/driver_nl80211.c	/^static int i802_set_sta_vlan(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, const char *ifname, int vlan_id)
i802_set_tx_queue_params	src/drivers/driver_nl80211.c	/^static int i802_set_tx_queue_params(void *priv, int queue, int aifs,$/;"	f	file:	signature:(void *priv, int queue, int aifs, int cw_min, int cw_max, int burst_time)
i802_set_wds_sta	src/drivers/driver_nl80211.c	/^static int i802_set_wds_sta(void *priv, const u8 *addr, int aid, int val,$/;"	f	file:	signature:(void *priv, const u8 *addr, int aid, int val, const char *bridge_ifname)
i802_sta_clear_stats	src/drivers/driver_nl80211.c	/^static int i802_sta_clear_stats(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
i802_sta_deauth	src/drivers/driver_nl80211.c	/^static int i802_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason)
i802_sta_disassoc	src/drivers/driver_nl80211.c	/^static int i802_sta_disassoc(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason)
i_dh_private	src/eap_server/ikev2.h	/^	struct wpabuf *i_dh_private;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
i_dh_public	src/eap_peer/ikev2.h	/^	struct wpabuf *i_dh_public;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
i_id	src/eap_peer/eap_fast_pac.h	/^	u8 *i_id;$/;"	m	struct:eap_fast_pac	access:public
i_id_len	src/eap_peer/eap_fast_pac.h	/^	size_t i_id_len;$/;"	m	struct:eap_fast_pac	access:public
i_nonce	src/eap_peer/ikev2.h	/^	u8 i_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_responder_data	access:public
i_nonce	src/eap_server/ikev2.h	/^	u8 i_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
i_nonce_len	src/eap_peer/ikev2.h	/^	size_t i_nonce_len;$/;"	m	struct:ikev2_responder_data	access:public
i_nonce_len	src/eap_server/ikev2.h	/^	size_t i_nonce_len;$/;"	m	struct:ikev2_initiator_data	access:public
i_sign_msg	src/eap_peer/ikev2.h	/^	struct wpabuf *i_sign_msg;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
i_sign_msg	src/eap_server/ikev2.h	/^	struct wpabuf *i_sign_msg;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
i_spi	src/eap_common/ikev2_common.h	/^	u8 i_spi[IKEV2_SPI_LEN]; \/* IKE_SA Initiator's SPI *\/$/;"	m	struct:ikev2_hdr	access:public
i_spi	src/eap_peer/ikev2.h	/^	u8 i_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_responder_data	access:public
i_spi	src/eap_server/ikev2.h	/^	u8 i_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
iapp	src/ap/hostapd.h	/^	struct iapp_data *iapp;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::iapp_data	access:public
iapp_ack_security_block	src/ap/iapp.c	/^struct iapp_ack_security_block {$/;"	s	file:
iapp_ack_security_block::iv	src/ap/iapp.c	/^	u8 iv[8];$/;"	m	struct:iapp_ack_security_block	file:	access:public
iapp_ack_security_block::new_ap_ack_authenticator	src/ap/iapp.c	/^	u8 new_ap_ack_authenticator[48];$/;"	m	struct:iapp_ack_security_block	file:	access:public
iapp_add_notify	src/ap/iapp.c	/^struct iapp_add_notify {$/;"	s	file:
iapp_add_notify::addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_add_notify	file:	access:public
iapp_add_notify::mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_add_notify	file:	access:public
iapp_add_notify::reserved	src/ap/iapp.c	/^	u8 reserved;$/;"	m	struct:iapp_add_notify	file:	access:public
iapp_add_notify::seq_num	src/ap/iapp.c	/^	be16 seq_num;$/;"	m	struct:iapp_add_notify	file:	access:public
iapp_cache_notify	src/ap/iapp.c	/^struct iapp_cache_notify {$/;"	s	file:
iapp_cache_notify::addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_cache_notify	file:	access:public
iapp_cache_notify::ctx_block_len	src/ap/iapp.c	/^	u16 ctx_block_len;$/;"	m	struct:iapp_cache_notify	file:	access:public
iapp_cache_notify::current_ap	src/ap/iapp.c	/^	u8 current_ap[ETH_ALEN];$/;"	m	struct:iapp_cache_notify	file:	access:public
iapp_cache_notify::mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_cache_notify	file:	access:public
iapp_cache_notify::reserved	src/ap/iapp.c	/^	u8 reserved;$/;"	m	struct:iapp_cache_notify	file:	access:public
iapp_cache_notify::seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_cache_notify	file:	access:public
iapp_cache_response	src/ap/iapp.c	/^struct iapp_cache_response {$/;"	s	file:
iapp_cache_response::addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_cache_response	file:	access:public
iapp_cache_response::mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_cache_response	file:	access:public
iapp_cache_response::seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_cache_response	file:	access:public
iapp_cache_response::status	src/ap/iapp.c	/^	u8 status;$/;"	m	struct:iapp_cache_response	file:	access:public
iapp_data	src/ap/iapp.c	/^struct iapp_data {$/;"	s	file:
iapp_data::hapd	src/ap/iapp.c	/^	struct hostapd_data *hapd;$/;"	m	struct:iapp_data	typeref:struct:iapp_data::hostapd_data	file:	access:public
iapp_data::identifier	src/ap/iapp.c	/^	u16 identifier; \/* next IAPP identifier *\/$/;"	m	struct:iapp_data	file:	access:public
iapp_data::multicast	src/ap/iapp.c	/^	struct in_addr own, multicast;$/;"	m	struct:iapp_data	typeref:struct:iapp_data::	file:	access:public
iapp_data::own	src/ap/iapp.c	/^	struct in_addr own, multicast;$/;"	m	struct:iapp_data	typeref:struct:iapp_data::in_addr	file:	access:public
iapp_data::packet_sock	src/ap/iapp.c	/^	int packet_sock;$/;"	m	struct:iapp_data	file:	access:public
iapp_data::udp_sock	src/ap/iapp.c	/^	int udp_sock;$/;"	m	struct:iapp_data	file:	access:public
iapp_deinit	src/ap/iapp.c	/^void iapp_deinit(struct iapp_data *iapp)$/;"	f	signature:(struct iapp_data *iapp)
iapp_deinit	src/ap/iapp.h	/^static inline void iapp_deinit(struct iapp_data *iapp)$/;"	f	signature:(struct iapp_data *iapp)
iapp_deinit	src/ap/iapp.h	/^void iapp_deinit(struct iapp_data *iapp);$/;"	p	signature:(struct iapp_data *iapp)
iapp_hdr	src/ap/iapp.c	/^struct iapp_hdr {$/;"	s	file:
iapp_hdr::command	src/ap/iapp.c	/^	u8 command;$/;"	m	struct:iapp_hdr	file:	access:public
iapp_hdr::identifier	src/ap/iapp.c	/^	be16 identifier;$/;"	m	struct:iapp_hdr	file:	access:public
iapp_hdr::length	src/ap/iapp.c	/^	be16 length;$/;"	m	struct:iapp_hdr	file:	access:public
iapp_hdr::version	src/ap/iapp.c	/^	u8 version;$/;"	m	struct:iapp_hdr	file:	access:public
iapp_iface	src/ap/ap_config.h	/^	char iapp_iface[IFNAMSIZ + 1]; \/* interface used with IAPP broadcast$/;"	m	struct:hostapd_bss_config	access:public
iapp_init	src/ap/iapp.c	/^struct iapp_data * iapp_init(struct hostapd_data *hapd, const char *iface)$/;"	f	signature:(struct hostapd_data *hapd, const char *iface)
iapp_init	src/ap/iapp.h	/^static inline struct iapp_data * iapp_init(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const char *iface)
iapp_init	src/ap/iapp.h	/^struct iapp_data * iapp_init(struct hostapd_data *hapd, const char *iface);$/;"	p	signature:(struct hostapd_data *hapd, const char *iface)
iapp_layer2_update	src/ap/iapp.c	/^struct iapp_layer2_update {$/;"	s	file:
iapp_layer2_update::control	src/ap/iapp.c	/^	u8 control;$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_layer2_update::da	src/ap/iapp.c	/^	u8 da[ETH_ALEN]; \/* broadcast *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_layer2_update::dsap	src/ap/iapp.c	/^	u8 dsap; \/* null DSAP address *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_layer2_update::len	src/ap/iapp.c	/^	be16 len; \/* 6 *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_layer2_update::sa	src/ap/iapp.c	/^	u8 sa[ETH_ALEN]; \/* STA addr *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_layer2_update::ssap	src/ap/iapp.c	/^	u8 ssap; \/* null SSAP address, CR=Response *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_layer2_update::xid_info	src/ap/iapp.c	/^	u8 xid_info[3];$/;"	m	struct:iapp_layer2_update	file:	access:public
iapp_move_notify	src/ap/iapp.c	/^struct iapp_move_notify {$/;"	s	file:
iapp_move_notify::addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_move_notify	file:	access:public
iapp_move_notify::ctx_block_len	src/ap/iapp.c	/^	u16 ctx_block_len;$/;"	m	struct:iapp_move_notify	file:	access:public
iapp_move_notify::mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_move_notify	file:	access:public
iapp_move_notify::reserved	src/ap/iapp.c	/^	u8 reserved;$/;"	m	struct:iapp_move_notify	file:	access:public
iapp_move_notify::seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_move_notify	file:	access:public
iapp_move_response	src/ap/iapp.c	/^struct iapp_move_response {$/;"	s	file:
iapp_move_response::addr_len	src/ap/iapp.c	/^	u8 addr_len; \/* ETH_ALEN *\/$/;"	m	struct:iapp_move_response	file:	access:public
iapp_move_response::ctx_block_len	src/ap/iapp.c	/^	u16 ctx_block_len;$/;"	m	struct:iapp_move_response	file:	access:public
iapp_move_response::mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_move_response	file:	access:public
iapp_move_response::seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_move_response	file:	access:public
iapp_move_response::status	src/ap/iapp.c	/^	u8 status;$/;"	m	struct:iapp_move_response	file:	access:public
iapp_new_station	src/ap/iapp.c	/^void iapp_new_station(struct iapp_data *iapp, struct sta_info *sta)$/;"	f	signature:(struct iapp_data *iapp, struct sta_info *sta)
iapp_new_station	src/ap/iapp.h	/^static inline void iapp_new_station(struct iapp_data *iapp,$/;"	f	signature:(struct iapp_data *iapp, struct sta_info *sta)
iapp_new_station	src/ap/iapp.h	/^void iapp_new_station(struct iapp_data *iapp, struct sta_info *sta);$/;"	p	signature:(struct iapp_data *iapp, struct sta_info *sta)
iapp_process_add_notify	src/ap/iapp.c	/^static void iapp_process_add_notify(struct iapp_data *iapp,$/;"	f	file:	signature:(struct iapp_data *iapp, struct sockaddr_in *from, struct iapp_hdr *hdr, int len)
iapp_receive_udp	src/ap/iapp.c	/^static void iapp_receive_udp(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
iapp_send_add	src/ap/iapp.c	/^static void iapp_send_add(struct iapp_data *iapp, u8 *mac_addr, u16 seq_num)$/;"	f	file:	signature:(struct iapp_data *iapp, u8 *mac_addr, u16 seq_num)
iapp_send_layer2_update	src/ap/iapp.c	/^static void iapp_send_layer2_update(struct iapp_data *iapp, u8 *addr)$/;"	f	file:	signature:(struct iapp_data *iapp, u8 *addr)
iapp_send_security_block	src/ap/iapp.c	/^struct iapp_send_security_block {$/;"	s	file:
iapp_send_security_block::iv	src/ap/iapp.c	/^	u8 iv[8];$/;"	m	struct:iapp_send_security_block	file:	access:public
iapp_send_security_block::sec_block_len	src/ap/iapp.c	/^	u16 sec_block_len;$/;"	m	struct:iapp_send_security_block	file:	access:public
ibss	src/drivers/driver_test.c	/^	int ibss;$/;"	m	struct:wpa_driver_test_data	file:	access:public
ibss_params	src/common/ieee802_11_common.h	/^	const u8 *ibss_params;$/;"	m	struct:ieee802_11_elems	access:public
ibss_params_len	src/common/ieee802_11_common.h	/^	u8 ibss_params_len;$/;"	m	struct:ieee802_11_elems	access:public
ibss_peer_lost	src/drivers/driver.h	/^	struct ibss_peer_lost {$/;"	s	union:wpa_event_data	access:public
ibss_peer_lost	src/drivers/driver.h	/^	} ibss_peer_lost;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ibss_peer_lost	access:public
ibss_rsn_start	src/drivers/driver.h	/^	struct ibss_rsn_start {$/;"	s	union:wpa_event_data	access:public
ibss_rsn_start	src/drivers/driver.h	/^	} ibss_rsn_start;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ibss_rsn_start	access:public
ick	src/eap_peer/eap_pax.c	/^	u8 ick[EAP_PAX_ICK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
ick	src/eap_server/eap_server_pax.c	/^	u8 ick[EAP_PAX_ICK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
iconf	src/ap/hostapd.h	/^	struct hostapd_config *iconf;       \/\/ 指向上层hostapd_iface->conf $/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_config	access:public
id	src/ap/wpa_auth.h	/^	u8 id[FT_R0KH_ID_MAX_LEN];$/;"	m	struct:ft_remote_r0kh	access:public
id	src/ap/wpa_auth.h	/^	u8 id[FT_R1KH_ID_LEN];$/;"	m	struct:ft_remote_r1kh	access:public
id	src/common/wpa_common.h	/^	u8 id;$/;"	m	struct:rsn_rdie	access:public
id	src/crypto/dh_groups.h	/^	int id;$/;"	m	struct:dh_group	access:public
id	src/drivers/driver_nl80211.c	/^	int id;$/;"	m	struct:family_data	file:	access:public
id	src/eap_common/ikev2_common.h	/^	int id;$/;"	m	struct:ikev2_encr_alg	access:public
id	src/eap_common/ikev2_common.h	/^	int id;$/;"	m	struct:ikev2_integ_alg	access:public
id	src/eap_common/ikev2_common.h	/^	int id;$/;"	m	struct:ikev2_prf_alg	access:public
id	src/wps/ndef.c	/^	u8 *id;$/;"	m	struct:ndef_record	file:	access:public
id	src/wps/wps_er.h	/^	unsigned int id;$/;"	m	struct:wps_er_ap	access:public
id_len	src/ap/wpa_auth.h	/^	size_t id_len;$/;"	m	struct:ft_remote_r0kh	access:public
id_length	src/wps/ndef.c	/^	u8 id_length;$/;"	m	struct:ndef_record	file:	access:public
id_msgs	src/eap_peer/eap_aka.c	/^	struct wpabuf *id_msgs;$/;"	m	struct:eap_aka_data	typeref:struct:eap_aka_data::wpabuf	file:	access:public
id_msgs	src/eap_server/eap_server_aka.c	/^	struct wpabuf *id_msgs;$/;"	m	struct:eap_aka_data	typeref:struct:eap_aka_data::wpabuf	file:	access:public
id_p	src/eap_peer/eap_psk.c	/^	u8 *id_s, *id_p;$/;"	m	struct:eap_psk_data	file:	access:public
id_p	src/eap_server/eap_server_psk.c	/^	u8 *id_p, *id_s;$/;"	m	struct:eap_psk_data	file:	access:public
id_p_len	src/eap_peer/eap_psk.c	/^	size_t id_s_len, id_p_len;$/;"	m	struct:eap_psk_data	file:	access:public
id_p_len	src/eap_server/eap_server_psk.c	/^	size_t id_p_len, id_s_len;$/;"	m	struct:eap_psk_data	file:	access:public
id_peer	src/eap_peer/eap_gpsk.c	/^	u8 *id_peer;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_peer	src/eap_peer/eap_pwd.c	/^	u8 *id_peer;$/;"	m	struct:eap_pwd_data	file:	access:public
id_peer	src/eap_server/eap_server_gpsk.c	/^	u8 *id_peer;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_peer	src/eap_server/eap_server_pwd.c	/^	u8 *id_peer;$/;"	m	struct:eap_pwd_data	file:	access:public
id_peer_len	src/eap_peer/eap_gpsk.c	/^	size_t id_peer_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_peer_len	src/eap_peer/eap_pwd.c	/^	size_t id_peer_len;$/;"	m	struct:eap_pwd_data	file:	access:public
id_peer_len	src/eap_server/eap_server_gpsk.c	/^	size_t id_peer_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_peer_len	src/eap_server/eap_server_pwd.c	/^	size_t id_peer_len;$/;"	m	struct:eap_pwd_data	file:	access:public
id_req	src/eap_common/eap_sim_common.h	/^	enum eap_sim_id_req id_req;$/;"	m	struct:eap_sim_attrs	typeref:enum:eap_sim_attrs::eap_sim_id_req	access:public
id_s	src/eap_peer/eap_psk.c	/^	u8 *id_s, *id_p;$/;"	m	struct:eap_psk_data	file:	access:public
id_s	src/eap_server/eap_server_psk.c	/^	u8 *id_p, *id_s;$/;"	m	struct:eap_psk_data	file:	access:public
id_s_len	src/eap_peer/eap_psk.c	/^	size_t id_s_len, id_p_len;$/;"	m	struct:eap_psk_data	file:	access:public
id_s_len	src/eap_server/eap_server_psk.c	/^	size_t id_p_len, id_s_len;$/;"	m	struct:eap_psk_data	file:	access:public
id_server	src/eap_peer/eap_gpsk.c	/^	u8 *id_server;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_server	src/eap_peer/eap_pwd.c	/^	u8 *id_server;$/;"	m	struct:eap_pwd_data	file:	access:public
id_server	src/eap_server/eap_server_gpsk.c	/^	u8 *id_server;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_server	src/eap_server/eap_server_pwd.c	/^	u8 *id_server;$/;"	m	struct:eap_pwd_data	file:	access:public
id_server_len	src/eap_peer/eap_gpsk.c	/^	size_t id_server_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_server_len	src/eap_peer/eap_pwd.c	/^	size_t id_server_len;$/;"	m	struct:eap_pwd_data	file:	access:public
id_server_len	src/eap_server/eap_server_gpsk.c	/^	size_t id_server_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
id_server_len	src/eap_server/eap_server_pwd.c	/^	size_t id_server_len;$/;"	m	struct:eap_pwd_data	file:	access:public
ident	src/eap_peer/eap_ttls.c	/^	u8 ident;$/;"	m	struct:eap_ttls_data	file:	access:public
identifier	src/ap/iapp.c	/^	be16 identifier;$/;"	m	struct:iapp_hdr	file:	access:public
identifier	src/ap/iapp.c	/^	u16 identifier; \/* next IAPP identifier *\/$/;"	m	struct:iapp_data	file:	access:public
identifier	src/ap/ieee802_1x.c	/^	u8 identifier;$/;"	m	struct:sta_id_search	file:	access:public
identifier	src/eap_common/eap_defs.h	/^	u8 identifier;$/;"	m	struct:eap_hdr	access:public
identifier	src/radius/radius.h	/^	u8 identifier;  \/\/ 包标识，用于匹配请求包和响应包$/;"	m	struct:radius_hdr	access:public
identifier	src/tls/asn1.h	/^	u8 identifier, class, constructed;$/;"	m	struct:asn1_hdr	access:public
identity	src/ap/ap_config.h	/^	u8 *identity;$/;"	m	struct:hostapd_eap_user	access:public
identity	src/ap/pmksa_cache_auth.h	/^	u8 *identity;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
identity	src/eap_common/eap_pwd_common.h	/^	u8 identity[0];     \/* length inferred from payload *\/$/;"	m	struct:eap_pwd_id	access:public
identity	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
identity	src/eap_peer/eap_config.h	/^	u8 *identity;$/;"	m	struct:eap_peer_config	access:public
identity	src/eap_server/eap_i.h	/^	u8 *identity;$/;"	m	struct:eap_sm	access:public
identity	src/eap_server/eap_server_fast.c	/^	u8 *identity; \/* from PAC-Opaque *\/$/;"	m	struct:eap_fast_data	file:	access:public
identity	src/eap_server/eap_sim_db.c	/^	u8 *identity;$/;"	m	struct:eap_sim_pseudonym	file:	access:public
identity	src/eap_server/eap_sim_db.h	/^	u8 *identity;$/;"	m	struct:eap_sim_reauth	access:public
identity	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 *identity;           \/\/ AAA接口在封装eap-resp-identify数据到radius报文时会记录下用户名信息$/;"	m	struct:eapol_state_machine	access:public
identity_len	src/ap/ap_config.h	/^	size_t identity_len;$/;"	m	struct:hostapd_eap_user	access:public
identity_len	src/ap/pmksa_cache_auth.h	/^	size_t identity_len;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
identity_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
identity_len	src/eap_peer/eap_config.h	/^	size_t identity_len;$/;"	m	struct:eap_peer_config	access:public
identity_len	src/eap_server/eap_i.h	/^	size_t identity_len;$/;"	m	struct:eap_sm	access:public
identity_len	src/eap_server/eap_server_fast.c	/^	size_t identity_len;$/;"	m	struct:eap_fast_data	file:	access:public
identity_len	src/eap_server/eap_sim_db.c	/^	size_t identity_len;$/;"	m	struct:eap_sim_pseudonym	file:	access:public
identity_len	src/eap_server/eap_sim_db.h	/^	size_t identity_len;$/;"	m	struct:eap_sim_reauth	access:public
identity_len	src/eapol_auth/eapol_auth_sm_i.h	/^	size_t identity_len;    \/\/ 记录的用户名长度$/;"	m	struct:eapol_state_machine	access:public
idi	src/eap_common/ikev2_common.h	/^	const u8 *idi;$/;"	m	struct:ikev2_payloads	access:public
idi_len	src/eap_common/ikev2_common.h	/^	size_t idi_len;$/;"	m	struct:ikev2_payloads	access:public
idleWhile	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int idleWhile; \/* for EAP state machine *\/$/;"	m	struct:eapol_sm	file:	access:public
idle_update	src/p2p/p2p.h	/^	void (*idle_update)(void *ctx, int idle);$/;"	m	struct:p2p_group_config	access:public
idr	src/eap_common/ikev2_common.h	/^	const u8 *idr;$/;"	m	struct:ikev2_payloads	access:public
idr_len	src/eap_common/ikev2_common.h	/^	size_t idr_len;$/;"	m	struct:ikev2_payloads	access:public
idx	src/ap/ap_config.h	/^	u8 idx;$/;"	m	struct:hostapd_wep_keys	access:public
idx	src/drivers/driver_hostap.h	/^			u8 idx;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
idx	src/drivers/rfkill.c	/^	u32 idx;$/;"	m	struct:rfkill_event	file:	access:public
ie	src/drivers/driver.h	/^		const u8 *ie;$/;"	m	struct:wpa_event_data::deauth_info	access:public
ie	src/drivers/driver.h	/^		const u8 *ie;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
ie	src/drivers/driver.h	/^		const u8 *ie;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
ie	src/drivers/driver.h	/^	const u8 *ie;$/;"	m	struct:wpa_driver_auth_params	access:public
ie	src/drivers/driver_test.c	/^	u8 *ie;$/;"	m	struct:test_driver_bss	file:	access:public
ie	src/drivers/driver_wext.c	/^	u8 *ie;$/;"	m	struct:wext_scan_data	file:	access:public
ie_len	src/drivers/driver.h	/^		size_t ie_len;$/;"	m	struct:wpa_event_data::deauth_info	access:public
ie_len	src/drivers/driver.h	/^		size_t ie_len;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
ie_len	src/drivers/driver.h	/^		size_t ie_len;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
ie_len	src/drivers/driver.h	/^	size_t ie_len;$/;"	m	struct:wpa_driver_auth_params	access:public
ie_len	src/drivers/driver.h	/^	size_t ie_len;$/;"	m	struct:wpa_scan_res	access:public
ie_len	src/drivers/driver_wext.c	/^	size_t ie_len;$/;"	m	struct:wext_scan_data	file:	access:public
ie_len	src/rsn_supp/tdls.c	/^	u8 ie_len;$/;"	m	struct:wpa_tdls_ftie	file:	access:public
ie_len	src/rsn_supp/tdls.c	/^	u8 ie_len;$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
ie_len	src/rsn_supp/tdls.c	/^	u8 ie_len;$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
ie_type	src/rsn_supp/tdls.c	/^	u8 ie_type; \/* FTIE *\/$/;"	m	struct:wpa_tdls_ftie	file:	access:public
ie_type	src/rsn_supp/tdls.c	/^	u8 ie_type; \/* Link Identifier IE *\/$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
ie_type	src/rsn_supp/tdls.c	/^	u8 ie_type; \/* Timeout IE *\/$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
ie_update	src/p2p/p2p.h	/^	void (*ie_update)(void *ctx, struct wpabuf *beacon_ies,$/;"	m	struct:p2p_group_config	access:public
ieee80211_hdr	src/common/ieee802_11_defs.h	/^struct ieee80211_hdr {$/;"	s
ieee80211_hdr::addr1	src/common/ieee802_11_defs.h	/^	u8 addr1[6];$/;"	m	struct:ieee80211_hdr	access:public
ieee80211_hdr::addr2	src/common/ieee802_11_defs.h	/^	u8 addr2[6];$/;"	m	struct:ieee80211_hdr	access:public
ieee80211_hdr::addr3	src/common/ieee802_11_defs.h	/^	u8 addr3[6];$/;"	m	struct:ieee80211_hdr	access:public
ieee80211_hdr::duration_id	src/common/ieee802_11_defs.h	/^	le16 duration_id;$/;"	m	struct:ieee80211_hdr	access:public
ieee80211_hdr::frame_control	src/common/ieee802_11_defs.h	/^	le16 frame_control;$/;"	m	struct:ieee80211_hdr	access:public
ieee80211_hdr::seq_ctrl	src/common/ieee802_11_defs.h	/^	le16 seq_ctrl;$/;"	m	struct:ieee80211_hdr	access:public
ieee80211_ht_capabilities	src/common/ieee802_11_defs.h	/^struct ieee80211_ht_capabilities {$/;"	s
ieee80211_ht_capabilities::a_mpdu_params	src/common/ieee802_11_defs.h	/^	u8 a_mpdu_params;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ieee80211_ht_capabilities::asel_capabilities	src/common/ieee802_11_defs.h	/^	u8 asel_capabilities;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ieee80211_ht_capabilities::ht_capabilities_info	src/common/ieee802_11_defs.h	/^	le16 ht_capabilities_info;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ieee80211_ht_capabilities::ht_extended_capabilities	src/common/ieee802_11_defs.h	/^	le16 ht_extended_capabilities;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ieee80211_ht_capabilities::supported_mcs_set	src/common/ieee802_11_defs.h	/^	u8 supported_mcs_set[16];$/;"	m	struct:ieee80211_ht_capabilities	access:public
ieee80211_ht_capabilities::tx_bf_capability_info	src/common/ieee802_11_defs.h	/^	le32 tx_bf_capability_info;$/;"	m	struct:ieee80211_ht_capabilities	access:public
ieee80211_ht_operation	src/common/ieee802_11_defs.h	/^struct ieee80211_ht_operation {$/;"	s
ieee80211_ht_operation::basic_set	src/common/ieee802_11_defs.h	/^	u8 basic_set[16];$/;"	m	struct:ieee80211_ht_operation	access:public
ieee80211_ht_operation::control_chan	src/common/ieee802_11_defs.h	/^	u8 control_chan;$/;"	m	struct:ieee80211_ht_operation	access:public
ieee80211_ht_operation::ht_param	src/common/ieee802_11_defs.h	/^	u8 ht_param;$/;"	m	struct:ieee80211_ht_operation	access:public
ieee80211_ht_operation::operation_mode	src/common/ieee802_11_defs.h	/^	le16 operation_mode;$/;"	m	struct:ieee80211_ht_operation	access:public
ieee80211_ht_operation::stbc_param	src/common/ieee802_11_defs.h	/^	le16 stbc_param;$/;"	m	struct:ieee80211_ht_operation	access:public
ieee80211_mgmt	src/common/ieee802_11_defs.h	/^struct ieee80211_mgmt {$/;"	s
ieee80211_mgmt::__anon38::__anon39::auth_alg	src/common/ieee802_11_defs.h	/^			le16 auth_alg;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
ieee80211_mgmt::__anon38::__anon39::auth_transaction	src/common/ieee802_11_defs.h	/^			le16 auth_transaction;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
ieee80211_mgmt::__anon38::__anon39::status_code	src/common/ieee802_11_defs.h	/^			le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
ieee80211_mgmt::__anon38::__anon39::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
ieee80211_mgmt::__anon38::__anon40::reason_code	src/common/ieee802_11_defs.h	/^			le16 reason_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon40	access:public
ieee80211_mgmt::__anon38::__anon40::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon40	access:public
ieee80211_mgmt::__anon38::__anon41::capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon41	access:public
ieee80211_mgmt::__anon38::__anon41::listen_interval	src/common/ieee802_11_defs.h	/^			le16 listen_interval;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon41	access:public
ieee80211_mgmt::__anon38::__anon41::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon41	access:public
ieee80211_mgmt::__anon38::__anon42::aid	src/common/ieee802_11_defs.h	/^			le16 aid;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
ieee80211_mgmt::__anon38::__anon42::capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
ieee80211_mgmt::__anon38::__anon42::status_code	src/common/ieee802_11_defs.h	/^			le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
ieee80211_mgmt::__anon38::__anon42::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
ieee80211_mgmt::__anon38::__anon43::capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
ieee80211_mgmt::__anon38::__anon43::current_ap	src/common/ieee802_11_defs.h	/^			u8 current_ap[6];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
ieee80211_mgmt::__anon38::__anon43::listen_interval	src/common/ieee802_11_defs.h	/^			le16 listen_interval;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
ieee80211_mgmt::__anon38::__anon43::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
ieee80211_mgmt::__anon38::__anon44::reason_code	src/common/ieee802_11_defs.h	/^			le16 reason_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon44	access:public
ieee80211_mgmt::__anon38::__anon44::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon44	access:public
ieee80211_mgmt::__anon38::__anon45::beacon_int	src/common/ieee802_11_defs.h	/^			le16 beacon_int;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
ieee80211_mgmt::__anon38::__anon45::capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
ieee80211_mgmt::__anon38::__anon45::timestamp	src/common/ieee802_11_defs.h	/^			u8 timestamp[8];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
ieee80211_mgmt::__anon38::__anon45::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
ieee80211_mgmt::__anon38::__anon46::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon46	access:public
ieee80211_mgmt::__anon38::__anon47::beacon_int	src/common/ieee802_11_defs.h	/^			le16 beacon_int;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
ieee80211_mgmt::__anon38::__anon47::capab_info	src/common/ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
ieee80211_mgmt::__anon38::__anon47::timestamp	src/common/ieee802_11_defs.h	/^			u8 timestamp[8];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
ieee80211_mgmt::__anon38::__anon47::variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50::action_code	src/common/ieee802_11_defs.h	/^					u8 action_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50::dialog_token	src/common/ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50::status_code	src/common/ieee802_11_defs.h	/^					u8 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50::variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51::action_code	src/common/ieee802_11_defs.h	/^					u8 action_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51::element_id	src/common/ieee802_11_defs.h	/^					u8 element_id;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51::length	src/common/ieee802_11_defs.h	/^					u8 length;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51::new_chan	src/common/ieee802_11_defs.h	/^					u8 new_chan;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51::switch_count	src/common/ieee802_11_defs.h	/^					u8 switch_count;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51::switch_mode	src/common/ieee802_11_defs.h	/^					u8 switch_mode;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52::action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52::sta_addr	src/common/ieee802_11_defs.h	/^					u8 sta_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52::target_ap_addr	src/common/ieee802_11_defs.h	/^					u8 target_ap_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52::variable	src/common/ieee802_11_defs.h	/^					u8 variable[0]; \/* FT Request *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53::action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53::sta_addr	src/common/ieee802_11_defs.h	/^					u8 sta_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53::status_code	src/common/ieee802_11_defs.h	/^					le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53::target_ap_addr	src/common/ieee802_11_defs.h	/^					u8 target_ap_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53::variable	src/common/ieee802_11_defs.h	/^					u8 variable[0]; \/* FT Request *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54::action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54::trans_id	src/common/ieee802_11_defs.h	/^					u8 trans_id[WLAN_SA_QUERY_TR_ID_LEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55::action	src/common/ieee802_11_defs.h	/^					u8 action; \/* *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55::trans_id	src/common/ieee802_11_defs.h	/^					u8 trans_id[WLAN_SA_QUERY_TR_ID_LEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56::action	src/common/ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56::variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57::action	src/common/ieee802_11_defs.h	/^					u8 action; \/* 9 *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57::oui	src/common/ieee802_11_defs.h	/^					u8 oui[3];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57::variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58::action	src/common/ieee802_11_defs.h	/^					u8 action; \/* 7 *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58::dialog_token	src/common/ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58::disassoc_timer	src/common/ieee802_11_defs.h	/^					le16 disassoc_timer;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58::req_mode	src/common/ieee802_11_defs.h	/^					u8 req_mode;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58::validity_interval	src/common/ieee802_11_defs.h	/^					u8 validity_interval;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58::variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::bss_tm_req	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED bss_tm_req;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::chan_switch	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED chan_switch;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::ft_action_req	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED ft_action_req;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::ft_action_resp	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED ft_action_resp;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::public_action	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED public_action;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::sa_query_req	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED sa_query_req;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::sa_query_resp	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED sa_query_resp;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::vs_public_action	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED vs_public_action;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
ieee80211_mgmt::__anon38::__anon48::__anon49::wmm_action	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED wmm_action;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
ieee80211_mgmt::__anon38::__anon48::category	src/common/ieee802_11_defs.h	/^			u8 category;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48	access:public
ieee80211_mgmt::__anon38::__anon48::u	src/common/ieee802_11_defs.h	/^			} u;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48	typeref:union:ieee80211_mgmt::__anon38::__anon48::__anon49	access:public
ieee80211_mgmt::__anon38::action	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED action;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon48	access:public
ieee80211_mgmt::__anon38::assoc_req	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_req;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon41	access:public
ieee80211_mgmt::__anon38::assoc_resp	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_resp, reassoc_resp;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon42	access:public
ieee80211_mgmt::__anon38::auth	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED auth;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon39	access:public
ieee80211_mgmt::__anon38::beacon	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED beacon;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon45	access:public
ieee80211_mgmt::__anon38::deauth	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED deauth;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon40	access:public
ieee80211_mgmt::__anon38::disassoc	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED disassoc;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon44	access:public
ieee80211_mgmt::__anon38::probe_req	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED probe_req;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon46	access:public
ieee80211_mgmt::__anon38::probe_resp	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED probe_resp;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon47	access:public
ieee80211_mgmt::__anon38::reassoc_req	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED reassoc_req;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon43	access:public
ieee80211_mgmt::__anon38::reassoc_resp	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_resp, reassoc_resp;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon42	access:public
ieee80211_mgmt::bssid	src/common/ieee802_11_defs.h	/^	u8 bssid[6];$/;"	m	struct:ieee80211_mgmt	access:public
ieee80211_mgmt::da	src/common/ieee802_11_defs.h	/^	u8 da[6];$/;"	m	struct:ieee80211_mgmt	access:public
ieee80211_mgmt::duration	src/common/ieee802_11_defs.h	/^	le16 duration;$/;"	m	struct:ieee80211_mgmt	access:public
ieee80211_mgmt::frame_control	src/common/ieee802_11_defs.h	/^	le16 frame_control;$/;"	m	struct:ieee80211_mgmt	access:public
ieee80211_mgmt::sa	src/common/ieee802_11_defs.h	/^	u8 sa[6];$/;"	m	struct:ieee80211_mgmt	access:public
ieee80211_mgmt::seq_ctrl	src/common/ieee802_11_defs.h	/^	le16 seq_ctrl;$/;"	m	struct:ieee80211_mgmt	access:public
ieee80211_mgmt::u	src/common/ieee802_11_defs.h	/^	} u;$/;"	m	struct:ieee80211_mgmt	typeref:union:ieee80211_mgmt::__anon38	access:public
ieee80211_radiotap_header	src/utils/radiotap.h	/^struct ieee80211_radiotap_header {$/;"	s
ieee80211_radiotap_header::it_len	src/utils/radiotap.h	/^	uint16_t it_len;	\/* length of the whole$/;"	m	struct:ieee80211_radiotap_header	access:public
ieee80211_radiotap_header::it_pad	src/utils/radiotap.h	/^	uint8_t it_pad;$/;"	m	struct:ieee80211_radiotap_header	access:public
ieee80211_radiotap_header::it_present	src/utils/radiotap.h	/^	uint32_t it_present;	\/* A bitmap telling which$/;"	m	struct:ieee80211_radiotap_header	access:public
ieee80211_radiotap_header::it_version	src/utils/radiotap.h	/^	uint8_t it_version;	\/* Version 0. Only increases$/;"	m	struct:ieee80211_radiotap_header	access:public
ieee80211_radiotap_iterator	src/utils/radiotap_iter.h	/^struct ieee80211_radiotap_iterator {$/;"	s
ieee80211_radiotap_iterator::arg	src/utils/radiotap_iter.h	/^	unsigned char *arg;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator::arg_index	src/utils/radiotap_iter.h	/^	int arg_index;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator::bitmap_shifter	src/utils/radiotap_iter.h	/^	uint32_t bitmap_shifter;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator::max_length	src/utils/radiotap_iter.h	/^	int max_length;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator::next_bitmap	src/utils/radiotap_iter.h	/^	uint32_t *next_bitmap;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator::rtheader	src/utils/radiotap_iter.h	/^	struct ieee80211_radiotap_header *rtheader;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_header	access:public
ieee80211_radiotap_iterator::this_arg	src/utils/radiotap_iter.h	/^	unsigned char *this_arg;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator::this_arg_index	src/utils/radiotap_iter.h	/^	int this_arg_index;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
ieee80211_radiotap_iterator_init	src/utils/radiotap.c	/^int ieee80211_radiotap_iterator_init($/;"	f	signature:( struct ieee80211_radiotap_iterator *iterator, struct ieee80211_radiotap_header *radiotap_header, int max_length)
ieee80211_radiotap_iterator_init	src/utils/radiotap_iter.h	/^extern int ieee80211_radiotap_iterator_init($/;"	p	signature:( struct ieee80211_radiotap_iterator *iterator, struct ieee80211_radiotap_header *radiotap_header, int max_length)
ieee80211_radiotap_iterator_next	src/utils/radiotap.c	/^int ieee80211_radiotap_iterator_next($/;"	f	signature:( struct ieee80211_radiotap_iterator *iterator)
ieee80211_radiotap_iterator_next	src/utils/radiotap_iter.h	/^extern int ieee80211_radiotap_iterator_next($/;"	p	signature:( struct ieee80211_radiotap_iterator *iterator)
ieee80211_radiotap_type	src/utils/radiotap.h	/^enum ieee80211_radiotap_type {$/;"	g
ieee80211_tkip_countermeasures_deinit	src/ap/tkip_countermeasures.c	/^void ieee80211_tkip_countermeasures_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
ieee80211_tkip_countermeasures_deinit	src/ap/tkip_countermeasures.h	/^void ieee80211_tkip_countermeasures_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
ieee80211_tkip_countermeasures_start	src/ap/tkip_countermeasures.c	/^static void ieee80211_tkip_countermeasures_start(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
ieee80211_tkip_countermeasures_stop	src/ap/tkip_countermeasures.c	/^static void ieee80211_tkip_countermeasures_stop(void *eloop_ctx,$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ieee80211d	src/ap/ap_config.h	/^	int ieee80211d;$/;"	m	struct:hostapd_config	access:public
ieee80211n	src/ap/ap_config.h	/^	int ieee80211n;$/;"	m	struct:hostapd_config	access:public
ieee80211n_allowed_ht40_channel_pair	src/ap/hw_features.c	/^static int ieee80211n_allowed_ht40_channel_pair(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
ieee80211n_check_40mhz	src/ap/hw_features.c	/^static int ieee80211n_check_40mhz(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
ieee80211n_check_40mhz_2g4	src/ap/hw_features.c	/^static int ieee80211n_check_40mhz_2g4(struct hostapd_iface *iface,$/;"	f	file:	signature:(struct hostapd_iface *iface, struct wpa_scan_results *scan_res)
ieee80211n_check_40mhz_5g	src/ap/hw_features.c	/^static int ieee80211n_check_40mhz_5g(struct hostapd_iface *iface,$/;"	f	file:	signature:(struct hostapd_iface *iface, struct wpa_scan_results *scan_res)
ieee80211n_check_scan	src/ap/hw_features.c	/^static void ieee80211n_check_scan(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
ieee80211n_get_pri_sec_chan	src/ap/hw_features.c	/^static void ieee80211n_get_pri_sec_chan(struct wpa_scan_res *bss,$/;"	f	file:	signature:(struct wpa_scan_res *bss, int *pri_chan, int *sec_chan)
ieee80211n_supported_ht_capab	src/ap/hw_features.c	/^static int ieee80211n_supported_ht_capab(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
ieee80211n_switch_pri_sec	src/ap/hw_features.c	/^static void ieee80211n_switch_pri_sec(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
ieee80211w	src/ap/ap_config.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::mfp_options	access:public
ieee80211w	src/ap/wpa_auth.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:wpa_auth_config	typeref:enum:wpa_auth_config::mfp_options	access:public
ieee80211w	src/drivers/driver.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:wpa_bss_params	typeref:enum:wpa_bss_params::mfp_options	access:public
ieee80211w_kde_add	src/ap/wpa_auth.c	/^static u8 * ieee80211w_kde_add(struct wpa_state_machine *sm, u8 *pos)$/;"	f	file:	signature:(struct wpa_state_machine *sm, u8 *pos)
ieee80211w_kde_len	src/ap/wpa_auth.c	/^static int ieee80211w_kde_len(struct wpa_state_machine *sm)$/;"	f	file:	signature:(struct wpa_state_machine *sm)
ieee80211w_set_keys	src/rsn_supp/wpa.c	/^static int ieee80211w_set_keys(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_eapol_ie_parse *ie)
ieee8023_hdr	src/drivers/driver_wired.c	/^struct ieee8023_hdr {$/;"	s	file:
ieee8023_hdr::dest	src/drivers/driver_wired.c	/^	u8 dest[6];$/;"	m	struct:ieee8023_hdr	file:	access:public
ieee8023_hdr::ethertype	src/drivers/driver_wired.c	/^	u16 ethertype;$/;"	m	struct:ieee8023_hdr	file:	access:public
ieee8023_hdr::src	src/drivers/driver_wired.c	/^	u8 src[6];$/;"	m	struct:ieee8023_hdr	file:	access:public
ieee802_11_elems	src/common/ieee802_11_common.h	/^struct ieee802_11_elems {$/;"	s
ieee802_11_elems::cf_params	src/common/ieee802_11_common.h	/^	const u8 *cf_params;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::cf_params_len	src/common/ieee802_11_common.h	/^	u8 cf_params_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::challenge	src/common/ieee802_11_common.h	/^	const u8 *challenge;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::challenge_len	src/common/ieee802_11_common.h	/^	u8 challenge_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ds_params	src/common/ieee802_11_common.h	/^	const u8 *ds_params;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ds_params_len	src/common/ieee802_11_common.h	/^	u8 ds_params_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::erp_info	src/common/ieee802_11_common.h	/^	const u8 *erp_info;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::erp_info_len	src/common/ieee802_11_common.h	/^	u8 erp_info_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ext_supp_rates	src/common/ieee802_11_common.h	/^	const u8 *ext_supp_rates;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ext_supp_rates_len	src/common/ieee802_11_common.h	/^	u8 ext_supp_rates_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::fh_params	src/common/ieee802_11_common.h	/^	const u8 *fh_params;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::fh_params_len	src/common/ieee802_11_common.h	/^	u8 fh_params_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ftie	src/common/ieee802_11_common.h	/^	const u8 *ftie;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ftie_len	src/common/ieee802_11_common.h	/^	u8 ftie_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ht_capabilities	src/common/ieee802_11_common.h	/^	const u8 *ht_capabilities;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ht_capabilities_len	src/common/ieee802_11_common.h	/^	u8 ht_capabilities_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ht_operation	src/common/ieee802_11_common.h	/^	const u8 *ht_operation;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ht_operation_len	src/common/ieee802_11_common.h	/^	u8 ht_operation_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ibss_params	src/common/ieee802_11_common.h	/^	const u8 *ibss_params;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ibss_params_len	src/common/ieee802_11_common.h	/^	u8 ibss_params_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::interworking	src/common/ieee802_11_common.h	/^	const u8 *interworking;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::interworking_len	src/common/ieee802_11_common.h	/^	u8 interworking_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::link_id	src/common/ieee802_11_common.h	/^	const u8 *link_id;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::mdie	src/common/ieee802_11_common.h	/^	const u8 *mdie;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::mdie_len	src/common/ieee802_11_common.h	/^	u8 mdie_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::p2p	src/common/ieee802_11_common.h	/^	const u8 *p2p;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::p2p_len	src/common/ieee802_11_common.h	/^	u8 p2p_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::power_cap	src/common/ieee802_11_common.h	/^	const u8 *power_cap;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::power_cap_len	src/common/ieee802_11_common.h	/^	u8 power_cap_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::rsn_ie	src/common/ieee802_11_common.h	/^	const u8 *rsn_ie;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::rsn_ie_len	src/common/ieee802_11_common.h	/^	u8 rsn_ie_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ssid	src/common/ieee802_11_common.h	/^	const u8 *ssid;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::ssid_len	src/common/ieee802_11_common.h	/^	u8 ssid_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::supp_channels	src/common/ieee802_11_common.h	/^	const u8 *supp_channels;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::supp_channels_len	src/common/ieee802_11_common.h	/^	u8 supp_channels_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::supp_rates	src/common/ieee802_11_common.h	/^	const u8 *supp_rates;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::supp_rates_len	src/common/ieee802_11_common.h	/^	u8 supp_rates_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::tim	src/common/ieee802_11_common.h	/^	const u8 *tim;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::tim_len	src/common/ieee802_11_common.h	/^	u8 tim_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::timeout_int	src/common/ieee802_11_common.h	/^	const u8 *timeout_int;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::timeout_int_len	src/common/ieee802_11_common.h	/^	u8 timeout_int_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::vendor_ht_cap	src/common/ieee802_11_common.h	/^	const u8 *vendor_ht_cap;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::vendor_ht_cap_len	src/common/ieee802_11_common.h	/^	u8 vendor_ht_cap_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wmm	src/common/ieee802_11_common.h	/^	const u8 *wmm; \/* WMM Information or Parameter Element *\/$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wmm_len	src/common/ieee802_11_common.h	/^	u8 wmm_len; \/* 7 = WMM Information; 24 = WMM Parameter *\/$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wmm_tspec	src/common/ieee802_11_common.h	/^	const u8 *wmm_tspec;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wmm_tspec_len	src/common/ieee802_11_common.h	/^	u8 wmm_tspec_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wpa_ie	src/common/ieee802_11_common.h	/^	const u8 *wpa_ie;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wpa_ie_len	src/common/ieee802_11_common.h	/^	u8 wpa_ie_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wps_ie	src/common/ieee802_11_common.h	/^	const u8 *wps_ie;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_elems::wps_ie_len	src/common/ieee802_11_common.h	/^	u8 wps_ie_len;$/;"	m	struct:ieee802_11_elems	access:public
ieee802_11_erp_info	src/ap/beacon.c	/^static u8 ieee802_11_erp_info(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
ieee802_11_get_mib	src/ap/ieee802_11.c	/^int ieee802_11_get_mib(struct hostapd_data *hapd, char *buf, size_t buflen)$/;"	f	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
ieee802_11_get_mib	src/ap/ieee802_11.h	/^int ieee802_11_get_mib(struct hostapd_data *hapd, char *buf, size_t buflen);$/;"	p	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
ieee802_11_get_mib	src/ap/ieee802_11.h	/^static inline int ieee802_11_get_mib(struct hostapd_data *hapd, char *buf,$/;"	f	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
ieee802_11_get_mib_sta	src/ap/ieee802_11.c	/^int ieee802_11_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
ieee802_11_get_mib_sta	src/ap/ieee802_11.h	/^int ieee802_11_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
ieee802_11_get_mib_sta	src/ap/ieee802_11.h	/^static inline int ieee802_11_get_mib_sta(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
ieee802_11_ie_count	src/common/ieee802_11_common.c	/^int ieee802_11_ie_count(const u8 *ies, size_t ies_len)$/;"	f	signature:(const u8 *ies, size_t ies_len)
ieee802_11_ie_count	src/common/ieee802_11_common.h	/^int ieee802_11_ie_count(const u8 *ies, size_t ies_len);$/;"	p	signature:(const u8 *ies, size_t ies_len)
ieee802_11_mgmt	src/ap/ieee802_11.c	/^void ieee802_11_mgmt(struct hostapd_data *hapd, const u8 *buf, size_t len,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len, struct hostapd_frame_info *fi)
ieee802_11_mgmt	src/ap/ieee802_11.h	/^void ieee802_11_mgmt(struct hostapd_data *hapd, const u8 *buf, size_t len,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len, struct hostapd_frame_info *fi)
ieee802_11_mgmt_cb	src/ap/ieee802_11.c	/^void ieee802_11_mgmt_cb(struct hostapd_data *hapd, const u8 *buf, size_t len,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len, u16 stype, int ok)
ieee802_11_mgmt_cb	src/ap/ieee802_11.h	/^void ieee802_11_mgmt_cb(struct hostapd_data *hapd, const u8 *buf, size_t len,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *buf, size_t len, u16 stype, int ok)
ieee802_11_parse_elems	src/common/ieee802_11_common.c	/^ParseRes ieee802_11_parse_elems(const u8 *start, size_t len,$/;"	f	signature:(const u8 *start, size_t len, struct ieee802_11_elems *elems, int show_errors)
ieee802_11_parse_elems	src/common/ieee802_11_common.h	/^ParseRes ieee802_11_parse_elems(const u8 *start, size_t len,$/;"	p	signature:(const u8 *start, size_t len, struct ieee802_11_elems *elems, int show_errors)
ieee802_11_parse_vendor_specific	src/common/ieee802_11_common.c	/^static int ieee802_11_parse_vendor_specific(const u8 *pos, size_t elen,$/;"	f	file:	signature:(const u8 *pos, size_t elen, struct ieee802_11_elems *elems, int show_errors)
ieee802_11_print_ssid	src/ap/ieee802_11.c	/^void ieee802_11_print_ssid(char *buf, const u8 *ssid, u8 len)$/;"	f	signature:(char *buf, const u8 *ssid, u8 len)
ieee802_11_print_ssid	src/ap/ieee802_11.h	/^void ieee802_11_print_ssid(char *buf, const u8 *ssid, u8 len);$/;"	p	signature:(char *buf, const u8 *ssid, u8 len)
ieee802_11_rx_from_unknown	src/ap/ieee802_11.c	/^void ieee802_11_rx_from_unknown(struct hostapd_data *hapd, const u8 *src,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *src, int wds)
ieee802_11_rx_from_unknown	src/ap/ieee802_11.h	/^void ieee802_11_rx_from_unknown(struct hostapd_data *hapd, const u8 *src,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *src, int wds)
ieee802_11_sa_query_action	src/ap/ieee802_11.h	/^void ieee802_11_sa_query_action(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 action_type, const u8 *trans_id)
ieee802_11_sa_query_action	src/ap/ieee802_11_shared.c	/^void ieee802_11_sa_query_action(struct hostapd_data *hapd, const u8 *sa,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 action_type, const u8 *trans_id)
ieee802_11_send_sa_query_req	src/ap/ieee802_11.h	/^void ieee802_11_send_sa_query_req(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *trans_id)
ieee802_11_send_sa_query_req	src/ap/ieee802_11_shared.c	/^void ieee802_11_send_sa_query_req(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, const u8 *trans_id)
ieee802_11_send_sa_query_resp	src/ap/ieee802_11_shared.c	/^void ieee802_11_send_sa_query_resp(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 *trans_id)
ieee802_11_set_beacon	src/ap/beacon.c	/^void ieee802_11_set_beacon(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
ieee802_11_set_beacon	src/ap/beacon.h	/^void ieee802_11_set_beacon(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
ieee802_11_set_beacons	src/ap/beacon.c	/^void ieee802_11_set_beacons(struct hostapd_iface *iface)$/;"	f	signature:(struct hostapd_iface *iface)
ieee802_11_set_beacons	src/ap/beacon.h	/^void ieee802_11_set_beacons(struct hostapd_iface *iface);$/;"	p	signature:(struct hostapd_iface *iface)
ieee802_11_vendor_ie_concat	src/common/ieee802_11_common.c	/^struct wpabuf * ieee802_11_vendor_ie_concat(const u8 *ies, size_t ies_len,$/;"	f	signature:(const u8 *ies, size_t ies_len, u32 oui_type)
ieee802_11_vendor_ie_concat	src/common/ieee802_11_common.h	/^struct wpabuf * ieee802_11_vendor_ie_concat(const u8 *ies, size_t ies_len,$/;"	p	signature:(const u8 *ies, size_t ies_len, u32 oui_type)
ieee802_11f	src/ap/ap_config.h	/^	int ieee802_11f; \/* use IEEE 802.11f (IAPP) *\/$/;"	m	struct:hostapd_bss_config	access:public
ieee802_1x	src/ap/ap_config.h	/^	int ieee802_1x; \/* use IEEE 802.1X *\/$/;"	m	struct:hostapd_bss_config	access:public
ieee802_1x	src/drivers/driver.h	/^	int ieee802_1x;$/;"	m	struct:wpa_bss_params	access:public
ieee802_1x_aaa_send	src/ap/ieee802_1x.c	/^static void ieee802_1x_aaa_send(void *ctx, void *sta_ctx,$/;"	f	file:	signature:(void *ctx, void *sta_ctx, const u8 *data, size_t datalen)
ieee802_1x_abort_auth	src/ap/ieee802_1x.c	/^void ieee802_1x_abort_auth(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_abort_auth	src/ap/ieee802_1x.h	/^void ieee802_1x_abort_auth(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_alloc_eapol_sm	src/ap/ieee802_1x.c	/^ieee802_1x_alloc_eapol_sm(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_decapsulate_radius	src/ap/ieee802_1x.c	/^static void ieee802_1x_decapsulate_radius(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_deinit	src/ap/ieee802_1x.c	/^void ieee802_1x_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
ieee802_1x_deinit	src/ap/ieee802_1x.h	/^void ieee802_1x_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
ieee802_1x_dump_state	hostapd/dump_state.c	/^static void ieee802_1x_dump_state(FILE *f, const char *prefix,$/;"	f	file:	signature:(FILE *f, const char *prefix, struct sta_info *sta)
ieee802_1x_dump_state	src/ap/ieee802_1x.h	/^void ieee802_1x_dump_state(FILE *f, const char *prefix, struct sta_info *sta);$/;"	p	signature:(FILE *f, const char *prefix, struct sta_info *sta)
ieee802_1x_eapol_event	src/ap/ieee802_1x.c	/^static void ieee802_1x_eapol_event(void *ctx, void *sta_ctx,$/;"	f	file:	signature:(void *ctx, void *sta_ctx, enum eapol_event type)
ieee802_1x_eapol_key	src/ap/ieee802_1x.h	/^struct ieee802_1x_eapol_key {$/;"	s
ieee802_1x_eapol_key	src/eapol_supp/eapol_supp_sm.c	/^struct ieee802_1x_eapol_key {$/;"	s	file:
ieee802_1x_eapol_key::key_index	src/ap/ieee802_1x.h	/^	u8 key_index; \/* key flag in the most significant bit:$/;"	m	struct:ieee802_1x_eapol_key	access:public
ieee802_1x_eapol_key::key_index	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_index; \/* key flag in the most significant bit:$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
ieee802_1x_eapol_key::key_iv	src/ap/ieee802_1x.h	/^	u8 key_iv[16]; \/* cryptographically random number *\/$/;"	m	struct:ieee802_1x_eapol_key	access:public
ieee802_1x_eapol_key::key_iv	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_iv[IEEE8021X_KEY_IV_LEN]; \/* cryptographically random number *\/$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
ieee802_1x_eapol_key::key_length	src/ap/ieee802_1x.h	/^	u16 key_length;$/;"	m	struct:ieee802_1x_eapol_key	access:public
ieee802_1x_eapol_key::key_length	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_length[2];$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
ieee802_1x_eapol_key::key_signature	src/ap/ieee802_1x.h	/^	u8 key_signature[16]; \/* HMAC-MD5 message integrity check computed with$/;"	m	struct:ieee802_1x_eapol_key	access:public
ieee802_1x_eapol_key::key_signature	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_signature[IEEE8021X_KEY_SIGN_LEN];$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
ieee802_1x_eapol_key::replay_counter	src/ap/ieee802_1x.h	/^	u8 replay_counter[8]; \/* does not repeat within the life of the keying$/;"	m	struct:ieee802_1x_eapol_key	access:public
ieee802_1x_eapol_key::replay_counter	src/eapol_supp/eapol_supp_sm.c	/^	u8 replay_counter[IEEE8021X_REPLAY_COUNTER_LEN];$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
ieee802_1x_eapol_key::type	src/ap/ieee802_1x.h	/^	u8 type;$/;"	m	struct:ieee802_1x_eapol_key	access:public
ieee802_1x_eapol_key::type	src/eapol_supp/eapol_supp_sm.c	/^	u8 type;$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
ieee802_1x_eapol_send	src/ap/ieee802_1x.c	/^static void ieee802_1x_eapol_send(void *ctx, void *sta_ctx, u8 type,$/;"	f	file:	signature:(void *ctx, void *sta_ctx, u8 type, const u8 *data, size_t datalen)
ieee802_1x_encapsulate_radius	src/ap/ieee802_1x.c	/^static void ieee802_1x_encapsulate_radius(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *eap, size_t len)
ieee802_1x_finished	src/ap/ieee802_1x.c	/^static void ieee802_1x_finished(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, int success)
ieee802_1x_finished	src/ap/ieee802_1x.c	/^static void ieee802_1x_finished(struct hostapd_data *hapd,$/;"	p	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, int success)
ieee802_1x_free_station	src/ap/ieee802_1x.c	/^void ieee802_1x_free_station(struct sta_info *sta)$/;"	f	signature:(struct sta_info *sta)
ieee802_1x_free_station	src/ap/ieee802_1x.h	/^void ieee802_1x_free_station(struct sta_info *sta);$/;"	p	signature:(struct sta_info *sta)
ieee802_1x_get_eap_user	src/ap/ieee802_1x.c	/^static int ieee802_1x_get_eap_user(void *ctx, const u8 *identity,$/;"	f	file:	signature:(void *ctx, const u8 *identity, size_t identity_len, int phase2, struct eap_user *user)
ieee802_1x_get_group	src/ap/ieee802_1x.c	/^ieee802_1x_get_group(struct hostapd_data *hapd, struct hostapd_ssid *ssid,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct hostapd_ssid *ssid, size_t vlan_id)
ieee802_1x_get_identity	src/ap/ieee802_1x.c	/^u8 * ieee802_1x_get_identity(struct eapol_state_machine *sm, size_t *len)$/;"	f	signature:(struct eapol_state_machine *sm, size_t *len)
ieee802_1x_get_identity	src/ap/ieee802_1x.h	/^u8 * ieee802_1x_get_identity(struct eapol_state_machine *sm, size_t *len);$/;"	p	signature:(struct eapol_state_machine *sm, size_t *len)
ieee802_1x_get_key	src/ap/ieee802_1x.c	/^const u8 * ieee802_1x_get_key(struct eapol_state_machine *sm, size_t *len)$/;"	f	signature:(struct eapol_state_machine *sm, size_t *len)
ieee802_1x_get_key	src/ap/ieee802_1x.h	/^const u8 * ieee802_1x_get_key(struct eapol_state_machine *sm, size_t *len);$/;"	p	signature:(struct eapol_state_machine *sm, size_t *len)
ieee802_1x_get_keys	src/ap/ieee802_1x.c	/^static void ieee802_1x_get_keys(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, struct radius_msg *msg, struct radius_msg *req, const u8 *shared_secret, size_t shared_secret_len)
ieee802_1x_get_mib	src/ap/ieee802_1x.c	/^int ieee802_1x_get_mib(struct hostapd_data *hapd, char *buf, size_t buflen)$/;"	f	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
ieee802_1x_get_mib	src/ap/ieee802_1x.h	/^int ieee802_1x_get_mib(struct hostapd_data *hapd, char *buf, size_t buflen);$/;"	p	signature:(struct hostapd_data *hapd, char *buf, size_t buflen)
ieee802_1x_get_mib_sta	src/ap/ieee802_1x.c	/^int ieee802_1x_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
ieee802_1x_get_mib_sta	src/ap/ieee802_1x.h	/^int ieee802_1x_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, char *buf, size_t buflen)
ieee802_1x_get_radius_class	src/ap/ieee802_1x.c	/^u8 * ieee802_1x_get_radius_class(struct eapol_state_machine *sm, size_t *len,$/;"	f	signature:(struct eapol_state_machine *sm, size_t *len, int idx)
ieee802_1x_get_radius_class	src/ap/ieee802_1x.h	/^u8 * ieee802_1x_get_radius_class(struct eapol_state_machine *sm, size_t *len,$/;"	p	signature:(struct eapol_state_machine *sm, size_t *len, int idx)
ieee802_1x_group_alloc	src/ap/ieee802_1x.c	/^ieee802_1x_group_alloc(struct hostapd_data *hapd, const char *ifname)$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *ifname)
ieee802_1x_hdr	src/common/eapol_common.h	/^struct ieee802_1x_hdr {$/;"	s
ieee802_1x_hdr::length	src/common/eapol_common.h	/^	be16 length;$/;"	m	struct:ieee802_1x_hdr	access:public
ieee802_1x_hdr::type	src/common/eapol_common.h	/^	u8 type;$/;"	m	struct:ieee802_1x_hdr	access:public
ieee802_1x_hdr::version	src/common/eapol_common.h	/^	u8 version;$/;"	m	struct:ieee802_1x_hdr	access:public
ieee802_1x_init	src/ap/ieee802_1x.c	/^int ieee802_1x_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
ieee802_1x_init	src/ap/ieee802_1x.h	/^int ieee802_1x_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
ieee802_1x_learn_identity	src/ap/ieee802_1x.c	/^static void ieee802_1x_learn_identity(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct eapol_state_machine *sm, const u8 *eap, size_t len)
ieee802_1x_logger	src/ap/ieee802_1x.c	/^static void ieee802_1x_logger(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, eapol_logger_level level, const char *txt)
ieee802_1x_new_station	src/ap/ieee802_1x.c	/^void ieee802_1x_new_station(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_new_station	src/ap/ieee802_1x.h	/^void ieee802_1x_new_station(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_notify_port_enabled	src/ap/ieee802_1x.c	/^void ieee802_1x_notify_port_enabled(struct eapol_state_machine *sm,$/;"	f	signature:(struct eapol_state_machine *sm, int enabled)
ieee802_1x_notify_port_enabled	src/ap/ieee802_1x.h	/^void ieee802_1x_notify_port_enabled(struct eapol_state_machine *sm,$/;"	p	signature:(struct eapol_state_machine *sm, int enabled)
ieee802_1x_notify_port_valid	src/ap/ieee802_1x.c	/^void ieee802_1x_notify_port_valid(struct eapol_state_machine *sm,$/;"	f	signature:(struct eapol_state_machine *sm, int valid)
ieee802_1x_notify_port_valid	src/ap/ieee802_1x.h	/^void ieee802_1x_notify_port_valid(struct eapol_state_machine *sm,$/;"	p	signature:(struct eapol_state_machine *sm, int valid)
ieee802_1x_notify_pre_auth	src/ap/ieee802_1x.c	/^void ieee802_1x_notify_pre_auth(struct eapol_state_machine *sm, int pre_auth)$/;"	f	signature:(struct eapol_state_machine *sm, int pre_auth)
ieee802_1x_notify_pre_auth	src/ap/ieee802_1x.h	/^void ieee802_1x_notify_pre_auth(struct eapol_state_machine *sm, int pre_auth);$/;"	p	signature:(struct eapol_state_machine *sm, int pre_auth)
ieee802_1x_receive	src/ap/ieee802_1x.c	/^void ieee802_1x_receive(struct hostapd_data *hapd, const u8 *sa, const u8 *buf,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 *buf, size_t len)
ieee802_1x_receive	src/ap/ieee802_1x.h	/^void ieee802_1x_receive(struct hostapd_data *hapd, const u8 *sa, const u8 *buf,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *sa, const u8 *buf, size_t len)
ieee802_1x_receive_auth	src/ap/ieee802_1x.c	/^ieee802_1x_receive_auth(struct radius_msg *msg, struct radius_msg *req,$/;"	f	file:	signature:(struct radius_msg *msg, struct radius_msg *req, const u8 *shared_secret, size_t shared_secret_len, void *data)
ieee802_1x_rekey	src/ap/ieee802_1x.c	/^static void ieee802_1x_rekey(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
ieee802_1x_rekey_broadcast	src/ap/ieee802_1x.c	/^static int ieee802_1x_rekey_broadcast(struct hostapd_data *hapd)$/;"	f	file:	signature:(struct hostapd_data *hapd)
ieee802_1x_search_radius_identifier	src/ap/ieee802_1x.c	/^ieee802_1x_search_radius_identifier(struct hostapd_data *hapd, u8 identifier)$/;"	f	file:	signature:(struct hostapd_data *hapd, u8 identifier)
ieee802_1x_select_radius_identifier	src/ap/ieee802_1x.c	/^static int ieee802_1x_select_radius_identifier(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, void *ctx)
ieee802_1x_send	src/ap/ieee802_1x.c	/^static void ieee802_1x_send(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 type, const u8 *data, size_t datalen)
ieee802_1x_set_port_authorized	src/ap/ieee802_1x.c	/^static void ieee802_1x_set_port_authorized(void *ctx, void *sta_ctx,$/;"	f	file:	signature:(void *ctx, void *sta_ctx, int authorized)
ieee802_1x_set_sta_authorized	src/ap/ieee802_1x.c	/^void ieee802_1x_set_sta_authorized(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int authorized)
ieee802_1x_set_sta_authorized	src/ap/ieee802_1x.h	/^void ieee802_1x_set_sta_authorized(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int authorized)
ieee802_1x_sta_entry_alive	src/ap/ieee802_1x.c	/^static int ieee802_1x_sta_entry_alive(void *ctx, const u8 *addr)$/;"	f	file:	signature:(void *ctx, const u8 *addr)
ieee802_1x_sta_key_available	src/ap/ieee802_1x.c	/^static int ieee802_1x_sta_key_available(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, void *ctx)
ieee802_1x_store_radius_class	src/ap/ieee802_1x.c	/^static void ieee802_1x_store_radius_class(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, struct radius_msg *msg)
ieee802_1x_tx_key	src/ap/ieee802_1x.c	/^void ieee802_1x_tx_key(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_tx_key	src/ap/ieee802_1x.h	/^void ieee802_1x_tx_key(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
ieee802_1x_tx_key_one	src/ap/ieee802_1x.c	/^static void ieee802_1x_tx_key_one(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, int idx, int broadcast, u8 *key_data, size_t key_len)
ieee802_1x_tx_status	src/ap/ieee802_1x.c	/^int ieee802_1x_tx_status(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *buf, size_t len, int ack)
ieee802_1x_tx_status	src/ap/ieee802_1x.h	/^int ieee802_1x_tx_status(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, const u8 *buf, size_t len, int ack)
ieee802_1x_update_sta_identity	src/ap/ieee802_1x.c	/^static void ieee802_1x_update_sta_identity(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, struct radius_msg *msg)
ielen	src/drivers/driver_test.c	/^	size_t ielen;$/;"	m	struct:test_driver_bss	file:	access:public
ies	src/drivers/driver.h	/^		const u8 *ies;$/;"	m	struct:wpa_event_data::auth_info	access:public
ies	src/drivers/driver.h	/^		const u8 *ies;$/;"	m	struct:wpa_event_data::ft_ies	access:public
ies_len	src/drivers/driver.h	/^		size_t ies_len;$/;"	m	struct:wpa_event_data::auth_info	access:public
ies_len	src/drivers/driver.h	/^		size_t ies_len;$/;"	m	struct:wpa_event_data::ft_ies	access:public
ievent	src/drivers/driver.h	/^		} ievent;$/;"	m	struct:wpa_event_data::interface_status	typeref:enum:wpa_event_data::interface_status::__anon90	access:public
if_add	src/drivers/driver.h	/^	int (*if_add)(void *priv, enum wpa_driver_if_type type,$/;"	m	struct:wpa_driver_ops	access:public
if_add_ifindex	src/drivers/driver_nl80211.c	/^	int if_add_ifindex;$/;"	m	struct:nl80211_global	file:	access:public
if_disabled	src/drivers/driver_nl80211.c	/^	int if_disabled;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
if_disabled	src/drivers/driver_wext.h	/^	int if_disabled;$/;"	m	struct:wpa_driver_wext_data	access:public
if_indices	src/drivers/driver_nl80211.c	/^	int *if_indices;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
if_mii	src/drivers/driver_roboswitch.c	/^static inline struct mii_ioctl_data *if_mii(struct ifreq *rq)$/;"	f	file:	signature:(struct ifreq *rq)
if_remove	src/drivers/driver.h	/^	int (*if_remove)(void *priv, enum wpa_driver_if_type type,$/;"	m	struct:wpa_driver_ops	access:public
if_removed	src/drivers/driver_nl80211.c	/^	int if_removed;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
if_removed	src/drivers/driver_wext.h	/^	int if_removed;$/;"	m	struct:wpa_driver_wext_data	access:public
iface	hostapd/main.c	/^	struct hostapd_iface **iface;   \/\/ 接口数组$/;"	m	struct:hapd_interfaces	typeref:struct:hapd_interfaces::hostapd_iface	file:	access:public
iface	src/ap/ap_config.h	/^	char iface[IFNAMSIZ + 1];       \/\/ 此bss名$/;"	m	struct:hostapd_bss_config	access:public
iface	src/ap/hostapd.h	/^	struct hostapd_iface *iface;        \/\/ 指向上层hostapd_iface$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_iface	access:public
iface	src/drivers/driver_atheros.c	/^	char	iface[IFNAMSIZ + 1];$/;"	m	struct:atheros_driver_data	file:	access:public
iface	src/drivers/driver_hostap.c	/^	char iface[IFNAMSIZ + 1];$/;"	m	struct:hostap_driver_data	file:	access:public
iface	src/drivers/driver_madwifi.c	/^	char	iface[IFNAMSIZ + 1];$/;"	m	struct:madwifi_driver_data	file:	access:public
ifconfig_down	src/ap/vlan_init.c	/^static int ifconfig_down(const char *if_name)$/;"	f	file:	signature:(const char *if_name)
ifconfig_helper	src/ap/vlan_init.c	/^static int ifconfig_helper(const char *if_name, int up)$/;"	f	file:	signature:(const char *if_name, int up)
ifconfig_up	src/ap/vlan_init.c	/^static int ifconfig_up(const char *if_name)$/;"	f	file:	signature:(const char *if_name)
iff_allmulti	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
iff_up	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
ifi_change	src/drivers/priv_netlink.h	/^	unsigned ifi_change;$/;"	m	struct:ifinfomsg	access:public
ifi_family	src/drivers/priv_netlink.h	/^	unsigned char ifi_family;$/;"	m	struct:ifinfomsg	access:public
ifi_flags	src/drivers/priv_netlink.h	/^	unsigned ifi_flags;$/;"	m	struct:ifinfomsg	access:public
ifi_index	src/drivers/priv_netlink.h	/^	int ifi_index;$/;"	m	struct:ifinfomsg	access:public
ifi_type	src/drivers/priv_netlink.h	/^	unsigned short ifi_type;$/;"	m	struct:ifinfomsg	access:public
ifindex	src/ap/preauth_auth.c	/^	int ifindex;$/;"	m	struct:rsn_preauth_interface	file:	access:public
ifindex	src/drivers/driver_atheros.c	/^	int     ifindex;$/;"	m	struct:atheros_driver_data	file:	access:public
ifindex	src/drivers/driver_bsd.c	/^	unsigned int ifindex;		\/* interface index *\/$/;"	m	struct:bsd_driver_data	file:	access:public
ifindex	src/drivers/driver_madwifi.c	/^	int     ifindex;$/;"	m	struct:madwifi_driver_data	file:	access:public
ifindex	src/drivers/driver_nl80211.c	/^	int ifindex;$/;"	m	struct:i802_bss	file:	access:public
ifindex	src/drivers/driver_nl80211.c	/^	int ifindex;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
ifindex	src/drivers/driver_wext.h	/^	int ifindex;$/;"	m	struct:wpa_driver_wext_data	access:public
ifindex	src/l2_packet/l2_packet_linux.c	/^	int ifindex;$/;"	m	struct:l2_packet_data	file:	access:public
ifindex2	src/drivers/driver_wext.h	/^	int ifindex2;$/;"	m	struct:wpa_driver_wext_data	access:public
ifinfomsg	src/drivers/priv_netlink.h	/^struct ifinfomsg$/;"	s
ifinfomsg::__ifi_pad	src/drivers/priv_netlink.h	/^	unsigned char __ifi_pad;$/;"	m	struct:ifinfomsg	access:public
ifinfomsg::ifi_change	src/drivers/priv_netlink.h	/^	unsigned ifi_change;$/;"	m	struct:ifinfomsg	access:public
ifinfomsg::ifi_family	src/drivers/priv_netlink.h	/^	unsigned char ifi_family;$/;"	m	struct:ifinfomsg	access:public
ifinfomsg::ifi_flags	src/drivers/priv_netlink.h	/^	unsigned ifi_flags;$/;"	m	struct:ifinfomsg	access:public
ifinfomsg::ifi_index	src/drivers/priv_netlink.h	/^	int ifi_index;$/;"	m	struct:ifinfomsg	access:public
ifinfomsg::ifi_type	src/drivers/priv_netlink.h	/^	unsigned short ifi_type;$/;"	m	struct:ifinfomsg	access:public
ifname	src/ap/ap_config.h	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:hostapd_vlan	access:public
ifname	src/ap/preauth_auth.c	/^	char *ifname;$/;"	m	struct:rsn_preauth_interface	file:	access:public
ifname	src/drivers/driver.h	/^		char ifname[100];$/;"	m	struct:wpa_event_data::interface_status	access:public
ifname	src/drivers/driver.h	/^	char *ifname;$/;"	m	struct:wpa_interface_info	access:public
ifname	src/drivers/driver.h	/^	const char *ifname;$/;"	m	struct:wpa_bss_params	access:public
ifname	src/drivers/driver.h	/^	const char *ifname;$/;"	m	struct:wpa_init_params	access:public
ifname	src/drivers/driver_broadcom.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
ifname	src/drivers/driver_bsd.c	/^	char	ifname[IFNAMSIZ+1];	\/* interface name *\/$/;"	m	struct:bsd_driver_data	file:	access:public
ifname	src/drivers/driver_hostap.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
ifname	src/drivers/driver_madwifi.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
ifname	src/drivers/driver_ndis.h	/^	char ifname[100]; \/* GUID: {7EE3EFE5-C165-472F-986D-F6FBEDFE8C8D} *\/$/;"	m	struct:wpa_driver_ndis_data	access:public
ifname	src/drivers/driver_nl80211.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:i802_bss	file:	access:public
ifname	src/drivers/driver_privsep.c	/^	char ifname[16];$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
ifname	src/drivers/driver_ralink.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
ifname	src/drivers/driver_roboswitch.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
ifname	src/drivers/driver_test.c	/^	char ifname[IFNAMSIZ];$/;"	m	struct:test_driver_bss	file:	access:public
ifname	src/drivers/driver_wext.h	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_wext_data	access:public
ifname	src/drivers/driver_wired.c	/^	char ifname[IFNAMSIZ + 1];  \/\/ 接口名$/;"	m	struct:wpa_driver_wired_data	file:	access:public
ifname	src/drivers/ndis_events.c	/^	char *ifname; \/* {GUID..} *\/$/;"	m	struct:ndis_events_data	file:	access:public
ifname	src/drivers/rfkill.h	/^	char ifname[IFNAMSIZ];$/;"	m	struct:rfkill_config	access:public
ifname	src/l2_packet/l2_packet_freebsd.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
ifname	src/l2_packet/l2_packet_linux.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:l2_packet_data	file:	access:public
ifname	src/l2_packet/l2_packet_ndis.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
ifname	src/l2_packet/l2_packet_none.c	/^	char ifname[17];$/;"	m	struct:l2_packet_data	file:	access:public
ifname	src/l2_packet/l2_packet_pcap.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
ifname	src/l2_packet/l2_packet_winpcap.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
ifname	src/rsn_supp/wpa_i.h	/^	const char *ifname;$/;"	m	struct:wpa_sm	access:public
ifname	src/wps/wps_er.h	/^	char ifname[17];$/;"	m	struct:wps_er	access:public
ifr	src/drivers/driver_roboswitch.c	/^	struct ifreq ifr;$/;"	m	struct:wpa_driver_roboswitch_data	typeref:struct:wpa_driver_roboswitch_data::ifreq	file:	access:public
ifr_ifrn	src/drivers/wireless_copy.h	/^	} ifr_ifrn;$/;"	m	struct:iwreq	typeref:union:iwreq::__anon92	access:public
ifrn_name	src/drivers/wireless_copy.h	/^		char	ifrn_name[IFNAMSIZ];	\/* if name, e.g. "eth0" *\/$/;"	m	union:iwreq::__anon92	access:public
ignore	src/eap_peer/eap_i.h	/^	Boolean ignore;$/;"	m	struct:eap_method_ret	access:public
ignore	src/eap_peer/eap_i.h	/^	Boolean ignore;$/;"	m	struct:eap_sm	access:public
ignore	src/eap_server/eap_i.h	/^	Boolean ignore;$/;"	m	struct:eap_sm	access:public
ignore_broadcast_ssid	src/ap/ap_config.h	/^	int ignore_broadcast_ssid;$/;"	m	struct:hostapd_bss_config	access:public
ignore_if_down_event	src/drivers/driver_nl80211.c	/^	int ignore_if_down_event;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
igtk	src/ap/wpa_auth_ie.h	/^	const u8 *igtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
igtk	src/common/wpa_common.h	/^	const u8 *igtk;$/;"	m	struct:wpa_ft_ies	access:public
igtk	src/common/wpa_common.h	/^	u8 igtk[WPA_IGTK_LEN];$/;"	m	struct:wpa_igtk_kde	access:public
igtk	src/rsn_supp/wpa_ie.h	/^	const u8 *igtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
igtk_len	src/ap/wpa_auth_ie.h	/^	size_t igtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
igtk_len	src/common/wpa_common.h	/^	size_t igtk_len;$/;"	m	struct:wpa_ft_ies	access:public
igtk_len	src/rsn_supp/wpa_ie.h	/^	size_t igtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
ik	src/eap_peer/eap_aka.c	/^	u8 ik[EAP_AKA_IK_LEN], ck[EAP_AKA_CK_LEN], res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
ik	src/eap_server/eap_server_aka.c	/^	u8 ik[EAP_AKA_IK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
ik	src/eap_server/eap_sim_db.c	/^			u8 ik[EAP_AKA_IK_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
ikev2	src/eap_peer/eap_ikev2.c	/^	struct ikev2_responder_data ikev2;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::ikev2_responder_data	file:	access:public
ikev2	src/eap_server/eap_server_ikev2.c	/^	struct ikev2_initiator_data ikev2;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::ikev2_initiator_data	file:	access:public
ikev2_build_auth	src/eap_peer/ikev2.c	/^static int ikev2_build_auth(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_auth	src/eap_server/ikev2.c	/^static int ikev2_build_auth(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_encrypted	src/eap_common/ikev2_common.c	/^int ikev2_build_encrypted(int encr_id, int integ_id, struct ikev2_keys *keys,$/;"	f	signature:(int encr_id, int integ_id, struct ikev2_keys *keys, int initiator, struct wpabuf *msg, struct wpabuf *plain, u8 next_payload)
ikev2_build_encrypted	src/eap_common/ikev2_common.h	/^int ikev2_build_encrypted(int encr_id, int integ_id, struct ikev2_keys *keys,$/;"	p	signature:(int encr_id, int integ_id, struct ikev2_keys *keys, int initiator, struct wpabuf *msg, struct wpabuf *plain, u8 next_payload)
ikev2_build_hdr	src/eap_peer/ikev2.c	/^static void ikev2_build_hdr(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 exchange_type, u8 next_payload, u32 message_id)
ikev2_build_hdr	src/eap_server/ikev2.c	/^static void ikev2_build_hdr(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct wpabuf *msg, u8 exchange_type, u8 next_payload, u32 message_id)
ikev2_build_idi	src/eap_server/ikev2.c	/^static int ikev2_build_idi(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_idr	src/eap_peer/ikev2.c	/^static int ikev2_build_idr(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_kei	src/eap_server/ikev2.c	/^static int ikev2_build_kei(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_ker	src/eap_peer/ikev2.c	/^static int ikev2_build_ker(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_ni	src/eap_server/ikev2.c	/^static int ikev2_build_ni(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_notification	src/eap_peer/ikev2.c	/^static int ikev2_build_notification(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_notify	src/eap_peer/ikev2.c	/^static struct wpabuf * ikev2_build_notify(struct ikev2_responder_data *data)$/;"	f	file:	signature:(struct ikev2_responder_data *data)
ikev2_build_nr	src/eap_peer/ikev2.c	/^static int ikev2_build_nr(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_sa_auth	src/eap_peer/ikev2.c	/^static struct wpabuf * ikev2_build_sa_auth(struct ikev2_responder_data *data)$/;"	f	file:	signature:(struct ikev2_responder_data *data)
ikev2_build_sa_auth	src/eap_server/ikev2.c	/^static struct wpabuf * ikev2_build_sa_auth(struct ikev2_initiator_data *data)$/;"	f	file:	signature:(struct ikev2_initiator_data *data)
ikev2_build_sa_init	src/eap_peer/ikev2.c	/^static struct wpabuf * ikev2_build_sa_init(struct ikev2_responder_data *data)$/;"	f	file:	signature:(struct ikev2_responder_data *data)
ikev2_build_sa_init	src/eap_server/ikev2.c	/^static struct wpabuf * ikev2_build_sa_init(struct ikev2_initiator_data *data)$/;"	f	file:	signature:(struct ikev2_initiator_data *data)
ikev2_build_sai	src/eap_server/ikev2.c	/^static int ikev2_build_sai(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_build_sar1	src/eap_peer/ikev2.c	/^static int ikev2_build_sar1(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, struct wpabuf *msg, u8 next_payload)
ikev2_decrypt_payload	src/eap_common/ikev2_common.c	/^u8 * ikev2_decrypt_payload(int encr_id, int integ_id,$/;"	f	signature:(int encr_id, int integ_id, struct ikev2_keys *keys, int initiator, const struct ikev2_hdr *hdr, const u8 *encrypted, size_t encrypted_len, size_t *res_len)
ikev2_decrypt_payload	src/eap_common/ikev2_common.h	/^u8 * ikev2_decrypt_payload(int encr_id, int integ_id, struct ikev2_keys *keys,$/;"	p	signature:(int encr_id, int integ_id, struct ikev2_keys *keys, int initiator, const struct ikev2_hdr *hdr, const u8 *encrypted, size_t encrypted_len, size_t *res_len)
ikev2_derive_auth_data	src/eap_common/ikev2_common.c	/^int ikev2_derive_auth_data(int prf_alg, const struct wpabuf *sign_msg,$/;"	f	signature:(int prf_alg, const struct wpabuf *sign_msg, const u8 *ID, size_t ID_len, u8 ID_type, struct ikev2_keys *keys, int initiator, const u8 *shared_secret, size_t shared_secret_len, const u8 *nonce, size_t nonce_len, const u8 *key_pad, size_t key_pad_len, u8 *auth_data)
ikev2_derive_auth_data	src/eap_common/ikev2_common.h	/^int ikev2_derive_auth_data(int prf_alg, const struct wpabuf *sign_msg,$/;"	p	signature:(int prf_alg, const struct wpabuf *sign_msg, const u8 *ID, size_t ID_len, u8 ID_type, struct ikev2_keys *keys, int initiator, const u8 *shared_secret, size_t shared_secret_len, const u8 *nonce, size_t nonce_len, const u8 *key_pad, size_t key_pad_len, u8 *auth_data)
ikev2_derive_keys	src/eap_peer/ikev2.c	/^static int ikev2_derive_keys(struct ikev2_responder_data *data)$/;"	f	file:	signature:(struct ikev2_responder_data *data)
ikev2_derive_keys	src/eap_server/ikev2.c	/^static int ikev2_derive_keys(struct ikev2_initiator_data *data)$/;"	f	file:	signature:(struct ikev2_initiator_data *data)
ikev2_derive_sk_keys	src/eap_common/ikev2_common.c	/^int ikev2_derive_sk_keys(const struct ikev2_prf_alg *prf,$/;"	f	signature:(const struct ikev2_prf_alg *prf, const struct ikev2_integ_alg *integ, const struct ikev2_encr_alg *encr, const u8 *skeyseed, const u8 *data, size_t data_len, struct ikev2_keys *keys)
ikev2_derive_sk_keys	src/eap_common/ikev2_common.h	/^int ikev2_derive_sk_keys(const struct ikev2_prf_alg *prf,$/;"	p	signature:(const struct ikev2_prf_alg *prf, const struct ikev2_integ_alg *integ, const struct ikev2_encr_alg *encr, const u8 *skeyseed, const u8 *data, size_t data_len, struct ikev2_keys *keys)
ikev2_encr_alg	src/eap_common/ikev2_common.h	/^struct ikev2_encr_alg {$/;"	s
ikev2_encr_alg::block_size	src/eap_common/ikev2_common.h	/^	size_t block_size;$/;"	m	struct:ikev2_encr_alg	access:public
ikev2_encr_alg::id	src/eap_common/ikev2_common.h	/^	int id;$/;"	m	struct:ikev2_encr_alg	access:public
ikev2_encr_alg::key_len	src/eap_common/ikev2_common.h	/^	size_t key_len;$/;"	m	struct:ikev2_encr_alg	access:public
ikev2_encr_algs	src/eap_common/ikev2_common.c	/^static struct ikev2_encr_alg ikev2_encr_algs[] = {$/;"	v	typeref:struct:ikev2_encr_alg	file:
ikev2_encr_decrypt	src/eap_common/ikev2_common.c	/^int ikev2_encr_decrypt(int alg, const u8 *key, size_t key_len, const u8 *iv,$/;"	f	signature:(int alg, const u8 *key, size_t key_len, const u8 *iv, const u8 *crypt, u8 *plain, size_t len)
ikev2_encr_decrypt	src/eap_common/ikev2_common.h	/^int ikev2_encr_decrypt(int alg, const u8 *key, size_t key_len, const u8 *iv,$/;"	p	signature:(int alg, const u8 *key, size_t key_len, const u8 *iv, const u8 *crypt, u8 *plain, size_t len)
ikev2_encr_encrypt	src/eap_common/ikev2_common.c	/^int ikev2_encr_encrypt(int alg, const u8 *key, size_t key_len, const u8 *iv,$/;"	f	signature:(int alg, const u8 *key, size_t key_len, const u8 *iv, const u8 *plain, u8 *crypt, size_t len)
ikev2_encr_encrypt	src/eap_common/ikev2_common.h	/^int ikev2_encr_encrypt(int alg, const u8 *key, size_t key_len, const u8 *iv,$/;"	p	signature:(int alg, const u8 *key, size_t key_len, const u8 *iv, const u8 *plain, u8 *crypt, size_t len)
ikev2_free_keys	src/eap_common/ikev2_common.c	/^void ikev2_free_keys(struct ikev2_keys *keys)$/;"	f	signature:(struct ikev2_keys *keys)
ikev2_free_keys	src/eap_common/ikev2_common.h	/^void ikev2_free_keys(struct ikev2_keys *keys);$/;"	p	signature:(struct ikev2_keys *keys)
ikev2_get_encr	src/eap_common/ikev2_common.c	/^const struct ikev2_encr_alg * ikev2_get_encr(int id)$/;"	f	signature:(int id)
ikev2_get_encr	src/eap_common/ikev2_common.h	/^const struct ikev2_encr_alg * ikev2_get_encr(int id);$/;"	p	signature:(int id)
ikev2_get_integ	src/eap_common/ikev2_common.c	/^const struct ikev2_integ_alg * ikev2_get_integ(int id)$/;"	f	signature:(int id)
ikev2_get_integ	src/eap_common/ikev2_common.h	/^const struct ikev2_integ_alg * ikev2_get_integ(int id);$/;"	p	signature:(int id)
ikev2_get_prf	src/eap_common/ikev2_common.c	/^const struct ikev2_prf_alg * ikev2_get_prf(int id)$/;"	f	signature:(int id)
ikev2_get_prf	src/eap_common/ikev2_common.h	/^const struct ikev2_prf_alg * ikev2_get_prf(int id);$/;"	p	signature:(int id)
ikev2_hdr	src/eap_common/ikev2_common.h	/^struct ikev2_hdr {$/;"	s
ikev2_hdr::exchange_type	src/eap_common/ikev2_common.h	/^	u8 exchange_type;$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::flags	src/eap_common/ikev2_common.h	/^	u8 flags;$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::i_spi	src/eap_common/ikev2_common.h	/^	u8 i_spi[IKEV2_SPI_LEN]; \/* IKE_SA Initiator's SPI *\/$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::length	src/eap_common/ikev2_common.h	/^	u8 length[4]; \/* total length of HDR + payloads *\/$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::message_id	src/eap_common/ikev2_common.h	/^	u8 message_id[4];$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::next_payload	src/eap_common/ikev2_common.h	/^	u8 next_payload;$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::r_spi	src/eap_common/ikev2_common.h	/^	u8 r_spi[IKEV2_SPI_LEN]; \/* IKE_SA Responder's SPI *\/$/;"	m	struct:ikev2_hdr	access:public
ikev2_hdr::version	src/eap_common/ikev2_common.h	/^	u8 version; \/* MjVer | MnVer *\/$/;"	m	struct:ikev2_hdr	access:public
ikev2_initiator_build	src/eap_server/ikev2.c	/^struct wpabuf * ikev2_initiator_build(struct ikev2_initiator_data *data)$/;"	f	signature:(struct ikev2_initiator_data *data)
ikev2_initiator_build	src/eap_server/ikev2.h	/^struct wpabuf * ikev2_initiator_build(struct ikev2_initiator_data *data);$/;"	p	signature:(struct ikev2_initiator_data *data)
ikev2_initiator_data	src/eap_server/ikev2.h	/^struct ikev2_initiator_data {$/;"	s
ikev2_initiator_data::CHILD_SA	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
ikev2_initiator_data::IDi	src/eap_server/ikev2.h	/^	u8 *IDi;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::IDi_len	src/eap_server/ikev2.h	/^	size_t IDi_len;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::IDr	src/eap_server/ikev2.h	/^	u8 *IDr;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::IDr_len	src/eap_server/ikev2.h	/^	size_t IDr_len;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::IDr_type	src/eap_server/ikev2.h	/^	u8 IDr_type;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::IKEV2_DONE	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
ikev2_initiator_data::PEER_AUTH_CERT	src/eap_server/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_initiator_data::__anon135
ikev2_initiator_data::PEER_AUTH_SECRET	src/eap_server/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_initiator_data::__anon135
ikev2_initiator_data::SA_AUTH	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
ikev2_initiator_data::SA_INIT	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	e	enum:ikev2_initiator_data::__anon134
ikev2_initiator_data::cb_ctx	src/eap_server/ikev2.h	/^	void *cb_ctx;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::dh	src/eap_server/ikev2.h	/^	const struct dh_group *dh;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::dh_group	access:public
ikev2_initiator_data::get_shared_secret	src/eap_server/ikev2.h	/^	const u8 * (*get_shared_secret)(void *ctx, const u8 *IDr,$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::i_dh_private	src/eap_server/ikev2.h	/^	struct wpabuf *i_dh_private;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
ikev2_initiator_data::i_nonce	src/eap_server/ikev2.h	/^	u8 i_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::i_nonce_len	src/eap_server/ikev2.h	/^	size_t i_nonce_len;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::i_sign_msg	src/eap_server/ikev2.h	/^	struct wpabuf *i_sign_msg;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
ikev2_initiator_data::i_spi	src/eap_server/ikev2.h	/^	u8 i_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::key_pad	src/eap_server/ikev2.h	/^	u8 *key_pad;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::key_pad_len	src/eap_server/ikev2.h	/^	size_t key_pad_len;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::keys	src/eap_server/ikev2.h	/^	struct ikev2_keys keys;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::ikev2_keys	access:public
ikev2_initiator_data::peer_auth	src/eap_server/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	m	struct:ikev2_initiator_data	typeref:enum:ikev2_initiator_data::__anon135	access:public
ikev2_initiator_data::proposal	src/eap_server/ikev2.h	/^	struct ikev2_proposal_data proposal;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::ikev2_proposal_data	access:public
ikev2_initiator_data::r_dh_public	src/eap_server/ikev2.h	/^	struct wpabuf *r_dh_public;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
ikev2_initiator_data::r_nonce	src/eap_server/ikev2.h	/^	u8 r_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::r_nonce_len	src/eap_server/ikev2.h	/^	size_t r_nonce_len;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::r_sign_msg	src/eap_server/ikev2.h	/^	struct wpabuf *r_sign_msg;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
ikev2_initiator_data::r_spi	src/eap_server/ikev2.h	/^	u8 r_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::shared_secret	src/eap_server/ikev2.h	/^	u8 *shared_secret;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::shared_secret_len	src/eap_server/ikev2.h	/^	size_t shared_secret_len;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_data::state	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	m	struct:ikev2_initiator_data	typeref:enum:ikev2_initiator_data::__anon134	access:public
ikev2_initiator_data::unknown_user	src/eap_server/ikev2.h	/^	int unknown_user;$/;"	m	struct:ikev2_initiator_data	access:public
ikev2_initiator_deinit	src/eap_server/ikev2.c	/^void ikev2_initiator_deinit(struct ikev2_initiator_data *data)$/;"	f	signature:(struct ikev2_initiator_data *data)
ikev2_initiator_deinit	src/eap_server/ikev2.h	/^void ikev2_initiator_deinit(struct ikev2_initiator_data *data);$/;"	p	signature:(struct ikev2_initiator_data *data)
ikev2_initiator_process	src/eap_server/ikev2.c	/^int ikev2_initiator_process(struct ikev2_initiator_data *data,$/;"	f	signature:(struct ikev2_initiator_data *data, const struct wpabuf *buf)
ikev2_initiator_process	src/eap_server/ikev2.h	/^int ikev2_initiator_process(struct ikev2_initiator_data *data,$/;"	p	signature:(struct ikev2_initiator_data *data, const struct wpabuf *buf)
ikev2_integ_alg	src/eap_common/ikev2_common.h	/^struct ikev2_integ_alg {$/;"	s
ikev2_integ_alg::hash_len	src/eap_common/ikev2_common.h	/^	size_t hash_len;$/;"	m	struct:ikev2_integ_alg	access:public
ikev2_integ_alg::id	src/eap_common/ikev2_common.h	/^	int id;$/;"	m	struct:ikev2_integ_alg	access:public
ikev2_integ_alg::key_len	src/eap_common/ikev2_common.h	/^	size_t key_len;$/;"	m	struct:ikev2_integ_alg	access:public
ikev2_integ_algs	src/eap_common/ikev2_common.c	/^static struct ikev2_integ_alg ikev2_integ_algs[] = {$/;"	v	typeref:struct:ikev2_integ_alg	file:
ikev2_integ_hash	src/eap_common/ikev2_common.c	/^int ikev2_integ_hash(int alg, const u8 *key, size_t key_len, const u8 *data,$/;"	f	signature:(int alg, const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *hash)
ikev2_integ_hash	src/eap_common/ikev2_common.h	/^int ikev2_integ_hash(int alg, const u8 *key, size_t key_len, const u8 *data,$/;"	p	signature:(int alg, const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *hash)
ikev2_keys	src/eap_common/ikev2_common.h	/^struct ikev2_keys {$/;"	s
ikev2_keys::SK_ai	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_ar	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_d	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_d_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_ei	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_encr_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_er	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_integ_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_pi	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_pr	src/eap_common/ikev2_common.h	/^	u8 *SK_d, *SK_ai, *SK_ar, *SK_ei, *SK_er, *SK_pi, *SK_pr;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys::SK_prf_len	src/eap_common/ikev2_common.h	/^	size_t SK_d_len, SK_integ_len, SK_encr_len, SK_prf_len;$/;"	m	struct:ikev2_keys	access:public
ikev2_keys_set	src/eap_common/ikev2_common.c	/^int ikev2_keys_set(struct ikev2_keys *keys)$/;"	f	signature:(struct ikev2_keys *keys)
ikev2_keys_set	src/eap_common/ikev2_common.h	/^int ikev2_keys_set(struct ikev2_keys *keys);$/;"	p	signature:(struct ikev2_keys *keys)
ikev2_parse_payloads	src/eap_common/ikev2_common.c	/^int ikev2_parse_payloads(struct ikev2_payloads *payloads,$/;"	f	signature:(struct ikev2_payloads *payloads, u8 next_payload, const u8 *pos, const u8 *end)
ikev2_parse_payloads	src/eap_common/ikev2_common.h	/^int ikev2_parse_payloads(struct ikev2_payloads *payloads,$/;"	p	signature:(struct ikev2_payloads *payloads, u8 next_payload, const u8 *pos, const u8 *end)
ikev2_parse_proposal	src/eap_peer/ikev2.c	/^static int ikev2_parse_proposal(struct ikev2_proposal_data *prop,$/;"	f	file:	signature:(struct ikev2_proposal_data *prop, const u8 *pos, const u8 *end)
ikev2_parse_proposal	src/eap_server/ikev2.c	/^static int ikev2_parse_proposal(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct ikev2_proposal_data *prop, const u8 *pos, const u8 *end)
ikev2_parse_transform	src/eap_peer/ikev2.c	/^static int ikev2_parse_transform(struct ikev2_proposal_data *prop,$/;"	f	file:	signature:(struct ikev2_proposal_data *prop, const u8 *pos, const u8 *end)
ikev2_parse_transform	src/eap_server/ikev2.c	/^static int ikev2_parse_transform(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, struct ikev2_proposal_data *prop, const u8 *pos, const u8 *end)
ikev2_payload_hdr	src/eap_common/ikev2_common.h	/^struct ikev2_payload_hdr {$/;"	s
ikev2_payload_hdr::flags	src/eap_common/ikev2_common.h	/^	u8 flags;$/;"	m	struct:ikev2_payload_hdr	access:public
ikev2_payload_hdr::next_payload	src/eap_common/ikev2_common.h	/^	u8 next_payload;$/;"	m	struct:ikev2_payload_hdr	access:public
ikev2_payload_hdr::payload_length	src/eap_common/ikev2_common.h	/^	u8 payload_length[2]; \/* this payload, including the payload header *\/$/;"	m	struct:ikev2_payload_hdr	access:public
ikev2_payloads	src/eap_common/ikev2_common.h	/^struct ikev2_payloads {$/;"	s
ikev2_payloads::auth	src/eap_common/ikev2_common.h	/^	const u8 *auth;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::auth_len	src/eap_common/ikev2_common.h	/^	size_t auth_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::cert	src/eap_common/ikev2_common.h	/^	const u8 *cert;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::cert_len	src/eap_common/ikev2_common.h	/^	size_t cert_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::encr_next_payload	src/eap_common/ikev2_common.h	/^	u8 encr_next_payload;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::encrypted	src/eap_common/ikev2_common.h	/^	const u8 *encrypted;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::encrypted_len	src/eap_common/ikev2_common.h	/^	size_t encrypted_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::idi	src/eap_common/ikev2_common.h	/^	const u8 *idi;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::idi_len	src/eap_common/ikev2_common.h	/^	size_t idi_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::idr	src/eap_common/ikev2_common.h	/^	const u8 *idr;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::idr_len	src/eap_common/ikev2_common.h	/^	size_t idr_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::ke	src/eap_common/ikev2_common.h	/^	const u8 *ke;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::ke_len	src/eap_common/ikev2_common.h	/^	size_t ke_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::nonce	src/eap_common/ikev2_common.h	/^	const u8 *nonce;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::nonce_len	src/eap_common/ikev2_common.h	/^	size_t nonce_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::notification	src/eap_common/ikev2_common.h	/^	const u8 *notification;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::notification_len	src/eap_common/ikev2_common.h	/^	size_t notification_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::sa	src/eap_common/ikev2_common.h	/^	const u8 *sa;$/;"	m	struct:ikev2_payloads	access:public
ikev2_payloads::sa_len	src/eap_common/ikev2_common.h	/^	size_t sa_len;$/;"	m	struct:ikev2_payloads	access:public
ikev2_prf_alg	src/eap_common/ikev2_common.h	/^struct ikev2_prf_alg {$/;"	s
ikev2_prf_alg::hash_len	src/eap_common/ikev2_common.h	/^	size_t hash_len;$/;"	m	struct:ikev2_prf_alg	access:public
ikev2_prf_alg::id	src/eap_common/ikev2_common.h	/^	int id;$/;"	m	struct:ikev2_prf_alg	access:public
ikev2_prf_alg::key_len	src/eap_common/ikev2_common.h	/^	size_t key_len;$/;"	m	struct:ikev2_prf_alg	access:public
ikev2_prf_algs	src/eap_common/ikev2_common.c	/^static struct ikev2_prf_alg ikev2_prf_algs[] = {$/;"	v	typeref:struct:ikev2_prf_alg	file:
ikev2_prf_hash	src/eap_common/ikev2_common.c	/^int ikev2_prf_hash(int alg, const u8 *key, size_t key_len,$/;"	f	signature:(int alg, const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *hash)
ikev2_prf_hash	src/eap_common/ikev2_common.h	/^int ikev2_prf_hash(int alg, const u8 *key, size_t key_len,$/;"	p	signature:(int alg, const u8 *key, size_t key_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *hash)
ikev2_prf_plus	src/eap_common/ikev2_common.c	/^int ikev2_prf_plus(int alg, const u8 *key, size_t key_len,$/;"	f	signature:(int alg, const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *out, size_t out_len)
ikev2_prf_plus	src/eap_common/ikev2_common.h	/^int ikev2_prf_plus(int alg, const u8 *key, size_t key_len,$/;"	p	signature:(int alg, const u8 *key, size_t key_len, const u8 *data, size_t data_len, u8 *out, size_t out_len)
ikev2_process_auth	src/eap_peer/ikev2.c	/^static int ikev2_process_auth(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const u8 *auth, size_t auth_len)
ikev2_process_auth	src/eap_server/ikev2.c	/^static int ikev2_process_auth(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const u8 *auth, size_t auth_len)
ikev2_process_auth_cert	src/eap_peer/ikev2.c	/^static int ikev2_process_auth_cert(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, u8 method, const u8 *auth, size_t auth_len)
ikev2_process_auth_cert	src/eap_server/ikev2.c	/^static int ikev2_process_auth_cert(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, u8 method, const u8 *auth, size_t auth_len)
ikev2_process_auth_secret	src/eap_peer/ikev2.c	/^static int ikev2_process_auth_secret(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, u8 method, const u8 *auth, size_t auth_len)
ikev2_process_auth_secret	src/eap_server/ikev2.c	/^static int ikev2_process_auth_secret(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, u8 method, const u8 *auth, size_t auth_len)
ikev2_process_cert	src/eap_peer/ikev2.c	/^static int ikev2_process_cert(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const u8 *cert, size_t cert_len)
ikev2_process_cert	src/eap_server/ikev2.c	/^static int ikev2_process_cert(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const u8 *cert, size_t cert_len)
ikev2_process_idi	src/eap_peer/ikev2.c	/^static int ikev2_process_idi(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const u8 *idi, size_t idi_len)
ikev2_process_idr	src/eap_server/ikev2.c	/^static int ikev2_process_idr(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const u8 *idr, size_t idr_len)
ikev2_process_idr	src/eap_server/ikev2.c	/^static int ikev2_process_idr(struct ikev2_initiator_data *data,$/;"	p	file:	signature:(struct ikev2_initiator_data *data, const u8 *idr, size_t idr_len)
ikev2_process_kei	src/eap_peer/ikev2.c	/^static int ikev2_process_kei(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const u8 *kei, size_t kei_len)
ikev2_process_ker	src/eap_server/ikev2.c	/^static int ikev2_process_ker(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const u8 *ker, size_t ker_len)
ikev2_process_ni	src/eap_peer/ikev2.c	/^static int ikev2_process_ni(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const u8 *ni, size_t ni_len)
ikev2_process_nr	src/eap_server/ikev2.c	/^static int ikev2_process_nr(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const u8 *nr, size_t nr_len)
ikev2_process_sa_auth	src/eap_peer/ikev2.c	/^static int ikev2_process_sa_auth(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const struct ikev2_hdr *hdr, struct ikev2_payloads *pl)
ikev2_process_sa_auth	src/eap_server/ikev2.c	/^static int ikev2_process_sa_auth(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const struct ikev2_hdr *hdr, struct ikev2_payloads *pl)
ikev2_process_sa_auth_decrypted	src/eap_peer/ikev2.c	/^static int ikev2_process_sa_auth_decrypted(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, u8 next_payload, u8 *payload, size_t payload_len)
ikev2_process_sa_auth_decrypted	src/eap_server/ikev2.c	/^static int ikev2_process_sa_auth_decrypted(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, u8 next_payload, u8 *payload, size_t payload_len)
ikev2_process_sa_init	src/eap_peer/ikev2.c	/^static int ikev2_process_sa_init(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const struct ikev2_hdr *hdr, struct ikev2_payloads *pl)
ikev2_process_sa_init	src/eap_server/ikev2.c	/^static int ikev2_process_sa_init(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const struct ikev2_hdr *hdr, struct ikev2_payloads *pl)
ikev2_process_sa_init_encr	src/eap_server/ikev2.c	/^static int ikev2_process_sa_init_encr(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const struct ikev2_hdr *hdr, const u8 *encrypted, size_t encrypted_len, u8 next_payload)
ikev2_process_sai1	src/eap_peer/ikev2.c	/^static int ikev2_process_sai1(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, const u8 *sai1, size_t sai1_len)
ikev2_process_sar1	src/eap_server/ikev2.c	/^static int ikev2_process_sar1(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, const u8 *sar1, size_t sar1_len)
ikev2_proposal	src/eap_common/ikev2_common.h	/^struct ikev2_proposal {$/;"	s
ikev2_proposal::num_transforms	src/eap_common/ikev2_common.h	/^	u8 num_transforms;$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal::proposal_length	src/eap_common/ikev2_common.h	/^	u8 proposal_length[2]; \/* including all transform and attributes *\/$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal::proposal_num	src/eap_common/ikev2_common.h	/^	u8 proposal_num;$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal::protocol_id	src/eap_common/ikev2_common.h	/^	u8 protocol_id; \/* IKEV2_PROTOCOL_* *\/$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal::reserved	src/eap_common/ikev2_common.h	/^	u8 reserved;$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal::spi_size	src/eap_common/ikev2_common.h	/^	u8 spi_size;$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal::type	src/eap_common/ikev2_common.h	/^	u8 type; \/* 0 (last) or 2 (more) *\/$/;"	m	struct:ikev2_proposal	access:public
ikev2_proposal_data	src/eap_peer/ikev2.h	/^struct ikev2_proposal_data {$/;"	s
ikev2_proposal_data	src/eap_server/ikev2.h	/^struct ikev2_proposal_data {$/;"	s
ikev2_proposal_data::dh	src/eap_peer/ikev2.h	/^	int dh;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::dh	src/eap_server/ikev2.h	/^	int dh;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::encr	src/eap_peer/ikev2.h	/^	int encr;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::encr	src/eap_server/ikev2.h	/^	int encr;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::integ	src/eap_peer/ikev2.h	/^	int integ;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::integ	src/eap_server/ikev2.h	/^	int integ;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::prf	src/eap_peer/ikev2.h	/^	int prf;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::prf	src/eap_server/ikev2.h	/^	int prf;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::proposal_num	src/eap_peer/ikev2.h	/^	u8 proposal_num;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_proposal_data::proposal_num	src/eap_server/ikev2.h	/^	u8 proposal_num;$/;"	m	struct:ikev2_proposal_data	access:public
ikev2_responder_build	src/eap_peer/ikev2.c	/^struct wpabuf * ikev2_responder_build(struct ikev2_responder_data *data)$/;"	f	signature:(struct ikev2_responder_data *data)
ikev2_responder_build	src/eap_peer/ikev2.h	/^struct wpabuf * ikev2_responder_build(struct ikev2_responder_data *data);$/;"	p	signature:(struct ikev2_responder_data *data)
ikev2_responder_data	src/eap_peer/ikev2.h	/^struct ikev2_responder_data {$/;"	s
ikev2_responder_data::CHILD_SA	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
ikev2_responder_data::IDi	src/eap_peer/ikev2.h	/^	u8 *IDi;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::IDi_len	src/eap_peer/ikev2.h	/^	size_t IDi_len;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::IDi_type	src/eap_peer/ikev2.h	/^	u8 IDi_type;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::IDr	src/eap_peer/ikev2.h	/^	u8 *IDr;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::IDr_len	src/eap_peer/ikev2.h	/^	size_t IDr_len;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::IKEV2_DONE	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
ikev2_responder_data::IKEV2_FAILED	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
ikev2_responder_data::LAST_MSG_SA_AUTH	src/eap_peer/ikev2.h	/^	enum { LAST_MSG_SA_INIT, LAST_MSG_SA_AUTH } last_msg;$/;"	e	enum:ikev2_responder_data::__anon175
ikev2_responder_data::LAST_MSG_SA_INIT	src/eap_peer/ikev2.h	/^	enum { LAST_MSG_SA_INIT, LAST_MSG_SA_AUTH } last_msg;$/;"	e	enum:ikev2_responder_data::__anon175
ikev2_responder_data::NOTIFY	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
ikev2_responder_data::PEER_AUTH_CERT	src/eap_peer/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_responder_data::__anon174
ikev2_responder_data::PEER_AUTH_SECRET	src/eap_peer/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	e	enum:ikev2_responder_data::__anon174
ikev2_responder_data::SA_AUTH	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
ikev2_responder_data::SA_INIT	src/eap_peer/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, NOTIFY, IKEV2_DONE, IKEV2_FAILED }$/;"	e	enum:ikev2_responder_data::__anon173
ikev2_responder_data::dh	src/eap_peer/ikev2.h	/^	const struct dh_group *dh;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::dh_group	access:public
ikev2_responder_data::error_type	src/eap_peer/ikev2.h	/^	u16 error_type;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::i_dh_public	src/eap_peer/ikev2.h	/^	struct wpabuf *i_dh_public;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
ikev2_responder_data::i_nonce	src/eap_peer/ikev2.h	/^	u8 i_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::i_nonce_len	src/eap_peer/ikev2.h	/^	size_t i_nonce_len;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::i_sign_msg	src/eap_peer/ikev2.h	/^	struct wpabuf *i_sign_msg;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
ikev2_responder_data::i_spi	src/eap_peer/ikev2.h	/^	u8 i_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::key_pad	src/eap_peer/ikev2.h	/^	u8 *key_pad;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::key_pad_len	src/eap_peer/ikev2.h	/^	size_t key_pad_len;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::keys	src/eap_peer/ikev2.h	/^	struct ikev2_keys keys;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::ikev2_keys	access:public
ikev2_responder_data::last_msg	src/eap_peer/ikev2.h	/^	enum { LAST_MSG_SA_INIT, LAST_MSG_SA_AUTH } last_msg;$/;"	m	struct:ikev2_responder_data	typeref:enum:ikev2_responder_data::__anon175	access:public
ikev2_responder_data::peer_auth	src/eap_peer/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	m	struct:ikev2_responder_data	typeref:enum:ikev2_responder_data::__anon174	access:public
ikev2_responder_data::proposal	src/eap_peer/ikev2.h	/^	struct ikev2_proposal_data proposal;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::ikev2_proposal_data	access:public
ikev2_responder_data::r_dh_private	src/eap_peer/ikev2.h	/^	struct wpabuf *r_dh_private;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
ikev2_responder_data::r_nonce	src/eap_peer/ikev2.h	/^	u8 r_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::r_nonce_len	src/eap_peer/ikev2.h	/^	size_t r_nonce_len;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::r_sign_msg	src/eap_peer/ikev2.h	/^	struct wpabuf *r_sign_msg;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
ikev2_responder_data::r_spi	src/eap_peer/ikev2.h	/^	u8 r_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::shared_secret	src/eap_peer/ikev2.h	/^	u8 *shared_secret;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::shared_secret_len	src/eap_peer/ikev2.h	/^	size_t shared_secret_len;$/;"	m	struct:ikev2_responder_data	access:public
ikev2_responder_data::state	src/eap_peer/ikev2.h	/^		state;$/;"	m	struct:ikev2_responder_data	typeref:enum:ikev2_responder_data::__anon173	access:public
ikev2_responder_deinit	src/eap_peer/ikev2.c	/^void ikev2_responder_deinit(struct ikev2_responder_data *data)$/;"	f	signature:(struct ikev2_responder_data *data)
ikev2_responder_deinit	src/eap_peer/ikev2.h	/^void ikev2_responder_deinit(struct ikev2_responder_data *data);$/;"	p	signature:(struct ikev2_responder_data *data)
ikev2_responder_process	src/eap_peer/ikev2.c	/^int ikev2_responder_process(struct ikev2_responder_data *data,$/;"	f	signature:(struct ikev2_responder_data *data, const struct wpabuf *buf)
ikev2_responder_process	src/eap_peer/ikev2.h	/^int ikev2_responder_process(struct ikev2_responder_data *data,$/;"	p	signature:(struct ikev2_responder_data *data, const struct wpabuf *buf)
ikev2_transform	src/eap_common/ikev2_common.h	/^struct ikev2_transform {$/;"	s
ikev2_transform::reserved	src/eap_common/ikev2_common.h	/^	u8 reserved;$/;"	m	struct:ikev2_transform	access:public
ikev2_transform::reserved2	src/eap_common/ikev2_common.h	/^	u8 reserved2;$/;"	m	struct:ikev2_transform	access:public
ikev2_transform::transform_id	src/eap_common/ikev2_common.h	/^	u8 transform_id[2];$/;"	m	struct:ikev2_transform	access:public
ikev2_transform::transform_length	src/eap_common/ikev2_common.h	/^	u8 transform_length[2]; \/* including Header and Attributes *\/$/;"	m	struct:ikev2_transform	access:public
ikev2_transform::transform_type	src/eap_common/ikev2_common.h	/^	u8 transform_type;$/;"	m	struct:ikev2_transform	access:public
ikev2_transform::type	src/eap_common/ikev2_common.h	/^	u8 type; \/* 0 (last) or 3 (more) *\/$/;"	m	struct:ikev2_transform	access:public
ikev2_update_hdr	src/eap_common/ikev2_common.c	/^void ikev2_update_hdr(struct wpabuf *msg)$/;"	f	signature:(struct wpabuf *msg)
ikev2_update_hdr	src/eap_common/ikev2_common.h	/^void ikev2_update_hdr(struct wpabuf *msg);$/;"	p	signature:(struct wpabuf *msg)
ikev2_validate_rx_state	src/eap_peer/ikev2.c	/^static int ikev2_validate_rx_state(struct ikev2_responder_data *data,$/;"	f	file:	signature:(struct ikev2_responder_data *data, u8 exchange_type, u32 message_id)
ikev2_validate_rx_state	src/eap_server/ikev2.c	/^static int ikev2_validate_rx_state(struct ikev2_initiator_data *data,$/;"	f	file:	signature:(struct ikev2_initiator_data *data, u8 exchange_type, u32 message_id)
imc	src/eap_peer/tncc.c	/^	struct tnc_if_imc *imc;$/;"	m	struct:tncc_data	typeref:struct:tncc_data::tnc_if_imc	file:	access:public
imcID	src/eap_peer/tncc.c	/^	TNC_IMCID imcID;$/;"	m	struct:tnc_if_imc	file:	access:public
imc_send	src/eap_peer/tncc.c	/^	u8 *imc_send;$/;"	m	struct:tnc_if_imc	file:	access:public
imc_send_len	src/eap_peer/tncc.c	/^	size_t imc_send_len;$/;"	m	struct:tnc_if_imc	file:	access:public
imsi	hostapd/hlr_auc_gw.c	/^	char imsi[20];$/;"	m	struct:gsm_triplet	file:	access:public
imsi	hostapd/hlr_auc_gw.c	/^	char imsi[20];$/;"	m	struct:milenage_parameters	file:	access:public
imsi	src/eap_server/eap_sim_db.c	/^	u8 imsi[20];$/;"	m	struct:eap_sim_db_pending	file:	access:public
imsi_len	src/eap_server/eap_sim_db.c	/^	size_t imsi_len;$/;"	m	struct:eap_sim_db_pending	file:	access:public
imv	src/eap_server/tncs.c	/^	struct tnc_if_imv *imv; \/* local copy of tncs_global_data->imv *\/$/;"	m	struct:tncs_data	typeref:struct:tncs_data::tnc_if_imv	file:	access:public
imv	src/eap_server/tncs.c	/^	struct tnc_if_imv *imv;$/;"	m	struct:tncs_global	typeref:struct:tncs_global::tnc_if_imv	file:	access:public
imvID	src/eap_server/tncs.c	/^	TNC_IMVID imvID;$/;"	m	struct:tnc_if_imv	file:	access:public
imv_data	src/eap_server/tncs.c	/^	} imv_data[TNC_MAX_IMV_ID];$/;"	m	struct:tncs_data	typeref:struct:tncs_data::conn_imv	file:	access:public
imv_send	src/eap_server/tncs.c	/^		u8 *imv_send;$/;"	m	struct:tncs_data::conn_imv	file:	access:public
imv_send_len	src/eap_server/tncs.c	/^		size_t imv_send_len;$/;"	m	struct:tncs_data::conn_imv	file:	access:public
in	src/crypto/md5_i.h	/^	u8 in[64];$/;"	m	struct:MD5Context	access:public
in_buf	src/eap_peer/eap_ikev2.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
in_buf	src/eap_peer/eap_tnc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
in_buf	src/eap_peer/eap_wsc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
in_buf	src/eap_server/eap_server_ikev2.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
in_buf	src/eap_server/eap_server_tnc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
in_buf	src/eap_server/eap_server_wsc.c	/^	struct wpabuf *in_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
in_chunk_data	src/wps/httpread.c	/^	int in_chunk_data;      \/* 0=in\/at header, 1=in the data or tail*\/$/;"	m	struct:httpread	file:	access:public
in_interface_list	src/drivers/driver_nl80211.c	/^	unsigned int in_interface_list:1;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
in_listen	src/p2p/p2p_i.h	/^	int in_listen;$/;"	m	struct:p2p_data	access:public
in_op_code	src/eap_peer/eap_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::wsc_op_code	file:	access:public
in_op_code	src/eap_server/eap_server_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::wsc_op_code	file:	access:public
in_step_loop	src/ap/wpa_auth_i.h	/^	unsigned int in_step_loop:1;$/;"	m	struct:wpa_state_machine	access:public
in_trailer	src/wps/httpread.c	/^	int in_trailer;         \/* in header fields after data (chunked only)*\/$/;"	m	struct:httpread	file:	access:public
inactive_msec	src/drivers/driver.h	/^	unsigned long inactive_msec;$/;"	m	struct:hostap_sta_driver_data	access:public
inactive_sec	src/drivers/driver_hostap.h	/^			u32 inactive_sec;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon80	access:public
inactivity_interval	src/common/ieee802_11_defs.h	/^	le32 inactivity_interval;$/;"	m	struct:wmm_tspec_element	access:public
inc_byte_array	src/utils/common.c	/^void inc_byte_array(u8 *counter, size_t len)$/;"	f	signature:(u8 *counter, size_t len)
inc_byte_array	src/utils/common.h	/^void inc_byte_array(u8 *counter, size_t len);$/;"	p	signature:(u8 *counter, size_t len)
inc_sqn	hostapd/hlr_auc_gw.c	/^static void inc_sqn(u8 *sqn)$/;"	f	file:	signature:(u8 *sqn)
include_tls_length	src/eap_peer/eap_tls_common.h	/^	int include_tls_length;$/;"	m	struct:eap_ssl_data	access:public
ind_len	hostapd/hlr_auc_gw.c	/^static int ind_len = 5;$/;"	v	file:
index	src/drivers/driver.h	/^		int index;$/;"	m	struct:wpa_event_data::pmkid_candidate	access:public
index	src/drivers/wireless_copy.h	/^	__u32		index; \/* the smaller the index, the higher the$/;"	m	struct:iw_pmkid_cand	access:public
index	src/radius/radius_client.h	/^	int index;$/;"	m	struct:hostapd_radius_server	access:public
individual_wep_key_len	src/ap/ap_config.h	/^	int individual_wep_key_len;             \/\/ 设置WEP用的key周期$/;"	m	struct:hostapd_bss_config	access:public
individual_wep_key_len	src/eapol_auth/eapol_auth_sm.h	/^	int individual_wep_key_len;$/;"	m	struct:eapol_auth_config	access:public
info	src/p2p/p2p_i.h	/^	struct p2p_peer_info info;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::p2p_peer_info	access:public
info1	src/drivers/Apple80211.h	/^	WirelessInfo info1;$/;"	m	struct:WirelessInfo2	access:public
init	src/drivers/driver.h	/^	void * (*init)(void *ctx, const char *ifname);$/;"	m	struct:wpa_driver_ops	access:public
init	src/eap_peer/eap_i.h	/^	void * (*init)(struct eap_sm *sm);$/;"	m	struct:eap_method	access:public
init	src/eap_server/eap_i.h	/^	void * (*init)(struct eap_sm *sm);$/;"	m	struct:eap_method	access:public
init2	src/drivers/driver.h	/^	void * (*init2)(void *ctx, const char *ifname, void *global_priv);$/;"	m	struct:wpa_driver_ops	access:public
initPickUp	src/eap_server/eap_i.h	/^	void * (*initPickUp)(struct eap_sm *sm);$/;"	m	struct:eap_method	access:public
init_for_reauth	src/eap_peer/eap_i.h	/^	void * (*init_for_reauth)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
init_func	src/wps/wps.h	/^	int (*init_func)(char *);$/;"	m	struct:oob_nfc_device_data	access:public
init_func	src/wps/wps.h	/^	void * (*init_func)(struct wps_context *, struct oob_device_data *,$/;"	m	struct:oob_device_data	access:public
init_nfc	src/wps/wps_nfc.c	/^static void * init_nfc(struct wps_context *wps,$/;"	f	file:	signature:(struct wps_context *wps, struct oob_device_data *oob_dev, int registrar)
init_nfc_pn531	src/wps/wps_nfc_pn531.c	/^static int init_nfc_pn531(char *path)$/;"	f	file:	signature:(char *path)
init_phase2	src/eap_peer/eap_i.h	/^	int init_phase2;$/;"	m	struct:eap_sm	access:public
init_phase2	src/eap_server/eap_i.h	/^	int init_phase2;$/;"	m	struct:eap_sm	access:public
init_sta	src/rsn_supp/tdls.c	/^	u8 init_sta[ETH_ALEN];$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
init_ufd	src/wps/wps_ufd.c	/^static void * init_ufd(struct wps_context *wps,$/;"	f	file:	signature:(struct wps_context *wps, struct oob_device_data *oob_dev, int registrar)
initial_req	src/eapol_supp/eapol_supp_sm.c	/^	Boolean initial_req;$/;"	m	struct:eapol_sm	file:	access:public
initialize	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean initialize;     \/\/ 当该标志强制初始化eapol层所有状态机$/;"	m	struct:eapol_state_machine	access:public
initialize	src/eapol_supp/eapol_supp_sm.c	/^	Boolean initialize;$/;"	m	struct:eapol_sm	file:	access:public
initializing	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean initializing; \/* in process of initializing state machines 标志位，表示正在进行状态机初始化*\/$/;"	m	struct:eapol_state_machine	access:public
initiator	src/ap/wpa_auth_i.h	/^	u8 initiator[ETH_ALEN];$/;"	m	struct:wpa_stsl_negotiation	access:public
initiator	src/rsn_supp/peerkey.h	/^	int initiator; \/* whether this end was initator for SMK handshake *\/$/;"	m	struct:wpa_peerkey	access:public
initiator	src/rsn_supp/tdls.c	/^	int initiator; \/* whether this end was initiator for TDLS setup *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
inline	src/utils/common.h	388;"	d
inline	src/utils/common.h	390;"	d
inline	src/utils/common.h	90;"	d
inonce	src/rsn_supp/peerkey.h	/^	u8 inonce[WPA_NONCE_LEN]; \/* Initiator Nonce *\/$/;"	m	struct:wpa_peerkey	access:public
inonce	src/rsn_supp/tdls.c	/^	u8 inonce[WPA_NONCE_LEN]; \/* Initiator Nonce *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
input_rotate	src/crypto/random.c	/^static unsigned int input_rotate = 0;$/;"	v	file:
insert_char	src/utils/edit.c	/^static void insert_char(int c)$/;"	f	file:	signature:(int c)
int_reg	src/wps/wps_i.h	/^	int int_reg;$/;"	m	struct:wps_data	access:public
integ	src/eap_peer/ikev2.h	/^	int integ;$/;"	m	struct:ikev2_proposal_data	access:public
integ	src/eap_server/ikev2.h	/^	int integ;$/;"	m	struct:ikev2_proposal_data	access:public
intended_addr	src/p2p/p2p_i.h	/^	const u8 *intended_addr;$/;"	m	struct:p2p_message	access:public
intended_addr	src/p2p/p2p_i.h	/^	u8 intended_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
intended_addr	src/p2p/p2p_i.h	/^	u8 intended_addr[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
interactive	hostapd/hostapd_cli.c	/^static int interactive = 0;$/;"	v	file:
interface_added	src/ap/hostapd.h	/^	int interface_added; \/* virtual interface added for this BSS *\/$/;"	m	struct:hostapd_data	access:public
interface_addr	src/p2p/p2p.h	/^	u8 interface_addr[ETH_ALEN];$/;"	m	struct:p2p_group_config	access:public
interface_addr	src/p2p/p2p_i.h	/^	u8 interface_addr[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
interface_count	src/ap/wps_hostapd.c	/^static int interface_count(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
interface_status	src/drivers/driver.h	/^	struct interface_status {$/;"	s	union:wpa_event_data	access:public
interface_status	src/drivers/driver.h	/^	} interface_status;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::interface_status	access:public
interfaces	src/ap/hostapd.h	/^	struct hapd_interfaces *interfaces;     \/\/ 指向父结构，也就是接口集合的指针$/;"	m	struct:hostapd_iface	typeref:struct:hostapd_iface::hapd_interfaces	access:public
interfaces	src/drivers/driver_nl80211.c	/^	struct dl_list interfaces;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::dl_list	file:	access:public
interfaces	src/wps/wps_upnp_i.h	/^	struct dl_list interfaces; \/* struct upnp_wps_device_interface *\/$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::dl_list	access:public
internet	src/ap/ap_config.h	/^	int internet;$/;"	m	struct:hostapd_bss_config	access:public
interval	src/p2p/p2p_i.h	/^	u32 interval;$/;"	m	struct:p2p_noa_desc	access:public
interval_type	src/rsn_supp/tdls.c	/^	u8 interval_type;$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
interworking	src/ap/ap_config.h	/^	int interworking;$/;"	m	struct:hostapd_bss_config	access:public
interworking	src/common/ieee802_11_common.h	/^	const u8 *interworking;$/;"	m	struct:ieee802_11_elems	access:public
interworking	src/drivers/driver.h	/^	int interworking;$/;"	m	struct:wpa_driver_ap_params	access:public
interworking_len	src/common/ieee802_11_common.h	/^	u8 interworking_len;$/;"	m	struct:ieee802_11_elems	access:public
inv_bssid	src/p2p/p2p_i.h	/^	u8 inv_bssid[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
inv_bssid_set	src/p2p/p2p_i.h	/^	int inv_bssid_set;$/;"	m	struct:p2p_data	access:public
inv_go_dev_addr	src/p2p/p2p_i.h	/^	u8 inv_go_dev_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
inv_group_bssid	src/p2p/p2p_i.h	/^	u8 inv_group_bssid[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
inv_group_bssid_ptr	src/p2p/p2p_i.h	/^	u8 *inv_group_bssid_ptr;$/;"	m	struct:p2p_data	access:public
inv_op_freq	src/p2p/p2p_i.h	/^	int inv_op_freq;$/;"	m	struct:p2p_data	access:public
inv_persistent	src/p2p/p2p_i.h	/^	int inv_persistent;$/;"	m	struct:p2p_data	access:public
inv_role	src/p2p/p2p_i.h	/^	enum p2p_invite_role inv_role;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_invite_role	access:public
inv_sa	src/p2p/p2p_i.h	/^	u8 inv_sa[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
inv_ssid	src/p2p/p2p_i.h	/^	u8 inv_ssid[32];$/;"	m	struct:p2p_data	access:public
inv_ssid_len	src/p2p/p2p_i.h	/^	size_t inv_ssid_len;$/;"	m	struct:p2p_data	access:public
inv_status	src/p2p/p2p_i.h	/^	u8 inv_status;$/;"	m	struct:p2p_data	access:public
invalid_requests	src/radius/radius_server.c	/^	u32 invalid_requests;$/;"	m	struct:radius_server_counters	file:	access:public
invitation_flags	src/p2p/p2p_i.h	/^	const u8 *invitation_flags;$/;"	m	struct:p2p_message	access:public
invitation_process	src/p2p/p2p.h	/^	u8 (*invitation_process)(void *ctx, const u8 *sa, const u8 *bssid,$/;"	m	struct:p2p_config	access:public
invitation_received	src/p2p/p2p.h	/^	void (*invitation_received)(void *ctx, const u8 *sa, const u8 *bssid,$/;"	m	struct:p2p_config	access:public
invitation_reqs	src/p2p/p2p_i.h	/^	unsigned int invitation_reqs;$/;"	m	struct:p2p_device	access:public
invitation_result	src/p2p/p2p.h	/^	void (*invitation_result)(void *ctx, int status, const u8 *bssid);$/;"	m	struct:p2p_config	access:public
invite_go_dev_addr	src/p2p/p2p_i.h	/^	const u8 *invite_go_dev_addr;$/;"	m	struct:p2p_data	access:public
invite_go_dev_addr_buf	src/p2p/p2p_i.h	/^	u8 invite_go_dev_addr_buf[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
invite_peer	src/p2p/p2p_i.h	/^	struct p2p_device *invite_peer;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
ioctl_sock	src/drivers/driver_atheros.c	/^	int	ioctl_sock;			\/* socket for ioctl() use *\/$/;"	m	struct:atheros_driver_data	file:	access:public
ioctl_sock	src/drivers/driver_broadcom.c	/^	int ioctl_sock;$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
ioctl_sock	src/drivers/driver_hostap.c	/^	int ioctl_sock; \/* socket for ioctl() use *\/$/;"	m	struct:hostap_driver_data	file:	access:public
ioctl_sock	src/drivers/driver_madwifi.c	/^	int	ioctl_sock;			\/* socket for ioctl() use *\/$/;"	m	struct:madwifi_driver_data	file:	access:public
ioctl_sock	src/drivers/driver_nl80211.c	/^	int ioctl_sock; \/* socket for ioctl() use *\/$/;"	m	struct:nl80211_global	file:	access:public
ioctl_sock	src/drivers/driver_ralink.c	/^	int ioctl_sock;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
ioctl_sock	src/drivers/driver_wext.h	/^	int ioctl_sock;$/;"	m	struct:wpa_driver_wext_data	access:public
ip	src/tls/x509v3.h	/^	u8 *ip; \/* iPAddress *\/$/;"	m	struct:x509_name	access:public
ip_addr	src/wps/wps_er.h	/^	unsigned ip_addr; \/* IP address of network i.f. we use (host order) *\/$/;"	m	struct:wps_er	access:public
ip_addr	src/wps/wps_upnp_i.h	/^	unsigned ip_addr; \/* IP address of network i.f. we use (host order) *\/$/;"	m	struct:upnp_wps_device_sm	access:public
ip_addr_text	src/wps/wps_er.h	/^	char *ip_addr_text; \/* IP address of network i.f. we use *\/$/;"	m	struct:wps_er	access:public
ip_addr_text	src/wps/wps_upnp_i.h	/^	char *ip_addr_text; \/* IP address of network i.f. we use *\/$/;"	m	struct:upnp_wps_device_sm	access:public
ip_len	src/tls/x509v3.h	/^	size_t ip_len; \/* IPv4: 4, IPv6: 16 *\/$/;"	m	struct:x509_name	access:public
ipmk	src/eap_peer/eap_peap.c	/^	u8 ipmk[40];$/;"	m	struct:eap_peap_data	file:	access:public
ipmk	src/eap_server/eap_server_peap.c	/^	u8 ipmk[40];$/;"	m	struct:eap_peap_data	file:	access:public
ipv6	src/radius/radius_server.c	/^	int ipv6;$/;"	m	struct:radius_server_data	file:	access:public
ipv6	src/radius/radius_server.h	/^	int ipv6;$/;"	m	struct:radius_server_conf	access:public
iqmp	src/tls/rsa.c	/^	struct bignum *iqmp; \/* 1 \/ q mod p; CRT coefficient *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
iresult	src/eap_common/eap_fast_common.h	/^	int iresult;$/;"	m	struct:eap_fast_tlv_parse	access:public
isDone	src/eap_server/eap_i.h	/^	Boolean (*isDone)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
isKeyAvailable	src/eap_peer/eap_i.h	/^	Boolean (*isKeyAvailable)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
isSuccess	src/eap_server/eap_i.h	/^	Boolean (*isSuccess)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
is_11b	src/p2p/p2p.c	/^static int is_11b(u8 rate)$/;"	f	file:	signature:(u8 rate)
is_5350	src/drivers/driver_roboswitch.c	/^	int fd, is_5350;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
is_ap	src/drivers/driver_bsd.c	/^	int	is_ap;			\/* Access point mode *\/$/;"	m	struct:bsd_driver_data	file:	access:public
is_ap_interface	src/drivers/driver_nl80211.c	/^static int is_ap_interface(enum nl80211_iftype nlmode)$/;"	f	file:	signature:(enum nl80211_iftype nlmode)
is_broadcast_ether_addr	src/utils/common.h	/^static inline int is_broadcast_ether_addr(const u8 *a)$/;"	f	signature:(const u8 *a)
is_nil_uuid	src/utils/uuid.c	/^int is_nil_uuid(const u8 *uuid)$/;"	f	signature:(const u8 *uuid)
is_nil_uuid	src/utils/uuid.h	/^int is_nil_uuid(const u8 *uuid);$/;"	p	signature:(const u8 *uuid)
is_p2p_interface	src/drivers/driver_nl80211.c	/^static int is_p2p_interface(enum nl80211_iftype nlmode)$/;"	f	file:	signature:(enum nl80211_iftype nlmode)
is_selected_pin_registrar	src/wps/wps.c	/^static int is_selected_pin_registrar(struct wps_parse_attr *attr)$/;"	f	file:	signature:(struct wps_parse_attr *attr)
is_sta_interface	src/drivers/driver_nl80211.c	/^static int is_sta_interface(enum nl80211_iftype nlmode)$/;"	f	file:	signature:(enum nl80211_iftype nlmode)
is_zero_ether_addr	src/utils/common.h	/^static inline int is_zero_ether_addr(const u8 *a)$/;"	f	signature:(const u8 *a)
isolate	src/ap/ap_config.h	/^	int isolate;$/;"	m	struct:hostapd_bss_config	access:public
isolate	src/drivers/driver.h	/^	int isolate;$/;"	m	struct:wpa_driver_ap_params	access:public
issuer	src/tls/x509v3.h	/^	struct x509_name issuer;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_name	access:public
it_len	src/utils/radiotap.h	/^	uint16_t it_len;	\/* length of the whole$/;"	m	struct:ieee80211_radiotap_header	access:public
it_pad	src/utils/radiotap.h	/^	uint8_t it_pad;$/;"	m	struct:ieee80211_radiotap_header	access:public
it_present	src/utils/radiotap.h	/^	uint32_t it_present;	\/* A bitmap telling which$/;"	m	struct:ieee80211_radiotap_header	access:public
it_version	src/utils/radiotap.h	/^	uint8_t it_version;	\/* Version 0. Only increases$/;"	m	struct:ieee80211_radiotap_header	access:public
iter_count	src/tls/pkcs5.c	/^	unsigned int iter_count;$/;"	m	struct:pkcs5_params	file:	access:public
iter_next	src/ap/ap_list.h	/^	struct ap_info *iter_next; \/* next entry in AP iteration list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
iter_prev	src/ap/ap_list.h	/^	struct ap_info *iter_prev; \/* previous entry in AP iteration list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
iv	src/ap/iapp.c	/^	u8 iv[8];$/;"	m	struct:iapp_ack_security_block	file:	access:public
iv	src/ap/iapp.c	/^	u8 iv[8];$/;"	m	struct:iapp_send_security_block	file:	access:public
iv	src/eap_common/eap_sake_common.h	/^	const u8 *iv;$/;"	m	struct:eap_sake_parse_attr	access:public
iv	src/eap_common/eap_sim_common.c	/^	size_t mac, iv, encr; \/* index from buf *\/$/;"	m	struct:eap_sim_msg	file:	access:public
iv	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
iv_len	src/eap_common/eap_sake_common.h	/^	size_t iv_len;$/;"	m	struct:eap_sake_parse_attr	access:public
iv_size	src/tls/tlsv1_record.h	/^	size_t iv_size; \/* also block_size *\/$/;"	m	struct:tlsv1_record_layer	access:public
iw_discarded	src/drivers/wireless_copy.h	/^struct	iw_discarded$/;"	s
iw_discarded::code	src/drivers/wireless_copy.h	/^	__u32		code;		\/* Rx : Unable to code\/decode (WEP) *\/$/;"	m	struct:iw_discarded	access:public
iw_discarded::fragment	src/drivers/wireless_copy.h	/^	__u32		fragment;	\/* Rx : Can't perform MAC reassembly *\/$/;"	m	struct:iw_discarded	access:public
iw_discarded::misc	src/drivers/wireless_copy.h	/^	__u32		misc;		\/* Others cases *\/$/;"	m	struct:iw_discarded	access:public
iw_discarded::nwid	src/drivers/wireless_copy.h	/^	__u32		nwid;		\/* Rx : Wrong nwid\/essid *\/$/;"	m	struct:iw_discarded	access:public
iw_discarded::retries	src/drivers/wireless_copy.h	/^	__u32		retries;	\/* Tx : Max MAC retries num reached *\/$/;"	m	struct:iw_discarded	access:public
iw_encode_ext	src/drivers/wireless_copy.h	/^struct	iw_encode_ext$/;"	s
iw_encode_ext::addr	src/drivers/wireless_copy.h	/^	struct sockaddr	addr; \/* ff:ff:ff:ff:ff:ff for broadcast\/multicast$/;"	m	struct:iw_encode_ext	typeref:struct:iw_encode_ext::sockaddr	access:public
iw_encode_ext::alg	src/drivers/wireless_copy.h	/^	__u16		alg; \/* IW_ENCODE_ALG_* *\/$/;"	m	struct:iw_encode_ext	access:public
iw_encode_ext::ext_flags	src/drivers/wireless_copy.h	/^	__u32		ext_flags; \/* IW_ENCODE_EXT_* *\/$/;"	m	struct:iw_encode_ext	access:public
iw_encode_ext::key	src/drivers/wireless_copy.h	/^	__u8		key[0];$/;"	m	struct:iw_encode_ext	access:public
iw_encode_ext::key_len	src/drivers/wireless_copy.h	/^	__u16		key_len;$/;"	m	struct:iw_encode_ext	access:public
iw_encode_ext::rx_seq	src/drivers/wireless_copy.h	/^	__u8		rx_seq[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_encode_ext	access:public
iw_encode_ext::tx_seq	src/drivers/wireless_copy.h	/^	__u8		tx_seq[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_encode_ext	access:public
iw_event	src/drivers/wireless_copy.h	/^struct iw_event$/;"	s
iw_event::cmd	src/drivers/wireless_copy.h	/^	__u16		cmd;			\/* Wireless IOCTL *\/$/;"	m	struct:iw_event	access:public
iw_event::len	src/drivers/wireless_copy.h	/^	__u16		len;			\/* Real length of this stuff *\/$/;"	m	struct:iw_event	access:public
iw_event::u	src/drivers/wireless_copy.h	/^	union iwreq_data	u;		\/* IOCTL fixed payload *\/$/;"	m	struct:iw_event	typeref:union:iw_event::iwreq_data	access:public
iw_freq	src/drivers/wireless_copy.h	/^struct	iw_freq$/;"	s
iw_freq::e	src/drivers/wireless_copy.h	/^	__s16		e;		\/* Exponent *\/$/;"	m	struct:iw_freq	access:public
iw_freq::flags	src/drivers/wireless_copy.h	/^	__u8		flags;		\/* Flags (fixed\/auto) *\/$/;"	m	struct:iw_freq	access:public
iw_freq::i	src/drivers/wireless_copy.h	/^	__u8		i;		\/* List index (when in range struct) *\/$/;"	m	struct:iw_freq	access:public
iw_freq::m	src/drivers/wireless_copy.h	/^	__s32		m;		\/* Mantissa *\/$/;"	m	struct:iw_freq	access:public
iw_michaelmicfailure	src/drivers/wireless_copy.h	/^struct	iw_michaelmicfailure$/;"	s
iw_michaelmicfailure::flags	src/drivers/wireless_copy.h	/^	__u32		flags;$/;"	m	struct:iw_michaelmicfailure	access:public
iw_michaelmicfailure::src_addr	src/drivers/wireless_copy.h	/^	struct sockaddr	src_addr;$/;"	m	struct:iw_michaelmicfailure	typeref:struct:iw_michaelmicfailure::sockaddr	access:public
iw_michaelmicfailure::tsc	src/drivers/wireless_copy.h	/^	__u8		tsc[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_michaelmicfailure	access:public
iw_missed	src/drivers/wireless_copy.h	/^struct	iw_missed$/;"	s
iw_missed::beacon	src/drivers/wireless_copy.h	/^	__u32		beacon;		\/* Missed beacons\/superframe *\/$/;"	m	struct:iw_missed	access:public
iw_mlme	src/drivers/wireless_copy.h	/^struct	iw_mlme$/;"	s
iw_mlme::addr	src/drivers/wireless_copy.h	/^	struct sockaddr	addr;$/;"	m	struct:iw_mlme	typeref:struct:iw_mlme::sockaddr	access:public
iw_mlme::cmd	src/drivers/wireless_copy.h	/^	__u16		cmd; \/* IW_MLME_* *\/$/;"	m	struct:iw_mlme	access:public
iw_mlme::reason_code	src/drivers/wireless_copy.h	/^	__u16		reason_code;$/;"	m	struct:iw_mlme	access:public
iw_param	src/drivers/wireless_copy.h	/^struct	iw_param$/;"	s
iw_param::disabled	src/drivers/wireless_copy.h	/^  __u8		disabled;	\/* Disable the feature *\/$/;"	m	struct:iw_param	access:public
iw_param::fixed	src/drivers/wireless_copy.h	/^  __u8		fixed;		\/* Hardware should not use auto select *\/$/;"	m	struct:iw_param	access:public
iw_param::flags	src/drivers/wireless_copy.h	/^  __u16		flags;		\/* Various specifc flags (if any) *\/$/;"	m	struct:iw_param	access:public
iw_param::value	src/drivers/wireless_copy.h	/^  __s32		value;		\/* The value of the parameter itself *\/$/;"	m	struct:iw_param	access:public
iw_pmkid_cand	src/drivers/wireless_copy.h	/^struct	iw_pmkid_cand$/;"	s
iw_pmkid_cand::bssid	src/drivers/wireless_copy.h	/^	struct sockaddr	bssid;$/;"	m	struct:iw_pmkid_cand	typeref:struct:iw_pmkid_cand::sockaddr	access:public
iw_pmkid_cand::flags	src/drivers/wireless_copy.h	/^	__u32		flags; \/* IW_PMKID_CAND_* *\/$/;"	m	struct:iw_pmkid_cand	access:public
iw_pmkid_cand::index	src/drivers/wireless_copy.h	/^	__u32		index; \/* the smaller the index, the higher the$/;"	m	struct:iw_pmkid_cand	access:public
iw_pmksa	src/drivers/wireless_copy.h	/^struct	iw_pmksa$/;"	s
iw_pmksa::bssid	src/drivers/wireless_copy.h	/^	struct sockaddr	bssid;$/;"	m	struct:iw_pmksa	typeref:struct:iw_pmksa::sockaddr	access:public
iw_pmksa::cmd	src/drivers/wireless_copy.h	/^	__u32		cmd; \/* IW_PMKSA_* *\/$/;"	m	struct:iw_pmksa	access:public
iw_pmksa::pmkid	src/drivers/wireless_copy.h	/^	__u8		pmkid[IW_PMKID_LEN];$/;"	m	struct:iw_pmksa	access:public
iw_point	src/drivers/wireless_copy.h	/^struct	iw_point$/;"	s
iw_point::flags	src/drivers/wireless_copy.h	/^  __u16		flags;		\/* Optional params *\/$/;"	m	struct:iw_point	access:public
iw_point::length	src/drivers/wireless_copy.h	/^  __u16		length;		\/* number of fields or size in bytes *\/$/;"	m	struct:iw_point	access:public
iw_point::pointer	src/drivers/wireless_copy.h	/^  void __user	*pointer;	\/* Pointer to the data  (in user space) *\/$/;"	m	struct:iw_point	access:public
iw_priv_args	src/drivers/wireless_copy.h	/^struct	iw_priv_args$/;"	s
iw_priv_args::cmd	src/drivers/wireless_copy.h	/^	__u32		cmd;		\/* Number of the ioctl to issue *\/$/;"	m	struct:iw_priv_args	access:public
iw_priv_args::get_args	src/drivers/wireless_copy.h	/^	__u16		get_args;	\/* Type and number of args *\/$/;"	m	struct:iw_priv_args	access:public
iw_priv_args::name	src/drivers/wireless_copy.h	/^	char		name[IFNAMSIZ];	\/* Name of the extension *\/$/;"	m	struct:iw_priv_args	access:public
iw_priv_args::set_args	src/drivers/wireless_copy.h	/^	__u16		set_args;	\/* Type and number of args *\/$/;"	m	struct:iw_priv_args	access:public
iw_quality	src/drivers/wireless_copy.h	/^struct	iw_quality$/;"	s
iw_quality::level	src/drivers/wireless_copy.h	/^	__u8		level;		\/* signal level (dBm) *\/$/;"	m	struct:iw_quality	access:public
iw_quality::noise	src/drivers/wireless_copy.h	/^	__u8		noise;		\/* noise level (dBm) *\/$/;"	m	struct:iw_quality	access:public
iw_quality::qual	src/drivers/wireless_copy.h	/^	__u8		qual;		\/* link quality (%retries, SNR,$/;"	m	struct:iw_quality	access:public
iw_quality::updated	src/drivers/wireless_copy.h	/^	__u8		updated;	\/* Flags to know if updated *\/$/;"	m	struct:iw_quality	access:public
iw_range	src/drivers/wireless_copy.h	/^struct	iw_range$/;"	s
iw_range::avg_qual	src/drivers/wireless_copy.h	/^	struct iw_quality	avg_qual;	\/* Quality of the link *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_quality	access:public
iw_range::bitrate	src/drivers/wireless_copy.h	/^	__s32		bitrate[IW_MAX_BITRATES];	\/* list, in bps *\/$/;"	m	struct:iw_range	access:public
iw_range::enc_capa	src/drivers/wireless_copy.h	/^	__u32		enc_capa;	\/* IW_ENC_CAPA_* bit field *\/$/;"	m	struct:iw_range	access:public
iw_range::encoding_login_index	src/drivers/wireless_copy.h	/^	__u8	encoding_login_index;	\/* token index for login token *\/$/;"	m	struct:iw_range	access:public
iw_range::encoding_size	src/drivers/wireless_copy.h	/^	__u16	encoding_size[IW_MAX_ENCODING_SIZES];	\/* Different token sizes *\/$/;"	m	struct:iw_range	access:public
iw_range::event_capa	src/drivers/wireless_copy.h	/^	__u32		event_capa[6];$/;"	m	struct:iw_range	access:public
iw_range::freq	src/drivers/wireless_copy.h	/^	struct iw_freq	freq[IW_MAX_FREQUENCIES];	\/* list *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_freq	access:public
iw_range::max_encoding_tokens	src/drivers/wireless_copy.h	/^	__u8	max_encoding_tokens;	\/* Max number of tokens *\/$/;"	m	struct:iw_range	access:public
iw_range::max_frag	src/drivers/wireless_copy.h	/^	__s32		max_frag;	\/* Maximal frag threshold *\/$/;"	m	struct:iw_range	access:public
iw_range::max_nwid	src/drivers/wireless_copy.h	/^	__u32		max_nwid;	\/* Maximal NWID we are able to set *\/$/;"	m	struct:iw_range	access:public
iw_range::max_pmp	src/drivers/wireless_copy.h	/^	__s32		max_pmp;	\/* Maximal PM period *\/$/;"	m	struct:iw_range	access:public
iw_range::max_pmt	src/drivers/wireless_copy.h	/^	__s32		max_pmt;	\/* Maximal PM timeout *\/$/;"	m	struct:iw_range	access:public
iw_range::max_qual	src/drivers/wireless_copy.h	/^	struct iw_quality	max_qual;	\/* Quality of the link *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_quality	access:public
iw_range::max_r_time	src/drivers/wireless_copy.h	/^	__s32		max_r_time;	\/* Maximal retry lifetime *\/$/;"	m	struct:iw_range	access:public
iw_range::max_retry	src/drivers/wireless_copy.h	/^	__s32		max_retry;	\/* Maximal number of retries *\/$/;"	m	struct:iw_range	access:public
iw_range::max_rts	src/drivers/wireless_copy.h	/^	__s32		max_rts;	\/* Maximal RTS threshold *\/$/;"	m	struct:iw_range	access:public
iw_range::min_frag	src/drivers/wireless_copy.h	/^	__s32		min_frag;	\/* Minimal frag threshold *\/$/;"	m	struct:iw_range	access:public
iw_range::min_nwid	src/drivers/wireless_copy.h	/^	__u32		min_nwid;	\/* Minimal NWID we are able to set *\/$/;"	m	struct:iw_range	access:public
iw_range::min_pmp	src/drivers/wireless_copy.h	/^	__s32		min_pmp;	\/* Minimal PM period *\/$/;"	m	struct:iw_range	access:public
iw_range::min_pmt	src/drivers/wireless_copy.h	/^	__s32		min_pmt;	\/* Minimal PM timeout *\/$/;"	m	struct:iw_range	access:public
iw_range::min_r_time	src/drivers/wireless_copy.h	/^	__s32		min_r_time;	\/* Minimal retry lifetime *\/$/;"	m	struct:iw_range	access:public
iw_range::min_retry	src/drivers/wireless_copy.h	/^	__s32		min_retry;	\/* Minimal number of retries *\/$/;"	m	struct:iw_range	access:public
iw_range::min_rts	src/drivers/wireless_copy.h	/^	__s32		min_rts;	\/* Minimal RTS threshold *\/$/;"	m	struct:iw_range	access:public
iw_range::num_bitrates	src/drivers/wireless_copy.h	/^	__u8		num_bitrates;	\/* Number of entries in the list *\/$/;"	m	struct:iw_range	access:public
iw_range::num_channels	src/drivers/wireless_copy.h	/^	__u16		num_channels;	\/* Number of channels [0; num - 1] *\/$/;"	m	struct:iw_range	access:public
iw_range::num_encoding_sizes	src/drivers/wireless_copy.h	/^	__u8	num_encoding_sizes;	\/* Number of entry in the list *\/$/;"	m	struct:iw_range	access:public
iw_range::num_frequency	src/drivers/wireless_copy.h	/^	__u8		num_frequency;	\/* Number of entry in the list *\/$/;"	m	struct:iw_range	access:public
iw_range::num_txpower	src/drivers/wireless_copy.h	/^	__u8		num_txpower;	\/* Number of entries in the list *\/$/;"	m	struct:iw_range	access:public
iw_range::old_num_channels	src/drivers/wireless_copy.h	/^	__u16		old_num_channels;$/;"	m	struct:iw_range	access:public
iw_range::old_num_frequency	src/drivers/wireless_copy.h	/^	__u8		old_num_frequency;$/;"	m	struct:iw_range	access:public
iw_range::pm_capa	src/drivers/wireless_copy.h	/^	__u16		pm_capa;	\/* What PM options are supported *\/$/;"	m	struct:iw_range	access:public
iw_range::pmp_flags	src/drivers/wireless_copy.h	/^	__u16		pmp_flags;	\/* How to decode max\/min PM period *\/$/;"	m	struct:iw_range	access:public
iw_range::pmt_flags	src/drivers/wireless_copy.h	/^	__u16		pmt_flags;	\/* How to decode max\/min PM timeout *\/$/;"	m	struct:iw_range	access:public
iw_range::r_time_flags	src/drivers/wireless_copy.h	/^	__u16		r_time_flags;	\/* How to decode max\/min retry life *\/$/;"	m	struct:iw_range	access:public
iw_range::retry_capa	src/drivers/wireless_copy.h	/^	__u16		retry_capa;	\/* What retry options are supported *\/$/;"	m	struct:iw_range	access:public
iw_range::retry_flags	src/drivers/wireless_copy.h	/^	__u16		retry_flags;	\/* How to decode max\/min retry limit *\/$/;"	m	struct:iw_range	access:public
iw_range::scan_capa	src/drivers/wireless_copy.h	/^	__u8		scan_capa; 	\/* IW_SCAN_CAPA_* bit field *\/$/;"	m	struct:iw_range	access:public
iw_range::sensitivity	src/drivers/wireless_copy.h	/^	__s32		sensitivity;$/;"	m	struct:iw_range	access:public
iw_range::throughput	src/drivers/wireless_copy.h	/^	__u32		throughput;	\/* To give an idea... *\/$/;"	m	struct:iw_range	access:public
iw_range::txpower	src/drivers/wireless_copy.h	/^	__s32		txpower[IW_MAX_TXPOWER];	\/* list, in bps *\/$/;"	m	struct:iw_range	access:public
iw_range::txpower_capa	src/drivers/wireless_copy.h	/^	__u16		txpower_capa;	\/* What options are supported *\/$/;"	m	struct:iw_range	access:public
iw_range::we_version_compiled	src/drivers/wireless_copy.h	/^	__u8		we_version_compiled;	\/* Must be WIRELESS_EXT *\/$/;"	m	struct:iw_range	access:public
iw_range::we_version_source	src/drivers/wireless_copy.h	/^	__u8		we_version_source;	\/* Last update of source *\/$/;"	m	struct:iw_range	access:public
iw_scan_req	src/drivers/wireless_copy.h	/^struct	iw_scan_req$/;"	s
iw_scan_req::bssid	src/drivers/wireless_copy.h	/^	struct sockaddr	bssid; \/* ff:ff:ff:ff:ff:ff for broadcast BSSID or$/;"	m	struct:iw_scan_req	typeref:struct:iw_scan_req::sockaddr	access:public
iw_scan_req::channel_list	src/drivers/wireless_copy.h	/^	struct iw_freq	channel_list[IW_MAX_FREQUENCIES];$/;"	m	struct:iw_scan_req	typeref:struct:iw_scan_req::iw_freq	access:public
iw_scan_req::essid	src/drivers/wireless_copy.h	/^	__u8		essid[IW_ESSID_MAX_SIZE];$/;"	m	struct:iw_scan_req	access:public
iw_scan_req::essid_len	src/drivers/wireless_copy.h	/^	__u8		essid_len;$/;"	m	struct:iw_scan_req	access:public
iw_scan_req::flags	src/drivers/wireless_copy.h	/^	__u8		flags; \/* reserved as padding; use zero, this may$/;"	m	struct:iw_scan_req	access:public
iw_scan_req::max_channel_time	src/drivers/wireless_copy.h	/^	__u32		max_channel_time; \/* in TU *\/$/;"	m	struct:iw_scan_req	access:public
iw_scan_req::min_channel_time	src/drivers/wireless_copy.h	/^	__u32		min_channel_time; \/* in TU *\/$/;"	m	struct:iw_scan_req	access:public
iw_scan_req::num_channels	src/drivers/wireless_copy.h	/^	__u8		num_channels; \/* num entries in channel_list;$/;"	m	struct:iw_scan_req	access:public
iw_scan_req::scan_type	src/drivers/wireless_copy.h	/^	__u8		scan_type; \/* IW_SCAN_TYPE_{ACTIVE,PASSIVE} *\/$/;"	m	struct:iw_scan_req	access:public
iw_statistics	src/drivers/wireless_copy.h	/^struct	iw_statistics$/;"	s
iw_statistics::discard	src/drivers/wireless_copy.h	/^	struct iw_discarded	discard;	\/* Packet discarded counts *\/$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_discarded	access:public
iw_statistics::miss	src/drivers/wireless_copy.h	/^	struct iw_missed	miss;		\/* Packet missed counts *\/$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_missed	access:public
iw_statistics::qual	src/drivers/wireless_copy.h	/^	struct iw_quality	qual;		\/* Quality of the link$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_quality	access:public
iw_statistics::status	src/drivers/wireless_copy.h	/^	__u16		status;		\/* Status$/;"	m	struct:iw_statistics	access:public
iw_thrspy	src/drivers/wireless_copy.h	/^struct	iw_thrspy$/;"	s
iw_thrspy::addr	src/drivers/wireless_copy.h	/^	struct sockaddr		addr;		\/* Source address (hw\/mac) *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::sockaddr	access:public
iw_thrspy::high	src/drivers/wireless_copy.h	/^	struct iw_quality	high;		\/* High threshold *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality	access:public
iw_thrspy::low	src/drivers/wireless_copy.h	/^	struct iw_quality	low;		\/* Low threshold *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality	access:public
iw_thrspy::qual	src/drivers/wireless_copy.h	/^	struct iw_quality	qual;		\/* Quality of the link *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality	access:public
iwreq	src/drivers/wireless_copy.h	/^struct	iwreq $/;"	s
iwreq::__anon92::ifrn_name	src/drivers/wireless_copy.h	/^		char	ifrn_name[IFNAMSIZ];	\/* if name, e.g. "eth0" *\/$/;"	m	union:iwreq::__anon92	access:public
iwreq::ifr_ifrn	src/drivers/wireless_copy.h	/^	} ifr_ifrn;$/;"	m	struct:iwreq	typeref:union:iwreq::__anon92	access:public
iwreq::u	src/drivers/wireless_copy.h	/^	union	iwreq_data	u;$/;"	m	struct:iwreq	typeref:union:iwreq::iwreq_data	access:public
iwreq_data	src/drivers/wireless_copy.h	/^union	iwreq_data$/;"	u
iwreq_data::addr	src/drivers/wireless_copy.h	/^	struct sockaddr	addr;		\/* Destination address (hw\/mac) *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::sockaddr	access:public
iwreq_data::ap_addr	src/drivers/wireless_copy.h	/^	struct sockaddr	ap_addr;	\/* Access point address *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::sockaddr	access:public
iwreq_data::bitrate	src/drivers/wireless_copy.h	/^	struct iw_param	bitrate;	\/* default bit rate *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::data	src/drivers/wireless_copy.h	/^	struct iw_point	data;		\/* Other large parameters *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point	access:public
iwreq_data::encoding	src/drivers/wireless_copy.h	/^	struct iw_point	encoding;	\/* Encoding stuff : tokens *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point	access:public
iwreq_data::essid	src/drivers/wireless_copy.h	/^	struct iw_point	essid;		\/* Extended network name *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point	access:public
iwreq_data::frag	src/drivers/wireless_copy.h	/^	struct iw_param	frag;		\/* Fragmentation threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::freq	src/drivers/wireless_copy.h	/^	struct iw_freq	freq;		\/* frequency or channel :$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_freq	access:public
iwreq_data::mode	src/drivers/wireless_copy.h	/^	__u32		mode;		\/* Operation mode *\/$/;"	m	union:iwreq_data	access:public
iwreq_data::name	src/drivers/wireless_copy.h	/^	char		name[IFNAMSIZ];$/;"	m	union:iwreq_data	access:public
iwreq_data::nwid	src/drivers/wireless_copy.h	/^	struct iw_param	nwid;		\/* network id (or domain - the cell) *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::param	src/drivers/wireless_copy.h	/^	struct iw_param	param;		\/* Other small parameters *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::power	src/drivers/wireless_copy.h	/^	struct iw_param	power;		\/* PM duration\/timeout *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::qual	src/drivers/wireless_copy.h	/^	struct iw_quality qual;		\/* Quality part of statistics *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_quality	access:public
iwreq_data::retry	src/drivers/wireless_copy.h	/^	struct iw_param	retry;		\/* Retry limits & lifetime *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::rts	src/drivers/wireless_copy.h	/^	struct iw_param	rts;		\/* RTS threshold threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::sens	src/drivers/wireless_copy.h	/^	struct iw_param	sens;		\/* signal level threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
iwreq_data::txpower	src/drivers/wireless_copy.h	/^	struct iw_param	txpower;	\/* default transmit power *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
k	src/eap_peer/eap_pwd.c	/^	BIGNUM *k;$/;"	m	struct:eap_pwd_data	file:	access:public
k	src/eap_server/eap_server_pwd.c	/^	BIGNUM *k;$/;"	m	struct:eap_pwd_data	file:	access:public
k_aut	src/eap_peer/eap_aka.c	/^	u8 k_aut[EAP_AKA_PRIME_K_AUT_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
k_aut	src/eap_peer/eap_sim.c	/^	u8 k_aut[EAP_SIM_K_AUT_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
k_aut	src/eap_server/eap_server_aka.c	/^	u8 k_aut[EAP_AKA_PRIME_K_AUT_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
k_aut	src/eap_server/eap_server_sim.c	/^	u8 k_aut[EAP_SIM_K_AUT_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
k_aut	src/eap_server/eap_sim_db.h	/^	u8 k_aut[EAP_AKA_PRIME_K_AUT_LEN];$/;"	m	struct:eap_sim_reauth	access:public
k_encr	src/eap_peer/eap_aka.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
k_encr	src/eap_peer/eap_sim.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
k_encr	src/eap_server/eap_server_aka.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
k_encr	src/eap_server/eap_server_sim.c	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
k_encr	src/eap_server/eap_sim_db.h	/^	u8 k_encr[EAP_SIM_K_ENCR_LEN];$/;"	m	struct:eap_sim_reauth	access:public
k_re	src/eap_peer/eap_aka.c	/^	u8 k_re[EAP_AKA_PRIME_K_RE_LEN]; \/* EAP-AKA' only *\/$/;"	m	struct:eap_aka_data	file:	access:public
k_re	src/eap_server/eap_server_aka.c	/^	u8 k_re[EAP_AKA_PRIME_K_RE_LEN]; \/* EAP-AKA' only *\/$/;"	m	struct:eap_aka_data	file:	access:public
k_re	src/eap_server/eap_sim_db.h	/^	u8 k_re[EAP_AKA_PRIME_K_RE_LEN];$/;"	m	struct:eap_sim_reauth	access:public
kc	hostapd/hlr_auc_gw.c	/^	u8 kc[8];$/;"	m	struct:gsm_triplet	file:	access:public
kc	src/eap_peer/eap_sim.c	/^	u8 kc[3][EAP_SIM_KC_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
kc	src/eap_server/eap_server_sim.c	/^	u8 kc[EAP_SIM_MAX_CHAL][EAP_SIM_KC_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
kc	src/eap_server/eap_sim_db.c	/^			u8 kc[EAP_SIM_MAX_CHAL][EAP_SIM_KC_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
kck	src/common/wpa_common.h	/^	u8 kck[16]; \/* EAPOL-Key Key Confirmation Key (KCK) *\/$/;"	m	struct:wpa_ptk	access:public
kck	src/rsn_supp/tdls.c	/^		u8 kck[16]; \/* TPK-KCK *\/$/;"	m	struct:wpa_tdls_peer::tpk	file:	access:public
kdf	src/eap_common/eap_sim_common.h	/^	u16 kdf[EAP_AKA_PRIME_KDF_MAX];$/;"	m	struct:eap_sim_attrs	access:public
kdf	src/eap_peer/eap_aka.c	/^	u16 kdf;$/;"	m	struct:eap_aka_data	file:	access:public
kdf	src/eap_server/eap_server_aka.c	/^	u16 kdf;$/;"	m	struct:eap_aka_data	file:	access:public
kdf_count	src/eap_common/eap_sim_common.h	/^	size_t kdf_count;$/;"	m	struct:eap_sim_attrs	access:public
kdf_input	src/eap_common/eap_sim_common.h	/^	const u8 *kdf_input;$/;"	m	struct:eap_sim_attrs	access:public
kdf_input_len	src/eap_common/eap_sim_common.h	/^	size_t kdf_input_len;$/;"	m	struct:eap_sim_attrs	access:public
kdf_negotiation	src/eap_peer/eap_aka.c	/^	int kdf_negotiation;$/;"	m	struct:eap_aka_data	file:	access:public
kdk	src/eap_peer/eap_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
kdk	src/eap_server/eap_server_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
ke	src/eap_common/ikev2_common.h	/^	const u8 *ke;$/;"	m	struct:ikev2_payloads	access:public
ke_len	src/eap_common/ikev2_common.h	/^	size_t ke_len;$/;"	m	struct:ikev2_payloads	access:public
kek	src/common/wpa_common.h	/^	u8 kek[16]; \/* EAPOL-Key Key Encryption Key (KEK) *\/$/;"	m	struct:wpa_ptk	access:public
key	src/ap/ap_config.h	/^	u8 *key[NUM_WEP_KEYS];$/;"	m	struct:hostapd_wep_keys	access:public
key	src/ap/wpa_auth.h	/^	u8 key[16];$/;"	m	struct:ft_remote_r0kh	access:public
key	src/ap/wpa_auth.h	/^	u8 key[16];$/;"	m	struct:ft_remote_r1kh	access:public
key	src/common/privsep_commands.h	/^	u8 key[32];$/;"	m	struct:privsep_cmd_set_key	access:public
key	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY key;$/;"	m	struct:crypto_cipher	file:	access:public
key	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY key;$/;"	m	struct:crypto_hash	file:	access:public
key	src/crypto/crypto_internal-cipher.c	/^			struct des3_key_s key;$/;"	m	struct:crypto_cipher::__anon186::__anon189	typeref:struct:crypto_cipher::__anon186::__anon189::des3_key_s	file:	access:public
key	src/crypto/crypto_internal-cipher.c	/^			u8 key[16];$/;"	m	struct:crypto_cipher::__anon186::__anon187	file:	access:public
key	src/crypto/crypto_internal.c	/^	u8 key[64];$/;"	m	struct:crypto_hash	file:	access:public
key	src/crypto/crypto_libtomcrypt.c	/^			u8 key[16];$/;"	m	struct:crypto_cipher::__anon199::__anon200	file:	access:public
key	src/drivers/driver_hostap.h	/^			u8 key[0];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
key	src/drivers/wireless_copy.h	/^	__u8		key[0];$/;"	m	struct:iw_encode_ext	access:public
key	src/tls/tlsv1_cred.h	/^	struct crypto_private_key *key;$/;"	m	struct:tlsv1_credentials	typeref:struct:tlsv1_credentials::crypto_private_key	access:public
key	src/wps/wps.h	/^	u8 key[64];$/;"	m	struct:wps_credential	access:public
key2_id	src/eap_peer/eap_config.h	/^	char *key2_id;$/;"	m	struct:eap_peer_config	access:public
keyDone	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean keyDone;                                                                                                                                           $/;"	m	struct:eapol_state_machine	access:public
keyDone	src/eapol_supp/eapol_supp_sm.c	/^	Boolean keyDone;$/;"	m	struct:eapol_sm	file:	access:public
keyRun	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean keyRun;         \/\/ BE_AUTH SM 进入SUCCESS状态时设置TRUE；AUTH_PAE SM 进入AUTHENTICATING\/ABORTING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
keyRun	src/eapol_supp/eapol_supp_sm.c	/^	Boolean keyRun;$/;"	m	struct:eapol_sm	file:	access:public
keyTxEnabled	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean keyTxEnabled;$/;"	m	struct:eapol_state_machine	access:public
key_block_p	src/eap_peer/eap_fast.c	/^	struct eap_fast_key_block_provisioning *key_block_p;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_key_block_provisioning	file:	access:public
key_block_p	src/eap_server/eap_server_fast.c	/^	struct eap_fast_key_block_provisioning *key_block_p;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_key_block_provisioning	file:	access:public
key_data	src/eap_peer/eap_fast.c	/^	u8 key_data[EAP_FAST_KEY_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
key_data	src/eap_peer/eap_peap.c	/^	u8 *key_data;$/;"	m	struct:eap_peap_data	file:	access:public
key_data	src/eap_peer/eap_tls.c	/^	u8 *key_data;$/;"	m	struct:eap_tls_data	file:	access:public
key_data	src/eap_peer/eap_ttls.c	/^	u8 *key_data;$/;"	m	struct:eap_ttls_data	file:	access:public
key_data_length	src/common/wpa_common.h	/^	u8 key_data_length[2]; \/* big endian *\/$/;"	m	struct:wpa_eapol_key	access:public
key_exchange	src/tls/tlsv1_common.h	/^	tls_key_exchange key_exchange;$/;"	m	struct:tls_cipher_suite	access:public
key_id	src/common/wpa_common.h	/^	u8 key_id[8]; \/* Reserved in IEEE 802.11i\/RSN *\/$/;"	m	struct:wpa_eapol_key	access:public
key_id	src/crypto/tls.h	/^	const char *key_id;$/;"	m	struct:tls_connection_params	access:public
key_id	src/eap_peer/eap_config.h	/^	char *key_id;$/;"	m	struct:eap_peer_config	access:public
key_idx	src/common/privsep_commands.h	/^	int key_idx;$/;"	m	struct:privsep_cmd_set_key	access:public
key_idx	src/wps/wps.h	/^	u8 key_idx;$/;"	m	struct:wps_credential	access:public
key_index	src/ap/ieee802_1x.h	/^	u8 key_index; \/* key flag in the most significant bit:$/;"	m	struct:ieee802_1x_eapol_key	access:public
key_index	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_index; \/* key flag in the most significant bit:$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
key_info	src/common/wpa_common.h	/^	u8 key_info[2]; \/* big endian *\/$/;"	m	struct:wpa_eapol_key	access:public
key_iv	src/ap/ieee802_1x.h	/^	u8 key_iv[16]; \/* cryptographically random number *\/$/;"	m	struct:ieee802_1x_eapol_key	access:public
key_iv	src/common/wpa_common.h	/^	u8 key_iv[16];$/;"	m	struct:wpa_eapol_key	access:public
key_iv	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_iv[IEEE8021X_KEY_IV_LEN]; \/* cryptographically random number *\/$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
key_len	src/common/privsep_commands.h	/^	size_t key_len;$/;"	m	struct:privsep_cmd_set_key	access:public
key_len	src/crypto/crypto_internal.c	/^	size_t key_len;$/;"	m	struct:crypto_hash	file:	access:public
key_len	src/drivers/driver_hostap.h	/^			u16 key_len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
key_len	src/drivers/wireless_copy.h	/^	__u16		key_len;$/;"	m	struct:iw_encode_ext	access:public
key_len	src/eap_common/ikev2_common.h	/^	size_t key_len;$/;"	m	struct:ikev2_encr_alg	access:public
key_len	src/eap_common/ikev2_common.h	/^	size_t key_len;$/;"	m	struct:ikev2_integ_alg	access:public
key_len	src/eap_common/ikev2_common.h	/^	size_t key_len;$/;"	m	struct:ikev2_prf_alg	access:public
key_len	src/wps/wps.h	/^	size_t key_len;$/;"	m	struct:wps_credential	access:public
key_length	src/ap/ieee802_1x.h	/^	u16 key_length;$/;"	m	struct:ieee802_1x_eapol_key	access:public
key_length	src/common/wpa_common.h	/^	u8 key_length[2]; \/* big endian *\/$/;"	m	struct:wpa_eapol_key	access:public
key_length	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_length[2];$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
key_lifetime	src/rsn_supp/wpa_ie.h	/^	const u8 *key_lifetime;$/;"	m	struct:wpa_eapol_ie_parse	access:public
key_material	src/tls/tlsv1_common.h	/^	size_t key_material;$/;"	m	struct:tls_cipher_data	access:public
key_material_len	src/tls/tlsv1_record.h	/^	size_t key_material_len;$/;"	m	struct:tlsv1_record_layer	access:public
key_mgmt	src/common/wpa_common.h	/^	int key_mgmt;$/;"	m	struct:wpa_ie_data	access:public
key_mgmt	src/drivers/driver.h	/^	unsigned int key_mgmt;$/;"	m	struct:wpa_driver_capa	access:public
key_mgmt	src/rsn_supp/wpa_i.h	/^	unsigned int key_mgmt;$/;"	m	struct:wpa_sm	access:public
key_mgmt_suite	src/common/privsep_commands.h	/^	int key_mgmt_suite;$/;"	m	struct:privsep_cmd_associate	access:public
key_mgmt_suite	src/drivers/driver.h	/^	enum wpa_key_mgmt key_mgmt_suite;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wpa_key_mgmt	access:public
key_mgmt_suites	src/drivers/driver.h	/^	unsigned int key_mgmt_suites;$/;"	m	struct:wpa_driver_ap_params	access:public
key_mic	src/common/wpa_common.h	/^	u8 key_mic[16];$/;"	m	struct:wpa_eapol_key	access:public
key_nonce	src/common/wpa_common.h	/^	u8 key_nonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_eapol_key	access:public
key_pad	src/eap_peer/ikev2.h	/^	u8 *key_pad;$/;"	m	struct:ikev2_responder_data	access:public
key_pad	src/eap_server/ikev2.h	/^	u8 *key_pad;$/;"	m	struct:ikev2_initiator_data	access:public
key_pad_len	src/eap_peer/ikev2.h	/^	size_t key_pad_len;$/;"	m	struct:ikev2_responder_data	access:public
key_pad_len	src/eap_server/ikev2.h	/^	size_t key_pad_len;$/;"	m	struct:ikev2_initiator_data	access:public
key_prov_auto	src/wps/wps_i.h	/^	const u8 *key_prov_auto; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
key_replay	src/ap/wpa_auth_i.h	/^	} key_replay[RSNA_MAX_EAPOL_RETRIES];$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::__anon15	access:public
key_rsc	src/common/wpa_common.h	/^	u8 key_rsc[WPA_KEY_RSC_LEN];$/;"	m	struct:wpa_eapol_key	access:public
key_rsc_len	src/rsn_supp/wpa.c	/^	int tx, key_rsc_len, keyidx;$/;"	m	struct:wpa_gtk_data	file:	access:public
key_rx_state	src/eapol_auth/eapol_auth_sm_i.h	/^	enum { KEY_RX_NO_KEY_RECEIVE, KEY_RX_KEY_RECEIVE } key_rx_state;    \/\/ key接收状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon70	access:public
key_rx_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * key_rx_state_txt(int s)$/;"	f	file:	signature:(int s)
key_signature	src/ap/ieee802_1x.h	/^	u8 key_signature[16]; \/* HMAC-MD5 message integrity check computed with$/;"	m	struct:ieee802_1x_eapol_key	access:public
key_signature	src/eapol_supp/eapol_supp_sm.c	/^	u8 key_signature[IEEE8021X_KEY_SIGN_LEN];$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
key_spec	src/crypto/tls_openssl.c	/^	DWORD key_spec;$/;"	m	struct:cryptoapi_rsa_data	file:	access:public
key_usage	src/tls/x509v3.h	/^	unsigned long key_usage;$/;"	m	struct:x509_certificate	access:public
key_wrap_auth	src/wps/wps_i.h	/^	const u8 *key_wrap_auth; \/* WPS_KWA_LEN (8) octets *\/$/;"	m	struct:wps_parse_attr	access:public
key_wrap_extra	src/ap/wpa_auth.h	/^	u8 key_wrap_extra[8];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
key_wrap_extra	src/ap/wpa_auth.h	/^	u8 key_wrap_extra[8];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
key_wrap_extra	src/ap/wpa_auth.h	/^	u8 key_wrap_extra[8];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
keycount	src/ap/wpa_auth_i.h	/^	int keycount;$/;"	m	struct:wpa_state_machine	access:public
keyid	src/common/wpa_common.h	/^	u8 keyid[2];$/;"	m	struct:wpa_igtk_kde	access:public
keyidx	src/rsn_supp/wpa.c	/^	int tx, key_rsc_len, keyidx;$/;"	m	struct:wpa_gtk_data	file:	access:public
keylen	src/crypto/crypto_internal-cipher.c	/^			size_t keylen;$/;"	m	struct:crypto_cipher::__anon186::__anon187	file:	access:public
keylen	src/crypto/crypto_libtomcrypt.c	/^			size_t keylen;$/;"	m	struct:crypto_cipher::__anon199::__anon200	file:	access:public
keymat	src/eap_peer/eap_ikev2.c	/^	u8 keymat[EAP_MSK_LEN + EAP_EMSK_LEN];$/;"	m	struct:eap_ikev2_data	file:	access:public
keymat	src/eap_server/eap_server_ikev2.c	/^	u8 keymat[EAP_MSK_LEN + EAP_EMSK_LEN];$/;"	m	struct:eap_ikev2_data	file:	access:public
keymat_ok	src/eap_peer/eap_ikev2.c	/^	int keymat_ok;$/;"	m	struct:eap_ikev2_data	file:	access:public
keymat_ok	src/eap_server/eap_server_ikev2.c	/^	int keymat_ok;$/;"	m	struct:eap_ikev2_data	file:	access:public
keys	src/eap_peer/ikev2.h	/^	struct ikev2_keys keys;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::ikev2_keys	access:public
keys	src/eap_server/ikev2.h	/^	struct ikev2_keys keys;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::ikev2_keys	access:public
keys_ready	src/eap_peer/eap_ikev2.c	/^	int keys_ready;$/;"	m	struct:eap_ikev2_data	file:	access:public
keys_ready	src/eap_server/eap_server_ikev2.c	/^	int keys_ready;$/;"	m	struct:eap_ikev2_data	file:	access:public
keys_set	src/ap/ap_config.h	/^	int keys_set;$/;"	m	struct:hostapd_wep_keys	access:public
keys_set	src/eap_server/eap_server_pax.c	/^	int keys_set;$/;"	m	struct:eap_pax_data	file:	access:public
keywrapkey	src/wps/wps_i.h	/^	u8 keywrapkey[WPS_KEYWRAPKEY_LEN];$/;"	m	struct:wps_data	access:public
ki	hostapd/hlr_auc_gw.c	/^	u8 ki[16];$/;"	m	struct:milenage_parameters	file:	access:public
kx_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_kx_algorithm_t kx_algorithm;$/;"	m	struct:__anon192	file:	access:public
l2	src/ap/hostapd.h	/^	struct l2_packet_data *l2;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::l2_packet_data	access:public
l2	src/ap/preauth_auth.c	/^	struct l2_packet_data *l2;$/;"	m	struct:rsn_preauth_interface	typeref:struct:rsn_preauth_interface::l2_packet_data	file:	access:public
l2	src/drivers/driver_nl80211.c	/^	struct l2_packet_data *l2;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::l2_packet_data	file:	access:public
l2	src/drivers/driver_roboswitch.c	/^	struct l2_packet_data *l2;$/;"	m	struct:wpa_driver_roboswitch_data	typeref:struct:wpa_driver_roboswitch_data::l2_packet_data	file:	access:public
l2	src/l2_packet/l2_packet_ndis.c	/^	struct l2_packet_data *l2[2];$/;"	m	struct:l2_packet_ndisuio_global	typeref:struct:l2_packet_ndisuio_global::l2_packet_data	file:	access:public
l2_ethhdr	src/l2_packet/l2_packet.h	/^struct l2_ethhdr {$/;"	s
l2_ethhdr::h_dest	src/l2_packet/l2_packet.h	/^	u8 h_dest[ETH_ALEN];$/;"	m	struct:l2_ethhdr	access:public
l2_ethhdr::h_proto	src/l2_packet/l2_packet.h	/^	be16 h_proto;$/;"	m	struct:l2_ethhdr	access:public
l2_ethhdr::h_source	src/l2_packet/l2_packet.h	/^	u8 h_source[ETH_ALEN];$/;"	m	struct:l2_ethhdr	access:public
l2_hdr	src/l2_packet/l2_packet_freebsd.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header data$/;"	m	struct:l2_packet_data	file:	access:public
l2_hdr	src/l2_packet/l2_packet_linux.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header data$/;"	m	struct:l2_packet_data	file:	access:public
l2_hdr	src/l2_packet/l2_packet_ndis.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header in calls to$/;"	m	struct:l2_packet_data	file:	access:public
l2_hdr	src/l2_packet/l2_packet_none.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header data$/;"	m	struct:l2_packet_data	file:	access:public
l2_hdr	src/l2_packet/l2_packet_pcap.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header in calls$/;"	m	struct:l2_packet_data	file:	access:public
l2_hdr	src/l2_packet/l2_packet_winpcap.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header in calls to$/;"	m	struct:l2_packet_data	file:	access:public
l2_ndisuio_global	src/l2_packet/l2_packet_ndis.c	/^static struct l2_packet_ndisuio_global *l2_ndisuio_global = NULL;$/;"	v	typeref:struct:l2_packet_ndisuio_global	file:
l2_ndisuio_set_ether_type	src/l2_packet/l2_packet_ndis.c	/^static int l2_ndisuio_set_ether_type(unsigned short protocol)$/;"	f	file:	signature:(unsigned short protocol)
l2_ndisuio_start_read	src/l2_packet/l2_packet_ndis.c	/^static int l2_ndisuio_start_read(struct l2_packet_data *l2, int recursive)$/;"	f	file:	signature:(struct l2_packet_data *l2, int recursive)
l2_packet_callback	src/l2_packet/l2_packet_ndis.c	/^static void l2_packet_callback(struct l2_packet_data *l2)$/;"	f	file:	signature:(struct l2_packet_data *l2)
l2_packet_callback	src/l2_packet/l2_packet_ndis.c	/^static void l2_packet_callback(struct l2_packet_data *l2);$/;"	p	file:	signature:(struct l2_packet_data *l2)
l2_packet_data	src/l2_packet/l2_packet_freebsd.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data	src/l2_packet/l2_packet_linux.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data	src/l2_packet/l2_packet_ndis.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data	src/l2_packet/l2_packet_none.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data	src/l2_packet/l2_packet_pcap.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data	src/l2_packet/l2_packet_privsep.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data	src/l2_packet/l2_packet_winpcap.c	/^struct l2_packet_data {$/;"	s	file:
l2_packet_data::eth	src/l2_packet/l2_packet_pcap.c	/^	eth_t *eth;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::fd	src/l2_packet/l2_packet_linux.c	/^	int fd; \/* packet socket for EAPOL frames *\/$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::fd	src/l2_packet/l2_packet_none.c	/^	int fd;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::fd	src/l2_packet/l2_packet_privsep.c	/^	int fd; \/* UNIX domain socket for privsep access *\/$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifindex	src/l2_packet/l2_packet_linux.c	/^	int ifindex;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifname	src/l2_packet/l2_packet_freebsd.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifname	src/l2_packet/l2_packet_linux.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifname	src/l2_packet/l2_packet_ndis.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifname	src/l2_packet/l2_packet_none.c	/^	char ifname[17];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifname	src/l2_packet/l2_packet_pcap.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::ifname	src/l2_packet/l2_packet_winpcap.c	/^	char ifname[100];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::l2_hdr	src/l2_packet/l2_packet_freebsd.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header data$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::l2_hdr	src/l2_packet/l2_packet_linux.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header data$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::l2_hdr	src/l2_packet/l2_packet_ndis.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header in calls to$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::l2_hdr	src/l2_packet/l2_packet_none.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header data$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::l2_hdr	src/l2_packet/l2_packet_pcap.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header in calls$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::l2_hdr	src/l2_packet/l2_packet_winpcap.c	/^	int l2_hdr; \/* whether to include layer 2 (Ethernet) header in calls to$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::num_fast_poll	src/l2_packet/l2_packet_pcap.c	/^	unsigned int num_fast_poll;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::num_fast_poll	src/l2_packet/l2_packet_winpcap.c	/^	unsigned int num_fast_poll;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_freebsd.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_linux.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_ndis.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_none.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_pcap.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_privsep.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_addr	src/l2_packet/l2_packet_winpcap.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::own_socket_path	src/l2_packet/l2_packet_privsep.c	/^	char *own_socket_path;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::pcap	src/l2_packet/l2_packet_freebsd.c	/^	pcap_t *pcap;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::pcap	src/l2_packet/l2_packet_pcap.c	/^	pcap_t *pcap;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::pcap	src/l2_packet/l2_packet_winpcap.c	/^	pcap_t *pcap;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::priv_addr	src/l2_packet/l2_packet_privsep.c	/^	struct sockaddr_un priv_addr;$/;"	m	struct:l2_packet_data	typeref:struct:l2_packet_data::sockaddr_un	file:	access:public
l2_packet_data::running	src/l2_packet/l2_packet_winpcap.c	/^	int running;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_avail	src/l2_packet/l2_packet_ndis.c	/^	HANDLE rx_avail;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_avail	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_buf	src/l2_packet/l2_packet_ndis.c	/^	u8 rx_buf[1514];$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_buf	src/l2_packet/l2_packet_winpcap.c	/^	u8 *rx_buf, *rx_src;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_freebsd.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_linux.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_ndis.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_none.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_pcap.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_privsep.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback	src/l2_packet/l2_packet_winpcap.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_freebsd.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_linux.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_ndis.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_none.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_pcap.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_privsep.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_callback_ctx	src/l2_packet/l2_packet_winpcap.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_done	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_len	src/l2_packet/l2_packet_winpcap.c	/^	size_t rx_len;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_no_wait	src/l2_packet/l2_packet_winpcap.c	/^	size_t rx_no_wait;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_notify	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_overlapped	src/l2_packet/l2_packet_ndis.c	/^	OVERLAPPED rx_overlapped;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_src	src/l2_packet/l2_packet_winpcap.c	/^	u8 *rx_buf, *rx_src;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_thread	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_thread_done	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_data::rx_written	src/l2_packet/l2_packet_ndis.c	/^	DWORD rx_written;$/;"	m	struct:l2_packet_data	file:	access:public
l2_packet_deinit	src/l2_packet/l2_packet.h	/^void l2_packet_deinit(struct l2_packet_data *l2);$/;"	p	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_freebsd.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_linux.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_ndis.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_none.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_pcap.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_privsep.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit	src/l2_packet/l2_packet_winpcap.c	/^void l2_packet_deinit(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_deinit_timeout	src/l2_packet/l2_packet_winpcap.c	/^static void l2_packet_deinit_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
l2_packet_get_ip_addr	src/l2_packet/l2_packet.h	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len);$/;"	p	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_freebsd.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_linux.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_ndis.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_none.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_pcap.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_privsep.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_ip_addr	src/l2_packet/l2_packet_winpcap.c	/^int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)$/;"	f	signature:(struct l2_packet_data *l2, char *buf, size_t len)
l2_packet_get_own_addr	src/l2_packet/l2_packet.h	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr);$/;"	p	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_freebsd.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_linux.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_ndis.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_none.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_pcap.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_privsep.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_get_own_addr	src/l2_packet/l2_packet_winpcap.c	/^int l2_packet_get_own_addr(struct l2_packet_data *l2, u8 *addr)$/;"	f	signature:(struct l2_packet_data *l2, u8 *addr)
l2_packet_init	src/l2_packet/l2_packet.h	/^struct l2_packet_data * l2_packet_init($/;"	p	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_freebsd.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_linux.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_ndis.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_none.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_pcap.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_privsep.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init	src/l2_packet/l2_packet_winpcap.c	/^struct l2_packet_data * l2_packet_init($/;"	f	signature:( const char *ifname, const u8 *own_addr, unsigned short protocol, void (*rx_callback)(void *ctx, const u8 *src_addr, const u8 *buf, size_t len), void *rx_callback_ctx, int l2_hdr)
l2_packet_init_libdnet	src/l2_packet/l2_packet_pcap.c	/^static int l2_packet_init_libdnet(struct l2_packet_data *l2)$/;"	f	file:	signature:(struct l2_packet_data *l2)
l2_packet_init_libpcap	src/l2_packet/l2_packet_freebsd.c	/^static int l2_packet_init_libpcap(struct l2_packet_data *l2,$/;"	f	file:	signature:(struct l2_packet_data *l2, unsigned short protocol)
l2_packet_init_libpcap	src/l2_packet/l2_packet_pcap.c	/^static int l2_packet_init_libpcap(struct l2_packet_data *l2,$/;"	f	file:	signature:(struct l2_packet_data *l2, unsigned short protocol)
l2_packet_init_libpcap	src/l2_packet/l2_packet_winpcap.c	/^static int l2_packet_init_libpcap(struct l2_packet_data *l2,$/;"	f	file:	signature:(struct l2_packet_data *l2, unsigned short protocol)
l2_packet_ndisuio_global	src/l2_packet/l2_packet_ndis.c	/^struct l2_packet_ndisuio_global {$/;"	s	file:
l2_packet_ndisuio_global::first_proto	src/l2_packet/l2_packet_ndis.c	/^	unsigned short first_proto;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
l2_packet_ndisuio_global::l2	src/l2_packet/l2_packet_ndis.c	/^	struct l2_packet_data *l2[2];$/;"	m	struct:l2_packet_ndisuio_global	typeref:struct:l2_packet_ndisuio_global::l2_packet_data	file:	access:public
l2_packet_ndisuio_global::ready_for_read	src/l2_packet/l2_packet_ndis.c	/^	HANDLE ready_for_read;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
l2_packet_ndisuio_global::refcount	src/l2_packet/l2_packet_ndis.c	/^	int refcount;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
l2_packet_ndisuio_global::rx_processed	src/l2_packet/l2_packet_ndis.c	/^	HANDLE rx_processed;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
l2_packet_ndisuio_global::rx_thread	src/l2_packet/l2_packet_ndis.c	/^	HANDLE rx_thread;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
l2_packet_ndisuio_global::stop_request	src/l2_packet/l2_packet_ndis.c	/^	HANDLE stop_request;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
l2_packet_notify_auth_start	src/l2_packet/l2_packet.h	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2);$/;"	p	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_freebsd.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_linux.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_ndis.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_none.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_pcap.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_privsep.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_notify_auth_start	src/l2_packet/l2_packet_winpcap.c	/^void l2_packet_notify_auth_start(struct l2_packet_data *l2)$/;"	f	signature:(struct l2_packet_data *l2)
l2_packet_receive	src/l2_packet/l2_packet_freebsd.c	/^static void l2_packet_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
l2_packet_receive	src/l2_packet/l2_packet_linux.c	/^static void l2_packet_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
l2_packet_receive	src/l2_packet/l2_packet_none.c	/^static void l2_packet_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
l2_packet_receive	src/l2_packet/l2_packet_pcap.c	/^static void l2_packet_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
l2_packet_receive	src/l2_packet/l2_packet_privsep.c	/^static void l2_packet_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
l2_packet_receive_cb	src/l2_packet/l2_packet_pcap.c	/^static void l2_packet_receive_cb(u_char *user, const struct pcap_pkthdr *hdr,$/;"	f	file:	signature:(u_char *user, const struct pcap_pkthdr *hdr, const u_char *pkt_data)
l2_packet_receive_cb	src/l2_packet/l2_packet_winpcap.c	/^static void l2_packet_receive_cb(u_char *user, const struct pcap_pkthdr *hdr,$/;"	f	file:	signature:(u_char *user, const struct pcap_pkthdr *hdr, const u_char *pkt_data)
l2_packet_receive_thread	src/l2_packet/l2_packet_winpcap.c	/^static DWORD WINAPI l2_packet_receive_thread(LPVOID arg)$/;"	f	file:	signature:(LPVOID arg)
l2_packet_receive_timeout	src/l2_packet/l2_packet_pcap.c	/^static void l2_packet_receive_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
l2_packet_rx_event	src/l2_packet/l2_packet_ndis.c	/^static void l2_packet_rx_event(void *eloop_data, void *user_data)$/;"	f	file:	signature:(void *eloop_data, void *user_data)
l2_packet_rx_event	src/l2_packet/l2_packet_winpcap.c	/^static void l2_packet_rx_event(void *eloop_data, void *user_data)$/;"	f	file:	signature:(void *eloop_data, void *user_data)
l2_packet_rx_thread	src/l2_packet/l2_packet_ndis.c	/^static DWORD WINAPI l2_packet_rx_thread(LPVOID arg)$/;"	f	file:	signature:(LPVOID arg)
l2_packet_rx_thread_try_read	src/l2_packet/l2_packet_ndis.c	/^static void l2_packet_rx_thread_try_read(struct l2_packet_data *l2)$/;"	f	file:	signature:(struct l2_packet_data *l2)
l2_packet_send	src/l2_packet/l2_packet.h	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	p	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_freebsd.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_linux.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_ndis.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_none.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_pcap.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_privsep.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_packet_send	src/l2_packet/l2_packet_winpcap.c	/^int l2_packet_send(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto,$/;"	f	signature:(struct l2_packet_data *l2, const u8 *dst_addr, u16 proto, const u8 *buf, size_t len)
l2_preauth	src/rsn_supp/wpa_i.h	/^	struct l2_packet_data *l2_preauth;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::l2_packet_data	access:public
l2_preauth_br	src/rsn_supp/wpa_i.h	/^	struct l2_packet_data *l2_preauth_br;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::l2_packet_data	access:public
l2_tdls	src/rsn_supp/wpa_i.h	/^	struct l2_packet_data *l2_tdls;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::l2_packet_data	access:public
l_bit	src/eap_common/eap_pwd_common.h	/^	u8 l_bit:1;$/;"	m	struct:eap_pwd_hdr	access:public
lastId	src/eap_peer/eap_i.h	/^	int lastId;$/;"	m	struct:eap_sm	access:public
lastId	src/eap_server/eap_i.h	/^	int lastId; \/* Identifier used in the last EAP-Packet *\/$/;"	m	struct:eap_sm	access:public
lastReqData	src/eap_server/eap_i.h	/^	struct wpabuf *lastReqData;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
lastRespData	src/eap_peer/eap_i.h	/^	struct wpabuf *lastRespData;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wpabuf	access:public
last_ack_rssi	src/drivers/driver.h	/^	int last_ack_rssi;$/;"	m	struct:hostap_sta_driver_data	access:public
last_assoc_req	src/ap/sta_info.h	/^	struct ieee80211_mgmt *last_assoc_req;$/;"	m	struct:sta_info	typeref:struct:sta_info::ieee80211_mgmt	access:public
last_attempt	src/radius/radius_client.c	/^	struct os_time last_attempt;$/;"	m	struct:radius_msg_list	typeref:struct:radius_msg_list::os_time	file:	access:public
last_authenticator	src/radius/radius_server.c	/^	u8 last_authenticator[16];$/;"	m	struct:radius_session	file:	access:public
last_batchid	src/eap_peer/tncc.c	/^	unsigned int last_batchid;$/;"	m	struct:tncc_data	file:	access:public
last_batchid	src/eap_server/tncs.c	/^	unsigned int last_batchid;$/;"	m	struct:tncs_data	file:	access:public
last_beacon	src/ap/ap_list.h	/^	os_time_t last_beacon;$/;"	m	struct:ap_info	access:public
last_bss	src/ap/ap_config.h	/^	struct hostapd_bss_config *bss, *last_bss;$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::	access:public
last_eap_id	src/eapol_auth/eapol_auth_sm_i.h	/^	u8 last_eap_id; \/* last used EAP Identifier 记录了最后一个使用的EAP报文的Identify字段*\/$/;"	m	struct:eapol_state_machine	access:public
last_eap_identity	src/eap_peer/eap_aka.c	/^	u8 *last_eap_identity;$/;"	m	struct:eap_aka_data	file:	access:public
last_eap_identity	src/eap_peer/eap_sim.c	/^	u8 *last_eap_identity;$/;"	m	struct:eap_sim_data	file:	access:public
last_eap_identity_len	src/eap_peer/eap_aka.c	/^	size_t last_eap_identity_len;$/;"	m	struct:eap_aka_data	file:	access:public
last_eap_identity_len	src/eap_peer/eap_sim.c	/^	size_t last_eap_identity_len;$/;"	m	struct:eap_sim_data	file:	access:public
last_event_failed	src/wps/wps_upnp_i.h	/^	int last_event_failed; \/* Whether delivery of last event failed *\/$/;"	m	struct:subscription	access:public
last_event_sec	src/wps/wps_upnp_i.h	/^	os_time_t last_event_sec;$/;"	m	struct:upnp_wps_device_sm	access:public
last_freq	src/drivers/driver_nl80211.c	/^	int last_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
last_freq_ht	src/drivers/driver_nl80211.c	/^	int last_freq_ht;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
last_from	src/radius/radius_server.c	/^	struct sockaddr_storage last_from;$/;"	m	struct:radius_session	typeref:struct:radius_session::sockaddr_storage	file:	access:public
last_from_addr	src/radius/radius_server.c	/^	char *last_from_addr;$/;"	m	struct:radius_session	file:	access:public
last_from_port	src/radius/radius_server.c	/^	int last_from_port;$/;"	m	struct:radius_session	file:	access:public
last_fromlen	src/radius/radius_server.c	/^	socklen_t last_fromlen;$/;"	m	struct:radius_session	file:	access:public
last_identifier	src/radius/radius_server.c	/^	u8 last_identifier;$/;"	m	struct:radius_session	file:	access:public
last_md5	src/eap_peer/eap_i.h	/^	u8 last_md5[16]; \/* MD5() of the previously received EAP packet; used$/;"	m	struct:eap_sm	access:public
last_mgmt_freq	src/drivers/driver_nl80211.c	/^	unsigned int last_mgmt_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
last_msg	src/eap_peer/ikev2.h	/^	enum { LAST_MSG_SA_INIT, LAST_MSG_SA_AUTH } last_msg;$/;"	m	struct:ikev2_responder_data	typeref:enum:ikev2_responder_data::__anon175	access:public
last_msg	src/radius/radius_server.c	/^	struct radius_msg *last_msg;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_msg	file:	access:public
last_msg	src/wps/wps_i.h	/^	struct wpabuf *last_msg;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
last_p2p_find_timeout	src/p2p/p2p_i.h	/^	unsigned int last_p2p_find_timeout;$/;"	m	struct:p2p_data	access:public
last_path	src/utils/wpa_debug.c	/^static char *last_path = NULL;$/;"	v	file:
last_prog_scan_chan	src/p2p/p2p_i.h	/^	u8 last_prog_scan_chan;$/;"	m	struct:p2p_data	access:public
last_prog_scan_class	src/p2p/p2p_i.h	/^	u8 last_prog_scan_class;$/;"	m	struct:p2p_data	access:public
last_recv_radius	src/eapol_auth/eapol_auth_sm_i.h	/^	struct radius_msg *last_recv_radius;    \/\/ 指向最近一个收到的radius报文$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::radius_msg	access:public
last_replay_counter	src/eapol_supp/eapol_supp_sm.c	/^	u8 last_replay_counter[16];$/;"	m	struct:eapol_sm	file:	access:public
last_reply	src/radius/radius_server.c	/^	struct radius_msg *last_reply;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_msg	file:	access:public
last_rssi	src/drivers/driver.h	/^	int last_rssi;$/;"	m	struct:hostap_sta_driver_data	access:public
last_rx_bytes	src/ap/sta_info.h	/^	unsigned long last_rx_bytes;$/;"	m	struct:sta_info	access:public
last_rx_eapol_key	src/ap/wpa_auth_i.h	/^	u8 *last_rx_eapol_key; \/* starting from IEEE 802.1X header *\/$/;"	m	struct:wpa_state_machine	access:public
last_rx_eapol_key_len	src/ap/wpa_auth_i.h	/^	size_t last_rx_eapol_key_len;$/;"	m	struct:wpa_state_machine	access:public
last_rx_key	src/eapol_supp/eapol_supp_sm.c	/^	u8 *last_rx_key;$/;"	m	struct:eapol_sm	file:	access:public
last_rx_key_len	src/eapol_supp/eapol_supp_sm.c	/^	size_t last_rx_key_len;$/;"	m	struct:eapol_sm	file:	access:public
last_seen	src/p2p/p2p_i.h	/^	struct os_time last_seen;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::os_time	access:public
last_tx_bytes	src/ap/sta_info.h	/^	unsigned long last_tx_bytes;$/;"	m	struct:sta_info	access:public
later_additions	src/drivers/driver_ndis.c	/^	u8 later_additions[100];$/;"	m	struct:__anon97	file:	access:public
le16	src/utils/common.h	/^typedef u16 __bitwise le16;$/;"	t
le16_to_cpu	src/utils/radiotap.c	25;"	d	file:
le32	src/utils/common.h	/^typedef u32 __bitwise le32;$/;"	t
le32_to_cpu	src/utils/radiotap.c	26;"	d	file:
le64	src/utils/common.h	/^typedef u64 __bitwise le64;$/;"	t
le_to_host16	src/utils/common.h	186;"	d
le_to_host16	src/utils/common.h	214;"	d
le_to_host16	src/utils/common.h	227;"	d
le_to_host32	src/utils/common.h	190;"	d
le_to_host32	src/utils/common.h	218;"	d
le_to_host32	src/utils/common.h	231;"	d
le_to_host64	src/utils/common.h	222;"	d
le_to_host64	src/utils/common.h	234;"	d
leap_done	src/eap_peer/eap_i.h	/^	Boolean leap_done;$/;"	m	struct:eap_sm	access:public
len	src/ap/ap_config.h	/^	size_t len[NUM_WEP_KEYS];$/;"	m	struct:hostapd_wep_keys	access:public
len	src/ap/ap_config.h	/^	u8 len;$/;"	m	struct:hostapd_roaming_consortium	access:public
len	src/ap/iapp.c	/^	be16 len; \/* 6 *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
len	src/common/wpa_common.h	/^	u8 len;$/;"	m	struct:rsn_ie_hdr	access:public
len	src/common/wpa_common.h	/^	u8 len;$/;"	m	struct:wpa_ie_hdr	access:public
len	src/drivers/driver.h	/^		size_t len;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
len	src/drivers/driver.h	/^		size_t len;$/;"	m	struct:wpa_event_data::rx_action	access:public
len	src/drivers/driver_broadcom.c	/^	u8 len;$/;"	m	struct:bss_ie_hdr	file:	access:public
len	src/drivers/driver_hostap.h	/^			u16 len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon83	access:public
len	src/drivers/driver_hostap.h	/^			u8 len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon84	access:public
len	src/drivers/driver_hostap.h	/^		u32 len;$/;"	m	struct:prism2_download_param::prism2_download_area	access:public
len	src/drivers/wireless_copy.h	/^	__u16		len;			\/* Real length of this stuff *\/$/;"	m	struct:__compat_iw_event	access:public
len	src/drivers/wireless_copy.h	/^	__u16		len;			\/* Real length of this stuff *\/$/;"	m	struct:iw_event	access:public
len	src/eap_common/eap_fast_common.h	/^	be16 len;$/;"	m	struct:pac_tlv_hdr	access:public
len	src/eap_peer/eap_config.h	/^	size_t len;$/;"	m	struct:wpa_config_blob	access:public
len	src/p2p/p2p_i.h	/^	size_t len;$/;"	m	struct:p2p_pending_action_tx	access:public
len	src/radius/radius.h	/^	size_t len;$/;"	m	struct:radius_attr_data	access:public
len	src/tls/asn1.h	/^	size_t len;$/;"	m	struct:asn1_oid	access:public
len	src/utils/os_unix.c	/^	size_t len;$/;"	m	struct:os_alloc_trace	file:	access:public
length	src/ap/iapp.c	/^	be16 length;$/;"	m	struct:iapp_hdr	file:	access:public
length	src/common/eapol_common.h	/^	be16 length;$/;"	m	struct:ieee802_1x_hdr	access:public
length	src/common/ieee802_11_defs.h	/^					u8 length;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
length	src/common/ieee802_11_defs.h	/^	u8 length; \/* 6 + 55 = 61 *\/$/;"	m	struct:wmm_tspec_element	access:public
length	src/crypto/sha256-internal.c	/^	u64 length;$/;"	m	struct:sha256_state	file:	access:public
length	src/drivers/wireless_copy.h	/^	__u16 length;$/;"	m	struct:compat_iw_point	access:public
length	src/drivers/wireless_copy.h	/^  __u16		length;		\/* number of fields or size in bytes *\/$/;"	m	struct:iw_point	access:public
length	src/eap_common/eap_defs.h	/^	be16 length; \/* including code and identifier; network byte order *\/$/;"	m	struct:eap_hdr	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_hdr	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_intermediate_result_tlv	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_nak_tlv	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_pac_type_tlv	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_request_action_tlv	access:public
length	src/eap_common/eap_tlv_common.h	/^	be16 length;$/;"	m	struct:eap_tlv_result_tlv	access:public
length	src/eap_common/ikev2_common.h	/^	u8 length[4]; \/* total length of HDR + payloads *\/$/;"	m	struct:ikev2_hdr	access:public
length	src/radius/radius.h	/^	u16 length; \/* including this header *\/ \/\/ 包长度，最小20字节，最大4096字节$/;"	m	struct:radius_hdr	access:public
length	src/radius/radius.h	/^	u8 length; \/* including this header *\/$/;"	m	struct:radius_attr_hdr	access:public
length	src/tls/asn1.h	/^	unsigned int tag, length;$/;"	m	struct:asn1_hdr	access:public
level	src/drivers/driver.h	/^	int level;$/;"	m	struct:wpa_scan_res	access:public
level	src/drivers/wireless_copy.h	/^	__u8		level;		\/* signal level (dBm) *\/$/;"	m	struct:iw_quality	access:public
level	src/p2p/p2p.h	/^	int level;$/;"	m	struct:p2p_peer_info	access:public
lifetime	src/ap/wpa_auth_ie.h	/^	const u8 *lifetime;$/;"	m	struct:wpa_eapol_ie_parse	access:public
lifetime	src/rsn_supp/peerkey.h	/^	u32 lifetime;$/;"	m	struct:wpa_peerkey	access:public
lifetime	src/rsn_supp/tdls.c	/^	u32 lifetime;$/;"	m	struct:wpa_tdls_peer	file:	access:public
lifetime	src/rsn_supp/wpa_ie.h	/^	const u8 *lifetime;$/;"	m	struct:wpa_eapol_ie_parse	access:public
lifetime_len	src/ap/wpa_auth_ie.h	/^	size_t lifetime_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
lifetime_len	src/rsn_supp/wpa_ie.h	/^	size_t lifetime_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
line	src/eap_peer/eap_fast_pac.c	/^	int line;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
line	src/utils/trace.c	/^	unsigned int line;$/;"	m	struct:bfd_data	file:	access:public
line_length	src/wps/wps_upnp_ssdp.c	/^static int line_length(const char *l)$/;"	f	file:	signature:(const char *l)
link_id	src/common/ieee802_11_common.h	/^	const u8 *link_id;$/;"	m	struct:ieee802_11_elems	access:public
link_qual	src/drivers/Apple80211.h	/^	UInt16 link_qual;$/;"	m	struct:WirelessInfo	access:public
linux_br_add	src/drivers/linux_ioctl.c	/^int linux_br_add(int sock, const char *brname)$/;"	f	signature:(int sock, const char *brname)
linux_br_add	src/drivers/linux_ioctl.h	/^int linux_br_add(int sock, const char *brname);$/;"	p	signature:(int sock, const char *brname)
linux_br_add_if	src/drivers/linux_ioctl.c	/^int linux_br_add_if(int sock, const char *brname, const char *ifname)$/;"	f	signature:(int sock, const char *brname, const char *ifname)
linux_br_add_if	src/drivers/linux_ioctl.h	/^int linux_br_add_if(int sock, const char *brname, const char *ifname);$/;"	p	signature:(int sock, const char *brname, const char *ifname)
linux_br_del	src/drivers/linux_ioctl.c	/^int linux_br_del(int sock, const char *brname)$/;"	f	signature:(int sock, const char *brname)
linux_br_del	src/drivers/linux_ioctl.h	/^int linux_br_del(int sock, const char *brname);$/;"	p	signature:(int sock, const char *brname)
linux_br_del_if	src/drivers/linux_ioctl.c	/^int linux_br_del_if(int sock, const char *brname, const char *ifname)$/;"	f	signature:(int sock, const char *brname, const char *ifname)
linux_br_del_if	src/drivers/linux_ioctl.h	/^int linux_br_del_if(int sock, const char *brname, const char *ifname);$/;"	p	signature:(int sock, const char *brname, const char *ifname)
linux_br_get	src/drivers/linux_ioctl.c	/^int linux_br_get(char *brname, const char *ifname)$/;"	f	signature:(char *brname, const char *ifname)
linux_br_get	src/drivers/linux_ioctl.h	/^int linux_br_get(char *brname, const char *ifname);$/;"	p	signature:(char *brname, const char *ifname)
linux_get_ifhwaddr	src/drivers/linux_ioctl.c	/^int linux_get_ifhwaddr(int sock, const char *ifname, u8 *addr)$/;"	f	signature:(int sock, const char *ifname, u8 *addr)
linux_get_ifhwaddr	src/drivers/linux_ioctl.h	/^int linux_get_ifhwaddr(int sock, const char *ifname, u8 *addr);$/;"	p	signature:(int sock, const char *ifname, u8 *addr)
linux_iface_up	src/drivers/linux_ioctl.c	/^int linux_iface_up(int sock, const char *ifname)$/;"	f	signature:(int sock, const char *ifname)
linux_iface_up	src/drivers/linux_ioctl.h	/^int linux_iface_up(int sock, const char *ifname);$/;"	p	signature:(int sock, const char *ifname)
linux_set_iface_flags	src/drivers/linux_ioctl.c	/^int linux_set_iface_flags(int sock, const char *ifname, int dev_up)$/;"	f	signature:(int sock, const char *ifname, int dev_up)
linux_set_iface_flags	src/drivers/linux_ioctl.h	/^int linux_set_iface_flags(int sock, const char *ifname, int dev_up);$/;"	p	signature:(int sock, const char *ifname, int dev_up)
linux_set_ifhwaddr	src/drivers/linux_ioctl.c	/^int linux_set_ifhwaddr(int sock, const char *ifname, const u8 *addr)$/;"	f	signature:(int sock, const char *ifname, const u8 *addr)
linux_set_ifhwaddr	src/drivers/linux_ioctl.h	/^int linux_set_ifhwaddr(int sock, const char *ifname, const u8 *addr);$/;"	p	signature:(int sock, const char *ifname, const u8 *addr)
list	src/drivers/driver_nl80211.c	/^	struct dl_list list;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::dl_list	file:	access:public
list	src/drivers/driver_test.c	/^	struct dl_list list;$/;"	m	struct:test_driver_bss	typeref:struct:test_driver_bss::dl_list	file:	access:public
list	src/p2p/p2p_i.h	/^	struct dl_list list;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::dl_list	access:public
list	src/rsn_supp/preauth.c	/^	struct dl_list list;$/;"	m	struct:rsn_pmksa_candidate	typeref:struct:rsn_pmksa_candidate::dl_list	file:	access:public
list	src/utils/edit.c	/^	struct dl_list list;$/;"	m	struct:edit_history	typeref:struct:edit_history::dl_list	file:	access:public
list	src/utils/eloop.c	/^	struct dl_list list;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::dl_list	file:	access:public
list	src/utils/os_unix.c	/^	struct dl_list list;$/;"	m	struct:os_alloc_trace	typeref:struct:os_alloc_trace::dl_list	file:	access:public
list	src/utils/trace.h	/^	struct dl_list list;$/;"	m	struct:wpa_trace_ref	typeref:struct:wpa_trace_ref::dl_list	access:public
list	src/wps/wps_er.h	/^	struct dl_list list;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::dl_list	access:public
list	src/wps/wps_er.h	/^	struct dl_list list;$/;"	m	struct:wps_er_ap_settings	typeref:struct:wps_er_ap_settings::dl_list	access:public
list	src/wps/wps_er.h	/^	struct dl_list list;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::dl_list	access:public
list	src/wps/wps_registrar.c	/^	struct dl_list list;$/;"	m	struct:wps_uuid_pin	typeref:struct:wps_uuid_pin::dl_list	file:	access:public
list	src/wps/wps_upnp_event.c	/^	struct dl_list list;$/;"	m	struct:wps_event_	typeref:struct:wps_event_::dl_list	file:	access:public
list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:advertisement_state_machine	typeref:struct:advertisement_state_machine::dl_list	access:public
list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:subscr_addr	typeref:struct:subscr_addr::dl_list	access:public
list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:subscription	typeref:struct:subscription::dl_list	access:public
list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::dl_list	access:public
listen_channel	src/p2p/p2p_i.h	/^	const u8 *listen_channel;$/;"	m	struct:p2p_message	access:public
listen_freq	src/p2p/p2p_i.h	/^	int listen_freq;$/;"	m	struct:p2p_device	access:public
listen_interval	src/ap/sta_info.h	/^	u16 listen_interval; \/* or beacon_int for APs *\/$/;"	m	struct:sta_info	access:public
listen_interval	src/common/ieee802_11_defs.h	/^			le16 listen_interval;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon41	access:public
listen_interval	src/common/ieee802_11_defs.h	/^			le16 listen_interval;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
listen_interval	src/drivers/driver.h	/^	u16 listen_interval;$/;"	m	struct:hostapd_sta_add_params	access:public
lnkid	src/rsn_supp/wpa_ie.h	/^	const u8 *lnkid;$/;"	m	struct:wpa_eapol_ie_parse	access:public
lnkid_len	src/rsn_supp/wpa_ie.h	/^	size_t lnkid_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
local	src/common/wpa_ctrl.c	/^	struct sockaddr_in local;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_in	file:	access:public
local	src/common/wpa_ctrl.c	/^	struct sockaddr_un local;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_un	file:	access:public
local_sock	src/eap_server/eap_sim_db.c	/^	char *local_sock;$/;"	m	struct:eap_sim_db_data	file:	access:public
local_state_change	src/drivers/driver.h	/^	int local_state_change;$/;"	m	struct:wpa_driver_auth_params	access:public
location	src/wps/wps_er.h	/^	char *location;$/;"	m	struct:wps_er_ap	access:public
logger	src/ap/wpa_auth.h	/^	void (*logger)(void *ctx, const u8 *addr, logger_level level,$/;"	m	struct:wpa_auth_callbacks	access:public
logger	src/eapol_auth/eapol_auth_sm.h	/^	void (*logger)(void *ctx, const u8 *addr, eapol_logger_level level,                                       $/;"	m	struct:eapol_auth_cb	access:public
logger_level	src/ap/wpa_auth.h	/^} logger_level;$/;"	t	typeref:enum:__anon5
logger_stdout	src/ap/ap_config.h	/^	unsigned int logger_stdout; \/* module bitfield *\/$/;"	m	struct:hostapd_bss_config	access:public
logger_stdout_level	src/ap/ap_config.h	/^	enum hostapd_logger_level logger_syslog_level, logger_stdout_level;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::	access:public
logger_syslog	src/ap/ap_config.h	/^	unsigned int logger_syslog; \/* module bitfield *\/$/;"	m	struct:hostapd_bss_config	access:public
logger_syslog_level	src/ap/ap_config.h	/^	enum hostapd_logger_level logger_syslog_level, logger_stdout_level;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::hostapd_logger_level	access:public
logoffSent	src/eapol_supp/eapol_supp_sm.c	/^	Boolean logoffSent;$/;"	m	struct:eapol_sm	file:	access:public
low	src/drivers/wireless_copy.h	/^	struct iw_quality	low;		\/* Low threshold *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality	access:public
low_ack	src/drivers/driver.h	/^	struct low_ack {$/;"	s	union:wpa_event_data	access:public
low_ack	src/drivers/driver.h	/^	} low_ack;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::low_ack	access:public
m	src/drivers/wireless_copy.h	/^	__s32		m;		\/* Mantissa *\/$/;"	m	struct:iw_freq	access:public
m	src/eap_peer/eap_i.h	/^	const struct eap_method *m; \/* selected EAP method *\/$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_method	access:public
m	src/eap_server/eap_i.h	/^	const struct eap_method *m; \/* selected EAP method *\/$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_method	access:public
m1_handler	src/wps/wps_er.h	/^	void (*m1_handler)(struct wps_er_ap *ap, struct wpabuf *m1);$/;"	m	struct:wps_er_ap	access:public
m1_received	src/wps/wps.h	/^		int m1_received;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
m1_received	src/wps/wps_er.h	/^	int m1_received;$/;"	m	struct:wps_er_sta	access:public
m2d	src/wps/wps.h	/^	} m2d;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_m2d	access:public
m_bit	src/eap_common/eap_pwd_common.h	/^	u8 m_bit:1;$/;"	m	struct:eap_pwd_hdr	access:public
mac	src/eap_common/eap_sim_common.c	/^	size_t mac, iv, encr; \/* index from buf *\/$/;"	m	struct:eap_sim_msg	file:	access:public
mac	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
macAddress	src/drivers/Apple80211.h	/^	UInt8 macAddress[6];$/;"	m	struct:WirelessInfo2	access:public
mac_acl_entry	src/ap/ap_config.h	/^struct mac_acl_entry {$/;"	s
mac_acl_entry::addr	src/ap/ap_config.h	/^	macaddr addr;$/;"	m	struct:mac_acl_entry	access:public
mac_acl_entry::vlan_id	src/ap/ap_config.h	/^	int vlan_id;$/;"	m	struct:mac_acl_entry	access:public
mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_add_notify	file:	access:public
mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_cache_notify	file:	access:public
mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_cache_response	file:	access:public
mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_move_notify	file:	access:public
mac_addr	src/ap/iapp.c	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:iapp_move_response	file:	access:public
mac_addr	src/ap/wpa_auth_ie.h	/^	const u8 *mac_addr;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mac_addr	src/rsn_supp/wpa_ie.h	/^	const u8 *mac_addr;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mac_addr	src/wps/wps.h	/^		const u8 *mac_addr;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
mac_addr	src/wps/wps.h	/^		const u8 *mac_addr;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
mac_addr	src/wps/wps.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:wps_credential	access:public
mac_addr	src/wps/wps.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:wps_device_data	access:public
mac_addr	src/wps/wps_er.h	/^	u8 mac_addr[ETH_ALEN]; \/* mac addr of network i.f. we use *\/$/;"	m	struct:wps_er	access:public
mac_addr	src/wps/wps_er.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:wps_er_ap	access:public
mac_addr	src/wps/wps_i.h	/^	const u8 *mac_addr; \/* ETH_ALEN (6) octets *\/$/;"	m	struct:wps_parse_attr	access:public
mac_addr	src/wps/wps_upnp_i.h	/^	u8 mac_addr[ETH_ALEN]; \/* mac addr of network i.f. we use *\/$/;"	m	struct:upnp_wps_device_sm	access:public
mac_addr_e	src/wps/wps_i.h	/^	u8 mac_addr_e[ETH_ALEN];$/;"	m	struct:wps_data	access:public
mac_addr_len	src/ap/wpa_auth_ie.h	/^	size_t mac_addr_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mac_addr_len	src/rsn_supp/wpa_ie.h	/^	size_t mac_addr_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mac_id	src/eap_common/eap_pax_common.h	/^	u8 mac_id;$/;"	m	struct:eap_pax_hdr	access:public
mac_id	src/eap_peer/eap_pax.c	/^	u8 mac_id, dh_group_id, public_key_id;$/;"	m	struct:eap_pax_data	file:	access:public
mac_id	src/eap_server/eap_server_pax.c	/^	u8 mac_id;$/;"	m	struct:eap_pax_data	file:	access:public
mac_in_conf	src/ap/hostapd.c	/^static int mac_in_conf(struct hostapd_config *conf, const void *a)$/;"	f	file:	signature:(struct hostapd_config *conf, const void *a)
mac_p	src/eap_common/eap_psk_common.h	/^	u8 mac_p[EAP_PSK_MAC_LEN];$/;"	m	struct:eap_psk_hdr_2	access:public
mac_s	src/eap_common/eap_psk_common.h	/^	u8 mac_s[EAP_PSK_MAC_LEN];$/;"	m	struct:eap_psk_hdr_3	access:public
macaddr	src/ap/ap_config.h	/^typedef u8 macaddr[ETH_ALEN];$/;"	t
macaddr_acl	src/ap/ap_config.h	/^	} macaddr_acl;$/;"	m	struct:hostapd_bss_config	typeref:enum:hostapd_bss_config::__anon3	access:public
madwifi_commit	src/drivers/driver_madwifi.c	/^madwifi_commit(void *priv)$/;"	f	file:	signature:(void *priv)
madwifi_configure_wpa	src/drivers/driver_madwifi.c	/^madwifi_configure_wpa(struct madwifi_driver_data *drv,$/;"	f	file:	signature:(struct madwifi_driver_data *drv, struct wpa_bss_params *params)
madwifi_deinit	src/drivers/driver_madwifi.c	/^madwifi_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
madwifi_del_key	src/drivers/driver_madwifi.c	/^madwifi_del_key(void *priv, const u8 *addr, int key_idx)$/;"	f	file:	signature:(void *priv, const u8 *addr, int key_idx)
madwifi_driver_data	src/drivers/driver_madwifi.c	/^struct madwifi_driver_data {$/;"	s	file:
madwifi_driver_data::acct_data	src/drivers/driver_madwifi.c	/^	struct hostap_sta_driver_data acct_data;$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::hostap_sta_driver_data	file:	access:public
madwifi_driver_data::acct_mac	src/drivers/driver_madwifi.c	/^	u8	acct_mac[ETH_ALEN];$/;"	m	struct:madwifi_driver_data	file:	access:public
madwifi_driver_data::hapd	src/drivers/driver_madwifi.c	/^	struct hostapd_data *hapd;		\/* back pointer *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::hostapd_data	file:	access:public
madwifi_driver_data::iface	src/drivers/driver_madwifi.c	/^	char	iface[IFNAMSIZ + 1];$/;"	m	struct:madwifi_driver_data	file:	access:public
madwifi_driver_data::ifindex	src/drivers/driver_madwifi.c	/^	int     ifindex;$/;"	m	struct:madwifi_driver_data	file:	access:public
madwifi_driver_data::ioctl_sock	src/drivers/driver_madwifi.c	/^	int	ioctl_sock;			\/* socket for ioctl() use *\/$/;"	m	struct:madwifi_driver_data	file:	access:public
madwifi_driver_data::netlink	src/drivers/driver_madwifi.c	/^	struct netlink_data *netlink;$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::netlink_data	file:	access:public
madwifi_driver_data::sock_raw	src/drivers/driver_madwifi.c	/^	struct l2_packet_data *sock_raw; \/* raw 802.11 management frames *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::l2_packet_data	file:	access:public
madwifi_driver_data::sock_recv	src/drivers/driver_madwifi.c	/^	struct l2_packet_data *sock_recv;	\/* raw packet recv socket *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::l2_packet_data	file:	access:public
madwifi_driver_data::sock_xmit	src/drivers/driver_madwifi.c	/^	struct l2_packet_data *sock_xmit;	\/* raw packet xmit socket *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::l2_packet_data	file:	access:public
madwifi_driver_data::we_version	src/drivers/driver_madwifi.c	/^	int	we_version;$/;"	m	struct:madwifi_driver_data	file:	access:public
madwifi_flush	src/drivers/driver_madwifi.c	/^madwifi_flush(void *priv)$/;"	f	file:	signature:(void *priv)
madwifi_get_seqnum	src/drivers/driver_madwifi.c	/^madwifi_get_seqnum(const char *ifname, void *priv, const u8 *addr, int idx,$/;"	f	file:	signature:(const char *ifname, void *priv, const u8 *addr, int idx, u8 *seq)
madwifi_get_ssid	src/drivers/driver_madwifi.c	/^madwifi_get_ssid(void *priv, u8 *buf, int len)$/;"	f	file:	signature:(void *priv, u8 *buf, int len)
madwifi_get_we_version	src/drivers/driver_madwifi.c	/^madwifi_get_we_version(struct madwifi_driver_data *drv)$/;"	f	file:	signature:(struct madwifi_driver_data *drv)
madwifi_init	src/drivers/driver_madwifi.c	/^madwifi_init(struct hostapd_data *hapd, struct wpa_init_params *params)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
madwifi_new_sta	src/drivers/driver_madwifi.c	/^madwifi_new_sta(struct madwifi_driver_data *drv, u8 addr[IEEE80211_ADDR_LEN])$/;"	f	file:	signature:(struct madwifi_driver_data *drv, u8 addr[IEEE80211_ADDR_LEN])
madwifi_raw_receive	src/drivers/driver_madwifi.c	/^static void madwifi_raw_receive(void *ctx, const u8 *src_addr, const u8 *buf,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
madwifi_read_sta_driver_data	src/drivers/driver_madwifi.c	/^madwifi_read_sta_driver_data(void *priv, struct hostap_sta_driver_data *data,$/;"	f	file:	signature:(void *priv, struct hostap_sta_driver_data *data, const u8 *addr)
madwifi_receive_probe_req	src/drivers/driver_madwifi.c	/^static int madwifi_receive_probe_req(struct madwifi_driver_data *drv)$/;"	f	file:	signature:(struct madwifi_driver_data *drv)
madwifi_send_eapol	src/drivers/driver_madwifi.c	/^madwifi_send_eapol(void *priv, const u8 *addr, const u8 *data, size_t data_len,$/;"	f	file:	signature:(void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
madwifi_set_ap_wps_ie	src/drivers/driver_madwifi.c	/^madwifi_set_ap_wps_ie(void *priv, const struct wpabuf *beacon,$/;"	f	file:	signature:(void *priv, const struct wpabuf *beacon, const struct wpabuf *proberesp, const struct wpabuf *assocresp)
madwifi_set_ap_wps_ie	src/drivers/driver_madwifi.c	806;"	d	file:
madwifi_set_countermeasures	src/drivers/driver_madwifi.c	/^madwifi_set_countermeasures(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
madwifi_set_freq	src/drivers/driver_madwifi.c	/^static int madwifi_set_freq(void *priv, struct hostapd_freq_params *freq)$/;"	f	file:	signature:(void *priv, struct hostapd_freq_params *freq)
madwifi_set_ieee8021x	src/drivers/driver_madwifi.c	/^madwifi_set_ieee8021x(void *priv, struct wpa_bss_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_bss_params *params)
madwifi_set_opt_ie	src/drivers/driver_madwifi.c	/^madwifi_set_opt_ie(void *priv, const u8 *ie, size_t ie_len)$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t ie_len)
madwifi_set_privacy	src/drivers/driver_madwifi.c	/^madwifi_set_privacy(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
madwifi_set_ssid	src/drivers/driver_madwifi.c	/^madwifi_set_ssid(void *priv, const u8 *buf, int len)$/;"	f	file:	signature:(void *priv, const u8 *buf, int len)
madwifi_set_sta_authorized	src/drivers/driver_madwifi.c	/^madwifi_set_sta_authorized(void *priv, const u8 *addr, int authorized)$/;"	f	file:	signature:(void *priv, const u8 *addr, int authorized)
madwifi_set_wps_ie	src/drivers/driver_madwifi.c	/^madwifi_set_wps_ie(void *priv, const u8 *ie, size_t len, u32 frametype)$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t len, u32 frametype)
madwifi_sta_clear_stats	src/drivers/driver_madwifi.c	/^madwifi_sta_clear_stats(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
madwifi_sta_deauth	src/drivers/driver_madwifi.c	/^madwifi_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
madwifi_sta_deauth	src/drivers/driver_madwifi.c	/^static int madwifi_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,$/;"	p	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
madwifi_sta_disassoc	src/drivers/driver_madwifi.c	/^madwifi_sta_disassoc(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason_code)
madwifi_sta_set_flags	src/drivers/driver_madwifi.c	/^madwifi_sta_set_flags(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int total_flags, int flags_or, int flags_and)
madwifi_wireless_event_init	src/drivers/driver_madwifi.c	/^madwifi_wireless_event_init(struct madwifi_driver_data *drv)$/;"	f	file:	signature:(struct madwifi_driver_data *drv)
madwifi_wireless_event_rtm_newlink	src/drivers/driver_madwifi.c	/^madwifi_wireless_event_rtm_newlink(void *ctx, struct ifinfomsg *ifi,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
madwifi_wireless_event_wireless	src/drivers/driver_madwifi.c	/^madwifi_wireless_event_wireless(struct madwifi_driver_data *drv,$/;"	f	file:	signature:(struct madwifi_driver_data *drv, char *data, int len)
madwifi_wireless_event_wireless_custom	src/drivers/driver_madwifi.c	/^madwifi_wireless_event_wireless_custom(struct madwifi_driver_data *drv,$/;"	f	file:	signature:(struct madwifi_driver_data *drv, char *custom)
magic	src/utils/os_unix.c	/^	unsigned int magic;$/;"	m	struct:os_alloc_trace	file:	access:public
magic	src/utils/wpabuf.c	/^	unsigned int magic;$/;"	m	struct:wpabuf_trace	file:	access:public
main	hostapd/hlr_auc_gw.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	hostapd/hostapd_cli.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	hostapd/main.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	hostapd/nt_password_hash.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
malformed_access_requests	src/radius/radius_server.c	/^	u32 malformed_access_requests;$/;"	m	struct:radius_server_counters	file:	access:public
malformed_responses	src/radius/radius_client.h	/^	u32 malformed_responses;$/;"	m	struct:hostapd_radius_server	access:public
malloc	src/utils/os.h	490;"	d
manageability	src/p2p/p2p_i.h	/^	const u8 *manageability;$/;"	m	struct:p2p_message	access:public
manufacturer	src/ap/ap_config.h	/^	char *manufacturer;$/;"	m	struct:hostapd_bss_config	access:public
manufacturer	src/p2p/p2p.h	/^	char *manufacturer;$/;"	m	struct:p2p_config	access:public
manufacturer	src/p2p/p2p.h	/^	char manufacturer[65];$/;"	m	struct:p2p_peer_info	access:public
manufacturer	src/p2p/p2p_i.h	/^	const u8 *manufacturer;$/;"	m	struct:p2p_message	access:public
manufacturer	src/wps/wps.h	/^		const char *manufacturer;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
manufacturer	src/wps/wps.h	/^		const char *manufacturer;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
manufacturer	src/wps/wps.h	/^		const u8 *manufacturer;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
manufacturer	src/wps/wps.h	/^	char *manufacturer;$/;"	m	struct:wps_device_data	access:public
manufacturer	src/wps/wps_er.h	/^	char *manufacturer;$/;"	m	struct:wps_er_ap	access:public
manufacturer	src/wps/wps_er.h	/^	char *manufacturer;$/;"	m	struct:wps_er_sta	access:public
manufacturer	src/wps/wps_i.h	/^	const u8 *manufacturer;$/;"	m	struct:wps_parse_attr	access:public
manufacturer_len	src/p2p/p2p_i.h	/^	size_t manufacturer_len;$/;"	m	struct:p2p_message	access:public
manufacturer_len	src/wps/wps.h	/^		size_t manufacturer_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
manufacturer_len	src/wps/wps_i.h	/^	size_t manufacturer_len;$/;"	m	struct:wps_parse_attr	access:public
manufacturer_url	src/ap/ap_config.h	/^	char *manufacturer_url;$/;"	m	struct:hostapd_bss_config	access:public
manufacturer_url	src/wps/wps.h	/^		const char *manufacturer_url;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
manufacturer_url	src/wps/wps.h	/^	char *manufacturer_url;$/;"	m	struct:wps_context	access:public
manufacturer_url	src/wps/wps_er.h	/^	char *manufacturer_url;$/;"	m	struct:wps_er_ap	access:public
mark_authenticated	src/rsn_supp/wpa.h	/^	int (*mark_authenticated)(void *ctx, const u8 *target_ap);$/;"	m	struct:wpa_sm_ctx	access:public
mask	src/drivers/nl80211_copy.h	/^	__u32 mask;$/;"	m	struct:nl80211_sta_flag_update	access:public
mask	src/radius/radius_server.c	/^	struct in_addr mask;$/;"	m	struct:radius_client	typeref:struct:radius_client::in_addr	file:	access:public
mask6	src/radius/radius_server.c	/^	struct in6_addr mask6;$/;"	m	struct:radius_client	typeref:struct:radius_client::in6_addr	file:	access:public
master_key	src/crypto/tls.h	/^	const u8 *master_key; \/* TLS master secret *\/$/;"	m	struct:tls_keys	access:public
master_key	src/eap_peer/eap_mschapv2.c	/^	u8 master_key[MSCHAPV2_MASTER_KEY_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
master_key	src/eap_peer/eap_ttls.c	/^	u8 master_key[MSCHAPV2_MASTER_KEY_LEN]; \/* MSCHAPv2 master key *\/$/;"	m	struct:eap_ttls_data	file:	access:public
master_key	src/eap_server/eap_server_mschapv2.c	/^	u8 master_key[16];$/;"	m	struct:eap_mschapv2_data	file:	access:public
master_key_len	src/crypto/tls.h	/^	size_t master_key_len;$/;"	m	struct:tls_keys	access:public
master_key_valid	src/eap_peer/eap_mschapv2.c	/^	int master_key_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
master_key_valid	src/eap_server/eap_server_mschapv2.c	/^	int master_key_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
master_secret	src/crypto/tls_gnutls.c	/^	opaque master_secret[WPA_TLS_MASTER_SIZE];$/;"	m	struct:__anon192	file:	access:public
master_secret	src/tls/tlsv1_client_i.h	/^	u8 master_secret[TLS_MASTER_SECRET_LEN];$/;"	m	struct:tlsv1_client	access:public
master_secret	src/tls/tlsv1_server_i.h	/^	u8 master_secret[TLS_MASTER_SECRET_LEN];$/;"	m	struct:tlsv1_server	access:public
maxStart	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int maxStart; \/* dot1xSuppMaxStart *\/$/;"	m	struct:eapol_sm	file:	access:public
max_args	hostapd/hostapd_cli.c	830;"	d	file:
max_bytes	src/wps/httpread.c	/^	int max_bytes;          \/* maximum file size else abort it *\/$/;"	m	struct:httpread	file:	access:public
max_channel_time	src/drivers/wireless_copy.h	/^	__u32		max_channel_time; \/* in TU *\/$/;"	m	struct:iw_scan_req	access:public
max_clients	src/p2p/p2p.h	/^	unsigned int max_clients;$/;"	m	struct:p2p_group_config	access:public
max_common_length	src/utils/edit.c	/^static int max_common_length(char **c)$/;"	f	file:	signature:(char **c)
max_disc_int	src/p2p/p2p_i.h	/^	int max_disc_int;$/;"	m	struct:p2p_data	access:public
max_dyn_vlan_keys	src/ap/ap_config.h	/^	size_t max_dyn_vlan_keys;$/;"	m	struct:hostapd_ssid	access:public
max_encoding_tokens	src/drivers/wireless_copy.h	/^	__u8	max_encoding_tokens;	\/* Max number of tokens *\/$/;"	m	struct:iw_range	access:public
max_frag	src/drivers/wireless_copy.h	/^	__s32		max_frag;	\/* Maximal frag threshold *\/$/;"	m	struct:iw_range	access:public
max_len	src/utils/ip_addr.h	/^		u8 max_len[16];$/;"	m	union:hostapd_ip_addr::__anon27	access:public
max_length	src/utils/radiotap_iter.h	/^	int max_length;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
max_level	src/drivers/driver_wext.h	/^	u8 max_level;$/;"	m	struct:wpa_driver_wext_data	access:public
max_listen_interval	src/ap/ap_config.h	/^	u16 max_listen_interval;$/;"	m	struct:hostapd_bss_config	access:public
max_match_sets	src/drivers/driver.h	/^	int max_match_sets;$/;"	m	struct:wpa_driver_capa	access:public
max_num_sta	src/ap/ap_config.h	/^	int max_num_sta; \/* maximum number of STAs in station table *\/$/;"	m	struct:hostapd_bss_config	access:public
max_nwid	src/drivers/wireless_copy.h	/^	__u32		max_nwid;	\/* Maximal NWID we are able to set *\/$/;"	m	struct:iw_range	access:public
max_pac_list_len	src/eap_peer/eap_fast.c	/^	size_t max_pac_list_len;$/;"	m	struct:eap_fast_data	file:	access:public
max_pattern_len	src/drivers/nl80211_copy.h	/^	__u32 max_pattern_len;$/;"	m	struct:nl80211_wowlan_pattern_support	access:public
max_patterns	src/drivers/nl80211_copy.h	/^	__u32 max_patterns;$/;"	m	struct:nl80211_wowlan_pattern_support	access:public
max_peers	src/p2p/p2p.h	/^	size_t max_peers;$/;"	m	struct:p2p_config	access:public
max_pmp	src/drivers/wireless_copy.h	/^	__s32		max_pmp;	\/* Maximal PM period *\/$/;"	m	struct:iw_range	access:public
max_pmt	src/drivers/wireless_copy.h	/^	__s32		max_pmt;	\/* Maximal PM timeout *\/$/;"	m	struct:iw_range	access:public
max_qual	src/drivers/wireless_copy.h	/^	struct iw_quality	max_qual;	\/* Quality of the link *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_quality	access:public
max_r_time	src/drivers/wireless_copy.h	/^	__s32		max_r_time;	\/* Maximal retry lifetime *\/$/;"	m	struct:iw_range	access:public
max_remain_on_chan	src/drivers/driver.h	/^	unsigned int max_remain_on_chan;$/;"	m	struct:wpa_driver_capa	access:public
max_response	src/wps/http_client.c	/^	size_t max_response;$/;"	m	struct:http_client	file:	access:public
max_retry	src/drivers/wireless_copy.h	/^	__s32		max_retry;	\/* Maximal number of retries *\/$/;"	m	struct:iw_range	access:public
max_rts	src/drivers/wireless_copy.h	/^	__s32		max_rts;	\/* Maximal RTS threshold *\/$/;"	m	struct:iw_range	access:public
max_scan_ssids	src/drivers/driver.h	/^	int max_scan_ssids;$/;"	m	struct:wpa_driver_capa	access:public
max_sched_scan_ssids	src/drivers/driver.h	/^	int max_sched_scan_ssids;$/;"	m	struct:wpa_driver_capa	access:public
max_sock	src/utils/eloop.c	/^	int max_sock;$/;"	m	struct:eloop_data	file:	access:public
max_sock	src/utils/eloop_none.c	/^	int max_sock, reader_count;$/;"	m	struct:eloop_data	file:	access:public
max_sock	src/utils/eloop_win.c	/^	int max_sock;$/;"	m	struct:eloop_data	file:	access:public
max_stations	src/drivers/driver.h	/^	unsigned int max_stations;$/;"	m	struct:wpa_driver_capa	access:public
max_tx_power	src/drivers/driver.h	/^	u8 max_tx_power;$/;"	m	struct:hostapd_channel_data	access:public
maximum_burst_size	src/common/ieee802_11_defs.h	/^	le32 maximum_burst_size;$/;"	m	struct:wmm_tspec_element	access:public
maximum_msdu_size	src/common/ieee802_11_defs.h	/^	le16 maximum_msdu_size;$/;"	m	struct:wmm_tspec_element	access:public
maximum_service_interval	src/common/ieee802_11_defs.h	/^	le32 maximum_service_interval;$/;"	m	struct:wmm_tspec_element	access:public
maxrate	src/drivers/driver_wext.c	/^	int maxrate;$/;"	m	struct:wext_scan_data	file:	access:public
mcs_set	src/drivers/driver.h	/^	u8 mcs_set[16];$/;"	m	struct:hostapd_hw_modes	access:public
md	src/crypto/crypto_libtomcrypt.c	/^		hash_state md;$/;"	m	union:crypto_hash::__anon198	file:	access:public
md4_vector	src/crypto/crypto.h	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac);$/;"	p	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md4_vector	src/crypto/crypto_cryptoapi.c	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md4_vector	src/crypto/crypto_gnutls.c	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md4_vector	src/crypto/crypto_libtomcrypt.c	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md4_vector	src/crypto/crypto_none.c	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md4_vector	src/crypto/crypto_openssl.c	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md4_vector	src/crypto/md4-internal.c	/^int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5	src/crypto/crypto_internal.c	/^		struct MD5Context md5;$/;"	m	union:crypto_hash::__anon193	typeref:struct:crypto_hash::__anon193::MD5Context	file:	access:public
md5_cert	src/tls/tlsv1_common.h	/^	struct crypto_hash *md5_cert;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
md5_client	src/tls/tlsv1_common.h	/^	struct crypto_hash *md5_client;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
md5_server	src/tls/tlsv1_common.h	/^	struct crypto_hash *md5_server;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
md5_vector	src/crypto/crypto.h	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac);$/;"	p	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector	src/crypto/crypto_cryptoapi.c	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector	src/crypto/crypto_gnutls.c	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector	src/crypto/crypto_libtomcrypt.c	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector	src/crypto/crypto_nss.c	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector	src/crypto/crypto_openssl.c	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector	src/crypto/md5-internal.c	/^int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector_non_fips_allow	src/crypto/crypto.h	/^int md5_vector_non_fips_allow(size_t num_elem, const u8 *addr[],$/;"	p	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
md5_vector_non_fips_allow	src/crypto/crypto.h	62;"	d
md5_vector_non_fips_allow	src/crypto/crypto_openssl.c	/^int md5_vector_non_fips_allow(size_t num_elem, const u8 *addr[],$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
mdie	src/ap/wpa_auth_ie.h	/^	const u8 *mdie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mdie	src/common/ieee802_11_common.h	/^	const u8 *mdie;$/;"	m	struct:ieee802_11_elems	access:public
mdie	src/common/wpa_common.h	/^	const u8 *mdie;$/;"	m	struct:wpa_ft_ies	access:public
mdie	src/rsn_supp/wpa_ie.h	/^	const u8 *mdie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mdie_ft_capab	src/rsn_supp/wpa_i.h	/^	u8 mdie_ft_capab; \/* FT Capability and Policy from target AP MDIE *\/$/;"	m	struct:wpa_sm	access:public
mdie_len	src/ap/wpa_auth_ie.h	/^	size_t mdie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mdie_len	src/common/ieee802_11_common.h	/^	u8 mdie_len;$/;"	m	struct:ieee802_11_elems	access:public
mdie_len	src/common/wpa_common.h	/^	size_t mdie_len;$/;"	m	struct:wpa_ft_ies	access:public
mdie_len	src/rsn_supp/wpa_ie.h	/^	size_t mdie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
mean_data_rate	src/common/ieee802_11_defs.h	/^	le32 mean_data_rate;$/;"	m	struct:wmm_tspec_element	access:public
medium_time	src/common/ieee802_11_defs.h	/^	le16 medium_time;$/;"	m	struct:wmm_tspec_element	access:public
medium_type	src/radius/radius.c	/^	int medium_type; \/* Tunnel-Medium-Type *\/$/;"	m	struct:radius_tunnel_attrs	file:	access:public
member_in_go_dev	src/p2p/p2p_i.h	/^	u8 member_in_go_dev[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
member_in_go_iface	src/p2p/p2p_i.h	/^	u8 member_in_go_iface[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
members	src/p2p/p2p_group.c	/^	struct p2p_group_member *members;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::p2p_group_member	file:	access:public
membership	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
memcmp	src/utils/os.h	496;"	d
memcpy	src/utils/os.h	493;"	d
memmove	src/utils/os.h	494;"	d
memset	src/utils/os.h	495;"	d
message_id	src/eap_common/ikev2_common.h	/^	u8 message_id[4];$/;"	m	struct:ikev2_hdr	access:public
method	src/ap/ap_config.h	/^		u32 method;$/;"	m	struct:hostapd_eap_user::__anon2	access:public
method	src/eap_peer/eap.h	/^	u32 method;$/;"	m	struct:eap_method_type	access:public
method	src/eap_peer/eap_i.h	/^	EapType method;$/;"	m	struct:eap_method	access:public
method	src/eap_server/eap.h	/^		u32 method;$/;"	m	struct:eap_user::__anon133	access:public
method	src/eap_server/eap_i.h	/^	EapType method;$/;"	m	struct:eap_method	access:public
methodState	src/eap_peer/eap_i.h	/^	EapMethodState methodState;$/;"	m	struct:eap_method_ret	access:public
methodState	src/eap_peer/eap_i.h	/^	EapMethodState methodState;$/;"	m	struct:eap_sm	access:public
methodState	src/eap_server/eap_i.h	/^	} methodState;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon156	access:public
methodTimeout	src/eap_server/eap_i.h	/^	int methodTimeout;$/;"	m	struct:eap_sm	access:public
method_pending	src/eap_server/eap_i.h	/^	} method_pending;$/;"	m	struct:eap_sm	typeref:enum:eap_sm::__anon158	access:public
methods	src/ap/ap_config.h	/^	} methods[EAP_USER_MAX_METHODS];$/;"	m	struct:hostapd_eap_user	typeref:struct:hostapd_eap_user::__anon2	access:public
methods	src/eap_server/eap.h	/^	} methods[EAP_MAX_METHODS];$/;"	m	struct:eap_user	typeref:struct:eap_user::__anon133	access:public
mfp	src/rsn_supp/wpa_i.h	/^	int mfp; \/* 0 = disabled, 1 = optional, 2 = mandatory *\/$/;"	m	struct:wpa_sm	access:public
mfp_options	src/common/defs.h	/^enum mfp_options {$/;"	g
mgmt_frame_prot	src/ap/wpa_auth_i.h	/^	unsigned int mgmt_frame_prot:1;$/;"	m	struct:wpa_state_machine	access:public
mgmt_frame_protection	src/drivers/driver.h	/^	enum mfp_options mgmt_frame_protection;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::mfp_options	access:public
mgmt_group_cipher	src/common/wpa_common.h	/^	int mgmt_group_cipher;$/;"	m	struct:wpa_ie_data	access:public
mgmt_group_cipher	src/rsn_supp/wpa_i.h	/^	unsigned int mgmt_group_cipher;$/;"	m	struct:wpa_sm	access:public
mic	src/common/wpa_common.h	/^	u8 mic[16];$/;"	m	struct:rsn_ftie	access:public
mic	src/rsn_supp/tdls.c	/^	u8 mic[TDLS_MIC_LEN];$/;"	m	struct:wpa_tdls_ftie	file:	access:public
mic_control	src/common/wpa_common.h	/^	u8 mic_control[2];$/;"	m	struct:rsn_ftie	access:public
mic_ctrl	src/rsn_supp/tdls.c	/^	u8 mic_ctrl[2];$/;"	m	struct:wpa_tdls_ftie	file:	access:public
mic_failure_report	src/ap/wpa_auth.h	/^	void (*mic_failure_report)(void *ctx, const u8 *addr);$/;"	m	struct:wpa_auth_callbacks	access:public
mic_p	src/eap_common/eap_sake_common.h	/^	const u8 *mic_p;$/;"	m	struct:eap_sake_parse_attr	access:public
mic_s	src/eap_common/eap_sake_common.h	/^	const u8 *mic_s;$/;"	m	struct:eap_sake_parse_attr	access:public
michael_mic_failure	src/ap/hostapd.h	/^	time_t michael_mic_failure;$/;"	m	struct:hostapd_data	access:public
michael_mic_failure	src/ap/tkip_countermeasures.c	/^void michael_mic_failure(struct hostapd_data *hapd, const u8 *addr, int local)$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr, int local)
michael_mic_failure	src/ap/tkip_countermeasures.h	/^void michael_mic_failure(struct hostapd_data *hapd, const u8 *addr, int local);$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr, int local)
michael_mic_failure	src/drivers/driver.h	/^	struct michael_mic_failure {$/;"	s	union:wpa_event_data	access:public
michael_mic_failure	src/drivers/driver.h	/^	} michael_mic_failure;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::michael_mic_failure	access:public
michael_mic_failures	src/ap/hostapd.h	/^	int michael_mic_failures;$/;"	m	struct:hostapd_data	access:public
milenage_auts	src/crypto/milenage.c	/^int milenage_auts(const u8 *opc, const u8 *k, const u8 *_rand, const u8 *auts,$/;"	f	signature:(const u8 *opc, const u8 *k, const u8 *_rand, const u8 *auts, u8 *sqn)
milenage_auts	src/crypto/milenage.h	/^int milenage_auts(const u8 *opc, const u8 *k, const u8 *_rand, const u8 *auts,$/;"	p	signature:(const u8 *opc, const u8 *k, const u8 *_rand, const u8 *auts, u8 *sqn)
milenage_check	src/crypto/milenage.c	/^int milenage_check(const u8 *opc, const u8 *k, const u8 *sqn, const u8 *_rand,$/;"	f	signature:(const u8 *opc, const u8 *k, const u8 *sqn, const u8 *_rand, const u8 *autn, u8 *ik, u8 *ck, u8 *res, size_t *res_len, u8 *auts)
milenage_check	src/crypto/milenage.h	/^int milenage_check(const u8 *opc, const u8 *k, const u8 *sqn, const u8 *_rand,$/;"	p	signature:(const u8 *opc, const u8 *k, const u8 *sqn, const u8 *_rand, const u8 *autn, u8 *ik, u8 *ck, u8 *res, size_t *res_len, u8 *auts)
milenage_db	hostapd/hlr_auc_gw.c	/^static struct milenage_parameters *milenage_db = NULL;$/;"	v	typeref:struct:milenage_parameters	file:
milenage_f1	src/crypto/milenage.c	/^int milenage_f1(const u8 *opc, const u8 *k, const u8 *_rand,$/;"	f	signature:(const u8 *opc, const u8 *k, const u8 *_rand, const u8 *sqn, const u8 *amf, u8 *mac_a, u8 *mac_s)
milenage_f1	src/crypto/milenage.h	/^int milenage_f1(const u8 *opc, const u8 *k, const u8 *_rand,$/;"	p	signature:(const u8 *opc, const u8 *k, const u8 *_rand, const u8 *sqn, const u8 *amf, u8 *mac_a, u8 *mac_s)
milenage_f2345	src/crypto/milenage.c	/^int milenage_f2345(const u8 *opc, const u8 *k, const u8 *_rand,$/;"	f	signature:(const u8 *opc, const u8 *k, const u8 *_rand, u8 *res, u8 *ck, u8 *ik, u8 *ak, u8 *akstar)
milenage_f2345	src/crypto/milenage.h	/^int milenage_f2345(const u8 *opc, const u8 *k, const u8 *_rand,$/;"	p	signature:(const u8 *opc, const u8 *k, const u8 *_rand, u8 *res, u8 *ck, u8 *ik, u8 *ak, u8 *akstar)
milenage_generate	src/crypto/milenage.c	/^void milenage_generate(const u8 *opc, const u8 *amf, const u8 *k,$/;"	f	signature:(const u8 *opc, const u8 *amf, const u8 *k, const u8 *sqn, const u8 *_rand, u8 *autn, u8 *ik, u8 *ck, u8 *res, size_t *res_len)
milenage_generate	src/crypto/milenage.h	/^void milenage_generate(const u8 *opc, const u8 *amf, const u8 *k,$/;"	p	signature:(const u8 *opc, const u8 *amf, const u8 *k, const u8 *sqn, const u8 *_rand, u8 *autn, u8 *ik, u8 *ck, u8 *res, size_t *res_len)
milenage_parameters	hostapd/hlr_auc_gw.c	/^struct milenage_parameters {$/;"	s	file:
milenage_parameters::amf	hostapd/hlr_auc_gw.c	/^	u8 amf[2];$/;"	m	struct:milenage_parameters	file:	access:public
milenage_parameters::imsi	hostapd/hlr_auc_gw.c	/^	char imsi[20];$/;"	m	struct:milenage_parameters	file:	access:public
milenage_parameters::ki	hostapd/hlr_auc_gw.c	/^	u8 ki[16];$/;"	m	struct:milenage_parameters	file:	access:public
milenage_parameters::next	hostapd/hlr_auc_gw.c	/^	struct milenage_parameters *next;$/;"	m	struct:milenage_parameters	typeref:struct:milenage_parameters::milenage_parameters	file:	access:public
milenage_parameters::opc	hostapd/hlr_auc_gw.c	/^	u8 opc[16];$/;"	m	struct:milenage_parameters	file:	access:public
milenage_parameters::sqn	hostapd/hlr_auc_gw.c	/^	u8 sqn[6];$/;"	m	struct:milenage_parameters	file:	access:public
min	src/utils/os.h	/^	int min; \/* 0..59 *\/$/;"	m	struct:os_tm	access:public
min_channel_time	src/drivers/wireless_copy.h	/^	__u32		min_channel_time; \/* in TU *\/$/;"	m	struct:iw_scan_req	access:public
min_disc_int	src/p2p/p2p_i.h	/^	int min_disc_int;$/;"	m	struct:p2p_data	access:public
min_frag	src/drivers/wireless_copy.h	/^	__s32		min_frag;	\/* Minimal frag threshold *\/$/;"	m	struct:iw_range	access:public
min_int	src/drivers/driver_nl80211.c	/^static inline int min_int(int a, int b)$/;"	f	file:	signature:(int a, int b)
min_num_chal	src/eap_peer/eap_sim.c	/^	size_t min_num_chal, num_chal;$/;"	m	struct:eap_sim_data	file:	access:public
min_nwid	src/drivers/wireless_copy.h	/^	__u32		min_nwid;	\/* Minimal NWID we are able to set *\/$/;"	m	struct:iw_range	access:public
min_pattern_len	src/drivers/nl80211_copy.h	/^	__u32 min_pattern_len;$/;"	m	struct:nl80211_wowlan_pattern_support	access:public
min_pmp	src/drivers/wireless_copy.h	/^	__s32		min_pmp;	\/* Minimal PM period *\/$/;"	m	struct:iw_range	access:public
min_pmt	src/drivers/wireless_copy.h	/^	__s32		min_pmt;	\/* Minimal PM timeout *\/$/;"	m	struct:iw_range	access:public
min_r_time	src/drivers/wireless_copy.h	/^	__s32		min_r_time;	\/* Minimal retry lifetime *\/$/;"	m	struct:iw_range	access:public
min_retry	src/drivers/wireless_copy.h	/^	__s32		min_retry;	\/* Minimal number of retries *\/$/;"	m	struct:iw_range	access:public
min_rts	src/drivers/wireless_copy.h	/^	__s32		min_rts;	\/* Minimal RTS threshold *\/$/;"	m	struct:iw_range	access:public
mingw_load_crypto_func	src/crypto/crypto_cryptoapi.c	/^static int mingw_load_crypto_func(void)$/;"	f	file:	signature:(void)
mingw_load_symbols	src/utils/pcsc_funcs.c	/^static int mingw_load_symbols(void)$/;"	f	file:	signature:(void)
mingw_load_symbols	src/utils/pcsc_funcs.c	220;"	d	file:
mingw_unload_symbols	src/utils/pcsc_funcs.c	/^static void mingw_unload_symbols(void)$/;"	f	file:	signature:(void)
mingw_unload_symbols	src/utils/pcsc_funcs.c	221;"	d	file:
minimum_data_rate	src/common/ieee802_11_defs.h	/^	le32 minimum_data_rate;$/;"	m	struct:wmm_tspec_element	access:public
minimum_phy_rate	src/common/ieee802_11_defs.h	/^	le32 minimum_phy_rate;$/;"	m	struct:wmm_tspec_element	access:public
minimum_service_interval	src/common/ieee802_11_defs.h	/^	le32 minimum_service_interval;$/;"	m	struct:wmm_tspec_element	access:public
minor_reason_code	src/p2p/p2p_i.h	/^	const u8 *minor_reason_code;$/;"	m	struct:p2p_message	access:public
misc	src/drivers/wireless_copy.h	/^	__u32		misc;		\/* Others cases *\/$/;"	m	struct:iw_discarded	access:public
miss	src/drivers/wireless_copy.h	/^	struct iw_missed	miss;		\/* Packet missed counts *\/$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_missed	access:public
mk	src/eap_peer/eap_aka.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
mk	src/eap_peer/eap_pax.c	/^	u8 mk[EAP_PAX_MK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
mk	src/eap_peer/eap_sim.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
mk	src/eap_server/eap_server_aka.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
mk	src/eap_server/eap_server_pax.c	/^	u8 mk[EAP_PAX_MK_LEN];$/;"	m	struct:eap_pax_data	file:	access:public
mk	src/eap_server/eap_server_sim.c	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
mk	src/eap_server/eap_sim_db.h	/^	u8 mk[EAP_SIM_MK_LEN];$/;"	m	struct:eap_sim_reauth	access:public
mlme	src/drivers/driver_hostap.h	/^		} mlme;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon85	access:public
mlme_associate_indication	src/ap/ap_mlme.c	/^void mlme_associate_indication(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_associate_indication	src/ap/ap_mlme.h	/^void mlme_associate_indication(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_auth_alg_str	src/ap/ap_mlme.c	/^static const char * mlme_auth_alg_str(int alg)$/;"	f	file:	signature:(int alg)
mlme_authenticate_indication	src/ap/ap_mlme.c	/^void mlme_authenticate_indication(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_authenticate_indication	src/ap/ap_mlme.h	/^void mlme_authenticate_indication(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_deauthenticate_indication	src/ap/ap_mlme.c	/^void mlme_deauthenticate_indication(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason_code)
mlme_deauthenticate_indication	src/ap/ap_mlme.h	/^void mlme_deauthenticate_indication(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason_code)
mlme_deletekeys_request	src/ap/ap_mlme.c	/^void mlme_deletekeys_request(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_deletekeys_request	src/ap/ap_mlme.h	/^void mlme_deletekeys_request(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_disassociate_indication	src/ap/ap_mlme.c	/^void mlme_disassociate_indication(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason_code)
mlme_disassociate_indication	src/ap/ap_mlme.h	/^void mlme_disassociate_indication(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 reason_code)
mlme_event	src/drivers/driver_nl80211.c	/^static void mlme_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, enum nl80211_commands cmd, struct nlattr *frame, struct nlattr *addr, struct nlattr *timed_out, struct nlattr *freq, struct nlattr *ack, struct nlattr *cookie)
mlme_event_action_tx_status	src/drivers/driver_nl80211.c	/^static void mlme_event_action_tx_status(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr *cookie, const u8 *frame, size_t len, struct nlattr *ack)
mlme_event_assoc	src/drivers/driver_nl80211.c	/^static void mlme_event_assoc(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *frame, size_t len)
mlme_event_auth	src/drivers/driver_nl80211.c	/^static void mlme_event_auth(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *frame, size_t len)
mlme_event_connect	src/drivers/driver_nl80211.c	/^static void mlme_event_connect(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, enum nl80211_commands cmd, struct nlattr *status, struct nlattr *addr, struct nlattr *req_ie, struct nlattr *resp_ie)
mlme_event_deauth_disassoc	src/drivers/driver_nl80211.c	/^static void mlme_event_deauth_disassoc(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, enum wpa_event_type type, const u8 *frame, size_t len)
mlme_event_disconnect	src/drivers/driver_nl80211.c	/^static void mlme_event_disconnect(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr *reason, struct nlattr *addr)
mlme_event_join_ibss	src/drivers/driver_nl80211.c	/^static void mlme_event_join_ibss(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr *tb[])
mlme_event_mgmt	src/drivers/driver_nl80211.c	/^static void mlme_event_mgmt(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr *freq, const u8 *frame, size_t len)
mlme_event_michael_mic_failure	src/drivers/driver_nl80211.c	/^static void mlme_event_michael_mic_failure(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr *tb[])
mlme_event_remain_on_channel	src/drivers/driver_nl80211.c	/^static void mlme_event_remain_on_channel(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int cancel_event, struct nlattr *tb[])
mlme_event_unprot_disconnect	src/drivers/driver_nl80211.c	/^static void mlme_event_unprot_disconnect(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, enum wpa_event_type type, const u8 *frame, size_t len)
mlme_michaelmicfailure_indication	src/ap/ap_mlme.c	/^void mlme_michaelmicfailure_indication(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, const u8 *addr)
mlme_michaelmicfailure_indication	src/ap/ap_mlme.h	/^void mlme_michaelmicfailure_indication(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, const u8 *addr)
mlme_reassociate_indication	src/ap/ap_mlme.c	/^void mlme_reassociate_indication(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_reassociate_indication	src/ap/ap_mlme.h	/^void mlme_reassociate_indication(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
mlme_rx	src/drivers/driver.h	/^	struct mlme_rx {$/;"	s	union:wpa_event_data	access:public
mlme_rx	src/drivers/driver.h	/^	} mlme_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::mlme_rx	access:public
mlme_setprotection	src/drivers/driver.h	/^	int (*mlme_setprotection)(void *priv, const u8 *addr, int protect_type,$/;"	m	struct:wpa_driver_ops	access:public
mlme_setprotection	src/rsn_supp/wpa.h	/^	int (*mlme_setprotection)(void *ctx, const u8 *addr,$/;"	m	struct:wpa_sm_ctx	access:public
mlme_sock	src/drivers/driver_wext.h	/^	int mlme_sock;$/;"	m	struct:wpa_driver_wext_data	access:public
mlme_timeout_event	src/drivers/driver_nl80211.c	/^static void mlme_timeout_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, enum nl80211_commands cmd, struct nlattr *addr)
mlmedev	src/drivers/driver_wext.h	/^	char mlmedev[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_wext_data	access:public
mobility_domain	src/ap/ap_config.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:hostapd_bss_config	access:public
mobility_domain	src/ap/wpa_auth.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:wpa_auth_config	access:public
mobility_domain	src/common/wpa_common.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:rsn_mdie	access:public
mobility_domain	src/rsn_supp/wpa_i.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:wpa_sm	access:public
mode	src/common/privsep_commands.h	/^	int mode;$/;"	m	struct:privsep_cmd_associate	access:public
mode	src/drivers/driver.h	/^	enum hostapd_hw_mode mode;$/;"	m	struct:hostapd_hw_modes	typeref:enum:hostapd_hw_modes::hostapd_hw_mode	access:public
mode	src/drivers/driver.h	/^	int mode;$/;"	m	struct:hostapd_freq_params	access:public
mode	src/drivers/driver.h	/^	int mode;$/;"	m	struct:wpa_driver_associate_params	access:public
mode	src/drivers/driver_ndis.h	/^	int mode;$/;"	m	struct:wpa_driver_ndis_data	access:public
mode	src/drivers/wireless_copy.h	/^	__u32		mode;		\/* Operation mode *\/$/;"	m	union:iwreq_data	access:public
model_description	src/ap/ap_config.h	/^	char *model_description;$/;"	m	struct:hostapd_bss_config	access:public
model_description	src/wps/wps.h	/^		const char *model_description;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
model_description	src/wps/wps.h	/^	char *model_description;$/;"	m	struct:wps_context	access:public
model_description	src/wps/wps_er.h	/^	char *model_description;$/;"	m	struct:wps_er_ap	access:public
model_name	src/ap/ap_config.h	/^	char *model_name;$/;"	m	struct:hostapd_bss_config	access:public
model_name	src/p2p/p2p.h	/^	char *model_name;$/;"	m	struct:p2p_config	access:public
model_name	src/p2p/p2p.h	/^	char model_name[33];$/;"	m	struct:p2p_peer_info	access:public
model_name	src/p2p/p2p_i.h	/^	const u8 *model_name;$/;"	m	struct:p2p_message	access:public
model_name	src/wps/wps.h	/^		const char *model_name;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
model_name	src/wps/wps.h	/^		const char *model_name;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
model_name	src/wps/wps.h	/^		const u8 *model_name;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
model_name	src/wps/wps.h	/^	char *model_name;$/;"	m	struct:wps_device_data	access:public
model_name	src/wps/wps_er.h	/^	char *model_name;$/;"	m	struct:wps_er_ap	access:public
model_name	src/wps/wps_er.h	/^	char *model_name;$/;"	m	struct:wps_er_sta	access:public
model_name	src/wps/wps_i.h	/^	const u8 *model_name;$/;"	m	struct:wps_parse_attr	access:public
model_name_len	src/p2p/p2p_i.h	/^	size_t model_name_len;$/;"	m	struct:p2p_message	access:public
model_name_len	src/wps/wps.h	/^		size_t model_name_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
model_name_len	src/wps/wps_i.h	/^	size_t model_name_len;$/;"	m	struct:wps_parse_attr	access:public
model_number	src/ap/ap_config.h	/^	char *model_number;$/;"	m	struct:hostapd_bss_config	access:public
model_number	src/p2p/p2p.h	/^	char *model_number;$/;"	m	struct:p2p_config	access:public
model_number	src/p2p/p2p.h	/^	char model_number[33];$/;"	m	struct:p2p_peer_info	access:public
model_number	src/p2p/p2p_i.h	/^	const u8 *model_number;$/;"	m	struct:p2p_message	access:public
model_number	src/wps/wps.h	/^		const char *model_number;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
model_number	src/wps/wps.h	/^		const char *model_number;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
model_number	src/wps/wps.h	/^		const u8 *model_number;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
model_number	src/wps/wps.h	/^	char *model_number;$/;"	m	struct:wps_device_data	access:public
model_number	src/wps/wps_er.h	/^	char *model_number;$/;"	m	struct:wps_er_ap	access:public
model_number	src/wps/wps_er.h	/^	char *model_number;$/;"	m	struct:wps_er_sta	access:public
model_number	src/wps/wps_i.h	/^	const u8 *model_number;$/;"	m	struct:wps_parse_attr	access:public
model_number_len	src/p2p/p2p_i.h	/^	size_t model_number_len;$/;"	m	struct:p2p_message	access:public
model_number_len	src/wps/wps.h	/^		size_t model_number_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
model_number_len	src/wps/wps_i.h	/^	size_t model_number_len;$/;"	m	struct:wps_parse_attr	access:public
model_url	src/ap/ap_config.h	/^	char *model_url;$/;"	m	struct:hostapd_bss_config	access:public
model_url	src/wps/wps.h	/^		const char *model_url;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
model_url	src/wps/wps.h	/^	char *model_url;$/;"	m	struct:wps_context	access:public
model_url	src/wps/wps_er.h	/^	char *model_url;$/;"	m	struct:wps_er_ap	access:public
modes	src/drivers/driver_nl80211.c	/^	struct hostapd_hw_modes *modes;$/;"	m	struct:phy_info_arg	typeref:struct:phy_info_arg::hostapd_hw_modes	file:	access:public
monitor_ifidx	src/drivers/driver_nl80211.c	/^	int monitor_ifidx;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
monitor_sock	src/drivers/driver_nl80211.c	/^	int monitor_sock;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
month	src/utils/os.h	/^	int month; \/* 1..12 *\/$/;"	m	struct:os_tm	access:public
move_end	src/utils/edit.c	/^static void move_end(void)$/;"	f	file:	signature:(void)
move_left	src/utils/edit.c	/^static void move_left(void)$/;"	f	file:	signature:(void)
move_right	src/utils/edit.c	/^static void move_right(void)$/;"	f	file:	signature:(void)
move_start	src/utils/edit.c	/^static void move_start(void)$/;"	f	file:	signature:(void)
move_word_left	src/utils/edit.c	/^static void move_word_left(void)$/;"	f	file:	signature:(void)
move_word_right	src/utils/edit.c	/^static void move_word_right(void)$/;"	f	file:	signature:(void)
mp_2expt	src/tls/libtommath.c	/^static int mp_2expt (mp_int * a, int b)$/;"	f	file:	signature:(mp_int * a, int b)
mp_2expt	src/tls/libtommath.c	/^static int mp_2expt(mp_int * a, int b);$/;"	p	file:	signature:(mp_int * a, int b)
mp_abs	src/tls/libtommath.c	/^static int mp_abs (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_abs	src/tls/libtommath.c	/^static int mp_abs(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_add	src/tls/libtommath.c	/^static int mp_add (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_clamp	src/tls/libtommath.c	/^static void mp_clamp (mp_int * a)$/;"	f	file:	signature:(mp_int * a)
mp_clamp	src/tls/libtommath.c	/^static void mp_clamp(mp_int * a);$/;"	p	file:	signature:(mp_int * a)
mp_clear	src/tls/libtommath.c	/^static void mp_clear (mp_int * a)$/;"	f	file:	signature:(mp_int * a)
mp_clear_multi	src/crypto/crypto_libtomcrypt.c	23;"	d	file:
mp_clear_multi	src/tls/libtommath.c	/^static void mp_clear_multi(mp_int *mp, ...) $/;"	f	file:	signature:(mp_int *mp, ...)
mp_clear_multi	src/tls/libtommath.c	/^static void mp_clear_multi(mp_int *mp, ...);$/;"	p	file:	signature:(mp_int *mp, ...)
mp_cmp	src/tls/libtommath.c	/^static int mp_cmp (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_cmp_d	src/tls/libtommath.c	/^static int mp_cmp_d(mp_int * a, mp_digit b)$/;"	f	file:	signature:(mp_int * a, mp_digit b)
mp_cmp_mag	src/tls/libtommath.c	/^static int mp_cmp_mag (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_cmp_mag	src/tls/libtommath.c	/^static int mp_cmp_mag(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_copy	src/tls/libtommath.c	/^static int mp_copy (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_copy	src/tls/libtommath.c	/^static int mp_copy(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_count_bits	src/tls/libtommath.c	/^static int mp_count_bits (mp_int * a)$/;"	f	file:	signature:(mp_int * a)
mp_count_bits	src/tls/libtommath.c	/^static int mp_count_bits(mp_int * a);$/;"	p	file:	signature:(mp_int * a)
mp_digit	src/tls/libtommath.c	/^typedef unsigned long mp_digit;$/;"	t	file:
mp_div	src/tls/libtommath.c	/^static int mp_div (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div	src/tls/libtommath.c	/^static int mp_div(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div	src/tls/libtommath.c	/^static int mp_div(mp_int * a, mp_int * b, mp_int * c, mp_int * d);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div_2	src/tls/libtommath.c	/^static int mp_div_2(mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_div_2	src/tls/libtommath.c	/^static int mp_div_2(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_div_2d	src/tls/libtommath.c	/^static int mp_div_2d (mp_int * a, int b, mp_int * c, mp_int * d)$/;"	f	file:	signature:(mp_int * a, int b, mp_int * c, mp_int * d)
mp_div_2d	src/tls/libtommath.c	/^static int mp_div_2d(mp_int * a, int b, mp_int * c, mp_int * d);$/;"	p	file:	signature:(mp_int * a, int b, mp_int * c, mp_int * d)
mp_err	src/tls/libtommath.c	/^typedef int           mp_err;$/;"	t	file:
mp_exch	src/tls/libtommath.c	/^static void mp_exch (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_exch	src/tls/libtommath.c	/^static void mp_exch(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_exptmod	src/crypto/crypto_libtomcrypt.c	27;"	d	file:
mp_exptmod	src/tls/libtommath.c	/^static int mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y)$/;"	f	file:	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y)
mp_exptmod_fast	src/tls/libtommath.c	/^static int mp_exptmod_fast (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f	file:	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
mp_exptmod_fast	src/tls/libtommath.c	/^static int mp_exptmod_fast (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode);$/;"	p	file:	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
mp_grow	src/tls/libtommath.c	/^static int mp_grow (mp_int * a, int size)$/;"	f	file:	signature:(mp_int * a, int size)
mp_grow	src/tls/libtommath.c	/^static int mp_grow(mp_int * a, int size);$/;"	p	file:	signature:(mp_int * a, int size)
mp_init	src/tls/libtommath.c	/^static int mp_init (mp_int * a)$/;"	f	file:	signature:(mp_int * a)
mp_init_copy	src/tls/libtommath.c	/^static int mp_init_copy (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_init_copy	src/tls/libtommath.c	/^static int mp_init_copy(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_init_multi	src/crypto/crypto_libtomcrypt.c	22;"	d	file:
mp_init_multi	src/tls/libtommath.c	/^static int mp_init_multi(mp_int *mp, ...) $/;"	f	file:	signature:(mp_int *mp, ...)
mp_init_multi	src/tls/libtommath.c	/^static int mp_init_multi(mp_int *mp, ...);$/;"	p	file:	signature:(mp_int *mp, ...)
mp_init_size	src/tls/libtommath.c	/^static int mp_init_size (mp_int * a, int size)$/;"	f	file:	signature:(mp_int * a, int size)
mp_init_size	src/tls/libtommath.c	/^static int mp_init_size(mp_int * a, int size);$/;"	p	file:	signature:(mp_int * a, int size)
mp_int	src/tls/libtommath.c	/^} mp_int;$/;"	t	typeref:struct:__anon109	file:
mp_invmod	src/tls/libtommath.c	/^static int mp_invmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod	src/tls/libtommath.c	/^static int mp_invmod(mp_int * a, mp_int * b, mp_int * c);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod_slow	src/tls/libtommath.c	/^static int mp_invmod_slow (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod_slow	src/tls/libtommath.c	/^static int mp_invmod_slow(mp_int * a, mp_int * b, mp_int * c);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_iseven	src/tls/libtommath.c	123;"	d	file:
mp_isodd	src/tls/libtommath.c	124;"	d	file:
mp_iszero	src/tls/libtommath.c	122;"	d	file:
mp_lshd	src/tls/libtommath.c	/^static int mp_lshd (mp_int * a, int b)$/;"	f	file:	signature:(mp_int * a, int b)
mp_lshd	src/tls/libtommath.c	/^static int mp_lshd(mp_int * a, int b);$/;"	p	file:	signature:(mp_int * a, int b)
mp_mod	src/tls/libtommath.c	/^static int mp_mod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mod	src/tls/libtommath.c	/^static int mp_mod(mp_int * a, mp_int * b, mp_int * c);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mod_2d	src/tls/libtommath.c	/^static int mp_mod_2d (mp_int * a, int b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, int b, mp_int * c)
mp_mod_2d	src/tls/libtommath.c	/^static int mp_mod_2d(mp_int * a, int b, mp_int * c);$/;"	p	file:	signature:(mp_int * a, int b, mp_int * c)
mp_montgomery_calc_normalization	src/tls/libtommath.c	/^static int mp_montgomery_calc_normalization (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_montgomery_setup	src/tls/libtommath.c	/^mp_montgomery_setup (mp_int * n, mp_digit * rho)$/;"	f	file:	signature:(mp_int * n, mp_digit * rho)
mp_mul	src/tls/libtommath.c	/^static int mp_mul (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mul_2	src/tls/libtommath.c	/^static int mp_mul_2(mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_mul_2d	src/tls/libtommath.c	/^static int mp_mul_2d (mp_int * a, int b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, int b, mp_int * c)
mp_mul_2d	src/tls/libtommath.c	/^static int mp_mul_2d(mp_int * a, int b, mp_int * c);$/;"	p	file:	signature:(mp_int * a, int b, mp_int * c)
mp_mul_d	src/tls/libtommath.c	/^mp_mul_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_mul_d	src/tls/libtommath.c	/^static int mp_mul_d (mp_int * a, mp_digit b, mp_int * c);$/;"	p	file:	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_mulmod	src/tls/libtommath.c	/^static int mp_mulmod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_read_unsigned_bin	src/crypto/crypto_libtomcrypt.c	26;"	d	file:
mp_read_unsigned_bin	src/tls/libtommath.c	/^static int mp_read_unsigned_bin (mp_int * a, const unsigned char *b, int c)$/;"	f	file:	signature:(mp_int * a, const unsigned char *b, int c)
mp_reduce	src/tls/libtommath.c	/^static int mp_reduce (mp_int * x, mp_int * m, mp_int * mu)$/;"	f	file:	signature:(mp_int * x, mp_int * m, mp_int * mu)
mp_reduce	src/tls/libtommath.c	/^static int mp_reduce(mp_int * x, mp_int * m, mp_int * mu);$/;"	p	file:	signature:(mp_int * x, mp_int * m, mp_int * mu)
mp_reduce_2k_l	src/tls/libtommath.c	/^static int mp_reduce_2k_l(mp_int *a, mp_int *n, mp_int *d)$/;"	f	file:	signature:(mp_int *a, mp_int *n, mp_int *d)
mp_reduce_2k_l	src/tls/libtommath.c	/^static int mp_reduce_2k_l(mp_int *a, mp_int *n, mp_int *d);$/;"	p	file:	signature:(mp_int *a, mp_int *n, mp_int *d)
mp_reduce_2k_setup_l	src/tls/libtommath.c	/^static int mp_reduce_2k_setup_l(mp_int *a, mp_int *d)$/;"	f	file:	signature:(mp_int *a, mp_int *d)
mp_reduce_2k_setup_l	src/tls/libtommath.c	/^static int mp_reduce_2k_setup_l(mp_int *a, mp_int *d);$/;"	p	file:	signature:(mp_int *a, mp_int *d)
mp_reduce_setup	src/tls/libtommath.c	/^static int mp_reduce_setup (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_reduce_setup	src/tls/libtommath.c	/^static int mp_reduce_setup(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_rshd	src/tls/libtommath.c	/^static void mp_rshd (mp_int * a, int b)$/;"	f	file:	signature:(mp_int * a, int b)
mp_rshd	src/tls/libtommath.c	/^static void mp_rshd(mp_int * a, int b);$/;"	p	file:	signature:(mp_int * a, int b)
mp_set	src/tls/libtommath.c	/^static void mp_set (mp_int * a, mp_digit b)$/;"	f	file:	signature:(mp_int * a, mp_digit b)
mp_set	src/tls/libtommath.c	/^static void mp_set(mp_int * a, mp_digit b);$/;"	p	file:	signature:(mp_int * a, mp_digit b)
mp_sqr	src/tls/libtommath.c	/^static int mp_sqr (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
mp_sqr	src/tls/libtommath.c	/^static int mp_sqr(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
mp_sub	src/tls/libtommath.c	/^static int mp_sub (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_to_unsigned_bin	src/crypto/crypto_libtomcrypt.c	25;"	d	file:
mp_to_unsigned_bin	src/tls/libtommath.c	/^static int mp_to_unsigned_bin (mp_int * a, unsigned char *b)$/;"	f	file:	signature:(mp_int * a, unsigned char *b)
mp_unsigned_bin_size	src/crypto/crypto_libtomcrypt.c	24;"	d	file:
mp_unsigned_bin_size	src/tls/libtommath.c	/^static int mp_unsigned_bin_size (mp_int * a)$/;"	f	file:	signature:(mp_int * a)
mp_word	src/tls/libtommath.c	/^typedef u64 mp_word;$/;"	t	file:
mp_zero	src/tls/libtommath.c	/^static void mp_zero (mp_int * a)$/;"	f	file:	signature:(mp_int * a)
mp_zero	src/tls/libtommath.c	/^static void mp_zero(mp_int * a);$/;"	p	file:	signature:(mp_int * a)
ms_change_password	src/eap_peer/eap_mschapv2.c	/^struct ms_change_password {$/;"	s	file:
ms_change_password::encr_hash	src/eap_peer/eap_mschapv2.c	/^	u8 encr_hash[16];$/;"	m	struct:ms_change_password	file:	access:public
ms_change_password::encr_password	src/eap_peer/eap_mschapv2.c	/^	u8 encr_password[516];$/;"	m	struct:ms_change_password	file:	access:public
ms_change_password::flags	src/eap_peer/eap_mschapv2.c	/^	u8 flags[2];$/;"	m	struct:ms_change_password	file:	access:public
ms_change_password::nt_response	src/eap_peer/eap_mschapv2.c	/^	u8 nt_response[MSCHAPV2_NT_RESPONSE_LEN];$/;"	m	struct:ms_change_password	file:	access:public
ms_change_password::peer_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 peer_challenge[MSCHAPV2_CHAL_LEN];$/;"	m	struct:ms_change_password	file:	access:public
ms_change_password::reserved	src/eap_peer/eap_mschapv2.c	/^	u8 reserved[8];$/;"	m	struct:ms_change_password	file:	access:public
ms_length	src/eap_peer/eap_mschapv2.c	/^	u8 ms_length[2]; \/* Note: misaligned; length - 5 *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
ms_length	src/eap_server/eap_server_mschapv2.c	/^	u8 ms_length[2]; \/* Note: misaligned; length - 5 *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
ms_response	src/eap_peer/eap_mschapv2.c	/^struct ms_response {$/;"	s	file:
ms_response::flags	src/eap_peer/eap_mschapv2.c	/^	u8 flags;$/;"	m	struct:ms_response	file:	access:public
ms_response::nt_response	src/eap_peer/eap_mschapv2.c	/^	u8 nt_response[MSCHAPV2_NT_RESPONSE_LEN];$/;"	m	struct:ms_response	file:	access:public
ms_response::peer_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 peer_challenge[MSCHAPV2_CHAL_LEN];$/;"	m	struct:ms_response	file:	access:public
ms_response::reserved	src/eap_peer/eap_mschapv2.c	/^	u8 reserved[8];$/;"	m	struct:ms_response	file:	access:public
mschap2_response	src/eap_server/eap_server_ttls.c	/^	u8 *mschap2_response;$/;"	m	struct:eap_ttls_avp	file:	access:public
mschap2_response_len	src/eap_server/eap_server_ttls.c	/^	size_t mschap2_response_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
mschap_challenge	src/eap_server/eap_server_ttls.c	/^	u8 *mschap_challenge;$/;"	m	struct:eap_ttls_avp	file:	access:public
mschap_challenge_len	src/eap_server/eap_server_ttls.c	/^	size_t mschap_challenge_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
mschap_response	src/eap_server/eap_server_ttls.c	/^	u8 *mschap_response;$/;"	m	struct:eap_ttls_avp	file:	access:public
mschap_response_len	src/eap_server/eap_server_ttls.c	/^	size_t mschap_response_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
mschapv2	src/eap_peer/eap_ttls.c	/^	u8 *mschapv2;$/;"	m	struct:ttls_parse_avp	file:	access:public
mschapv2_auth_response	src/eap_server/eap_server_ttls.c	/^	u8 mschapv2_auth_response[20];$/;"	m	struct:eap_ttls_data	file:	access:public
mschapv2_derive_response	src/eap_peer/mschapv2.c	/^int mschapv2_derive_response(const u8 *identity, size_t identity_len,$/;"	f	signature:(const u8 *identity, size_t identity_len, const u8 *password, size_t password_len, int pwhash, const u8 *auth_challenge, const u8 *peer_challenge, u8 *nt_response, u8 *auth_response, u8 *master_key)
mschapv2_derive_response	src/eap_peer/mschapv2.h	/^int mschapv2_derive_response(const u8 *username, size_t username_len,$/;"	p	signature:(const u8 *username, size_t username_len, const u8 *password, size_t password_len, int pwhash, const u8 *auth_challenge, const u8 *peer_challenge, u8 *nt_response, u8 *auth_response, u8 *master_key)
mschapv2_error	src/eap_peer/eap_ttls.c	/^	int mschapv2_error;$/;"	m	struct:ttls_parse_avp	file:	access:public
mschapv2_id	src/eap_peer/eap_mschapv2.c	/^	u8 mschapv2_id; \/* usually same as EAP identifier; must be changed$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
mschapv2_id	src/eap_server/eap_server_mschapv2.c	/^	u8 mschapv2_id; \/* must be changed for challenges, but not for$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
mschapv2_ident	src/eap_server/eap_server_ttls.c	/^	u8 mschapv2_ident;$/;"	m	struct:eap_ttls_data	file:	access:public
mschapv2_remove_domain	src/eap_peer/mschapv2.c	/^const u8 * mschapv2_remove_domain(const u8 *username, size_t *len)$/;"	f	signature:(const u8 *username, size_t *len)
mschapv2_remove_domain	src/eap_peer/mschapv2.h	/^const u8 * mschapv2_remove_domain(const u8 *username, size_t *len);$/;"	p	signature:(const u8 *username, size_t *len)
mschapv2_resp_ok	src/eap_server/eap_server_ttls.c	/^	int mschapv2_resp_ok;$/;"	m	struct:eap_ttls_data	file:	access:public
mschapv2_retry	src/eap_peer/eap_config.h	/^	int mschapv2_retry;$/;"	m	struct:eap_peer_config	access:public
mschapv2_verify_auth_response	src/eap_peer/mschapv2.c	/^int mschapv2_verify_auth_response(const u8 *auth_response,$/;"	f	signature:(const u8 *auth_response, const u8 *buf, size_t buf_len)
mschapv2_verify_auth_response	src/eap_peer/mschapv2.h	/^int mschapv2_verify_auth_response(const u8 *auth_response,$/;"	p	signature:(const u8 *auth_response, const u8 *buf, size_t buf_len)
msearch_replies	src/wps/wps_upnp_i.h	/^	struct dl_list msearch_replies;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::dl_list	access:public
msearchreply_state_machine_handler	src/wps/wps_upnp_ssdp.c	/^static void msearchreply_state_machine_handler(void *eloop_data,$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
msearchreply_state_machine_start	src/wps/wps_upnp_ssdp.c	/^static void msearchreply_state_machine_start(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct sockaddr_in *client, int mx)
msearchreply_state_machine_stop	src/wps/wps_upnp_i.h	/^void msearchreply_state_machine_stop(struct advertisement_state_machine *a);$/;"	p	signature:(struct advertisement_state_machine *a)
msearchreply_state_machine_stop	src/wps/wps_upnp_ssdp.c	/^void msearchreply_state_machine_stop(struct advertisement_state_machine *a)$/;"	f	signature:(struct advertisement_state_machine *a)
msg	src/radius/radius_client.c	/^	struct radius_msg *msg;$/;"	m	struct:radius_msg_list	typeref:struct:radius_msg_list::radius_msg	file:	access:public
msg	src/wps/wps.h	/^		int msg;$/;"	m	struct:wps_event_data::wps_event_fail	access:public
msg	src/wps/wps.h	/^	struct wpabuf *msg;$/;"	m	struct:upnp_pending_message	typeref:struct:upnp_pending_message::wpabuf	access:public
msg_ctx	src/ap/hostapd.h	/^	void *msg_ctx; \/* ctx for wpa_msg() calls *\/$/;"	m	struct:hostapd_data	access:public
msg_ctx	src/eap_peer/eap_i.h	/^	void *msg_ctx;$/;"	m	struct:eap_sm	access:public
msg_ctx	src/eap_server/eap.h	/^	void *msg_ctx;$/;"	m	struct:eap_config	access:public
msg_ctx	src/eap_server/eap_i.h	/^	void *eapol_ctx, *msg_ctx;$/;"	m	struct:eap_sm	access:public
msg_ctx	src/eapol_auth/eapol_auth_sm.h	/^	void *msg_ctx;$/;"	m	struct:eapol_auth_config	access:public
msg_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *msg_ctx;$/;"	m	struct:eapol_ctx	access:public
msg_ctx	src/p2p/p2p.h	/^	void *msg_ctx;$/;"	m	struct:p2p_config	access:public
msg_ctx	src/radius/radius_server.c	/^	void *msg_ctx;$/;"	m	struct:radius_server_data	file:	access:public
msg_ctx	src/radius/radius_server.h	/^	void *msg_ctx;$/;"	m	struct:radius_server_conf	access:public
msg_ctx	src/rsn_supp/wpa.h	/^	void *msg_ctx; \/* upper level context for wpa_msg() calls *\/$/;"	m	struct:wpa_sm_ctx	access:public
msg_ctx_parent	src/ap/hostapd.h	/^	void *msg_ctx_parent; \/* parent interface ctx for wpa_msg() calls *\/$/;"	m	struct:hostapd_data	access:public
msg_dumps	src/radius/radius_client.h	/^	int msg_dumps;$/;"	m	struct:hostapd_radius_servers	access:public
msg_type	src/radius/radius_client.c	/^	RadiusType msg_type;$/;"	m	struct:radius_msg_list	file:	access:public
msg_type	src/wps/wps_i.h	/^	const u8 *msg_type; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
msgs	src/radius/radius_client.c	/^	struct radius_msg_list *msgs;$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::radius_msg_list	file:	access:public
msk	src/eap_peer/eap_aka.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
msk	src/eap_peer/eap_gpsk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
msk	src/eap_peer/eap_psk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
msk	src/eap_peer/eap_pwd.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
msk	src/eap_peer/eap_sake.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
msk	src/eap_peer/eap_sim.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
msk	src/eap_server/eap_server_aka.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
msk	src/eap_server/eap_server_gpsk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
msk	src/eap_server/eap_server_psk.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
msk	src/eap_server/eap_server_pwd.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_pwd_data	file:	access:public
msk	src/eap_server/eap_server_sake.c	/^	u8 msk[EAP_MSK_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
msk	src/eap_server/eap_server_sim.c	/^	u8 msk[EAP_SIM_KEYING_DATA_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
msk_life	src/eap_common/eap_sake_common.h	/^	const u8 *msk_life;$/;"	m	struct:eap_sake_parse_attr	access:public
msock_filter	src/drivers/driver_nl80211.c	/^static struct sock_fprog msock_filter = {$/;"	v	typeref:struct:sock_fprog	file:
msock_filter_insns	src/drivers/driver_nl80211.c	/^static struct sock_filter msock_filter_insns[] = {$/;"	v	typeref:struct:sock_filter	file:
mui	src/common/wpa_common.h	/^	be16 mui;$/;"	m	struct:rsn_error_kde	access:public
multi	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
multicast	src/ap/iapp.c	/^	struct in_addr own, multicast;$/;"	m	struct:iapp_data	typeref:struct:iapp_data::	file:	access:public
multicast_sd	src/wps/wps_er.h	/^	int multicast_sd;$/;"	m	struct:wps_er	access:public
multicast_sd	src/wps/wps_upnp_i.h	/^	int multicast_sd; \/* send multicast messages over this socket *\/$/;"	m	struct:upnp_wps_device_sm	access:public
my_cert_store	src/crypto/tls_schannel.c	/^	HCERTSTORE my_cert_store;$/;"	m	struct:tls_global	file:	access:public
my_confirm	src/eap_server/eap_server_pwd.c	/^	u8 my_confirm[SHA256_DIGEST_LENGTH];$/;"	m	struct:eap_pwd_data	file:	access:public
my_element	src/eap_peer/eap_pwd.c	/^	EC_POINT *my_element;$/;"	m	struct:eap_pwd_data	file:	access:public
my_element	src/eap_server/eap_server_pwd.c	/^	EC_POINT *my_element;$/;"	m	struct:eap_pwd_data	file:	access:public
my_scalar	src/eap_peer/eap_pwd.c	/^	BIGNUM *my_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
my_scalar	src/eap_server/eap_server_pwd.c	/^	BIGNUM *my_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
n	src/tls/rsa.c	/^	struct bignum *n; \/* modulus (p * q) *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
nAuthMode	src/drivers/driver_ndis.c	/^	INT nAuthMode;$/;"	m	struct:__anon97	file:	access:public
nInfraMode	src/drivers/driver_ndis.c	/^	INT nInfraMode;$/;"	m	struct:__anon97	file:	access:public
nWPAMCastCipher	src/drivers/driver_ndis.c	/^	DWORD nWPAMCastCipher;$/;"	m	struct:__anon97	file:	access:public
nWepStatus	src/drivers/driver_ndis.c	/^	INT nWepStatus;$/;"	m	struct:__anon97	file:	access:public
nai_realm_eap_auth_inner_non_eap	src/common/ieee802_11_defs.h	/^enum nai_realm_eap_auth_inner_non_eap {$/;"	g
nai_realm_eap_auth_param	src/common/ieee802_11_defs.h	/^enum nai_realm_eap_auth_param {$/;"	g
nai_realm_eap_cred_type	src/common/ieee802_11_defs.h	/^enum nai_realm_eap_cred_type {$/;"	g
nak_type	src/eap_common/eap_tlv_common.h	/^	be16 nak_type;$/;"	m	struct:eap_tlv_nak_tlv	access:public
name	src/drivers/driver.h	/^	const char *name;$/;"	m	struct:wpa_driver_ops	access:public
name	src/drivers/wireless_copy.h	/^	char		name[IFNAMSIZ];	\/* Name of the extension *\/$/;"	m	struct:iw_priv_args	access:public
name	src/drivers/wireless_copy.h	/^	char		name[IFNAMSIZ];$/;"	m	union:iwreq_data	access:public
name	src/eap_peer/eap_config.h	/^	char *name;$/;"	m	struct:wpa_config_blob	access:public
name	src/eap_peer/eap_i.h	/^	const char *name;$/;"	m	struct:eap_method	access:public
name	src/eap_peer/tncc.c	/^	char *name;$/;"	m	struct:tnc_if_imc	file:	access:public
name	src/eap_server/eap_i.h	/^	const char *name;$/;"	m	struct:eap_method	access:public
name	src/eap_server/tncs.c	/^	char *name;$/;"	m	struct:tnc_if_imv	file:	access:public
name	src/radius/radius.c	/^	char *name;$/;"	m	struct:radius_attr_type	file:	access:public
nas_identifier	src/ap/ap_config.h	/^	char *nas_identifier;$/;"	m	struct:hostapd_bss_config	access:public
native80211	src/drivers/driver_ndis.h	/^	int native80211;$/;"	m	struct:wpa_driver_ndis_data	access:public
ndef_build_record	src/wps/ndef.c	/^static struct wpabuf * ndef_build_record(u8 flags, void *type,$/;"	f	file:	signature:(u8 flags, void *type, u8 type_length, void *id, u8 id_length, void *payload, u32 payload_length)
ndef_build_wifi	src/wps/ndef.c	/^struct wpabuf * ndef_build_wifi(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
ndef_build_wifi	src/wps/wps_i.h	/^struct wpabuf * ndef_build_wifi(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
ndef_parse_record	src/wps/ndef.c	/^static int ndef_parse_record(u8 *data, u32 size, struct ndef_record *record)$/;"	f	file:	signature:(u8 *data, u32 size, struct ndef_record *record)
ndef_parse_records	src/wps/ndef.c	/^static struct wpabuf * ndef_parse_records(struct wpabuf *buf,$/;"	f	file:	signature:(struct wpabuf *buf, int (*filter)(struct ndef_record *))
ndef_parse_wifi	src/wps/ndef.c	/^struct wpabuf * ndef_parse_wifi(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
ndef_parse_wifi	src/wps/wps_i.h	/^struct wpabuf * ndef_parse_wifi(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
ndef_record	src/wps/ndef.c	/^struct ndef_record {$/;"	s	file:
ndef_record::id	src/wps/ndef.c	/^	u8 *id;$/;"	m	struct:ndef_record	file:	access:public
ndef_record::id_length	src/wps/ndef.c	/^	u8 id_length;$/;"	m	struct:ndef_record	file:	access:public
ndef_record::payload	src/wps/ndef.c	/^	u8 *payload;$/;"	m	struct:ndef_record	file:	access:public
ndef_record::payload_length	src/wps/ndef.c	/^	u32 payload_length;$/;"	m	struct:ndef_record	file:	access:public
ndef_record::total_length	src/wps/ndef.c	/^	u32 total_length;$/;"	m	struct:ndef_record	file:	access:public
ndef_record::type	src/wps/ndef.c	/^	u8 *type;$/;"	m	struct:ndef_record	file:	access:public
ndef_record::type_length	src/wps/ndef.c	/^	u8 type_length;$/;"	m	struct:ndef_record	file:	access:public
ndis_add_multicast	src/drivers/driver_ndis.c	/^static int ndis_add_multicast(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
ndis_drv_desc	src/drivers/driver_ndis.c	/^static const char *ndis_drv_desc = "Windows NDIS driver";$/;"	v	file:
ndis_drv_name	src/drivers/driver_ndis.c	/^static const char *ndis_drv_name = "ndis";$/;"	v	file:
ndis_events_adapter_arrival	src/drivers/ndis_events.c	/^static void ndis_events_adapter_arrival(struct ndis_events_data *events)$/;"	f	file:	signature:(struct ndis_events_data *events)
ndis_events_adapter_removal	src/drivers/ndis_events.c	/^static void ndis_events_adapter_removal(struct ndis_events_data *events)$/;"	f	file:	signature:(struct ndis_events_data *events)
ndis_events_add_ref	src/drivers/ndis_events.c	/^static ULONG STDMETHODCALLTYPE ndis_events_add_ref(IWbemObjectSink *this)$/;"	f	file:	signature:(IWbemObjectSink *this)
ndis_events_constructor	src/drivers/ndis_events.c	/^static int ndis_events_constructor(struct ndis_events_data *events)$/;"	f	file:	signature:(struct ndis_events_data *events)
ndis_events_data	src/drivers/ndis_events.c	/^struct ndis_events_data {$/;"	s	file:
ndis_events_data::adapter_desc	src/drivers/ndis_events.c	/^	WCHAR *adapter_desc;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::event_avail	src/drivers/ndis_events.c	/^	HANDLE read_pipe, write_pipe, event_avail;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::ifname	src/drivers/ndis_events.c	/^	char *ifname; \/* {GUID..} *\/$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::pLoc	src/drivers/ndis_events.c	/^	IWbemLocator *pLoc;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::pSvc	src/drivers/ndis_events.c	/^	IWbemServices *pSvc;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::read_pipe	src/drivers/ndis_events.c	/^	HANDLE read_pipe, write_pipe, event_avail;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::ref	src/drivers/ndis_events.c	/^	UINT ref;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::sink	src/drivers/ndis_events.c	/^	IWbemObjectSink sink;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::sink_vtbl	src/drivers/ndis_events.c	/^	IWbemObjectSinkVtbl sink_vtbl;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::terminating	src/drivers/ndis_events.c	/^	int terminating;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_data::write_pipe	src/drivers/ndis_events.c	/^	HANDLE read_pipe, write_pipe, event_avail;$/;"	m	struct:ndis_events_data	file:	access:public
ndis_events_deinit	src/drivers/driver_ndis.h	/^void ndis_events_deinit(struct ndis_events_data *events);$/;"	p	signature:(struct ndis_events_data *events)
ndis_events_deinit	src/drivers/ndis_events.c	/^void ndis_events_deinit(struct ndis_events_data *events)$/;"	f	signature:(struct ndis_events_data *events)
ndis_events_destructor	src/drivers/ndis_events.c	/^static void ndis_events_destructor(struct ndis_events_data *events)$/;"	f	file:	signature:(struct ndis_events_data *events)
ndis_events_get_adapter	src/drivers/ndis_events.c	/^static int ndis_events_get_adapter(struct ndis_events_data *events,$/;"	f	file:	signature:(struct ndis_events_data *events, const char *ifname, const char *desc)
ndis_events_get_adapter	src/drivers/ndis_events.c	/^static int ndis_events_get_adapter(struct ndis_events_data *events,$/;"	p	file:	signature:(struct ndis_events_data *events, const char *ifname, const char *desc)
ndis_events_indicate	src/drivers/ndis_events.c	/^ndis_events_indicate(IWbemObjectSink *this, long lObjectCount,$/;"	f	file:	signature:(IWbemObjectSink *this, long lObjectCount, IWbemClassObject __RPC_FAR *__RPC_FAR *ppObjArray)
ndis_events_init	src/drivers/driver_ndis.h	/^struct ndis_events_data * ndis_events_init(HANDLE *read_pipe, HANDLE *event,$/;"	p	signature:(HANDLE *read_pipe, HANDLE *event, const char *ifname, const char *desc)
ndis_events_init	src/drivers/ndis_events.c	/^ndis_events_init(HANDLE *read_pipe, HANDLE *event_avail,$/;"	f	signature:(HANDLE *read_pipe, HANDLE *event_avail, const char *ifname, const char *desc)
ndis_events_media_connect	src/drivers/ndis_events.c	/^static void ndis_events_media_connect(struct ndis_events_data *events)$/;"	f	file:	signature:(struct ndis_events_data *events)
ndis_events_media_disconnect	src/drivers/ndis_events.c	/^static void ndis_events_media_disconnect(struct ndis_events_data *events)$/;"	f	file:	signature:(struct ndis_events_data *events)
ndis_events_media_specific	src/drivers/ndis_events.c	/^static void ndis_events_media_specific(struct ndis_events_data *events,$/;"	f	file:	signature:(struct ndis_events_data *events, IWbemClassObject *pObj)
ndis_events_query_interface	src/drivers/ndis_events.c	/^ndis_events_query_interface(IWbemObjectSink *this, REFIID riid, void **obj)$/;"	f	file:	signature:(IWbemObjectSink *this, REFIID riid, void **obj)
ndis_events_release	src/drivers/ndis_events.c	/^static ULONG STDMETHODCALLTYPE ndis_events_release(IWbemObjectSink *this)$/;"	f	file:	signature:(IWbemObjectSink *this)
ndis_events_send_event	src/drivers/ndis_events.c	/^static int ndis_events_send_event(struct ndis_events_data *events,$/;"	f	file:	signature:(struct ndis_events_data *events, enum event_types type, char *data, size_t data_len)
ndis_events_set_status	src/drivers/ndis_events.c	/^ndis_events_set_status(IWbemObjectSink *this, long lFlags, HRESULT hResult,$/;"	f	file:	signature:(IWbemObjectSink *this, long lFlags, HRESULT hResult, BSTR strParam, IWbemClassObject __RPC_FAR *pObjParam)
ndis_events_use_desc	src/drivers/ndis_events.c	/^static int ndis_events_use_desc(struct ndis_events_data *events,$/;"	f	file:	signature:(struct ndis_events_data *events, const char *desc)
ndis_get_auth_mode	src/drivers/driver_ndis.c	/^static int ndis_get_auth_mode(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
ndis_get_encr_status	src/drivers/driver_ndis.c	/^static int ndis_get_encr_status(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
ndis_get_oid	src/drivers/driver_ndis.c	/^static int ndis_get_oid(struct wpa_driver_ndis_data *drv, unsigned int oid,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, unsigned int oid, char *data, size_t len)
ndis_pmkid_entry	src/drivers/driver_ndis.h	/^struct ndis_pmkid_entry {$/;"	s
ndis_pmkid_entry	src/drivers/driver_ralink.h	/^struct ndis_pmkid_entry {$/;"	s
ndis_pmkid_entry::bssid	src/drivers/driver_ndis.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:ndis_pmkid_entry	access:public
ndis_pmkid_entry::bssid	src/drivers/driver_ralink.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:ndis_pmkid_entry	access:public
ndis_pmkid_entry::next	src/drivers/driver_ndis.h	/^	struct ndis_pmkid_entry *next;$/;"	m	struct:ndis_pmkid_entry	typeref:struct:ndis_pmkid_entry::ndis_pmkid_entry	access:public
ndis_pmkid_entry::next	src/drivers/driver_ralink.h	/^	struct ndis_pmkid_entry *next;$/;"	m	struct:ndis_pmkid_entry	typeref:struct:ndis_pmkid_entry::ndis_pmkid_entry	access:public
ndis_pmkid_entry::pmkid	src/drivers/driver_ndis.h	/^	u8 pmkid[16];$/;"	m	struct:ndis_pmkid_entry	access:public
ndis_pmkid_entry::pmkid	src/drivers/driver_ralink.h	/^	u8 pmkid[16];$/;"	m	struct:ndis_pmkid_entry	access:public
ndis_set_auth_mode	src/drivers/driver_ndis.c	/^static int ndis_set_auth_mode(struct wpa_driver_ndis_data *drv, int mode)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, int mode)
ndis_set_encr_status	src/drivers/driver_ndis.c	/^static int ndis_set_encr_status(struct wpa_driver_ndis_data *drv, int encr)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, int encr)
ndis_set_oid	src/drivers/driver_ndis.c	/^static int ndis_set_oid(struct wpa_driver_ndis_data *drv, unsigned int oid,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, unsigned int oid, const char *data, size_t len)
ndisuio	src/drivers/driver_ndis.h	/^	HANDLE ndisuio;$/;"	m	struct:wpa_driver_ndis_data	access:public
ndisuio_notification_deinit	src/drivers/driver_ndis.c	/^static void ndisuio_notification_deinit(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
ndisuio_notification_init	src/drivers/driver_ndis.c	/^static int ndisuio_notification_init(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
ndisuio_notification_receive	src/drivers/driver_ndis.c	/^static void ndisuio_notification_receive(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
nerrors	src/wps/wps_upnp_i.h	/^	int nerrors;$/;"	m	struct:advertisement_state_machine	access:public
netlink	src/drivers/driver_atheros.c	/^	struct netlink_data *netlink;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::netlink_data	file:	access:public
netlink	src/drivers/driver_hostap.c	/^	struct netlink_data *netlink;$/;"	m	struct:hostap_driver_data	typeref:struct:hostap_driver_data::netlink_data	file:	access:public
netlink	src/drivers/driver_madwifi.c	/^	struct netlink_data *netlink;$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::netlink_data	file:	access:public
netlink	src/drivers/driver_nl80211.c	/^	struct netlink_data *netlink;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::netlink_data	file:	access:public
netlink	src/drivers/driver_ralink.c	/^	struct netlink_data *netlink;$/;"	m	struct:wpa_driver_ralink_data	typeref:struct:wpa_driver_ralink_data::netlink_data	file:	access:public
netlink	src/drivers/driver_wext.h	/^	struct netlink_data *netlink;$/;"	m	struct:wpa_driver_wext_data	typeref:struct:wpa_driver_wext_data::netlink_data	access:public
netlink_config	src/drivers/netlink.h	/^struct netlink_config {$/;"	s
netlink_config::ctx	src/drivers/netlink.h	/^	void *ctx;$/;"	m	struct:netlink_config	access:public
netlink_config::dellink_cb	src/drivers/netlink.h	/^	void (*dellink_cb)(void *ctx, struct ifinfomsg *ifi, u8 *buf,$/;"	m	struct:netlink_config	access:public
netlink_config::newlink_cb	src/drivers/netlink.h	/^	void (*newlink_cb)(void *ctx, struct ifinfomsg *ifi, u8 *buf,$/;"	m	struct:netlink_config	access:public
netlink_data	src/drivers/netlink.c	/^struct netlink_data {$/;"	s	file:
netlink_data::cfg	src/drivers/netlink.c	/^	struct netlink_config *cfg;$/;"	m	struct:netlink_data	typeref:struct:netlink_data::netlink_config	file:	access:public
netlink_data::sock	src/drivers/netlink.c	/^	int sock;$/;"	m	struct:netlink_data	file:	access:public
netlink_deinit	src/drivers/netlink.c	/^void netlink_deinit(struct netlink_data *netlink)$/;"	f	signature:(struct netlink_data *netlink)
netlink_deinit	src/drivers/netlink.h	/^void netlink_deinit(struct netlink_data *netlink);$/;"	p	signature:(struct netlink_data *netlink)
netlink_init	src/drivers/netlink.c	/^struct netlink_data * netlink_init(struct netlink_config *cfg)$/;"	f	signature:(struct netlink_config *cfg)
netlink_init	src/drivers/netlink.h	/^struct netlink_data * netlink_init(struct netlink_config *cfg);$/;"	p	signature:(struct netlink_config *cfg)
netlink_receive	src/drivers/netlink.c	/^static void netlink_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
netlink_receive_link	src/drivers/netlink.c	/^static void netlink_receive_link(struct netlink_data *netlink,$/;"	f	file:	signature:(struct netlink_data *netlink, void (*cb)(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len), struct nlmsghdr *h)
netlink_send_oper_ifla	src/drivers/netlink.c	/^int netlink_send_oper_ifla(struct netlink_data *netlink, int ifindex,$/;"	f	signature:(struct netlink_data *netlink, int ifindex, int linkmode, int operstate)
netlink_send_oper_ifla	src/drivers/netlink.h	/^int netlink_send_oper_ifla(struct netlink_data *netlink, int ifindex,$/;"	p	signature:(struct netlink_data *netlink, int ifindex, int linkmode, int operstate)
network_ctx	src/rsn_supp/pmksa_cache.h	/^	void *network_ctx;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
network_ctx	src/rsn_supp/wpa.h	/^	void *network_ctx;$/;"	m	struct:rsn_supp_config	access:public
network_ctx	src/rsn_supp/wpa_i.h	/^	void *network_ctx;$/;"	m	struct:wpa_sm	access:public
network_idx	src/wps/wps_i.h	/^	const u8 *network_idx; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
network_key	src/wps/wps.h	/^	u8 *network_key;$/;"	m	struct:wps_context	access:public
network_key	src/wps/wps_i.h	/^	const u8 *network_key; \/* <= 64 octets *\/$/;"	m	struct:wps_parse_attr	access:public
network_key_idx	src/wps/wps_i.h	/^	const u8 *network_key_idx; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
network_key_len	src/wps/wps.h	/^	size_t network_key_len;$/;"	m	struct:wps_context	access:public
network_key_len	src/wps/wps_i.h	/^	size_t network_key_len;$/;"	m	struct:wps_parse_attr	access:public
network_key_shareable	src/wps/wps_i.h	/^	const u8 *network_key_shareable; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
network_name	src/eap_peer/eap_aka.c	/^	u8 *network_name;$/;"	m	struct:eap_aka_data	file:	access:public
network_name	src/eap_server/eap_server_aka.c	/^	u8 *network_name;$/;"	m	struct:eap_aka_data	file:	access:public
network_name_len	src/eap_peer/eap_aka.c	/^	size_t network_name_len;$/;"	m	struct:eap_aka_data	file:	access:public
network_name_len	src/eap_server/eap_server_aka.c	/^	size_t network_name_len;$/;"	m	struct:eap_aka_data	file:	access:public
new_ap_ack_authenticator	src/ap/iapp.c	/^	u8 new_ap_ack_authenticator[48];$/;"	m	struct:iapp_ack_security_block	file:	access:public
new_ap_settings	src/wps/wps.h	/^	const struct wps_credential *new_ap_settings;$/;"	m	struct:wps_config	typeref:struct:wps_config::wps_credential	access:public
new_ap_settings	src/wps/wps_i.h	/^	struct wps_credential *new_ap_settings;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_credential	access:public
new_assoc_sta_cb	src/ap/hostapd.h	/^	void (*new_assoc_sta_cb)(struct hostapd_data *hapd,$/;"	m	struct:hostapd_data	access:public
new_chan	src/common/ieee802_11_defs.h	/^					u8 new_chan;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
new_password	src/eap_peer/eap_config.h	/^	u8 *new_password;$/;"	m	struct:eap_peer_config	access:public
new_password_encrypted_with_old_nt_password_hash	src/crypto/ms_funcs.c	/^int new_password_encrypted_with_old_nt_password_hash($/;"	f	signature:( const u8 *new_password, size_t new_password_len, const u8 *old_password, size_t old_password_len, u8 *encrypted_pw_block)
new_password_encrypted_with_old_nt_password_hash	src/crypto/ms_funcs.h	/^int __must_check new_password_encrypted_with_old_nt_password_hash($/;"	p	signature:( const u8 *new_password, size_t new_password_len, const u8 *old_password, size_t old_password_len, u8 *encrypted_pw_block)
new_password_len	src/eap_peer/eap_config.h	/^	size_t new_password_len;$/;"	m	struct:eap_peer_config	access:public
new_psk	src/wps/wps_i.h	/^	u8 *new_psk;$/;"	m	struct:wps_data	access:public
new_psk_cb	src/wps/wps.h	/^	int (*new_psk_cb)(void *ctx, const u8 *mac_addr, const u8 *psk,$/;"	m	struct:wps_registrar_config	access:public
new_psk_cb	src/wps/wps_registrar.c	/^	int (*new_psk_cb)(void *ctx, const u8 *mac_addr, const u8 *psk,$/;"	m	struct:wps_registrar	file:	access:public
new_psk_len	src/wps/wps_i.h	/^	size_t new_psk_len;$/;"	m	struct:wps_data	access:public
new_sta	src/drivers/driver.h	/^	struct new_sta {$/;"	s	union:wpa_event_data	access:public
new_sta	src/drivers/driver.h	/^	} new_sta;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::new_sta	access:public
newlink_cb	src/drivers/netlink.h	/^	void (*newlink_cb)(void *ctx, struct ifinfomsg *ifi, u8 *buf,$/;"	m	struct:netlink_config	access:public
newt	src/utils/edit.c	/^static struct termios prevt, newt;$/;"	v	typeref:struct:	file:
next	hostapd/ctrl_iface.c	/^	struct wpa_ctrl_dst *next;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::wpa_ctrl_dst	file:	access:public
next	hostapd/hlr_auc_gw.c	/^	struct gsm_triplet *next;$/;"	m	struct:gsm_triplet	typeref:struct:gsm_triplet::gsm_triplet	file:	access:public
next	hostapd/hlr_auc_gw.c	/^	struct milenage_parameters *next;$/;"	m	struct:milenage_parameters	typeref:struct:milenage_parameters::milenage_parameters	file:	access:public
next	src/ap/ap_config.h	/^	struct hostapd_eap_user *next;$/;"	m	struct:hostapd_eap_user	typeref:struct:hostapd_eap_user::hostapd_eap_user	access:public
next	src/ap/ap_config.h	/^	struct hostapd_vlan *next;$/;"	m	struct:hostapd_vlan	typeref:struct:hostapd_vlan::hostapd_vlan	access:public
next	src/ap/ap_config.h	/^	struct hostapd_wpa_psk *next;$/;"	m	struct:hostapd_wpa_psk	typeref:struct:hostapd_wpa_psk::hostapd_wpa_psk	access:public
next	src/ap/ap_list.h	/^	struct ap_info *next; \/* next entry in AP list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
next	src/ap/ieee802_11_auth.c	/^	struct hostapd_acl_query_data *next;$/;"	m	struct:hostapd_acl_query_data	typeref:struct:hostapd_acl_query_data::hostapd_acl_query_data	file:	access:public
next	src/ap/ieee802_11_auth.c	/^	struct hostapd_cached_radius_acl *next;$/;"	m	struct:hostapd_cached_radius_acl	typeref:struct:hostapd_cached_radius_acl::hostapd_cached_radius_acl	file:	access:public
next	src/ap/pmksa_cache_auth.h	/^	struct rsn_pmksa_cache_entry *next, *hnext;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::rsn_pmksa_cache_entry	access:public
next	src/ap/preauth_auth.c	/^	struct rsn_preauth_interface *next;$/;"	m	struct:rsn_preauth_interface	typeref:struct:rsn_preauth_interface::rsn_preauth_interface	file:	access:public
next	src/ap/sta_info.h	/^	struct sta_info *next; \/* next entry in sta list *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::sta_info	access:public
next	src/ap/wpa_auth.h	/^	struct ft_remote_r0kh *next;$/;"	m	struct:ft_remote_r0kh	typeref:struct:ft_remote_r0kh::ft_remote_r0kh	access:public
next	src/ap/wpa_auth.h	/^	struct ft_remote_r1kh *next;$/;"	m	struct:ft_remote_r1kh	typeref:struct:ft_remote_r1kh::ft_remote_r1kh	access:public
next	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r0_sa *next;$/;"	m	struct:wpa_ft_pmk_r0_sa	typeref:struct:wpa_ft_pmk_r0_sa::wpa_ft_pmk_r0_sa	file:	access:public
next	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r1_sa *next;$/;"	m	struct:wpa_ft_pmk_r1_sa	typeref:struct:wpa_ft_pmk_r1_sa::wpa_ft_pmk_r1_sa	file:	access:public
next	src/ap/wpa_auth_i.h	/^	struct wpa_group *next;$/;"	m	struct:wpa_group	typeref:struct:wpa_group::wpa_group	access:public
next	src/ap/wpa_auth_i.h	/^	struct wpa_stsl_negotiation *next;$/;"	m	struct:wpa_stsl_negotiation	typeref:struct:wpa_stsl_negotiation::wpa_stsl_negotiation	access:public
next	src/drivers/driver.h	/^	struct wpa_interface_info *next;$/;"	m	struct:wpa_interface_info	typeref:struct:wpa_interface_info::wpa_interface_info	access:public
next	src/drivers/driver_ndis.h	/^	struct ndis_pmkid_entry *next;$/;"	m	struct:ndis_pmkid_entry	typeref:struct:ndis_pmkid_entry::ndis_pmkid_entry	access:public
next	src/drivers/driver_nl80211.c	/^	struct i802_bss *next;$/;"	m	struct:i802_bss	typeref:struct:i802_bss::i802_bss	file:	access:public
next	src/drivers/driver_ralink.h	/^	struct ndis_pmkid_entry *next;$/;"	m	struct:ndis_pmkid_entry	typeref:struct:ndis_pmkid_entry::ndis_pmkid_entry	access:public
next	src/drivers/driver_test.c	/^	struct test_client_socket *next;$/;"	m	struct:test_client_socket	typeref:struct:test_client_socket::test_client_socket	file:	access:public
next	src/eap_peer/eap_config.h	/^	struct wpa_config_blob *next;$/;"	m	struct:wpa_config_blob	typeref:struct:wpa_config_blob::wpa_config_blob	access:public
next	src/eap_peer/eap_fast_pac.h	/^	struct eap_fast_pac *next;$/;"	m	struct:eap_fast_pac	typeref:struct:eap_fast_pac::eap_fast_pac	access:public
next	src/eap_peer/eap_i.h	/^	struct eap_method *next;$/;"	m	struct:eap_method	typeref:struct:eap_method::eap_method	access:public
next	src/eap_peer/tncc.c	/^	struct tnc_if_imc *next;$/;"	m	struct:tnc_if_imc	typeref:struct:tnc_if_imc::tnc_if_imc	file:	access:public
next	src/eap_server/eap_i.h	/^	struct eap_method *next;$/;"	m	struct:eap_method	typeref:struct:eap_method::eap_method	access:public
next	src/eap_server/eap_sim_db.c	/^	struct eap_sim_db_pending *next;$/;"	m	struct:eap_sim_db_pending	typeref:struct:eap_sim_db_pending::eap_sim_db_pending	file:	access:public
next	src/eap_server/eap_sim_db.c	/^	struct eap_sim_pseudonym *next;$/;"	m	struct:eap_sim_pseudonym	typeref:struct:eap_sim_pseudonym::eap_sim_pseudonym	file:	access:public
next	src/eap_server/eap_sim_db.h	/^	struct eap_sim_reauth *next;$/;"	m	struct:eap_sim_reauth	typeref:struct:eap_sim_reauth::eap_sim_reauth	access:public
next	src/eap_server/tncs.c	/^	struct tnc_if_imv *next;$/;"	m	struct:tnc_if_imv	typeref:struct:tnc_if_imv::tnc_if_imv	file:	access:public
next	src/eap_server/tncs.c	/^	struct tncs_data *next;$/;"	m	struct:tncs_data	typeref:struct:tncs_data::tncs_data	file:	access:public
next	src/p2p/p2p_group.c	/^	struct p2p_group_member *next;$/;"	m	struct:p2p_group_member	typeref:struct:p2p_group_member::p2p_group_member	file:	access:public
next	src/p2p/p2p_i.h	/^	struct p2p_sd_query *next;$/;"	m	struct:p2p_sd_query	typeref:struct:p2p_sd_query::p2p_sd_query	access:public
next	src/radius/radius_client.c	/^	struct radius_msg_list *next;$/;"	m	struct:radius_msg_list	typeref:struct:radius_msg_list::radius_msg_list	file:	access:public
next	src/radius/radius_server.c	/^	struct radius_client *next;$/;"	m	struct:radius_client	typeref:struct:radius_client::radius_client	file:	access:public
next	src/radius/radius_server.c	/^	struct radius_session *next;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_session	file:	access:public
next	src/rsn_supp/peerkey.h	/^	struct wpa_peerkey *next;$/;"	m	struct:wpa_peerkey	typeref:struct:wpa_peerkey::wpa_peerkey	access:public
next	src/rsn_supp/pmksa_cache.h	/^	struct rsn_pmksa_cache_entry *next;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::rsn_pmksa_cache_entry	access:public
next	src/rsn_supp/tdls.c	/^	struct wpa_tdls_peer *next;$/;"	m	struct:wpa_tdls_peer	typeref:struct:wpa_tdls_peer::wpa_tdls_peer	file:	access:public
next	src/tls/x509v3.h	/^	struct x509_certificate *next;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_certificate	access:public
next	src/utils/eloop_none.c	/^	struct eloop_timeout *next;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::eloop_timeout	file:	access:public
next	src/utils/eloop_win.c	/^	struct eloop_timeout *next;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::eloop_timeout	file:	access:public
next	src/utils/list.h	/^	struct dl_list *next;$/;"	m	struct:dl_list	typeref:struct:dl_list::dl_list	access:public
next	src/wps/http_server.c	/^	struct http_request *next;$/;"	m	struct:http_request	typeref:struct:http_request::http_request	file:	access:public
next	src/wps/wps.h	/^	struct upnp_pending_message *next;$/;"	m	struct:upnp_pending_message	typeref:struct:upnp_pending_message::upnp_pending_message	access:public
next	src/wps/wps_registrar.c	/^	struct wps_pbc_session *next;$/;"	m	struct:wps_pbc_session	typeref:struct:wps_pbc_session::wps_pbc_session	file:	access:public
next	src/wps/wps_registrar.c	/^	struct wps_registrar_device *next;$/;"	m	struct:wps_registrar_device	typeref:struct:wps_registrar_device::wps_registrar_device	file:	access:public
next_advertisement	src/wps/wps_upnp_ssdp.c	/^next_advertisement(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct advertisement_state_machine *a, int *islast)
next_ap_id	src/wps/wps_er.h	/^	unsigned int next_ap_id;$/;"	m	struct:wps_er	access:public
next_bitmap	src/utils/radiotap_iter.h	/^	uint32_t *next_bitmap;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
next_conn_id	src/eap_server/tncs.c	/^	TNC_ConnectionID next_conn_id;$/;"	m	struct:tncs_global	file:	access:public
next_payload	src/eap_common/ikev2_common.h	/^	u8 next_payload;$/;"	m	struct:ikev2_hdr	access:public
next_payload	src/eap_common/ikev2_common.h	/^	u8 next_payload;$/;"	m	struct:ikev2_payload_hdr	access:public
next_pseudonym	src/eap_common/eap_sim_common.h	/^	const u8 *next_pseudonym, *next_reauth_id;$/;"	m	struct:eap_sim_attrs	access:public
next_pseudonym	src/eap_server/eap_server_aka.c	/^	char *next_pseudonym;$/;"	m	struct:eap_aka_data	file:	access:public
next_pseudonym	src/eap_server/eap_server_sim.c	/^	char *next_pseudonym;$/;"	m	struct:eap_sim_data	file:	access:public
next_pseudonym_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
next_radius_identifier	src/radius/radius_client.c	/^	u8 next_radius_identifier;$/;"	m	struct:radius_client_data	file:	access:public
next_reauth_id	src/eap_common/eap_sim_common.h	/^	const u8 *next_pseudonym, *next_reauth_id;$/;"	m	struct:eap_sim_attrs	access:public
next_reauth_id	src/eap_server/eap_server_aka.c	/^	char *next_reauth_id;$/;"	m	struct:eap_aka_data	file:	access:public
next_reauth_id	src/eap_server/eap_server_sim.c	/^	char *next_reauth_id;$/;"	m	struct:eap_sim_data	file:	access:public
next_reauth_id_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
next_sess_id	src/radius/radius_server.c	/^	unsigned int next_sess_id;$/;"	m	struct:radius_server_data	file:	access:public
next_subscriber_sequence	src/wps/wps_upnp_i.h	/^	unsigned next_subscriber_sequence; \/* number our messages *\/$/;"	m	struct:subscription	access:public
next_tie_breaker	src/p2p/p2p_i.h	/^	u8 next_tie_breaker;$/;"	m	struct:p2p_data	access:public
next_tmpid	src/eap_common/eap_sake_common.h	/^	const u8 *next_tmpid;$/;"	m	struct:eap_sake_parse_attr	access:public
next_tmpid_len	src/eap_common/eap_sake_common.h	/^	size_t next_tmpid_len;$/;"	m	struct:eap_sake_parse_attr	access:public
next_try	src/radius/radius_client.c	/^	os_time_t next_try;$/;"	m	struct:radius_msg_list	file:	access:public
next_wait	src/radius/radius_client.c	/^	int next_wait;$/;"	m	struct:radius_msg_list	file:	access:public
nl	src/drivers/driver_nl80211.c	/^	struct nl80211_handles nl;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::nl80211_handles	file:	access:public
nl80211	src/drivers/driver_nl80211.c	/^	struct genl_family *nl80211;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::genl_family	file:	access:public
nl80211_add_pmkid	src/drivers/driver_nl80211.c	/^static int nl80211_add_pmkid(void *priv, const u8 *bssid, const u8 *pmkid)$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
nl80211_addr_in_use	src/drivers/driver_nl80211.c	/^static int nl80211_addr_in_use(struct nl80211_global *global, const u8 *addr)$/;"	f	file:	signature:(struct nl80211_global *global, const u8 *addr)
nl80211_attr_cqm	src/drivers/nl80211_copy.h	/^enum nl80211_attr_cqm {$/;"	g
nl80211_attrs	src/drivers/nl80211_copy.h	/^enum nl80211_attrs {$/;"	g
nl80211_auth_type	src/drivers/nl80211_copy.h	/^enum nl80211_auth_type {$/;"	g
nl80211_band	src/drivers/nl80211_copy.h	/^enum nl80211_band {$/;"	g
nl80211_band_attr	src/drivers/nl80211_copy.h	/^enum nl80211_band_attr {$/;"	g
nl80211_bitrate_attr	src/drivers/nl80211_copy.h	/^enum nl80211_bitrate_attr {$/;"	g
nl80211_bss	src/drivers/nl80211_copy.h	/^enum nl80211_bss {$/;"	g
nl80211_bss_info_arg	src/drivers/driver_nl80211.c	/^struct nl80211_bss_info_arg {$/;"	s	file:
nl80211_bss_info_arg::assoc_bssid	src/drivers/driver_nl80211.c	/^	u8 assoc_bssid[ETH_ALEN];$/;"	m	struct:nl80211_bss_info_arg	file:	access:public
nl80211_bss_info_arg::assoc_freq	src/drivers/driver_nl80211.c	/^	unsigned int assoc_freq;$/;"	m	struct:nl80211_bss_info_arg	file:	access:public
nl80211_bss_info_arg::drv	src/drivers/driver_nl80211.c	/^	struct wpa_driver_nl80211_data *drv;$/;"	m	struct:nl80211_bss_info_arg	typeref:struct:nl80211_bss_info_arg::wpa_driver_nl80211_data	file:	access:public
nl80211_bss_info_arg::res	src/drivers/driver_nl80211.c	/^	struct wpa_scan_results *res;$/;"	m	struct:nl80211_bss_info_arg	typeref:struct:nl80211_bss_info_arg::wpa_scan_results	file:	access:public
nl80211_bss_status	src/drivers/nl80211_copy.h	/^enum nl80211_bss_status {$/;"	g
nl80211_channel_type	src/drivers/nl80211_copy.h	/^enum nl80211_channel_type {$/;"	g
nl80211_cmd	src/drivers/driver_nl80211.c	/^static void * nl80211_cmd(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nl_msg *msg, int flags, uint8_t cmd)
nl80211_commands	src/drivers/nl80211_copy.h	/^enum nl80211_commands {$/;"	g
nl80211_cqm_event	src/drivers/driver_nl80211.c	/^static void nl80211_cqm_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr *tb[])
nl80211_cqm_rssi_threshold_event	src/drivers/nl80211_copy.h	/^enum nl80211_cqm_rssi_threshold_event {$/;"	g
nl80211_create_iface	src/drivers/driver_nl80211.c	/^static int nl80211_create_iface(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const char *ifname, enum nl80211_iftype iftype, const u8 *addr, int wds)
nl80211_create_iface_once	src/drivers/driver_nl80211.c	/^static int nl80211_create_iface_once(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const char *ifname, enum nl80211_iftype iftype, const u8 *addr, int wds)
nl80211_create_monitor_interface	src/drivers/driver_nl80211.c	/^nl80211_create_monitor_interface(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_del_station_event	src/drivers/driver_nl80211.c	/^static void nl80211_del_station_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr **tb)
nl80211_disable_11b_rates	src/drivers/driver_nl80211.c	/^static int nl80211_disable_11b_rates(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifindex, int disabled)
nl80211_disable_11b_rates	src/drivers/driver_nl80211.c	/^static int nl80211_disable_11b_rates(struct wpa_driver_nl80211_data *drv,$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifindex, int disabled)
nl80211_disconnect	src/drivers/driver_nl80211.c	/^static int nl80211_disconnect(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *bssid)
nl80211_dump_scan	src/drivers/driver_nl80211.c	/^static void nl80211_dump_scan(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_feature_flags	src/drivers/nl80211_copy.h	/^enum nl80211_feature_flags {$/;"	g
nl80211_find_drv	src/drivers/driver_nl80211.c	/^nl80211_find_drv(struct nl80211_global *global, int idx, u8 *buf, size_t len)$/;"	f	file:	signature:(struct nl80211_global *global, int idx, u8 *buf, size_t len)
nl80211_flush_pmkid	src/drivers/driver_nl80211.c	/^static int nl80211_flush_pmkid(void *priv)$/;"	f	file:	signature:(void *priv)
nl80211_frequency_attr	src/drivers/nl80211_copy.h	/^enum nl80211_frequency_attr {$/;"	g
nl80211_get_assoc_bssid	src/drivers/driver_nl80211.c	/^static unsigned int nl80211_get_assoc_bssid(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, u8 *bssid)
nl80211_get_assoc_freq	src/drivers/driver_nl80211.c	/^static unsigned int nl80211_get_assoc_freq(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_get_ie	src/drivers/driver_nl80211.c	/^static const u8 * nl80211_get_ie(const u8 *ies, size_t ies_len, u8 ie)$/;"	f	file:	signature:(const u8 *ies, size_t ies_len, u8 ie)
nl80211_get_link_noise	src/drivers/driver_nl80211.c	/^static int nl80211_get_link_noise(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct wpa_signal_info *sig_change)
nl80211_get_link_signal	src/drivers/driver_nl80211.c	/^static int nl80211_get_link_signal(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct wpa_signal_info *sig)
nl80211_get_noise_for_scan_results	src/drivers/driver_nl80211.c	/^static int nl80211_get_noise_for_scan_results($/;"	f	file:	signature:( struct wpa_driver_nl80211_data *drv, struct wpa_scan_results *scan_res)
nl80211_get_phy_name	src/drivers/driver_nl80211.c	/^static void nl80211_get_phy_name(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_get_radio_name	src/drivers/driver_nl80211.c	/^static const char * nl80211_get_radio_name(void *priv)$/;"	f	file:	signature:(void *priv)
nl80211_get_reg	src/drivers/driver_nl80211.c	/^static int nl80211_get_reg(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
nl80211_get_scan_results	src/drivers/driver_nl80211.c	/^nl80211_get_scan_results(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_global	src/drivers/driver_nl80211.c	/^struct nl80211_global {$/;"	s	file:
nl80211_global::if_add_ifindex	src/drivers/driver_nl80211.c	/^	int if_add_ifindex;$/;"	m	struct:nl80211_global	file:	access:public
nl80211_global::interfaces	src/drivers/driver_nl80211.c	/^	struct dl_list interfaces;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::dl_list	file:	access:public
nl80211_global::ioctl_sock	src/drivers/driver_nl80211.c	/^	int ioctl_sock; \/* socket for ioctl() use *\/$/;"	m	struct:nl80211_global	file:	access:public
nl80211_global::netlink	src/drivers/driver_nl80211.c	/^	struct netlink_data *netlink;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::netlink_data	file:	access:public
nl80211_global::nl	src/drivers/driver_nl80211.c	/^	struct nl80211_handles nl;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::nl80211_handles	file:	access:public
nl80211_global::nl80211	src/drivers/driver_nl80211.c	/^	struct genl_family *nl80211;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::genl_family	file:	access:public
nl80211_global::nl_cb	src/drivers/driver_nl80211.c	/^	struct nl_cb *nl_cb;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::nl_cb	file:	access:public
nl80211_global_deinit	src/drivers/driver_nl80211.c	/^static void nl80211_global_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
nl80211_global_deinit	src/drivers/driver_nl80211.c	/^static void nl80211_global_deinit(void *priv);$/;"	p	file:	signature:(void *priv)
nl80211_global_init	src/drivers/driver_nl80211.c	/^static void * nl80211_global_init(void)$/;"	f	file:	signature:(void)
nl80211_handle_alloc	src/drivers/driver_nl80211.c	/^static struct nl_handle *nl80211_handle_alloc(void *cb)$/;"	f	file:	signature:(void *cb)
nl80211_handle_alloc	src/drivers/driver_nl80211.c	49;"	d	file:
nl80211_handle_destroy	src/drivers/driver_nl80211.c	/^static void nl80211_handle_destroy(struct nl_handle *handle)$/;"	f	file:	signature:(struct nl_handle *handle)
nl80211_handle_destroy	src/drivers/driver_nl80211.c	50;"	d	file:
nl80211_handles	src/drivers/driver_nl80211.c	/^struct nl80211_handles {$/;"	s	file:
nl80211_handles::cache	src/drivers/driver_nl80211.c	/^	struct nl_cache *cache;$/;"	m	struct:nl80211_handles	typeref:struct:nl80211_handles::nl_cache	file:	access:public
nl80211_handles::handle	src/drivers/driver_nl80211.c	/^	struct nl_handle *handle;$/;"	m	struct:nl80211_handles	typeref:struct:nl80211_handles::nl_handle	file:	access:public
nl80211_hidden_ssid	src/drivers/nl80211_copy.h	/^enum nl80211_hidden_ssid {$/;"	g
nl80211_if_combination_attrs	src/drivers/nl80211_copy.h	/^enum nl80211_if_combination_attrs {$/;"	g
nl80211_iface_limit_attrs	src/drivers/nl80211_copy.h	/^enum nl80211_iface_limit_attrs {$/;"	g
nl80211_iftype	src/drivers/nl80211_copy.h	/^enum nl80211_iftype {$/;"	g
nl80211_iftype_str	src/drivers/driver_nl80211.c	/^static const char * nl80211_iftype_str(enum nl80211_iftype mode)$/;"	f	file:	signature:(enum nl80211_iftype mode)
nl80211_key_attributes	src/drivers/nl80211_copy.h	/^enum nl80211_key_attributes {$/;"	g
nl80211_key_default_types	src/drivers/nl80211_copy.h	/^enum nl80211_key_default_types {$/;"	g
nl80211_key_type	src/drivers/nl80211_copy.h	/^enum nl80211_key_type {$/;"	g
nl80211_l2_read	src/drivers/driver_nl80211.c	/^static void nl80211_l2_read(void *ctx, const u8 *src_addr, const u8 *buf,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
nl80211_leave_ibss	src/drivers/driver_nl80211.c	/^static int nl80211_leave_ibss(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_leave_ibss	src/drivers/driver_nl80211.c	/^static int nl80211_leave_ibss(struct wpa_driver_nl80211_data *drv);$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_mesh_setup_params	src/drivers/nl80211_copy.h	/^enum nl80211_mesh_setup_params {$/;"	g
nl80211_meshconf_params	src/drivers/nl80211_copy.h	/^enum nl80211_meshconf_params {$/;"	g
nl80211_mfp	src/drivers/nl80211_copy.h	/^enum nl80211_mfp {$/;"	g
nl80211_mntr_flags	src/drivers/nl80211_copy.h	/^enum nl80211_mntr_flags {$/;"	g
nl80211_mpath_flags	src/drivers/nl80211_copy.h	/^enum nl80211_mpath_flags {$/;"	g
nl80211_mpath_info	src/drivers/nl80211_copy.h	/^enum nl80211_mpath_info {$/;"	g
nl80211_new_station_event	src/drivers/driver_nl80211.c	/^static void nl80211_new_station_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr **tb)
nl80211_p2p_interface_addr	src/drivers/driver_nl80211.c	/^static int nl80211_p2p_interface_addr(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, u8 *new_addr)
nl80211_plink_state	src/drivers/nl80211_copy.h	/^enum nl80211_plink_state {$/;"	g
nl80211_pmkid	src/drivers/driver_nl80211.c	/^static int nl80211_pmkid(struct i802_bss *bss, int cmd, const u8 *bssid,$/;"	f	file:	signature:(struct i802_bss *bss, int cmd, const u8 *bssid, const u8 *pmkid)
nl80211_pmksa_candidate_attr	src/drivers/nl80211_copy.h	/^enum nl80211_pmksa_candidate_attr {$/;"	g
nl80211_pmksa_candidate_event	src/drivers/driver_nl80211.c	/^static void nl80211_pmksa_candidate_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr **tb)
nl80211_poll_client	src/drivers/driver_nl80211.c	/^static void nl80211_poll_client(void *priv, const u8 *own_addr, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int qos)
nl80211_probe_resp_offload_support_attr	src/drivers/nl80211_copy.h	/^enum nl80211_probe_resp_offload_support_attr {$/;"	g
nl80211_ps_state	src/drivers/nl80211_copy.h	/^enum nl80211_ps_state {$/;"	g
nl80211_rate_info	src/drivers/nl80211_copy.h	/^enum nl80211_rate_info {$/;"	g
nl80211_reg_initiator	src/drivers/nl80211_copy.h	/^enum nl80211_reg_initiator {$/;"	g
nl80211_reg_rule_attr	src/drivers/nl80211_copy.h	/^enum nl80211_reg_rule_attr {$/;"	g
nl80211_reg_rule_flags	src/drivers/nl80211_copy.h	/^enum nl80211_reg_rule_flags {$/;"	g
nl80211_reg_rule_ht40	src/drivers/driver_nl80211.c	/^static void nl80211_reg_rule_ht40(struct nlattr *tb[],$/;"	f	file:	signature:(struct nlattr *tb[], struct phy_info_arg *results)
nl80211_reg_rule_sec	src/drivers/driver_nl80211.c	/^static void nl80211_reg_rule_sec(struct nlattr *tb[],$/;"	f	file:	signature:(struct nlattr *tb[], struct phy_info_arg *results)
nl80211_reg_type	src/drivers/nl80211_copy.h	/^enum nl80211_reg_type {$/;"	g
nl80211_register_action_frame	src/drivers/driver_nl80211.c	/^static int nl80211_register_action_frame(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *match, size_t match_len)
nl80211_register_action_frames	src/drivers/driver_nl80211.c	/^static int nl80211_register_action_frames(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
nl80211_register_frame	src/drivers/driver_nl80211.c	/^static int nl80211_register_frame(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nl_handle *nl_handle, u16 type, const u8 *match, size_t match_len)
nl80211_rekey_data	src/drivers/nl80211_copy.h	/^enum nl80211_rekey_data {$/;"	g
nl80211_rekey_offload_event	src/drivers/driver_nl80211.c	/^static void nl80211_rekey_offload_event(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nlattr **tb)
nl80211_remove_iface	src/drivers/driver_nl80211.c	/^static void nl80211_remove_iface(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifidx)
nl80211_remove_monitor_interface	src/drivers/driver_nl80211.c	/^static void nl80211_remove_monitor_interface($/;"	f	file:	signature:( struct wpa_driver_nl80211_data *drv)
nl80211_remove_monitor_interface	src/drivers/driver_nl80211.c	/^static void nl80211_remove_monitor_interface($/;"	p	file:	signature:( struct wpa_driver_nl80211_data *drv)
nl80211_remove_pmkid	src/drivers/driver_nl80211.c	/^static int nl80211_remove_pmkid(void *priv, const u8 *bssid, const u8 *pmkid)$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
nl80211_scan_filtered	src/drivers/driver_nl80211.c	/^static int nl80211_scan_filtered(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *ie, size_t ie_len)
nl80211_sched_scan_match_attr	src/drivers/nl80211_copy.h	/^enum nl80211_sched_scan_match_attr {$/;"	g
nl80211_send_eapol_data	src/drivers/driver_nl80211.c	/^static int nl80211_send_eapol_data(struct i802_bss *bss,$/;"	f	file:	signature:(struct i802_bss *bss, const u8 *addr, const u8 *data, size_t data_len, const u8 *own_addr)
nl80211_send_frame	src/drivers/driver_nl80211.c	/^static int nl80211_send_frame(void *priv, const u8 *data, size_t data_len,$/;"	f	file:	signature:(void *priv, const u8 *data, size_t data_len, int encrypt)
nl80211_send_frame_cmd	src/drivers/driver_nl80211.c	/^static int nl80211_send_frame_cmd(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, unsigned int freq, unsigned int wait, const u8 *buf, size_t buf_len, u64 *cookie_out, int no_cck)
nl80211_send_frame_cmd	src/drivers/driver_nl80211.c	/^static int nl80211_send_frame_cmd(struct wpa_driver_nl80211_data *drv,$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv, unsigned int freq, unsigned int wait, const u8 *buf, size_t buf_len, u64 *cookie, int no_cck)
nl80211_send_ft_action	src/drivers/driver_nl80211.c	/^static int nl80211_send_ft_action(void *priv, u8 action, const u8 *target_ap,$/;"	f	file:	signature:(void *priv, u8 action, const u8 *target_ap, const u8 *ies, size_t ies_len)
nl80211_send_tdls_mgmt	src/drivers/driver_nl80211.c	/^static int nl80211_send_tdls_mgmt(void *priv, const u8 *dst, u8 action_code,$/;"	f	file:	signature:(void *priv, const u8 *dst, u8 action_code, u8 dialog_token, u16 status_code, const u8 *buf, size_t len)
nl80211_set_ap_isolate	src/drivers/driver_nl80211.c	/^static int nl80211_set_ap_isolate(struct i802_bss *bss, int enabled)$/;"	f	file:	signature:(struct i802_bss *bss, int enabled)
nl80211_set_bss	src/drivers/driver_nl80211.c	/^static int nl80211_set_bss(struct i802_bss *bss, int cts, int preamble,$/;"	f	file:	signature:(struct i802_bss *bss, int cts, int preamble, int slot, int ht_opmode)
nl80211_set_conn_keys	src/drivers/driver_nl80211.c	/^static int nl80211_set_conn_keys(struct wpa_driver_associate_params *params,$/;"	f	file:	signature:(struct wpa_driver_associate_params *params, struct nl_msg *msg)
nl80211_set_ht40_flags	src/drivers/driver_nl80211.c	/^static int nl80211_set_ht40_flags(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct phy_info_arg *results)
nl80211_set_ht40_mode	src/drivers/driver_nl80211.c	/^static void nl80211_set_ht40_mode(struct hostapd_hw_modes *mode, int start,$/;"	f	file:	signature:(struct hostapd_hw_modes *mode, int start, int end)
nl80211_set_ht40_mode_sec	src/drivers/driver_nl80211.c	/^static void nl80211_set_ht40_mode_sec(struct hostapd_hw_modes *mode, int start,$/;"	f	file:	signature:(struct hostapd_hw_modes *mode, int start, int end)
nl80211_set_mode	src/drivers/driver_nl80211.c	/^static int nl80211_set_mode(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifindex, enum nl80211_iftype mode)
nl80211_set_param	src/drivers/driver_nl80211.c	/^static int nl80211_set_param(void *priv, const char *param)$/;"	f	file:	signature:(void *priv, const char *param)
nl80211_set_rekey_info	src/drivers/driver_nl80211.c	/^static void nl80211_set_rekey_info(void *priv, const u8 *kek, const u8 *kck,$/;"	f	file:	signature:(void *priv, const u8 *kek, const u8 *kck, const u8 *replay_ctr)
nl80211_signal_monitor	src/drivers/driver_nl80211.c	/^static int nl80211_signal_monitor(void *priv, int threshold, int hysteresis)$/;"	f	file:	signature:(void *priv, int threshold, int hysteresis)
nl80211_signal_poll	src/drivers/driver_nl80211.c	/^static int nl80211_signal_poll(void *priv, struct wpa_signal_info *si)$/;"	f	file:	signature:(void *priv, struct wpa_signal_info *si)
nl80211_sta_bss_param	src/drivers/nl80211_copy.h	/^enum nl80211_sta_bss_param {$/;"	g
nl80211_sta_flag_update	src/drivers/nl80211_copy.h	/^struct nl80211_sta_flag_update {$/;"	s
nl80211_sta_flag_update::mask	src/drivers/nl80211_copy.h	/^	__u32 mask;$/;"	m	struct:nl80211_sta_flag_update	access:public
nl80211_sta_flag_update::set	src/drivers/nl80211_copy.h	/^	__u32 set;$/;"	m	struct:nl80211_sta_flag_update	access:public
nl80211_sta_flags	src/drivers/nl80211_copy.h	/^enum nl80211_sta_flags {$/;"	g
nl80211_sta_info	src/drivers/nl80211_copy.h	/^enum nl80211_sta_info {$/;"	g
nl80211_sta_wme_attr	src/drivers/nl80211_copy.h	/^enum nl80211_sta_wme_attr {$/;"	g
nl80211_survey_info	src/drivers/nl80211_copy.h	/^enum nl80211_survey_info {$/;"	g
nl80211_tdls_oper	src/drivers/driver_nl80211.c	/^static int nl80211_tdls_oper(void *priv, enum tdls_oper oper, const u8 *peer)$/;"	f	file:	signature:(void *priv, enum tdls_oper oper, const u8 *peer)
nl80211_tdls_operation	src/drivers/nl80211_copy.h	/^enum nl80211_tdls_operation {$/;"	g
nl80211_tx_power_setting	src/drivers/nl80211_copy.h	/^enum nl80211_tx_power_setting {$/;"	g
nl80211_tx_rate_attributes	src/drivers/nl80211_copy.h	/^enum nl80211_tx_rate_attributes {$/;"	g
nl80211_txq_attr	src/drivers/nl80211_copy.h	/^enum nl80211_txq_attr {$/;"	g
nl80211_txq_q	src/drivers/nl80211_copy.h	/^enum nl80211_txq_q {$/;"	g
nl80211_wowlan_packet_pattern_attr	src/drivers/nl80211_copy.h	/^enum nl80211_wowlan_packet_pattern_attr {$/;"	g
nl80211_wowlan_pattern_support	src/drivers/nl80211_copy.h	/^struct nl80211_wowlan_pattern_support {$/;"	s
nl80211_wowlan_pattern_support::max_pattern_len	src/drivers/nl80211_copy.h	/^	__u32 max_pattern_len;$/;"	m	struct:nl80211_wowlan_pattern_support	access:public
nl80211_wowlan_pattern_support::max_patterns	src/drivers/nl80211_copy.h	/^	__u32 max_patterns;$/;"	m	struct:nl80211_wowlan_pattern_support	access:public
nl80211_wowlan_pattern_support::min_pattern_len	src/drivers/nl80211_copy.h	/^	__u32 min_pattern_len;$/;"	m	struct:nl80211_wowlan_pattern_support	access:public
nl80211_wowlan_triggers	src/drivers/nl80211_copy.h	/^enum nl80211_wowlan_triggers {$/;"	g
nl80211_wpa_versions	src/drivers/nl80211_copy.h	/^enum nl80211_wpa_versions {$/;"	g
nl_add_key	src/drivers/driver_nl80211.c	/^static int nl_add_key(struct nl_msg *msg, enum wpa_alg alg,$/;"	f	file:	signature:(struct nl_msg *msg, enum wpa_alg alg, int key_idx, int defkey, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
nl_cb	src/drivers/driver_nl80211.c	/^	struct nl_cb *nl_cb;$/;"	m	struct:nl80211_global	typeref:struct:nl80211_global::nl_cb	file:	access:public
nl_create_handles	src/drivers/driver_nl80211.c	/^static int nl_create_handles(struct nl80211_handles *handles, struct nl_cb *cb,$/;"	f	file:	signature:(struct nl80211_handles *handles, struct nl_cb *cb, const char *dbg)
nl_destroy_handles	src/drivers/driver_nl80211.c	/^static void nl_destroy_handles(struct nl80211_handles *handles)$/;"	f	file:	signature:(struct nl80211_handles *handles)
nl_event	src/drivers/driver_nl80211.c	/^	struct nl80211_handles nl_event, nl_preq;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::nl80211_handles	file:	access:public
nl_family	src/drivers/priv_netlink.h	/^	sa_family_t nl_family;$/;"	m	struct:sockaddr_nl	access:public
nl_get_multicast_id	src/drivers/driver_nl80211.c	/^static int nl_get_multicast_id(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const char *family, const char *group)
nl_groups	src/drivers/priv_netlink.h	/^	u32 nl_groups;$/;"	m	struct:sockaddr_nl	access:public
nl_handle	src/drivers/driver_nl80211.c	48;"	d	file:
nl_pad	src/drivers/priv_netlink.h	/^	unsigned short nl_pad;$/;"	m	struct:sockaddr_nl	access:public
nl_pid	src/drivers/priv_netlink.h	/^	u32 nl_pid;$/;"	m	struct:sockaddr_nl	access:public
nl_preq	src/drivers/driver_nl80211.c	/^	struct nl80211_handles nl_event, nl_preq;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::	file:	access:public
nlmode	src/drivers/driver_nl80211.c	/^	enum nl80211_iftype nlmode;$/;"	m	struct:wpa_driver_nl80211_data	typeref:enum:wpa_driver_nl80211_data::nl80211_iftype	file:	access:public
nlmsg_flags	src/drivers/priv_netlink.h	/^	u16 nlmsg_flags;$/;"	m	struct:nlmsghdr	access:public
nlmsg_len	src/drivers/priv_netlink.h	/^	u32 nlmsg_len;$/;"	m	struct:nlmsghdr	access:public
nlmsg_pid	src/drivers/priv_netlink.h	/^	u32 nlmsg_pid;$/;"	m	struct:nlmsghdr	access:public
nlmsg_seq	src/drivers/priv_netlink.h	/^	u32 nlmsg_seq;$/;"	m	struct:nlmsghdr	access:public
nlmsg_type	src/drivers/priv_netlink.h	/^	u16 nlmsg_type;$/;"	m	struct:nlmsghdr	access:public
nlmsghdr	src/drivers/priv_netlink.h	/^struct nlmsghdr$/;"	s
nlmsghdr::nlmsg_flags	src/drivers/priv_netlink.h	/^	u16 nlmsg_flags;$/;"	m	struct:nlmsghdr	access:public
nlmsghdr::nlmsg_len	src/drivers/priv_netlink.h	/^	u32 nlmsg_len;$/;"	m	struct:nlmsghdr	access:public
nlmsghdr::nlmsg_pid	src/drivers/priv_netlink.h	/^	u32 nlmsg_pid;$/;"	m	struct:nlmsghdr	access:public
nlmsghdr::nlmsg_seq	src/drivers/priv_netlink.h	/^	u32 nlmsg_seq;$/;"	m	struct:nlmsghdr	access:public
nlmsghdr::nlmsg_type	src/drivers/priv_netlink.h	/^	u16 nlmsg_type;$/;"	m	struct:nlmsghdr	access:public
no_ht_gf_set	src/ap/sta_info.h	/^	unsigned int no_ht_gf_set:1;$/;"	m	struct:sta_info	access:public
no_ht_set	src/ap/sta_info.h	/^	unsigned int no_ht_set:1;$/;"	m	struct:sta_info	access:public
no_monitor_iface_capab	src/drivers/driver_nl80211.c	/^	int no_monitor_iface_capab;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
no_of_pmkid	src/drivers/driver_ndis.h	/^	int no_of_pmkid;$/;"	m	struct:wpa_driver_ndis_data	access:public
no_of_pmkid	src/drivers/driver_ralink.c	/^	int no_of_pmkid;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
no_p2p_set	src/ap/sta_info.h	/^	unsigned int no_p2p_set:1;$/;"	m	struct:sta_info	access:public
no_seq_check	src/drivers/driver_nl80211.c	/^static int no_seq_check(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
no_short_preamble_set	src/ap/sta_info.h	/^	unsigned int no_short_preamble_set:1;$/;"	m	struct:sta_info	access:public
no_short_slot_time_set	src/ap/sta_info.h	/^	unsigned int no_short_slot_time_set:1;$/;"	m	struct:sta_info	access:public
no_wait_count	src/l2_packet/l2_packet_winpcap.c	/^static const size_t no_wait_count = 750;$/;"	v	file:
noa	src/p2p/p2p_group.c	/^	struct wpabuf *noa;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::wpabuf	file:	access:public
noa	src/p2p/p2p_i.h	/^	const u8 *noa;$/;"	m	struct:p2p_message	access:public
noa_duration	src/ap/hostapd.h	/^	int noa_duration;$/;"	m	struct:hostapd_data	access:public
noa_enabled	src/ap/hostapd.h	/^	int noa_enabled;$/;"	m	struct:hostapd_data	access:public
noa_len	src/p2p/p2p_i.h	/^	size_t noa_len;$/;"	m	struct:p2p_message	access:public
noa_start	src/ap/hostapd.h	/^	int noa_start;$/;"	m	struct:hostapd_data	access:public
noise	src/drivers/Apple80211.h	/^	UInt16 noise;$/;"	m	struct:WirelessInfo	access:public
noise	src/drivers/Apple80211.h	/^	UInt16 noise;$/;"	m	struct:WirelessNetworkInfo	access:public
noise	src/drivers/driver.h	/^	int noise;$/;"	m	struct:wpa_scan_res	access:public
noise	src/drivers/wireless_copy.h	/^	__u8		noise;		\/* noise level (dBm) *\/$/;"	m	struct:iw_quality	access:public
nominal_msdu_size	src/common/ieee802_11_defs.h	/^	le16 nominal_msdu_size;$/;"	m	struct:wmm_tspec_element	access:public
nonce	src/ap/wpa_auth.h	/^	u8 nonce[16]; \/* copied from pull *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
nonce	src/ap/wpa_auth.h	/^	u8 nonce[16];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
nonce	src/ap/wpa_auth_ie.h	/^	const u8 *nonce;$/;"	m	struct:wpa_eapol_ie_parse	access:public
nonce	src/eap_common/eap_tlv_common.h	/^	u8 nonce[32];$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
nonce	src/eap_common/ikev2_common.h	/^	const u8 *nonce;$/;"	m	struct:ikev2_payloads	access:public
nonce	src/rsn_supp/wpa_ie.h	/^	const u8 *nonce;$/;"	m	struct:wpa_eapol_ie_parse	access:public
nonce_e	src/wps/wps_i.h	/^	u8 nonce_e[WPS_NONCE_LEN];$/;"	m	struct:wps_data	access:public
nonce_len	src/ap/wpa_auth_ie.h	/^	size_t nonce_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
nonce_len	src/eap_common/ikev2_common.h	/^	size_t nonce_len;$/;"	m	struct:ikev2_payloads	access:public
nonce_len	src/rsn_supp/wpa_ie.h	/^	size_t nonce_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
nonce_mt	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
nonce_mt	src/eap_peer/eap_sim.c	/^	u8 nonce_mt[EAP_SIM_NONCE_MT_LEN], nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
nonce_mt	src/eap_server/eap_server_sim.c	/^	u8 nonce_mt[EAP_SIM_NONCE_MT_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
nonce_r	src/wps/wps_i.h	/^	u8 nonce_r[WPS_NONCE_LEN];$/;"	m	struct:wps_data	access:public
nonce_s	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
nonce_s	src/eap_peer/eap_aka.c	/^	u8 nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
nonce_s	src/eap_peer/eap_sim.c	/^	u8 nonce_mt[EAP_SIM_NONCE_MT_LEN], nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
nonce_s	src/eap_server/eap_server_aka.c	/^	u8 nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
nonce_s	src/eap_server/eap_server_sim.c	/^	u8 nonce_s[EAP_SIM_NONCE_S_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
none_driver_data	src/drivers/driver_none.c	/^struct none_driver_data {$/;"	s	file:
none_driver_data::ctx	src/drivers/driver_none.c	/^	void *ctx;$/;"	m	struct:none_driver_data	file:	access:public
none_driver_data::hapd	src/drivers/driver_none.c	/^	struct hostapd_data *hapd;$/;"	m	struct:none_driver_data	typeref:struct:none_driver_data::hostapd_data	file:	access:public
none_driver_deinit	src/drivers/driver_none.c	/^static void none_driver_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
none_driver_hapd_deinit	src/drivers/driver_none.c	/^static void none_driver_hapd_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
none_driver_hapd_init	src/drivers/driver_none.c	/^static void * none_driver_hapd_init(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
none_driver_init	src/drivers/driver_none.c	/^static void * none_driver_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
none_driver_send_eapol	src/drivers/driver_none.c	/^static int none_driver_send_eapol(void *priv, const u8 *dest, u16 proto,$/;"	f	file:	signature:(void *priv, const u8 *dest, u16 proto, const u8 *data, size_t data_len)
none_driver_send_ether	src/drivers/driver_none.c	/^static int none_driver_send_ether(void *priv, const u8 *dst, const u8 *src,$/;"	f	file:	signature:(void *priv, const u8 *dst, const u8 *src, u16 proto, const u8 *data, size_t data_len)
nonerp_set	src/ap/sta_info.h	/^	unsigned int nonerp_set:1;$/;"	m	struct:sta_info	access:public
not_after	src/tls/x509v3.h	/^	os_time_t not_after;$/;"	m	struct:x509_certificate	access:public
not_before	src/tls/x509v3.h	/^	os_time_t not_before;$/;"	m	struct:x509_certificate	access:public
notification	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
notification	src/eap_common/ikev2_common.h	/^	const u8 *notification;$/;"	m	struct:ikev2_payloads	access:public
notification	src/eap_server/eap_server_aka.c	/^	u16 notification;$/;"	m	struct:eap_aka_data	file:	access:public
notification	src/eap_server/eap_server_sim.c	/^	u16 notification;$/;"	m	struct:eap_sim_data	file:	access:public
notification_len	src/eap_common/ikev2_common.h	/^	size_t notification_len;$/;"	m	struct:ikev2_payloads	access:public
notification_query	src/drivers/ndis_events.c	/^static int notification_query(IWbemObjectSink *pDestSink,$/;"	f	file:	signature:(IWbemObjectSink *pDestSink, IWbemServices *pSvc, const char *class_name)
notify_cert	src/eap_peer/eap.h	/^	void (*notify_cert)(void *ctx, int depth, const char *subject,$/;"	m	struct:eapol_callbacks	access:public
notify_pending	src/eap_peer/eap.h	/^	void (*notify_pending)(void *ctx);$/;"	m	struct:eapol_callbacks	access:public
nss_bad_cert_cb	src/crypto/tls_nss.c	/^static SECStatus nss_bad_cert_cb(void *arg, PRFileDesc *fd)$/;"	f	file:	signature:(void *arg, PRFileDesc *fd)
nss_handshake_cb	src/crypto/tls_nss.c	/^static void nss_handshake_cb(PRFileDesc *fd, void *client_data)$/;"	f	file:	signature:(PRFileDesc *fd, void *client_data)
nss_hash	src/crypto/crypto_nss.c	/^static int nss_hash(HASH_HashType type, unsigned int max_res_len,$/;"	f	file:	signature:(HASH_HashType type, unsigned int max_res_len, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
nss_io	src/crypto/tls_nss.c	/^static const PRIOMethods nss_io = {$/;"	v	file:
nss_io_close	src/crypto/tls_nss.c	/^static PRStatus nss_io_close(PRFileDesc *fd)$/;"	f	file:	signature:(PRFileDesc *fd)
nss_io_getpeername	src/crypto/tls_nss.c	/^static PRStatus nss_io_getpeername(PRFileDesc *fd, PRNetAddr *addr)$/;"	f	file:	signature:(PRFileDesc *fd, PRNetAddr *addr)
nss_io_getsocketoption	src/crypto/tls_nss.c	/^static PRStatus nss_io_getsocketoption(PRFileDesc *fd,$/;"	f	file:	signature:(PRFileDesc *fd, PRSocketOptionData *data)
nss_io_read	src/crypto/tls_nss.c	/^static PRInt32 nss_io_read(PRFileDesc *fd, void *buf, PRInt32 amount)$/;"	f	file:	signature:(PRFileDesc *fd, void *buf, PRInt32 amount)
nss_io_recv	src/crypto/tls_nss.c	/^static PRInt32 nss_io_recv(PRFileDesc *fd, void *buf, PRInt32 amount,$/;"	f	file:	signature:(PRFileDesc *fd, void *buf, PRInt32 amount, PRIntn flags, PRIntervalTime timeout)
nss_io_recvfrom	src/crypto/tls_nss.c	/^static PRInt32 nss_io_recvfrom(PRFileDesc *fd, void *buf, PRInt32 amount,$/;"	f	file:	signature:(PRFileDesc *fd, void *buf, PRInt32 amount, PRIntn flags, PRNetAddr *addr, PRIntervalTime timeout)
nss_io_send	src/crypto/tls_nss.c	/^static PRInt32 nss_io_send(PRFileDesc *fd, const void *buf, PRInt32 amount,$/;"	f	file:	signature:(PRFileDesc *fd, const void *buf, PRInt32 amount, PRIntn flags, PRIntervalTime timeout)
nss_io_sendto	src/crypto/tls_nss.c	/^static PRInt32 nss_io_sendto(PRFileDesc *fd, const void *buf, PRInt32 amount,$/;"	f	file:	signature:(PRFileDesc *fd, const void *buf, PRInt32 amount, PRIntn flags, const PRNetAddr *addr, PRIntervalTime timeout)
nss_io_write	src/crypto/tls_nss.c	/^static PRInt32 nss_io_write(PRFileDesc *fd, const void *buf, PRInt32 amount)$/;"	f	file:	signature:(PRFileDesc *fd, const void *buf, PRInt32 amount)
nss_io_writev	src/crypto/tls_nss.c	/^static PRInt32 nss_io_writev(PRFileDesc *fd, const PRIOVec *iov,$/;"	f	file:	signature:(PRFileDesc *fd, const PRIOVec *iov, PRInt32 iov_size, PRIntervalTime timeout)
nss_layer_id	src/crypto/tls_nss.c	/^static PRDescIdentity nss_layer_id;$/;"	v	file:
nss_password_cb	src/crypto/tls_nss.c	/^static char * nss_password_cb(PK11SlotInfo *slot, PRBool retry, void *arg)$/;"	f	file:	signature:(PK11SlotInfo *slot, PRBool retry, void *arg)
nt_challenge_response	src/crypto/ms_funcs.c	/^int nt_challenge_response(const u8 *challenge, const u8 *password,$/;"	f	signature:(const u8 *challenge, const u8 *password, size_t password_len, u8 *response)
nt_challenge_response	src/crypto/ms_funcs.h	/^int nt_challenge_response(const u8 *challenge, const u8 *password,$/;"	p	signature:(const u8 *challenge, const u8 *password, size_t password_len, u8 *response)
nt_password_hash	src/crypto/ms_funcs.c	/^int nt_password_hash(const u8 *password, size_t password_len,$/;"	f	signature:(const u8 *password, size_t password_len, u8 *password_hash)
nt_password_hash	src/crypto/ms_funcs.h	/^int nt_password_hash(const u8 *password, size_t password_len,$/;"	p	signature:(const u8 *password, size_t password_len, u8 *password_hash)
nt_password_hash_encrypted_with_block	src/crypto/ms_funcs.c	/^void nt_password_hash_encrypted_with_block(const u8 *password_hash,$/;"	f	signature:(const u8 *password_hash, const u8 *block, u8 *cypher)
nt_password_hash_encrypted_with_block	src/crypto/ms_funcs.h	/^void nt_password_hash_encrypted_with_block(const u8 *password_hash,$/;"	p	signature:(const u8 *password_hash, const u8 *block, u8 *cypher)
nt_response	src/eap_peer/eap_mschapv2.c	/^	u8 nt_response[MSCHAPV2_NT_RESPONSE_LEN];$/;"	m	struct:ms_change_password	file:	access:public
nt_response	src/eap_peer/eap_mschapv2.c	/^	u8 nt_response[MSCHAPV2_NT_RESPONSE_LEN];$/;"	m	struct:ms_response	file:	access:public
num	src/drivers/driver.h	/^	size_t num;$/;"	m	struct:wpa_scan_results	access:public
num_accept_mac	src/ap/ap_config.h	/^	int num_accept_mac;$/;"	m	struct:hostapd_bss_config	access:public
num_acct_handlers	src/radius/radius_client.c	/^	size_t num_acct_handlers;$/;"	m	struct:radius_client_data	file:	access:public
num_acct_servers	src/radius/radius_client.h	/^	int num_acct_servers;$/;"	m	struct:hostapd_radius_servers	access:public
num_ap	src/ap/hostapd.h	/^	int num_ap; \/* number of entries in ap_list *\/$/;"	m	struct:hostapd_iface	access:public
num_areas	src/drivers/driver_hostap.h	/^	u32 num_areas;$/;"	m	struct:prism2_download_param	access:public
num_attr	src/tls/x509v3.h	/^	size_t num_attr;$/;"	m	struct:x509_name	access:public
num_auth_handlers	src/radius/radius_client.c	/^	size_t num_auth_handlers;$/;"	m	struct:radius_client_data	file:	access:public
num_auth_servers	src/radius/radius_client.h	/^	int num_auth_servers;$/;"	m	struct:hostapd_radius_servers	access:public
num_beacons	src/ap/ap_list.h	/^	unsigned int num_beacons; \/* number of beacon frames received *\/$/;"	m	struct:ap_info	access:public
num_bitrates	src/drivers/wireless_copy.h	/^	__u8		num_bitrates;	\/* Number of entries in the list *\/$/;"	m	struct:iw_range	access:public
num_bits_set	src/wps/wps_validate.c	/^static int num_bits_set(u16 val)$/;"	f	file:	signature:(u16 val)
num_bridge	src/drivers/driver.h	/^	size_t num_bridge;$/;"	m	struct:wpa_init_params	access:public
num_bss	src/ap/ap_config.h	/^	size_t num_bss;     \/\/ 当前接口下bss的数量，同时也代表了有多少个网桥$/;"	m	struct:hostapd_config	access:public
num_bss	src/ap/hostapd.h	/^	size_t num_bss;                         \/\/ 接口中bss数量$/;"	m	struct:hostapd_iface	access:public
num_chal	src/eap_common/eap_sim_common.h	/^	size_t num_chal, version_list_len, encr_data_len;$/;"	m	struct:eap_sim_attrs	access:public
num_chal	src/eap_peer/eap_sim.c	/^	size_t min_num_chal, num_chal;$/;"	m	struct:eap_sim_data	file:	access:public
num_chal	src/eap_server/eap_server_sim.c	/^	int num_chal;$/;"	m	struct:eap_sim_data	file:	access:public
num_chal	src/eap_server/eap_sim_db.c	/^			int num_chal;$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
num_channels	src/drivers/driver.h	/^	int num_channels;$/;"	m	struct:hostapd_hw_modes	access:public
num_channels	src/drivers/wireless_copy.h	/^	__u16		num_channels;	\/* Number of channels [0; num - 1] *\/$/;"	m	struct:iw_range	access:public
num_channels	src/drivers/wireless_copy.h	/^	__u8		num_channels; \/* num entries in channel_list;$/;"	m	struct:iw_scan_req	access:public
num_cipher_suites	src/tls/tlsv1_client_i.h	/^	size_t num_cipher_suites;$/;"	m	struct:tlsv1_client	access:public
num_cipher_suites	src/tls/tlsv1_server_i.h	/^	size_t num_cipher_suites;$/;"	m	struct:tlsv1_server	access:public
num_clients	src/p2p/p2p_i.h	/^	unsigned int num_clients;$/;"	m	struct:p2p_group_info	access:public
num_cred	src/wps/wps_i.h	/^	size_t num_cred;$/;"	m	struct:wps_parse_attr	access:public
num_deny_mac	src/ap/ap_config.h	/^	int num_deny_mac;$/;"	m	struct:hostapd_bss_config	access:public
num_encoding_sizes	src/drivers/wireless_copy.h	/^	__u8	num_encoding_sizes;	\/* Number of entry in the list *\/$/;"	m	struct:iw_range	access:public
num_events_in_sec	src/wps/wps_upnp_i.h	/^	unsigned int num_events_in_sec;$/;"	m	struct:upnp_wps_device_sm	access:public
num_failures	src/wps/wps_upnp_i.h	/^	unsigned num_failures;$/;"	m	struct:subscr_addr	access:public
num_fast_poll	src/l2_packet/l2_packet_pcap.c	/^	unsigned int num_fast_poll;$/;"	m	struct:l2_packet_data	file:	access:public
num_fast_poll	src/l2_packet/l2_packet_winpcap.c	/^	unsigned int num_fast_poll;$/;"	m	struct:l2_packet_data	file:	access:public
num_filter_ssids	src/drivers/driver.h	/^	size_t num_filter_ssids;$/;"	m	struct:wpa_driver_scan_params	access:public
num_filter_ssids	src/drivers/driver_nl80211.c	/^	size_t num_filter_ssids;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
num_freqs	src/drivers/driver.h	/^		size_t num_freqs;$/;"	m	struct:wpa_event_data::scan_info	access:public
num_frequency	src/drivers/wireless_copy.h	/^	__u8		num_frequency;	\/* Number of entry in the list *\/$/;"	m	struct:iw_range	access:public
num_groups	src/p2p/p2p_i.h	/^	size_t num_groups;$/;"	m	struct:p2p_data	access:public
num_handles	src/utils/eloop_win.c	/^	size_t num_handles;$/;"	m	struct:eloop_data	file:	access:public
num_hw_features	src/ap/hostapd.h	/^	int num_hw_features;$/;"	m	struct:hostapd_iface	access:public
num_id_req	src/eap_peer/eap_aka.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_aka_data	file:	access:public
num_id_req	src/eap_peer/eap_sim.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_sim_data	file:	access:public
num_if_indices	src/drivers/driver_nl80211.c	/^	int num_if_indices;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
num_members	src/p2p/p2p_group.c	/^	unsigned int num_members;$/;"	m	struct:p2p_group	file:	access:public
num_modes	src/drivers/driver_nl80211.c	/^	u16 *num_modes;$/;"	m	struct:phy_info_arg	file:	access:public
num_msgs	src/radius/radius_client.c	/^	size_t num_msgs;$/;"	m	struct:radius_client_data	file:	access:public
num_notification	src/eap_peer/eap_aka.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_aka_data	file:	access:public
num_notification	src/eap_peer/eap_sim.c	/^	int num_id_req, num_notification;$/;"	m	struct:eap_sim_data	file:	access:public
num_phase2_eap_types	src/eap_peer/eap_ttls.c	/^	size_t num_phase2_eap_types;$/;"	m	struct:eap_ttls_data	file:	access:public
num_phase2_types	src/eap_peer/eap_fast.c	/^	size_t num_phase2_types;$/;"	m	struct:eap_fast_data	file:	access:public
num_phase2_types	src/eap_peer/eap_peap.c	/^	size_t num_phase2_types;$/;"	m	struct:eap_peap_data	file:	access:public
num_pmkid	src/common/wpa_common.h	/^	size_t num_pmkid;$/;"	m	struct:wpa_ie_data	access:public
num_pref_chan	src/p2p/p2p.h	/^	unsigned int num_pref_chan;$/;"	m	struct:p2p_config	access:public
num_probereq_cb	src/ap/hostapd.h	/^	size_t num_probereq_cb;$/;"	m	struct:hostapd_data	access:public
num_ps_buf_frames	src/drivers/driver.h	/^	unsigned long num_ps_buf_frames;$/;"	m	struct:hostap_sta_driver_data	access:public
num_rates	src/ap/hostapd.h	/^	int num_rates;$/;"	m	struct:hostapd_iface	access:public
num_rates	src/drivers/driver.h	/^	int num_rates;$/;"	m	struct:hostapd_hw_modes	access:public
num_req_dev_type	src/wps/wps_i.h	/^	size_t num_req_dev_type;$/;"	m	struct:wps_parse_attr	access:public
num_req_dev_types	src/p2p/p2p_i.h	/^	unsigned int num_req_dev_types;$/;"	m	struct:p2p_data	access:public
num_rounds	src/eap_peer/eap_i.h	/^	int num_rounds;$/;"	m	struct:eap_sm	access:public
num_rounds	src/eap_server/eap_i.h	/^	int num_rounds;$/;"	m	struct:eap_sm	access:public
num_scanres	src/drivers/driver_test.c	/^	size_t num_scanres;$/;"	m	struct:wpa_driver_test_data	file:	access:public
num_sec_dev_types	src/drivers/driver.h	/^	size_t num_sec_dev_types;$/;"	m	struct:p2p_params	access:public
num_sec_dev_types	src/p2p/p2p.h	/^	size_t num_sec_dev_types;$/;"	m	struct:p2p_config	access:public
num_sec_dev_types	src/p2p/p2p_i.h	/^		u8 num_sec_dev_types;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
num_sec_dev_types	src/p2p/p2p_i.h	/^	u8 num_sec_dev_types;$/;"	m	struct:p2p_message	access:public
num_sec_dev_types	src/wps/wps.h	/^	u8 num_sec_dev_types;$/;"	m	struct:wps_device_data	access:public
num_sess	src/radius/radius_server.c	/^	int num_sess;$/;"	m	struct:radius_server_data	file:	access:public
num_ssids	src/drivers/driver.h	/^		size_t num_ssids;$/;"	m	struct:wpa_event_data::scan_info	access:public
num_ssids	src/drivers/driver.h	/^	size_t num_ssids;$/;"	m	struct:wpa_driver_scan_params	access:public
num_sta	src/ap/hostapd.h	/^	int num_sta; \/* number of entries in sta_list 链表形式站表中入口数量*\/$/;"	m	struct:hostapd_data	access:public
num_sta_ht_20mhz	src/ap/hostapd.h	/^	int num_sta_ht_20mhz;$/;"	m	struct:hostapd_iface	access:public
num_sta_ht_no_gf	src/ap/hostapd.h	/^	int num_sta_ht_no_gf;$/;"	m	struct:hostapd_iface	access:public
num_sta_no_ht	src/ap/hostapd.h	/^	int num_sta_no_ht;$/;"	m	struct:hostapd_iface	access:public
num_sta_no_p2p	src/ap/hostapd.h	/^	int num_sta_no_p2p;$/;"	m	struct:hostapd_data	access:public
num_sta_no_short_preamble	src/ap/hostapd.h	/^	int num_sta_no_short_preamble;$/;"	m	struct:hostapd_iface	access:public
num_sta_no_short_slot_time	src/ap/hostapd.h	/^	int num_sta_no_short_slot_time;$/;"	m	struct:hostapd_iface	access:public
num_sta_non_erp	src/ap/hostapd.h	/^	int num_sta_non_erp;$/;"	m	struct:hostapd_iface	access:public
num_supported_types	src/eap_peer/tncc.c	/^	size_t num_supported_types;$/;"	m	struct:tnc_if_imc	file:	access:public
num_supported_types	src/eap_server/tncs.c	/^	size_t num_supported_types;$/;"	m	struct:tnc_if_imv	file:	access:public
num_transforms	src/eap_common/ikev2_common.h	/^	u8 num_transforms;$/;"	m	struct:ikev2_proposal	access:public
num_txpower	src/drivers/wireless_copy.h	/^	__u8		num_txpower;	\/* Number of entries in the list *\/$/;"	m	struct:iw_range	access:public
num_vendor_ext	src/wps/wps_i.h	/^	size_t num_vendor_ext;$/;"	m	struct:wps_parse_attr	access:public
nwid	src/drivers/wireless_copy.h	/^	__u32		nwid;		\/* Rx : Wrong nwid\/essid *\/$/;"	m	struct:iw_discarded	access:public
nwid	src/drivers/wireless_copy.h	/^	struct iw_param	nwid;		\/* network id (or domain - the cell) *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
off_channel_freq	src/drivers/driver_test.c	/^	unsigned int off_channel_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
offsetof	src/utils/list.h	68;"	d
oi	src/ap/ap_config.h	/^	u8 oi[MAX_ROAMING_CONSORTIUM_LEN];$/;"	m	struct:hostapd_roaming_consortium	access:public
oid	src/tls/asn1.h	/^	unsigned long oid[ASN1_MAX_OID_LEN];$/;"	m	struct:asn1_oid	access:public
oid	src/tls/x509v3.h	/^	struct asn1_oid oid;$/;"	m	struct:x509_algorithm_identifier	typeref:struct:x509_algorithm_identifier::asn1_oid	access:public
oid_bssid_set	src/drivers/driver_ndis.h	/^	int oid_bssid_set;$/;"	m	struct:wpa_driver_ndis_data	access:public
okc	src/ap/ap_config.h	/^	int okc; \/* Opportunistic Key Caching *\/$/;"	m	struct:hostapd_bss_config	access:public
okc	src/ap/wpa_auth.h	/^	int okc;$/;"	m	struct:wpa_auth_config	access:public
olbc	src/ap/hostapd.h	/^	int olbc; \/* Overlapping Legacy BSS Condition *\/$/;"	m	struct:hostapd_iface	access:public
olbc_ht	src/ap/hostapd.h	/^	int olbc_ht;$/;"	m	struct:hostapd_iface	access:public
old_nt_password_hash_encrypted_with_new_nt_password_hash	src/crypto/ms_funcs.c	/^int old_nt_password_hash_encrypted_with_new_nt_password_hash($/;"	f	signature:( const u8 *new_password, size_t new_password_len, const u8 *old_password, size_t old_password_len, u8 *encrypted_password_hash)
old_nt_password_hash_encrypted_with_new_nt_password_hash	src/crypto/ms_funcs.h	/^int old_nt_password_hash_encrypted_with_new_nt_password_hash($/;"	p	signature:( const u8 *new_password, size_t new_password_len, const u8 *old_password, size_t old_password_len, u8 *encrypted_password_hash)
old_num_channels	src/drivers/wireless_copy.h	/^	__u16		old_num_channels;$/;"	m	struct:iw_range	access:public
old_num_frequency	src/drivers/wireless_copy.h	/^	__u8		old_num_frequency;$/;"	m	struct:iw_range	access:public
omac1_aes_128	src/crypto/aes-omac1.c	/^int omac1_aes_128(const u8 *key, const u8 *data, size_t data_len, u8 *mac)$/;"	f	signature:(const u8 *key, const u8 *data, size_t data_len, u8 *mac)
omac1_aes_128	src/crypto/aes_wrap.h	/^int __must_check omac1_aes_128(const u8 *key, const u8 *data, size_t data_len,$/;"	p	signature:(const u8 *key, const u8 *data, size_t data_len, u8 *mac)
omac1_aes_128_vector	src/crypto/aes-omac1.c	/^int omac1_aes_128_vector(const u8 *key, size_t num_elem,$/;"	f	signature:(const u8 *key, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
omac1_aes_128_vector	src/crypto/aes_wrap.h	/^int __must_check omac1_aes_128_vector(const u8 *key, size_t num_elem,$/;"	p	signature:(const u8 *key, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
oob_conf	src/wps/wps.h	/^	struct oob_conf_data oob_conf;$/;"	m	struct:wps_context	typeref:struct:wps_context::oob_conf_data	access:public
oob_conf_data	src/wps/wps.h	/^struct oob_conf_data {$/;"	s
oob_conf_data::OOB_METHOD_CRED	src/wps/wps.h	/^		OOB_METHOD_CRED,$/;"	e	enum:oob_conf_data::__anon30
oob_conf_data::OOB_METHOD_DEV_PWD_E	src/wps/wps.h	/^		OOB_METHOD_DEV_PWD_E,$/;"	e	enum:oob_conf_data::__anon30
oob_conf_data::OOB_METHOD_DEV_PWD_R	src/wps/wps.h	/^		OOB_METHOD_DEV_PWD_R,$/;"	e	enum:oob_conf_data::__anon30
oob_conf_data::OOB_METHOD_UNKNOWN	src/wps/wps.h	/^		OOB_METHOD_UNKNOWN = 0,$/;"	e	enum:oob_conf_data::__anon30
oob_conf_data::dev_password	src/wps/wps.h	/^	struct wpabuf *dev_password;$/;"	m	struct:oob_conf_data	typeref:struct:oob_conf_data::wpabuf	access:public
oob_conf_data::oob_method	src/wps/wps.h	/^	} oob_method;$/;"	m	struct:oob_conf_data	typeref:enum:oob_conf_data::__anon30	access:public
oob_conf_data::pubkey_hash	src/wps/wps.h	/^	struct wpabuf *pubkey_hash;$/;"	m	struct:oob_conf_data	typeref:struct:oob_conf_data::wpabuf	access:public
oob_dev_password	src/wps/wps_i.h	/^	const u8 *oob_dev_password; \/* WPS_OOB_DEVICE_PASSWORD_ATTR_LEN (54)$/;"	m	struct:wps_parse_attr	access:public
oob_dev_pw_id	src/wps/wps.h	/^	u16 oob_dev_pw_id;$/;"	m	struct:wps_context	access:public
oob_device_data	src/wps/wps.h	/^struct oob_device_data {$/;"	s
oob_device_data::deinit_func	src/wps/wps.h	/^	void (*deinit_func)(void *);$/;"	m	struct:oob_device_data	access:public
oob_device_data::device_name	src/wps/wps.h	/^	char *device_name;$/;"	m	struct:oob_device_data	access:public
oob_device_data::device_path	src/wps/wps.h	/^	char *device_path;$/;"	m	struct:oob_device_data	access:public
oob_device_data::init_func	src/wps/wps.h	/^	void * (*init_func)(struct wps_context *, struct oob_device_data *,$/;"	m	struct:oob_device_data	access:public
oob_device_data::read_func	src/wps/wps.h	/^	struct wpabuf * (*read_func)(void *);$/;"	m	struct:oob_device_data	typeref:struct:oob_device_data::read_func	access:public
oob_device_data::write_func	src/wps/wps.h	/^	int (*write_func)(void *, struct wpabuf *);$/;"	m	struct:oob_device_data	access:public
oob_method	src/wps/wps.h	/^	} oob_method;$/;"	m	struct:oob_conf_data	typeref:enum:oob_conf_data::__anon30	access:public
oob_nfc_dev	src/wps/wps_nfc.c	/^	struct oob_nfc_device_data *oob_nfc_dev;$/;"	m	struct:wps_nfc_data	typeref:struct:wps_nfc_data::oob_nfc_device_data	file:	access:public
oob_nfc_device_data	src/wps/wps.h	/^struct oob_nfc_device_data {$/;"	s
oob_nfc_device_data	src/wps/wps_nfc.c	/^struct oob_device_data oob_nfc_device_data = {$/;"	v	typeref:struct:oob_device_data
oob_nfc_device_data::deinit_func	src/wps/wps.h	/^	void (*deinit_func)(void);$/;"	m	struct:oob_nfc_device_data	access:public
oob_nfc_device_data::init_func	src/wps/wps.h	/^	int (*init_func)(char *);$/;"	m	struct:oob_nfc_device_data	access:public
oob_nfc_device_data::read_func	src/wps/wps.h	/^	void * (*read_func)(size_t *);$/;"	m	struct:oob_nfc_device_data	access:public
oob_nfc_device_data::write_func	src/wps/wps.h	/^	int (*write_func)(void *, size_t);$/;"	m	struct:oob_nfc_device_data	access:public
oob_nfc_pn531_device_data	src/wps/wps_nfc_pn531.c	/^struct oob_nfc_device_data oob_nfc_pn531_device_data = {$/;"	v	typeref:struct:oob_nfc_device_data
oob_ufd_device_data	src/wps/wps_ufd.c	/^struct oob_device_data oob_ufd_device_data = {$/;"	v	typeref:struct:oob_device_data
op	src/drivers/driver_wired.c	/^	u_int8_t op;$/;"	m	struct:dhcp_message	file:	access:public
op	src/drivers/rfkill.c	/^	u8 op;$/;"	m	struct:rfkill_event	file:	access:public
op_channel	src/p2p/p2p.h	/^	u8 op_channel;$/;"	m	struct:p2p_config	access:public
op_channel	src/p2p/p2p_i.h	/^	u8 op_channel;$/;"	m	struct:p2p_data	access:public
op_class	src/p2p/p2p.h	/^	u8 op_class;$/;"	m	struct:p2p_channel	access:public
op_code	src/eap_common/eap_pax_common.h	/^	u8 op_code;$/;"	m	struct:eap_pax_hdr	access:public
op_code	src/eap_peer/eap_mschapv2.c	/^	u8 op_code; \/* MSCHAPV2_OP_* *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
op_code	src/eap_server/eap_server_mschapv2.c	/^	u8 op_code; \/* MSCHAPV2_OP_* *\/$/;"	m	struct:eap_mschapv2_hdr	file:	access:public
op_reg_class	src/p2p/p2p.h	/^	u8 op_reg_class;$/;"	m	struct:p2p_config	access:public
op_reg_class	src/p2p/p2p_i.h	/^	u8 op_reg_class;$/;"	m	struct:p2p_data	access:public
opaque	src/crypto/tls_gnutls.c	/^typedef unsigned char opaque;$/;"	t	file:
opc	hostapd/hlr_auc_gw.c	/^	u8 opc[16];$/;"	m	struct:milenage_parameters	file:	access:public
open_bfd	src/utils/trace.c	/^static bfd * open_bfd(const char *fname)$/;"	f	file:	signature:(const char *fname)
open_socket	hostapd/hlr_auc_gw.c	/^static int open_socket(const char *path)$/;"	f	file:	signature:(const char *path)
opensc_engine_path	src/crypto/tls.h	/^	const char *opensc_engine_path;$/;"	m	struct:tls_config	access:public
opensc_engine_path	src/eap_peer/eap.h	/^	const char *opensc_engine_path;$/;"	m	struct:eap_config	access:public
opensc_engine_path	src/eapol_supp/eapol_supp_sm.h	/^	const char *opensc_engine_path;$/;"	m	struct:eapol_ctx	access:public
openssl_connection_handshake	src/crypto/tls_openssl.c	/^openssl_connection_handshake(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data, int server)
openssl_digest_vector	src/crypto/crypto_openssl.c	/^static int openssl_digest_vector(const EVP_MD *type, int non_fips,$/;"	f	file:	signature:(const EVP_MD *type, int non_fips, size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
openssl_get_appl_data	src/crypto/tls_openssl.c	/^openssl_get_appl_data(struct tls_connection *conn, size_t max_len)$/;"	f	file:	signature:(struct tls_connection *conn, size_t max_len)
openssl_handshake	src/crypto/tls_openssl.c	/^openssl_handshake(struct tls_connection *conn, const struct wpabuf *in_data,$/;"	f	file:	signature:(struct tls_connection *conn, const struct wpabuf *in_data, int server)
openssl_tls_cert_event	src/crypto/tls_openssl.c	/^static void openssl_tls_cert_event(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, X509 *err_cert, int depth, const char *subject)
openssl_tls_fail_event	src/crypto/tls_openssl.c	/^static void openssl_tls_fail_event(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, X509 *err_cert, int err, int depth, const char *subject, const char *err_str, enum tls_fail_reason reason)
openssl_tls_fail_reason	src/crypto/tls_openssl.c	/^static enum tls_fail_reason openssl_tls_fail_reason(int err)$/;"	f	file:	signature:(int err)
oper	src/drivers/driver.h	/^		} oper;$/;"	m	struct:wpa_event_data::tdls	typeref:enum:wpa_event_data::tdls::__anon91	access:public
operControlledDirections	src/eapol_auth/eapol_auth_sm_i.h	/^	ControlledDirection operControlledDirections;   \/\/ 受控方向，本值会被CTRL_DIR SM写入adminControlledDirections$/;"	m	struct:eapol_state_machine	access:public
operEdge	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean operEdge;                               \/\/ 端口没有开启VLAN时，此标志位设置为TRUE$/;"	m	struct:eapol_state_machine	access:public
oper_freq	src/p2p/p2p_i.h	/^	int oper_freq;$/;"	m	struct:p2p_device	access:public
oper_ssid	src/p2p/p2p_i.h	/^	u8 oper_ssid[32];$/;"	m	struct:p2p_device	access:public
oper_ssid_len	src/p2p/p2p_i.h	/^	size_t oper_ssid_len;$/;"	m	struct:p2p_device	access:public
operating_channel	src/p2p/p2p_i.h	/^	const u8 *operating_channel;$/;"	m	struct:p2p_message	access:public
operation_mode	src/common/ieee802_11_defs.h	/^	le16 operation_mode;$/;"	m	struct:ieee80211_ht_operation	access:public
operstate	src/drivers/driver_nl80211.c	/^	int operstate;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
operstate	src/drivers/driver_wext.h	/^	int operstate;$/;"	m	struct:wpa_driver_wext_data	access:public
opportunistic	src/ap/pmksa_cache_auth.h	/^	int opportunistic;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
opportunistic	src/rsn_supp/pmksa_cache.h	/^	int opportunistic;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
optarg	src/utils/common.c	/^char *optarg;$/;"	v
optind	src/utils/common.c	/^int optind = 1;$/;"	v
options	src/drivers/driver_wired.c	/^	u_int8_t options[308]; \/* 312 - cookie *\/$/;"	m	struct:dhcp_message	file:	access:public
optopt	src/utils/common.c	/^int optopt;$/;"	v
order	src/eap_common/eap_pwd_common.h	/^	BIGNUM *order;$/;"	m	struct:group_definition_	access:public
os_alloc_trace	src/utils/os_unix.c	/^struct os_alloc_trace {$/;"	s	file:
os_alloc_trace::len	src/utils/os_unix.c	/^	size_t len;$/;"	m	struct:os_alloc_trace	file:	access:public
os_alloc_trace::list	src/utils/os_unix.c	/^	struct dl_list list;$/;"	m	struct:os_alloc_trace	typeref:struct:os_alloc_trace::dl_list	file:	access:public
os_alloc_trace::magic	src/utils/os_unix.c	/^	unsigned int magic;$/;"	m	struct:os_alloc_trace	file:	access:public
os_daemon	src/utils/os_unix.c	/^static int os_daemon(int nochdir, int noclose)$/;"	f	file:	signature:(int nochdir, int noclose)
os_daemon	src/utils/os_unix.c	158;"	d	file:
os_daemonize	src/utils/os.h	/^int os_daemonize(const char *pid_file);$/;"	p	signature:(const char *pid_file)
os_daemonize	src/utils/os_internal.c	/^int os_daemonize(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize	src/utils/os_none.c	/^int os_daemonize(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize	src/utils/os_unix.c	/^int os_daemonize(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize	src/utils/os_win32.c	/^int os_daemonize(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize_terminate	src/utils/os.h	/^void os_daemonize_terminate(const char *pid_file);$/;"	p	signature:(const char *pid_file)
os_daemonize_terminate	src/utils/os_internal.c	/^void os_daemonize_terminate(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize_terminate	src/utils/os_none.c	/^void os_daemonize_terminate(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize_terminate	src/utils/os_unix.c	/^void os_daemonize_terminate(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_daemonize_terminate	src/utils/os_win32.c	/^void os_daemonize_terminate(const char *pid_file)$/;"	f	signature:(const char *pid_file)
os_free	src/utils/os.h	/^void os_free(void *ptr);$/;"	p	signature:(void *ptr)
os_free	src/utils/os.h	405;"	d
os_free	src/utils/os_internal.c	/^void os_free(void *ptr)$/;"	f	signature:(void *ptr)
os_free	src/utils/os_none.c	/^void os_free(void *ptr)$/;"	f	signature:(void *ptr)
os_free	src/utils/os_unix.c	/^void os_free(void *ptr)$/;"	f	signature:(void *ptr)
os_get_random	src/utils/os.h	/^int os_get_random(unsigned char *buf, size_t len);$/;"	p	signature:(unsigned char *buf, size_t len)
os_get_random	src/utils/os_internal.c	/^int os_get_random(unsigned char *buf, size_t len)$/;"	f	signature:(unsigned char *buf, size_t len)
os_get_random	src/utils/os_none.c	/^int os_get_random(unsigned char *buf, size_t len)$/;"	f	signature:(unsigned char *buf, size_t len)
os_get_random	src/utils/os_unix.c	/^int os_get_random(unsigned char *buf, size_t len)$/;"	f	signature:(unsigned char *buf, size_t len)
os_get_random	src/utils/os_win32.c	/^int os_get_random(unsigned char *buf, size_t len)$/;"	f	signature:(unsigned char *buf, size_t len)
os_get_time	src/utils/os.h	/^int os_get_time(struct os_time *t);$/;"	p	signature:(struct os_time *t)
os_get_time	src/utils/os_internal.c	/^int os_get_time(struct os_time *t)$/;"	f	signature:(struct os_time *t)
os_get_time	src/utils/os_none.c	/^int os_get_time(struct os_time *t)$/;"	f	signature:(struct os_time *t)
os_get_time	src/utils/os_unix.c	/^int os_get_time(struct os_time *t)$/;"	f	signature:(struct os_time *t)
os_get_time	src/utils/os_win32.c	/^int os_get_time(struct os_time *t)$/;"	f	signature:(struct os_time *t)
os_gmtime	src/utils/os.h	/^int os_gmtime(os_time_t t, struct os_tm *tm);$/;"	p	signature:(os_time_t t, struct os_tm *tm)
os_gmtime	src/utils/os_internal.c	/^int os_gmtime(os_time_t t, struct os_tm *tm)$/;"	f	signature:(os_time_t t, struct os_tm *tm)
os_gmtime	src/utils/os_none.c	/^int os_gmtime(os_time_t t, struct os_tm *tm)$/;"	f	signature:(os_time_t t, struct os_tm *tm)
os_gmtime	src/utils/os_unix.c	/^int os_gmtime(os_time_t t, struct os_tm *tm)$/;"	f	signature:(os_time_t t, struct os_tm *tm)
os_gmtime	src/utils/os_win32.c	/^int os_gmtime(os_time_t t, struct os_tm *tm)$/;"	f	signature:(os_time_t t, struct os_tm *tm)
os_malloc	src/utils/os.h	/^void * os_malloc(size_t size);$/;"	p	signature:(size_t size)
os_malloc	src/utils/os.h	399;"	d
os_malloc	src/utils/os_internal.c	/^void * os_malloc(size_t size)$/;"	f	signature:(size_t size)
os_malloc	src/utils/os_none.c	/^void * os_malloc(size_t size)$/;"	f	signature:(size_t size)
os_malloc	src/utils/os_unix.c	/^void * os_malloc(size_t size)$/;"	f	signature:(size_t size)
os_memcmp	src/utils/os.h	/^int os_memcmp(const void *s1, const void *s2, size_t n);$/;"	p	signature:(const void *s1, const void *s2, size_t n)
os_memcmp	src/utils/os.h	426;"	d
os_memcmp	src/utils/os_internal.c	/^int os_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	signature:(const void *s1, const void *s2, size_t n)
os_memcmp	src/utils/os_none.c	/^int os_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	signature:(const void *s1, const void *s2, size_t n)
os_memcpy	src/utils/os.h	/^void * os_memcpy(void *dest, const void *src, size_t n);$/;"	p	signature:(void *dest, const void *src, size_t n)
os_memcpy	src/utils/os.h	417;"	d
os_memcpy	src/utils/os_internal.c	/^void * os_memcpy(void *dest, const void *src, size_t n)$/;"	f	signature:(void *dest, const void *src, size_t n)
os_memcpy	src/utils/os_none.c	/^void * os_memcpy(void *dest, const void *src, size_t n)$/;"	f	signature:(void *dest, const void *src, size_t n)
os_memmove	src/utils/os.h	/^void * os_memmove(void *dest, const void *src, size_t n);$/;"	p	signature:(void *dest, const void *src, size_t n)
os_memmove	src/utils/os.h	420;"	d
os_memmove	src/utils/os_internal.c	/^void * os_memmove(void *dest, const void *src, size_t n)$/;"	f	signature:(void *dest, const void *src, size_t n)
os_memmove	src/utils/os_none.c	/^void * os_memmove(void *dest, const void *src, size_t n)$/;"	f	signature:(void *dest, const void *src, size_t n)
os_memset	src/utils/os.h	/^void * os_memset(void *s, int c, size_t n);$/;"	p	signature:(void *s, int c, size_t n)
os_memset	src/utils/os.h	423;"	d
os_memset	src/utils/os_internal.c	/^void * os_memset(void *s, int c, size_t n)$/;"	f	signature:(void *s, int c, size_t n)
os_memset	src/utils/os_none.c	/^void * os_memset(void *s, int c, size_t n)$/;"	f	signature:(void *s, int c, size_t n)
os_mktime	src/utils/os.h	/^int os_mktime(int year, int month, int day, int hour, int min, int sec,$/;"	p	signature:(int year, int month, int day, int hour, int min, int sec, os_time_t *t)
os_mktime	src/utils/os_internal.c	/^int os_mktime(int year, int month, int day, int hour, int min, int sec,$/;"	f	signature:(int year, int month, int day, int hour, int min, int sec, os_time_t *t)
os_mktime	src/utils/os_none.c	/^int os_mktime(int year, int month, int day, int hour, int min, int sec,$/;"	f	signature:(int year, int month, int day, int hour, int min, int sec, os_time_t *t)
os_mktime	src/utils/os_unix.c	/^int os_mktime(int year, int month, int day, int hour, int min, int sec,$/;"	f	signature:(int year, int month, int day, int hour, int min, int sec, os_time_t *t)
os_mktime	src/utils/os_win32.c	/^int os_mktime(int year, int month, int day, int hour, int min, int sec,$/;"	f	signature:(int year, int month, int day, int hour, int min, int sec, os_time_t *t)
os_program_deinit	src/utils/os.h	/^void os_program_deinit(void);$/;"	p	signature:(void)
os_program_deinit	src/utils/os_internal.c	/^void os_program_deinit(void)$/;"	f	signature:(void)
os_program_deinit	src/utils/os_none.c	/^void os_program_deinit(void)$/;"	f	signature:(void)
os_program_deinit	src/utils/os_unix.c	/^void os_program_deinit(void)$/;"	f	signature:(void)
os_program_deinit	src/utils/os_win32.c	/^void os_program_deinit(void)$/;"	f	signature:(void)
os_program_init	src/utils/os.h	/^int os_program_init(void);$/;"	p	signature:(void)
os_program_init	src/utils/os_internal.c	/^int os_program_init(void)$/;"	f	signature:(void)
os_program_init	src/utils/os_none.c	/^int os_program_init(void)$/;"	f	signature:(void)
os_program_init	src/utils/os_unix.c	/^int os_program_init(void)$/;"	f	signature:(void)
os_program_init	src/utils/os_win32.c	/^int os_program_init(void)$/;"	f	signature:(void)
os_random	src/utils/os.h	/^unsigned long os_random(void);$/;"	p	signature:(void)
os_random	src/utils/os_internal.c	/^unsigned long os_random(void)$/;"	f	signature:(void)
os_random	src/utils/os_none.c	/^unsigned long os_random(void)$/;"	f	signature:(void)
os_random	src/utils/os_unix.c	/^unsigned long os_random(void)$/;"	f	signature:(void)
os_random	src/utils/os_win32.c	/^unsigned long os_random(void)$/;"	f	signature:(void)
os_readfile	src/utils/os.h	/^char * os_readfile(const char *name, size_t *len);$/;"	p	signature:(const char *name, size_t *len)
os_readfile	src/utils/os_internal.c	/^char * os_readfile(const char *name, size_t *len)$/;"	f	signature:(const char *name, size_t *len)
os_readfile	src/utils/os_none.c	/^char * os_readfile(const char *name, size_t *len)$/;"	f	signature:(const char *name, size_t *len)
os_readfile	src/utils/os_unix.c	/^char * os_readfile(const char *name, size_t *len)$/;"	f	signature:(const char *name, size_t *len)
os_readfile	src/utils/os_win32.c	/^char * os_readfile(const char *name, size_t *len)$/;"	f	signature:(const char *name, size_t *len)
os_realloc	src/utils/os.h	/^void * os_realloc(void *ptr, size_t size);$/;"	p	signature:(void *ptr, size_t size)
os_realloc	src/utils/os.h	402;"	d
os_realloc	src/utils/os_internal.c	/^void * os_realloc(void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
os_realloc	src/utils/os_none.c	/^void * os_realloc(void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
os_realloc	src/utils/os_unix.c	/^void * os_realloc(void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
os_rel2abs_path	src/utils/os.h	/^char * os_rel2abs_path(const char *rel_path);$/;"	p	signature:(const char *rel_path)
os_rel2abs_path	src/utils/os_internal.c	/^char * os_rel2abs_path(const char *rel_path)$/;"	f	signature:(const char *rel_path)
os_rel2abs_path	src/utils/os_none.c	/^char * os_rel2abs_path(const char *rel_path)$/;"	f	signature:(const char *rel_path)
os_rel2abs_path	src/utils/os_unix.c	/^char * os_rel2abs_path(const char *rel_path)$/;"	f	signature:(const char *rel_path)
os_rel2abs_path	src/utils/os_win32.c	/^char * os_rel2abs_path(const char *rel_path)$/;"	f	signature:(const char *rel_path)
os_setenv	src/utils/os.h	/^int os_setenv(const char *name, const char *value, int overwrite);$/;"	p	signature:(const char *name, const char *value, int overwrite)
os_setenv	src/utils/os_internal.c	/^int os_setenv(const char *name, const char *value, int overwrite)$/;"	f	signature:(const char *name, const char *value, int overwrite)
os_setenv	src/utils/os_none.c	/^int os_setenv(const char *name, const char *value, int overwrite)$/;"	f	signature:(const char *name, const char *value, int overwrite)
os_setenv	src/utils/os_unix.c	/^int os_setenv(const char *name, const char *value, int overwrite)$/;"	f	signature:(const char *name, const char *value, int overwrite)
os_setenv	src/utils/os_win32.c	/^int os_setenv(const char *name, const char *value, int overwrite)$/;"	f	signature:(const char *name, const char *value, int overwrite)
os_sleep	src/utils/os.h	/^void os_sleep(os_time_t sec, os_time_t usec);$/;"	p	signature:(os_time_t sec, os_time_t usec)
os_sleep	src/utils/os_internal.c	/^void os_sleep(os_time_t sec, os_time_t usec)$/;"	f	signature:(os_time_t sec, os_time_t usec)
os_sleep	src/utils/os_none.c	/^void os_sleep(os_time_t sec, os_time_t usec)$/;"	f	signature:(os_time_t sec, os_time_t usec)
os_sleep	src/utils/os_unix.c	/^void os_sleep(os_time_t sec, os_time_t usec)$/;"	f	signature:(os_time_t sec, os_time_t usec)
os_sleep	src/utils/os_win32.c	/^void os_sleep(os_time_t sec, os_time_t usec)$/;"	f	signature:(os_time_t sec, os_time_t usec)
os_snprintf	src/utils/os.h	/^int os_snprintf(char *str, size_t size, const char *format, ...);$/;"	p	signature:(char *str, size_t size, const char *format, ...)
os_snprintf	src/utils/os.h	467;"	d
os_snprintf	src/utils/os.h	469;"	d
os_snprintf	src/utils/os_internal.c	/^int os_snprintf(char *str, size_t size, const char *format, ...)$/;"	f	signature:(char *str, size_t size, const char *format, ...)
os_snprintf	src/utils/os_none.c	/^int os_snprintf(char *str, size_t size, const char *format, ...)$/;"	f	signature:(char *str, size_t size, const char *format, ...)
os_strcasecmp	src/utils/os.h	/^int os_strcasecmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
os_strcasecmp	src/utils/os.h	434;"	d
os_strcasecmp	src/utils/os.h	436;"	d
os_strcasecmp	src/utils/os_internal.c	/^int os_strcasecmp(const char *s1, const char *s2)$/;"	f	signature:(const char *s1, const char *s2)
os_strcasecmp	src/utils/os_none.c	/^int os_strcasecmp(const char *s1, const char *s2)$/;"	f	signature:(const char *s1, const char *s2)
os_strchr	src/utils/os.h	/^char * os_strchr(const char *s, int c);$/;"	p	signature:(const char *s, int c)
os_strchr	src/utils/os.h	447;"	d
os_strchr	src/utils/os_internal.c	/^char * os_strchr(const char *s, int c)$/;"	f	signature:(const char *s, int c)
os_strchr	src/utils/os_none.c	/^char * os_strchr(const char *s, int c)$/;"	f	signature:(const char *s, int c)
os_strcmp	src/utils/os.h	/^int os_strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
os_strcmp	src/utils/os.h	450;"	d
os_strcmp	src/utils/os_internal.c	/^int os_strcmp(const char *s1, const char *s2)$/;"	f	signature:(const char *s1, const char *s2)
os_strcmp	src/utils/os_none.c	/^int os_strcmp(const char *s1, const char *s2)$/;"	f	signature:(const char *s1, const char *s2)
os_strdup	src/utils/os.h	/^char * os_strdup(const char *s);$/;"	p	signature:(const char *s)
os_strdup	src/utils/os.h	409;"	d
os_strdup	src/utils/os.h	411;"	d
os_strdup	src/utils/os_internal.c	/^char * os_strdup(const char *s)$/;"	f	signature:(const char *s)
os_strdup	src/utils/os_none.c	/^char * os_strdup(const char *s)$/;"	f	signature:(const char *s)
os_strdup	src/utils/os_unix.c	/^char * os_strdup(const char *s)$/;"	f	signature:(const char *s)
os_strlcpy	src/utils/os.h	/^size_t os_strlcpy(char *dest, const char *src, size_t siz);$/;"	p	signature:(char *dest, const char *src, size_t siz)
os_strlcpy	src/utils/os_internal.c	/^size_t os_strlcpy(char *dest, const char *src, size_t siz)$/;"	f	signature:(char *dest, const char *src, size_t siz)
os_strlcpy	src/utils/os_none.c	/^size_t os_strlcpy(char *dest, const char *src, size_t size)$/;"	f	signature:(char *dest, const char *src, size_t size)
os_strlcpy	src/utils/os_unix.c	/^size_t os_strlcpy(char *dest, const char *src, size_t siz)$/;"	f	signature:(char *dest, const char *src, size_t siz)
os_strlcpy	src/utils/os_win32.c	/^size_t os_strlcpy(char *dest, const char *src, size_t siz)$/;"	f	signature:(char *dest, const char *src, size_t siz)
os_strlen	src/utils/os.h	/^size_t os_strlen(const char *s);$/;"	p	signature:(const char *s)
os_strlen	src/utils/os.h	430;"	d
os_strlen	src/utils/os_internal.c	/^size_t os_strlen(const char *s)$/;"	f	signature:(const char *s)
os_strlen	src/utils/os_none.c	/^size_t os_strlen(const char *s)$/;"	f	signature:(const char *s)
os_strncasecmp	src/utils/os.h	/^int os_strncasecmp(const char *s1, const char *s2, size_t n);$/;"	p	signature:(const char *s1, const char *s2, size_t n)
os_strncasecmp	src/utils/os.h	441;"	d
os_strncasecmp	src/utils/os.h	443;"	d
os_strncasecmp	src/utils/os_internal.c	/^int os_strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f	signature:(const char *s1, const char *s2, size_t n)
os_strncasecmp	src/utils/os_none.c	/^int os_strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f	signature:(const char *s1, const char *s2, size_t n)
os_strncmp	src/utils/os.h	/^int os_strncmp(const char *s1, const char *s2, size_t n);$/;"	p	signature:(const char *s1, const char *s2, size_t n)
os_strncmp	src/utils/os.h	453;"	d
os_strncmp	src/utils/os_internal.c	/^int os_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	signature:(const char *s1, const char *s2, size_t n)
os_strncmp	src/utils/os_none.c	/^int os_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	signature:(const char *s1, const char *s2, size_t n)
os_strncpy	src/utils/os.h	/^char * os_strncpy(char *dest, const char *src, size_t n);$/;"	p	signature:(char *dest, const char *src, size_t n)
os_strncpy	src/utils/os.h	456;"	d
os_strncpy	src/utils/os_internal.c	/^char * os_strncpy(char *dest, const char *src, size_t n)$/;"	f	signature:(char *dest, const char *src, size_t n)
os_strncpy	src/utils/os_none.c	/^char * os_strncpy(char *dest, const char *src, size_t n)$/;"	f	signature:(char *dest, const char *src, size_t n)
os_strrchr	src/utils/os.h	/^char * os_strrchr(const char *s, int c);$/;"	p	signature:(const char *s, int c)
os_strrchr	src/utils/os.h	459;"	d
os_strrchr	src/utils/os_internal.c	/^char * os_strrchr(const char *s, int c)$/;"	f	signature:(const char *s, int c)
os_strrchr	src/utils/os_none.c	/^char * os_strrchr(const char *s, int c)$/;"	f	signature:(const char *s, int c)
os_strstr	src/utils/os.h	/^char * os_strstr(const char *haystack, const char *needle);$/;"	p	signature:(const char *haystack, const char *needle)
os_strstr	src/utils/os.h	462;"	d
os_strstr	src/utils/os_internal.c	/^char * os_strstr(const char *haystack, const char *needle)$/;"	f	signature:(const char *haystack, const char *needle)
os_strstr	src/utils/os_none.c	/^char * os_strstr(const char *haystack, const char *needle)$/;"	f	signature:(const char *haystack, const char *needle)
os_time	src/utils/os.h	/^struct os_time {$/;"	s
os_time::sec	src/utils/os.h	/^	os_time_t sec;$/;"	m	struct:os_time	access:public
os_time::usec	src/utils/os.h	/^	os_time_t usec;$/;"	m	struct:os_time	access:public
os_time_before	src/utils/os.h	42;"	d
os_time_sub	src/utils/os.h	46;"	d
os_time_t	src/utils/os.h	/^typedef long os_time_t;$/;"	t
os_tm	src/utils/os.h	/^struct os_tm {$/;"	s
os_tm::day	src/utils/os.h	/^	int day; \/* 1..31 *\/$/;"	m	struct:os_tm	access:public
os_tm::hour	src/utils/os.h	/^	int hour; \/* 0..23 *\/$/;"	m	struct:os_tm	access:public
os_tm::min	src/utils/os.h	/^	int min; \/* 0..59 *\/$/;"	m	struct:os_tm	access:public
os_tm::month	src/utils/os.h	/^	int month; \/* 1..12 *\/$/;"	m	struct:os_tm	access:public
os_tm::sec	src/utils/os.h	/^	int sec; \/* 0..59 or 60 for leap seconds *\/$/;"	m	struct:os_tm	access:public
os_tm::year	src/utils/os.h	/^	int year; \/* Four digit year *\/$/;"	m	struct:os_tm	access:public
os_unsetenv	src/utils/os.h	/^int os_unsetenv(const char *name);$/;"	p	signature:(const char *name)
os_unsetenv	src/utils/os_internal.c	/^int os_unsetenv(const char *name)$/;"	f	signature:(const char *name)
os_unsetenv	src/utils/os_none.c	/^int os_unsetenv(const char *name)$/;"	f	signature:(const char *name)
os_unsetenv	src/utils/os_unix.c	/^int os_unsetenv(const char *name)$/;"	f	signature:(const char *name)
os_unsetenv	src/utils/os_win32.c	/^int os_unsetenv(const char *name)$/;"	f	signature:(const char *name)
os_version	src/ap/ap_config.h	/^	u8 os_version[4];$/;"	m	struct:hostapd_bss_config	access:public
os_version	src/wps/wps.h	/^	u32 os_version;$/;"	m	struct:wps_device_data	access:public
os_version	src/wps/wps_i.h	/^	const u8 *os_version; \/* 4 octets *\/$/;"	m	struct:wps_parse_attr	access:public
os_zalloc	src/utils/os.h	/^void * os_zalloc(size_t size);$/;"	p	signature:(size_t size)
os_zalloc	src/utils/os_internal.c	/^void * os_zalloc(size_t size)$/;"	f	signature:(size_t size)
os_zalloc	src/utils/os_none.c	/^void * os_zalloc(size_t size)$/;"	f	signature:(size_t size)
os_zalloc	src/utils/os_unix.c	/^void * os_zalloc(size_t size)$/;"	f	signature:(size_t size)
os_zalloc	src/utils/os_win32.c	/^void * os_zalloc(size_t size)$/;"	f	signature:(size_t size)
otp	src/eap_peer/eap_config.h	/^	u8 *otp;$/;"	m	struct:eap_peer_config	access:public
otp_len	src/eap_peer/eap_config.h	/^	size_t otp_len;$/;"	m	struct:eap_peer_config	access:public
oui	src/common/ieee802_11_defs.h	/^					u8 oui[3];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
oui	src/common/ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_information_element	access:public
oui	src/common/ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_parameter_element	access:public
oui	src/common/ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_tspec_element	access:public
oui	src/common/wpa_common.h	/^	u8 oui[4]; \/* 24-bit OUI followed by 8-bit OUI type *\/$/;"	m	struct:wpa_ie_hdr	access:public
oui	src/drivers/driver_broadcom.c	/^	u8 oui[3];$/;"	m	struct:bss_ie_hdr	file:	access:public
oui_subtype	src/common/ieee802_11_defs.h	/^	u8 oui_subtype; \/* 0 *\/$/;"	m	struct:wmm_information_element	access:public
oui_subtype	src/common/ieee802_11_defs.h	/^	u8 oui_subtype; \/* 1 *\/$/;"	m	struct:wmm_parameter_element	access:public
oui_subtype	src/common/ieee802_11_defs.h	/^	u8 oui_subtype; \/* 2 *\/$/;"	m	struct:wmm_tspec_element	access:public
oui_type	src/common/ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_information_element	access:public
oui_type	src/common/ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_parameter_element	access:public
oui_type	src/common/ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_tspec_element	access:public
out_buf	src/eap_peer/eap_ikev2.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
out_buf	src/eap_peer/eap_tnc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
out_buf	src/eap_peer/eap_wsc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
out_buf	src/eap_server/eap_server_ikev2.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_ikev2_data	typeref:struct:eap_ikev2_data::wpabuf	file:	access:public
out_buf	src/eap_server/eap_server_tnc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::wpabuf	file:	access:public
out_buf	src/eap_server/eap_server_wsc.c	/^	struct wpabuf *out_buf;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wpabuf	file:	access:public
out_file	src/utils/wpa_debug.c	/^static FILE *out_file = NULL;$/;"	v	file:
out_op_code	src/eap_peer/eap_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::	file:	access:public
out_op_code	src/eap_server/eap_server_wsc.c	/^	enum wsc_op_code in_op_code, out_op_code;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::	file:	access:public
out_used	src/eap_peer/eap_ikev2.c	/^	size_t out_used;$/;"	m	struct:eap_ikev2_data	file:	access:public
out_used	src/eap_peer/eap_tnc.c	/^	size_t out_used;$/;"	m	struct:eap_tnc_data	file:	access:public
out_used	src/eap_peer/eap_wsc.c	/^	size_t out_used;$/;"	m	struct:eap_wsc_data	file:	access:public
out_used	src/eap_server/eap_server_ikev2.c	/^	size_t out_used;$/;"	m	struct:eap_ikev2_data	file:	access:public
out_used	src/eap_server/eap_server_tnc.c	/^	size_t out_used;$/;"	m	struct:eap_tnc_data	file:	access:public
out_used	src/eap_server/eap_server_wsc.c	/^	size_t out_used;$/;"	m	struct:eap_wsc_data	file:	access:public
over_the_ds_in_progress	src/rsn_supp/wpa_i.h	/^	int over_the_ds_in_progress;$/;"	m	struct:wpa_sm	access:public
own	src/ap/iapp.c	/^	struct in_addr own, multicast;$/;"	m	struct:iapp_data	typeref:struct:iapp_data::in_addr	file:	access:public
own_addr	src/ap/hostapd.h	/^	u8 own_addr[ETH_ALEN];      \/\/ 保存此bss的BSSID（对于wire类型驱动器来说就是mac，调用driver层初始化时被配置）$/;"	m	struct:hostapd_data	access:public
own_addr	src/drivers/driver.h	/^	u8 *own_addr; \/* buffer for writing own MAC address *\/$/;"	m	struct:wpa_init_params	access:public
own_addr	src/drivers/driver_ndis.h	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_ndis_data	access:public
own_addr	src/drivers/driver_privsep.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
own_addr	src/drivers/driver_roboswitch.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
own_addr	src/drivers/driver_test.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
own_addr	src/l2_packet/l2_packet_freebsd.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/l2_packet/l2_packet_linux.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/l2_packet/l2_packet_ndis.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/l2_packet/l2_packet_none.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/l2_packet/l2_packet_pcap.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/l2_packet/l2_packet_privsep.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/l2_packet/l2_packet_winpcap.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:l2_packet_data	file:	access:public
own_addr	src/rsn_supp/wpa_i.h	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_sm	access:public
own_cmd_path	src/drivers/driver_privsep.c	/^	char *own_cmd_path;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
own_ip_addr	src/ap/ap_config.h	/^	struct hostapd_ip_addr own_ip_addr;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_ip_addr	access:public
own_pool_ready	src/crypto/random.c	/^static unsigned int own_pool_ready = 0;$/;"	v	file:
own_socket_path	src/drivers/driver_privsep.c	/^	char *own_socket_path;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
own_socket_path	src/drivers/driver_test.c	/^	char *own_socket_path;$/;"	m	struct:wpa_driver_test_data	file:	access:public
own_socket_path	src/l2_packet/l2_packet_privsep.c	/^	char *own_socket_path;$/;"	m	struct:l2_packet_data	file:	access:public
owner	src/ap/hostapd.h	/^	void *owner;$/;"	m	struct:hostapd_iface	access:public
p	src/tls/rsa.c	/^	struct bignum *p; \/* prime p (factor of n) *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
p2p	src/ap/ap_config.h	/^	int p2p;$/;"	m	struct:hostapd_bss_config	access:public
p2p	src/ap/hostapd.h	/^	struct p2p_data *p2p;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::p2p_data	access:public
p2p	src/common/ieee802_11_common.h	/^	const u8 *p2p;$/;"	m	struct:ieee802_11_elems	access:public
p2p	src/drivers/driver.h	/^	int p2p;$/;"	m	struct:wpa_driver_associate_params	access:public
p2p	src/drivers/driver.h	/^	int p2p;$/;"	m	struct:wpa_driver_auth_params	access:public
p2p	src/drivers/driver_test.c	/^	struct p2p_data *p2p;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::p2p_data	file:	access:public
p2p	src/p2p/p2p_group.c	/^	struct p2p_data *p2p;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::p2p_data	file:	access:public
p2p	src/wps/wps.h	/^	int p2p;$/;"	m	struct:wps_device_data	access:public
p2p_act_frame_type	src/common/ieee802_11_defs.h	/^enum p2p_act_frame_type {$/;"	g
p2p_action_frame_type	src/common/ieee802_11_defs.h	/^enum p2p_action_frame_type {$/;"	g
p2p_add_dev_from_go_neg_req	src/p2p/p2p.c	/^struct p2p_device * p2p_add_dev_from_go_neg_req(struct p2p_data *p2p,$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr, struct p2p_message *msg)
p2p_add_dev_from_go_neg_req	src/p2p/p2p_i.h	/^struct p2p_device * p2p_add_dev_from_go_neg_req(struct p2p_data *p2p,$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr, struct p2p_message *msg)
p2p_add_dev_from_probe_req	src/p2p/p2p.c	/^static void p2p_add_dev_from_probe_req(struct p2p_data *p2p, const u8 *addr,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *addr, const u8 *ie, size_t ie_len)
p2p_add_dev_info	src/p2p/p2p.c	/^void p2p_add_dev_info(struct p2p_data *p2p, const u8 *addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr, struct p2p_device *dev, struct p2p_message *msg)
p2p_add_dev_info	src/p2p/p2p_i.h	/^void p2p_add_dev_info(struct p2p_data *p2p, const u8 *addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr, struct p2p_device *dev, struct p2p_message *msg)
p2p_add_device	src/p2p/p2p.c	/^int p2p_add_device(struct p2p_data *p2p, const u8 *addr, int freq, int level,$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr, int freq, int level, const u8 *ies, size_t ies_len, int scan_res)
p2p_add_device	src/p2p/p2p_i.h	/^int p2p_add_device(struct p2p_data *p2p, const u8 *addr, int freq, int level,$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr, int freq, int level, const u8 *ies, size_t ies_len, int scan_res)
p2p_add_group_clients	src/p2p/p2p.c	/^static int p2p_add_group_clients(struct p2p_data *p2p, const u8 *go_dev_addr,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *go_dev_addr, const u8 *go_interface_addr, int freq, const u8 *gi, size_t gi_len)
p2p_add_wps_string	src/p2p/p2p_build.c	/^static void p2p_add_wps_string(struct wpabuf *buf, enum wps_attribute attr,$/;"	f	file:	signature:(struct wpabuf *buf, enum wps_attribute attr, const char *val)
p2p_add_wps_vendor_extension	src/p2p/p2p.c	/^int p2p_add_wps_vendor_extension(struct p2p_data *p2p,$/;"	f	signature:(struct p2p_data *p2p, const struct wpabuf *vendor_ext)
p2p_add_wps_vendor_extension	src/p2p/p2p.h	/^int p2p_add_wps_vendor_extension(struct p2p_data *p2p,$/;"	p	signature:(struct p2p_data *p2p, const struct wpabuf *vendor_ext)
p2p_after_scan	src/p2p/p2p_i.h	/^	enum p2p_after_scan {$/;"	g	struct:p2p_data	access:public
p2p_assoc_req_ie	src/p2p/p2p.c	/^int p2p_assoc_req_ie(struct p2p_data *p2p, const u8 *bssid, u8 *buf,$/;"	f	signature:(struct p2p_data *p2p, const u8 *bssid, u8 *buf, size_t len, int p2p_group, struct wpabuf *p2p_ie)
p2p_assoc_req_ie	src/p2p/p2p.h	/^int p2p_assoc_req_ie(struct p2p_data *p2p, const u8 *bssid, u8 *buf,$/;"	p	signature:(struct p2p_data *p2p, const u8 *bssid, u8 *buf, size_t len, int p2p_group, struct wpabuf *p2p_ie)
p2p_assoc_req_ie_wlan_ap	src/p2p/p2p.c	/^static int p2p_assoc_req_ie_wlan_ap(struct p2p_data *p2p, const u8 *bssid,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *bssid, u8 *buf, size_t len, struct wpabuf *p2p_ie)
p2p_attr_id	src/common/ieee802_11_defs.h	/^enum p2p_attr_id {$/;"	g
p2p_attr_text	src/p2p/p2p_i.h	/^int p2p_attr_text(struct wpabuf *data, char *buf, char *end);$/;"	p	signature:(struct wpabuf *data, char *buf, char *end)
p2p_attr_text	src/p2p/p2p_parse.c	/^int p2p_attr_text(struct wpabuf *data, char *buf, char *end)$/;"	f	signature:(struct wpabuf *data, char *buf, char *end)
p2p_attributes	src/p2p/p2p_i.h	/^	struct wpabuf *p2p_attributes;$/;"	m	struct:p2p_message	typeref:struct:p2p_message::wpabuf	access:public
p2p_authorize	src/p2p/p2p.c	/^int p2p_authorize(struct p2p_data *p2p, const u8 *peer_addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *peer_addr, enum p2p_wps_method wps_method, int go_intent, const u8 *own_interface_addr, unsigned int force_freq, int persistent_group)
p2p_authorize	src/p2p/p2p.h	/^int p2p_authorize(struct p2p_data *p2p, const u8 *peer_addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *peer_addr, enum p2p_wps_method wps_method, int go_intent, const u8 *own_interface_addr, unsigned int force_freq, int persistent_group)
p2p_beacon_ie	src/ap/hostapd.h	/^	struct wpabuf *p2p_beacon_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
p2p_buf_add_action_hdr	src/p2p/p2p_build.c	/^void p2p_buf_add_action_hdr(struct wpabuf *buf, u8 subtype, u8 dialog_token)$/;"	f	signature:(struct wpabuf *buf, u8 subtype, u8 dialog_token)
p2p_buf_add_action_hdr	src/p2p/p2p_i.h	/^void p2p_buf_add_action_hdr(struct wpabuf *buf, u8 subtype, u8 dialog_token);$/;"	p	signature:(struct wpabuf *buf, u8 subtype, u8 dialog_token)
p2p_buf_add_capability	src/p2p/p2p_build.c	/^void p2p_buf_add_capability(struct wpabuf *buf, u8 dev_capab, u8 group_capab)$/;"	f	signature:(struct wpabuf *buf, u8 dev_capab, u8 group_capab)
p2p_buf_add_capability	src/p2p/p2p_i.h	/^void p2p_buf_add_capability(struct wpabuf *buf, u8 dev_capab, u8 group_capab);$/;"	p	signature:(struct wpabuf *buf, u8 dev_capab, u8 group_capab)
p2p_buf_add_channel_list	src/p2p/p2p_build.c	/^void p2p_buf_add_channel_list(struct wpabuf *buf, const char *country,$/;"	f	signature:(struct wpabuf *buf, const char *country, struct p2p_channels *chan)
p2p_buf_add_channel_list	src/p2p/p2p_i.h	/^void p2p_buf_add_channel_list(struct wpabuf *buf, const char *country,$/;"	p	signature:(struct wpabuf *buf, const char *country, struct p2p_channels *chan)
p2p_buf_add_config_timeout	src/p2p/p2p_build.c	/^void p2p_buf_add_config_timeout(struct wpabuf *buf, u8 go_timeout,$/;"	f	signature:(struct wpabuf *buf, u8 go_timeout, u8 client_timeout)
p2p_buf_add_config_timeout	src/p2p/p2p_i.h	/^void p2p_buf_add_config_timeout(struct wpabuf *buf, u8 go_timeout,$/;"	p	signature:(struct wpabuf *buf, u8 go_timeout, u8 client_timeout)
p2p_buf_add_device_id	src/p2p/p2p_build.c	/^void p2p_buf_add_device_id(struct wpabuf *buf, const u8 *dev_addr)$/;"	f	signature:(struct wpabuf *buf, const u8 *dev_addr)
p2p_buf_add_device_id	src/p2p/p2p_i.h	/^void p2p_buf_add_device_id(struct wpabuf *buf, const u8 *dev_addr);$/;"	p	signature:(struct wpabuf *buf, const u8 *dev_addr)
p2p_buf_add_device_info	src/p2p/p2p_build.c	/^void p2p_buf_add_device_info(struct wpabuf *buf, struct p2p_data *p2p,$/;"	f	signature:(struct wpabuf *buf, struct p2p_data *p2p, struct p2p_device *peer)
p2p_buf_add_device_info	src/p2p/p2p_i.h	/^void p2p_buf_add_device_info(struct wpabuf *buf, struct p2p_data *p2p,$/;"	p	signature:(struct wpabuf *buf, struct p2p_data *p2p, struct p2p_device *peer)
p2p_buf_add_ext_listen_timing	src/p2p/p2p_build.c	/^void p2p_buf_add_ext_listen_timing(struct wpabuf *buf, u16 period,$/;"	f	signature:(struct wpabuf *buf, u16 period, u16 interval)
p2p_buf_add_ext_listen_timing	src/p2p/p2p_i.h	/^void p2p_buf_add_ext_listen_timing(struct wpabuf *buf, u16 period,$/;"	p	signature:(struct wpabuf *buf, u16 period, u16 interval)
p2p_buf_add_go_intent	src/p2p/p2p_build.c	/^void p2p_buf_add_go_intent(struct wpabuf *buf, u8 go_intent)$/;"	f	signature:(struct wpabuf *buf, u8 go_intent)
p2p_buf_add_go_intent	src/p2p/p2p_i.h	/^void p2p_buf_add_go_intent(struct wpabuf *buf, u8 go_intent);$/;"	p	signature:(struct wpabuf *buf, u8 go_intent)
p2p_buf_add_group_bssid	src/p2p/p2p_build.c	/^void p2p_buf_add_group_bssid(struct wpabuf *buf, const u8 *bssid)$/;"	f	signature:(struct wpabuf *buf, const u8 *bssid)
p2p_buf_add_group_bssid	src/p2p/p2p_i.h	/^void p2p_buf_add_group_bssid(struct wpabuf *buf, const u8 *bssid);$/;"	p	signature:(struct wpabuf *buf, const u8 *bssid)
p2p_buf_add_group_id	src/p2p/p2p_build.c	/^void p2p_buf_add_group_id(struct wpabuf *buf, const u8 *dev_addr,$/;"	f	signature:(struct wpabuf *buf, const u8 *dev_addr, const u8 *ssid, size_t ssid_len)
p2p_buf_add_group_id	src/p2p/p2p_i.h	/^void p2p_buf_add_group_id(struct wpabuf *buf, const u8 *dev_addr,$/;"	p	signature:(struct wpabuf *buf, const u8 *dev_addr, const u8 *ssid, size_t ssid_len)
p2p_buf_add_ie_hdr	src/p2p/p2p_build.c	/^u8 * p2p_buf_add_ie_hdr(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
p2p_buf_add_ie_hdr	src/p2p/p2p_i.h	/^u8 * p2p_buf_add_ie_hdr(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
p2p_buf_add_intended_addr	src/p2p/p2p_build.c	/^void p2p_buf_add_intended_addr(struct wpabuf *buf, const u8 *interface_addr)$/;"	f	signature:(struct wpabuf *buf, const u8 *interface_addr)
p2p_buf_add_intended_addr	src/p2p/p2p_i.h	/^void p2p_buf_add_intended_addr(struct wpabuf *buf, const u8 *interface_addr);$/;"	p	signature:(struct wpabuf *buf, const u8 *interface_addr)
p2p_buf_add_invitation_flags	src/p2p/p2p_build.c	/^void p2p_buf_add_invitation_flags(struct wpabuf *buf, u8 flags)$/;"	f	signature:(struct wpabuf *buf, u8 flags)
p2p_buf_add_invitation_flags	src/p2p/p2p_i.h	/^void p2p_buf_add_invitation_flags(struct wpabuf *buf, u8 flags);$/;"	p	signature:(struct wpabuf *buf, u8 flags)
p2p_buf_add_listen_channel	src/p2p/p2p_build.c	/^void p2p_buf_add_listen_channel(struct wpabuf *buf, const char *country,$/;"	f	signature:(struct wpabuf *buf, const char *country, u8 reg_class, u8 channel)
p2p_buf_add_listen_channel	src/p2p/p2p_i.h	/^void p2p_buf_add_listen_channel(struct wpabuf *buf, const char *country,$/;"	p	signature:(struct wpabuf *buf, const char *country, u8 reg_class, u8 channel)
p2p_buf_add_noa	src/p2p/p2p_build.c	/^void p2p_buf_add_noa(struct wpabuf *buf, u8 noa_index, u8 opp_ps, u8 ctwindow,$/;"	f	signature:(struct wpabuf *buf, u8 noa_index, u8 opp_ps, u8 ctwindow, struct p2p_noa_desc *desc1, struct p2p_noa_desc *desc2)
p2p_buf_add_noa	src/p2p/p2p_i.h	/^void p2p_buf_add_noa(struct wpabuf *buf, u8 noa_index, u8 opp_ps, u8 ctwindow,$/;"	p	signature:(struct wpabuf *buf, u8 noa_index, u8 opp_ps, u8 ctwindow, struct p2p_noa_desc *desc1, struct p2p_noa_desc *desc2)
p2p_buf_add_noa_desc	src/p2p/p2p_build.c	/^static void p2p_buf_add_noa_desc(struct wpabuf *buf, struct p2p_noa_desc *desc)$/;"	f	file:	signature:(struct wpabuf *buf, struct p2p_noa_desc *desc)
p2p_buf_add_operating_channel	src/p2p/p2p_build.c	/^void p2p_buf_add_operating_channel(struct wpabuf *buf, const char *country,$/;"	f	signature:(struct wpabuf *buf, const char *country, u8 reg_class, u8 channel)
p2p_buf_add_operating_channel	src/p2p/p2p_i.h	/^void p2p_buf_add_operating_channel(struct wpabuf *buf, const char *country,$/;"	p	signature:(struct wpabuf *buf, const char *country, u8 reg_class, u8 channel)
p2p_buf_add_p2p_interface	src/p2p/p2p_build.c	/^void p2p_buf_add_p2p_interface(struct wpabuf *buf, struct p2p_data *p2p)$/;"	f	signature:(struct wpabuf *buf, struct p2p_data *p2p)
p2p_buf_add_p2p_interface	src/p2p/p2p_i.h	/^void p2p_buf_add_p2p_interface(struct wpabuf *buf, struct p2p_data *p2p);$/;"	p	signature:(struct wpabuf *buf, struct p2p_data *p2p)
p2p_buf_add_public_action_hdr	src/p2p/p2p_build.c	/^void p2p_buf_add_public_action_hdr(struct wpabuf *buf, u8 subtype,$/;"	f	signature:(struct wpabuf *buf, u8 subtype, u8 dialog_token)
p2p_buf_add_public_action_hdr	src/p2p/p2p_i.h	/^void p2p_buf_add_public_action_hdr(struct wpabuf *buf, u8 subtype,$/;"	p	signature:(struct wpabuf *buf, u8 subtype, u8 dialog_token)
p2p_buf_add_status	src/p2p/p2p_build.c	/^void p2p_buf_add_status(struct wpabuf *buf, u8 status)$/;"	f	signature:(struct wpabuf *buf, u8 status)
p2p_buf_add_status	src/p2p/p2p_i.h	/^void p2p_buf_add_status(struct wpabuf *buf, u8 status);$/;"	p	signature:(struct wpabuf *buf, u8 status)
p2p_buf_update_ie_hdr	src/p2p/p2p_build.c	/^void p2p_buf_update_ie_hdr(struct wpabuf *buf, u8 *len)$/;"	f	signature:(struct wpabuf *buf, u8 *len)
p2p_buf_update_ie_hdr	src/p2p/p2p_i.h	/^void p2p_buf_update_ie_hdr(struct wpabuf *buf, u8 *len);$/;"	p	signature:(struct wpabuf *buf, u8 *len)
p2p_build_client_info	src/p2p/p2p_group.c	/^static struct wpabuf * p2p_build_client_info(const u8 *addr,$/;"	f	file:	signature:(const u8 *addr, struct wpabuf *p2p_ie, u8 *dev_capab, u8 *dev_addr)
p2p_build_dev_disc_req	src/p2p/p2p_dev_disc.c	/^static struct wpabuf * p2p_build_dev_disc_req(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *go, const u8 *dev_id)
p2p_build_dev_disc_resp	src/p2p/p2p_dev_disc.c	/^static struct wpabuf * p2p_build_dev_disc_resp(u8 dialog_token, u8 status)$/;"	f	file:	signature:(u8 dialog_token, u8 status)
p2p_build_gas_comeback_resp	src/p2p/p2p_sd.c	/^static struct wpabuf * p2p_build_gas_comeback_resp(u8 dialog_token,$/;"	f	file:	signature:(u8 dialog_token, u16 status_code, u16 update_indic, const u8 *data, size_t len, u8 frag_id, u8 more, u16 total_len)
p2p_build_go_disc_req	src/p2p/p2p_group.c	/^static struct wpabuf * p2p_build_go_disc_req(void)$/;"	f	file:	signature:(void)
p2p_build_go_neg_conf	src/p2p/p2p_go_neg.c	/^static struct wpabuf * p2p_build_go_neg_conf(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *peer, u8 dialog_token, u8 status, const u8 *resp_chan, int go)
p2p_build_go_neg_req	src/p2p/p2p_go_neg.c	/^static struct wpabuf * p2p_build_go_neg_req(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *peer)
p2p_build_go_neg_resp	src/p2p/p2p_go_neg.c	/^static struct wpabuf * p2p_build_go_neg_resp(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *peer, u8 dialog_token, u8 status, u8 tie_breaker)
p2p_build_invitation_req	src/p2p/p2p_invitation.c	/^static struct wpabuf * p2p_build_invitation_req(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *peer, const u8 *go_dev_addr)
p2p_build_invitation_resp	src/p2p/p2p_invitation.c	/^static struct wpabuf * p2p_build_invitation_resp(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *peer, u8 dialog_token, u8 status, const u8 *group_bssid, u8 reg_class, u8 channel, struct p2p_channels *channels)
p2p_build_presence_req	src/p2p/p2p.c	/^static struct wpabuf * p2p_build_presence_req(u32 duration1, u32 interval1,$/;"	f	file:	signature:(u32 duration1, u32 interval1, u32 duration2, u32 interval2)
p2p_build_presence_resp	src/p2p/p2p.c	/^static struct wpabuf * p2p_build_presence_resp(u8 status, const u8 *noa,$/;"	f	file:	signature:(u8 status, const u8 *noa, size_t noa_len, u8 dialog_token)
p2p_build_probe_resp_ies	src/p2p/p2p.c	/^struct wpabuf * p2p_build_probe_resp_ies(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_build_probe_resp_ies	src/p2p/p2p_i.h	/^struct wpabuf * p2p_build_probe_resp_ies(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_build_prov_disc_req	src/p2p/p2p_pd.c	/^static struct wpabuf * p2p_build_prov_disc_req(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, u8 dialog_token, u16 config_methods, struct p2p_device *go)
p2p_build_prov_disc_resp	src/p2p/p2p_pd.c	/^static struct wpabuf * p2p_build_prov_disc_resp(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, u8 dialog_token, u16 config_methods)
p2p_build_sd_query	src/p2p/p2p_sd.c	/^static struct wpabuf * p2p_build_sd_query(u16 update_indic,$/;"	f	file:	signature:(u16 update_indic, struct wpabuf *tlvs)
p2p_build_sd_response	src/p2p/p2p_sd.c	/^static struct wpabuf * p2p_build_sd_response(u8 dialog_token, u16 status_code,$/;"	f	file:	signature:(u8 dialog_token, u16 status_code, u16 comeback_delay, u16 update_indic, const struct wpabuf *tlvs)
p2p_build_ssid	src/p2p/p2p.c	/^void p2p_build_ssid(struct p2p_data *p2p, u8 *ssid, size_t *ssid_len)$/;"	f	signature:(struct p2p_data *p2p, u8 *ssid, size_t *ssid_len)
p2p_build_ssid	src/p2p/p2p_i.h	/^void p2p_build_ssid(struct p2p_data *p2p, u8 *ssid, size_t *ssid_len);$/;"	p	signature:(struct p2p_data *p2p, u8 *ssid, size_t *ssid_len)
p2p_build_wps_ie	src/p2p/p2p_build.c	/^void p2p_build_wps_ie(struct p2p_data *p2p, struct wpabuf *buf, u16 pw_id,$/;"	f	signature:(struct p2p_data *p2p, struct wpabuf *buf, u16 pw_id, int all_attr)
p2p_build_wps_ie	src/p2p/p2p_i.h	/^void p2p_build_wps_ie(struct p2p_data *p2p, struct wpabuf *buf, u16 pw_id,$/;"	p	signature:(struct p2p_data *p2p, struct wpabuf *buf, u16 pw_id, int all_attr)
p2p_build_wps_ie_config_methods	src/p2p/p2p_pd.c	/^static void p2p_build_wps_ie_config_methods(struct wpabuf *buf,$/;"	f	file:	signature:(struct wpabuf *buf, u16 config_methods)
p2p_channel	src/p2p/p2p.h	/^struct p2p_channel {$/;"	s
p2p_channel::chan	src/p2p/p2p.h	/^	u8 chan;$/;"	m	struct:p2p_channel	access:public
p2p_channel::op_class	src/p2p/p2p.h	/^	u8 op_class;$/;"	m	struct:p2p_channel	access:public
p2p_channel_to_freq	src/p2p/p2p_i.h	/^int p2p_channel_to_freq(const char *country, int reg_class, int channel);$/;"	p	signature:(const char *country, int reg_class, int channel)
p2p_channel_to_freq	src/p2p/p2p_utils.c	/^int p2p_channel_to_freq(const char *country, int reg_class, int channel)$/;"	f	signature:(const char *country, int reg_class, int channel)
p2p_channel_to_freq_j4	src/p2p/p2p_utils.c	/^static int p2p_channel_to_freq_j4(int reg_class, int channel)$/;"	f	file:	signature:(int reg_class, int channel)
p2p_channels	src/p2p/p2p.h	/^struct p2p_channels {$/;"	s
p2p_channels::p2p_reg_class	src/p2p/p2p.h	/^	struct p2p_reg_class {$/;"	s	struct:p2p_channels	access:public
p2p_channels::p2p_reg_class::channel	src/p2p/p2p.h	/^		u8 channel[P2P_MAX_REG_CLASS_CHANNELS];$/;"	m	struct:p2p_channels::p2p_reg_class	access:public
p2p_channels::p2p_reg_class::channels	src/p2p/p2p.h	/^		size_t channels;$/;"	m	struct:p2p_channels::p2p_reg_class	access:public
p2p_channels::p2p_reg_class::reg_class	src/p2p/p2p.h	/^		u8 reg_class;$/;"	m	struct:p2p_channels::p2p_reg_class	access:public
p2p_channels::reg_class	src/p2p/p2p.h	/^	} reg_class[P2P_MAX_REG_CLASSES];$/;"	m	struct:p2p_channels	typeref:struct:p2p_channels::p2p_reg_class	access:public
p2p_channels::reg_classes	src/p2p/p2p.h	/^	size_t reg_classes;$/;"	m	struct:p2p_channels	access:public
p2p_channels_includes	src/p2p/p2p_i.h	/^int p2p_channels_includes(const struct p2p_channels *channels, u8 reg_class,$/;"	p	signature:(const struct p2p_channels *channels, u8 reg_class, u8 channel)
p2p_channels_includes	src/p2p/p2p_utils.c	/^int p2p_channels_includes(const struct p2p_channels *channels, u8 reg_class,$/;"	f	signature:(const struct p2p_channels *channels, u8 reg_class, u8 channel)
p2p_channels_intersect	src/p2p/p2p_i.h	/^void p2p_channels_intersect(const struct p2p_channels *a,$/;"	p	signature:(const struct p2p_channels *a, const struct p2p_channels *b, struct p2p_channels *res)
p2p_channels_intersect	src/p2p/p2p_utils.c	/^void p2p_channels_intersect(const struct p2p_channels *a,$/;"	f	signature:(const struct p2p_channels *a, const struct p2p_channels *b, struct p2p_channels *res)
p2p_clear_go_neg	src/p2p/p2p.c	/^static void p2p_clear_go_neg(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_clear_provisioning_info	src/p2p/p2p.c	/^void p2p_clear_provisioning_info(struct p2p_data *p2p, const u8 *addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_clear_provisioning_info	src/p2p/p2p.h	/^void p2p_clear_provisioning_info(struct p2p_data *p2p, const u8 *addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_clear_timeout	src/p2p/p2p.c	/^void p2p_clear_timeout(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_clear_timeout	src/p2p/p2p_i.h	/^void p2p_clear_timeout(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_client_info	src/p2p/p2p_group.c	/^static void p2p_client_info(struct wpabuf *ie, struct p2p_group_member *m)$/;"	f	file:	signature:(struct wpabuf *ie, struct p2p_group_member *m)
p2p_client_info	src/p2p/p2p_i.h	/^	struct p2p_client_info {$/;"	s	struct:p2p_group_info	access:public
p2p_config	src/p2p/p2p.h	/^struct p2p_config {$/;"	s
p2p_config::cb_ctx	src/p2p/p2p.h	/^	void *cb_ctx;$/;"	m	struct:p2p_config	access:public
p2p_config::cfg_op_channel	src/p2p/p2p.h	/^	u8 cfg_op_channel;$/;"	m	struct:p2p_config	access:public
p2p_config::channel	src/p2p/p2p.h	/^	u8 channel;$/;"	m	struct:p2p_config	access:public
p2p_config::channels	src/p2p/p2p.h	/^	struct p2p_channels channels;$/;"	m	struct:p2p_config	typeref:struct:p2p_config::p2p_channels	access:public
p2p_config::concurrent_operations	src/p2p/p2p.h	/^	int concurrent_operations;$/;"	m	struct:p2p_config	access:public
p2p_config::config_methods	src/p2p/p2p.h	/^	u16 config_methods;$/;"	m	struct:p2p_config	access:public
p2p_config::country	src/p2p/p2p.h	/^	char country[3];$/;"	m	struct:p2p_config	access:public
p2p_config::dev_addr	src/p2p/p2p.h	/^	u8 dev_addr[ETH_ALEN];$/;"	m	struct:p2p_config	access:public
p2p_config::dev_found	src/p2p/p2p.h	/^	void (*dev_found)(void *ctx, const u8 *addr,$/;"	m	struct:p2p_config	access:public
p2p_config::dev_lost	src/p2p/p2p.h	/^	void (*dev_lost)(void *ctx, const u8 *dev_addr);$/;"	m	struct:p2p_config	access:public
p2p_config::dev_name	src/p2p/p2p.h	/^	char *dev_name;$/;"	m	struct:p2p_config	access:public
p2p_config::get_noa	src/p2p/p2p.h	/^	int (*get_noa)(void *ctx, const u8 *interface_addr, u8 *buf,$/;"	m	struct:p2p_config	access:public
p2p_config::go_connected	src/p2p/p2p.h	/^	int (*go_connected)(void *ctx, const u8 *dev_addr);$/;"	m	struct:p2p_config	access:public
p2p_config::go_neg_completed	src/p2p/p2p.h	/^	void (*go_neg_completed)(void *ctx, struct p2p_go_neg_results *res);$/;"	m	struct:p2p_config	access:public
p2p_config::go_neg_req_rx	src/p2p/p2p.h	/^	void (*go_neg_req_rx)(void *ctx, const u8 *src, u16 dev_passwd_id);$/;"	m	struct:p2p_config	access:public
p2p_config::invitation_process	src/p2p/p2p.h	/^	u8 (*invitation_process)(void *ctx, const u8 *sa, const u8 *bssid,$/;"	m	struct:p2p_config	access:public
p2p_config::invitation_received	src/p2p/p2p.h	/^	void (*invitation_received)(void *ctx, const u8 *sa, const u8 *bssid,$/;"	m	struct:p2p_config	access:public
p2p_config::invitation_result	src/p2p/p2p.h	/^	void (*invitation_result)(void *ctx, int status, const u8 *bssid);$/;"	m	struct:p2p_config	access:public
p2p_config::manufacturer	src/p2p/p2p.h	/^	char *manufacturer;$/;"	m	struct:p2p_config	access:public
p2p_config::max_peers	src/p2p/p2p.h	/^	size_t max_peers;$/;"	m	struct:p2p_config	access:public
p2p_config::model_name	src/p2p/p2p.h	/^	char *model_name;$/;"	m	struct:p2p_config	access:public
p2p_config::model_number	src/p2p/p2p.h	/^	char *model_number;$/;"	m	struct:p2p_config	access:public
p2p_config::msg_ctx	src/p2p/p2p.h	/^	void *msg_ctx;$/;"	m	struct:p2p_config	access:public
p2p_config::num_pref_chan	src/p2p/p2p.h	/^	unsigned int num_pref_chan;$/;"	m	struct:p2p_config	access:public
p2p_config::num_sec_dev_types	src/p2p/p2p.h	/^	size_t num_sec_dev_types;$/;"	m	struct:p2p_config	access:public
p2p_config::op_channel	src/p2p/p2p.h	/^	u8 op_channel;$/;"	m	struct:p2p_config	access:public
p2p_config::op_reg_class	src/p2p/p2p.h	/^	u8 op_reg_class;$/;"	m	struct:p2p_config	access:public
p2p_config::p2p_intra_bss	src/p2p/p2p.h	/^	int p2p_intra_bss;$/;"	m	struct:p2p_config	access:public
p2p_config::p2p_scan	src/p2p/p2p.h	/^	int (*p2p_scan)(void *ctx, enum p2p_scan_type type, int freq,$/;"	m	struct:p2p_config	access:public
p2p_config::pref_chan	src/p2p/p2p.h	/^	struct p2p_channel *pref_chan;$/;"	m	struct:p2p_config	typeref:struct:p2p_config::p2p_channel	access:public
p2p_config::pri_dev_type	src/p2p/p2p.h	/^	u8 pri_dev_type[8];$/;"	m	struct:p2p_config	access:public
p2p_config::prov_disc_fail	src/p2p/p2p.h	/^	void (*prov_disc_fail)(void *ctx, const u8 *peer,$/;"	m	struct:p2p_config	access:public
p2p_config::prov_disc_req	src/p2p/p2p.h	/^	void (*prov_disc_req)(void *ctx, const u8 *peer, u16 config_methods,$/;"	m	struct:p2p_config	access:public
p2p_config::prov_disc_resp	src/p2p/p2p.h	/^	void (*prov_disc_resp)(void *ctx, const u8 *peer, u16 config_methods);$/;"	m	struct:p2p_config	access:public
p2p_config::reg_class	src/p2p/p2p.h	/^	u8 reg_class;$/;"	m	struct:p2p_config	access:public
p2p_config::sd_request	src/p2p/p2p.h	/^	void (*sd_request)(void *ctx, int freq, const u8 *sa, u8 dialog_token,$/;"	m	struct:p2p_config	access:public
p2p_config::sd_response	src/p2p/p2p.h	/^	void (*sd_response)(void *ctx, const u8 *sa, u16 update_indic,$/;"	m	struct:p2p_config	access:public
p2p_config::sec_dev_type	src/p2p/p2p.h	/^	u8 sec_dev_type[P2P_SEC_DEVICE_TYPES][8];$/;"	m	struct:p2p_config	access:public
p2p_config::send_action	src/p2p/p2p.h	/^	int (*send_action)(void *ctx, unsigned int freq, const u8 *dst,$/;"	m	struct:p2p_config	access:public
p2p_config::send_action_done	src/p2p/p2p.h	/^	void (*send_action_done)(void *ctx);$/;"	m	struct:p2p_config	access:public
p2p_config::send_probe_resp	src/p2p/p2p.h	/^	int (*send_probe_resp)(void *ctx, const struct wpabuf *buf);$/;"	m	struct:p2p_config	access:public
p2p_config::serial_number	src/p2p/p2p.h	/^	char *serial_number;$/;"	m	struct:p2p_config	access:public
p2p_config::ssid_postfix	src/p2p/p2p.h	/^	u8 ssid_postfix[32 - 9];$/;"	m	struct:p2p_config	access:public
p2p_config::ssid_postfix_len	src/p2p/p2p.h	/^	size_t ssid_postfix_len;$/;"	m	struct:p2p_config	access:public
p2p_config::start_listen	src/p2p/p2p.h	/^	int (*start_listen)(void *ctx, unsigned int freq,$/;"	m	struct:p2p_config	access:public
p2p_config::stop_listen	src/p2p/p2p.h	/^	void (*stop_listen)(void *ctx);$/;"	m	struct:p2p_config	access:public
p2p_config::uuid	src/p2p/p2p.h	/^	u8 uuid[16];$/;"	m	struct:p2p_config	access:public
p2p_connect	src/drivers/driver.h	/^	int (*p2p_connect)(void *priv, const u8 *peer_addr, int wps_method,$/;"	m	struct:wpa_driver_ops	access:public
p2p_connect	src/p2p/p2p.c	/^int p2p_connect(struct p2p_data *p2p, const u8 *peer_addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *peer_addr, enum p2p_wps_method wps_method, int go_intent, const u8 *own_interface_addr, unsigned int force_freq, int persistent_group)
p2p_connect	src/p2p/p2p.h	/^int p2p_connect(struct p2p_data *p2p, const u8 *peer_addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *peer_addr, enum p2p_wps_method wps_method, int go_intent, const u8 *own_interface_addr, unsigned int force_freq, int persistent_group)
p2p_connect_send	src/p2p/p2p_go_neg.c	/^int p2p_connect_send(struct p2p_data *p2p, struct p2p_device *dev)$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_connect_send	src/p2p/p2p_i.h	/^int p2p_connect_send(struct p2p_data *p2p, struct p2p_device *dev);$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_continue_find	src/p2p/p2p.c	/^void p2p_continue_find(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_continue_find	src/p2p/p2p_i.h	/^void p2p_continue_find(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_copy_client_info	src/p2p/p2p.c	/^static void p2p_copy_client_info(struct p2p_device *dev,$/;"	f	file:	signature:(struct p2p_device *dev, struct p2p_client_info *cli)
p2p_copy_wps_info	src/p2p/p2p.c	/^static void p2p_copy_wps_info(struct p2p_device *dev, int probe_req,$/;"	f	file:	signature:(struct p2p_device *dev, int probe_req, const struct p2p_message *msg)
p2p_create_device	src/p2p/p2p.c	/^static struct p2p_device * p2p_create_device(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_data	src/p2p/p2p_i.h	/^struct p2p_data {$/;"	s
p2p_data::P2P_AFTER_SCAN_CONNECT	src/p2p/p2p_i.h	/^		P2P_AFTER_SCAN_CONNECT$/;"	e	enum:p2p_data::p2p_after_scan
p2p_data::P2P_AFTER_SCAN_LISTEN	src/p2p/p2p_i.h	/^		P2P_AFTER_SCAN_LISTEN,$/;"	e	enum:p2p_data::p2p_after_scan
p2p_data::P2P_AFTER_SCAN_NOTHING	src/p2p/p2p_i.h	/^		P2P_AFTER_SCAN_NOTHING,$/;"	e	enum:p2p_data::p2p_after_scan
p2p_data::P2P_CONNECT	src/p2p/p2p_i.h	/^		P2P_CONNECT,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_CONNECT_LISTEN	src/p2p/p2p_i.h	/^		P2P_CONNECT_LISTEN,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_GO_NEG	src/p2p/p2p_i.h	/^		P2P_GO_NEG,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_IDLE	src/p2p/p2p_i.h	/^		P2P_IDLE,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_INVITE	src/p2p/p2p_i.h	/^		P2P_INVITE,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_INVITE_LISTEN	src/p2p/p2p_i.h	/^		P2P_INVITE_LISTEN,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_LISTEN_ONLY	src/p2p/p2p_i.h	/^		P2P_LISTEN_ONLY,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_NO_PENDING_ACTION	src/p2p/p2p_i.h	/^		P2P_NO_PENDING_ACTION,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PD_DURING_FIND	src/p2p/p2p_i.h	/^		P2P_PD_DURING_FIND,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_PENDING_DEV_DISC_REQUEST	src/p2p/p2p_i.h	/^		P2P_PENDING_DEV_DISC_REQUEST,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_DEV_DISC_RESPONSE	src/p2p/p2p_i.h	/^		P2P_PENDING_DEV_DISC_RESPONSE,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_GO_DISC_REQ	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_DISC_REQ$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_GO_NEG_CONFIRM	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_CONFIRM,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_GO_NEG_REQUEST	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_REQUEST,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_GO_NEG_RESPONSE	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_RESPONSE,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_GO_NEG_RESPONSE_FAILURE	src/p2p/p2p_i.h	/^		P2P_PENDING_GO_NEG_RESPONSE_FAILURE,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_INVITATION_REQUEST	src/p2p/p2p_i.h	/^		P2P_PENDING_INVITATION_REQUEST,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_INVITATION_RESPONSE	src/p2p/p2p_i.h	/^		P2P_PENDING_INVITATION_RESPONSE,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_PD	src/p2p/p2p_i.h	/^		P2P_PENDING_PD,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PENDING_SD	src/p2p/p2p_i.h	/^		P2P_PENDING_SD,$/;"	e	enum:p2p_data::p2p_pending_action_state
p2p_data::P2P_PROVISIONING	src/p2p/p2p_i.h	/^		P2P_PROVISIONING,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_SD_DURING_FIND	src/p2p/p2p_i.h	/^		P2P_SD_DURING_FIND,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_SEARCH	src/p2p/p2p_i.h	/^		P2P_SEARCH,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_SEARCH_WHEN_READY	src/p2p/p2p_i.h	/^		P2P_SEARCH_WHEN_READY,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_WAIT_PEER_CONNECT	src/p2p/p2p_i.h	/^		P2P_WAIT_PEER_CONNECT,$/;"	e	enum:p2p_data::p2p_state
p2p_data::P2P_WAIT_PEER_IDLE	src/p2p/p2p_i.h	/^		P2P_WAIT_PEER_IDLE,$/;"	e	enum:p2p_data::p2p_state
p2p_data::after_scan_peer	src/p2p/p2p_i.h	/^	u8 after_scan_peer[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::after_scan_tx	src/p2p/p2p_i.h	/^	struct p2p_pending_action_tx *after_scan_tx;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_pending_action_tx	access:public
p2p_data::best_freq_24	src/p2p/p2p_i.h	/^	int best_freq_24;$/;"	m	struct:p2p_data	access:public
p2p_data::best_freq_5	src/p2p/p2p_i.h	/^	int best_freq_5;$/;"	m	struct:p2p_data	access:public
p2p_data::best_freq_overall	src/p2p/p2p_i.h	/^	int best_freq_overall;$/;"	m	struct:p2p_data	access:public
p2p_data::cfg	src/p2p/p2p_i.h	/^	struct p2p_config *cfg;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_config	access:public
p2p_data::channels	src/p2p/p2p_i.h	/^	struct p2p_channels channels;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_channels	access:public
p2p_data::cross_connect	src/p2p/p2p_i.h	/^	int cross_connect;$/;"	m	struct:p2p_data	access:public
p2p_data::dev_capab	src/p2p/p2p_i.h	/^	u8 dev_capab;$/;"	m	struct:p2p_data	access:public
p2p_data::devices	src/p2p/p2p_i.h	/^	struct dl_list devices;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::dl_list	access:public
p2p_data::drv_in_listen	src/p2p/p2p_i.h	/^	int drv_in_listen;$/;"	m	struct:p2p_data	access:public
p2p_data::ext_listen_interval	src/p2p/p2p_i.h	/^	unsigned int ext_listen_interval;$/;"	m	struct:p2p_data	access:public
p2p_data::ext_listen_interval_sec	src/p2p/p2p_i.h	/^	unsigned int ext_listen_interval_sec;$/;"	m	struct:p2p_data	access:public
p2p_data::ext_listen_interval_usec	src/p2p/p2p_i.h	/^	unsigned int ext_listen_interval_usec;$/;"	m	struct:p2p_data	access:public
p2p_data::ext_listen_only	src/p2p/p2p_i.h	/^	int ext_listen_only;$/;"	m	struct:p2p_data	access:public
p2p_data::ext_listen_period	src/p2p/p2p_i.h	/^	unsigned int ext_listen_period;$/;"	m	struct:p2p_data	access:public
p2p_data::find_dev_id	src/p2p/p2p_i.h	/^	u8 *find_dev_id;$/;"	m	struct:p2p_data	access:public
p2p_data::find_dev_id_buf	src/p2p/p2p_i.h	/^	u8 find_dev_id_buf[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::find_type	src/p2p/p2p_i.h	/^	enum p2p_discovery_type find_type;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_discovery_type	access:public
p2p_data::go_intent	src/p2p/p2p_i.h	/^	u8 go_intent;$/;"	m	struct:p2p_data	access:public
p2p_data::go_neg_peer	src/p2p/p2p_i.h	/^	struct p2p_device *go_neg_peer;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
p2p_data::groups	src/p2p/p2p_i.h	/^	struct p2p_group **groups;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_group	access:public
p2p_data::in_listen	src/p2p/p2p_i.h	/^	int in_listen;$/;"	m	struct:p2p_data	access:public
p2p_data::intended_addr	src/p2p/p2p_i.h	/^	u8 intended_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::inv_bssid	src/p2p/p2p_i.h	/^	u8 inv_bssid[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::inv_bssid_set	src/p2p/p2p_i.h	/^	int inv_bssid_set;$/;"	m	struct:p2p_data	access:public
p2p_data::inv_go_dev_addr	src/p2p/p2p_i.h	/^	u8 inv_go_dev_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::inv_group_bssid	src/p2p/p2p_i.h	/^	u8 inv_group_bssid[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::inv_group_bssid_ptr	src/p2p/p2p_i.h	/^	u8 *inv_group_bssid_ptr;$/;"	m	struct:p2p_data	access:public
p2p_data::inv_op_freq	src/p2p/p2p_i.h	/^	int inv_op_freq;$/;"	m	struct:p2p_data	access:public
p2p_data::inv_persistent	src/p2p/p2p_i.h	/^	int inv_persistent;$/;"	m	struct:p2p_data	access:public
p2p_data::inv_role	src/p2p/p2p_i.h	/^	enum p2p_invite_role inv_role;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_invite_role	access:public
p2p_data::inv_sa	src/p2p/p2p_i.h	/^	u8 inv_sa[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::inv_ssid	src/p2p/p2p_i.h	/^	u8 inv_ssid[32];$/;"	m	struct:p2p_data	access:public
p2p_data::inv_ssid_len	src/p2p/p2p_i.h	/^	size_t inv_ssid_len;$/;"	m	struct:p2p_data	access:public
p2p_data::inv_status	src/p2p/p2p_i.h	/^	u8 inv_status;$/;"	m	struct:p2p_data	access:public
p2p_data::invite_go_dev_addr	src/p2p/p2p_i.h	/^	const u8 *invite_go_dev_addr;$/;"	m	struct:p2p_data	access:public
p2p_data::invite_go_dev_addr_buf	src/p2p/p2p_i.h	/^	u8 invite_go_dev_addr_buf[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::invite_peer	src/p2p/p2p_i.h	/^	struct p2p_device *invite_peer;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
p2p_data::last_p2p_find_timeout	src/p2p/p2p_i.h	/^	unsigned int last_p2p_find_timeout;$/;"	m	struct:p2p_data	access:public
p2p_data::last_prog_scan_chan	src/p2p/p2p_i.h	/^	u8 last_prog_scan_chan;$/;"	m	struct:p2p_data	access:public
p2p_data::last_prog_scan_class	src/p2p/p2p_i.h	/^	u8 last_prog_scan_class;$/;"	m	struct:p2p_data	access:public
p2p_data::max_disc_int	src/p2p/p2p_i.h	/^	int max_disc_int;$/;"	m	struct:p2p_data	access:public
p2p_data::min_disc_int	src/p2p/p2p_i.h	/^	int min_disc_int;$/;"	m	struct:p2p_data	access:public
p2p_data::next_tie_breaker	src/p2p/p2p_i.h	/^	u8 next_tie_breaker;$/;"	m	struct:p2p_data	access:public
p2p_data::num_groups	src/p2p/p2p_i.h	/^	size_t num_groups;$/;"	m	struct:p2p_data	access:public
p2p_data::num_req_dev_types	src/p2p/p2p_i.h	/^	unsigned int num_req_dev_types;$/;"	m	struct:p2p_data	access:public
p2p_data::op_channel	src/p2p/p2p_i.h	/^	u8 op_channel;$/;"	m	struct:p2p_data	access:public
p2p_data::op_reg_class	src/p2p/p2p_i.h	/^	u8 op_reg_class;$/;"	m	struct:p2p_data	access:public
p2p_data::p2p_after_scan	src/p2p/p2p_i.h	/^	enum p2p_after_scan {$/;"	g	struct:p2p_data	access:public
p2p_data::p2p_pending_action_state	src/p2p/p2p_i.h	/^	enum p2p_pending_action_state {$/;"	g	struct:p2p_data	access:public
p2p_data::p2p_scan_running	src/p2p/p2p_i.h	/^	int p2p_scan_running;$/;"	m	struct:p2p_data	access:public
p2p_data::p2p_state	src/p2p/p2p_i.h	/^	enum p2p_state {$/;"	g	struct:p2p_data	access:public
p2p_data::pd_retries	src/p2p/p2p_i.h	/^	int pd_retries;$/;"	m	struct:p2p_data	access:public
p2p_data::peer_filter	src/p2p/p2p_i.h	/^	u8 peer_filter[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::pending_action_state	src/p2p/p2p_i.h	/^	} pending_action_state;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_pending_action_state	access:public
p2p_data::pending_client_disc_addr	src/p2p/p2p_i.h	/^	u8 pending_client_disc_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::pending_client_disc_freq	src/p2p/p2p_i.h	/^	unsigned int pending_client_disc_freq;$/;"	m	struct:p2p_data	access:public
p2p_data::pending_client_disc_go	src/p2p/p2p_i.h	/^	struct p2p_device *pending_client_disc_go;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
p2p_data::pending_dev_disc_addr	src/p2p/p2p_i.h	/^	u8 pending_dev_disc_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::pending_dev_disc_dialog_token	src/p2p/p2p_i.h	/^	u8 pending_dev_disc_dialog_token;$/;"	m	struct:p2p_data	access:public
p2p_data::pending_dev_disc_freq	src/p2p/p2p_i.h	/^	int pending_dev_disc_freq;$/;"	m	struct:p2p_data	access:public
p2p_data::pending_listen_freq	src/p2p/p2p_i.h	/^	unsigned int pending_listen_freq;$/;"	m	struct:p2p_data	access:public
p2p_data::pending_listen_sec	src/p2p/p2p_i.h	/^	unsigned int pending_listen_sec;$/;"	m	struct:p2p_data	access:public
p2p_data::pending_listen_usec	src/p2p/p2p_i.h	/^	unsigned int pending_listen_usec;$/;"	m	struct:p2p_data	access:public
p2p_data::pending_pd_devaddr	src/p2p/p2p_i.h	/^	u8 pending_pd_devaddr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::req_dev_types	src/p2p/p2p_i.h	/^	u8 *req_dev_types;$/;"	m	struct:p2p_data	access:public
p2p_data::sd_frag_id	src/p2p/p2p_i.h	/^	u8 sd_frag_id;$/;"	m	struct:p2p_data	access:public
p2p_data::sd_peer	src/p2p/p2p_i.h	/^	struct p2p_device *sd_peer;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
p2p_data::sd_queries	src/p2p/p2p_i.h	/^	struct p2p_sd_query *sd_queries;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_sd_query	access:public
p2p_data::sd_query	src/p2p/p2p_i.h	/^	struct p2p_sd_query *sd_query;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_sd_query	access:public
p2p_data::sd_resp	src/p2p/p2p_i.h	/^	struct wpabuf *sd_resp; \/* Fragmented SD response *\/$/;"	m	struct:p2p_data	typeref:struct:p2p_data::wpabuf	access:public
p2p_data::sd_resp_addr	src/p2p/p2p_i.h	/^	u8 sd_resp_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
p2p_data::sd_resp_dialog_token	src/p2p/p2p_i.h	/^	u8 sd_resp_dialog_token;$/;"	m	struct:p2p_data	access:public
p2p_data::sd_resp_pos	src/p2p/p2p_i.h	/^	size_t sd_resp_pos; \/* Offset in sd_resp *\/$/;"	m	struct:p2p_data	access:public
p2p_data::sd_rx_resp	src/p2p/p2p_i.h	/^	struct wpabuf *sd_rx_resp; \/* Reassembled SD response *\/$/;"	m	struct:p2p_data	typeref:struct:p2p_data::wpabuf	access:public
p2p_data::sd_rx_update_indic	src/p2p/p2p_i.h	/^	u16 sd_rx_update_indic;$/;"	m	struct:p2p_data	access:public
p2p_data::srv_update_indic	src/p2p/p2p_i.h	/^	u16 srv_update_indic;$/;"	m	struct:p2p_data	access:public
p2p_data::ssid	src/p2p/p2p_i.h	/^	u8 ssid[32];$/;"	m	struct:p2p_data	access:public
p2p_data::ssid_len	src/p2p/p2p_i.h	/^	size_t ssid_len;$/;"	m	struct:p2p_data	access:public
p2p_data::ssid_set	src/p2p/p2p_i.h	/^	int ssid_set;$/;"	m	struct:p2p_data	access:public
p2p_data::start_after_scan	src/p2p/p2p_i.h	/^	} start_after_scan;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_after_scan	access:public
p2p_data::state	src/p2p/p2p_i.h	/^	} state;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_state	access:public
p2p_data::user_initiated_pd	src/p2p/p2p_i.h	/^	u8 user_initiated_pd;$/;"	m	struct:p2p_data	access:public
p2p_data::wps_vendor_ext	src/p2p/p2p_i.h	/^	struct wpabuf *wps_vendor_ext[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_data	typeref:struct:p2p_data::wpabuf	access:public
p2p_deauth_notif	src/p2p/p2p.c	/^void p2p_deauth_notif(struct p2p_data *p2p, const u8 *bssid, u16 reason_code,$/;"	f	signature:(struct p2p_data *p2p, const u8 *bssid, u16 reason_code, const u8 *ie, size_t ie_len)
p2p_deauth_notif	src/p2p/p2p.h	/^void p2p_deauth_notif(struct p2p_data *p2p, const u8 *bssid, u16 reason_code,$/;"	p	signature:(struct p2p_data *p2p, const u8 *bssid, u16 reason_code, const u8 *ie, size_t ie_len)
p2p_deinit	src/p2p/p2p.c	/^void p2p_deinit(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_deinit	src/p2p/p2p.h	/^void p2p_deinit(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_dev_addr	src/wps/wps.h	/^	const u8 *p2p_dev_addr;$/;"	m	struct:wps_config	access:public
p2p_dev_addr	src/wps/wps_i.h	/^	u8 p2p_dev_addr[ETH_ALEN]; \/* P2P Device Address of the client or$/;"	m	struct:wps_data	access:public
p2p_dev_addr	src/wps/wps_registrar.c	/^	u8 p2p_dev_addr[ETH_ALEN];$/;"	m	struct:wps_registrar	file:	access:public
p2p_dev_disc_req_cb	src/p2p/p2p_dev_disc.c	/^void p2p_dev_disc_req_cb(struct p2p_data *p2p, int success)$/;"	f	signature:(struct p2p_data *p2p, int success)
p2p_dev_disc_req_cb	src/p2p/p2p_i.h	/^void p2p_dev_disc_req_cb(struct p2p_data *p2p, int success);$/;"	p	signature:(struct p2p_data *p2p, int success)
p2p_dev_disc_resp_cb	src/p2p/p2p_dev_disc.c	/^void p2p_dev_disc_resp_cb(struct p2p_data *p2p, int success)$/;"	f	signature:(struct p2p_data *p2p, int success)
p2p_dev_disc_resp_cb	src/p2p/p2p_i.h	/^void p2p_dev_disc_resp_cb(struct p2p_data *p2p, int success);$/;"	p	signature:(struct p2p_data *p2p, int success)
p2p_dev_found	src/drivers/driver.h	/^	struct p2p_dev_found {$/;"	s	union:wpa_event_data	access:public
p2p_dev_found	src/drivers/driver.h	/^	} p2p_dev_found;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_dev_found	access:public
p2p_device	src/p2p/p2p_i.h	/^struct p2p_device {$/;"	s
p2p_device::channels	src/p2p/p2p_i.h	/^	struct p2p_channels channels;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::p2p_channels	access:public
p2p_device::client_timeout	src/p2p/p2p_i.h	/^	u8 client_timeout;$/;"	m	struct:p2p_device	access:public
p2p_device::connect_reqs	src/p2p/p2p_i.h	/^	unsigned int connect_reqs;$/;"	m	struct:p2p_device	access:public
p2p_device::country	src/p2p/p2p_i.h	/^	char country[3];$/;"	m	struct:p2p_device	access:public
p2p_device::dialog_token	src/p2p/p2p_i.h	/^	u8 dialog_token;$/;"	m	struct:p2p_device	access:public
p2p_device::ext_listen_interval	src/p2p/p2p_i.h	/^	u16 ext_listen_interval;$/;"	m	struct:p2p_device	access:public
p2p_device::ext_listen_period	src/p2p/p2p_i.h	/^	u16 ext_listen_period;$/;"	m	struct:p2p_device	access:public
p2p_device::flags	src/p2p/p2p_i.h	/^	unsigned int flags;$/;"	m	struct:p2p_device	access:public
p2p_device::go_neg_req_sent	src/p2p/p2p_i.h	/^	int go_neg_req_sent;$/;"	m	struct:p2p_device	access:public
p2p_device::go_state	src/p2p/p2p_i.h	/^	enum p2p_go_state go_state;$/;"	m	struct:p2p_device	typeref:enum:p2p_device::p2p_go_state	access:public
p2p_device::go_timeout	src/p2p/p2p_i.h	/^	u8 go_timeout;$/;"	m	struct:p2p_device	access:public
p2p_device::info	src/p2p/p2p_i.h	/^	struct p2p_peer_info info;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::p2p_peer_info	access:public
p2p_device::intended_addr	src/p2p/p2p_i.h	/^	u8 intended_addr[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
p2p_device::interface_addr	src/p2p/p2p_i.h	/^	u8 interface_addr[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
p2p_device::invitation_reqs	src/p2p/p2p_i.h	/^	unsigned int invitation_reqs;$/;"	m	struct:p2p_device	access:public
p2p_device::last_seen	src/p2p/p2p_i.h	/^	struct os_time last_seen;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::os_time	access:public
p2p_device::list	src/p2p/p2p_i.h	/^	struct dl_list list;$/;"	m	struct:p2p_device	typeref:struct:p2p_device::dl_list	access:public
p2p_device::listen_freq	src/p2p/p2p_i.h	/^	int listen_freq;$/;"	m	struct:p2p_device	access:public
p2p_device::member_in_go_dev	src/p2p/p2p_i.h	/^	u8 member_in_go_dev[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
p2p_device::member_in_go_iface	src/p2p/p2p_i.h	/^	u8 member_in_go_iface[ETH_ALEN];$/;"	m	struct:p2p_device	access:public
p2p_device::oper_freq	src/p2p/p2p_i.h	/^	int oper_freq;$/;"	m	struct:p2p_device	access:public
p2p_device::oper_ssid	src/p2p/p2p_i.h	/^	u8 oper_ssid[32];$/;"	m	struct:p2p_device	access:public
p2p_device::oper_ssid_len	src/p2p/p2p_i.h	/^	size_t oper_ssid_len;$/;"	m	struct:p2p_device	access:public
p2p_device::req_config_methods	src/p2p/p2p_i.h	/^	u16 req_config_methods;$/;"	m	struct:p2p_device	access:public
p2p_device::status	src/p2p/p2p_i.h	/^	int status; \/* enum p2p_status_code *\/$/;"	m	struct:p2p_device	access:public
p2p_device::wait_count	src/p2p/p2p_i.h	/^	unsigned int wait_count;$/;"	m	struct:p2p_device	access:public
p2p_device::wps_method	src/p2p/p2p_i.h	/^	enum p2p_wps_method wps_method;$/;"	m	struct:p2p_device	typeref:enum:p2p_device::p2p_wps_method	access:public
p2p_device::wps_prov_info	src/p2p/p2p_i.h	/^	u16 wps_prov_info;$/;"	m	struct:p2p_device	access:public
p2p_device_addr	src/p2p/p2p.h	/^	u8 p2p_device_addr[ETH_ALEN];$/;"	m	struct:p2p_peer_info	access:public
p2p_device_addr	src/p2p/p2p_i.h	/^		const u8 *p2p_device_addr;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_device_addr	src/p2p/p2p_i.h	/^	const u8 *p2p_device_addr;$/;"	m	struct:p2p_message	access:public
p2p_device_clear_reported	src/p2p/p2p.c	/^static void p2p_device_clear_reported(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_device_free	src/p2p/p2p.c	/^static void p2p_device_free(struct p2p_data *p2p, struct p2p_device *dev)$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_device_free	src/p2p/p2p.c	/^static void p2p_device_free(struct p2p_data *p2p, struct p2p_device *dev);$/;"	p	file:	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_device_info	src/p2p/p2p_i.h	/^	const u8 *p2p_device_info;$/;"	m	struct:p2p_message	access:public
p2p_device_info_len	src/p2p/p2p_i.h	/^	size_t p2p_device_info_len;$/;"	m	struct:p2p_message	access:public
p2p_disassoc_notif	src/p2p/p2p.c	/^void p2p_disassoc_notif(struct p2p_data *p2p, const u8 *bssid, u16 reason_code,$/;"	f	signature:(struct p2p_data *p2p, const u8 *bssid, u16 reason_code, const u8 *ie, size_t ie_len)
p2p_disassoc_notif	src/p2p/p2p.h	/^void p2p_disassoc_notif(struct p2p_data *p2p, const u8 *bssid, u16 reason_code,$/;"	p	signature:(struct p2p_data *p2p, const u8 *bssid, u16 reason_code, const u8 *ie, size_t ie_len)
p2p_discovery_type	src/p2p/p2p.h	/^enum p2p_discovery_type {$/;"	g
p2p_expiration_timeout	src/p2p/p2p.c	/^static void p2p_expiration_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_expire_peers	src/p2p/p2p.c	/^static void p2p_expire_peers(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_ext_listen	src/p2p/p2p.c	/^int p2p_ext_listen(struct p2p_data *p2p, unsigned int period,$/;"	f	signature:(struct p2p_data *p2p, unsigned int period, unsigned int interval)
p2p_ext_listen	src/p2p/p2p.h	/^int p2p_ext_listen(struct p2p_data *p2p, unsigned int period,$/;"	p	signature:(struct p2p_data *p2p, unsigned int period, unsigned int interval)
p2p_ext_listen_timeout	src/p2p/p2p.c	/^static void p2p_ext_listen_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_ext_listen_timeout	src/p2p/p2p.c	/^static void p2p_ext_listen_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_find	src/drivers/driver.h	/^	int (*p2p_find)(void *priv, unsigned int timeout, int type);$/;"	m	struct:wpa_driver_ops	access:public
p2p_find	src/p2p/p2p.c	/^int p2p_find(struct p2p_data *p2p, unsigned int timeout,$/;"	f	signature:(struct p2p_data *p2p, unsigned int timeout, enum p2p_discovery_type type, unsigned int num_req_dev_types, const u8 *req_dev_types, const u8 *dev_id)
p2p_find	src/p2p/p2p.h	/^int p2p_find(struct p2p_data *p2p, unsigned int timeout,$/;"	p	signature:(struct p2p_data *p2p, unsigned int timeout, enum p2p_discovery_type type, unsigned int num_req_dev_types, const u8 *req_dev_types, const u8 *dev_id)
p2p_find_timeout	src/p2p/p2p.c	/^static void p2p_find_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_flush	src/p2p/p2p.c	/^void p2p_flush(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_flush	src/p2p/p2p.h	/^void p2p_flush(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_free_req_dev_types	src/p2p/p2p.c	/^static void p2p_free_req_dev_types(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_free_sd_queries	src/p2p/p2p_i.h	/^void p2p_free_sd_queries(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_free_sd_queries	src/p2p/p2p_sd.c	/^void p2p_free_sd_queries(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_free_sd_query	src/p2p/p2p_sd.c	/^static void p2p_free_sd_query(struct p2p_sd_query *q)$/;"	f	file:	signature:(struct p2p_sd_query *q)
p2p_freq_to_channel	src/p2p/p2p_i.h	/^int p2p_freq_to_channel(const char *country, unsigned int freq, u8 *reg_class,$/;"	p	signature:(const char *country, unsigned int freq, u8 *reg_class, u8 *channel)
p2p_freq_to_channel	src/p2p/p2p_utils.c	/^int p2p_freq_to_channel(const char *country, unsigned int freq, u8 *reg_class,$/;"	f	signature:(const char *country, unsigned int freq, u8 *reg_class, u8 *channel)
p2p_get_cross_connect_disallowed	src/p2p/p2p.h	/^int p2p_get_cross_connect_disallowed(const struct wpabuf *p2p_ie);$/;"	p	signature:(const struct wpabuf *p2p_ie)
p2p_get_cross_connect_disallowed	src/p2p/p2p_parse.c	/^int p2p_get_cross_connect_disallowed(const struct wpabuf *p2p_ie)$/;"	f	signature:(const struct wpabuf *p2p_ie)
p2p_get_dev_addr	src/p2p/p2p.c	/^int p2p_get_dev_addr(struct p2p_data *p2p, const u8 *iface_addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *iface_addr, u8 *dev_addr)
p2p_get_dev_addr	src/p2p/p2p.h	/^int p2p_get_dev_addr(struct p2p_data *p2p, const u8 *iface_addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *iface_addr, u8 *dev_addr)
p2p_get_device	src/p2p/p2p.c	/^struct p2p_device * p2p_get_device(struct p2p_data *p2p, const u8 *addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_get_device	src/p2p/p2p_i.h	/^struct p2p_device * p2p_get_device(struct p2p_data *p2p, const u8 *addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_get_device_interface	src/p2p/p2p.c	/^struct p2p_device * p2p_get_device_interface(struct p2p_data *p2p,$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_get_device_interface	src/p2p/p2p_i.h	/^struct p2p_device * p2p_get_device_interface(struct p2p_data *p2p,$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_get_go_dev_addr	src/p2p/p2p.h	/^const u8 * p2p_get_go_dev_addr(const struct wpabuf *p2p_ie);$/;"	p	signature:(const struct wpabuf *p2p_ie)
p2p_get_go_dev_addr	src/p2p/p2p_parse.c	/^const u8 * p2p_get_go_dev_addr(const struct wpabuf *p2p_ie)$/;"	f	signature:(const struct wpabuf *p2p_ie)
p2p_get_go_neg_peer	src/p2p/p2p.c	/^const u8 * p2p_get_go_neg_peer(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_get_go_neg_peer	src/p2p/p2p.h	/^const u8 * p2p_get_go_neg_peer(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_get_group_capab	src/p2p/p2p.h	/^u8 p2p_get_group_capab(const struct wpabuf *p2p_ie);$/;"	p	signature:(const struct wpabuf *p2p_ie)
p2p_get_group_capab	src/p2p/p2p_parse.c	/^u8 p2p_get_group_capab(const struct wpabuf *p2p_ie)$/;"	f	signature:(const struct wpabuf *p2p_ie)
p2p_get_group_num_members	src/p2p/p2p.h	/^unsigned int p2p_get_group_num_members(struct p2p_group *group);$/;"	p	signature:(struct p2p_group *group)
p2p_get_group_num_members	src/p2p/p2p_group.c	/^unsigned int p2p_get_group_num_members(struct p2p_group *group)$/;"	f	signature:(struct p2p_group *group)
p2p_get_interface_addr	src/p2p/p2p.c	/^int p2p_get_interface_addr(struct p2p_data *p2p, const u8 *dev_addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *dev_addr, u8 *iface_addr)
p2p_get_interface_addr	src/p2p/p2p.h	/^int p2p_get_interface_addr(struct p2p_data *p2p, const u8 *dev_addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *dev_addr, u8 *iface_addr)
p2p_get_next_prog_freq	src/p2p/p2p.c	/^static int p2p_get_next_prog_freq(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_get_oper_freq	src/p2p/p2p.c	/^int p2p_get_oper_freq(struct p2p_data *p2p, const u8 *iface_addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *iface_addr)
p2p_get_oper_freq	src/p2p/p2p.h	/^int p2p_get_oper_freq(struct p2p_data *p2p, const u8 *iface_addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *iface_addr)
p2p_get_peer_found	src/p2p/p2p.c	/^p2p_get_peer_found(struct p2p_data *p2p, const u8 *addr, int next)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr, int next)
p2p_get_peer_found	src/p2p/p2p.h	/^p2p_get_peer_found(struct p2p_data *p2p, const u8 *addr, int next);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr, int next)
p2p_get_peer_info	src/p2p/p2p.c	/^const struct p2p_peer_info * p2p_get_peer_info(struct p2p_data *p2p,$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr, int next)
p2p_get_peer_info	src/p2p/p2p.h	/^const struct p2p_peer_info * p2p_get_peer_info(struct p2p_data *p2p,$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr, int next)
p2p_get_peer_info_txt	src/p2p/p2p.c	/^int p2p_get_peer_info_txt(const struct p2p_peer_info *info,$/;"	f	signature:(const struct p2p_peer_info *info, char *buf, size_t buflen)
p2p_get_peer_info_txt	src/p2p/p2p.h	/^int p2p_get_peer_info_txt(const struct p2p_peer_info *info,$/;"	p	signature:(const struct p2p_peer_info *info, char *buf, size_t buflen)
p2p_get_provisioning_info	src/p2p/p2p.c	/^u16 p2p_get_provisioning_info(struct p2p_data *p2p, const u8 *addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_get_provisioning_info	src/p2p/p2p.h	/^u16 p2p_get_provisioning_info(struct p2p_data *p2p, const u8 *addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_go_complete	src/p2p/p2p.c	/^void p2p_go_complete(struct p2p_data *p2p, struct p2p_device *peer)$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *peer)
p2p_go_complete	src/p2p/p2p_i.h	/^void p2p_go_complete(struct p2p_data *p2p, struct p2p_device *peer);$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *peer)
p2p_go_det	src/p2p/p2p_go_neg.c	/^static int p2p_go_det(u8 own_intent, u8 peer_value)$/;"	f	file:	signature:(u8 own_intent, u8 peer_value)
p2p_go_disc_req_cb	src/p2p/p2p_dev_disc.c	/^void p2p_go_disc_req_cb(struct p2p_data *p2p, int success)$/;"	f	signature:(struct p2p_data *p2p, int success)
p2p_go_disc_req_cb	src/p2p/p2p_i.h	/^void p2p_go_disc_req_cb(struct p2p_data *p2p, int success);$/;"	p	signature:(struct p2p_data *p2p, int success)
p2p_go_neg_completed	src/drivers/driver.h	/^	struct p2p_go_neg_completed {$/;"	s	union:wpa_event_data	access:public
p2p_go_neg_completed	src/drivers/driver.h	/^	} p2p_go_neg_completed;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_go_neg_completed	access:public
p2p_go_neg_conf_cb	src/p2p/p2p.c	/^static void p2p_go_neg_conf_cb(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, enum p2p_send_action_result result)
p2p_go_neg_failed	src/p2p/p2p.c	/^void p2p_go_neg_failed(struct p2p_data *p2p, struct p2p_device *peer,$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *peer, int status)
p2p_go_neg_failed	src/p2p/p2p_i.h	/^void p2p_go_neg_failed(struct p2p_data *p2p, struct p2p_device *peer,$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *peer, int status)
p2p_go_neg_req_cb	src/p2p/p2p.c	/^static void p2p_go_neg_req_cb(struct p2p_data *p2p, int success)$/;"	f	file:	signature:(struct p2p_data *p2p, int success)
p2p_go_neg_req_rx	src/drivers/driver.h	/^	struct p2p_go_neg_req_rx {$/;"	s	union:wpa_event_data	access:public
p2p_go_neg_req_rx	src/drivers/driver.h	/^	} p2p_go_neg_req_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_go_neg_req_rx	access:public
p2p_go_neg_resp_cb	src/p2p/p2p.c	/^static void p2p_go_neg_resp_cb(struct p2p_data *p2p, int success)$/;"	f	file:	signature:(struct p2p_data *p2p, int success)
p2p_go_neg_resp_failure_cb	src/p2p/p2p.c	/^static void p2p_go_neg_resp_failure_cb(struct p2p_data *p2p, int success)$/;"	f	file:	signature:(struct p2p_data *p2p, int success)
p2p_go_neg_results	src/p2p/p2p.h	/^struct p2p_go_neg_results {$/;"	s
p2p_go_neg_results::freq	src/p2p/p2p.h	/^	int freq;$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::freq_list	src/p2p/p2p.h	/^	int freq_list[P2P_MAX_CHANNELS];$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::passphrase	src/p2p/p2p.h	/^	char passphrase[64];$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::peer_config_timeout	src/p2p/p2p.h	/^	unsigned int peer_config_timeout;$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::peer_device_addr	src/p2p/p2p.h	/^	u8 peer_device_addr[ETH_ALEN];$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::peer_interface_addr	src/p2p/p2p.h	/^	u8 peer_interface_addr[ETH_ALEN];$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::persistent_group	src/p2p/p2p.h	/^	int persistent_group;$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::role_go	src/p2p/p2p.h	/^	int role_go;$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::ssid	src/p2p/p2p.h	/^	u8 ssid[32];$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::ssid_len	src/p2p/p2p.h	/^	size_t ssid_len;$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::status	src/p2p/p2p.h	/^	int status;$/;"	m	struct:p2p_go_neg_results	access:public
p2p_go_neg_results::wps_method	src/p2p/p2p.h	/^	enum p2p_wps_method wps_method;$/;"	m	struct:p2p_go_neg_results	typeref:enum:p2p_go_neg_results::p2p_wps_method	access:public
p2p_go_neg_start	src/p2p/p2p.c	/^static void p2p_go_neg_start(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_go_params	src/p2p/p2p.c	/^int p2p_go_params(struct p2p_data *p2p, struct p2p_go_neg_results *params)$/;"	f	signature:(struct p2p_data *p2p, struct p2p_go_neg_results *params)
p2p_go_params	src/p2p/p2p.h	/^int p2p_go_params(struct p2p_data *p2p, struct p2p_go_neg_results *params);$/;"	p	signature:(struct p2p_data *p2p, struct p2p_go_neg_results *params)
p2p_go_state	src/p2p/p2p_i.h	/^enum p2p_go_state {$/;"	g
p2p_go_state_text	src/p2p/p2p.c	/^static const char * p2p_go_state_text(enum p2p_go_state go_state)$/;"	f	file:	signature:(enum p2p_go_state go_state)
p2p_group	src/ap/hostapd.h	/^	struct p2p_group *p2p_group;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::p2p_group	access:public
p2p_group	src/p2p/p2p_group.c	/^struct p2p_group {$/;"	s	file:
p2p_group::beacon_update	src/p2p/p2p_group.c	/^	int beacon_update;$/;"	m	struct:p2p_group	file:	access:public
p2p_group::cfg	src/p2p/p2p_group.c	/^	struct p2p_group_config *cfg;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::p2p_group_config	file:	access:public
p2p_group::group_formation	src/p2p/p2p_group.c	/^	int group_formation;$/;"	m	struct:p2p_group	file:	access:public
p2p_group::members	src/p2p/p2p_group.c	/^	struct p2p_group_member *members;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::p2p_group_member	file:	access:public
p2p_group::noa	src/p2p/p2p_group.c	/^	struct wpabuf *noa;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::wpabuf	file:	access:public
p2p_group::num_members	src/p2p/p2p_group.c	/^	unsigned int num_members;$/;"	m	struct:p2p_group	file:	access:public
p2p_group::p2p	src/p2p/p2p_group.c	/^	struct p2p_data *p2p;$/;"	m	struct:p2p_group	typeref:struct:p2p_group::p2p_data	file:	access:public
p2p_group_add_common_ies	src/p2p/p2p_group.c	/^static void p2p_group_add_common_ies(struct p2p_group *group,$/;"	f	file:	signature:(struct p2p_group *group, struct wpabuf *ie)
p2p_group_add_noa	src/p2p/p2p_group.c	/^static void p2p_group_add_noa(struct wpabuf *ie, struct wpabuf *noa)$/;"	f	file:	signature:(struct wpabuf *ie, struct wpabuf *noa)
p2p_group_assoc_resp_ie	src/p2p/p2p.h	/^struct wpabuf * p2p_group_assoc_resp_ie(struct p2p_group *group, u8 status);$/;"	p	signature:(struct p2p_group *group, u8 status)
p2p_group_assoc_resp_ie	src/p2p/p2p_group.c	/^struct wpabuf * p2p_group_assoc_resp_ie(struct p2p_group *group, u8 status)$/;"	f	signature:(struct p2p_group *group, u8 status)
p2p_group_build_beacon_ie	src/p2p/p2p_group.c	/^static struct wpabuf * p2p_group_build_beacon_ie(struct p2p_group *group)$/;"	f	file:	signature:(struct p2p_group *group)
p2p_group_build_probe_resp_ie	src/p2p/p2p_group.c	/^static struct wpabuf * p2p_group_build_probe_resp_ie(struct p2p_group *group)$/;"	f	file:	signature:(struct p2p_group *group)
p2p_group_config	src/p2p/p2p.h	/^struct p2p_group_config {$/;"	s
p2p_group_config::cb_ctx	src/p2p/p2p.h	/^	void *cb_ctx;$/;"	m	struct:p2p_group_config	access:public
p2p_group_config::idle_update	src/p2p/p2p.h	/^	void (*idle_update)(void *ctx, int idle);$/;"	m	struct:p2p_group_config	access:public
p2p_group_config::ie_update	src/p2p/p2p.h	/^	void (*ie_update)(void *ctx, struct wpabuf *beacon_ies,$/;"	m	struct:p2p_group_config	access:public
p2p_group_config::interface_addr	src/p2p/p2p.h	/^	u8 interface_addr[ETH_ALEN];$/;"	m	struct:p2p_group_config	access:public
p2p_group_config::max_clients	src/p2p/p2p.h	/^	unsigned int max_clients;$/;"	m	struct:p2p_group_config	access:public
p2p_group_config::persistent_group	src/p2p/p2p.h	/^	int persistent_group;$/;"	m	struct:p2p_group_config	access:public
p2p_group_deinit	src/p2p/p2p.h	/^void p2p_group_deinit(struct p2p_group *group);$/;"	p	signature:(struct p2p_group *group)
p2p_group_deinit	src/p2p/p2p_group.c	/^void p2p_group_deinit(struct p2p_group *group)$/;"	f	signature:(struct p2p_group *group)
p2p_group_formation_failed	src/drivers/driver.h	/^	int (*p2p_group_formation_failed)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
p2p_group_formation_failed	src/p2p/p2p.c	/^void p2p_group_formation_failed(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_group_formation_failed	src/p2p/p2p.h	/^void p2p_group_formation_failed(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_group_free_member	src/p2p/p2p_group.c	/^static void p2p_group_free_member(struct p2p_group_member *m)$/;"	f	file:	signature:(struct p2p_group_member *m)
p2p_group_free_members	src/p2p/p2p_group.c	/^static void p2p_group_free_members(struct p2p_group *group)$/;"	f	file:	signature:(struct p2p_group *group)
p2p_group_get_client	src/p2p/p2p_group.c	/^static struct p2p_group_member * p2p_group_get_client(struct p2p_group *group,$/;"	f	file:	signature:(struct p2p_group *group, const u8 *dev_id)
p2p_group_get_client_iface	src/p2p/p2p_group.c	/^static struct p2p_group_member * p2p_group_get_client_iface($/;"	f	file:	signature:( struct p2p_group *group, const u8 *interface_addr)
p2p_group_get_dev_addr	src/p2p/p2p.h	/^const u8 * p2p_group_get_dev_addr(struct p2p_group *group, const u8 *addr);$/;"	p	signature:(struct p2p_group *group, const u8 *addr)
p2p_group_get_dev_addr	src/p2p/p2p_group.c	/^const u8 * p2p_group_get_dev_addr(struct p2p_group *group, const u8 *addr)$/;"	f	signature:(struct p2p_group *group, const u8 *addr)
p2p_group_get_interface_addr	src/p2p/p2p_group.c	/^const u8 * p2p_group_get_interface_addr(struct p2p_group *group)$/;"	f	signature:(struct p2p_group *group)
p2p_group_get_interface_addr	src/p2p/p2p_i.h	/^const u8 * p2p_group_get_interface_addr(struct p2p_group *group);$/;"	p	signature:(struct p2p_group *group)
p2p_group_go_discover	src/p2p/p2p.h	/^int p2p_group_go_discover(struct p2p_group *group, const u8 *dev_id,$/;"	p	signature:(struct p2p_group *group, const u8 *dev_id, const u8 *searching_dev, int rx_freq)
p2p_group_go_discover	src/p2p/p2p_group.c	/^int p2p_group_go_discover(struct p2p_group *group, const u8 *dev_id,$/;"	f	signature:(struct p2p_group *group, const u8 *dev_id, const u8 *searching_dev, int rx_freq)
p2p_group_info	src/p2p/p2p_i.h	/^struct p2p_group_info {$/;"	s
p2p_group_info::client	src/p2p/p2p_i.h	/^	} client[P2P_MAX_GROUP_ENTRIES];$/;"	m	struct:p2p_group_info	typeref:struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::num_clients	src/p2p/p2p_i.h	/^	unsigned int num_clients;$/;"	m	struct:p2p_group_info	access:public
p2p_group_info::p2p_client_info	src/p2p/p2p_i.h	/^	struct p2p_client_info {$/;"	s	struct:p2p_group_info	access:public
p2p_group_info::p2p_client_info::config_methods	src/p2p/p2p_i.h	/^		u16 config_methods;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::dev_capab	src/p2p/p2p_i.h	/^		u8 dev_capab;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::dev_name	src/p2p/p2p_i.h	/^		const char *dev_name;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::dev_name_len	src/p2p/p2p_i.h	/^		size_t dev_name_len;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::num_sec_dev_types	src/p2p/p2p_i.h	/^		u8 num_sec_dev_types;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::p2p_device_addr	src/p2p/p2p_i.h	/^		const u8 *p2p_device_addr;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::p2p_interface_addr	src/p2p/p2p_i.h	/^		const u8 *p2p_interface_addr;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::pri_dev_type	src/p2p/p2p_i.h	/^		const u8 *pri_dev_type;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info::p2p_client_info::sec_dev_types	src/p2p/p2p_i.h	/^		const u8 *sec_dev_types;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_group_info_parse	src/p2p/p2p_i.h	/^int p2p_group_info_parse(const u8 *gi, size_t gi_len,$/;"	p	signature:(const u8 *gi, size_t gi_len, struct p2p_group_info *info)
p2p_group_info_parse	src/p2p/p2p_parse.c	/^int p2p_group_info_parse(const u8 *gi, size_t gi_len,$/;"	f	signature:(const u8 *gi, size_t gi_len, struct p2p_group_info *info)
p2p_group_info_text	src/p2p/p2p_parse.c	/^static int p2p_group_info_text(const u8 *gi, size_t gi_len, char *buf,$/;"	f	file:	signature:(const u8 *gi, size_t gi_len, char *buf, char *end)
p2p_group_init	src/p2p/p2p.h	/^struct p2p_group * p2p_group_init(struct p2p_data *p2p,$/;"	p	signature:(struct p2p_data *p2p, struct p2p_group_config *config)
p2p_group_init	src/p2p/p2p_group.c	/^struct p2p_group * p2p_group_init(struct p2p_data *p2p,$/;"	f	signature:(struct p2p_data *p2p, struct p2p_group_config *config)
p2p_group_is_client_connected	src/p2p/p2p.h	/^int p2p_group_is_client_connected(struct p2p_group *group, const u8 *dev_addr);$/;"	p	signature:(struct p2p_group *group, const u8 *dev_addr)
p2p_group_is_client_connected	src/p2p/p2p_group.c	/^int p2p_group_is_client_connected(struct p2p_group *group, const u8 *dev_addr)$/;"	f	signature:(struct p2p_group *group, const u8 *dev_addr)
p2p_group_match_dev_id	src/p2p/p2p.h	/^int p2p_group_match_dev_id(struct p2p_group *group, struct wpabuf *p2p);$/;"	p	signature:(struct p2p_group *group, struct wpabuf *p2p)
p2p_group_match_dev_id	src/p2p/p2p_group.c	/^int p2p_group_match_dev_id(struct p2p_group *group, struct wpabuf *p2p)$/;"	f	signature:(struct p2p_group *group, struct wpabuf *p2p)
p2p_group_match_dev_type	src/p2p/p2p.h	/^int p2p_group_match_dev_type(struct p2p_group *group, struct wpabuf *wps);$/;"	p	signature:(struct p2p_group *group, struct wpabuf *wps)
p2p_group_match_dev_type	src/p2p/p2p_group.c	/^int p2p_group_match_dev_type(struct p2p_group *group, struct wpabuf *wps)$/;"	f	signature:(struct p2p_group *group, struct wpabuf *wps)
p2p_group_member	src/p2p/p2p_group.c	/^struct p2p_group_member {$/;"	s	file:
p2p_group_member::addr	src/p2p/p2p_group.c	/^	u8 addr[ETH_ALEN]; \/* P2P Interface Address *\/$/;"	m	struct:p2p_group_member	file:	access:public
p2p_group_member::client_info	src/p2p/p2p_group.c	/^	struct wpabuf *client_info;$/;"	m	struct:p2p_group_member	typeref:struct:p2p_group_member::wpabuf	file:	access:public
p2p_group_member::dev_addr	src/p2p/p2p_group.c	/^	u8 dev_addr[ETH_ALEN]; \/* P2P Device Address *\/$/;"	m	struct:p2p_group_member	file:	access:public
p2p_group_member::dev_capab	src/p2p/p2p_group.c	/^	u8 dev_capab;$/;"	m	struct:p2p_group_member	file:	access:public
p2p_group_member::next	src/p2p/p2p_group.c	/^	struct p2p_group_member *next;$/;"	m	struct:p2p_group_member	typeref:struct:p2p_group_member::p2p_group_member	file:	access:public
p2p_group_member::p2p_ie	src/p2p/p2p_group.c	/^	struct wpabuf *p2p_ie;$/;"	m	struct:p2p_group_member	typeref:struct:p2p_group_member::wpabuf	file:	access:public
p2p_group_notif_assoc	src/p2p/p2p.h	/^int p2p_group_notif_assoc(struct p2p_group *group, const u8 *addr,$/;"	p	signature:(struct p2p_group *group, const u8 *addr, const u8 *ie, size_t len)
p2p_group_notif_assoc	src/p2p/p2p_group.c	/^int p2p_group_notif_assoc(struct p2p_group *group, const u8 *addr,$/;"	f	signature:(struct p2p_group *group, const u8 *addr, const u8 *ie, size_t len)
p2p_group_notif_disassoc	src/p2p/p2p.h	/^void p2p_group_notif_disassoc(struct p2p_group *group, const u8 *addr);$/;"	p	signature:(struct p2p_group *group, const u8 *addr)
p2p_group_notif_disassoc	src/p2p/p2p_group.c	/^void p2p_group_notif_disassoc(struct p2p_group *group, const u8 *addr)$/;"	f	signature:(struct p2p_group *group, const u8 *addr)
p2p_group_notif_formation_done	src/p2p/p2p.h	/^void p2p_group_notif_formation_done(struct p2p_group *group);$/;"	p	signature:(struct p2p_group *group)
p2p_group_notif_formation_done	src/p2p/p2p_group.c	/^void p2p_group_notif_formation_done(struct p2p_group *group)$/;"	f	signature:(struct p2p_group *group)
p2p_group_notif_noa	src/p2p/p2p.h	/^int p2p_group_notif_noa(struct p2p_group *group, const u8 *noa,$/;"	p	signature:(struct p2p_group *group, const u8 *noa, size_t noa_len)
p2p_group_notif_noa	src/p2p/p2p_group.c	/^int p2p_group_notif_noa(struct p2p_group *group, const u8 *noa,$/;"	f	signature:(struct p2p_group *group, const u8 *noa, size_t noa_len)
p2p_group_presence_req	src/p2p/p2p_group.c	/^u8 p2p_group_presence_req(struct p2p_group *group,$/;"	f	signature:(struct p2p_group *group, const u8 *client_interface_addr, const u8 *noa, size_t noa_len)
p2p_group_presence_req	src/p2p/p2p_i.h	/^u8 p2p_group_presence_req(struct p2p_group *group,$/;"	p	signature:(struct p2p_group *group, const u8 *client_interface_addr, const u8 *noa, size_t noa_len)
p2p_group_remove_member	src/p2p/p2p_group.c	/^static int p2p_group_remove_member(struct p2p_group *group, const u8 *addr)$/;"	f	file:	signature:(struct p2p_group *group, const u8 *addr)
p2p_group_update_ies	src/p2p/p2p_group.c	/^static void p2p_group_update_ies(struct p2p_group *group)$/;"	f	file:	signature:(struct p2p_group *group)
p2p_group_update_ies	src/p2p/p2p_group.c	/^static void p2p_group_update_ies(struct p2p_group *group);$/;"	p	file:	signature:(struct p2p_group *group)
p2p_ie	src/ap/sta_info.h	/^	struct wpabuf *p2p_ie; \/* P2P IE from (Re)Association Request *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::wpabuf	access:public
p2p_ie	src/p2p/p2p_group.c	/^	struct wpabuf *p2p_ie;$/;"	m	struct:p2p_group_member	typeref:struct:p2p_group_member::wpabuf	file:	access:public
p2p_ie_text	src/p2p/p2p.c	/^int p2p_ie_text(struct wpabuf *p2p_ie, char *buf, char *end)$/;"	f	signature:(struct wpabuf *p2p_ie, char *buf, char *end)
p2p_ie_text	src/p2p/p2p.h	/^int p2p_ie_text(struct wpabuf *p2p_ie, char *buf, char *end);$/;"	p	signature:(struct wpabuf *p2p_ie, char *buf, char *end)
p2p_in_progress	src/p2p/p2p.c	/^int p2p_in_progress(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_in_progress	src/p2p/p2p.h	/^int p2p_in_progress(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_init	src/p2p/p2p.c	/^struct p2p_data * p2p_init(const struct p2p_config *cfg)$/;"	f	signature:(const struct p2p_config *cfg)
p2p_init	src/p2p/p2p.h	/^struct p2p_data * p2p_init(const struct p2p_config *cfg);$/;"	p	signature:(const struct p2p_config *cfg)
p2p_interface_addr	src/p2p/p2p_i.h	/^		const u8 *p2p_interface_addr;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
p2p_intra_bss	src/p2p/p2p.h	/^	int p2p_intra_bss;$/;"	m	struct:p2p_config	access:public
p2p_invitation_req_cb	src/p2p/p2p_i.h	/^void p2p_invitation_req_cb(struct p2p_data *p2p, int success);$/;"	p	signature:(struct p2p_data *p2p, int success)
p2p_invitation_req_cb	src/p2p/p2p_invitation.c	/^void p2p_invitation_req_cb(struct p2p_data *p2p, int success)$/;"	f	signature:(struct p2p_data *p2p, int success)
p2p_invitation_resp_cb	src/p2p/p2p_i.h	/^void p2p_invitation_resp_cb(struct p2p_data *p2p, int success);$/;"	p	signature:(struct p2p_data *p2p, int success)
p2p_invitation_resp_cb	src/p2p/p2p_invitation.c	/^void p2p_invitation_resp_cb(struct p2p_data *p2p, int success)$/;"	f	signature:(struct p2p_data *p2p, int success)
p2p_invite	src/drivers/driver.h	/^	int (*p2p_invite)(void *priv, const u8 *peer, int role,$/;"	m	struct:wpa_driver_ops	access:public
p2p_invite	src/p2p/p2p.h	/^int p2p_invite(struct p2p_data *p2p, const u8 *peer, enum p2p_invite_role role,$/;"	p	signature:(struct p2p_data *p2p, const u8 *peer, enum p2p_invite_role role, const u8 *bssid, const u8 *ssid, size_t ssid_len, unsigned int force_freq, const u8 *go_dev_addr, int persistent_group)
p2p_invite	src/p2p/p2p_invitation.c	/^int p2p_invite(struct p2p_data *p2p, const u8 *peer, enum p2p_invite_role role,$/;"	f	signature:(struct p2p_data *p2p, const u8 *peer, enum p2p_invite_role role, const u8 *bssid, const u8 *ssid, size_t ssid_len, unsigned int force_freq, const u8 *go_dev_addr, int persistent_group)
p2p_invite_role	src/p2p/p2p.h	/^enum p2p_invite_role {$/;"	g
p2p_invite_send	src/p2p/p2p_i.h	/^int p2p_invite_send(struct p2p_data *p2p, struct p2p_device *dev,$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *dev, const u8 *go_dev_addr)
p2p_invite_send	src/p2p/p2p_invitation.c	/^int p2p_invite_send(struct p2p_data *p2p, struct p2p_device *dev,$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *dev, const u8 *go_dev_addr)
p2p_invite_start	src/p2p/p2p.c	/^static void p2p_invite_start(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_iterate_group_members	src/p2p/p2p.h	/^const u8 * p2p_iterate_group_members(struct p2p_group *group, void **next);$/;"	p	signature:(struct p2p_group *group, void **next)
p2p_iterate_group_members	src/p2p/p2p_group.c	/^const u8 * p2p_iterate_group_members(struct p2p_group *group, void **next)$/;"	f	signature:(struct p2p_group *group, void **next)
p2p_len	src/common/ieee802_11_common.h	/^	u8 p2p_len;$/;"	m	struct:ieee802_11_elems	access:public
p2p_listen	src/drivers/driver.h	/^	int (*p2p_listen)(void *priv, unsigned int timeout);$/;"	m	struct:wpa_driver_ops	access:public
p2p_listen	src/p2p/p2p.c	/^int p2p_listen(struct p2p_data *p2p, unsigned int timeout)$/;"	f	signature:(struct p2p_data *p2p, unsigned int timeout)
p2p_listen	src/p2p/p2p.h	/^int p2p_listen(struct p2p_data *p2p, unsigned int timeout);$/;"	p	signature:(struct p2p_data *p2p, unsigned int timeout)
p2p_listen_cb	src/p2p/p2p.c	/^void p2p_listen_cb(struct p2p_data *p2p, unsigned int freq,$/;"	f	signature:(struct p2p_data *p2p, unsigned int freq, unsigned int duration)
p2p_listen_cb	src/p2p/p2p.h	/^void p2p_listen_cb(struct p2p_data *p2p, unsigned int freq,$/;"	p	signature:(struct p2p_data *p2p, unsigned int freq, unsigned int duration)
p2p_listen_end	src/p2p/p2p.c	/^int p2p_listen_end(struct p2p_data *p2p, unsigned int freq)$/;"	f	signature:(struct p2p_data *p2p, unsigned int freq)
p2p_listen_end	src/p2p/p2p.h	/^int p2p_listen_end(struct p2p_data *p2p, unsigned int freq);$/;"	p	signature:(struct p2p_data *p2p, unsigned int freq)
p2p_listen_in_find	src/p2p/p2p.c	/^static void p2p_listen_in_find(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_manager_disconnect	hostapd/ctrl_iface.c	/^static int p2p_manager_disconnect(struct hostapd_data *hapd, u16 stype,$/;"	f	file:	signature:(struct hostapd_data *hapd, u16 stype, u8 minor_reason_code, const u8 *addr)
p2p_match_dev_type	src/p2p/p2p.c	/^int p2p_match_dev_type(struct p2p_data *p2p, struct wpabuf *wps)$/;"	f	signature:(struct p2p_data *p2p, struct wpabuf *wps)
p2p_match_dev_type	src/p2p/p2p_i.h	/^int p2p_match_dev_type(struct p2p_data *p2p, struct wpabuf *wps);$/;"	p	signature:(struct p2p_data *p2p, struct wpabuf *wps)
p2p_match_dev_type_member	src/p2p/p2p_group.c	/^static int p2p_match_dev_type_member(struct p2p_group_member *m,$/;"	f	file:	signature:(struct p2p_group_member *m, struct wpabuf *wps)
p2p_message	src/p2p/p2p_i.h	/^struct p2p_message {$/;"	s
p2p_message::capability	src/p2p/p2p_i.h	/^	const u8 *capability;$/;"	m	struct:p2p_message	access:public
p2p_message::channel_list	src/p2p/p2p_i.h	/^	const u8 *channel_list;$/;"	m	struct:p2p_message	access:public
p2p_message::channel_list_len	src/p2p/p2p_i.h	/^	u8 channel_list_len;$/;"	m	struct:p2p_message	access:public
p2p_message::config_methods	src/p2p/p2p_i.h	/^	u16 config_methods;$/;"	m	struct:p2p_message	access:public
p2p_message::config_timeout	src/p2p/p2p_i.h	/^	const u8 *config_timeout;$/;"	m	struct:p2p_message	access:public
p2p_message::dev_password_id	src/p2p/p2p_i.h	/^	u16 dev_password_id;$/;"	m	struct:p2p_message	access:public
p2p_message::device_id	src/p2p/p2p_i.h	/^	const u8 *device_id;$/;"	m	struct:p2p_message	access:public
p2p_message::device_name	src/p2p/p2p_i.h	/^	char device_name[33];$/;"	m	struct:p2p_message	access:public
p2p_message::dialog_token	src/p2p/p2p_i.h	/^	u8 dialog_token;$/;"	m	struct:p2p_message	access:public
p2p_message::ds_params	src/p2p/p2p_i.h	/^	const u8 *ds_params;$/;"	m	struct:p2p_message	access:public
p2p_message::ext_listen_timing	src/p2p/p2p_i.h	/^	const u8 *ext_listen_timing;$/;"	m	struct:p2p_message	access:public
p2p_message::go_intent	src/p2p/p2p_i.h	/^	const u8 *go_intent;$/;"	m	struct:p2p_message	access:public
p2p_message::group_bssid	src/p2p/p2p_i.h	/^	const u8 *group_bssid;$/;"	m	struct:p2p_message	access:public
p2p_message::group_id	src/p2p/p2p_i.h	/^	const u8 *group_id;$/;"	m	struct:p2p_message	access:public
p2p_message::group_id_len	src/p2p/p2p_i.h	/^	size_t group_id_len;$/;"	m	struct:p2p_message	access:public
p2p_message::group_info	src/p2p/p2p_i.h	/^	const u8 *group_info;$/;"	m	struct:p2p_message	access:public
p2p_message::group_info_len	src/p2p/p2p_i.h	/^	size_t group_info_len;$/;"	m	struct:p2p_message	access:public
p2p_message::intended_addr	src/p2p/p2p_i.h	/^	const u8 *intended_addr;$/;"	m	struct:p2p_message	access:public
p2p_message::invitation_flags	src/p2p/p2p_i.h	/^	const u8 *invitation_flags;$/;"	m	struct:p2p_message	access:public
p2p_message::listen_channel	src/p2p/p2p_i.h	/^	const u8 *listen_channel;$/;"	m	struct:p2p_message	access:public
p2p_message::manageability	src/p2p/p2p_i.h	/^	const u8 *manageability;$/;"	m	struct:p2p_message	access:public
p2p_message::manufacturer	src/p2p/p2p_i.h	/^	const u8 *manufacturer;$/;"	m	struct:p2p_message	access:public
p2p_message::manufacturer_len	src/p2p/p2p_i.h	/^	size_t manufacturer_len;$/;"	m	struct:p2p_message	access:public
p2p_message::minor_reason_code	src/p2p/p2p_i.h	/^	const u8 *minor_reason_code;$/;"	m	struct:p2p_message	access:public
p2p_message::model_name	src/p2p/p2p_i.h	/^	const u8 *model_name;$/;"	m	struct:p2p_message	access:public
p2p_message::model_name_len	src/p2p/p2p_i.h	/^	size_t model_name_len;$/;"	m	struct:p2p_message	access:public
p2p_message::model_number	src/p2p/p2p_i.h	/^	const u8 *model_number;$/;"	m	struct:p2p_message	access:public
p2p_message::model_number_len	src/p2p/p2p_i.h	/^	size_t model_number_len;$/;"	m	struct:p2p_message	access:public
p2p_message::noa	src/p2p/p2p_i.h	/^	const u8 *noa;$/;"	m	struct:p2p_message	access:public
p2p_message::noa_len	src/p2p/p2p_i.h	/^	size_t noa_len;$/;"	m	struct:p2p_message	access:public
p2p_message::num_sec_dev_types	src/p2p/p2p_i.h	/^	u8 num_sec_dev_types;$/;"	m	struct:p2p_message	access:public
p2p_message::operating_channel	src/p2p/p2p_i.h	/^	const u8 *operating_channel;$/;"	m	struct:p2p_message	access:public
p2p_message::p2p_attributes	src/p2p/p2p_i.h	/^	struct wpabuf *p2p_attributes;$/;"	m	struct:p2p_message	typeref:struct:p2p_message::wpabuf	access:public
p2p_message::p2p_device_addr	src/p2p/p2p_i.h	/^	const u8 *p2p_device_addr;$/;"	m	struct:p2p_message	access:public
p2p_message::p2p_device_info	src/p2p/p2p_i.h	/^	const u8 *p2p_device_info;$/;"	m	struct:p2p_message	access:public
p2p_message::p2p_device_info_len	src/p2p/p2p_i.h	/^	size_t p2p_device_info_len;$/;"	m	struct:p2p_message	access:public
p2p_message::pri_dev_type	src/p2p/p2p_i.h	/^	const u8 *pri_dev_type;$/;"	m	struct:p2p_message	access:public
p2p_message::serial_number	src/p2p/p2p_i.h	/^	const u8 *serial_number;$/;"	m	struct:p2p_message	access:public
p2p_message::serial_number_len	src/p2p/p2p_i.h	/^	size_t serial_number_len;$/;"	m	struct:p2p_message	access:public
p2p_message::ssid	src/p2p/p2p_i.h	/^	const u8 *ssid;$/;"	m	struct:p2p_message	access:public
p2p_message::status	src/p2p/p2p_i.h	/^	const u8 *status;$/;"	m	struct:p2p_message	access:public
p2p_message::wps_attributes	src/p2p/p2p_i.h	/^	struct wpabuf *wps_attributes;$/;"	m	struct:p2p_message	typeref:struct:p2p_message::wpabuf	access:public
p2p_message::wps_config_methods	src/p2p/p2p_i.h	/^	u16 wps_config_methods;$/;"	m	struct:p2p_message	access:public
p2p_message::wps_pri_dev_type	src/p2p/p2p_i.h	/^	const u8 *wps_pri_dev_type;$/;"	m	struct:p2p_message	access:public
p2p_message::wps_sec_dev_type_list	src/p2p/p2p_i.h	/^	const u8 *wps_sec_dev_type_list;$/;"	m	struct:p2p_message	access:public
p2p_message::wps_sec_dev_type_list_len	src/p2p/p2p_i.h	/^	size_t wps_sec_dev_type_list_len;$/;"	m	struct:p2p_message	access:public
p2p_message::wps_vendor_ext	src/p2p/p2p_i.h	/^	const u8 *wps_vendor_ext[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_message	access:public
p2p_message::wps_vendor_ext_len	src/p2p/p2p_i.h	/^	size_t wps_vendor_ext_len[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_message	access:public
p2p_noa_desc	src/p2p/p2p_i.h	/^struct p2p_noa_desc {$/;"	s
p2p_noa_desc::count_type	src/p2p/p2p_i.h	/^	u8 count_type;$/;"	m	struct:p2p_noa_desc	access:public
p2p_noa_desc::duration	src/p2p/p2p_i.h	/^	u32 duration;$/;"	m	struct:p2p_noa_desc	access:public
p2p_noa_desc::interval	src/p2p/p2p_i.h	/^	u32 interval;$/;"	m	struct:p2p_noa_desc	access:public
p2p_noa_desc::start_time	src/p2p/p2p_i.h	/^	u32 start_time;$/;"	m	struct:p2p_noa_desc	access:public
p2p_other_scan_completed	src/p2p/p2p.c	/^int p2p_other_scan_completed(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_other_scan_completed	src/p2p/p2p.h	/^int p2p_other_scan_completed(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_params	src/drivers/driver.h	/^struct p2p_params {$/;"	s
p2p_params::dev_name	src/drivers/driver.h	/^	const char *dev_name;$/;"	m	struct:p2p_params	access:public
p2p_params::num_sec_dev_types	src/drivers/driver.h	/^	size_t num_sec_dev_types;$/;"	m	struct:p2p_params	access:public
p2p_params::pri_dev_type	src/drivers/driver.h	/^	u8 pri_dev_type[8];$/;"	m	struct:p2p_params	access:public
p2p_params::sec_dev_type	src/drivers/driver.h	/^	u8 sec_dev_type[DRV_MAX_SEC_DEV_TYPES][8];$/;"	m	struct:p2p_params	access:public
p2p_parse	src/p2p/p2p_i.h	/^int p2p_parse(const u8 *data, size_t len, struct p2p_message *msg);$/;"	p	signature:(const u8 *data, size_t len, struct p2p_message *msg)
p2p_parse	src/p2p/p2p_parse.c	/^int p2p_parse(const u8 *data, size_t len, struct p2p_message *msg)$/;"	f	signature:(const u8 *data, size_t len, struct p2p_message *msg)
p2p_parse_attribute	src/p2p/p2p_parse.c	/^static int p2p_parse_attribute(u8 id, const u8 *data, u16 len,$/;"	f	file:	signature:(u8 id, const u8 *data, u16 len, struct p2p_message *msg)
p2p_parse_dev_addr	src/p2p/p2p.c	/^int p2p_parse_dev_addr(const u8 *ies, size_t ies_len, u8 *dev_addr)$/;"	f	signature:(const u8 *ies, size_t ies_len, u8 *dev_addr)
p2p_parse_dev_addr	src/p2p/p2p.h	/^int p2p_parse_dev_addr(const u8 *ies, size_t ies_len, u8 *dev_addr);$/;"	p	signature:(const u8 *ies, size_t ies_len, u8 *dev_addr)
p2p_parse_free	src/p2p/p2p_i.h	/^void p2p_parse_free(struct p2p_message *msg);$/;"	p	signature:(struct p2p_message *msg)
p2p_parse_free	src/p2p/p2p_parse.c	/^void p2p_parse_free(struct p2p_message *msg)$/;"	f	signature:(struct p2p_message *msg)
p2p_parse_ies	src/p2p/p2p_i.h	/^int p2p_parse_ies(const u8 *data, size_t len, struct p2p_message *msg);$/;"	p	signature:(const u8 *data, size_t len, struct p2p_message *msg)
p2p_parse_ies	src/p2p/p2p_parse.c	/^int p2p_parse_ies(const u8 *data, size_t len, struct p2p_message *msg)$/;"	f	signature:(const u8 *data, size_t len, struct p2p_message *msg)
p2p_parse_p2p_ie	src/p2p/p2p_i.h	/^int p2p_parse_p2p_ie(const struct wpabuf *buf, struct p2p_message *msg);$/;"	p	signature:(const struct wpabuf *buf, struct p2p_message *msg)
p2p_parse_p2p_ie	src/p2p/p2p_parse.c	/^int p2p_parse_p2p_ie(const struct wpabuf *buf, struct p2p_message *msg)$/;"	f	signature:(const struct wpabuf *buf, struct p2p_message *msg)
p2p_parse_wps_ie	src/p2p/p2p_parse.c	/^static int p2p_parse_wps_ie(const struct wpabuf *buf, struct p2p_message *msg)$/;"	f	file:	signature:(const struct wpabuf *buf, struct p2p_message *msg)
p2p_peer_channels	src/p2p/p2p_go_neg.c	/^static int p2p_peer_channels(struct p2p_data *p2p, struct p2p_device *dev,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_device *dev, const u8 *channel_list, size_t channel_list_len)
p2p_peer_channels_check	src/p2p/p2p_go_neg.c	/^int p2p_peer_channels_check(struct p2p_data *p2p, struct p2p_channels *own,$/;"	f	signature:(struct p2p_data *p2p, struct p2p_channels *own, struct p2p_device *dev, const u8 *channel_list, size_t channel_list_len)
p2p_peer_channels_check	src/p2p/p2p_i.h	/^int p2p_peer_channels_check(struct p2p_data *p2p, struct p2p_channels *own,$/;"	p	signature:(struct p2p_data *p2p, struct p2p_channels *own, struct p2p_device *dev, const u8 *channel_list, size_t channel_list_len)
p2p_peer_info	src/p2p/p2p.h	/^struct p2p_peer_info {$/;"	s
p2p_peer_info::config_methods	src/p2p/p2p.h	/^	u16 config_methods;$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::dev_capab	src/p2p/p2p.h	/^	u8 dev_capab;$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::device_name	src/p2p/p2p.h	/^	char device_name[33];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::group_capab	src/p2p/p2p.h	/^	u8 group_capab;$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::level	src/p2p/p2p.h	/^	int level;$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::manufacturer	src/p2p/p2p.h	/^	char manufacturer[65];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::model_name	src/p2p/p2p.h	/^	char model_name[33];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::model_number	src/p2p/p2p.h	/^	char model_number[33];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::p2p_device_addr	src/p2p/p2p.h	/^	u8 p2p_device_addr[ETH_ALEN];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::pri_dev_type	src/p2p/p2p.h	/^	u8 pri_dev_type[8];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::serial_number	src/p2p/p2p.h	/^	char serial_number[33];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::wps_sec_dev_type_list	src/p2p/p2p.h	/^	u8 wps_sec_dev_type_list[128];$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::wps_sec_dev_type_list_len	src/p2p/p2p.h	/^	size_t wps_sec_dev_type_list_len;$/;"	m	struct:p2p_peer_info	access:public
p2p_peer_info::wps_vendor_ext	src/p2p/p2p.h	/^	struct wpabuf *wps_vendor_ext[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_peer_info	typeref:struct:p2p_peer_info::wpabuf	access:public
p2p_peer_known	src/p2p/p2p.c	/^int p2p_peer_known(struct p2p_data *p2p, const u8 *addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_peer_known	src/p2p/p2p.h	/^int p2p_peer_known(struct p2p_data *p2p, const u8 *addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_pending_action_state	src/p2p/p2p_i.h	/^	enum p2p_pending_action_state {$/;"	g	struct:p2p_data	access:public
p2p_pending_action_tx	src/p2p/p2p_i.h	/^struct p2p_pending_action_tx {$/;"	s
p2p_pending_action_tx::bssid	src/p2p/p2p_i.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:p2p_pending_action_tx	access:public
p2p_pending_action_tx::dst	src/p2p/p2p_i.h	/^	u8 dst[ETH_ALEN];$/;"	m	struct:p2p_pending_action_tx	access:public
p2p_pending_action_tx::freq	src/p2p/p2p_i.h	/^	unsigned int freq;$/;"	m	struct:p2p_pending_action_tx	access:public
p2p_pending_action_tx::len	src/p2p/p2p_i.h	/^	size_t len;$/;"	m	struct:p2p_pending_action_tx	access:public
p2p_pending_action_tx::src	src/p2p/p2p_i.h	/^	u8 src[ETH_ALEN];$/;"	m	struct:p2p_pending_action_tx	access:public
p2p_pending_action_tx::wait_time	src/p2p/p2p_i.h	/^	unsigned int wait_time;$/;"	m	struct:p2p_pending_action_tx	access:public
p2p_pending_sd_req	src/p2p/p2p_i.h	/^struct p2p_sd_query * p2p_pending_sd_req(struct p2p_data *p2p,$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_pending_sd_req	src/p2p/p2p_sd.c	/^struct p2p_sd_query * p2p_pending_sd_req(struct p2p_data *p2p,$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_prepare_channel	src/p2p/p2p.c	/^static int p2p_prepare_channel(struct p2p_data *p2p, unsigned int force_freq)$/;"	f	file:	signature:(struct p2p_data *p2p, unsigned int force_freq)
p2p_presence_req	src/p2p/p2p.c	/^int p2p_presence_req(struct p2p_data *p2p, const u8 *go_interface_addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *go_interface_addr, const u8 *own_interface_addr, unsigned int freq, u32 duration1, u32 interval1, u32 duration2, u32 interval2)
p2p_presence_req	src/p2p/p2p.h	/^int p2p_presence_req(struct p2p_data *p2p, const u8 *go_interface_addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *go_interface_addr, const u8 *own_interface_addr, unsigned int freq, u32 duration1, u32 interval1, u32 duration2, u32 interval2)
p2p_probe	src/drivers/driver.h	/^	u8 p2p_probe;$/;"	m	struct:wpa_driver_scan_params	access:public
p2p_probe_req_rx	src/p2p/p2p.c	/^int p2p_probe_req_rx(struct p2p_data *p2p, const u8 *addr, const u8 *dst,$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr, const u8 *dst, const u8 *bssid, const u8 *ie, size_t ie_len)
p2p_probe_req_rx	src/p2p/p2p.h	/^int p2p_probe_req_rx(struct p2p_data *p2p, const u8 *addr, const u8 *dst,$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr, const u8 *dst, const u8 *bssid, const u8 *ie, size_t ie_len)
p2p_probe_resp_ie	src/ap/hostapd.h	/^	struct wpabuf *p2p_probe_resp_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
p2p_process_dev_disc_req	src/p2p/p2p_dev_disc.c	/^void p2p_process_dev_disc_req(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_dev_disc_req	src/p2p/p2p_i.h	/^void p2p_process_dev_disc_req(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_dev_disc_resp	src/p2p/p2p_dev_disc.c	/^void p2p_process_dev_disc_resp(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_dev_disc_resp	src/p2p/p2p_i.h	/^void p2p_process_dev_disc_resp(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_go_disc_req	src/p2p/p2p_dev_disc.c	/^void p2p_process_go_disc_req(struct p2p_data *p2p, const u8 *da, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_go_disc_req	src/p2p/p2p_i.h	/^void p2p_process_go_disc_req(struct p2p_data *p2p, const u8 *da, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_go_neg_conf	src/p2p/p2p_go_neg.c	/^void p2p_process_go_neg_conf(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_go_neg_conf	src/p2p/p2p_i.h	/^void p2p_process_go_neg_conf(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_go_neg_req	src/p2p/p2p_go_neg.c	/^void p2p_process_go_neg_req(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_go_neg_req	src/p2p/p2p_i.h	/^void p2p_process_go_neg_req(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_go_neg_resp	src/p2p/p2p_go_neg.c	/^void p2p_process_go_neg_resp(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_go_neg_resp	src/p2p/p2p_i.h	/^void p2p_process_go_neg_resp(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_invitation_req	src/p2p/p2p_i.h	/^void p2p_process_invitation_req(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_invitation_req	src/p2p/p2p_invitation.c	/^void p2p_process_invitation_req(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_invitation_resp	src/p2p/p2p_i.h	/^void p2p_process_invitation_resp(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_invitation_resp	src/p2p/p2p_invitation.c	/^void p2p_process_invitation_resp(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_presence_req	src/p2p/p2p.c	/^static void p2p_process_presence_req(struct p2p_data *p2p, const u8 *da,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_presence_req	src/p2p/p2p.c	/^static void p2p_process_presence_req(struct p2p_data *p2p, const u8 *da,$/;"	p	file:	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_presence_resp	src/p2p/p2p.c	/^static void p2p_process_presence_resp(struct p2p_data *p2p, const u8 *da,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *data, size_t len)
p2p_process_presence_resp	src/p2p/p2p.c	/^static void p2p_process_presence_resp(struct p2p_data *p2p, const u8 *da,$/;"	p	file:	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *data, size_t len)
p2p_process_prov_disc_req	src/p2p/p2p_i.h	/^void p2p_process_prov_disc_req(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_prov_disc_req	src/p2p/p2p_pd.c	/^void p2p_process_prov_disc_req(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_process_prov_disc_resp	src/p2p/p2p_i.h	/^void p2p_process_prov_disc_resp(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_process_prov_disc_resp	src/p2p/p2p_pd.c	/^void p2p_process_prov_disc_resp(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len)
p2p_prov_disc_cb	src/p2p/p2p.c	/^static void p2p_prov_disc_cb(struct p2p_data *p2p, int success)$/;"	f	file:	signature:(struct p2p_data *p2p, int success)
p2p_prov_disc_req	src/drivers/driver.h	/^	int (*p2p_prov_disc_req)(void *priv, const u8 *peer_addr,$/;"	m	struct:wpa_driver_ops	access:public
p2p_prov_disc_req	src/drivers/driver.h	/^	struct p2p_prov_disc_req {$/;"	s	union:wpa_event_data	access:public
p2p_prov_disc_req	src/drivers/driver.h	/^	} p2p_prov_disc_req;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_prov_disc_req	access:public
p2p_prov_disc_req	src/p2p/p2p.h	/^int p2p_prov_disc_req(struct p2p_data *p2p, const u8 *peer_addr,$/;"	p	signature:(struct p2p_data *p2p, const u8 *peer_addr, u16 config_methods, int join, int force_freq)
p2p_prov_disc_req	src/p2p/p2p_pd.c	/^int p2p_prov_disc_req(struct p2p_data *p2p, const u8 *peer_addr,$/;"	f	signature:(struct p2p_data *p2p, const u8 *peer_addr, u16 config_methods, int join, int force_freq)
p2p_prov_disc_resp	src/drivers/driver.h	/^	struct p2p_prov_disc_resp {$/;"	s	union:wpa_event_data	access:public
p2p_prov_disc_resp	src/drivers/driver.h	/^	} p2p_prov_disc_resp;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_prov_disc_resp	access:public
p2p_prov_disc_status	src/p2p/p2p.h	/^enum p2p_prov_disc_status {$/;"	g
p2p_random	src/p2p/p2p_i.h	/^int p2p_random(char *buf, size_t len);$/;"	p	signature:(char *buf, size_t len)
p2p_random	src/p2p/p2p_utils.c	/^int p2p_random(char *buf, size_t len)$/;"	f	signature:(char *buf, size_t len)
p2p_reg_class	src/p2p/p2p.h	/^	struct p2p_reg_class {$/;"	s	struct:p2p_channels	access:public
p2p_reg_class_intersect	src/p2p/p2p_utils.c	/^static void p2p_reg_class_intersect(const struct p2p_reg_class *a,$/;"	f	file:	signature:(const struct p2p_reg_class *a, const struct p2p_reg_class *b, struct p2p_reg_class *res)
p2p_reject	src/drivers/driver.h	/^	int (*p2p_reject)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
p2p_reject	src/p2p/p2p.c	/^int p2p_reject(struct p2p_data *p2p, const u8 *peer_addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *peer_addr)
p2p_reject	src/p2p/p2p.h	/^int p2p_reject(struct p2p_data *p2p, const u8 *peer_addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *peer_addr)
p2p_remove_wps_vendor_extensions	src/p2p/p2p.c	/^void p2p_remove_wps_vendor_extensions(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_remove_wps_vendor_extensions	src/p2p/p2p.h	/^void p2p_remove_wps_vendor_extensions(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_reply_probe	src/p2p/p2p.c	/^static void p2p_reply_probe(struct p2p_data *p2p, const u8 *addr,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *addr, const u8 *dst, const u8 *bssid, const u8 *ie, size_t ie_len)
p2p_reselect_channel	src/p2p/p2p_go_neg.c	/^static void p2p_reselect_channel(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_channels *intersection)
p2p_reset_pending_pd	src/p2p/p2p_i.h	/^void p2p_reset_pending_pd(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_reset_pending_pd	src/p2p/p2p_pd.c	/^void p2p_reset_pending_pd(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_retry_pd	src/p2p/p2p.c	/^void p2p_retry_pd(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_run_after_scan	src/p2p/p2p.c	/^static int p2p_run_after_scan(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_rx_action	src/p2p/p2p.c	/^void p2p_rx_action(struct p2p_data *p2p, const u8 *da, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *bssid, u8 category, const u8 *data, size_t len, int freq)
p2p_rx_action	src/p2p/p2p.h	/^void p2p_rx_action(struct p2p_data *p2p, const u8 *da, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *bssid, u8 category, const u8 *data, size_t len, int freq)
p2p_rx_action_public	src/p2p/p2p.c	/^void p2p_rx_action_public(struct p2p_data *p2p, const u8 *da, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *da, const u8 *sa, const u8 *bssid, const u8 *data, size_t len, int freq)
p2p_rx_gas_comeback_req	src/p2p/p2p_i.h	/^void p2p_rx_gas_comeback_req(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_comeback_req	src/p2p/p2p_sd.c	/^void p2p_rx_gas_comeback_req(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_comeback_resp	src/p2p/p2p_i.h	/^void p2p_rx_gas_comeback_resp(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_comeback_resp	src/p2p/p2p_sd.c	/^void p2p_rx_gas_comeback_resp(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_initial_req	src/p2p/p2p_i.h	/^void p2p_rx_gas_initial_req(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_initial_req	src/p2p/p2p_sd.c	/^void p2p_rx_gas_initial_req(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_initial_resp	src/p2p/p2p_i.h	/^void p2p_rx_gas_initial_resp(struct p2p_data *p2p, const u8 *sa,$/;"	p	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_gas_initial_resp	src/p2p/p2p_sd.c	/^void p2p_rx_gas_initial_resp(struct p2p_data *p2p, const u8 *sa,$/;"	f	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_rx_p2p_action	src/p2p/p2p.c	/^static void p2p_rx_p2p_action(struct p2p_data *p2p, const u8 *sa,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *sa, const u8 *data, size_t len, int rx_freq)
p2p_scan	src/p2p/p2p.h	/^	int (*p2p_scan)(void *ctx, enum p2p_scan_type type, int freq,$/;"	m	struct:p2p_config	access:public
p2p_scan_ie	src/p2p/p2p.c	/^void p2p_scan_ie(struct p2p_data *p2p, struct wpabuf *ies, const u8 *dev_id)$/;"	f	signature:(struct p2p_data *p2p, struct wpabuf *ies, const u8 *dev_id)
p2p_scan_ie	src/p2p/p2p.h	/^void p2p_scan_ie(struct p2p_data *p2p, struct wpabuf *ies, const u8 *dev_id);$/;"	p	signature:(struct p2p_data *p2p, struct wpabuf *ies, const u8 *dev_id)
p2p_scan_ie_buf_len	src/p2p/p2p.c	/^size_t p2p_scan_ie_buf_len(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_scan_ie_buf_len	src/p2p/p2p.h	/^size_t p2p_scan_ie_buf_len(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_scan_res_handled	src/p2p/p2p.c	/^void p2p_scan_res_handled(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_scan_res_handled	src/p2p/p2p.h	/^void p2p_scan_res_handled(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_scan_res_handler	src/p2p/p2p.c	/^int p2p_scan_res_handler(struct p2p_data *p2p, const u8 *bssid, int freq,$/;"	f	signature:(struct p2p_data *p2p, const u8 *bssid, int freq, int level, const u8 *ies, size_t ies_len)
p2p_scan_res_handler	src/p2p/p2p.h	/^int p2p_scan_res_handler(struct p2p_data *p2p, const u8 *bssid, int freq,$/;"	p	signature:(struct p2p_data *p2p, const u8 *bssid, int freq, int level, const u8 *ies, size_t ies_len)
p2p_scan_result_text	src/p2p/p2p.c	/^int p2p_scan_result_text(const u8 *ies, size_t ies_len, char *buf, char *end)$/;"	f	signature:(const u8 *ies, size_t ies_len, char *buf, char *end)
p2p_scan_result_text	src/p2p/p2p.h	/^int p2p_scan_result_text(const u8 *ies, size_t ies_len, char *buf, char *end);$/;"	p	signature:(const u8 *ies, size_t ies_len, char *buf, char *end)
p2p_scan_running	src/p2p/p2p_i.h	/^	int p2p_scan_running;$/;"	m	struct:p2p_data	access:public
p2p_scan_timeout	src/p2p/p2p.c	/^static void p2p_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_scan_timeout	src/p2p/p2p.c	/^static void p2p_scan_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_scan_type	src/p2p/p2p.h	/^enum p2p_scan_type {$/;"	g
p2p_sd_cancel_request	src/drivers/driver.h	/^	int (*p2p_sd_cancel_request)(void *priv, u64 req);$/;"	m	struct:wpa_driver_ops	access:public
p2p_sd_cancel_request	src/p2p/p2p.h	/^int p2p_sd_cancel_request(struct p2p_data *p2p, void *req);$/;"	p	signature:(struct p2p_data *p2p, void *req)
p2p_sd_cancel_request	src/p2p/p2p_sd.c	/^int p2p_sd_cancel_request(struct p2p_data *p2p, void *req)$/;"	f	signature:(struct p2p_data *p2p, void *req)
p2p_sd_cb	src/p2p/p2p.c	/^static void p2p_sd_cb(struct p2p_data *p2p, int success)$/;"	f	file:	signature:(struct p2p_data *p2p, int success)
p2p_sd_query	src/p2p/p2p_i.h	/^struct p2p_sd_query {$/;"	s
p2p_sd_query::for_all_peers	src/p2p/p2p_i.h	/^	int for_all_peers;$/;"	m	struct:p2p_sd_query	access:public
p2p_sd_query::next	src/p2p/p2p_i.h	/^	struct p2p_sd_query *next;$/;"	m	struct:p2p_sd_query	typeref:struct:p2p_sd_query::p2p_sd_query	access:public
p2p_sd_query::peer	src/p2p/p2p_i.h	/^	u8 peer[ETH_ALEN];$/;"	m	struct:p2p_sd_query	access:public
p2p_sd_query::tlvs	src/p2p/p2p_i.h	/^	struct wpabuf *tlvs;$/;"	m	struct:p2p_sd_query	typeref:struct:p2p_sd_query::wpabuf	access:public
p2p_sd_req	src/drivers/driver.h	/^	struct p2p_sd_req {$/;"	s	union:wpa_event_data	access:public
p2p_sd_req	src/drivers/driver.h	/^	} p2p_sd_req;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_sd_req	access:public
p2p_sd_request	src/drivers/driver.h	/^	u64 (*p2p_sd_request)(void *priv, const u8 *dst,$/;"	m	struct:wpa_driver_ops	access:public
p2p_sd_request	src/p2p/p2p.h	/^void * p2p_sd_request(struct p2p_data *p2p, const u8 *dst,$/;"	p	signature:(struct p2p_data *p2p, const u8 *dst, const struct wpabuf *tlvs)
p2p_sd_request	src/p2p/p2p_sd.c	/^void * p2p_sd_request(struct p2p_data *p2p, const u8 *dst,$/;"	f	signature:(struct p2p_data *p2p, const u8 *dst, const struct wpabuf *tlvs)
p2p_sd_resp	src/drivers/driver.h	/^	struct p2p_sd_resp {$/;"	s	union:wpa_event_data	access:public
p2p_sd_resp	src/drivers/driver.h	/^	} p2p_sd_resp;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_sd_resp	access:public
p2p_sd_response	src/drivers/driver.h	/^	int (*p2p_sd_response)(void *priv, int freq, const u8 *dst,$/;"	m	struct:wpa_driver_ops	access:public
p2p_sd_response	src/p2p/p2p.h	/^void p2p_sd_response(struct p2p_data *p2p, int freq, const u8 *dst,$/;"	p	signature:(struct p2p_data *p2p, int freq, const u8 *dst, u8 dialog_token, const struct wpabuf *resp_tlvs)
p2p_sd_response	src/p2p/p2p_sd.c	/^void p2p_sd_response(struct p2p_data *p2p, int freq, const u8 *dst,$/;"	f	signature:(struct p2p_data *p2p, int freq, const u8 *dst, u8 dialog_token, const struct wpabuf *resp_tlvs)
p2p_sd_service_update	src/p2p/p2p.h	/^void p2p_sd_service_update(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_sd_service_update	src/p2p/p2p_sd.c	/^void p2p_sd_service_update(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_sd_status	src/common/ieee802_11_defs.h	/^enum p2p_sd_status {$/;"	g
p2p_search	src/p2p/p2p.c	/^static void p2p_search(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_send_action	src/p2p/p2p.c	/^int p2p_send_action(struct p2p_data *p2p, unsigned int freq, const u8 *dst,$/;"	f	signature:(struct p2p_data *p2p, unsigned int freq, const u8 *dst, const u8 *src, const u8 *bssid, const u8 *buf, size_t len, unsigned int wait_time)
p2p_send_action	src/p2p/p2p_i.h	/^int p2p_send_action(struct p2p_data *p2p, unsigned int freq, const u8 *dst,$/;"	p	signature:(struct p2p_data *p2p, unsigned int freq, const u8 *dst, const u8 *src, const u8 *bssid, const u8 *buf, size_t len, unsigned int wait_time)
p2p_send_action_cb	src/p2p/p2p.c	/^void p2p_send_action_cb(struct p2p_data *p2p, unsigned int freq, const u8 *dst,$/;"	f	signature:(struct p2p_data *p2p, unsigned int freq, const u8 *dst, const u8 *src, const u8 *bssid, enum p2p_send_action_result result)
p2p_send_action_cb	src/p2p/p2p.h	/^void p2p_send_action_cb(struct p2p_data *p2p, unsigned int freq, const u8 *dst,$/;"	p	signature:(struct p2p_data *p2p, unsigned int freq, const u8 *dst, const u8 *src, const u8 *bssid, enum p2p_send_action_result result)
p2p_send_action_result	src/p2p/p2p.h	/^enum p2p_send_action_result {$/;"	g
p2p_send_dev_disc_req	src/p2p/p2p_dev_disc.c	/^int p2p_send_dev_disc_req(struct p2p_data *p2p, struct p2p_device *dev)$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_send_dev_disc_req	src/p2p/p2p_i.h	/^int p2p_send_dev_disc_req(struct p2p_data *p2p, struct p2p_device *dev);$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_send_dev_disc_resp	src/p2p/p2p_dev_disc.c	/^static void p2p_send_dev_disc_resp(struct p2p_data *p2p, u8 dialog_token,$/;"	f	file:	signature:(struct p2p_data *p2p, u8 dialog_token, const u8 *addr, int freq, u8 status)
p2p_send_gas_comeback_req	src/p2p/p2p_sd.c	/^static void p2p_send_gas_comeback_req(struct p2p_data *p2p, const u8 *dst,$/;"	f	file:	signature:(struct p2p_data *p2p, const u8 *dst, u8 dialog_token, int freq)
p2p_send_prov_disc_req	src/p2p/p2p_i.h	/^int p2p_send_prov_disc_req(struct p2p_data *p2p, struct p2p_device *dev,$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *dev, int join, int force_freq)
p2p_send_prov_disc_req	src/p2p/p2p_pd.c	/^int p2p_send_prov_disc_req(struct p2p_data *p2p, struct p2p_device *dev,$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *dev, int join, int force_freq)
p2p_service_protocol_type	src/common/ieee802_11_defs.h	/^enum p2p_service_protocol_type {$/;"	g
p2p_service_update	src/drivers/driver.h	/^	int (*p2p_service_update)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
p2p_set_best_channels	src/p2p/p2p.c	/^void p2p_set_best_channels(struct p2p_data *p2p, int freq_24, int freq_5,$/;"	f	signature:(struct p2p_data *p2p, int freq_24, int freq_5, int freq_overall)
p2p_set_best_channels	src/p2p/p2p.h	/^void p2p_set_best_channels(struct p2p_data *p2p, int freq_24, int freq_5,$/;"	p	signature:(struct p2p_data *p2p, int freq_24, int freq_5, int freq_overall)
p2p_set_client_discoverability	src/p2p/p2p.c	/^void p2p_set_client_discoverability(struct p2p_data *p2p, int enabled)$/;"	f	signature:(struct p2p_data *p2p, int enabled)
p2p_set_client_discoverability	src/p2p/p2p.h	/^void p2p_set_client_discoverability(struct p2p_data *p2p, int enabled);$/;"	p	signature:(struct p2p_data *p2p, int enabled)
p2p_set_config_methods	src/p2p/p2p.c	/^void p2p_set_config_methods(struct p2p_data *p2p, u16 config_methods)$/;"	f	signature:(struct p2p_data *p2p, u16 config_methods)
p2p_set_config_methods	src/p2p/p2p.h	/^void p2p_set_config_methods(struct p2p_data *p2p, u16 config_methods);$/;"	p	signature:(struct p2p_data *p2p, u16 config_methods)
p2p_set_country	src/p2p/p2p.c	/^int p2p_set_country(struct p2p_data *p2p, const char *country)$/;"	f	signature:(struct p2p_data *p2p, const char *country)
p2p_set_country	src/p2p/p2p.h	/^int p2p_set_country(struct p2p_data *p2p, const char *country);$/;"	p	signature:(struct p2p_data *p2p, const char *country)
p2p_set_cross_connect	src/p2p/p2p.c	/^void p2p_set_cross_connect(struct p2p_data *p2p, int enabled)$/;"	f	signature:(struct p2p_data *p2p, int enabled)
p2p_set_cross_connect	src/p2p/p2p.h	/^void p2p_set_cross_connect(struct p2p_data *p2p, int enabled);$/;"	p	signature:(struct p2p_data *p2p, int enabled)
p2p_set_dev_name	src/p2p/p2p.c	/^int p2p_set_dev_name(struct p2p_data *p2p, const char *dev_name)$/;"	f	signature:(struct p2p_data *p2p, const char *dev_name)
p2p_set_dev_name	src/p2p/p2p.h	/^int p2p_set_dev_name(struct p2p_data *p2p, const char *dev_name);$/;"	p	signature:(struct p2p_data *p2p, const char *dev_name)
p2p_set_dev_persistent	src/p2p/p2p.c	/^static void p2p_set_dev_persistent(struct p2p_device *dev,$/;"	f	file:	signature:(struct p2p_device *dev, int persistent_group)
p2p_set_intra_bss_dist	src/p2p/p2p.c	/^void p2p_set_intra_bss_dist(struct p2p_data *p2p, int enabled)$/;"	f	signature:(struct p2p_data *p2p, int enabled)
p2p_set_intra_bss_dist	src/p2p/p2p.h	/^void p2p_set_intra_bss_dist(struct p2p_data *p2p, int enabled);$/;"	p	signature:(struct p2p_data *p2p, int enabled)
p2p_set_listen_channel	src/p2p/p2p.c	/^int p2p_set_listen_channel(struct p2p_data *p2p, u8 reg_class, u8 channel)$/;"	f	signature:(struct p2p_data *p2p, u8 reg_class, u8 channel)
p2p_set_listen_channel	src/p2p/p2p.h	/^int p2p_set_listen_channel(struct p2p_data *p2p, u8 reg_class, u8 channel);$/;"	p	signature:(struct p2p_data *p2p, u8 reg_class, u8 channel)
p2p_set_managed_oper	src/p2p/p2p.c	/^void p2p_set_managed_oper(struct p2p_data *p2p, int enabled)$/;"	f	signature:(struct p2p_data *p2p, int enabled)
p2p_set_managed_oper	src/p2p/p2p.h	/^void p2p_set_managed_oper(struct p2p_data *p2p, int enabled);$/;"	p	signature:(struct p2p_data *p2p, int enabled)
p2p_set_manufacturer	src/p2p/p2p.c	/^int p2p_set_manufacturer(struct p2p_data *p2p, const char *manufacturer)$/;"	f	signature:(struct p2p_data *p2p, const char *manufacturer)
p2p_set_manufacturer	src/p2p/p2p.h	/^int p2p_set_manufacturer(struct p2p_data *p2p, const char *manufacturer);$/;"	p	signature:(struct p2p_data *p2p, const char *manufacturer)
p2p_set_model_name	src/p2p/p2p.c	/^int p2p_set_model_name(struct p2p_data *p2p, const char *model_name)$/;"	f	signature:(struct p2p_data *p2p, const char *model_name)
p2p_set_model_name	src/p2p/p2p.h	/^int p2p_set_model_name(struct p2p_data *p2p, const char *model_name);$/;"	p	signature:(struct p2p_data *p2p, const char *model_name)
p2p_set_model_number	src/p2p/p2p.c	/^int p2p_set_model_number(struct p2p_data *p2p, const char *model_number)$/;"	f	signature:(struct p2p_data *p2p, const char *model_number)
p2p_set_model_number	src/p2p/p2p.h	/^int p2p_set_model_number(struct p2p_data *p2p, const char *model_number);$/;"	p	signature:(struct p2p_data *p2p, const char *model_number)
p2p_set_oper_channel	src/p2p/p2p.c	/^int p2p_set_oper_channel(struct p2p_data *p2p, u8 op_reg_class, u8 op_channel,$/;"	f	signature:(struct p2p_data *p2p, u8 op_reg_class, u8 op_channel, int cfg_op_channel)
p2p_set_oper_channel	src/p2p/p2p.h	/^int p2p_set_oper_channel(struct p2p_data *p2p, u8 op_reg_class, u8 op_channel,$/;"	p	signature:(struct p2p_data *p2p, u8 op_reg_class, u8 op_channel, int cfg_op_channel)
p2p_set_params	src/drivers/driver.h	/^	int (*p2p_set_params)(void *priv, const struct p2p_params *params);$/;"	m	struct:wpa_driver_ops	access:public
p2p_set_peer_filter	src/p2p/p2p.c	/^void p2p_set_peer_filter(struct p2p_data *p2p, const u8 *addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_set_peer_filter	src/p2p/p2p.h	/^void p2p_set_peer_filter(struct p2p_data *p2p, const u8 *addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_set_pref_chan	src/p2p/p2p.c	/^int p2p_set_pref_chan(struct p2p_data *p2p, unsigned int num_pref_chan,$/;"	f	signature:(struct p2p_data *p2p, unsigned int num_pref_chan, const struct p2p_channel *pref_chan)
p2p_set_pref_chan	src/p2p/p2p.h	/^int p2p_set_pref_chan(struct p2p_data *p2p, unsigned int num_pref_chan,$/;"	p	signature:(struct p2p_data *p2p, unsigned int num_pref_chan, const struct p2p_channel *pref_chan)
p2p_set_pri_dev_type	src/p2p/p2p.c	/^int p2p_set_pri_dev_type(struct p2p_data *p2p, const u8 *pri_dev_type)$/;"	f	signature:(struct p2p_data *p2p, const u8 *pri_dev_type)
p2p_set_pri_dev_type	src/p2p/p2p.h	/^int p2p_set_pri_dev_type(struct p2p_data *p2p, const u8 *pri_dev_type);$/;"	p	signature:(struct p2p_data *p2p, const u8 *pri_dev_type)
p2p_set_sec_dev_types	src/p2p/p2p.c	/^int p2p_set_sec_dev_types(struct p2p_data *p2p, const u8 dev_types[][8],$/;"	f	signature:(struct p2p_data *p2p, const u8 dev_types[][8], size_t num_dev_types)
p2p_set_sec_dev_types	src/p2p/p2p.h	/^int p2p_set_sec_dev_types(struct p2p_data *p2p, const u8 dev_types[][8],$/;"	p	signature:(struct p2p_data *p2p, const u8 dev_types[][8], size_t num_dev_types)
p2p_set_serial_number	src/p2p/p2p.c	/^int p2p_set_serial_number(struct p2p_data *p2p, const char *serial_number)$/;"	f	signature:(struct p2p_data *p2p, const char *serial_number)
p2p_set_serial_number	src/p2p/p2p.h	/^int p2p_set_serial_number(struct p2p_data *p2p, const char *serial_number);$/;"	p	signature:(struct p2p_data *p2p, const char *serial_number)
p2p_set_ssid_postfix	src/p2p/p2p.c	/^int p2p_set_ssid_postfix(struct p2p_data *p2p, const u8 *postfix, size_t len)$/;"	f	signature:(struct p2p_data *p2p, const u8 *postfix, size_t len)
p2p_set_ssid_postfix	src/p2p/p2p.h	/^int p2p_set_ssid_postfix(struct p2p_data *p2p, const u8 *postfix, size_t len);$/;"	p	signature:(struct p2p_data *p2p, const u8 *postfix, size_t len)
p2p_set_state	src/p2p/p2p.c	/^void p2p_set_state(struct p2p_data *p2p, int new_state)$/;"	f	signature:(struct p2p_data *p2p, int new_state)
p2p_set_state	src/p2p/p2p_i.h	/^void p2p_set_state(struct p2p_data *p2p, int new_state);$/;"	p	signature:(struct p2p_data *p2p, int new_state)
p2p_set_timeout	src/p2p/p2p.c	/^void p2p_set_timeout(struct p2p_data *p2p, unsigned int sec, unsigned int usec)$/;"	f	signature:(struct p2p_data *p2p, unsigned int sec, unsigned int usec)
p2p_set_timeout	src/p2p/p2p_i.h	/^void p2p_set_timeout(struct p2p_data *p2p, unsigned int sec,$/;"	p	signature:(struct p2p_data *p2p, unsigned int sec, unsigned int usec)
p2p_set_uuid	src/p2p/p2p.c	/^void p2p_set_uuid(struct p2p_data *p2p, const u8 *uuid)$/;"	f	signature:(struct p2p_data *p2p, const u8 *uuid)
p2p_set_uuid	src/p2p/p2p.h	/^void p2p_set_uuid(struct p2p_data *p2p, const u8 *uuid);$/;"	p	signature:(struct p2p_data *p2p, const u8 *uuid)
p2p_start_sd	src/p2p/p2p_i.h	/^int p2p_start_sd(struct p2p_data *p2p, struct p2p_device *dev);$/;"	p	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_start_sd	src/p2p/p2p_sd.c	/^int p2p_start_sd(struct p2p_data *p2p, struct p2p_device *dev)$/;"	f	signature:(struct p2p_data *p2p, struct p2p_device *dev)
p2p_state	src/p2p/p2p_i.h	/^	enum p2p_state {$/;"	g	struct:p2p_data	access:public
p2p_state_timeout	src/p2p/p2p.c	/^static void p2p_state_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_state_timeout	src/p2p/p2p.c	/^static void p2p_state_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
p2p_state_txt	src/p2p/p2p.c	/^static const char * p2p_state_txt(int state)$/;"	f	file:	signature:(int state)
p2p_status_code	src/common/ieee802_11_defs.h	/^enum p2p_status_code {$/;"	g
p2p_stop_find	src/drivers/driver.h	/^	int (*p2p_stop_find)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
p2p_stop_find	src/p2p/p2p.c	/^void p2p_stop_find(struct p2p_data *p2p)$/;"	f	signature:(struct p2p_data *p2p)
p2p_stop_find	src/p2p/p2p.h	/^void p2p_stop_find(struct p2p_data *p2p);$/;"	p	signature:(struct p2p_data *p2p)
p2p_stop_find_for_freq	src/p2p/p2p.c	/^void p2p_stop_find_for_freq(struct p2p_data *p2p, int freq)$/;"	f	signature:(struct p2p_data *p2p, int freq)
p2p_stop_find_for_freq	src/p2p/p2p.h	/^void p2p_stop_find_for_freq(struct p2p_data *p2p, int freq);$/;"	p	signature:(struct p2p_data *p2p, int freq)
p2p_stop_listen_for_freq	src/p2p/p2p.c	/^void p2p_stop_listen_for_freq(struct p2p_data *p2p, int freq)$/;"	f	signature:(struct p2p_data *p2p, int freq)
p2p_stop_listen_for_freq	src/p2p/p2p_i.h	/^void p2p_stop_listen_for_freq(struct p2p_data *p2p, int freq);$/;"	p	signature:(struct p2p_data *p2p, int freq)
p2p_supported_freq	src/p2p/p2p.h	/^int p2p_supported_freq(struct p2p_data *p2p, unsigned int freq);$/;"	p	signature:(struct p2p_data *p2p, unsigned int freq)
p2p_supported_freq	src/p2p/p2p_utils.c	/^int p2p_supported_freq(struct p2p_data *p2p, unsigned int freq)$/;"	f	signature:(struct p2p_data *p2p, unsigned int freq)
p2p_timeout_connect	src/p2p/p2p.c	/^static void p2p_timeout_connect(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_connect_listen	src/p2p/p2p.c	/^static void p2p_timeout_connect_listen(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_invite	src/p2p/p2p.c	/^static void p2p_timeout_invite(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_invite_listen	src/p2p/p2p.c	/^static void p2p_timeout_invite_listen(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_prov_disc_during_find	src/p2p/p2p.c	/^static void p2p_timeout_prov_disc_during_find(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_prov_disc_req	src/p2p/p2p.c	/^static void p2p_timeout_prov_disc_req(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_sd_during_find	src/p2p/p2p.c	/^static void p2p_timeout_sd_during_find(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_wait_peer_connect	src/p2p/p2p.c	/^static void p2p_timeout_wait_peer_connect(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_timeout_wait_peer_idle	src/p2p/p2p.c	/^static void p2p_timeout_wait_peer_idle(struct p2p_data *p2p)$/;"	f	file:	signature:(struct p2p_data *p2p)
p2p_unauthorize	src/p2p/p2p.c	/^int p2p_unauthorize(struct p2p_data *p2p, const u8 *addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_unauthorize	src/p2p/p2p.h	/^int p2p_unauthorize(struct p2p_data *p2p, const u8 *addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *addr)
p2p_unlink_sd_query	src/p2p/p2p_sd.c	/^static int p2p_unlink_sd_query(struct p2p_data *p2p,$/;"	f	file:	signature:(struct p2p_data *p2p, struct p2p_sd_query *query)
p2p_update_channel_list	src/p2p/p2p.c	/^void p2p_update_channel_list(struct p2p_data *p2p, struct p2p_channels *chan)$/;"	f	signature:(struct p2p_data *p2p, struct p2p_channels *chan)
p2p_update_channel_list	src/p2p/p2p.h	/^void p2p_update_channel_list(struct p2p_data *p2p, struct p2p_channels *chan);$/;"	p	signature:(struct p2p_data *p2p, struct p2p_channels *chan)
p2p_wps_method	src/p2p/p2p.h	/^enum p2p_wps_method {$/;"	g
p2p_wps_method_pw_id	src/p2p/p2p_go_neg.c	/^static u16 p2p_wps_method_pw_id(enum p2p_wps_method wps_method)$/;"	f	file:	signature:(enum p2p_wps_method wps_method)
p2p_wps_method_str	src/p2p/p2p_go_neg.c	/^static const char * p2p_wps_method_str(enum p2p_wps_method wps_method)$/;"	f	file:	signature:(enum p2p_wps_method wps_method)
p2p_wps_method_text	src/p2p/p2p.c	/^const char * p2p_wps_method_text(enum p2p_wps_method method)$/;"	f	signature:(enum p2p_wps_method method)
p2p_wps_method_text	src/p2p/p2p.h	/^const char * p2p_wps_method_text(enum p2p_wps_method method);$/;"	p	signature:(enum p2p_wps_method method)
p2p_wps_success_cb	src/p2p/p2p.c	/^void p2p_wps_success_cb(struct p2p_data *p2p, const u8 *mac_addr)$/;"	f	signature:(struct p2p_data *p2p, const u8 *mac_addr)
p2p_wps_success_cb	src/p2p/p2p.h	/^void p2p_wps_success_cb(struct p2p_data *p2p, const u8 *mac_addr);$/;"	p	signature:(struct p2p_data *p2p, const u8 *mac_addr)
pData	src/drivers/driver_ndis.c	/^	LPBYTE pData;$/;"	m	struct:__anon96	file:	access:public
pIntfs	src/drivers/driver_ndis.c	/^	PINTF_KEY_ENTRY pIntfs;$/;"	m	struct:__anon95	file:	access:public
pLoc	src/drivers/ndis_events.c	/^	IWbemLocator *pLoc;$/;"	m	struct:ndis_events_data	file:	access:public
pSvc	src/drivers/ndis_events.c	/^	IWbemServices *pSvc;$/;"	m	struct:ndis_events_data	file:	access:public
pac	src/eap_common/eap_fast_common.h	/^	u8 *pac;$/;"	m	struct:eap_fast_tlv_parse	access:public
pac	src/eap_peer/eap_fast.c	/^	struct eap_fast_pac *pac;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_fast_pac	file:	access:public
pac_file	src/eap_peer/eap_config.h	/^	char *pac_file;$/;"	m	struct:eap_peer_config	access:public
pac_file_hdr	src/eap_peer/eap_fast_pac.c	/^static const char *pac_file_hdr =$/;"	v	file:
pac_info	src/eap_peer/eap_fast_pac.h	/^	u8 *pac_info;$/;"	m	struct:eap_fast_pac	access:public
pac_info_len	src/eap_peer/eap_fast_pac.h	/^	size_t pac_info_len;$/;"	m	struct:eap_fast_pac	access:public
pac_key	src/eap_peer/eap_fast_pac.h	/^	u8 pac_key[EAP_FAST_PAC_KEY_LEN];$/;"	m	struct:eap_fast_pac	access:public
pac_key_lifetime	src/ap/ap_config.h	/^	int pac_key_lifetime;$/;"	m	struct:hostapd_bss_config	access:public
pac_key_lifetime	src/eap_server/eap.h	/^	int pac_key_lifetime;$/;"	m	struct:eap_config	access:public
pac_key_lifetime	src/eap_server/eap_i.h	/^	int pac_key_lifetime;$/;"	m	struct:eap_sm	access:public
pac_key_lifetime	src/eap_server/eap_server_fast.c	/^	int pac_key_lifetime;$/;"	m	struct:eap_fast_data	file:	access:public
pac_key_lifetime	src/eapol_auth/eapol_auth_sm.h	/^	int pac_key_lifetime;$/;"	m	struct:eapol_auth_config	access:public
pac_key_lifetime	src/radius/radius_server.c	/^	int pac_key_lifetime;$/;"	m	struct:radius_server_data	file:	access:public
pac_key_lifetime	src/radius/radius_server.h	/^	int pac_key_lifetime;$/;"	m	struct:radius_server_conf	access:public
pac_key_refresh_time	src/ap/ap_config.h	/^	int pac_key_refresh_time;$/;"	m	struct:hostapd_bss_config	access:public
pac_key_refresh_time	src/eap_server/eap.h	/^	int pac_key_refresh_time;$/;"	m	struct:eap_config	access:public
pac_key_refresh_time	src/eap_server/eap_i.h	/^	int pac_key_refresh_time;$/;"	m	struct:eap_sm	access:public
pac_key_refresh_time	src/eap_server/eap_server_fast.c	/^	int pac_key_refresh_time;$/;"	m	struct:eap_fast_data	file:	access:public
pac_key_refresh_time	src/eapol_auth/eapol_auth_sm.h	/^	int pac_key_refresh_time;$/;"	m	struct:eapol_auth_config	access:public
pac_key_refresh_time	src/radius/radius_server.c	/^	int pac_key_refresh_time;$/;"	m	struct:radius_server_data	file:	access:public
pac_key_refresh_time	src/radius/radius_server.h	/^	int pac_key_refresh_time;$/;"	m	struct:radius_server_conf	access:public
pac_len	src/eap_common/eap_fast_common.h	/^	size_t pac_len;$/;"	m	struct:eap_fast_tlv_parse	access:public
pac_len	src/eap_common/eap_tlv_common.h	/^	be16 pac_len;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
pac_opaque	src/eap_peer/eap_fast_pac.h	/^	u8 *pac_opaque;$/;"	m	struct:eap_fast_pac	access:public
pac_opaque_encr	src/eap_server/eap_server_fast.c	/^	u8 pac_opaque_encr[16];$/;"	m	struct:eap_fast_data	file:	access:public
pac_opaque_encr_key	src/ap/ap_config.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:hostapd_bss_config	access:public
pac_opaque_encr_key	src/eap_server/eap.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:eap_config	access:public
pac_opaque_encr_key	src/eap_server/eap_i.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:eap_sm	access:public
pac_opaque_encr_key	src/eapol_auth/eapol_auth_sm.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:eapol_auth_config	access:public
pac_opaque_encr_key	src/radius/radius_server.c	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:radius_server_data	file:	access:public
pac_opaque_encr_key	src/radius/radius_server.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:radius_server_conf	access:public
pac_opaque_len	src/eap_peer/eap_fast_pac.h	/^	size_t pac_opaque_len;$/;"	m	struct:eap_fast_pac	access:public
pac_tlv_hdr	src/eap_common/eap_fast_common.h	/^struct pac_tlv_hdr {$/;"	s
pac_tlv_hdr::len	src/eap_common/eap_fast_common.h	/^	be16 len;$/;"	m	struct:pac_tlv_hdr	access:public
pac_tlv_hdr::type	src/eap_common/eap_fast_common.h	/^	be16 type;$/;"	m	struct:pac_tlv_hdr	access:public
pac_type	src/eap_common/eap_tlv_common.h	/^	be16 pac_type;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
pac_type	src/eap_common/eap_tlv_common.h	/^	be16 pac_type;$/;"	m	struct:eap_tlv_pac_type_tlv	access:public
pac_type	src/eap_peer/eap_fast_pac.h	/^	u16 pac_type;$/;"	m	struct:eap_fast_pac	access:public
packet_sock	src/ap/iapp.c	/^	int packet_sock;$/;"	m	struct:iapp_data	file:	access:public
packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_R0KH_R1KH_PULL *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_R0KH_R1KH_PUSH *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_R0KH_R1KH_RESP *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
packet_type	src/ap/wpa_auth.h	/^	u8 packet_type; \/* FT_PACKET_REQUEST\/FT_PACKET_RESPONSE *\/$/;"	m	struct:ft_rrb_frame	access:public
packets_dropped	src/radius/radius_client.h	/^	u32 packets_dropped;$/;"	m	struct:hostapd_radius_server	access:public
packets_dropped	src/radius/radius_server.c	/^	u32 packets_dropped;$/;"	m	struct:radius_server_counters	file:	access:public
pad	src/ap/wpa_auth.h	/^	u8 pad[2]; \/* 8-octet boundary for AES key wrap *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
pad	src/ap/wpa_auth.h	/^	u8 pad[4]; \/* 8-octet boundary for AES key wrap *\/$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
pad	src/ap/wpa_auth.h	/^	u8 pad[6]; \/* 8-octet boundary for AES key wrap *\/$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
pad	src/drivers/driver_ndis.c	/^	u8 pad[2]; \/* why is this needed? *\/$/;"	m	struct:__anon97	file:	access:public
pae_group_addr	src/drivers/driver_ndis.c	/^static const u8 pae_group_addr[ETH_ALEN] =$/;"	v	file:
pae_group_addr	src/drivers/driver_roboswitch.c	/^static const u8 pae_group_addr[ETH_ALEN] =$/;"	v	file:
pae_group_addr	src/drivers/driver_wired.c	/^static const u8 pae_group_addr[ETH_ALEN] =$/;"	v	file:
pae_group_addr	src/l2_packet/l2_packet_freebsd.c	/^static const u8 pae_group_addr[ETH_ALEN] =$/;"	v	file:
pae_group_addr	src/l2_packet/l2_packet_pcap.c	/^static const u8 pae_group_addr[ETH_ALEN] =$/;"	v	file:
pae_group_addr	src/l2_packet/l2_packet_winpcap.c	/^static const u8 pae_group_addr[ETH_ALEN] =$/;"	v	file:
pairwise	src/ap/wpa_auth.h	/^	le16 pairwise;$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
pairwise	src/ap/wpa_auth.h	/^	le16 pairwise;$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
pairwise	src/ap/wpa_auth_ft.c	/^	int pairwise; \/* Pairwise cipher suite, WPA_CIPHER_* *\/$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
pairwise	src/ap/wpa_auth_ft.c	/^	int pairwise; \/* Pairwise cipher suite, WPA_CIPHER_* *\/$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
pairwise	src/ap/wpa_auth_i.h	/^	int pairwise; \/* Pairwise cipher suite, WPA_CIPHER_* *\/$/;"	m	struct:wpa_state_machine	access:public
pairwise_cipher	src/common/wpa_common.h	/^	int pairwise_cipher;$/;"	m	struct:wpa_ie_data	access:public
pairwise_cipher	src/rsn_supp/wpa_i.h	/^	unsigned int pairwise_cipher;$/;"	m	struct:wpa_sm	access:public
pairwise_ciphers	src/drivers/driver.h	/^	unsigned int pairwise_ciphers;$/;"	m	struct:wpa_driver_ap_params	access:public
pairwise_set	src/ap/wpa_auth_i.h	/^	Boolean pairwise_set;$/;"	m	struct:wpa_state_machine	access:public
pairwise_suite	src/common/privsep_commands.h	/^	int pairwise_suite;$/;"	m	struct:privsep_cmd_associate	access:public
pairwise_suite	src/drivers/driver.h	/^	enum wpa_cipher pairwise_suite;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wpa_cipher	access:public
param	src/drivers/wireless_copy.h	/^	struct iw_param	param;		\/* Other small parameters *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
parameter_set_count	src/ap/hostapd.h	/^	int parameter_set_count;$/;"	m	struct:hostapd_data	access:public
params_set	src/crypto/tls_gnutls.c	/^	int params_set;$/;"	m	struct:tls_connection	file:	access:public
params_set	src/crypto/tls_gnutls.c	/^	int params_set;$/;"	m	struct:tls_global	file:	access:public
parse_roaming_consortium	hostapd/config_file.c	/^static int parse_roaming_consortium(struct hostapd_bss_config *bss, char *pos,$/;"	f	file:	signature:(struct hostapd_bss_config *bss, char *pos, int line)
part	src/wps/wps.h	/^		int part;$/;"	m	struct:wps_event_data::wps_event_pwd_auth_fail	access:public
passphrase	src/drivers/driver.h	/^	const char *passphrase;$/;"	m	struct:wpa_driver_associate_params	access:public
passphrase	src/p2p/p2p.h	/^	char passphrase[64];$/;"	m	struct:p2p_go_neg_results	access:public
passwd_change_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 passwd_change_challenge[PASSWD_CHANGE_CHAL_LEN];$/;"	m	struct:eap_mschapv2_data	file:	access:public
passwd_change_challenge_valid	src/eap_peer/eap_mschapv2.c	/^	int passwd_change_challenge_valid;$/;"	m	struct:eap_mschapv2_data	file:	access:public
passwd_change_version	src/eap_peer/eap_mschapv2.c	/^	int passwd_change_version;$/;"	m	struct:eap_mschapv2_data	file:	access:public
password	src/ap/ap_config.h	/^	u8 *password;$/;"	m	struct:hostapd_eap_user	access:public
password	src/eap_peer/eap_config.h	/^	u8 *password;$/;"	m	struct:eap_peer_config	access:public
password	src/eap_peer/eap_pwd.c	/^	u8 *password;$/;"	m	struct:eap_pwd_data	file:	access:public
password	src/eap_server/eap.h	/^	u8 *password;$/;"	m	struct:eap_user	access:public
password	src/eap_server/eap_server_pwd.c	/^	u8 *password;$/;"	m	struct:eap_pwd_data	file:	access:public
password_hash	src/ap/ap_config.h	/^	unsigned int password_hash:1; \/* whether password is hashed with$/;"	m	struct:hostapd_eap_user	access:public
password_hash	src/eap_server/eap.h	/^	int password_hash; \/* whether password is hashed with$/;"	m	struct:eap_user	access:public
password_len	src/ap/ap_config.h	/^	size_t password_len;$/;"	m	struct:hostapd_eap_user	access:public
password_len	src/eap_peer/eap_config.h	/^	size_t password_len;$/;"	m	struct:eap_peer_config	access:public
password_len	src/eap_peer/eap_pwd.c	/^	size_t password_len;$/;"	m	struct:eap_pwd_data	file:	access:public
password_len	src/eap_server/eap.h	/^	size_t password_len;$/;"	m	struct:eap_user	access:public
password_len	src/eap_server/eap_server_pwd.c	/^	size_t password_len;$/;"	m	struct:eap_pwd_data	file:	access:public
path	src/eap_peer/tncc.c	/^	char *path;$/;"	m	struct:tnc_if_imc	file:	access:public
path	src/eap_server/tncs.c	/^	char *path;$/;"	m	struct:tnc_if_imv	file:	access:public
path	src/wps/wps_upnp_i.h	/^	char *path; \/* "filepath" part of url (from "mem") *\/$/;"	m	struct:subscr_addr	access:public
path_len_constraint	src/tls/x509v3.h	/^	unsigned long path_len_constraint; \/* pathLenConstraint *\/$/;"	m	struct:x509_certificate	access:public
payload	src/tls/asn1.h	/^	const u8 *payload;$/;"	m	struct:asn1_hdr	access:public
payload	src/wps/ndef.c	/^	u8 *payload;$/;"	m	struct:ndef_record	file:	access:public
payload_length	src/eap_common/ikev2_common.h	/^	u8 payload_length[2]; \/* this payload, including the payload header *\/$/;"	m	struct:ikev2_payload_hdr	access:public
payload_length	src/wps/ndef.c	/^	u32 payload_length;$/;"	m	struct:ndef_record	file:	access:public
payloadtype	src/rsn_supp/tdls.c	/^	u8 payloadtype; \/* IEEE80211_TDLS_RFTYPE *\/$/;"	m	struct:wpa_tdls_frame	file:	access:public
pbc	src/wps/wps.h	/^	int pbc;$/;"	m	struct:wps_config	access:public
pbc	src/wps/wps_i.h	/^	int pbc;$/;"	m	struct:wps_data	access:public
pbc	src/wps/wps_registrar.c	/^	int pbc;$/;"	m	struct:wps_registrar	file:	access:public
pbc_in_m1	src/ap/ap_config.h	/^	int pbc_in_m1;$/;"	m	struct:hostapd_bss_config	access:public
pbc_in_m1	src/eap_server/eap.h	/^	int pbc_in_m1;$/;"	m	struct:eap_config	access:public
pbc_in_m1	src/eap_server/eap_i.h	/^	int pbc_in_m1;$/;"	m	struct:eap_sm	access:public
pbc_in_m1	src/eapol_auth/eapol_auth_sm.h	/^	int pbc_in_m1;$/;"	m	struct:eapol_auth_config	access:public
pbc_in_m1	src/wps/wps.h	/^	int pbc_in_m1;$/;"	m	struct:wps_config	access:public
pbc_in_m1	src/wps/wps_i.h	/^	int pbc_in_m1;$/;"	m	struct:wps_data	access:public
pbc_sessions	src/wps/wps_registrar.c	/^	struct wps_pbc_session *pbc_sessions;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wps_pbc_session	file:	access:public
pbkdf2_sha1	src/crypto/sha1-pbkdf2.c	/^int pbkdf2_sha1(const char *passphrase, const char *ssid, size_t ssid_len,$/;"	f	signature:(const char *passphrase, const char *ssid, size_t ssid_len, int iterations, u8 *buf, size_t buflen)
pbkdf2_sha1	src/crypto/sha1.h	/^int pbkdf2_sha1(const char *passphrase, const char *ssid, size_t ssid_len,$/;"	p	signature:(const char *passphrase, const char *ssid, size_t ssid_len, int iterations, u8 *buf, size_t buflen)
pbkdf2_sha1_f	src/crypto/sha1-pbkdf2.c	/^static int pbkdf2_sha1_f(const char *passphrase, const char *ssid,$/;"	f	file:	signature:(const char *passphrase, const char *ssid, size_t ssid_len, int iterations, unsigned int count, u8 *digest)
pc	src/utils/trace.c	/^	bfd_vma pc;$/;"	m	struct:bfd_data	file:	access:public
pc1	src/crypto/des-internal.c	/^static const u8 pc1[56] = {$/;"	v	file:
pc2	src/crypto/des-internal.c	/^static const u8 pc2[48] = {$/;"	v	file:
pcap	src/l2_packet/l2_packet_freebsd.c	/^	pcap_t *pcap;$/;"	m	struct:l2_packet_data	file:	access:public
pcap	src/l2_packet/l2_packet_pcap.c	/^	pcap_t *pcap;$/;"	m	struct:l2_packet_data	file:	access:public
pcap	src/l2_packet/l2_packet_winpcap.c	/^	pcap_t *pcap;$/;"	m	struct:l2_packet_data	file:	access:public
pcsc	src/eap_peer/eap_config.h	/^	char *pcsc;$/;"	m	struct:eap_peer_config	access:public
pd_retries	src/p2p/p2p_i.h	/^	int pd_retries;$/;"	m	struct:p2p_data	access:public
peak_data_rate	src/common/ieee802_11_defs.h	/^	le32 peak_data_rate;$/;"	m	struct:wmm_tspec_element	access:public
peap_done	src/eap_peer/eap_i.h	/^	Boolean peap_done;$/;"	m	struct:eap_sm	access:public
peap_outer_success	src/eap_peer/eap_peap.c	/^	int peap_outer_success; \/* 0 = PEAP terminated on Phase 2 inner$/;"	m	struct:eap_peap_data	file:	access:public
peap_prfplus	src/eap_common/eap_peap_common.c	/^int peap_prfplus(int version, const u8 *key, size_t key_len,$/;"	f	signature:(int version, const u8 *key, size_t key_len, const char *label, const u8 *seed, size_t seed_len, u8 *buf, size_t buf_len)
peap_prfplus	src/eap_common/eap_peap_common.h	/^int peap_prfplus(int version, const u8 *key, size_t key_len,$/;"	p	signature:(int version, const u8 *key, size_t key_len, const char *label, const u8 *seed, size_t seed_len, u8 *buf, size_t buf_len)
peap_version	src/eap_peer/eap_peap.c	/^	int peap_version, force_peap_version, force_new_label;$/;"	m	struct:eap_peap_data	file:	access:public
peap_version	src/eap_server/eap_server_peap.c	/^	int peap_version;$/;"	m	struct:eap_peap_data	file:	access:public
peer	src/ap/wpa_auth_i.h	/^	u8 peer[ETH_ALEN];$/;"	m	struct:wpa_stsl_negotiation	access:public
peer	src/drivers/driver.h	/^		const u8 *peer;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
peer	src/drivers/driver.h	/^		const u8 *peer;$/;"	m	struct:wpa_event_data::p2p_prov_disc_resp	access:public
peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::auth_info	access:public
peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::ibss_peer_lost	access:public
peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::ibss_rsn_start	access:public
peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::stkstart	access:public
peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::tdls	access:public
peer	src/p2p/p2p_i.h	/^	u8 peer[ETH_ALEN];$/;"	m	struct:p2p_sd_query	access:public
peer	src/wps/wps_upnp_i.h	/^	struct upnp_wps_peer peer;$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::upnp_wps_peer	access:public
peer_addr	src/eap_server/eap.h	/^	const u8 *peer_addr;$/;"	m	struct:eap_config	access:public
peer_addr	src/eap_server/eap_i.h	/^	u8 peer_addr[ETH_ALEN];$/;"	m	struct:eap_sm	access:public
peer_addr	src/wps/wps.h	/^	const u8 *peer_addr;$/;"	m	struct:wps_config	access:public
peer_auth	src/eap_peer/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	m	struct:ikev2_responder_data	typeref:enum:ikev2_responder_data::__anon174	access:public
peer_auth	src/eap_server/ikev2.h	/^	enum { PEER_AUTH_CERT, PEER_AUTH_SECRET } peer_auth;$/;"	m	struct:ikev2_initiator_data	typeref:enum:ikev2_initiator_data::__anon135	access:public
peer_cert	src/crypto/tls.h	/^	} peer_cert;$/;"	m	union:tls_event_data	typeref:struct:tls_event_data::__anon195	access:public
peer_challenge	src/eap_peer/eap_i.h	/^	u8 *peer_challenge, *auth_challenge;$/;"	m	struct:eap_sm	access:public
peer_challenge	src/eap_peer/eap_leap.c	/^	u8 peer_challenge[LEAP_CHALLENGE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
peer_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 *peer_challenge;$/;"	m	struct:eap_mschapv2_data	file:	access:public
peer_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 peer_challenge[MSCHAPV2_CHAL_LEN];$/;"	m	struct:ms_change_password	file:	access:public
peer_challenge	src/eap_peer/eap_mschapv2.c	/^	u8 peer_challenge[MSCHAPV2_CHAL_LEN];$/;"	m	struct:ms_response	file:	access:public
peer_challenge	src/eap_server/eap_i.h	/^	u8 *peer_challenge;$/;"	m	struct:eap_sm	access:public
peer_challenge	src/eap_server/eap_server_mschapv2.c	/^	u8 *peer_challenge;$/;"	m	struct:eap_mschapv2_data	file:	access:public
peer_config_timeout	src/p2p/p2p.h	/^	unsigned int peer_config_timeout;$/;"	m	struct:p2p_go_neg_results	access:public
peer_dev	src/wps/wps_i.h	/^	struct wps_device_data peer_dev;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_device_data	access:public
peer_device_addr	src/p2p/p2p.h	/^	u8 peer_device_addr[ETH_ALEN];$/;"	m	struct:p2p_go_neg_results	access:public
peer_element	src/eap_server/eap_server_pwd.c	/^	EC_POINT *peer_element;$/;"	m	struct:eap_pwd_data	file:	access:public
peer_filter	src/p2p/p2p_i.h	/^	u8 peer_filter[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
peer_hash1	src/wps/wps_i.h	/^	u8 peer_hash1[WPS_HASH_LEN];$/;"	m	struct:wps_data	access:public
peer_hash2	src/wps/wps_i.h	/^	u8 peer_hash2[WPS_HASH_LEN];$/;"	m	struct:wps_data	access:public
peer_interface_addr	src/p2p/p2p.h	/^	u8 peer_interface_addr[ETH_ALEN];$/;"	m	struct:p2p_go_neg_results	access:public
peer_response	src/eap_peer/eap_leap.c	/^	u8 peer_response[LEAP_RESPONSE_LEN];$/;"	m	struct:eap_leap_data	file:	access:public
peer_scalar	src/eap_server/eap_server_pwd.c	/^	BIGNUM *peer_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
peer_version	src/eap_server/eap_server_fast.c	/^	int peer_version;$/;"	m	struct:eap_fast_data	file:	access:public
peerid	src/eap_common/eap_sake_common.h	/^	const u8 *peerid;$/;"	m	struct:eap_sake_parse_attr	access:public
peerid	src/eap_peer/eap_sake.c	/^	u8 *peerid;$/;"	m	struct:eap_sake_data	file:	access:public
peerid	src/eap_server/eap_server_sake.c	/^	u8 *peerid;$/;"	m	struct:eap_sake_data	file:	access:public
peerid_len	src/eap_common/eap_sake_common.h	/^	size_t peerid_len;$/;"	m	struct:eap_sake_parse_attr	access:public
peerid_len	src/eap_peer/eap_sake.c	/^	size_t peerid_len;$/;"	m	struct:eap_sake_data	file:	access:public
peerid_len	src/eap_server/eap_server_sake.c	/^	size_t peerid_len;$/;"	m	struct:eap_sake_data	file:	access:public
peerkey	src/ap/ap_config.h	/^	int peerkey;$/;"	m	struct:hostapd_bss_config	access:public
peerkey	src/ap/wpa_auth.h	/^	int peerkey;$/;"	m	struct:wpa_auth_config	access:public
peerkey	src/rsn_supp/wpa_i.h	/^	struct wpa_peerkey *peerkey;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_peerkey	access:public
peerkey_deinit	src/rsn_supp/peerkey.c	/^void peerkey_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
peerkey_deinit	src/rsn_supp/peerkey.h	/^static inline void peerkey_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
peerkey_deinit	src/rsn_supp/peerkey.h	/^void peerkey_deinit(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
peerkey_enabled	src/rsn_supp/wpa.h	/^	int peerkey_enabled;$/;"	m	struct:rsn_supp_config	access:public
peerkey_enabled	src/rsn_supp/wpa_i.h	/^	int peerkey_enabled;$/;"	m	struct:wpa_sm	access:public
peerkey_rx_eapol_4way	src/rsn_supp/peerkey.c	/^void peerkey_rx_eapol_4way(struct wpa_sm *sm, struct wpa_peerkey *peerkey,$/;"	f	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_key *key, u16 key_info, u16 ver)
peerkey_rx_eapol_4way	src/rsn_supp/peerkey.h	/^peerkey_rx_eapol_4way(struct wpa_sm *sm, struct wpa_peerkey *peerkey,$/;"	f	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_key *key, u16 key_info, u16 ver)
peerkey_rx_eapol_4way	src/rsn_supp/peerkey.h	/^void peerkey_rx_eapol_4way(struct wpa_sm *sm, struct wpa_peerkey *peerkey,$/;"	p	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_key *key, u16 key_info, u16 ver)
peerkey_rx_eapol_smk	src/rsn_supp/peerkey.c	/^void peerkey_rx_eapol_smk(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	signature:(struct wpa_sm *sm, const u8 *src_addr, struct wpa_eapol_key *key, size_t extra_len, u16 key_info, u16 ver)
peerkey_rx_eapol_smk	src/rsn_supp/peerkey.h	/^peerkey_rx_eapol_smk(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	signature:(struct wpa_sm *sm, const u8 *src_addr, struct wpa_eapol_key *key, size_t extra_len, u16 key_info, u16 ver)
peerkey_rx_eapol_smk	src/rsn_supp/peerkey.h	/^void peerkey_rx_eapol_smk(struct wpa_sm *sm, const u8 *src_addr,$/;"	p	signature:(struct wpa_sm *sm, const u8 *src_addr, struct wpa_eapol_key *key, size_t extra_len, u16 key_info, u16 ver)
peerkey_verify_eapol_key_mic	src/rsn_supp/peerkey.c	/^int peerkey_verify_eapol_key_mic(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_key *key, u16 ver, const u8 *buf, size_t len)
peerkey_verify_eapol_key_mic	src/rsn_supp/peerkey.h	/^int peerkey_verify_eapol_key_mic(struct wpa_sm *sm,$/;"	p	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_key *key, u16 ver, const u8 *buf, size_t len)
peerkey_verify_eapol_key_mic	src/rsn_supp/peerkey.h	/^peerkey_verify_eapol_key_mic(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_key *key, u16 ver, const u8 *buf, size_t len)
pem_cert_begin	src/tls/tlsv1_cred.c	/^static const char *pem_cert_begin = "-----BEGIN CERTIFICATE-----";$/;"	v	file:
pem_cert_end	src/tls/tlsv1_cred.c	/^static const char *pem_cert_end = "-----END CERTIFICATE-----";$/;"	v	file:
pem_dhparams_begin	src/tls/tlsv1_cred.c	/^static const char *pem_dhparams_begin = "-----BEGIN DH PARAMETERS-----";$/;"	v	file:
pem_dhparams_end	src/tls/tlsv1_cred.c	/^static const char *pem_dhparams_end = "-----END DH PARAMETERS-----";$/;"	v	file:
pem_key2_begin	src/tls/tlsv1_cred.c	/^static const char *pem_key2_begin = "-----BEGIN PRIVATE KEY-----";$/;"	v	file:
pem_key2_end	src/tls/tlsv1_cred.c	/^static const char *pem_key2_end = "-----END PRIVATE KEY-----";$/;"	v	file:
pem_key_begin	src/tls/tlsv1_cred.c	/^static const char *pem_key_begin = "-----BEGIN RSA PRIVATE KEY-----";$/;"	v	file:
pem_key_enc_begin	src/tls/tlsv1_cred.c	/^static const char *pem_key_enc_begin = "-----BEGIN ENCRYPTED PRIVATE KEY-----";$/;"	v	file:
pem_key_enc_end	src/tls/tlsv1_cred.c	/^static const char *pem_key_enc_end = "-----END ENCRYPTED PRIVATE KEY-----";$/;"	v	file:
pem_key_end	src/tls/tlsv1_cred.c	/^static const char *pem_key_end = "-----END RSA PRIVATE KEY-----";$/;"	v	file:
pending	src/eap_server/eap_sim_db.c	/^	struct eap_sim_db_pending *pending;$/;"	m	struct:eap_sim_db_data	typeref:struct:eap_sim_db_data::eap_sim_db_pending	file:	access:public
pending_1_of_4_timeout	src/ap/wpa_auth_i.h	/^	int pending_1_of_4_timeout;$/;"	m	struct:wpa_state_machine	access:public
pending_action_bssid	src/drivers/driver_test.c	/^	u8 pending_action_bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_action_dst	src/drivers/driver_test.c	/^	u8 pending_action_dst[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_action_freq	src/drivers/driver_test.c	/^	unsigned int pending_action_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_action_no_cck	src/drivers/driver_test.c	/^	unsigned int pending_action_no_cck;$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_action_src	src/drivers/driver_test.c	/^	u8 pending_action_src[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_action_state	src/p2p/p2p_i.h	/^	} pending_action_state;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_pending_action_state	access:public
pending_action_tx	src/drivers/driver_test.c	/^	struct wpabuf *pending_action_tx;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::wpabuf	file:	access:public
pending_client_disc_addr	src/p2p/p2p_i.h	/^	u8 pending_client_disc_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
pending_client_disc_freq	src/p2p/p2p_i.h	/^	unsigned int pending_client_disc_freq;$/;"	m	struct:p2p_data	access:public
pending_client_disc_go	src/p2p/p2p_i.h	/^	struct p2p_device *pending_client_disc_go;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
pending_completions	src/utils/edit_readline.c	/^static char **pending_completions = NULL;$/;"	v	file:
pending_deinit	src/ap/wpa_auth_i.h	/^	unsigned int pending_deinit:1;$/;"	m	struct:wpa_state_machine	access:public
pending_dev_disc_addr	src/p2p/p2p_i.h	/^	u8 pending_dev_disc_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
pending_dev_disc_dialog_token	src/p2p/p2p_i.h	/^	u8 pending_dev_disc_dialog_token;$/;"	m	struct:p2p_data	access:public
pending_dev_disc_freq	src/p2p/p2p_i.h	/^	int pending_dev_disc_freq;$/;"	m	struct:p2p_data	access:public
pending_id	src/eap_server/eap_server_aka.c	/^	int pending_id;$/;"	m	struct:eap_aka_data	file:	access:public
pending_listen_duration	src/drivers/driver_test.c	/^	unsigned int pending_listen_duration;$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_listen_freq	src/drivers/driver_test.c	/^	unsigned int pending_listen_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_listen_freq	src/p2p/p2p_i.h	/^	unsigned int pending_listen_freq;$/;"	m	struct:p2p_data	access:public
pending_listen_sec	src/p2p/p2p_i.h	/^	unsigned int pending_listen_sec;$/;"	m	struct:p2p_data	access:public
pending_listen_usec	src/p2p/p2p_i.h	/^	unsigned int pending_listen_usec;$/;"	m	struct:p2p_data	access:public
pending_p2p_scan	src/drivers/driver_test.c	/^	int pending_p2p_scan;$/;"	m	struct:wpa_driver_test_data	file:	access:public
pending_pd_devaddr	src/p2p/p2p_i.h	/^	u8 pending_pd_devaddr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
pending_phase2_eap_resp	src/eap_server/eap_server_ttls.c	/^	struct wpabuf *pending_phase2_eap_resp;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::wpabuf	file:	access:public
pending_phase2_req	src/eap_peer/eap_fast.c	/^	struct wpabuf *pending_phase2_req;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::wpabuf	file:	access:public
pending_phase2_req	src/eap_peer/eap_peap.c	/^	struct wpabuf *pending_phase2_req;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::wpabuf	file:	access:public
pending_phase2_req	src/eap_peer/eap_ttls.c	/^	struct wpabuf *pending_phase2_req;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::wpabuf	file:	access:public
pending_phase2_resp	src/eap_server/eap_server_fast.c	/^	struct wpabuf *pending_phase2_resp;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::wpabuf	file:	access:public
pending_phase2_resp	src/eap_server/eap_server_peap.c	/^	struct wpabuf *pending_phase2_resp;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::wpabuf	file:	access:public
pending_remain_on_chan	src/drivers/driver_nl80211.c	/^	unsigned int pending_remain_on_chan:1;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
pending_req_identity	src/eap_peer/eap_config.h	/^	int pending_req_identity;$/;"	m	struct:eap_peer_config	access:public
pending_req_new_password	src/eap_peer/eap_config.h	/^	int pending_req_new_password;$/;"	m	struct:eap_peer_config	access:public
pending_req_otp	src/eap_peer/eap_config.h	/^	char *pending_req_otp;$/;"	m	struct:eap_peer_config	access:public
pending_req_otp_len	src/eap_peer/eap_config.h	/^	size_t pending_req_otp_len;$/;"	m	struct:eap_peer_config	access:public
pending_req_passphrase	src/eap_peer/eap_config.h	/^	int pending_req_passphrase;$/;"	m	struct:eap_peer_config	access:public
pending_req_password	src/eap_peer/eap_config.h	/^	int pending_req_password;$/;"	m	struct:eap_peer_config	access:public
pending_req_pin	src/eap_peer/eap_config.h	/^	int pending_req_pin;$/;"	m	struct:eap_peer_config	access:public
pending_terminate	src/utils/eloop.c	/^	int pending_terminate;$/;"	m	struct:eloop_data	file:	access:public
pending_terminate	src/utils/eloop_none.c	/^	int pending_terminate;$/;"	m	struct:eloop_data	file:	access:public
pending_terminate	src/utils/eloop_win.c	/^	int pending_terminate;$/;"	m	struct:eloop_data	file:	access:public
perm_id_req	src/eap_common/eap_sake_common.h	/^	const u8 *perm_id_req;$/;"	m	struct:eap_sake_parse_attr	access:public
perror	src/utils/common.c	/^void perror(const char *s)$/;"	f	signature:(const char *s)
perror	src/utils/common.h	/^void perror(const char *s);$/;"	p	signature:(const char *s)
persistent_group	src/p2p/p2p.h	/^	int persistent_group;$/;"	m	struct:p2p_go_neg_results	access:public
persistent_group	src/p2p/p2p.h	/^	int persistent_group;$/;"	m	struct:p2p_group_config	access:public
pf_sock	src/drivers/driver_wired.c	/^	int pf_sock;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
phase1	src/eap_peer/eap_config.h	/^	char *phase1;$/;"	m	struct:eap_peer_config	access:public
phase2	src/ap/ap_config.h	/^	int phase2;$/;"	m	struct:hostapd_eap_user	access:public
phase2	src/eap_peer/eap_config.h	/^	char *phase2;$/;"	m	struct:eap_peer_config	access:public
phase2	src/eap_peer/eap_mschapv2.c	/^	int phase2;$/;"	m	struct:eap_mschapv2_data	file:	access:public
phase2	src/eap_peer/eap_tls_common.h	/^	int phase2;$/;"	m	struct:eap_ssl_data	access:public
phase2	src/eap_server/eap.h	/^	int phase2;$/;"	m	struct:eap_user	access:public
phase2	src/eap_server/eap_tls_common.h	/^	int phase2;$/;"	m	struct:eap_ssl_data	access:public
phase2_eap_started	src/eap_peer/eap_peap.c	/^	int phase2_eap_started;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_eap_success	src/eap_peer/eap_peap.c	/^	int phase2_eap_success;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_eap_type	src/eap_peer/eap_ttls.c	/^	struct eap_method_type phase2_eap_type;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method_type	file:	access:public
phase2_eap_types	src/eap_peer/eap_ttls.c	/^	struct eap_method_type *phase2_eap_types;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method_type	file:	access:public
phase2_key	src/eap_server/eap_server_peap.c	/^	u8 *phase2_key;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_key_len	src/eap_server/eap_server_peap.c	/^	size_t phase2_key_len;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_method	src/eap_peer/eap_fast.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method	file:	access:public
phase2_method	src/eap_peer/eap_peap.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method	file:	access:public
phase2_method	src/eap_peer/eap_ttls.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method	file:	access:public
phase2_method	src/eap_server/eap_server_fast.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method	file:	access:public
phase2_method	src/eap_server/eap_server_peap.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method	file:	access:public
phase2_method	src/eap_server/eap_server_ttls.c	/^	const struct eap_method *phase2_method;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_method	file:	access:public
phase2_priv	src/eap_peer/eap_fast.c	/^	void *phase2_priv;$/;"	m	struct:eap_fast_data	file:	access:public
phase2_priv	src/eap_peer/eap_peap.c	/^	void *phase2_priv;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_priv	src/eap_peer/eap_ttls.c	/^	void *phase2_priv;$/;"	m	struct:eap_ttls_data	file:	access:public
phase2_priv	src/eap_server/eap_server_fast.c	/^	void *phase2_priv;$/;"	m	struct:eap_fast_data	file:	access:public
phase2_priv	src/eap_server/eap_server_peap.c	/^	void *phase2_priv;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_priv	src/eap_server/eap_server_ttls.c	/^	void *phase2_priv;$/;"	m	struct:eap_ttls_data	file:	access:public
phase2_start	src/eap_peer/eap_ttls.c	/^	int phase2_start;$/;"	m	struct:eap_ttls_data	file:	access:public
phase2_success	src/eap_peer/eap_fast.c	/^	int phase2_success;$/;"	m	struct:eap_fast_data	file:	access:public
phase2_success	src/eap_peer/eap_peap.c	/^	int phase2_success;$/;"	m	struct:eap_peap_data	file:	access:public
phase2_success	src/eap_peer/eap_ttls.c	/^	int phase2_success;$/;"	m	struct:eap_ttls_data	file:	access:public
phase2_type	src/eap_peer/eap_fast.c	/^	struct eap_method_type phase2_type;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method_type	file:	access:public
phase2_type	src/eap_peer/eap_peap.c	/^	struct eap_method_type phase2_type;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method_type	file:	access:public
phase2_type	src/eap_peer/eap_ttls.c	/^	} phase2_type;$/;"	m	struct:eap_ttls_data	typeref:enum:eap_ttls_data::phase2_types	file:	access:public
phase2_types	src/eap_peer/eap_fast.c	/^	struct eap_method_type *phase2_types;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_method_type	file:	access:public
phase2_types	src/eap_peer/eap_peap.c	/^	struct eap_method_type *phase2_types;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_method_type	file:	access:public
phase2_types	src/eap_peer/eap_ttls.c	/^	enum phase2_types {$/;"	g	struct:eap_ttls_data	file:	access:public
phy_info_arg	src/drivers/driver_nl80211.c	/^struct phy_info_arg {$/;"	s	file:
phy_info_arg::modes	src/drivers/driver_nl80211.c	/^	struct hostapd_hw_modes *modes;$/;"	m	struct:phy_info_arg	typeref:struct:phy_info_arg::hostapd_hw_modes	file:	access:public
phy_info_arg::num_modes	src/drivers/driver_nl80211.c	/^	u16 *num_modes;$/;"	m	struct:phy_info_arg	file:	access:public
phy_info_handler	src/drivers/driver_nl80211.c	/^static int phy_info_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
phyname	src/drivers/driver_nl80211.c	/^	char phyname[32];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
phyname	src/drivers/driver_wext.h	/^	char phyname[32];$/;"	m	struct:wpa_driver_wext_data	access:public
pick_up	src/eap_server/eap_server_identity.c	/^	int pick_up;$/;"	m	struct:eap_identity_data	file:	access:public
pid_file	hostapd/hostapd_cli.c	/^static const char *pid_file = NULL;$/;"	v	file:
pin	src/ap/wps_hostapd.c	/^	const u8 *pin;$/;"	m	struct:wps_add_pin_data	file:	access:public
pin	src/crypto/tls.h	/^	const char *pin;$/;"	m	struct:tls_connection_params	access:public
pin	src/eap_peer/eap_config.h	/^	char *pin;$/;"	m	struct:eap_peer_config	access:public
pin	src/wps/wps.h	/^	const u8 *pin;$/;"	m	struct:wps_config	access:public
pin	src/wps/wps_registrar.c	/^	u8 *pin;$/;"	m	struct:wps_uuid_pin	file:	access:public
pin1_required	src/utils/pcsc_funcs.c	/^	int pin1_required;$/;"	m	struct:scard_data	file:	access:public
pin2	src/eap_peer/eap_config.h	/^	char *pin2;$/;"	m	struct:eap_peer_config	access:public
pin_len	src/ap/wps_hostapd.c	/^	size_t pin_len;$/;"	m	struct:wps_add_pin_data	file:	access:public
pin_len	src/wps/wps.h	/^	size_t pin_len;$/;"	m	struct:wps_config	access:public
pin_len	src/wps/wps_registrar.c	/^	size_t pin_len;$/;"	m	struct:wps_uuid_pin	file:	access:public
pin_needed_cb	src/wps/wps.h	/^	void (*pin_needed_cb)(void *ctx, const u8 *uuid_e,$/;"	m	struct:wps_registrar_config	access:public
pin_needed_cb	src/wps/wps_registrar.c	/^	void (*pin_needed_cb)(void *ctx, const u8 *uuid_e,$/;"	m	struct:wps_registrar	file:	access:public
pin_txt	src/ap/wps_hostapd.c	/^	char pin_txt[9];$/;"	m	struct:wps_ap_pin_data	file:	access:public
ping_interval	hostapd/hostapd_cli.c	/^static int ping_interval = 5;$/;"	v	file:
pins	src/wps/wps_registrar.c	/^	struct dl_list pins;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::dl_list	file:	access:public
pipe	src/common/wpa_ctrl.c	/^	HANDLE pipe;$/;"	m	struct:wpa_ctrl	file:	access:public
pk	src/eap_peer/eap_gpsk.c	/^	u8 pk[EAP_GPSK_MAX_PK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
pk	src/eap_server/eap_server_gpsk.c	/^	u8 pk[EAP_GPSK_MAX_PK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
pk_len	src/eap_peer/eap_gpsk.c	/^	size_t pk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
pk_len	src/eap_server/eap_server_gpsk.c	/^	size_t pk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
pkcs11_engine_path	src/crypto/tls.h	/^	const char *pkcs11_engine_path;$/;"	m	struct:tls_config	access:public
pkcs11_engine_path	src/eap_peer/eap.h	/^	const char *pkcs11_engine_path;$/;"	m	struct:eap_config	access:public
pkcs11_engine_path	src/eapol_supp/eapol_supp_sm.h	/^	const char *pkcs11_engine_path;$/;"	m	struct:eapol_ctx	access:public
pkcs11_module_path	src/crypto/tls.h	/^	const char *pkcs11_module_path;$/;"	m	struct:tls_config	access:public
pkcs11_module_path	src/eap_peer/eap.h	/^	const char *pkcs11_module_path;$/;"	m	struct:eap_config	access:public
pkcs11_module_path	src/eapol_supp/eapol_supp_sm.h	/^	const char *pkcs11_module_path;$/;"	m	struct:eapol_ctx	access:public
pkcs1_decrypt_public_key	src/tls/pkcs1.c	/^int pkcs1_decrypt_public_key(struct crypto_rsa_key *key,$/;"	f	signature:(struct crypto_rsa_key *key, const u8 *crypt, size_t crypt_len, u8 *plain, size_t *plain_len)
pkcs1_decrypt_public_key	src/tls/pkcs1.h	/^int pkcs1_decrypt_public_key(struct crypto_rsa_key *key,$/;"	p	signature:(struct crypto_rsa_key *key, const u8 *crypt, size_t crypt_len, u8 *plain, size_t *plain_len)
pkcs1_encrypt	src/tls/pkcs1.c	/^int pkcs1_encrypt(int block_type, struct crypto_rsa_key *key,$/;"	f	signature:(int block_type, struct crypto_rsa_key *key, int use_private, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
pkcs1_encrypt	src/tls/pkcs1.h	/^int pkcs1_encrypt(int block_type, struct crypto_rsa_key *key,$/;"	p	signature:(int block_type, struct crypto_rsa_key *key, int use_private, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
pkcs1_generate_encryption_block	src/crypto/crypto_libtomcrypt.c	/^static int pkcs1_generate_encryption_block(u8 block_type, size_t modlen,$/;"	f	file:	signature:(u8 block_type, size_t modlen, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
pkcs1_generate_encryption_block	src/tls/pkcs1.c	/^static int pkcs1_generate_encryption_block(u8 block_type, size_t modlen,$/;"	f	file:	signature:(u8 block_type, size_t modlen, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
pkcs1_v15_private_key_decrypt	src/tls/pkcs1.c	/^int pkcs1_v15_private_key_decrypt(struct crypto_rsa_key *key,$/;"	f	signature:(struct crypto_rsa_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
pkcs1_v15_private_key_decrypt	src/tls/pkcs1.h	/^int pkcs1_v15_private_key_decrypt(struct crypto_rsa_key *key,$/;"	p	signature:(struct crypto_rsa_key *key, const u8 *in, size_t inlen, u8 *out, size_t *outlen)
pkcs5_alg	src/tls/pkcs5.c	/^	enum pkcs5_alg {$/;"	g	struct:pkcs5_params	file:	access:public
pkcs5_crypto_init	src/tls/pkcs5.c	/^static struct crypto_cipher * pkcs5_crypto_init(struct pkcs5_params *params,$/;"	f	file:	signature:(struct pkcs5_params *params, const char *passwd)
pkcs5_decrypt	src/tls/pkcs5.c	/^u8 * pkcs5_decrypt(const u8 *enc_alg, size_t enc_alg_len,$/;"	f	signature:(const u8 *enc_alg, size_t enc_alg_len, const u8 *enc_data, size_t enc_data_len, const char *passwd, size_t *data_len)
pkcs5_decrypt	src/tls/pkcs5.h	/^u8 * pkcs5_decrypt(const u8 *enc_alg, size_t enc_alg_len,$/;"	p	signature:(const u8 *enc_alg, size_t enc_alg_len, const u8 *enc_data, size_t enc_data_len, const char *passwd, size_t *data_len)
pkcs5_get_alg	src/tls/pkcs5.c	/^enum pkcs5_alg pkcs5_get_alg(struct asn1_oid *oid)$/;"	f	signature:(struct asn1_oid *oid)
pkcs5_get_params	src/tls/pkcs5.c	/^static int pkcs5_get_params(const u8 *enc_alg, size_t enc_alg_len,$/;"	f	file:	signature:(const u8 *enc_alg, size_t enc_alg_len, struct pkcs5_params *params)
pkcs5_params	src/tls/pkcs5.c	/^struct pkcs5_params {$/;"	s	file:
pkcs5_params::PKCS5_ALG_MD5_DES_CBC	src/tls/pkcs5.c	/^		PKCS5_ALG_MD5_DES_CBC$/;"	e	enum:pkcs5_params::pkcs5_alg	file:
pkcs5_params::PKCS5_ALG_UNKNOWN	src/tls/pkcs5.c	/^		PKCS5_ALG_UNKNOWN,$/;"	e	enum:pkcs5_params::pkcs5_alg	file:
pkcs5_params::alg	src/tls/pkcs5.c	/^	} alg;$/;"	m	struct:pkcs5_params	typeref:enum:pkcs5_params::pkcs5_alg	file:	access:public
pkcs5_params::iter_count	src/tls/pkcs5.c	/^	unsigned int iter_count;$/;"	m	struct:pkcs5_params	file:	access:public
pkcs5_params::pkcs5_alg	src/tls/pkcs5.c	/^	enum pkcs5_alg {$/;"	g	struct:pkcs5_params	file:	access:public
pkcs5_params::salt	src/tls/pkcs5.c	/^	u8 salt[8];$/;"	m	struct:pkcs5_params	file:	access:public
pkcs5_params::salt_len	src/tls/pkcs5.c	/^	size_t salt_len;$/;"	m	struct:pkcs5_params	file:	access:public
pkcs8_enc_key_import	src/tls/pkcs8.c	/^pkcs8_enc_key_import(const u8 *buf, size_t len, const char *passwd)$/;"	f	signature:(const u8 *buf, size_t len, const char *passwd)
pkcs8_enc_key_import	src/tls/pkcs8.h	/^pkcs8_enc_key_import(const u8 *buf, size_t len, const char *passwd);$/;"	p	signature:(const u8 *buf, size_t len, const char *passwd)
pkcs8_key_import	src/tls/pkcs8.c	/^struct crypto_private_key * pkcs8_key_import(const u8 *buf, size_t len)$/;"	f	signature:(const u8 *buf, size_t len)
pkcs8_key_import	src/tls/pkcs8.h	/^struct crypto_private_key * pkcs8_key_import(const u8 *buf, size_t len);$/;"	p	signature:(const u8 *buf, size_t len)
pm_capa	src/drivers/wireless_copy.h	/^	__u16		pm_capa;	\/* What PM options are supported *\/$/;"	m	struct:iw_range	access:public
pmk	src/ap/pmksa_cache_auth.h	/^	u8 pmk[PMK_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
pmk	src/rsn_supp/pmksa_cache.h	/^	u8 pmk[PMK_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
pmk	src/rsn_supp/wpa_i.h	/^	u8 pmk[PMK_LEN];$/;"	m	struct:wpa_sm	access:public
pmk_len	src/ap/pmksa_cache_auth.h	/^	size_t pmk_len;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
pmk_len	src/rsn_supp/pmksa_cache.h	/^	size_t pmk_len;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
pmk_len	src/rsn_supp/wpa_i.h	/^	size_t pmk_len;$/;"	m	struct:wpa_sm	access:public
pmk_r0	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r0_sa *pmk_r0;$/;"	m	struct:wpa_ft_pmk_cache	typeref:struct:wpa_ft_pmk_cache::wpa_ft_pmk_r0_sa	file:	access:public
pmk_r0	src/ap/wpa_auth_ft.c	/^	u8 pmk_r0[PMK_LEN];$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
pmk_r0	src/rsn_supp/wpa_i.h	/^	u8 pmk_r0[PMK_LEN];$/;"	m	struct:wpa_sm	access:public
pmk_r0_name	src/ap/wpa_auth.h	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
pmk_r0_name	src/ap/wpa_auth.h	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
pmk_r0_name	src/ap/wpa_auth_ft.c	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
pmk_r0_name	src/rsn_supp/wpa_i.h	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_sm	access:public
pmk_r1	src/ap/wpa_auth.h	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
pmk_r1	src/ap/wpa_auth.h	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
pmk_r1	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r1_sa *pmk_r1;$/;"	m	struct:wpa_ft_pmk_cache	typeref:struct:wpa_ft_pmk_cache::wpa_ft_pmk_r1_sa	file:	access:public
pmk_r1	src/ap/wpa_auth_ft.c	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
pmk_r1	src/rsn_supp/wpa_i.h	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:wpa_sm	access:public
pmk_r1_name	src/ap/wpa_auth.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
pmk_r1_name	src/ap/wpa_auth.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
pmk_r1_name	src/ap/wpa_auth_ft.c	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
pmk_r1_name	src/ap/wpa_auth_i.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN]; \/* PMKR1Name derived from FT Auth$/;"	m	struct:wpa_state_machine	access:public
pmk_r1_name	src/rsn_supp/wpa_i.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_sm	access:public
pmk_r1_name_valid	src/ap/wpa_auth_i.h	/^	unsigned int pmk_r1_name_valid:1;$/;"	m	struct:wpa_state_machine	access:public
pmk_r1_push	src/ap/ap_config.h	/^	int pmk_r1_push;$/;"	m	struct:hostapd_bss_config	access:public
pmk_r1_push	src/ap/wpa_auth.h	/^	int pmk_r1_push;$/;"	m	struct:wpa_auth_config	access:public
pmk_r1_pushed	src/ap/wpa_auth_ft.c	/^	int pmk_r1_pushed;$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
pmkid	src/ap/pmksa_cache_auth.c	/^	struct rsn_pmksa_cache_entry *pmkid[PMKID_HASH_SIZE];$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::rsn_pmksa_cache_entry	file:	access:public
pmkid	src/ap/pmksa_cache_auth.h	/^	u8 pmkid[PMKID_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
pmkid	src/ap/wpa_auth_ie.c	/^	const u8 *pmkid;$/;"	m	struct:wpa_auth_okc_iter_data	file:	access:public
pmkid	src/ap/wpa_auth_ie.h	/^	const u8 *pmkid;$/;"	m	struct:wpa_eapol_ie_parse	access:public
pmkid	src/common/wpa_common.h	/^	const u8 *pmkid;$/;"	m	struct:wpa_ie_data	access:public
pmkid	src/drivers/driver_ndis.h	/^	struct ndis_pmkid_entry *pmkid;$/;"	m	struct:wpa_driver_ndis_data	typeref:struct:wpa_driver_ndis_data::ndis_pmkid_entry	access:public
pmkid	src/drivers/driver_ndis.h	/^	u8 pmkid[16];$/;"	m	struct:ndis_pmkid_entry	access:public
pmkid	src/drivers/driver_ralink.c	/^	struct ndis_pmkid_entry *pmkid;$/;"	m	struct:wpa_driver_ralink_data	typeref:struct:wpa_driver_ralink_data::ndis_pmkid_entry	file:	access:public
pmkid	src/drivers/driver_ralink.h	/^	u8 pmkid[16];$/;"	m	struct:ndis_pmkid_entry	access:public
pmkid	src/drivers/wireless_copy.h	/^	__u8		pmkid[IW_PMKID_LEN];$/;"	m	struct:iw_pmksa	access:public
pmkid	src/rsn_supp/pmksa_cache.h	/^	u8 pmkid[PMKID_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
pmkid	src/rsn_supp/wpa_ie.h	/^	const u8 *pmkid;$/;"	m	struct:wpa_eapol_ie_parse	access:public
pmkid_candidate	src/drivers/driver.h	/^	struct pmkid_candidate {$/;"	s	union:wpa_event_data	access:public
pmkid_candidate	src/drivers/driver.h	/^	} pmkid_candidate;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::pmkid_candidate	access:public
pmksa	src/ap/pmksa_cache_auth.c	/^	struct rsn_pmksa_cache_entry *pmksa;$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::rsn_pmksa_cache_entry	file:	access:public
pmksa	src/ap/wpa_auth_i.h	/^	struct rsn_pmksa_cache *pmksa;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::rsn_pmksa_cache	access:public
pmksa	src/ap/wpa_auth_i.h	/^	struct rsn_pmksa_cache_entry *pmksa;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::rsn_pmksa_cache_entry	access:public
pmksa	src/ap/wpa_auth_ie.c	/^	struct rsn_pmksa_cache_entry *pmksa;$/;"	m	struct:wpa_auth_okc_iter_data	typeref:struct:wpa_auth_okc_iter_data::rsn_pmksa_cache_entry	file:	access:public
pmksa	src/rsn_supp/pmksa_cache.c	/^	struct rsn_pmksa_cache_entry *pmksa; \/* PMKSA cache *\/$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::rsn_pmksa_cache_entry	file:	access:public
pmksa	src/rsn_supp/wpa_i.h	/^	struct rsn_pmksa_cache *pmksa; \/* PMKSA cache *\/$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::rsn_pmksa_cache	access:public
pmksa_cache_add	src/rsn_supp/pmksa_cache.c	/^pmksa_cache_add(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, void *network_ctx, int akmp)
pmksa_cache_add	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_add(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, void *network_ctx, int akmp)
pmksa_cache_add	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_add(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len,$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, void *network_ctx, int akmp)
pmksa_cache_add_okc	src/ap/pmksa_cache_auth.c	/^pmksa_cache_add_okc(struct rsn_pmksa_cache *pmksa,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const struct rsn_pmksa_cache_entry *old_entry, const u8 *aa, const u8 *pmkid)
pmksa_cache_add_okc	src/ap/pmksa_cache_auth.h	/^pmksa_cache_add_okc(struct rsn_pmksa_cache *pmksa,$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, const struct rsn_pmksa_cache_entry *old_entry, const u8 *aa, const u8 *pmkid)
pmksa_cache_auth_add	src/ap/pmksa_cache_auth.c	/^pmksa_cache_auth_add(struct rsn_pmksa_cache *pmksa,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, int session_timeout, struct eapol_state_machine *eapol, int akmp)
pmksa_cache_auth_add	src/ap/pmksa_cache_auth.h	/^pmksa_cache_auth_add(struct rsn_pmksa_cache *pmksa,$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, int session_timeout, struct eapol_state_machine *eapol, int akmp)
pmksa_cache_auth_deinit	src/ap/pmksa_cache_auth.c	/^void pmksa_cache_auth_deinit(struct rsn_pmksa_cache *pmksa)$/;"	f	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_auth_deinit	src/ap/pmksa_cache_auth.h	/^void pmksa_cache_auth_deinit(struct rsn_pmksa_cache *pmksa);$/;"	p	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_auth_get	src/ap/pmksa_cache_auth.c	/^pmksa_cache_auth_get(struct rsn_pmksa_cache *pmksa,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const u8 *spa, const u8 *pmkid)
pmksa_cache_auth_get	src/ap/pmksa_cache_auth.h	/^pmksa_cache_auth_get(struct rsn_pmksa_cache *pmksa,$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, const u8 *spa, const u8 *pmkid)
pmksa_cache_auth_init	src/ap/pmksa_cache_auth.c	/^pmksa_cache_auth_init(void (*free_cb)(struct rsn_pmksa_cache_entry *entry,$/;"	f	signature:(void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx), void *ctx)
pmksa_cache_auth_init	src/ap/pmksa_cache_auth.h	/^pmksa_cache_auth_init(void (*free_cb)(struct rsn_pmksa_cache_entry *entry,$/;"	p	signature:(void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx), void *ctx)
pmksa_cache_clear_current	src/rsn_supp/pmksa_cache.c	/^void pmksa_cache_clear_current(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
pmksa_cache_clear_current	src/rsn_supp/pmksa_cache.h	/^static inline void pmksa_cache_clear_current(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
pmksa_cache_clear_current	src/rsn_supp/pmksa_cache.h	/^void pmksa_cache_clear_current(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
pmksa_cache_clone_entry	src/rsn_supp/pmksa_cache.c	/^pmksa_cache_clone_entry(struct rsn_pmksa_cache *pmksa,$/;"	f	file:	signature:(struct rsn_pmksa_cache *pmksa, const struct rsn_pmksa_cache_entry *old_entry, const u8 *aa)
pmksa_cache_deinit	src/rsn_supp/pmksa_cache.c	/^void pmksa_cache_deinit(struct rsn_pmksa_cache *pmksa)$/;"	f	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_deinit	src/rsn_supp/pmksa_cache.h	/^static inline void pmksa_cache_deinit(struct rsn_pmksa_cache *pmksa)$/;"	f	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_deinit	src/rsn_supp/pmksa_cache.h	/^void pmksa_cache_deinit(struct rsn_pmksa_cache *pmksa);$/;"	p	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_expire	src/ap/pmksa_cache_auth.c	/^static void pmksa_cache_expire(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
pmksa_cache_expire	src/rsn_supp/pmksa_cache.c	/^static void pmksa_cache_expire(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
pmksa_cache_flush	src/rsn_supp/pmksa_cache.c	/^void pmksa_cache_flush(struct rsn_pmksa_cache *pmksa, void *network_ctx)$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, void *network_ctx)
pmksa_cache_flush	src/rsn_supp/pmksa_cache.h	/^static inline void pmksa_cache_flush(struct rsn_pmksa_cache *pmksa,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, void *network_ctx)
pmksa_cache_flush	src/rsn_supp/pmksa_cache.h	/^void pmksa_cache_flush(struct rsn_pmksa_cache *pmksa, void *network_ctx);$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, void *network_ctx)
pmksa_cache_free_entry	src/ap/pmksa_cache_auth.c	/^static void pmksa_cache_free_entry(struct rsn_pmksa_cache *pmksa,$/;"	f	file:	signature:(struct rsn_pmksa_cache *pmksa, struct rsn_pmksa_cache_entry *entry)
pmksa_cache_free_entry	src/rsn_supp/pmksa_cache.c	/^static void pmksa_cache_free_entry(struct rsn_pmksa_cache *pmksa,$/;"	f	file:	signature:(struct rsn_pmksa_cache *pmksa, struct rsn_pmksa_cache_entry *entry, int replace)
pmksa_cache_from_eapol_data	src/ap/pmksa_cache_auth.c	/^static void pmksa_cache_from_eapol_data(struct rsn_pmksa_cache_entry *entry,$/;"	f	file:	signature:(struct rsn_pmksa_cache_entry *entry, struct eapol_state_machine *eapol)
pmksa_cache_get	src/rsn_supp/pmksa_cache.c	/^struct rsn_pmksa_cache_entry * pmksa_cache_get(struct rsn_pmksa_cache *pmksa,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const u8 *aa, const u8 *pmkid)
pmksa_cache_get	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_get(struct rsn_pmksa_cache *pmksa, const u8 *aa, const u8 *pmkid)$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, const u8 *aa, const u8 *pmkid)
pmksa_cache_get	src/rsn_supp/pmksa_cache.h	/^struct rsn_pmksa_cache_entry * pmksa_cache_get(struct rsn_pmksa_cache *pmksa,$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, const u8 *aa, const u8 *pmkid)
pmksa_cache_get_current	src/rsn_supp/pmksa_cache.c	/^struct rsn_pmksa_cache_entry * pmksa_cache_get_current(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
pmksa_cache_get_current	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_get_current(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
pmksa_cache_get_current	src/rsn_supp/pmksa_cache.h	/^struct rsn_pmksa_cache_entry * pmksa_cache_get_current(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
pmksa_cache_get_okc	src/ap/pmksa_cache_auth.c	/^struct rsn_pmksa_cache_entry * pmksa_cache_get_okc($/;"	f	signature:( struct rsn_pmksa_cache *pmksa, const u8 *aa, const u8 *spa, const u8 *pmkid)
pmksa_cache_get_okc	src/ap/pmksa_cache_auth.h	/^struct rsn_pmksa_cache_entry * pmksa_cache_get_okc($/;"	p	signature:( struct rsn_pmksa_cache *pmksa, const u8 *spa, const u8 *aa, const u8 *pmkid)
pmksa_cache_get_opportunistic	src/rsn_supp/pmksa_cache.c	/^pmksa_cache_get_opportunistic(struct rsn_pmksa_cache *pmksa, void *network_ctx,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, void *network_ctx, const u8 *aa)
pmksa_cache_get_opportunistic	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_get_opportunistic(struct rsn_pmksa_cache *pmksa,$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, void *network_ctx, const u8 *aa)
pmksa_cache_init	src/rsn_supp/pmksa_cache.c	/^pmksa_cache_init(void (*free_cb)(struct rsn_pmksa_cache_entry *entry,$/;"	f	signature:(void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx, int replace), void *ctx, struct wpa_sm *sm)
pmksa_cache_init	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_init(void (*free_cb)(struct rsn_pmksa_cache_entry *entry,$/;"	f	signature:(void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx, int replace), void *ctx, struct wpa_sm *sm)
pmksa_cache_init	src/rsn_supp/pmksa_cache.h	/^pmksa_cache_init(void (*free_cb)(struct rsn_pmksa_cache_entry *entry,$/;"	p	signature:(void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx, int replace), void *ctx, struct wpa_sm *sm)
pmksa_cache_link_entry	src/ap/pmksa_cache_auth.c	/^static void pmksa_cache_link_entry(struct rsn_pmksa_cache *pmksa,$/;"	f	file:	signature:(struct rsn_pmksa_cache *pmksa, struct rsn_pmksa_cache_entry *entry)
pmksa_cache_list	src/rsn_supp/pmksa_cache.c	/^int pmksa_cache_list(struct rsn_pmksa_cache *pmksa, char *buf, size_t len)$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, char *buf, size_t len)
pmksa_cache_list	src/rsn_supp/pmksa_cache.h	/^int pmksa_cache_list(struct rsn_pmksa_cache *pmksa, char *buf, size_t len);$/;"	p	signature:(struct rsn_pmksa_cache *pmksa, char *buf, size_t len)
pmksa_cache_list	src/rsn_supp/pmksa_cache.h	/^static inline int pmksa_cache_list(struct rsn_pmksa_cache *pmksa, char *buf,$/;"	f	signature:(struct rsn_pmksa_cache *pmksa, char *buf, size_t len)
pmksa_cache_max_entries	src/ap/pmksa_cache_auth.c	/^static const int pmksa_cache_max_entries = 1024;$/;"	v	file:
pmksa_cache_max_entries	src/rsn_supp/pmksa_cache.c	/^static const int pmksa_cache_max_entries = 32;$/;"	v	file:
pmksa_cache_reauth	src/rsn_supp/pmksa_cache.c	/^static void pmksa_cache_reauth(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
pmksa_cache_set_current	src/rsn_supp/pmksa_cache.c	/^int pmksa_cache_set_current(struct wpa_sm *sm, const u8 *pmkid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *pmkid, const u8 *bssid, void *network_ctx, int try_opportunistic)
pmksa_cache_set_current	src/rsn_supp/pmksa_cache.h	/^int pmksa_cache_set_current(struct wpa_sm *sm, const u8 *pmkid,$/;"	p	signature:(struct wpa_sm *sm, const u8 *pmkid, const u8 *bssid, void *network_ctx, int try_opportunistic)
pmksa_cache_set_current	src/rsn_supp/pmksa_cache.h	/^static inline int pmksa_cache_set_current(struct wpa_sm *sm, const u8 *pmkid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *pmkid, const u8 *bssid, void *network_ctx, int try_opportunistic)
pmksa_cache_set_expiration	src/ap/pmksa_cache_auth.c	/^static void pmksa_cache_set_expiration(struct rsn_pmksa_cache *pmksa)$/;"	f	file:	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_set_expiration	src/ap/pmksa_cache_auth.c	/^static void pmksa_cache_set_expiration(struct rsn_pmksa_cache *pmksa);$/;"	p	file:	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_set_expiration	src/rsn_supp/pmksa_cache.c	/^static void pmksa_cache_set_expiration(struct rsn_pmksa_cache *pmksa)$/;"	f	file:	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_set_expiration	src/rsn_supp/pmksa_cache.c	/^static void pmksa_cache_set_expiration(struct rsn_pmksa_cache *pmksa);$/;"	p	file:	signature:(struct rsn_pmksa_cache *pmksa)
pmksa_cache_to_eapol_data	src/ap/pmksa_cache_auth.c	/^void pmksa_cache_to_eapol_data(struct rsn_pmksa_cache_entry *entry,$/;"	f	signature:(struct rsn_pmksa_cache_entry *entry, struct eapol_state_machine *eapol)
pmksa_cache_to_eapol_data	src/ap/pmksa_cache_auth.h	/^void pmksa_cache_to_eapol_data(struct rsn_pmksa_cache_entry *entry,$/;"	p	signature:(struct rsn_pmksa_cache_entry *entry, struct eapol_state_machine *eapol)
pmksa_candidate_add	src/rsn_supp/preauth.c	/^void pmksa_candidate_add(struct wpa_sm *sm, const u8 *bssid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid, int prio, int preauth)
pmksa_candidate_add	src/rsn_supp/preauth.h	/^static inline void pmksa_candidate_add(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid, int prio, int preauth)
pmksa_candidate_add	src/rsn_supp/preauth.h	/^void pmksa_candidate_add(struct wpa_sm *sm, const u8 *bssid,$/;"	p	signature:(struct wpa_sm *sm, const u8 *bssid, int prio, int preauth)
pmksa_candidate_free	src/rsn_supp/preauth.c	/^void pmksa_candidate_free(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
pmksa_candidate_free	src/rsn_supp/preauth.h	/^static inline void pmksa_candidate_free(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
pmksa_candidate_free	src/rsn_supp/preauth.h	/^void pmksa_candidate_free(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
pmksa_candidates	src/rsn_supp/wpa_i.h	/^	struct dl_list pmksa_candidates;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::dl_list	access:public
pmksa_count	src/ap/pmksa_cache_auth.c	/^	int pmksa_count;$/;"	m	struct:rsn_pmksa_cache	file:	access:public
pmksa_count	src/rsn_supp/pmksa_cache.c	/^	int pmksa_count; \/* number of entries in PMKSA cache *\/$/;"	m	struct:rsn_pmksa_cache	file:	access:public
pmp_flags	src/drivers/wireless_copy.h	/^	__u16		pmp_flags;	\/* How to decode max\/min PM period *\/$/;"	m	struct:iw_range	access:public
pmt_flags	src/drivers/wireless_copy.h	/^	__u16		pmt_flags;	\/* How to decode max\/min PM timeout *\/$/;"	m	struct:iw_range	access:public
pn	src/common/wpa_common.h	/^	u8 pn[6];$/;"	m	struct:wpa_igtk_kde	access:public
pnonce	src/rsn_supp/peerkey.h	/^	u8 pnonce[WPA_NONCE_LEN]; \/* Peer Nonce *\/$/;"	m	struct:wpa_peerkey	access:public
pointer	src/drivers/wireless_copy.h	/^	compat_caddr_t	pointer;$/;"	m	struct:__compat_iw_event	access:public
pointer	src/drivers/wireless_copy.h	/^	compat_caddr_t pointer;$/;"	m	struct:compat_iw_point	access:public
pointer	src/drivers/wireless_copy.h	/^  void __user	*pointer;	\/* Pointer to the data  (in user space) *\/$/;"	m	struct:iw_point	access:public
poll	src/drivers/driver.h	/^	void (*poll)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
poll_client	src/drivers/driver.h	/^	void (*poll_client)(void *priv, const u8 *own_addr,$/;"	m	struct:wpa_driver_ops	access:public
pool	src/crypto/random.c	/^static u32 pool[POOL_WORDS];$/;"	v	file:
pool_pos	src/crypto/random.c	/^static unsigned int pool_pos = 0;$/;"	v	file:
port	src/radius/radius_client.h	/^	int port;$/;"	m	struct:hostapd_radius_server	access:public
port	src/wps/http_server.c	/^	int port;$/;"	m	struct:http_server	file:	access:public
portControl	src/eapol_auth/eapol_auth_sm_i.h	/^	PortTypes portControl;  \/\/ 受控端口的全局控制模式,作为802.1x认证者，在eapol_auth_alloc时设置了固定值AUTO$/;"	m	struct:eapol_state_machine	access:public
portControl	src/eapol_supp/eapol_supp_sm.c	/^	PortControl portControl;$/;"	m	struct:eapol_sm	file:	access:public
portEnabled	src/eap_server/eap.h	/^	Boolean portEnabled;    \/\/ 此标志同时影响EAPOL层SM和EAP层SM，意味着该port是否可操作，在开始进行802.1X认证时被设置TRUE，在认证失败时设置FALSE $/;"	m	struct:eap_eapol_interface	access:public
portEnabled	src/eapol_supp/eapol_supp_sm.c	/^	Boolean portEnabled;$/;"	m	struct:eapol_sm	file:	access:public
portMode	src/eapol_auth/eapol_auth_sm_i.h	/^	PortTypes portMode;     \/\/ AUTH_PEA SM私有的端口模式,初始化时设置Auto，进入FORCE_AUTH状态时设置ForceAuthorized，进入FORCE_UNAUTH状态时设置ForceUnauthorized$/;"	m	struct:eapol_state_machine	access:public
portValid	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean portValid;      \/\/ 只在无线网络中(wpa功能开启时)被用到$/;"	m	struct:eapol_state_machine	access:public
portValid	src/eapol_supp/eapol_supp_sm.c	/^	Boolean portValid;$/;"	m	struct:eapol_sm	file:	access:public
port_bitmap	src/drivers/driver_nl80211.c	/^static uint32_t port_bitmap[32] = { 0 };$/;"	v	file:
port_cb	src/eapol_supp/eapol_supp_sm.h	/^	void (*port_cb)(void *ctx, int authorized);$/;"	m	struct:eapol_ctx	access:public
port_stat	src/drivers/Apple80211.h	/^	UInt16 port_stat;$/;"	m	struct:WirelessInfo	access:public
port_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * port_state_txt(PortState ps)$/;"	f	file:	signature:(PortState ps)
port_type_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * port_type_txt(PortTypes pt)$/;"	f	file:	signature:(PortTypes pt)
ports	src/drivers/driver_roboswitch.c	/^	u16 ports;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
pos	src/eap_peer/eap_fast_pac.c	/^	const char *pos;$/;"	m	struct:eap_fast_read_ctx	file:	access:public
power	src/drivers/Apple80211.h	/^	UInt16 power;$/;"	m	struct:WirelessInfo	access:public
power	src/drivers/wireless_copy.h	/^	struct iw_param	power;		\/* PM duration\/timeout *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
power_cap	src/common/ieee802_11_common.h	/^	const u8 *power_cap;$/;"	m	struct:ieee802_11_elems	access:public
power_cap_len	src/common/ieee802_11_common.h	/^	u8 power_cap_len;$/;"	m	struct:ieee802_11_elems	access:public
pre_shared_secret	src/crypto/tls_gnutls.c	/^	u8 *pre_shared_secret;$/;"	m	struct:tls_connection	file:	access:public
pre_shared_secret_len	src/crypto/tls_gnutls.c	/^	size_t pre_shared_secret_len;$/;"	m	struct:tls_connection	file:	access:public
preamble	src/ap/ap_config.h	/^	} preamble;$/;"	m	struct:hostapd_config	typeref:enum:hostapd_config::__anon4	access:public
preamble	src/drivers/driver.h	/^	int preamble;$/;"	m	struct:wpa_driver_ap_params	access:public
preauth	src/drivers/driver.h	/^		int preauth;$/;"	m	struct:wpa_event_data::pmkid_candidate	access:public
preauth	src/eapol_supp/eapol_supp_sm.h	/^	int preauth;$/;"	m	struct:eapol_ctx	access:public
preauth_bssid	src/rsn_supp/wpa_i.h	/^	u8 preauth_bssid[ETH_ALEN]; \/* current RSN pre-auth peer or$/;"	m	struct:wpa_sm	access:public
preauth_eapol	src/rsn_supp/wpa_i.h	/^	struct eapol_sm *preauth_eapol;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::eapol_sm	access:public
preauth_iface	src/ap/hostapd.h	/^	struct rsn_preauth_interface *preauth_iface;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::rsn_preauth_interface	access:public
preauth_iface	src/ap/sta_info.h	/^	struct rsn_preauth_interface *preauth_iface;$/;"	m	struct:sta_info	typeref:struct:sta_info::rsn_preauth_interface	access:public
pref_chan	src/p2p/p2p.h	/^	struct p2p_channel *pref_chan;$/;"	m	struct:p2p_config	typeref:struct:p2p_config::p2p_channel	access:public
prefix	src/eap_peer/eap_gtc.c	/^	int prefix;$/;"	m	struct:eap_gtc_data	file:	access:public
prefix	src/eap_server/eap_server_gtc.c	/^	int prefix;$/;"	m	struct:eap_gtc_data	file:	access:public
prep	src/eap_common/eap_pwd_common.h	/^	u8 prep;$/;"	m	struct:eap_pwd_id	access:public
prev	src/ap/ap_list.h	/^	struct ap_info *prev; \/* previous entry in AP list *\/$/;"	m	struct:ap_info	typeref:struct:ap_info::ap_info	access:public
prev	src/utils/list.h	/^	struct dl_list *prev;$/;"	m	struct:dl_list	typeref:struct:dl_list::dl_list	access:public
prev_bssid	src/drivers/driver.h	/^	const u8 *prev_bssid;$/;"	m	struct:wpa_driver_associate_params	access:public
prev_challenge	src/eap_peer/eap_mschapv2.c	/^	struct wpabuf *prev_challenge;$/;"	m	struct:eap_mschapv2_data	typeref:struct:eap_mschapv2_data::wpabuf	file:	access:public
prev_cipher_suite	src/tls/tlsv1_client_i.h	/^	u16 prev_cipher_suite;$/;"	m	struct:tlsv1_client	access:public
prev_error	src/eap_peer/eap_mschapv2.c	/^	int prev_error;$/;"	m	struct:eap_mschapv2_data	file:	access:public
prev_failure	src/eap_peer/eap_i.h	/^	int prev_failure;$/;"	m	struct:eap_sm	access:public
prev_id	src/eap_peer/eap_aka.c	/^	int prev_id;$/;"	m	struct:eap_aka_data	file:	access:public
prev_privacy	src/drivers/driver_bsd.c	/^	int	prev_privacy;	\/* privacy state to restore on deinit *\/$/;"	m	struct:bsd_driver_data	file:	access:public
prev_roaming	src/drivers/driver_bsd.c	/^	int	prev_roaming;	\/* roaming state to restore on deinit *\/$/;"	m	struct:bsd_driver_data	file:	access:public
prev_wpa	src/drivers/driver_bsd.c	/^	int	prev_wpa;	\/* wpa state to restore on deinit *\/$/;"	m	struct:bsd_driver_data	file:	access:public
previous_ap	src/ap/sta_info.h	/^	u8 previous_ap[6];$/;"	m	struct:sta_info	access:public
prevt	src/utils/edit.c	/^static struct termios prevt, newt;$/;"	v	typeref:struct:termios	file:
prf	src/eap_common/eap_pwd_common.h	/^	u8 prf;$/;"	m	struct:eap_pwd_id	access:public
prf	src/eap_peer/ikev2.h	/^	int prf;$/;"	m	struct:ikev2_proposal_data	access:public
prf	src/eap_server/ikev2.h	/^	int prf;$/;"	m	struct:ikev2_proposal_data	access:public
prf_prime	src/eap_common/eap_sim_common.c	/^static void prf_prime(const u8 *k, const char *seed1,$/;"	f	file:	signature:(const u8 *k, const char *seed1, const u8 *seed2, size_t seed2_len, const u8 *seed3, size_t seed3_len, u8 *res, size_t res_len)
prg_fname	src/utils/trace.c	/^static char *prg_fname = NULL;$/;"	v	file:
pri_dev_type	src/drivers/driver.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
pri_dev_type	src/drivers/driver.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
pri_dev_type	src/drivers/driver.h	/^	u8 pri_dev_type[8];$/;"	m	struct:p2p_params	access:public
pri_dev_type	src/p2p/p2p.h	/^	u8 pri_dev_type[8];$/;"	m	struct:p2p_config	access:public
pri_dev_type	src/p2p/p2p.h	/^	u8 pri_dev_type[8];$/;"	m	struct:p2p_peer_info	access:public
pri_dev_type	src/p2p/p2p_i.h	/^		const u8 *pri_dev_type;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
pri_dev_type	src/p2p/p2p_i.h	/^	const u8 *pri_dev_type;$/;"	m	struct:p2p_message	access:public
pri_dev_type	src/wps/wps.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
pri_dev_type	src/wps/wps.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
pri_dev_type	src/wps/wps.h	/^	u8 pri_dev_type[WPS_DEV_TYPE_LEN];$/;"	m	struct:wps_device_data	access:public
pri_dev_type	src/wps/wps_er.h	/^	u8 pri_dev_type[8];$/;"	m	struct:wps_er_ap	access:public
pri_dev_type	src/wps/wps_er.h	/^	u8 pri_dev_type[8];$/;"	m	struct:wps_er_sta	access:public
primary_dev_type	src/wps/wps.h	/^		const u8 *primary_dev_type; \/* 8 octets *\/$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
primary_dev_type	src/wps/wps_i.h	/^	const u8 *primary_dev_type; \/* 8 octets *\/$/;"	m	struct:wps_parse_attr	access:public
prime	src/crypto/dh_groups.h	/^	const u8 *prime;$/;"	m	struct:dh_group	access:public
prime	src/eap_common/eap_pwd_common.h	/^	BIGNUM *prime;$/;"	m	struct:group_definition_	access:public
prime_len	src/crypto/dh_groups.h	/^	size_t prime_len;$/;"	m	struct:dh_group	access:public
print_char	src/radius/radius.c	/^static void print_char(char c)$/;"	f	file:	signature:(char c)
priority	src/rsn_supp/preauth.c	/^	int priority;$/;"	m	struct:rsn_pmksa_candidate	file:	access:public
prism2_download_area	src/drivers/driver_hostap.h	/^	struct prism2_download_area {$/;"	s	struct:prism2_download_param	access:public
prism2_download_param	src/drivers/driver_hostap.h	/^struct prism2_download_param {$/;"	s
prism2_download_param::data	src/drivers/driver_hostap.h	/^	} data[0];$/;"	m	struct:prism2_download_param	typeref:struct:prism2_download_param::prism2_download_area	access:public
prism2_download_param::dl_cmd	src/drivers/driver_hostap.h	/^	u32 dl_cmd;$/;"	m	struct:prism2_download_param	access:public
prism2_download_param::num_areas	src/drivers/driver_hostap.h	/^	u32 num_areas;$/;"	m	struct:prism2_download_param	access:public
prism2_download_param::prism2_download_area	src/drivers/driver_hostap.h	/^	struct prism2_download_area {$/;"	s	struct:prism2_download_param	access:public
prism2_download_param::prism2_download_area::addr	src/drivers/driver_hostap.h	/^		u32 addr; \/* wlan card address *\/$/;"	m	struct:prism2_download_param::prism2_download_area	access:public
prism2_download_param::prism2_download_area::len	src/drivers/driver_hostap.h	/^		u32 len;$/;"	m	struct:prism2_download_param::prism2_download_area	access:public
prism2_download_param::prism2_download_area::ptr	src/drivers/driver_hostap.h	/^		caddr_t ptr; \/* pointer to data in user space *\/$/;"	m	struct:prism2_download_param::prism2_download_area	access:public
prism2_download_param::start_addr	src/drivers/driver_hostap.h	/^	u32 start_addr;$/;"	m	struct:prism2_download_param	access:public
prism2_hostapd_param	src/drivers/driver_hostap.h	/^struct prism2_hostapd_param {$/;"	s
prism2_hostapd_param::__anon78::__anon79::aid	src/drivers/driver_hostap.h	/^			u16 aid;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon79	access:public
prism2_hostapd_param::__anon78::__anon79::capability	src/drivers/driver_hostap.h	/^			u16 capability;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon79	access:public
prism2_hostapd_param::__anon78::__anon79::tx_supp_rates	src/drivers/driver_hostap.h	/^			u8 tx_supp_rates;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon79	access:public
prism2_hostapd_param::__anon78::__anon80::inactive_sec	src/drivers/driver_hostap.h	/^			u32 inactive_sec;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon80	access:public
prism2_hostapd_param::__anon78::__anon81::alg	src/drivers/driver_hostap.h	/^			u8 alg[HOSTAP_CRYPT_ALG_NAME_LEN];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon81::err	src/drivers/driver_hostap.h	/^			u32 err;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon81::flags	src/drivers/driver_hostap.h	/^			u32 flags;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon81::idx	src/drivers/driver_hostap.h	/^			u8 idx;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon81::key	src/drivers/driver_hostap.h	/^			u8 key[0];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon81::key_len	src/drivers/driver_hostap.h	/^			u16 key_len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon81::seq	src/drivers/driver_hostap.h	/^			u8 seq[8]; \/* sequence counter (set: RX, get: TX) *\/$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::__anon82::flags_and	src/drivers/driver_hostap.h	/^			u32 flags_and;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon82	access:public
prism2_hostapd_param::__anon78::__anon82::flags_or	src/drivers/driver_hostap.h	/^			u32 flags_or;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon82	access:public
prism2_hostapd_param::__anon78::__anon83::data	src/drivers/driver_hostap.h	/^			u8 data[0];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon83	access:public
prism2_hostapd_param::__anon78::__anon83::len	src/drivers/driver_hostap.h	/^			u16 len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon83	access:public
prism2_hostapd_param::__anon78::__anon83::rid	src/drivers/driver_hostap.h	/^			u16 rid;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon83	access:public
prism2_hostapd_param::__anon78::__anon84::data	src/drivers/driver_hostap.h	/^			u8 data[0];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon84	access:public
prism2_hostapd_param::__anon78::__anon84::len	src/drivers/driver_hostap.h	/^			u8 len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon84	access:public
prism2_hostapd_param::__anon78::__anon85::cmd	src/drivers/driver_hostap.h	/^			u16 cmd;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon85	access:public
prism2_hostapd_param::__anon78::__anon85::reason_code	src/drivers/driver_hostap.h	/^			u16 reason_code;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon85	access:public
prism2_hostapd_param::__anon78::__anon86::ssid	src/drivers/driver_hostap.h	/^			u8 ssid[32];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon86	access:public
prism2_hostapd_param::__anon78::__anon86::ssid_len	src/drivers/driver_hostap.h	/^			u8 ssid_len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon86	access:public
prism2_hostapd_param::__anon78::add_sta	src/drivers/driver_hostap.h	/^		} add_sta;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon79	access:public
prism2_hostapd_param::__anon78::crypt	src/drivers/driver_hostap.h	/^		} crypt;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon81	access:public
prism2_hostapd_param::__anon78::generic_elem	src/drivers/driver_hostap.h	/^		} generic_elem;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon84	access:public
prism2_hostapd_param::__anon78::get_info_sta	src/drivers/driver_hostap.h	/^		} get_info_sta;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon80	access:public
prism2_hostapd_param::__anon78::mlme	src/drivers/driver_hostap.h	/^		} mlme;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon85	access:public
prism2_hostapd_param::__anon78::rid	src/drivers/driver_hostap.h	/^		} rid;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon83	access:public
prism2_hostapd_param::__anon78::scan_req	src/drivers/driver_hostap.h	/^		} scan_req;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon86	access:public
prism2_hostapd_param::__anon78::set_flags_sta	src/drivers/driver_hostap.h	/^		} set_flags_sta;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon82	access:public
prism2_hostapd_param::cmd	src/drivers/driver_hostap.h	/^	u32 cmd;$/;"	m	struct:prism2_hostapd_param	access:public
prism2_hostapd_param::sta_addr	src/drivers/driver_hostap.h	/^	u8 sta_addr[ETH_ALEN];$/;"	m	struct:prism2_hostapd_param	access:public
prism2_hostapd_param::u	src/drivers/driver_hostap.h	/^	} u;$/;"	m	struct:prism2_hostapd_param	typeref:union:prism2_hostapd_param::__anon78	access:public
prism2param	src/drivers/driver_hostap.c	/^static int prism2param(struct wpa_driver_hostap_data *drv, int param,$/;"	f	file:	signature:(struct wpa_driver_hostap_data *drv, int param, int value)
priv	src/wps/wps_upnp_i.h	/^	void *priv;$/;"	m	struct:upnp_wps_device_interface	access:public
priv_addr	src/drivers/driver_privsep.c	/^	struct sockaddr_un priv_addr;$/;"	m	struct:wpa_driver_privsep_data	typeref:struct:wpa_driver_privsep_data::sockaddr_un	file:	access:public
priv_addr	src/l2_packet/l2_packet_privsep.c	/^	struct sockaddr_un priv_addr;$/;"	m	struct:l2_packet_data	typeref:struct:l2_packet_data::sockaddr_un	file:	access:public
priv_socket	src/drivers/driver_privsep.c	/^	int priv_socket;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
privacy	src/drivers/driver.h	/^	int privacy;$/;"	m	struct:wpa_driver_ap_params	access:public
privacy	src/drivers/driver_test.c	/^	int privacy;$/;"	m	struct:test_driver_bss	file:	access:public
private_key	src/ap/ap_config.h	/^	char *private_key;$/;"	m	struct:hostapd_bss_config	access:public
private_key	src/crypto/tls.h	/^	const char *private_key;$/;"	m	struct:tls_connection_params	access:public
private_key	src/crypto/tls_openssl.c	/^	EVP_PKEY *private_key; \/* the private key if using engine *\/$/;"	m	struct:tls_connection	file:	access:public
private_key	src/eap_peer/eap_config.h	/^	u8 *private_key;$/;"	m	struct:eap_peer_config	access:public
private_key	src/tls/rsa.c	/^	int private_key; \/* whether private key is set *\/$/;"	m	struct:crypto_rsa_key	file:	access:public
private_key2	src/eap_peer/eap_config.h	/^	u8 *private_key2;$/;"	m	struct:eap_peer_config	access:public
private_key2_passwd	src/eap_peer/eap_config.h	/^	u8 *private_key2_passwd;$/;"	m	struct:eap_peer_config	access:public
private_key_blob	src/crypto/tls.h	/^	const u8 *private_key_blob;$/;"	m	struct:tls_connection_params	access:public
private_key_blob_len	src/crypto/tls.h	/^	size_t private_key_blob_len;$/;"	m	struct:tls_connection_params	access:public
private_key_passwd	src/ap/ap_config.h	/^	char *private_key_passwd;$/;"	m	struct:hostapd_bss_config	access:public
private_key_passwd	src/crypto/tls.h	/^	const char *private_key_passwd;$/;"	m	struct:tls_connection_params	access:public
private_key_passwd	src/eap_peer/eap_config.h	/^	u8 *private_key_passwd;$/;"	m	struct:eap_peer_config	access:public
private_value	src/eap_peer/eap_pwd.c	/^	BIGNUM *private_value;$/;"	m	struct:eap_pwd_data	file:	access:public
private_value	src/eap_server/eap_server_pwd.c	/^	BIGNUM *private_value;$/;"	m	struct:eap_pwd_data	file:	access:public
privsep_cmd	src/common/privsep_commands.h	/^enum privsep_cmd {$/;"	g
privsep_cmd_associate	src/common/privsep_commands.h	/^struct privsep_cmd_associate$/;"	s
privsep_cmd_associate::auth_alg	src/common/privsep_commands.h	/^	int auth_alg;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::bssid	src/common/privsep_commands.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::freq	src/common/privsep_commands.h	/^	int freq;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::group_suite	src/common/privsep_commands.h	/^	int group_suite;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::key_mgmt_suite	src/common/privsep_commands.h	/^	int key_mgmt_suite;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::mode	src/common/privsep_commands.h	/^	int mode;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::pairwise_suite	src/common/privsep_commands.h	/^	int pairwise_suite;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::ssid	src/common/privsep_commands.h	/^	u8 ssid[32];$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::ssid_len	src/common/privsep_commands.h	/^	size_t ssid_len;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_associate::wpa_ie_len	src/common/privsep_commands.h	/^	size_t wpa_ie_len;$/;"	m	struct:privsep_cmd_associate	access:public
privsep_cmd_set_key	src/common/privsep_commands.h	/^struct privsep_cmd_set_key$/;"	s
privsep_cmd_set_key::addr	src/common/privsep_commands.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::alg	src/common/privsep_commands.h	/^	int alg;$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::key	src/common/privsep_commands.h	/^	u8 key[32];$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::key_idx	src/common/privsep_commands.h	/^	int key_idx;$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::key_len	src/common/privsep_commands.h	/^	size_t key_len;$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::seq	src/common/privsep_commands.h	/^	u8 seq[8];$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::seq_len	src/common/privsep_commands.h	/^	size_t seq_len;$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_cmd_set_key::set_tx	src/common/privsep_commands.h	/^	int set_tx;$/;"	m	struct:privsep_cmd_set_key	access:public
privsep_event	src/common/privsep_commands.h	/^enum privsep_event {$/;"	g
proactive_key_caching	src/rsn_supp/wpa.h	/^	int proactive_key_caching;$/;"	m	struct:rsn_supp_config	access:public
proactive_key_caching	src/rsn_supp/wpa_i.h	/^	int proactive_key_caching;$/;"	m	struct:wpa_sm	access:public
probe_from	src/drivers/driver_test.c	/^	struct sockaddr *probe_from;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::sockaddr	file:	access:public
probe_from_len	src/drivers/driver_test.c	/^	socklen_t probe_from_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
probe_req	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED probe_req;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon46	access:public
probe_req_ie	src/drivers/driver_test.c	/^	u8 *probe_req_ie;$/;"	m	struct:wpa_driver_test_data	file:	access:public
probe_req_ie_len	src/drivers/driver_test.c	/^	size_t probe_req_ie_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
probe_req_report	src/drivers/driver.h	/^	int (*probe_req_report)(void *priv, int report);$/;"	m	struct:wpa_driver_ops	access:public
probe_req_report	src/drivers/driver_test.c	/^	int probe_req_report;$/;"	m	struct:wpa_driver_test_data	file:	access:public
probe_req_ssid	src/drivers/driver_test.c	/^	u8 probe_req_ssid[32];$/;"	m	struct:wpa_driver_test_data	file:	access:public
probe_req_ssid_len	src/drivers/driver_test.c	/^	size_t probe_req_ssid_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
probe_resp	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED probe_resp;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon47	access:public
probereq_cb	src/ap/hostapd.h	/^	struct hostapd_probereq_cb *probereq_cb;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::hostapd_probereq_cb	access:public
proberesp_ies	src/drivers/driver.h	/^	const struct wpabuf *proberesp_ies;$/;"	m	struct:wpa_driver_ap_params	typeref:struct:wpa_driver_ap_params::wpabuf	access:public
process	hostapd/hlr_auc_gw.c	/^static int process(int s)$/;"	f	file:	signature:(int s)
process	src/eap_peer/eap_i.h	/^	struct wpabuf * (*process)(struct eap_sm *sm, void *priv,$/;"	m	struct:eap_method	typeref:struct:eap_method::process	access:public
process	src/eap_server/eap_i.h	/^	void (*process)(struct eap_sm *sm, void *priv,$/;"	m	struct:eap_method	access:public
processKey	src/eapol_auth/eapol_auth_sm.c	60;"	d	file:
process_cmd	src/utils/edit.c	/^static void process_cmd(void)$/;"	f	file:	signature:(void)
process_event	src/drivers/driver_nl80211.c	/^static int process_event(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
proposal	src/eap_peer/ikev2.h	/^	struct ikev2_proposal_data proposal;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::ikev2_proposal_data	access:public
proposal	src/eap_server/ikev2.h	/^	struct ikev2_proposal_data proposal;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::ikev2_proposal_data	access:public
proposal_length	src/eap_common/ikev2_common.h	/^	u8 proposal_length[2]; \/* including all transform and attributes *\/$/;"	m	struct:ikev2_proposal	access:public
proposal_num	src/eap_common/ikev2_common.h	/^	u8 proposal_num;$/;"	m	struct:ikev2_proposal	access:public
proposal_num	src/eap_peer/ikev2.h	/^	u8 proposal_num;$/;"	m	struct:ikev2_proposal_data	access:public
proposal_num	src/eap_server/ikev2.h	/^	u8 proposal_num;$/;"	m	struct:ikev2_proposal_data	access:public
proto	src/common/wpa_common.h	/^	int proto;$/;"	m	struct:wpa_ie_data	access:public
proto	src/rsn_supp/wpa_i.h	/^	unsigned int proto;$/;"	m	struct:wpa_sm	access:public
protocol	src/utils/pcsc_funcs.c	/^	DWORD protocol;$/;"	m	struct:scard_data	file:	access:public
protocol_id	src/eap_common/ikev2_common.h	/^	u8 protocol_id; \/* IKEV2_PROTOCOL_* *\/$/;"	m	struct:ikev2_proposal	access:public
prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:aes_context	file:	access:public
prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_cipher	file:	access:public
prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_hash	file:	access:public
prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_private_key	file:	access:public
prov	src/crypto/crypto_cryptoapi.c	/^	HCRYPTPROV prov;$/;"	m	struct:crypto_public_key	file:	access:public
prov_disc_fail	src/p2p/p2p.h	/^	void (*prov_disc_fail)(void *ctx, const u8 *peer,$/;"	m	struct:p2p_config	access:public
prov_disc_req	src/p2p/p2p.h	/^	void (*prov_disc_req)(void *ctx, const u8 *peer, u16 config_methods,$/;"	m	struct:p2p_config	access:public
prov_disc_resp	src/p2p/p2p.h	/^	void (*prov_disc_resp)(void *ctx, const u8 *peer, u16 config_methods);$/;"	m	struct:p2p_config	access:public
provisioning	src/eap_peer/eap_fast.c	/^	int provisioning; \/* doing PAC provisioning (not the normal auth) *\/$/;"	m	struct:eap_fast_data	file:	access:public
provisioning_allowed	src/eap_peer/eap_fast.c	/^	int provisioning_allowed; \/* Allowed PAC provisioning modes *\/$/;"	m	struct:eap_fast_data	file:	access:public
prune_associations	src/ap/utils.c	/^static int prune_associations(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
prune_data	src/ap/utils.c	/^struct prune_data {$/;"	s	file:
prune_data::addr	src/ap/utils.c	/^	const u8 *addr;$/;"	m	struct:prune_data	file:	access:public
prune_data::hapd	src/ap/utils.c	/^	struct hostapd_data *hapd;$/;"	m	struct:prune_data	typeref:struct:prune_data::hostapd_data	file:	access:public
pseudonym	src/eap_peer/eap_aka.c	/^	u8 *pseudonym;$/;"	m	struct:eap_aka_data	file:	access:public
pseudonym	src/eap_peer/eap_sim.c	/^	u8 *pseudonym;$/;"	m	struct:eap_sim_data	file:	access:public
pseudonym	src/eap_server/eap_sim_db.c	/^	char *pseudonym;$/;"	m	struct:eap_sim_pseudonym	file:	access:public
pseudonym_len	src/eap_peer/eap_aka.c	/^	size_t pseudonym_len;$/;"	m	struct:eap_aka_data	file:	access:public
pseudonym_len	src/eap_peer/eap_sim.c	/^	size_t pseudonym_len;$/;"	m	struct:eap_sim_data	file:	access:public
pseudonyms	src/eap_server/eap_sim_db.c	/^	struct eap_sim_pseudonym *pseudonyms;$/;"	m	struct:eap_sim_db_data	typeref:struct:eap_sim_db_data::eap_sim_pseudonym	file:	access:public
psk	src/ap/ap_config.h	/^	u8 psk[PMK_LEN];$/;"	m	struct:hostapd_wpa_psk	access:public
psk	src/drivers/driver.h	/^	const u8 *psk;$/;"	m	struct:wpa_driver_associate_params	access:public
psk	src/eap_peer/eap_gpsk.c	/^	u8 *psk;$/;"	m	struct:eap_gpsk_data	file:	access:public
psk	src/wps/wps.h	/^	u8 psk[32];$/;"	m	struct:wps_context	access:public
psk1	src/wps/wps_i.h	/^	u8 psk1[WPS_PSK_LEN];$/;"	m	struct:wps_data	access:public
psk2	src/wps/wps_i.h	/^	u8 psk2[WPS_PSK_LEN];$/;"	m	struct:wps_data	access:public
psk_len	src/eap_peer/eap_gpsk.c	/^	size_t psk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
psk_set	src/wps/wps.h	/^	int psk_set;$/;"	m	struct:wps_context	access:public
ptk	src/rsn_supp/wpa_i.h	/^	struct wpa_ptk ptk, tptk;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_ptk	access:public
ptk_set	src/rsn_supp/wpa_i.h	/^	int ptk_set, tptk_set;$/;"	m	struct:wpa_sm	access:public
ptr	src/drivers/driver_hostap.h	/^		caddr_t ptr; \/* pointer to data in user space *\/$/;"	m	struct:prism2_download_param::prism2_download_area	access:public
pubkey_hash	src/wps/wps.h	/^	struct wpabuf *pubkey_hash;$/;"	m	struct:oob_conf_data	typeref:struct:oob_conf_data::wpabuf	access:public
public_action	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED public_action;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56	access:public
public_action_cb	src/ap/hostapd.h	/^	void (*public_action_cb)(void *ctx, const u8 *buf, size_t len,$/;"	m	struct:hostapd_data	access:public
public_action_cb_ctx	src/ap/hostapd.h	/^	void *public_action_cb_ctx;$/;"	m	struct:hostapd_data	access:public
public_key	src/tls/x509v3.h	/^	u8 *public_key;$/;"	m	struct:x509_certificate	access:public
public_key	src/wps/wps_i.h	/^	const u8 *public_key;$/;"	m	struct:wps_parse_attr	access:public
public_key_alg	src/tls/x509v3.h	/^	struct x509_algorithm_identifier public_key_alg;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_algorithm_identifier	access:public
public_key_id	src/eap_common/eap_pax_common.h	/^	u8 public_key_id;$/;"	m	struct:eap_pax_hdr	access:public
public_key_id	src/eap_peer/eap_pax.c	/^	u8 mac_id, dh_group_id, public_key_id;$/;"	m	struct:eap_pax_data	file:	access:public
public_key_len	src/tls/x509v3.h	/^	size_t public_key_len;$/;"	m	struct:x509_certificate	access:public
public_key_len	src/wps/wps_i.h	/^	size_t public_key_len;$/;"	m	struct:wps_parse_attr	access:public
pull_buf	src/crypto/tls_gnutls.c	/^	struct wpabuf *pull_buf;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::wpabuf	file:	access:public
pull_buf	src/crypto/tls_nss.c	/^	u8 *push_buf, *pull_buf, *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
pull_buf_len	src/crypto/tls_nss.c	/^	size_t push_buf_len, pull_buf_len;$/;"	m	struct:tls_connection	file:	access:public
pull_buf_offset	src/crypto/tls_gnutls.c	/^	const u8 *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
pull_buf_offset	src/crypto/tls_nss.c	/^	u8 *push_buf, *pull_buf, *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
push_buf	src/crypto/tls_gnutls.c	/^	struct wpabuf *push_buf;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::wpabuf	file:	access:public
push_buf	src/crypto/tls_nss.c	/^	u8 *push_buf, *pull_buf, *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
push_buf_len	src/crypto/tls_nss.c	/^	size_t push_buf_len, pull_buf_len;$/;"	m	struct:tls_connection	file:	access:public
pwd_auth_fail	src/wps/wps.h	/^	} pwd_auth_fail;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_pwd_auth_fail	access:public
pwd_group	src/ap/ap_config.h	/^	u16 pwd_group;$/;"	m	struct:hostapd_bss_config	access:public
pwd_group	src/eap_server/eap.h	/^	u16 pwd_group;$/;"	m	struct:eap_config	access:public
pwd_group	src/eap_server/eap_i.h	/^	u16 pwd_group;$/;"	m	struct:eap_sm	access:public
pwd_group	src/eapol_auth/eapol_auth_sm.h	/^	u16 pwd_group;$/;"	m	struct:eapol_auth_config	access:public
pwd_group	src/radius/radius_server.c	/^	u16 pwd_group;$/;"	m	struct:radius_server_data	file:	access:public
pwd_group	src/radius/radius_server.h	/^	u16 pwd_group;$/;"	m	struct:radius_server_conf	access:public
pwe	src/eap_common/eap_pwd_common.h	/^	EC_POINT *pwe;$/;"	m	struct:group_definition_	access:public
q	src/tls/rsa.c	/^	struct bignum *q; \/* prime q (factor of n) *\/$/;"	m	struct:crypto_rsa_key	typeref:struct:crypto_rsa_key::bignum	file:	access:public
qos_info	src/common/ieee802_11_defs.h	/^	u8 qos_info; \/* AP\/STA specific QoS info *\/$/;"	m	struct:wmm_information_element	access:public
qos_info	src/common/ieee802_11_defs.h	/^	u8 qos_info; \/* AP\/STA specific QoS info *\/$/;"	m	struct:wmm_parameter_element	access:public
qual	src/drivers/driver.h	/^	int qual;$/;"	m	struct:wpa_scan_res	access:public
qual	src/drivers/wireless_copy.h	/^	__u8		qual;		\/* link quality (%retries, SNR,$/;"	m	struct:iw_quality	access:public
qual	src/drivers/wireless_copy.h	/^	struct iw_quality	qual;		\/* Quality of the link *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality	access:public
qual	src/drivers/wireless_copy.h	/^	struct iw_quality	qual;		\/* Quality of the link$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_quality	access:public
qual	src/drivers/wireless_copy.h	/^	struct iw_quality qual;		\/* Quality part of statistics *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_quality	access:public
quietPeriod	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int quietPeriod; \/* default 60; 0..65535 静默时间,应该是认证失败后到重新认证的间隔，用于设置定时器quietWhile*\/$/;"	m	struct:eapol_state_machine	access:public
quietWhile	src/eapol_auth/eapol_auth_sm_i.h	/^	int quietWhile; \/\/ 用于AUTH_PAE SM，此时间内认证者不会接受任何请求者，超时值为quietPeriod(也就是AUTH_PAE_DEFAULT_quietPeriod)$/;"	m	struct:eapol_state_machine	access:public
r	src/eap_peer/eap_pax.c	/^		} r;$/;"	m	union:eap_pax_data::__anon170	typeref:struct:eap_pax_data::__anon170::__anon171	file:	access:public
r	src/eap_server/eap_server_pax.c	/^		} r;$/;"	m	union:eap_pax_data::__anon144	typeref:struct:eap_pax_data::__anon144::__anon145	file:	access:public
r0_key_holder	src/ap/wpa_auth.h	/^	u8 r0_key_holder[FT_R0KH_ID_MAX_LEN];$/;"	m	struct:wpa_auth_config	access:public
r0_key_holder_len	src/ap/wpa_auth.h	/^	size_t r0_key_holder_len;$/;"	m	struct:wpa_auth_config	access:public
r0_key_lifetime	src/ap/ap_config.h	/^	u32 r0_key_lifetime;$/;"	m	struct:hostapd_bss_config	access:public
r0_key_lifetime	src/ap/wpa_auth.h	/^	u32 r0_key_lifetime;$/;"	m	struct:wpa_auth_config	access:public
r0kh_id	src/ap/wpa_auth_i.h	/^	u8 r0kh_id[FT_R0KH_ID_MAX_LEN]; \/* R0KH-ID from FT Auth Request *\/$/;"	m	struct:wpa_state_machine	access:public
r0kh_id	src/common/wpa_common.h	/^	const u8 *r0kh_id;$/;"	m	struct:wpa_ft_ies	access:public
r0kh_id	src/rsn_supp/wpa_i.h	/^	u8 r0kh_id[FT_R0KH_ID_MAX_LEN];$/;"	m	struct:wpa_sm	access:public
r0kh_id_len	src/ap/wpa_auth_i.h	/^	size_t r0kh_id_len;$/;"	m	struct:wpa_state_machine	access:public
r0kh_id_len	src/common/wpa_common.h	/^	size_t r0kh_id_len;$/;"	m	struct:wpa_ft_ies	access:public
r0kh_id_len	src/rsn_supp/wpa_i.h	/^	size_t r0kh_id_len;$/;"	m	struct:wpa_sm	access:public
r0kh_list	src/ap/ap_config.h	/^	struct ft_remote_r0kh *r0kh_list;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::ft_remote_r0kh	access:public
r0kh_list	src/ap/wpa_auth.h	/^	struct ft_remote_r0kh *r0kh_list;$/;"	m	struct:wpa_auth_config	typeref:struct:wpa_auth_config::ft_remote_r0kh	access:public
r1_key_holder	src/ap/ap_config.h	/^	u8 r1_key_holder[FT_R1KH_ID_LEN];$/;"	m	struct:hostapd_bss_config	access:public
r1_key_holder	src/ap/wpa_auth.h	/^	u8 r1_key_holder[FT_R1KH_ID_LEN];$/;"	m	struct:wpa_auth_config	access:public
r1kh_id	src/ap/wpa_auth.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN]; \/* copied from pull *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
r1kh_id	src/ap/wpa_auth.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
r1kh_id	src/ap/wpa_auth.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
r1kh_id	src/common/wpa_common.h	/^	const u8 *r1kh_id;$/;"	m	struct:wpa_ft_ies	access:public
r1kh_id	src/rsn_supp/wpa_i.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN];$/;"	m	struct:wpa_sm	access:public
r1kh_list	src/ap/ap_config.h	/^	struct ft_remote_r1kh *r1kh_list;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::ft_remote_r1kh	access:public
r1kh_list	src/ap/wpa_auth.h	/^	struct ft_remote_r1kh *r1kh_list;$/;"	m	struct:wpa_auth_config	typeref:struct:wpa_auth_config::ft_remote_r1kh	access:public
r_dh_private	src/eap_peer/ikev2.h	/^	struct wpabuf *r_dh_private;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
r_dh_public	src/eap_server/ikev2.h	/^	struct wpabuf *r_dh_public;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
r_hash1	src/wps/wps_i.h	/^	const u8 *r_hash1; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
r_hash2	src/wps/wps_i.h	/^	const u8 *r_hash2; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
r_nonce	src/eap_peer/ikev2.h	/^	u8 r_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_responder_data	access:public
r_nonce	src/eap_server/ikev2.h	/^	u8 r_nonce[IKEV2_NONCE_MAX_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
r_nonce_len	src/eap_peer/ikev2.h	/^	size_t r_nonce_len;$/;"	m	struct:ikev2_responder_data	access:public
r_nonce_len	src/eap_server/ikev2.h	/^	size_t r_nonce_len;$/;"	m	struct:ikev2_initiator_data	access:public
r_sign_msg	src/eap_peer/ikev2.h	/^	struct wpabuf *r_sign_msg;$/;"	m	struct:ikev2_responder_data	typeref:struct:ikev2_responder_data::wpabuf	access:public
r_sign_msg	src/eap_server/ikev2.h	/^	struct wpabuf *r_sign_msg;$/;"	m	struct:ikev2_initiator_data	typeref:struct:ikev2_initiator_data::wpabuf	access:public
r_snonce1	src/wps/wps_i.h	/^	const u8 *r_snonce1; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
r_snonce2	src/wps/wps_i.h	/^	const u8 *r_snonce2; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
r_spi	src/eap_common/ikev2_common.h	/^	u8 r_spi[IKEV2_SPI_LEN]; \/* IKE_SA Responder's SPI *\/$/;"	m	struct:ikev2_hdr	access:public
r_spi	src/eap_peer/ikev2.h	/^	u8 r_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_responder_data	access:public
r_spi	src/eap_server/ikev2.h	/^	u8 r_spi[IKEV2_SPI_LEN];$/;"	m	struct:ikev2_initiator_data	access:public
r_time_flags	src/drivers/wireless_copy.h	/^	__u16		r_time_flags;	\/* How to decode max\/min retry life *\/$/;"	m	struct:iw_range	access:public
radio_enabled	src/drivers/driver_ndis.h	/^	int radio_enabled;$/;"	m	struct:wpa_driver_ndis_data	access:public
radius	src/ap/ap_config.h	/^	struct hostapd_radius_servers *radius;  \/\/ radius客户端配置的radius服务器信息$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_radius_servers	access:public
radius	src/ap/hostapd.h	/^	struct radius_client_data *radius;      \/\/ radius客户端控制块$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::radius_client_data	access:public
radius_attr_data	src/radius/radius.h	/^struct radius_attr_data {$/;"	s
radius_attr_data::data	src/radius/radius.h	/^	u8 *data;$/;"	m	struct:radius_attr_data	access:public
radius_attr_data::len	src/radius/radius.h	/^	size_t len;$/;"	m	struct:radius_attr_data	access:public
radius_attr_hdr	src/radius/radius.h	/^struct radius_attr_hdr {$/;"	s
radius_attr_hdr::length	src/radius/radius.h	/^	u8 length; \/* including this header *\/$/;"	m	struct:radius_attr_hdr	access:public
radius_attr_hdr::type	src/radius/radius.h	/^	u8 type;$/;"	m	struct:radius_attr_hdr	access:public
radius_attr_type	src/radius/radius.c	/^struct radius_attr_type {$/;"	s	file:
radius_attr_type::RADIUS_ATTR_HEXDUMP	src/radius/radius.c	/^		RADIUS_ATTR_HEXDUMP, RADIUS_ATTR_INT32, RADIUS_ATTR_IPV6$/;"	e	enum:radius_attr_type::__anon204	file:
radius_attr_type::RADIUS_ATTR_INT32	src/radius/radius.c	/^		RADIUS_ATTR_HEXDUMP, RADIUS_ATTR_INT32, RADIUS_ATTR_IPV6$/;"	e	enum:radius_attr_type::__anon204	file:
radius_attr_type::RADIUS_ATTR_IP	src/radius/radius.c	/^		RADIUS_ATTR_UNDIST, RADIUS_ATTR_TEXT, RADIUS_ATTR_IP,$/;"	e	enum:radius_attr_type::__anon204	file:
radius_attr_type::RADIUS_ATTR_IPV6	src/radius/radius.c	/^		RADIUS_ATTR_HEXDUMP, RADIUS_ATTR_INT32, RADIUS_ATTR_IPV6$/;"	e	enum:radius_attr_type::__anon204	file:
radius_attr_type::RADIUS_ATTR_TEXT	src/radius/radius.c	/^		RADIUS_ATTR_UNDIST, RADIUS_ATTR_TEXT, RADIUS_ATTR_IP,$/;"	e	enum:radius_attr_type::__anon204	file:
radius_attr_type::RADIUS_ATTR_UNDIST	src/radius/radius.c	/^		RADIUS_ATTR_UNDIST, RADIUS_ATTR_TEXT, RADIUS_ATTR_IP,$/;"	e	enum:radius_attr_type::__anon204	file:
radius_attr_type::data_type	src/radius/radius.c	/^	} data_type;$/;"	m	struct:radius_attr_type	typeref:enum:radius_attr_type::__anon204	file:	access:public
radius_attr_type::name	src/radius/radius.c	/^	char *name;$/;"	m	struct:radius_attr_type	file:	access:public
radius_attr_type::type	src/radius/radius.c	/^	u8 type;$/;"	m	struct:radius_attr_type	file:	access:public
radius_attr_vendor	src/radius/radius.h	/^struct radius_attr_vendor {$/;"	s
radius_attr_vendor::vendor_length	src/radius/radius.h	/^	u8 vendor_length;$/;"	m	struct:radius_attr_vendor	access:public
radius_attr_vendor::vendor_type	src/radius/radius.h	/^	u8 vendor_type;$/;"	m	struct:radius_attr_vendor	access:public
radius_attrs	src/radius/radius.c	/^static struct radius_attr_type radius_attrs[] =$/;"	v	typeref:struct:radius_attr_type	file:
radius_change_server	src/radius/radius_client.c	/^radius_change_server(struct radius_client_data *radius,$/;"	f	file:	signature:(struct radius_client_data *radius, struct hostapd_radius_server *nserv, struct hostapd_radius_server *oserv, int sock, int sock6, int auth)
radius_change_server	src/radius/radius_client.c	/^radius_change_server(struct radius_client_data *radius,$/;"	p	file:	signature:(struct radius_client_data *radius, struct hostapd_radius_server *nserv, struct hostapd_radius_server *oserv, int sock, int sock6, int auth)
radius_class	src/ap/pmksa_cache_auth.h	/^	struct radius_class_data radius_class;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::radius_class_data	access:public
radius_class	src/eapol_auth/eapol_auth_sm_i.h	/^	struct radius_class_data radius_class;$/;"	m	struct:eapol_state_machine	typeref:struct:eapol_state_machine::radius_class_data	access:public
radius_class_data	src/radius/radius.h	/^struct radius_class_data {$/;"	s
radius_class_data::attr	src/radius/radius.h	/^	struct radius_attr_data *attr;$/;"	m	struct:radius_class_data	typeref:struct:radius_class_data::radius_attr_data	access:public
radius_class_data::count	src/radius/radius.h	/^	size_t count;$/;"	m	struct:radius_class_data	access:public
radius_client	src/radius/radius_server.c	/^struct radius_client {$/;"	s	file:
radius_client::addr	src/radius/radius_server.c	/^	struct in_addr addr;$/;"	m	struct:radius_client	typeref:struct:radius_client::in_addr	file:	access:public
radius_client::addr6	src/radius/radius_server.c	/^	struct in6_addr addr6;$/;"	m	struct:radius_client	typeref:struct:radius_client::in6_addr	file:	access:public
radius_client::counters	src/radius/radius_server.c	/^	struct radius_server_counters counters;$/;"	m	struct:radius_client	typeref:struct:radius_client::radius_server_counters	file:	access:public
radius_client::mask	src/radius/radius_server.c	/^	struct in_addr mask;$/;"	m	struct:radius_client	typeref:struct:radius_client::in_addr	file:	access:public
radius_client::mask6	src/radius/radius_server.c	/^	struct in6_addr mask6;$/;"	m	struct:radius_client	typeref:struct:radius_client::in6_addr	file:	access:public
radius_client::next	src/radius/radius_server.c	/^	struct radius_client *next;$/;"	m	struct:radius_client	typeref:struct:radius_client::radius_client	file:	access:public
radius_client::sessions	src/radius/radius_server.c	/^	struct radius_session *sessions;$/;"	m	struct:radius_client	typeref:struct:radius_client::radius_session	file:	access:public
radius_client::shared_secret	src/radius/radius_server.c	/^	char *shared_secret;$/;"	m	struct:radius_client	file:	access:public
radius_client::shared_secret_len	src/radius/radius_server.c	/^	int shared_secret_len;$/;"	m	struct:radius_client	file:	access:public
radius_client_data	src/radius/radius_client.c	/^struct radius_client_data {$/;"	s	file:
radius_client_data::acct_handlers	src/radius/radius_client.c	/^	struct radius_rx_handler *acct_handlers;$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::radius_rx_handler	file:	access:public
radius_client_data::acct_serv_sock	src/radius/radius_client.c	/^	int acct_serv_sock; \/\/ radius计费服务用的IPV4 socket$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::acct_serv_sock6	src/radius/radius_client.c	/^	int acct_serv_sock6;    \/\/ radius计费服务用的IPV6 socket$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::acct_sock	src/radius/radius_client.c	/^	int acct_sock;  \/\/ 当前选用的radius计费服务socket$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::auth_handlers	src/radius/radius_client.c	/^	struct radius_rx_handler *auth_handlers;$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::radius_rx_handler	file:	access:public
radius_client_data::auth_serv_sock	src/radius/radius_client.c	/^	int auth_serv_sock; \/\/ radius认证服务用的IPV4 socket$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::auth_serv_sock6	src/radius/radius_client.c	/^	int auth_serv_sock6;    \/\/ radius认证服务用的IPV6 socket$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::auth_sock	src/radius/radius_client.c	/^	int auth_sock;  \/\/ 当前选用的radius认证服务socket$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::conf	src/radius/radius_client.c	/^	struct hostapd_radius_servers *conf;    \/\/ radius客户端配置信息$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::hostapd_radius_servers	file:	access:public
radius_client_data::ctx	src/radius/radius_client.c	/^	void *ctx;  \/\/ 指向所属的bss，也就是hostapd_data$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::msgs	src/radius/radius_client.c	/^	struct radius_msg_list *msgs;$/;"	m	struct:radius_client_data	typeref:struct:radius_client_data::radius_msg_list	file:	access:public
radius_client_data::next_radius_identifier	src/radius/radius_client.c	/^	u8 next_radius_identifier;$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::num_acct_handlers	src/radius/radius_client.c	/^	size_t num_acct_handlers;$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::num_auth_handlers	src/radius/radius_client.c	/^	size_t num_auth_handlers;$/;"	m	struct:radius_client_data	file:	access:public
radius_client_data::num_msgs	src/radius/radius_client.c	/^	size_t num_msgs;$/;"	m	struct:radius_client_data	file:	access:public
radius_client_deinit	src/radius/radius_client.c	/^void radius_client_deinit(struct radius_client_data *radius)$/;"	f	signature:(struct radius_client_data *radius)
radius_client_deinit	src/radius/radius_client.h	/^void radius_client_deinit(struct radius_client_data *radius);$/;"	p	signature:(struct radius_client_data *radius)
radius_client_disable_pmtu_discovery	src/radius/radius_client.c	/^static int radius_client_disable_pmtu_discovery(int s)$/;"	f	file:	signature:(int s)
radius_client_dump_acct_server	src/radius/radius_client.c	/^static int radius_client_dump_acct_server(char *buf, size_t buflen,$/;"	f	file:	signature:(char *buf, size_t buflen, struct hostapd_radius_server *serv, struct radius_client_data *cli)
radius_client_dump_auth_server	src/radius/radius_client.c	/^static int radius_client_dump_auth_server(char *buf, size_t buflen,$/;"	f	file:	signature:(char *buf, size_t buflen, struct hostapd_radius_server *serv, struct radius_client_data *cli)
radius_client_flush	src/radius/radius_client.c	/^void radius_client_flush(struct radius_client_data *radius, int only_auth)$/;"	f	signature:(struct radius_client_data *radius, int only_auth)
radius_client_flush	src/radius/radius_client.h	/^void radius_client_flush(struct radius_client_data *radius, int only_auth);$/;"	p	signature:(struct radius_client_data *radius, int only_auth)
radius_client_flush_auth	src/radius/radius_client.c	/^void radius_client_flush_auth(struct radius_client_data *radius,$/;"	f	signature:(struct radius_client_data *radius, const u8 *addr)
radius_client_flush_auth	src/radius/radius_client.h	/^void radius_client_flush_auth(struct radius_client_data *radius,$/;"	p	signature:(struct radius_client_data *radius, const u8 *addr)
radius_client_get_id	src/radius/radius_client.c	/^u8 radius_client_get_id(struct radius_client_data *radius)$/;"	f	signature:(struct radius_client_data *radius)
radius_client_get_id	src/radius/radius_client.h	/^u8 radius_client_get_id(struct radius_client_data *radius);$/;"	p	signature:(struct radius_client_data *radius)
radius_client_get_mib	src/radius/radius_client.c	/^int radius_client_get_mib(struct radius_client_data *radius, char *buf,$/;"	f	signature:(struct radius_client_data *radius, char *buf, size_t buflen)
radius_client_get_mib	src/radius/radius_client.h	/^int radius_client_get_mib(struct radius_client_data *radius, char *buf,$/;"	p	signature:(struct radius_client_data *radius, char *buf, size_t buflen)
radius_client_handle_send_error	src/radius/radius_client.c	/^static void radius_client_handle_send_error(struct radius_client_data *radius,$/;"	f	file:	signature:(struct radius_client_data *radius, int s, RadiusType msg_type)
radius_client_init	src/radius/radius_client.c	/^radius_client_init(void *ctx, struct hostapd_radius_servers *conf)$/;"	f	signature:(void *ctx, struct hostapd_radius_servers *conf)
radius_client_init	src/radius/radius_client.h	/^radius_client_init(void *ctx, struct hostapd_radius_servers *conf);$/;"	p	signature:(void *ctx, struct hostapd_radius_servers *conf)
radius_client_init_acct	src/radius/radius_client.c	/^static int radius_client_init_acct(struct radius_client_data *radius)$/;"	f	file:	signature:(struct radius_client_data *radius)
radius_client_init_acct	src/radius/radius_client.c	/^static int radius_client_init_acct(struct radius_client_data *radius);$/;"	p	file:	signature:(struct radius_client_data *radius)
radius_client_init_auth	src/radius/radius_client.c	/^static int radius_client_init_auth(struct radius_client_data *radius)$/;"	f	file:	signature:(struct radius_client_data *radius)
radius_client_init_auth	src/radius/radius_client.c	/^static int radius_client_init_auth(struct radius_client_data *radius);$/;"	p	file:	signature:(struct radius_client_data *radius)
radius_client_list_add	src/radius/radius_client.c	/^static void radius_client_list_add(struct radius_client_data *radius,$/;"	f	file:	signature:(struct radius_client_data *radius, struct radius_msg *msg, RadiusType msg_type, const u8 *shared_secret, size_t shared_secret_len, const u8 *addr)
radius_client_list_del	src/radius/radius_client.c	/^static void radius_client_list_del(struct radius_client_data *radius,$/;"	f	file:	signature:(struct radius_client_data *radius, RadiusType msg_type, const u8 *addr)
radius_client_msg_free	src/radius/radius_client.c	/^static void radius_client_msg_free(struct radius_msg_list *req)$/;"	f	file:	signature:(struct radius_msg_list *req)
radius_client_receive	src/radius/radius_client.c	/^static void radius_client_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
radius_client_reconfig	src/radius/radius_client.c	/^void radius_client_reconfig(struct radius_client_data *radius,$/;"	f	signature:(struct radius_client_data *radius, struct hostapd_radius_servers *conf)
radius_client_reconfig	src/radius/radius_client.h	/^void radius_client_reconfig(struct radius_client_data *radius,$/;"	p	signature:(struct radius_client_data *radius, struct hostapd_radius_servers *conf)
radius_client_register	src/radius/radius_client.c	/^int radius_client_register(struct radius_client_data *radius,$/;"	f	signature:(struct radius_client_data *radius, RadiusType msg_type, RadiusRxResult (*handler)(struct radius_msg *msg, struct radius_msg *req, const u8 *shared_secret, size_t shared_secret_len, void *data), void *data)
radius_client_register	src/radius/radius_client.h	/^int radius_client_register(struct radius_client_data *radius,$/;"	p	signature:(struct radius_client_data *radius, RadiusType msg_type, RadiusRxResult (*handler) (struct radius_msg *msg, struct radius_msg *req, const u8 *shared_secret, size_t shared_secret_len, void *data), void *data)
radius_client_retransmit	src/radius/radius_client.c	/^static int radius_client_retransmit(struct radius_client_data *radius,$/;"	f	file:	signature:(struct radius_client_data *radius, struct radius_msg_list *entry, os_time_t now)
radius_client_send	src/radius/radius_client.c	/^int radius_client_send(struct radius_client_data *radius,$/;"	f	signature:(struct radius_client_data *radius, struct radius_msg *msg, RadiusType msg_type, const u8 *addr)
radius_client_send	src/radius/radius_client.h	/^int radius_client_send(struct radius_client_data *radius,$/;"	p	signature:(struct radius_client_data *radius, struct radius_msg *msg, RadiusType msg_type, const u8 *addr)
radius_client_timer	src/radius/radius_client.c	/^static void radius_client_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
radius_client_update_acct_msgs	src/radius/radius_client.c	/^static void radius_client_update_acct_msgs(struct radius_client_data *radius,$/;"	f	file:	signature:(struct radius_client_data *radius, const u8 *shared_secret, size_t shared_secret_len)
radius_client_update_timeout	src/radius/radius_client.c	/^static void radius_client_update_timeout(struct radius_client_data *radius)$/;"	f	file:	signature:(struct radius_client_data *radius)
radius_code_string	src/radius/radius.c	/^static const char *radius_code_string(u8 code)$/;"	f	file:	signature:(u8 code)
radius_copy_class	src/radius/radius.c	/^int radius_copy_class(struct radius_class_data *dst,$/;"	f	signature:(struct radius_class_data *dst, const struct radius_class_data *src)
radius_copy_class	src/radius/radius.h	/^int radius_copy_class(struct radius_class_data *dst,$/;"	p	signature:(struct radius_class_data *dst, const struct radius_class_data *src)
radius_free_class	src/radius/radius.c	/^void radius_free_class(struct radius_class_data *c)$/;"	f	signature:(struct radius_class_data *c)
radius_free_class	src/radius/radius.h	/^void radius_free_class(struct radius_class_data *c);$/;"	p	signature:(struct radius_class_data *c)
radius_get_attr_hdr	src/radius/radius.c	/^radius_get_attr_hdr(struct radius_msg *msg, int idx)$/;"	f	file:	signature:(struct radius_msg *msg, int idx)
radius_get_attr_type	src/radius/radius.c	/^static struct radius_attr_type *radius_get_attr_type(u8 type)$/;"	f	file:	signature:(u8 type)
radius_hdr	src/radius/radius.h	/^struct radius_hdr {$/;"	s
radius_hdr::authenticator	src/radius/radius.h	/^	u8 authenticator[16];   \/\/ 16字节验证字域。在请求报文中表示随机码;在响应报文中表示经过MD5加密后的验证码,用于鉴别响应报文的合法性$/;"	m	struct:radius_hdr	access:public
radius_hdr::code	src/radius/radius.h	/^	u8 code;        \/\/ radius包类型$/;"	m	struct:radius_hdr	access:public
radius_hdr::identifier	src/radius/radius.h	/^	u8 identifier;  \/\/ 包标识，用于匹配请求包和响应包$/;"	m	struct:radius_hdr	access:public
radius_hdr::length	src/radius/radius.h	/^	u16 length; \/* including this header *\/ \/\/ 包长度，最小20字节，最大4096字节$/;"	m	struct:radius_hdr	access:public
radius_id	src/ap/ieee802_11_auth.c	/^	u8 radius_id;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
radius_identifier	src/eapol_auth/eapol_auth_sm_i.h	/^	int radius_identifier;              \/\/ 记录了radius客户端最近发送的radius-request报文的id字段(实际是0～255)$/;"	m	struct:eapol_state_machine	access:public
radius_mode_txt	src/ap/ieee802_1x.c	/^const char *radius_mode_txt(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
radius_mode_txt	src/ap/ieee802_1x.h	/^const char *radius_mode_txt(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
radius_ms_mppe_keys	src/radius/radius.h	/^struct radius_ms_mppe_keys {$/;"	s
radius_ms_mppe_keys::recv	src/radius/radius.h	/^	u8 *recv;$/;"	m	struct:radius_ms_mppe_keys	access:public
radius_ms_mppe_keys::recv_len	src/radius/radius.h	/^	size_t recv_len;$/;"	m	struct:radius_ms_mppe_keys	access:public
radius_ms_mppe_keys::send	src/radius/radius.h	/^	u8 *send;$/;"	m	struct:radius_ms_mppe_keys	access:public
radius_ms_mppe_keys::send_len	src/radius/radius.h	/^	size_t send_len;$/;"	m	struct:radius_ms_mppe_keys	access:public
radius_msg	src/radius/radius.c	/^struct radius_msg {$/;"	s	file:
radius_msg::attr_pos	src/radius/radius.c	/^	size_t *attr_pos;       \/\/ 记录每条属性距离属性头偏移量的数组(注意：这个数组由初始化时设置了固定长度，使用时不一定装满的)$/;"	m	struct:radius_msg	file:	access:public
radius_msg::attr_size	src/radius/radius.c	/^	size_t attr_size;       \/\/ 记录上面这个数组的元素个数,一般就是RADIUS_DEFAULT_ATTR_COUNT$/;"	m	struct:radius_msg	file:	access:public
radius_msg::attr_used	src/radius/radius.c	/^	size_t attr_used;   \/\/ 此radius消息中属性项的数量$/;"	m	struct:radius_msg	file:	access:public
radius_msg::buf	src/radius/radius.c	/^	struct wpabuf *buf;     \/\/ 指向radius消息数据管理块$/;"	m	struct:radius_msg	typeref:struct:radius_msg::wpabuf	file:	access:public
radius_msg::hdr	src/radius/radius.c	/^	struct radius_hdr *hdr; \/\/ 指向radius帧头$/;"	m	struct:radius_msg	typeref:struct:radius_msg::radius_hdr	file:	access:public
radius_msg_add_attr	src/radius/radius.c	/^struct radius_attr_hdr *radius_msg_add_attr(struct radius_msg *msg, u8 type,$/;"	f	signature:(struct radius_msg *msg, u8 type, const u8 *data, size_t data_len)
radius_msg_add_attr	src/radius/radius.h	/^struct radius_attr_hdr * radius_msg_add_attr(struct radius_msg *msg, u8 type,$/;"	p	signature:(struct radius_msg *msg, u8 type, const u8 *data, size_t data_len)
radius_msg_add_attr_int32	src/radius/radius.h	/^static inline int radius_msg_add_attr_int32(struct radius_msg *msg, u8 type,$/;"	f	signature:(struct radius_msg *msg, u8 type, u32 value)
radius_msg_add_attr_to_array	src/radius/radius.c	/^static int radius_msg_add_attr_to_array(struct radius_msg *msg,$/;"	f	file:	signature:(struct radius_msg *msg, struct radius_attr_hdr *attr)
radius_msg_add_attr_user_password	src/radius/radius.c	/^radius_msg_add_attr_user_password(struct radius_msg *msg,$/;"	f	signature:(struct radius_msg *msg, const u8 *data, size_t data_len, const u8 *secret, size_t secret_len)
radius_msg_add_attr_user_password	src/radius/radius.h	/^radius_msg_add_attr_user_password(struct radius_msg *msg,$/;"	p	signature:(struct radius_msg *msg, const u8 *data, size_t data_len, const u8 *secret, size_t secret_len)
radius_msg_add_eap	src/radius/radius.c	/^int radius_msg_add_eap(struct radius_msg *msg, const u8 *data, size_t data_len)$/;"	f	signature:(struct radius_msg *msg, const u8 *data, size_t data_len)
radius_msg_add_eap	src/radius/radius.h	/^int radius_msg_add_eap(struct radius_msg *msg, const u8 *data,$/;"	p	signature:(struct radius_msg *msg, const u8 *data, size_t data_len)
radius_msg_add_mppe_keys	src/radius/radius.c	/^int radius_msg_add_mppe_keys(struct radius_msg *msg,$/;"	f	signature:(struct radius_msg *msg, const u8 *req_authenticator, const u8 *secret, size_t secret_len, const u8 *send_key, size_t send_key_len, const u8 *recv_key, size_t recv_key_len)
radius_msg_add_mppe_keys	src/radius/radius.h	/^int radius_msg_add_mppe_keys(struct radius_msg *msg,$/;"	p	signature:(struct radius_msg *msg, const u8 *req_authenticator, const u8 *secret, size_t secret_len, const u8 *send_key, size_t send_key_len, const u8 *recv_key, size_t recv_key_len)
radius_msg_copy_attr	src/radius/radius.c	/^int radius_msg_copy_attr(struct radius_msg *dst, struct radius_msg *src,$/;"	f	signature:(struct radius_msg *dst, struct radius_msg *src, u8 type)
radius_msg_copy_attr	src/radius/radius.h	/^int radius_msg_copy_attr(struct radius_msg *dst, struct radius_msg *src,$/;"	p	signature:(struct radius_msg *dst, struct radius_msg *src, u8 type)
radius_msg_count_attr	src/radius/radius.c	/^int radius_msg_count_attr(struct radius_msg *msg, u8 type, int min_len)$/;"	f	signature:(struct radius_msg *msg, u8 type, int min_len)
radius_msg_count_attr	src/radius/radius.h	/^int radius_msg_count_attr(struct radius_msg *msg, u8 type, int min_len);$/;"	p	signature:(struct radius_msg *msg, u8 type, int min_len)
radius_msg_dump	src/radius/radius.c	/^void radius_msg_dump(struct radius_msg *msg)$/;"	f	signature:(struct radius_msg *msg)
radius_msg_dump	src/radius/radius.h	/^void radius_msg_dump(struct radius_msg *msg);$/;"	p	signature:(struct radius_msg *msg)
radius_msg_dump_attr	src/radius/radius.c	/^static void radius_msg_dump_attr(struct radius_attr_hdr *hdr)$/;"	f	file:	signature:(struct radius_attr_hdr *hdr)
radius_msg_finish	src/radius/radius.c	/^int radius_msg_finish(struct radius_msg *msg, const u8 *secret,$/;"	f	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len)
radius_msg_finish	src/radius/radius.h	/^int radius_msg_finish(struct radius_msg *msg, const u8 *secret,$/;"	p	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len)
radius_msg_finish_acct	src/radius/radius.c	/^void radius_msg_finish_acct(struct radius_msg *msg, const u8 *secret,$/;"	f	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len)
radius_msg_finish_acct	src/radius/radius.h	/^void radius_msg_finish_acct(struct radius_msg *msg, const u8 *secret,$/;"	p	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len)
radius_msg_finish_srv	src/radius/radius.c	/^int radius_msg_finish_srv(struct radius_msg *msg, const u8 *secret,$/;"	f	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len, const u8 *req_authenticator)
radius_msg_finish_srv	src/radius/radius.h	/^int radius_msg_finish_srv(struct radius_msg *msg, const u8 *secret,$/;"	p	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len, const u8 *req_authenticator)
radius_msg_free	src/radius/radius.c	/^void radius_msg_free(struct radius_msg *msg)$/;"	f	signature:(struct radius_msg *msg)
radius_msg_free	src/radius/radius.h	/^void radius_msg_free(struct radius_msg *msg);$/;"	p	signature:(struct radius_msg *msg)
radius_msg_get_attr	src/radius/radius.c	/^int radius_msg_get_attr(struct radius_msg *msg, u8 type, u8 *buf, size_t len)$/;"	f	signature:(struct radius_msg *msg, u8 type, u8 *buf, size_t len)
radius_msg_get_attr	src/radius/radius.h	/^int radius_msg_get_attr(struct radius_msg *msg, u8 type, u8 *buf, size_t len);$/;"	p	signature:(struct radius_msg *msg, u8 type, u8 *buf, size_t len)
radius_msg_get_attr_int32	src/radius/radius.h	/^static inline int radius_msg_get_attr_int32(struct radius_msg *msg, u8 type,$/;"	f	signature:(struct radius_msg *msg, u8 type, u32 *value)
radius_msg_get_attr_ptr	src/radius/radius.c	/^int radius_msg_get_attr_ptr(struct radius_msg *msg, u8 type, u8 **buf,$/;"	f	signature:(struct radius_msg *msg, u8 type, u8 **buf, size_t *len, const u8 *start)
radius_msg_get_attr_ptr	src/radius/radius.h	/^int radius_msg_get_attr_ptr(struct radius_msg *msg, u8 type, u8 **buf,$/;"	p	signature:(struct radius_msg *msg, u8 type, u8 **buf, size_t *len, const u8 *start)
radius_msg_get_buf	src/radius/radius.c	/^struct wpabuf * radius_msg_get_buf(struct radius_msg *msg)$/;"	f	signature:(struct radius_msg *msg)
radius_msg_get_buf	src/radius/radius.h	/^struct wpabuf * radius_msg_get_buf(struct radius_msg *msg);$/;"	p	signature:(struct radius_msg *msg)
radius_msg_get_cisco_keys	src/radius/radius.c	/^radius_msg_get_cisco_keys(struct radius_msg *msg, struct radius_msg *sent_msg,$/;"	f	signature:(struct radius_msg *msg, struct radius_msg *sent_msg, const u8 *secret, size_t secret_len)
radius_msg_get_cisco_keys	src/radius/radius.h	/^radius_msg_get_cisco_keys(struct radius_msg *msg, struct radius_msg *sent_msg,$/;"	p	signature:(struct radius_msg *msg, struct radius_msg *sent_msg, const u8 *secret, size_t secret_len)
radius_msg_get_eap	src/radius/radius.c	/^u8 *radius_msg_get_eap(struct radius_msg *msg, size_t *eap_len)$/;"	f	signature:(struct radius_msg *msg, size_t *eap_len)
radius_msg_get_eap	src/radius/radius.h	/^u8 *radius_msg_get_eap(struct radius_msg *msg, size_t *len);$/;"	p	signature:(struct radius_msg *msg, size_t *len)
radius_msg_get_hdr	src/radius/radius.c	/^struct radius_hdr * radius_msg_get_hdr(struct radius_msg *msg)$/;"	f	signature:(struct radius_msg *msg)
radius_msg_get_hdr	src/radius/radius.h	/^struct radius_hdr * radius_msg_get_hdr(struct radius_msg *msg);$/;"	p	signature:(struct radius_msg *msg)
radius_msg_get_ms_keys	src/radius/radius.c	/^radius_msg_get_ms_keys(struct radius_msg *msg, struct radius_msg *sent_msg,$/;"	f	signature:(struct radius_msg *msg, struct radius_msg *sent_msg, const u8 *secret, size_t secret_len)
radius_msg_get_ms_keys	src/radius/radius.h	/^radius_msg_get_ms_keys(struct radius_msg *msg, struct radius_msg *sent_msg,$/;"	p	signature:(struct radius_msg *msg, struct radius_msg *sent_msg, const u8 *secret, size_t secret_len)
radius_msg_get_vendor_attr	src/radius/radius.c	/^static u8 *radius_msg_get_vendor_attr(struct radius_msg *msg, u32 vendor,$/;"	f	file:	signature:(struct radius_msg *msg, u32 vendor, u8 subtype, size_t *alen)
radius_msg_get_vlanid	src/radius/radius.c	/^int radius_msg_get_vlanid(struct radius_msg *msg)$/;"	f	signature:(struct radius_msg *msg)
radius_msg_get_vlanid	src/radius/radius.h	/^int radius_msg_get_vlanid(struct radius_msg *msg);$/;"	p	signature:(struct radius_msg *msg)
radius_msg_initialize	src/radius/radius.c	/^static int radius_msg_initialize(struct radius_msg *msg)$/;"	f	file:	signature:(struct radius_msg *msg)
radius_msg_list	src/radius/radius_client.c	/^struct radius_msg_list {$/;"	s	file:
radius_msg_list::addr	src/radius/radius_client.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::attempts	src/radius/radius_client.c	/^	int attempts;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::first_try	src/radius/radius_client.c	/^	os_time_t first_try;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::last_attempt	src/radius/radius_client.c	/^	struct os_time last_attempt;$/;"	m	struct:radius_msg_list	typeref:struct:radius_msg_list::os_time	file:	access:public
radius_msg_list::msg	src/radius/radius_client.c	/^	struct radius_msg *msg;$/;"	m	struct:radius_msg_list	typeref:struct:radius_msg_list::radius_msg	file:	access:public
radius_msg_list::msg_type	src/radius/radius_client.c	/^	RadiusType msg_type;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::next	src/radius/radius_client.c	/^	struct radius_msg_list *next;$/;"	m	struct:radius_msg_list	typeref:struct:radius_msg_list::radius_msg_list	file:	access:public
radius_msg_list::next_try	src/radius/radius_client.c	/^	os_time_t next_try;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::next_wait	src/radius/radius_client.c	/^	int next_wait;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::shared_secret	src/radius/radius_client.c	/^	const u8 *shared_secret;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_list::shared_secret_len	src/radius/radius_client.c	/^	size_t shared_secret_len;$/;"	m	struct:radius_msg_list	file:	access:public
radius_msg_make_authenticator	src/radius/radius.c	/^void radius_msg_make_authenticator(struct radius_msg *msg,$/;"	f	signature:(struct radius_msg *msg, const u8 *data, size_t len)
radius_msg_make_authenticator	src/radius/radius.h	/^void radius_msg_make_authenticator(struct radius_msg *msg,$/;"	p	signature:(struct radius_msg *msg, const u8 *data, size_t len)
radius_msg_new	src/radius/radius.c	/^struct radius_msg * radius_msg_new(u8 code, u8 identifier)$/;"	f	signature:(u8 code, u8 identifier)
radius_msg_new	src/radius/radius.h	/^struct radius_msg * radius_msg_new(u8 code, u8 identifier);$/;"	p	signature:(u8 code, u8 identifier)
radius_msg_parse	src/radius/radius.c	/^struct radius_msg * radius_msg_parse(const u8 *data, size_t len)$/;"	f	signature:(const u8 *data, size_t len)
radius_msg_parse	src/radius/radius.h	/^struct radius_msg * radius_msg_parse(const u8 *data, size_t len);$/;"	p	signature:(const u8 *data, size_t len)
radius_msg_set_hdr	src/radius/radius.c	/^static void radius_msg_set_hdr(struct radius_msg *msg, u8 code, u8 identifier)$/;"	f	file:	signature:(struct radius_msg *msg, u8 code, u8 identifier)
radius_msg_verify	src/radius/radius.c	/^int radius_msg_verify(struct radius_msg *msg, const u8 *secret,$/;"	f	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len, struct radius_msg *sent_msg, int auth)
radius_msg_verify	src/radius/radius.h	/^int radius_msg_verify(struct radius_msg *msg, const u8 *secret,$/;"	p	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len, struct radius_msg *sent_msg, int auth)
radius_msg_verify_msg_auth	src/radius/radius.c	/^int radius_msg_verify_msg_auth(struct radius_msg *msg, const u8 *secret,$/;"	f	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len, const u8 *req_auth)
radius_msg_verify_msg_auth	src/radius/radius.h	/^int radius_msg_verify_msg_auth(struct radius_msg *msg, const u8 *secret,$/;"	p	signature:(struct radius_msg *msg, const u8 *secret, size_t secret_len, const u8 *req_auth)
radius_retry_primary_timer	src/radius/radius_client.c	/^static void radius_retry_primary_timer(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
radius_rx_handler	src/radius/radius_client.c	/^struct radius_rx_handler {$/;"	s	file:
radius_rx_handler::data	src/radius/radius_client.c	/^	void *data;$/;"	m	struct:radius_rx_handler	file:	access:public
radius_rx_handler::handler	src/radius/radius_client.c	/^	RadiusRxResult (*handler)(struct radius_msg *msg,$/;"	m	struct:radius_rx_handler	file:	access:public
radius_server_auth_port	src/ap/ap_config.h	/^	int radius_server_auth_port;$/;"	m	struct:hostapd_bss_config	access:public
radius_server_clients	src/ap/ap_config.h	/^	char *radius_server_clients;$/;"	m	struct:hostapd_bss_config	access:public
radius_server_conf	src/radius/radius_server.h	/^struct radius_server_conf {$/;"	s
radius_server_conf::auth_port	src/radius/radius_server.h	/^	int auth_port;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::client_file	src/radius/radius_server.h	/^	char *client_file;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::conf_ctx	src/radius/radius_server.h	/^	void *conf_ctx;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_fast_a_id	src/radius/radius_server.h	/^	u8 *eap_fast_a_id;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_fast_a_id_info	src/radius/radius_server.h	/^	char *eap_fast_a_id_info;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_fast_a_id_len	src/radius/radius_server.h	/^	size_t eap_fast_a_id_len;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_fast_prov	src/radius/radius_server.h	/^	int eap_fast_prov;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_req_id_text	src/radius/radius_server.h	/^	const char *eap_req_id_text;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_req_id_text_len	src/radius/radius_server.h	/^	size_t eap_req_id_text_len;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_sim_aka_result_ind	src/radius/radius_server.h	/^	int eap_sim_aka_result_ind;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::eap_sim_db_priv	src/radius/radius_server.h	/^	void *eap_sim_db_priv;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::get_eap_user	src/radius/radius_server.h	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::ipv6	src/radius/radius_server.h	/^	int ipv6;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::msg_ctx	src/radius/radius_server.h	/^	void *msg_ctx;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::pac_key_lifetime	src/radius/radius_server.h	/^	int pac_key_lifetime;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::pac_key_refresh_time	src/radius/radius_server.h	/^	int pac_key_refresh_time;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::pac_opaque_encr_key	src/radius/radius_server.h	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::pwd_group	src/radius/radius_server.h	/^	u16 pwd_group;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::ssl_ctx	src/radius/radius_server.h	/^	void *ssl_ctx;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::tnc	src/radius/radius_server.h	/^	int tnc;$/;"	m	struct:radius_server_conf	access:public
radius_server_conf::wps	src/radius/radius_server.h	/^	struct wps_context *wps;$/;"	m	struct:radius_server_conf	typeref:struct:radius_server_conf::wps_context	access:public
radius_server_counters	src/radius/radius_server.c	/^struct radius_server_counters {$/;"	s	file:
radius_server_counters::access_accepts	src/radius/radius_server.c	/^	u32 access_accepts;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::access_challenges	src/radius/radius_server.c	/^	u32 access_challenges;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::access_rejects	src/radius/radius_server.c	/^	u32 access_rejects;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::access_requests	src/radius/radius_server.c	/^	u32 access_requests;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::bad_authenticators	src/radius/radius_server.c	/^	u32 bad_authenticators;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::dup_access_requests	src/radius/radius_server.c	/^	u32 dup_access_requests;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::invalid_requests	src/radius/radius_server.c	/^	u32 invalid_requests;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::malformed_access_requests	src/radius/radius_server.c	/^	u32 malformed_access_requests;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::packets_dropped	src/radius/radius_server.c	/^	u32 packets_dropped;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_counters::unknown_types	src/radius/radius_server.c	/^	u32 unknown_types;$/;"	m	struct:radius_server_counters	file:	access:public
radius_server_data	src/radius/radius_server.c	/^struct radius_server_data {$/;"	s	file:
radius_server_data::auth_sock	src/radius/radius_server.c	/^	int auth_sock;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::clients	src/radius/radius_server.c	/^	struct radius_client *clients;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::radius_client	file:	access:public
radius_server_data::conf_ctx	src/radius/radius_server.c	/^	void *conf_ctx;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::counters	src/radius/radius_server.c	/^	struct radius_server_counters counters;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::radius_server_counters	file:	access:public
radius_server_data::eap_fast_a_id	src/radius/radius_server.c	/^	u8 *eap_fast_a_id;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_fast_a_id_info	src/radius/radius_server.c	/^	char *eap_fast_a_id_info;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_fast_a_id_len	src/radius/radius_server.c	/^	size_t eap_fast_a_id_len;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_fast_prov	src/radius/radius_server.c	/^	int eap_fast_prov;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_req_id_text	src/radius/radius_server.c	/^	char *eap_req_id_text;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_req_id_text_len	src/radius/radius_server.c	/^	size_t eap_req_id_text_len;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_sim_aka_result_ind	src/radius/radius_server.c	/^	int eap_sim_aka_result_ind;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::eap_sim_db_priv	src/radius/radius_server.c	/^	void *eap_sim_db_priv;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::get_eap_user	src/radius/radius_server.c	/^	int (*get_eap_user)(void *ctx, const u8 *identity, size_t identity_len,$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::ipv6	src/radius/radius_server.c	/^	int ipv6;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::msg_ctx	src/radius/radius_server.c	/^	void *msg_ctx;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::next_sess_id	src/radius/radius_server.c	/^	unsigned int next_sess_id;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::num_sess	src/radius/radius_server.c	/^	int num_sess;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::pac_key_lifetime	src/radius/radius_server.c	/^	int pac_key_lifetime;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::pac_key_refresh_time	src/radius/radius_server.c	/^	int pac_key_refresh_time;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::pac_opaque_encr_key	src/radius/radius_server.c	/^	u8 *pac_opaque_encr_key;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::pwd_group	src/radius/radius_server.c	/^	u16 pwd_group;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::ssl_ctx	src/radius/radius_server.c	/^	void *ssl_ctx;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::start_time	src/radius/radius_server.c	/^	struct os_time start_time;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::os_time	file:	access:public
radius_server_data::tnc	src/radius/radius_server.c	/^	int tnc;$/;"	m	struct:radius_server_data	file:	access:public
radius_server_data::wps	src/radius/radius_server.c	/^	struct wps_context *wps;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::wps_context	file:	access:public
radius_server_deinit	src/radius/radius_server.c	/^void radius_server_deinit(struct radius_server_data *data)$/;"	f	signature:(struct radius_server_data *data)
radius_server_deinit	src/radius/radius_server.h	/^void radius_server_deinit(struct radius_server_data *data);$/;"	p	signature:(struct radius_server_data *data)
radius_server_disable_pmtu_discovery	src/radius/radius_server.c	/^static int radius_server_disable_pmtu_discovery(int s)$/;"	f	file:	signature:(int s)
radius_server_eap_pending_cb	src/radius/radius_server.c	/^void radius_server_eap_pending_cb(struct radius_server_data *data, void *ctx)$/;"	f	signature:(struct radius_server_data *data, void *ctx)
radius_server_eap_pending_cb	src/radius/radius_server.h	/^void radius_server_eap_pending_cb(struct radius_server_data *data, void *ctx);$/;"	p	signature:(struct radius_server_data *data, void *ctx)
radius_server_eapol_cb	src/radius/radius_server.c	/^static struct eapol_callbacks radius_server_eapol_cb =$/;"	v	typeref:struct:eapol_callbacks	file:
radius_server_eapol_cb	src/radius/radius_server.c	/^static struct eapol_callbacks radius_server_eapol_cb;$/;"	v	typeref:struct:eapol_callbacks	file:
radius_server_encapsulate_eap	src/radius/radius_server.c	/^radius_server_encapsulate_eap(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_client *client, struct radius_session *sess, struct radius_msg *request)
radius_server_free_clients	src/radius/radius_server.c	/^static void radius_server_free_clients(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_client *clients)
radius_server_free_sessions	src/radius/radius_server.c	/^static void radius_server_free_sessions(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_session *sessions)
radius_server_get_client	src/radius/radius_server.c	/^radius_server_get_client(struct radius_server_data *data, struct in_addr *addr,$/;"	f	file:	signature:(struct radius_server_data *data, struct in_addr *addr, int ipv6)
radius_server_get_eap_req_id_text	src/radius/radius_server.c	/^static const char * radius_server_get_eap_req_id_text(void *ctx, size_t *len)$/;"	f	file:	signature:(void *ctx, size_t *len)
radius_server_get_eap_user	src/radius/radius_server.c	/^static int radius_server_get_eap_user(void *ctx, const u8 *identity,$/;"	f	file:	signature:(void *ctx, const u8 *identity, size_t identity_len, int phase2, struct eap_user *user)
radius_server_get_mib	src/radius/radius_server.c	/^int radius_server_get_mib(struct radius_server_data *data, char *buf,$/;"	f	signature:(struct radius_server_data *data, char *buf, size_t buflen)
radius_server_get_mib	src/radius/radius_server.h	/^int radius_server_get_mib(struct radius_server_data *data, char *buf,$/;"	p	signature:(struct radius_server_data *data, char *buf, size_t buflen)
radius_server_get_new_session	src/radius/radius_server.c	/^radius_server_get_new_session(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_client *client, struct radius_msg *msg)
radius_server_get_session	src/radius/radius_server.c	/^radius_server_get_session(struct radius_client *client, unsigned int sess_id)$/;"	f	file:	signature:(struct radius_client *client, unsigned int sess_id)
radius_server_init	src/radius/radius_server.c	/^radius_server_init(struct radius_server_conf *conf)$/;"	f	signature:(struct radius_server_conf *conf)
radius_server_init	src/radius/radius_server.h	/^radius_server_init(struct radius_server_conf *conf);$/;"	p	signature:(struct radius_server_conf *conf)
radius_server_ipv6	src/ap/ap_config.h	/^	int radius_server_ipv6;$/;"	m	struct:hostapd_bss_config	access:public
radius_server_new_session	src/radius/radius_server.c	/^radius_server_new_session(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_client *client)
radius_server_open_socket	src/radius/radius_server.c	/^static int radius_server_open_socket(int port)$/;"	f	file:	signature:(int port)
radius_server_open_socket6	src/radius/radius_server.c	/^static int radius_server_open_socket6(int port)$/;"	f	file:	signature:(int port)
radius_server_read_clients	src/radius/radius_server.c	/^radius_server_read_clients(const char *client_file, int ipv6)$/;"	f	file:	signature:(const char *client_file, int ipv6)
radius_server_receive_auth	src/radius/radius_server.c	/^static void radius_server_receive_auth(int sock, void *eloop_ctx,$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
radius_server_reject	src/radius/radius_server.c	/^static int radius_server_reject(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_client *client, struct radius_msg *request, struct sockaddr *from, socklen_t fromlen, const char *from_addr, int from_port)
radius_server_request	src/radius/radius_server.c	/^static int radius_server_request(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_msg *msg, struct sockaddr *from, socklen_t fromlen, struct radius_client *client, const char *from_addr, int from_port, struct radius_session *force_sess)
radius_server_session_free	src/radius/radius_server.c	/^static void radius_server_session_free(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_session *sess)
radius_server_session_remove	src/radius/radius_server.c	/^static void radius_server_session_remove(struct radius_server_data *data,$/;"	f	file:	signature:(struct radius_server_data *data, struct radius_session *sess)
radius_server_session_remove_timeout	src/radius/radius_server.c	/^static void radius_server_session_remove_timeout(void *eloop_ctx,$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
radius_server_session_remove_timeout	src/radius/radius_server.c	/^static void radius_server_session_remove_timeout(void *eloop_ctx,$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
radius_server_session_timeout	src/radius/radius_server.c	/^static void radius_server_session_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
radius_server_session_timeout	src/radius/radius_server.c	/^static void radius_server_session_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
radius_session	src/radius/radius_server.c	/^struct radius_session {$/;"	s	file:
radius_session::client	src/radius/radius_server.c	/^	struct radius_client *client;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_client	file:	access:public
radius_session::eap	src/radius/radius_server.c	/^	struct eap_sm *eap;$/;"	m	struct:radius_session	typeref:struct:radius_session::eap_sm	file:	access:public
radius_session::eap_if	src/radius/radius_server.c	/^	struct eap_eapol_interface *eap_if;$/;"	m	struct:radius_session	typeref:struct:radius_session::eap_eapol_interface	file:	access:public
radius_session::last_authenticator	src/radius/radius_server.c	/^	u8 last_authenticator[16];$/;"	m	struct:radius_session	file:	access:public
radius_session::last_from	src/radius/radius_server.c	/^	struct sockaddr_storage last_from;$/;"	m	struct:radius_session	typeref:struct:radius_session::sockaddr_storage	file:	access:public
radius_session::last_from_addr	src/radius/radius_server.c	/^	char *last_from_addr;$/;"	m	struct:radius_session	file:	access:public
radius_session::last_from_port	src/radius/radius_server.c	/^	int last_from_port;$/;"	m	struct:radius_session	file:	access:public
radius_session::last_fromlen	src/radius/radius_server.c	/^	socklen_t last_fromlen;$/;"	m	struct:radius_session	file:	access:public
radius_session::last_identifier	src/radius/radius_server.c	/^	u8 last_identifier;$/;"	m	struct:radius_session	file:	access:public
radius_session::last_msg	src/radius/radius_server.c	/^	struct radius_msg *last_msg;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_msg	file:	access:public
radius_session::last_reply	src/radius/radius_server.c	/^	struct radius_msg *last_reply;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_msg	file:	access:public
radius_session::next	src/radius/radius_server.c	/^	struct radius_session *next;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_session	file:	access:public
radius_session::server	src/radius/radius_server.c	/^	struct radius_server_data *server;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_server_data	file:	access:public
radius_session::sess_id	src/radius/radius_server.c	/^	unsigned int sess_id;$/;"	m	struct:radius_session	file:	access:public
radius_srv	src/ap/hostapd.h	/^	struct radius_server_data *radius_srv;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::radius_server_data	access:public
radius_sta_rate	src/ap/ieee802_1x.c	/^int radius_sta_rate(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
radius_sta_rate	src/ap/ieee802_1x.h	/^int radius_sta_rate(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
radius_tunnel_attrs	src/radius/radius.c	/^struct radius_tunnel_attrs {$/;"	s	file:
radius_tunnel_attrs::medium_type	src/radius/radius.c	/^	int medium_type; \/* Tunnel-Medium-Type *\/$/;"	m	struct:radius_tunnel_attrs	file:	access:public
radius_tunnel_attrs::tag_used	src/radius/radius.c	/^	int tag_used;$/;"	m	struct:radius_tunnel_attrs	file:	access:public
radius_tunnel_attrs::type	src/radius/radius.c	/^	int type; \/* Tunnel-Type *\/$/;"	m	struct:radius_tunnel_attrs	file:	access:public
radius_tunnel_attrs::vlanid	src/radius/radius.c	/^	int vlanid;$/;"	m	struct:radius_tunnel_attrs	file:	access:public
ralink_get_new_driver_flag	src/drivers/driver_ralink.c	/^ralink_get_new_driver_flag(struct wpa_driver_ralink_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv)
ralink_get_we_version_compiled	src/drivers/driver_ralink.c	/^ralink_get_we_version_compiled(struct wpa_driver_ralink_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv)
ralink_interface_up	src/drivers/driver_ralink.c	/^static void ralink_interface_up(struct wpa_driver_ralink_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv)
ralink_set_auth_mode	src/drivers/driver_ralink.c	/^static int ralink_set_auth_mode(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, NDIS_802_11_AUTHENTICATION_MODE mode)
ralink_set_encr_type	src/drivers/driver_ralink.c	/^static int ralink_set_encr_type(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, NDIS_802_11_WEP_STATUS encr_type)
ralink_set_oid	src/drivers/driver_ralink.c	/^static int ralink_set_oid(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, unsigned short oid, char *data, int len)
rand	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
rand	src/eap_peer/eap_aka.c	/^	u8 rand[EAP_AKA_RAND_LEN], autn[EAP_AKA_AUTN_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
rand	src/eap_peer/eap_pax.c	/^	} rand;$/;"	m	struct:eap_pax_data	typeref:union:eap_pax_data::__anon170	file:	access:public
rand	src/eap_peer/eap_sim.c	/^	u8 rand[3][GSM_RAND_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
rand	src/eap_server/eap_server_aka.c	/^	u8 rand[EAP_AKA_RAND_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
rand	src/eap_server/eap_server_pax.c	/^	} rand;$/;"	m	struct:eap_pax_data	typeref:union:eap_pax_data::__anon144	file:	access:public
rand	src/eap_server/eap_server_sim.c	/^	u8 rand[EAP_SIM_MAX_CHAL][GSM_RAND_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
rand	src/eap_server/eap_sim_db.c	/^			u8 rand[EAP_AKA_RAND_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
rand	src/eap_server/eap_sim_db.c	/^			u8 rand[EAP_SIM_MAX_CHAL][GSM_RAND_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
rand_p	src/eap_common/eap_psk_common.h	/^	u8 rand_p[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_2	access:public
rand_p	src/eap_common/eap_sake_common.h	/^	const u8 *rand_p;$/;"	m	struct:eap_sake_parse_attr	access:public
rand_p	src/eap_peer/eap_psk.c	/^	u8 rand_p[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
rand_p	src/eap_peer/eap_sake.c	/^	u8 rand_p[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
rand_p	src/eap_server/eap_server_psk.c	/^	u8 rand_p[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
rand_p	src/eap_server/eap_server_sake.c	/^	u8 rand_p[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
rand_peer	src/eap_peer/eap_gpsk.c	/^	u8 rand_peer[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
rand_peer	src/eap_server/eap_server_gpsk.c	/^	u8 rand_peer[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_1	access:public
rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_2	access:public
rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_3	access:public
rand_s	src/eap_common/eap_psk_common.h	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_hdr_4	access:public
rand_s	src/eap_common/eap_sake_common.h	/^	const u8 *rand_s;$/;"	m	struct:eap_sake_parse_attr	access:public
rand_s	src/eap_peer/eap_sake.c	/^	u8 rand_s[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
rand_s	src/eap_server/eap_server_psk.c	/^	u8 rand_s[EAP_PSK_RAND_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
rand_s	src/eap_server/eap_server_sake.c	/^	u8 rand_s[EAP_SAKE_RAND_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
rand_server	src/eap_peer/eap_gpsk.c	/^	u8 rand_server[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
rand_server	src/eap_server/eap_server_gpsk.c	/^	u8 rand_server[EAP_GPSK_RAND_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
random_add_randomness	src/crypto/random.c	/^void random_add_randomness(const void *buf, size_t len)$/;"	f	signature:(const void *buf, size_t len)
random_add_randomness	src/crypto/random.h	/^void random_add_randomness(const void *buf, size_t len);$/;"	p	signature:(const void *buf, size_t len)
random_add_randomness	src/crypto/random.h	21;"	d
random_close_fd	src/crypto/random.c	/^static void random_close_fd(void)$/;"	f	file:	signature:(void)
random_deinit	src/crypto/random.c	/^void random_deinit(void)$/;"	f	signature:(void)
random_deinit	src/crypto/random.h	/^void random_deinit(void);$/;"	p	signature:(void)
random_deinit	src/crypto/random.h	20;"	d
random_entropy_file	src/crypto/random.c	/^static char *random_entropy_file = NULL;$/;"	v	file:
random_entropy_file_read	src/crypto/random.c	/^static int random_entropy_file_read = 0;$/;"	v	file:
random_extract	src/crypto/random.c	/^static void random_extract(u8 *out)$/;"	f	file:	signature:(u8 *out)
random_fd	src/crypto/random.c	/^static int random_fd = -1;$/;"	v	file:
random_function	src/eap_common/eap_pwd_common.h	/^	u8 random_function;$/;"	m	struct:eap_pwd_id	access:public
random_get_bytes	src/crypto/random.c	/^int random_get_bytes(void *buf, size_t len)$/;"	f	signature:(void *buf, size_t len)
random_get_bytes	src/crypto/random.h	/^int random_get_bytes(void *buf, size_t len);$/;"	p	signature:(void *buf, size_t len)
random_get_bytes	src/crypto/random.h	22;"	d
random_init	src/crypto/random.c	/^void random_init(const char *entropy_file)$/;"	f	signature:(const char *entropy_file)
random_init	src/crypto/random.h	/^void random_init(const char *entropy_file);$/;"	p	signature:(const char *entropy_file)
random_init	src/crypto/random.h	19;"	d
random_mark_pool_ready	src/crypto/random.c	/^void random_mark_pool_ready(void)$/;"	f	signature:(void)
random_mark_pool_ready	src/crypto/random.h	/^void random_mark_pool_ready(void);$/;"	p	signature:(void)
random_mark_pool_ready	src/crypto/random.h	24;"	d
random_mix_pool	src/crypto/random.c	/^static void random_mix_pool(const void *buf, size_t len)$/;"	f	file:	signature:(const void *buf, size_t len)
random_pool_ready	src/crypto/random.c	/^int random_pool_ready(void)$/;"	f	signature:(void)
random_pool_ready	src/crypto/random.h	/^int random_pool_ready(void);$/;"	p	signature:(void)
random_pool_ready	src/crypto/random.h	23;"	d
random_read_entropy	src/crypto/random.c	/^static void random_read_entropy(void)$/;"	f	file:	signature:(void)
random_read_fd	src/crypto/random.c	/^static void random_read_fd(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
random_write_entropy	src/crypto/random.c	/^static void random_write_entropy(void)$/;"	f	file:	signature:(void)
random_write_entropy	src/crypto/random.c	/^static void random_write_entropy(void);$/;"	p	file:	signature:(void)
rate	src/ap/hostapd.h	/^	int rate; \/* rate in 100 kbps *\/$/;"	m	struct:hostapd_rate_data	access:public
rates	src/drivers/driver.h	/^	int *rates;$/;"	m	struct:hostapd_hw_modes	access:public
rc4	src/crypto/crypto_internal-cipher.c	/^		} rc4;$/;"	m	union:crypto_cipher::__anon186	typeref:struct:crypto_cipher::__anon186::__anon187	file:	access:public
rc4	src/crypto/crypto_libtomcrypt.c	/^		} rc4;$/;"	m	union:crypto_cipher::__anon199	typeref:struct:crypto_cipher::__anon199::__anon200	file:	access:public
rc4	src/crypto/crypto_libtomcrypt.c	/^	int rc4;$/;"	m	struct:crypto_cipher	file:	access:public
rc4_skip	src/crypto/crypto.h	/^int rc4_skip(const u8 *key, size_t keylen, size_t skip,$/;"	p	signature:(const u8 *key, size_t keylen, size_t skip, u8 *data, size_t data_len)
rc4_skip	src/crypto/crypto_nss.c	/^int rc4_skip(const u8 *key, size_t keylen, size_t skip,$/;"	f	signature:(const u8 *key, size_t keylen, size_t skip, u8 *data, size_t data_len)
rc4_skip	src/crypto/crypto_openssl.c	/^int rc4_skip(const u8 *key, size_t keylen, size_t skip,$/;"	f	signature:(const u8 *key, size_t keylen, size_t skip, u8 *data, size_t data_len)
rc4_skip	src/crypto/rc4.c	/^int rc4_skip(const u8 *key, size_t keylen, size_t skip,$/;"	f	signature:(const u8 *key, size_t keylen, size_t skip, u8 *data, size_t data_len)
rcon	src/crypto/aes-internal.c	/^const u32 rcon[] = {$/;"	v
rcons	src/crypto/aes-internal.c	/^const u8 rcons[] = {$/;"	v
rdBSSID	src/drivers/driver_ndis.c	/^	RAW_DATA rdBSSID;$/;"	m	struct:__anon97	file:	access:public
rdBSSIDList	src/drivers/driver_ndis.c	/^	RAW_DATA rdBSSIDList;$/;"	m	struct:__anon97	file:	access:public
rdCtrlData	src/drivers/driver_ndis.c	/^	RAW_DATA rdCtrlData;$/;"	m	struct:__anon97	file:	access:public
rdSSID	src/drivers/driver_ndis.c	/^	RAW_DATA rdSSID;$/;"	m	struct:__anon97	file:	access:public
rdStSSIDList	src/drivers/driver_ndis.c	/^	RAW_DATA rdStSSIDList;$/;"	m	struct:__anon97	file:	access:public
reAuthCount	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int reAuthCount;   \/\/ 状态机进入CONNECTING状态时累加，一旦超过reAuthMax则进入DISCONNECTED状态，进入DISCONNECTED\/AUTHENTICATED时清0$/;"	m	struct:eapol_state_machine	access:public
reAuthEnabled	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean reAuthEnabled;  \/\/ 重认证功能使能位(只用于认证系统)$/;"	m	struct:eapol_state_machine	access:public
reAuthMax	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int reAuthMax; \/* default 2 重认证次数*\/$/;"	m	struct:eapol_state_machine	access:public
reAuthPeriod	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int reAuthPeriod; \/* default 3600 s 重认证周期(可以由本地配置文件设置，也可以被radius服务器设置),用于设置重认证定时器reAuthWhen*\/$/;"	m	struct:eapol_state_machine	access:public
reAuthWhen	src/eapol_auth/eapol_auth_sm_i.h	/^	int reAuthWhen; \/\/ 用于REAUTH_TIMER SM ，定义了认证系统发起重认证的间隔,超时值为reAuthPeriod$/;"	m	struct:eapol_state_machine	access:public
reAuthenticate	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean reAuthenticate; \/\/ Reauthentication Timer状态机进入REAUTHENTICATE状态时设置TRUE；Authenticator PAE状态机进入CONNECTING状态时设置FALSE$/;"	m	struct:eapol_state_machine	access:public
read_alerts	src/crypto/tls_gnutls.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
read_alerts	src/crypto/tls_openssl.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
read_alerts	src/crypto/tls_schannel.c	/^	int failed, read_alerts, write_alerts;$/;"	m	struct:tls_connection	file:	access:public
read_bulk_cipher_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_cipher_algorithm_t read_bulk_cipher_algorithm;$/;"	m	struct:__anon192	file:	access:public
read_cbc	src/tls/tlsv1_record.h	/^	struct crypto_cipher *read_cbc;$/;"	m	struct:tlsv1_record_layer	typeref:struct:tlsv1_record_layer::crypto_cipher	access:public
read_cipher_suite	src/tls/tlsv1_record.h	/^	u16 read_cipher_suite;$/;"	m	struct:tlsv1_record_layer	access:public
read_compression_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_compression_method_t read_compression_algorithm;$/;"	m	struct:__anon192	file:	access:public
read_func	src/wps/wps.h	/^	struct wpabuf * (*read_func)(void *);$/;"	m	struct:oob_device_data	typeref:struct:oob_device_data::read_func	access:public
read_func	src/wps/wps.h	/^	void * (*read_func)(size_t *);$/;"	m	struct:oob_nfc_device_data	access:public
read_gsm_triplets	hostapd/hlr_auc_gw.c	/^static int read_gsm_triplets(const char *fname)$/;"	f	file:	signature:(const char *fname)
read_iv	src/tls/tlsv1_record.h	/^	u8 read_iv[TLS_MAX_IV_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
read_key	src/tls/tlsv1_record.h	/^	u8 read_key[TLS_MAX_WRITE_KEY_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
read_mac_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_mac_algorithm_t read_mac_algorithm;$/;"	m	struct:__anon192	file:	access:public
read_mac_secret	src/tls/tlsv1_record.h	/^	u8 read_mac_secret[TLS_MAX_WRITE_MAC_SECRET_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
read_milenage	hostapd/hlr_auc_gw.c	/^static int read_milenage(const char *fname)$/;"	f	file:	signature:(const char *fname)
read_nfc	src/wps/wps_nfc.c	/^static struct wpabuf * read_nfc(void *priv)$/;"	f	file:	signature:(void *priv)
read_nfc_pn531	src/wps/wps_nfc_pn531.c	/^static void * read_nfc_pn531(size_t *size)$/;"	f	file:	signature:(size_t *size)
read_pipe	src/drivers/ndis_events.c	/^	HANDLE read_pipe, write_pipe, event_avail;$/;"	m	struct:ndis_events_data	file:	access:public
read_seq_num	src/tls/tlsv1_record.h	/^	u8 read_seq_num[TLS_SEQ_NUM_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
read_sta_data	src/drivers/driver.h	/^	int (*read_sta_data)(void *priv, struct hostap_sta_driver_data *data,$/;"	m	struct:wpa_driver_ops	access:public
read_syms	src/utils/trace.c	/^static void read_syms(bfd *abfd)$/;"	f	file:	signature:(bfd *abfd)
read_ufd	src/wps/wps_ufd.c	/^static struct wpabuf * read_ufd(void *priv)$/;"	f	file:	signature:(void *priv)
reader_count	src/utils/eloop_none.c	/^	int max_sock, reader_count;$/;"	m	struct:eloop_data	file:	access:public
reader_count	src/utils/eloop_win.c	/^	size_t reader_count;$/;"	m	struct:eloop_data	file:	access:public
reader_table_changed	src/utils/eloop.c	/^	int reader_table_changed;$/;"	m	struct:eloop_data	file:	access:public
reader_table_changed	src/utils/eloop_none.c	/^	int reader_table_changed;$/;"	m	struct:eloop_data	file:	access:public
reader_table_changed	src/utils/eloop_win.c	/^	int reader_table_changed;$/;"	m	struct:eloop_data	file:	access:public
readers	src/utils/eloop.c	/^	struct eloop_sock_table readers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock_table	file:	access:public
readers	src/utils/eloop_none.c	/^	struct eloop_sock *readers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock	file:	access:public
readers	src/utils/eloop_win.c	/^	struct eloop_sock *readers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock	file:	access:public
readline_cmd_handler	src/utils/edit_readline.c	/^static void readline_cmd_handler(char *cmd)$/;"	f	file:	signature:(char *cmd)
readline_completion	src/utils/edit_readline.c	/^static char ** readline_completion(const char *text, int start, int end)$/;"	f	file:	signature:(const char *text, int start, int end)
readline_completion_func	src/utils/edit_readline.c	/^static char * readline_completion_func(const char *text, int state)$/;"	f	file:	signature:(const char *text, int state)
readline_free_completions	src/utils/edit_readline.c	/^static void readline_free_completions(void)$/;"	f	file:	signature:(void)
ready_for_read	src/l2_packet/l2_packet_ndis.c	/^	HANDLE ready_for_read;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
ready_for_tnc	src/eap_peer/eap_ttls.c	/^	int ready_for_tnc;$/;"	m	struct:eap_ttls_data	file:	access:public
realloc	src/utils/os.h	491;"	d
reason	src/crypto/tls.h	/^		enum tls_fail_reason reason;$/;"	m	struct:tls_event_data::__anon194	typeref:enum:tls_event_data::__anon194::tls_fail_reason	access:public
reason_code	src/common/ieee802_11_defs.h	/^			le16 reason_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon40	access:public
reason_code	src/common/ieee802_11_defs.h	/^			le16 reason_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon44	access:public
reason_code	src/drivers/driver.h	/^		u16 reason_code; \/* for teardown *\/$/;"	m	struct:wpa_event_data::tdls	access:public
reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::deauth_info	access:public
reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::unprot_deauth	access:public
reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::unprot_disassoc	access:public
reason_code	src/drivers/driver_hostap.h	/^			u16 reason_code;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon85	access:public
reason_code	src/drivers/wireless_copy.h	/^	__u16		reason_code;$/;"	m	struct:iw_mlme	access:public
reason_txt	src/crypto/tls.h	/^		const char *reason_txt;$/;"	m	struct:tls_event_data::__anon194	access:public
reassoc	src/drivers/driver.h	/^		int reassoc;$/;"	m	struct:wpa_event_data::assoc_info	access:public
reassoc_deadline	src/rsn_supp/wpa_ie.h	/^	const u8 *reassoc_deadline;$/;"	m	struct:wpa_eapol_ie_parse	access:public
reassoc_req	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED reassoc_req;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon43	access:public
reassoc_resp	src/common/ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_resp, reassoc_resp;$/;"	m	union:ieee80211_mgmt::__anon38	typeref:struct:ieee80211_mgmt::__anon38::__anon42	access:public
reassociation_deadline	src/ap/ap_config.h	/^	u32 reassociation_deadline;$/;"	m	struct:hostapd_bss_config	access:public
reassociation_deadline	src/ap/wpa_auth.h	/^	u32 reassociation_deadline;$/;"	m	struct:wpa_auth_config	access:public
reauth	src/eap_peer/eap_aka.c	/^	int reauth;$/;"	m	struct:eap_aka_data	file:	access:public
reauth	src/eap_peer/eap_peap.c	/^	int reauth; \/* reauthentication *\/$/;"	m	struct:eap_peap_data	file:	access:public
reauth	src/eap_peer/eap_sim.c	/^	int reauth;$/;"	m	struct:eap_sim_data	file:	access:public
reauth	src/eap_peer/eap_ttls.c	/^	int reauth; \/* reauthentication *\/$/;"	m	struct:eap_ttls_data	file:	access:public
reauth	src/eap_server/eap_server_aka.c	/^	struct eap_sim_reauth *reauth;$/;"	m	struct:eap_aka_data	typeref:struct:eap_aka_data::eap_sim_reauth	file:	access:public
reauth	src/eap_server/eap_server_sim.c	/^	struct eap_sim_reauth *reauth;$/;"	m	struct:eap_sim_data	typeref:struct:eap_sim_data::eap_sim_reauth	file:	access:public
reauth_id	src/eap_peer/eap_aka.c	/^	u8 *reauth_id;$/;"	m	struct:eap_aka_data	file:	access:public
reauth_id	src/eap_peer/eap_sim.c	/^	u8 *reauth_id;$/;"	m	struct:eap_sim_data	file:	access:public
reauth_id	src/eap_server/eap_sim_db.h	/^	char *reauth_id;$/;"	m	struct:eap_sim_reauth	access:public
reauth_id_len	src/eap_peer/eap_aka.c	/^	size_t reauth_id_len;$/;"	m	struct:eap_aka_data	file:	access:public
reauth_id_len	src/eap_peer/eap_sim.c	/^	size_t reauth_id_len;$/;"	m	struct:eap_sim_data	file:	access:public
reauth_time	src/rsn_supp/pmksa_cache.h	/^	os_time_t reauth_time;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
reauth_timer_state	src/eapol_auth/eapol_auth_sm_i.h	/^	} reauth_timer_state;   \/\/ 重认证定时器状态机$/;"	m	struct:eapol_state_machine	typeref:enum:eapol_state_machine::__anon68	access:public
reauth_timer_state_txt	src/eapol_auth/eapol_auth_dump.c	/^static inline const char * reauth_timer_state_txt(int s)$/;"	f	file:	signature:(int s)
reauths	src/eap_server/eap_sim_db.c	/^	struct eap_sim_reauth *reauths;$/;"	m	struct:eap_sim_db_data	typeref:struct:eap_sim_db_data::eap_sim_reauth	file:	access:public
received_version	src/eap_common/eap_tlv_common.h	/^	u8 received_version;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
recommendation	src/eap_server/eap_server_tnc.c	/^	enum { ALLOW, ISOLATE, NO_ACCESS, NO_RECOMMENDATION } recommendation;$/;"	m	struct:eap_tnc_data	typeref:enum:eap_tnc_data::__anon147	file:	access:public
recommendation	src/eap_server/tncs.c	/^		enum IMV_Action_Recommendation recommendation;$/;"	m	struct:tncs_data::conn_imv	typeref:enum:tncs_data::conn_imv::IMV_Action_Recommendation	file:	access:public
recommendation	src/eap_server/tncs.c	/^	enum IMV_Action_Recommendation recommendation;$/;"	m	struct:tncs_data	typeref:enum:tncs_data::IMV_Action_Recommendation	file:	access:public
recommendation_set	src/eap_server/tncs.c	/^		int recommendation_set;$/;"	m	struct:tncs_data::conn_imv	file:	access:public
recv	src/radius/radius.h	/^	u8 *recv;$/;"	m	struct:radius_ms_mppe_keys	access:public
recv_len	src/radius/radius.h	/^	size_t recv_len;$/;"	m	struct:radius_ms_mppe_keys	access:public
recv_version	src/eap_server/eap_server_peap.c	/^	int recv_version;$/;"	m	struct:eap_peap_data	file:	access:public
ref	src/drivers/ndis_events.c	/^	UINT ref;$/;"	m	struct:ndis_events_data	file:	access:public
refcount	src/l2_packet/l2_packet_ndis.c	/^	int refcount;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
reg	src/wps/wps_upnp_i.h	/^	struct wps_registrar *reg;$/;"	m	struct:subscription	typeref:struct:subscription::wps_registrar	access:public
reg_class	src/p2p/p2p.h	/^		u8 reg_class;$/;"	m	struct:p2p_channels::p2p_reg_class	access:public
reg_class	src/p2p/p2p.h	/^	u8 reg_class;$/;"	m	struct:p2p_config	access:public
reg_class	src/p2p/p2p.h	/^	} reg_class[P2P_MAX_REG_CLASSES];$/;"	m	struct:p2p_channels	typeref:struct:p2p_channels::p2p_reg_class	access:public
reg_classes	src/p2p/p2p.h	/^	size_t reg_classes;$/;"	m	struct:p2p_channels	access:public
reg_success_cb	src/wps/wps.h	/^	void (*reg_success_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:wps_registrar_config	access:public
reg_success_cb	src/wps/wps_registrar.c	/^	void (*reg_success_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:wps_registrar	file:	access:public
register_async_notification	src/drivers/ndis_events.c	/^static int register_async_notification(IWbemObjectSink *pDestSink,$/;"	f	file:	signature:(IWbemObjectSink *pDestSink, IWbemServices *pSvc)
registrar	src/eap_peer/eap_wsc.c	/^	int registrar;$/;"	m	struct:eap_wsc_data	file:	access:public
registrar	src/eap_server/eap_server_wsc.c	/^	int registrar;$/;"	m	struct:eap_wsc_data	file:	access:public
registrar	src/wps/wps.h	/^	int registrar;$/;"	m	struct:wps_config	access:public
registrar	src/wps/wps.h	/^	struct wps_registrar *registrar;$/;"	m	struct:wps_context	typeref:struct:wps_context::wps_registrar	access:public
registrar	src/wps/wps_i.h	/^	int registrar;$/;"	m	struct:wps_data	access:public
registrar_nonce	src/wps/wps_i.h	/^	const u8 *registrar_nonce; \/* WPS_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
reject_4way_hs_for_entropy	src/ap/wpa_auth_i.h	/^	Boolean reject_4way_hs_for_entropy;$/;"	m	struct:wpa_group	access:public
reload_config	src/ap/hostapd.h	/^	int (*reload_config)(struct hostapd_iface *iface);$/;"	m	struct:hostapd_iface	access:public
remain_on_chan_cookie	src/drivers/driver_nl80211.c	/^	u64 remain_on_chan_cookie;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
remain_on_channel	src/drivers/driver.h	/^	int (*remain_on_channel)(void *priv, unsigned int freq,$/;"	m	struct:wpa_driver_ops	access:public
remain_on_channel	src/drivers/driver.h	/^	struct remain_on_channel {$/;"	s	union:wpa_event_data	access:public
remain_on_channel	src/drivers/driver.h	/^	} remain_on_channel;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::remain_on_channel	access:public
remain_on_channel_duration	src/drivers/driver_test.c	/^	unsigned int remain_on_channel_duration;$/;"	m	struct:wpa_driver_test_data	file:	access:public
remain_on_channel_freq	src/drivers/driver_test.c	/^	unsigned int remain_on_channel_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
remove_pmkid	src/drivers/driver.h	/^	int (*remove_pmkid)(void *priv, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_driver_ops	access:public
remove_pmkid	src/rsn_supp/wpa.h	/^	int (*remove_pmkid)(void *ctx, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_sm_ctx	access:public
renew_snonce	src/rsn_supp/wpa_i.h	/^	int renew_snonce;$/;"	m	struct:wpa_sm	access:public
replay_counter	src/ap/ieee802_1x.h	/^	u8 replay_counter[8]; \/* does not repeat within the life of the keying$/;"	m	struct:ieee802_1x_eapol_key	access:public
replay_counter	src/common/wpa_common.h	/^	u8 replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_eapol_key	access:public
replay_counter	src/eapol_supp/eapol_supp_sm.c	/^	u8 replay_counter[IEEE8021X_REPLAY_COUNTER_LEN];$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
replay_counter	src/rsn_supp/peerkey.h	/^	u8 replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_peerkey	access:public
replay_counter_set	src/rsn_supp/peerkey.h	/^	int replay_counter_set;$/;"	m	struct:wpa_peerkey	access:public
replay_counter_valid	src/eapol_supp/eapol_supp_sm.c	/^	Boolean replay_counter_valid;$/;"	m	struct:eapol_sm	file:	access:public
replay_ctr	src/drivers/driver.h	/^		const u8 *replay_ctr;$/;"	m	struct:wpa_event_data::driver_gtk_rekey	access:public
reply_code	src/wps/httpread.c	/^	int reply_code;         \/* for type REPLY, e.g. 200 for HTTP\/1.1 200 OK *\/$/;"	m	struct:httpread	file:	access:public
req	src/wps/http_client.c	/^	struct wpabuf *req;$/;"	m	struct:http_client	typeref:struct:http_client::wpabuf	file:	access:public
reqId	src/eap_peer/eap_i.h	/^	int reqId;$/;"	m	struct:eap_sm	access:public
reqMethod	src/eap_peer/eap_i.h	/^	EapType reqMethod;$/;"	m	struct:eap_sm	access:public
reqVendor	src/eap_peer/eap_i.h	/^	int reqVendor;$/;"	m	struct:eap_sm	access:public
reqVendorMethod	src/eap_peer/eap_i.h	/^	u32 reqVendorMethod;$/;"	m	struct:eap_sm	access:public
req_addr	src/drivers/driver_test.c	/^	u8 req_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_test_global	file:	access:public
req_config_methods	src/p2p/p2p_i.h	/^	u16 req_config_methods;$/;"	m	struct:p2p_device	access:public
req_dev_type	src/wps/wps_i.h	/^	const u8 *req_dev_type[MAX_REQ_DEV_TYPE_COUNT];$/;"	m	struct:wps_parse_attr	access:public
req_dev_types	src/p2p/p2p_i.h	/^	u8 *req_dev_types;$/;"	m	struct:p2p_data	access:public
req_ies	src/drivers/driver.h	/^		const u8 *req_ies;$/;"	m	struct:wpa_event_data::assoc_info	access:public
req_ies_len	src/drivers/driver.h	/^		size_t req_ies_len;$/;"	m	struct:wpa_event_data::assoc_info	access:public
req_md5	src/eap_peer/eap_i.h	/^	u8 req_md5[16]; \/* MD5() of the current EAP packet *\/$/;"	m	struct:eap_sm	access:public
req_mode	src/common/ieee802_11_defs.h	/^					u8 req_mode;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
req_pos	src/wps/http_client.c	/^	size_t req_pos;$/;"	m	struct:http_client	file:	access:public
req_replay_counter	src/ap/wpa_auth_i.h	/^	u8 req_replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_state_machine	access:public
req_replay_counter_used	src/ap/wpa_auth_i.h	/^	int req_replay_counter_used;$/;"	m	struct:wpa_state_machine	access:public
request_action	src/eap_common/eap_fast_common.h	/^	int request_action;$/;"	m	struct:eap_fast_tlv_parse	access:public
request_count	src/wps/http_server.c	/^	unsigned int request_count;$/;"	m	struct:http_server	file:	access:public
request_counter	src/rsn_supp/wpa_i.h	/^	u8 request_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_sm	access:public
request_to_enroll	src/wps/wps_i.h	/^	const u8 *request_to_enroll; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
request_type	src/wps/wps_i.h	/^	const u8 *request_type; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
request_type	src/wps/wps_i.h	/^	u8 request_type;$/;"	m	struct:wps_data	access:public
requests	src/radius/radius_client.h	/^	u32 requests;$/;"	m	struct:hostapd_radius_server	access:public
requests	src/wps/http_server.c	/^	struct http_request *requests;$/;"	m	struct:http_server	typeref:struct:http_server::http_request	file:	access:public
require_ht	src/ap/ap_config.h	/^	int require_ht;$/;"	m	struct:hostapd_config	access:public
require_identity_match	src/eap_server/eap_i.h	/^	int require_identity_match;$/;"	m	struct:eap_sm	access:public
required_keys	src/eapol_supp/eapol_supp_sm.h	/^	int required_keys;$/;"	m	struct:eapol_config	access:public
res	src/drivers/driver.h	/^		struct p2p_go_neg_results *res;$/;"	m	struct:wpa_event_data::p2p_go_neg_completed	typeref:struct:wpa_event_data::p2p_go_neg_completed::p2p_go_neg_results	access:public
res	src/drivers/driver.h	/^	struct wpa_scan_res **res;$/;"	m	struct:wpa_scan_results	typeref:struct:wpa_scan_results::wpa_scan_res	access:public
res	src/drivers/driver_broadcom.c	/^	uint16 res;$/;"	m	struct:__anon93	file:	access:public
res	src/drivers/driver_nl80211.c	/^	struct wpa_scan_results *res;$/;"	m	struct:nl80211_bss_info_arg	typeref:struct:nl80211_bss_info_arg::wpa_scan_results	file:	access:public
res	src/drivers/driver_wext.c	/^	struct wpa_scan_res res;$/;"	m	struct:wext_scan_data	typeref:struct:wext_scan_data::wpa_scan_res	file:	access:public
res	src/eap_common/eap_sim_common.h	/^	const u8 *nonce_mt, *identity, *res, *auts;$/;"	m	struct:eap_sim_attrs	access:public
res	src/eap_peer/eap_aka.c	/^	u8 ik[EAP_AKA_IK_LEN], ck[EAP_AKA_CK_LEN], res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
res	src/eap_server/eap_server_aka.c	/^	u8 res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_aka_data	file:	access:public
res	src/eap_server/eap_sim_db.c	/^			u8 res[EAP_AKA_RES_MAX_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
res1	src/drivers/Apple80211.h	/^	UInt16 res1;$/;"	m	struct:WirelessInfo	access:public
res2	src/drivers/Apple80211.h	/^	UInt16 res2;$/;"	m	struct:WirelessInfo	access:public
res_len	src/eap_common/eap_sim_common.h	/^	size_t next_pseudonym_len, next_reauth_id_len, identity_len, res_len;$/;"	m	struct:eap_sim_attrs	access:public
res_len	src/eap_peer/eap_aka.c	/^	size_t res_len;$/;"	m	struct:eap_aka_data	file:	access:public
res_len	src/eap_server/eap_server_aka.c	/^	size_t res_len;$/;"	m	struct:eap_aka_data	file:	access:public
res_len	src/eap_server/eap_sim_db.c	/^			size_t res_len;$/;"	m	struct:eap_sim_db_pending::__anon149::__anon151	file:	access:public
res_len_bits	src/eap_common/eap_sim_common.h	/^	size_t res_len_bits;$/;"	m	struct:eap_sim_attrs	access:public
reserved	src/ap/iapp.c	/^	u8 reserved;$/;"	m	struct:iapp_add_notify	file:	access:public
reserved	src/ap/iapp.c	/^	u8 reserved;$/;"	m	struct:iapp_cache_notify	file:	access:public
reserved	src/ap/iapp.c	/^	u8 reserved;$/;"	m	struct:iapp_move_notify	file:	access:public
reserved	src/common/ieee802_11_defs.h	/^	u8 reserved; \/* 0 *\/$/;"	m	struct:wmm_parameter_element	access:public
reserved	src/eap_common/eap_tlv_common.h	/^	u8 reserved;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
reserved	src/eap_common/ikev2_common.h	/^	u8 reserved;$/;"	m	struct:ikev2_proposal	access:public
reserved	src/eap_common/ikev2_common.h	/^	u8 reserved;$/;"	m	struct:ikev2_transform	access:public
reserved	src/eap_peer/eap_mschapv2.c	/^	u8 reserved[8];$/;"	m	struct:ms_change_password	file:	access:public
reserved	src/eap_peer/eap_mschapv2.c	/^	u8 reserved[8];$/;"	m	struct:ms_response	file:	access:public
reserved2	src/eap_common/ikev2_common.h	/^	u8 reserved2;$/;"	m	struct:ikev2_transform	access:public
reset	src/eap_server/eap_i.h	/^	void (*reset)(struct eap_sm *sm, void *priv);$/;"	m	struct:eap_method	access:public
respId	src/eap_server/eap_i.h	/^	int respId;$/;"	m	struct:eap_sm	access:public
respMethod	src/eap_server/eap_i.h	/^	EapType respMethod;$/;"	m	struct:eap_sm	access:public
respVendor	src/eap_server/eap_i.h	/^	int respVendor;$/;"	m	struct:eap_sm	access:public
respVendorMethod	src/eap_server/eap_i.h	/^	u32 respVendorMethod;$/;"	m	struct:eap_sm	access:public
resp_ies	src/drivers/driver.h	/^		const u8 *resp_ies;$/;"	m	struct:wpa_event_data::assoc_info	access:public
resp_ies	src/drivers/driver.h	/^		const u8 *resp_ies;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
resp_ies_len	src/drivers/driver.h	/^		size_t resp_ies_len;$/;"	m	struct:wpa_event_data::assoc_info	access:public
resp_ies_len	src/drivers/driver.h	/^		size_t resp_ies_len;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
resp_mschapv2_id	src/eap_server/eap_server_mschapv2.c	/^	u8 resp_mschapv2_id;$/;"	m	struct:eap_mschapv2_data	file:	access:public
resp_sta	src/rsn_supp/tdls.c	/^	u8 resp_sta[ETH_ALEN];$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
response_type	src/wps/wps_i.h	/^	const u8 *response_type; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
responses	src/radius/radius_client.h	/^	u32 responses;$/;"	m	struct:hostapd_radius_server	access:public
result	src/eap_common/eap_fast_common.h	/^	int result;$/;"	m	struct:eap_fast_tlv_parse	access:public
result	src/eap_common/eap_tlv_common.h	/^	be16 result;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
result_ind	src/eap_common/eap_sim_common.h	/^	int result_ind;$/;"	m	struct:eap_sim_attrs	access:public
result_ind	src/eap_peer/eap_aka.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_aka_data	file:	access:public
result_ind	src/eap_peer/eap_sim.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_sim_data	file:	access:public
resume	src/drivers/driver.h	/^	void (*resume)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
resuming	src/eap_peer/eap_fast.c	/^	int resuming; \/* starting a resumed session *\/$/;"	m	struct:eap_fast_data	file:	access:public
resuming	src/eap_peer/eap_peap.c	/^	int resuming; \/* starting a resumed session *\/$/;"	m	struct:eap_peap_data	file:	access:public
resuming	src/eap_peer/eap_ttls.c	/^	int resuming; \/* starting a resumed session *\/$/;"	m	struct:eap_ttls_data	file:	access:public
retransCount	src/eap_server/eap_i.h	/^	int retransCount;$/;"	m	struct:eap_sm	access:public
retransWhile	src/eap_server/eap.h	/^	int retransWhile;       \/\/ 重传定时器，由EAPOL层PORT_TIMER SM触发超时，由EAP层开启 $/;"	m	struct:eap_eapol_interface	access:public
retransmissions	src/radius/radius_client.h	/^	u32 retransmissions;$/;"	m	struct:hostapd_radius_server	access:public
retries	src/drivers/wireless_copy.h	/^	__u32		retries;	\/* Tx : Max MAC retries num reached *\/$/;"	m	struct:iw_discarded	access:public
retry	src/drivers/wireless_copy.h	/^	struct iw_param	retry;		\/* Retry limits & lifetime *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
retry	src/wps/wps_upnp_event.c	/^	unsigned int retry;             \/* which retry *\/$/;"	m	struct:wps_event_	file:	access:public
retry_capa	src/drivers/wireless_copy.h	/^	__u16		retry_capa;	\/* What retry options are supported *\/$/;"	m	struct:iw_range	access:public
retry_flags	src/drivers/wireless_copy.h	/^	__u16		retry_flags;	\/* How to decode max\/min retry limit *\/$/;"	m	struct:iw_range	access:public
retry_primary_interval	src/radius/radius_client.h	/^	int retry_primary_interval;$/;"	m	struct:hostapd_radius_servers	access:public
rf_bands	src/wps/wps.h	/^	u8 rf_bands;$/;"	m	struct:wps_device_data	access:public
rf_bands	src/wps/wps_i.h	/^	const u8 *rf_bands; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
rfc1042_header	src/drivers/driver_hostap.c	/^static const u8 rfc1042_header[6] = { 0xaa, 0xaa, 0x03, 0x00, 0x00, 0x00 };$/;"	v	file:
rfc1042_header	src/drivers/driver_nl80211.c	/^static const u8 rfc1042_header[6] = { 0xaa, 0xaa, 0x03, 0x00, 0x00, 0x00 };$/;"	v	file:
rfkill	src/drivers/driver_nl80211.c	/^	struct rfkill_data *rfkill;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::rfkill_data	file:	access:public
rfkill	src/drivers/driver_wext.h	/^	struct rfkill_data *rfkill;$/;"	m	struct:wpa_driver_wext_data	typeref:struct:wpa_driver_wext_data::rfkill_data	access:public
rfkill_config	src/drivers/rfkill.h	/^struct rfkill_config {$/;"	s
rfkill_config::blocked_cb	src/drivers/rfkill.h	/^	void (*blocked_cb)(void *ctx);$/;"	m	struct:rfkill_config	access:public
rfkill_config::ctx	src/drivers/rfkill.h	/^	void *ctx;$/;"	m	struct:rfkill_config	access:public
rfkill_config::ifname	src/drivers/rfkill.h	/^	char ifname[IFNAMSIZ];$/;"	m	struct:rfkill_config	access:public
rfkill_config::unblocked_cb	src/drivers/rfkill.h	/^	void (*unblocked_cb)(void *ctx);$/;"	m	struct:rfkill_config	access:public
rfkill_data	src/drivers/rfkill.c	/^struct rfkill_data {$/;"	s	file:
rfkill_data::blocked	src/drivers/rfkill.c	/^	int blocked;$/;"	m	struct:rfkill_data	file:	access:public
rfkill_data::cfg	src/drivers/rfkill.c	/^	struct rfkill_config *cfg;$/;"	m	struct:rfkill_data	typeref:struct:rfkill_data::rfkill_config	file:	access:public
rfkill_data::fd	src/drivers/rfkill.c	/^	int fd;$/;"	m	struct:rfkill_data	file:	access:public
rfkill_deinit	src/drivers/rfkill.c	/^void rfkill_deinit(struct rfkill_data *rfkill)$/;"	f	signature:(struct rfkill_data *rfkill)
rfkill_deinit	src/drivers/rfkill.h	/^void rfkill_deinit(struct rfkill_data *rfkill);$/;"	p	signature:(struct rfkill_data *rfkill)
rfkill_event	src/drivers/rfkill.c	/^struct rfkill_event {$/;"	s	file:
rfkill_event::hard	src/drivers/rfkill.c	/^	u8 hard;$/;"	m	struct:rfkill_event	file:	access:public
rfkill_event::idx	src/drivers/rfkill.c	/^	u32 idx;$/;"	m	struct:rfkill_event	file:	access:public
rfkill_event::op	src/drivers/rfkill.c	/^	u8 op;$/;"	m	struct:rfkill_event	file:	access:public
rfkill_event::soft	src/drivers/rfkill.c	/^	u8 soft;$/;"	m	struct:rfkill_event	file:	access:public
rfkill_event::type	src/drivers/rfkill.c	/^	u8 type;$/;"	m	struct:rfkill_event	file:	access:public
rfkill_init	src/drivers/rfkill.c	/^struct rfkill_data * rfkill_init(struct rfkill_config *cfg)$/;"	f	signature:(struct rfkill_config *cfg)
rfkill_init	src/drivers/rfkill.h	/^struct rfkill_data * rfkill_init(struct rfkill_config *cfg);$/;"	p	signature:(struct rfkill_config *cfg)
rfkill_is_blocked	src/drivers/rfkill.c	/^int rfkill_is_blocked(struct rfkill_data *rfkill)$/;"	f	signature:(struct rfkill_data *rfkill)
rfkill_is_blocked	src/drivers/rfkill.h	/^int rfkill_is_blocked(struct rfkill_data *rfkill);$/;"	p	signature:(struct rfkill_data *rfkill)
rfkill_operation	src/drivers/rfkill.c	/^enum rfkill_operation {$/;"	g	file:
rfkill_receive	src/drivers/rfkill.c	/^static void rfkill_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
rfkill_type	src/drivers/rfkill.c	/^enum rfkill_type {$/;"	g	file:
rgbIVs	src/crypto/tls_schannel.c	/^	BYTE rgbIVs[64];$/;"	m	struct:_SecPkgContext_EapKeyBlock	file:	access:public
rgbKeys	src/crypto/tls_schannel.c	/^	BYTE rgbKeys[128];$/;"	m	struct:_SecPkgContext_EapKeyBlock	file:	access:public
ric	src/common/wpa_common.h	/^	const u8 *ric;$/;"	m	struct:wpa_ft_ies	access:public
ric_ies	src/drivers/driver.h	/^		const u8 *ric_ies;$/;"	m	struct:wpa_event_data::ft_ies	access:public
ric_ies_len	src/drivers/driver.h	/^		size_t ric_ies_len;$/;"	m	struct:wpa_event_data::ft_ies	access:public
ric_len	src/common/wpa_common.h	/^	size_t ric_len;$/;"	m	struct:wpa_ft_ies	access:public
rid	src/drivers/driver_hostap.h	/^			u16 rid;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon83	access:public
rid	src/drivers/driver_hostap.h	/^		} rid;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon83	access:public
rid	src/tls/x509v3.h	/^	struct asn1_oid rid; \/* registeredID *\/$/;"	m	struct:x509_name	typeref:struct:x509_name::asn1_oid	access:public
rijndaelDecrypt	src/crypto/aes-internal-dec.c	/^static void rijndaelDecrypt(const u32 rk[\/*44*\/], const u8 ct[16], u8 pt[16])$/;"	f	file:	signature:(const u32 rk[ ], const u8 ct[16], u8 pt[16])
rijndaelEncrypt	src/crypto/aes-internal-enc.c	/^void rijndaelEncrypt(const u32 rk[\/*44*\/], const u8 pt[16], u8 ct[16])$/;"	f	signature:(const u32 rk[ ], const u8 pt[16], u8 ct[16])
rijndaelKeySetupDec	src/crypto/aes-internal-dec.c	/^void rijndaelKeySetupDec(u32 rk[\/*44*\/], const u8 cipherKey[])$/;"	f	signature:(u32 rk[ ], const u8 cipherKey[])
rijndaelKeySetupEnc	src/crypto/aes-internal.c	/^void rijndaelKeySetupEnc(u32 rk[\/*44*\/], const u8 cipherKey[])$/;"	f	signature:(u32 rk[ ], const u8 cipherKey[])
rijndaelKeySetupEnc	src/crypto/aes_i.h	/^void rijndaelKeySetupEnc(u32 rk[\/*44*\/], const u8 cipherKey[]);$/;"	p	signature:(u32 rk[ ], const u8 cipherKey[])
rl	src/tls/tlsv1_client_i.h	/^	struct tlsv1_record_layer rl;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::tlsv1_record_layer	access:public
rl	src/tls/tlsv1_server_i.h	/^	struct tlsv1_record_layer rl;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::tlsv1_record_layer	access:public
rnonce	src/rsn_supp/tdls.c	/^	u8 rnonce[WPA_NONCE_LEN]; \/* Responder Nonce *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
roaming_consortium	src/ap/ap_config.h	/^	struct hostapd_roaming_consortium *roaming_consortium;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_roaming_consortium	access:public
roaming_consortium_count	src/ap/ap_config.h	/^	unsigned int roaming_consortium_count;$/;"	m	struct:hostapd_bss_config	access:public
robust_action_frame	src/ap/ieee802_11.c	/^static int robust_action_frame(u8 category)$/;"	f	file:	signature:(u8 category)
rol	src/crypto/sha1-internal.c	131;"	d	file:
role_go	src/p2p/p2p.h	/^	int role_go;$/;"	m	struct:p2p_go_neg_results	access:public
root_dir	src/wps/wps_upnp_i.h	/^	char *root_dir;$/;"	m	struct:upnp_wps_device_sm	access:public
root_secret_a	src/eap_peer/eap_sake.c	/^	u8 root_secret_a[EAP_SAKE_ROOT_SECRET_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
root_secret_b	src/eap_peer/eap_sake.c	/^	u8 root_secret_b[EAP_SAKE_ROOT_SECRET_LEN];$/;"	m	struct:eap_sake_data	file:	access:public
rotate_bits	src/tls/asn1.c	/^static u8 rotate_bits(u8 octet)$/;"	f	file:	signature:(u8 octet)
rotr	src/crypto/aes_i.h	/^static inline u32 rotr(u32 val, int bits)$/;"	f	signature:(u32 val, int bits)
round_trip_time	src/radius/radius_client.h	/^	int round_trip_time;$/;"	m	struct:hostapd_radius_server	access:public
route	src/drivers/driver_bsd.c	/^	int	route;			\/* routing socket for events *\/$/;"	m	struct:bsd_driver_data	file:	access:public
rsa	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY rsa;$/;"	m	struct:crypto_private_key	file:	access:public
rsa	src/crypto/crypto_cryptoapi.c	/^	HCRYPTKEY rsa;$/;"	m	struct:crypto_public_key	file:	access:public
rsa	src/crypto/crypto_libtomcrypt.c	/^	rsa_key rsa;$/;"	m	struct:crypto_private_key	file:	access:public
rsa	src/crypto/crypto_libtomcrypt.c	/^	rsa_key rsa;$/;"	m	struct:crypto_public_key	file:	access:public
rsn	src/common/wpa_common.h	/^	const u8 *rsn;$/;"	m	struct:wpa_ft_ies	access:public
rsn_enabled	src/rsn_supp/wpa_i.h	/^	int rsn_enabled; \/* Whether RSN is enabled in configuration *\/$/;"	m	struct:wpa_sm	access:public
rsn_error_kde	src/common/wpa_common.h	/^struct rsn_error_kde {$/;"	s
rsn_error_kde::error_type	src/common/wpa_common.h	/^	be16 error_type;$/;"	m	struct:rsn_error_kde	access:public
rsn_error_kde::mui	src/common/wpa_common.h	/^	be16 mui;$/;"	m	struct:rsn_error_kde	access:public
rsn_ftie	src/common/wpa_common.h	/^struct rsn_ftie {$/;"	s
rsn_ftie::anonce	src/common/wpa_common.h	/^	u8 anonce[WPA_NONCE_LEN];$/;"	m	struct:rsn_ftie	access:public
rsn_ftie::mic	src/common/wpa_common.h	/^	u8 mic[16];$/;"	m	struct:rsn_ftie	access:public
rsn_ftie::mic_control	src/common/wpa_common.h	/^	u8 mic_control[2];$/;"	m	struct:rsn_ftie	access:public
rsn_ftie::snonce	src/common/wpa_common.h	/^	u8 snonce[WPA_NONCE_LEN];$/;"	m	struct:rsn_ftie	access:public
rsn_ie	src/ap/wpa_auth_ie.h	/^	const u8 *rsn_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
rsn_ie	src/common/ieee802_11_common.h	/^	const u8 *rsn_ie;$/;"	m	struct:ieee802_11_elems	access:public
rsn_ie	src/rsn_supp/wpa_ie.h	/^	const u8 *rsn_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
rsn_ie_hdr	src/common/wpa_common.h	/^struct rsn_ie_hdr {$/;"	s
rsn_ie_hdr::elem_id	src/common/wpa_common.h	/^	u8 elem_id; \/* WLAN_EID_RSN *\/$/;"	m	struct:rsn_ie_hdr	access:public
rsn_ie_hdr::len	src/common/wpa_common.h	/^	u8 len;$/;"	m	struct:rsn_ie_hdr	access:public
rsn_ie_hdr::version	src/common/wpa_common.h	/^	u8 version[2]; \/* little endian *\/$/;"	m	struct:rsn_ie_hdr	access:public
rsn_ie_len	src/ap/wpa_auth_ie.h	/^	size_t rsn_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
rsn_ie_len	src/common/ieee802_11_common.h	/^	u8 rsn_ie_len;$/;"	m	struct:ieee802_11_elems	access:public
rsn_ie_len	src/rsn_supp/wpa_ie.h	/^	size_t rsn_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
rsn_key_mgmt_to_bitfield	src/common/wpa_common.c	/^static int rsn_key_mgmt_to_bitfield(const u8 *s)$/;"	f	file:	signature:(const u8 *s)
rsn_len	src/common/wpa_common.h	/^	size_t rsn_len;$/;"	m	struct:wpa_ft_ies	access:public
rsn_mdie	src/common/wpa_common.h	/^struct rsn_mdie {$/;"	s
rsn_mdie::ft_capab	src/common/wpa_common.h	/^	u8 ft_capab;$/;"	m	struct:rsn_mdie	access:public
rsn_mdie::mobility_domain	src/common/wpa_common.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:rsn_mdie	access:public
rsn_pairwise	src/ap/ap_config.h	/^	int rsn_pairwise;$/;"	m	struct:hostapd_bss_config	access:public
rsn_pairwise	src/ap/wpa_auth.h	/^	int rsn_pairwise;$/;"	m	struct:wpa_auth_config	access:public
rsn_pmkid	src/common/wpa_common.c	/^void rsn_pmkid(const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa,$/;"	f	signature:(const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, u8 *pmkid, int use_sha256)
rsn_pmkid	src/common/wpa_common.h	/^	const u8 *rsn_pmkid;$/;"	m	struct:wpa_ft_ies	access:public
rsn_pmkid	src/common/wpa_common.h	/^void rsn_pmkid(const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa,$/;"	p	signature:(const u8 *pmk, size_t pmk_len, const u8 *aa, const u8 *spa, u8 *pmkid, int use_sha256)
rsn_pmksa_cache	src/ap/pmksa_cache_auth.c	/^struct rsn_pmksa_cache {$/;"	s	file:
rsn_pmksa_cache	src/rsn_supp/pmksa_cache.c	/^struct rsn_pmksa_cache {$/;"	s	file:
rsn_pmksa_cache::ctx	src/ap/pmksa_cache_auth.c	/^	void *ctx;$/;"	m	struct:rsn_pmksa_cache	file:	access:public
rsn_pmksa_cache::ctx	src/rsn_supp/pmksa_cache.c	/^	void *ctx;$/;"	m	struct:rsn_pmksa_cache	file:	access:public
rsn_pmksa_cache::free_cb	src/ap/pmksa_cache_auth.c	/^	void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx);$/;"	m	struct:rsn_pmksa_cache	file:	access:public
rsn_pmksa_cache::free_cb	src/rsn_supp/pmksa_cache.c	/^	void (*free_cb)(struct rsn_pmksa_cache_entry *entry, void *ctx,$/;"	m	struct:rsn_pmksa_cache	file:	access:public
rsn_pmksa_cache::pmkid	src/ap/pmksa_cache_auth.c	/^	struct rsn_pmksa_cache_entry *pmkid[PMKID_HASH_SIZE];$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::rsn_pmksa_cache_entry	file:	access:public
rsn_pmksa_cache::pmksa	src/ap/pmksa_cache_auth.c	/^	struct rsn_pmksa_cache_entry *pmksa;$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::rsn_pmksa_cache_entry	file:	access:public
rsn_pmksa_cache::pmksa	src/rsn_supp/pmksa_cache.c	/^	struct rsn_pmksa_cache_entry *pmksa; \/* PMKSA cache *\/$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::rsn_pmksa_cache_entry	file:	access:public
rsn_pmksa_cache::pmksa_count	src/ap/pmksa_cache_auth.c	/^	int pmksa_count;$/;"	m	struct:rsn_pmksa_cache	file:	access:public
rsn_pmksa_cache::pmksa_count	src/rsn_supp/pmksa_cache.c	/^	int pmksa_count; \/* number of entries in PMKSA cache *\/$/;"	m	struct:rsn_pmksa_cache	file:	access:public
rsn_pmksa_cache::sm	src/rsn_supp/pmksa_cache.c	/^	struct wpa_sm *sm; \/* TODO: get rid of this reference(?) *\/$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::wpa_sm	file:	access:public
rsn_pmksa_cache_entry	src/ap/pmksa_cache_auth.h	/^struct rsn_pmksa_cache_entry {$/;"	s
rsn_pmksa_cache_entry	src/rsn_supp/pmksa_cache.h	/^struct rsn_pmksa_cache_entry {$/;"	s
rsn_pmksa_cache_entry::aa	src/rsn_supp/pmksa_cache.h	/^	u8 aa[ETH_ALEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::akmp	src/ap/pmksa_cache_auth.h	/^	int akmp; \/* WPA_KEY_MGMT_* *\/$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::akmp	src/rsn_supp/pmksa_cache.h	/^	int akmp; \/* WPA_KEY_MGMT_* *\/$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::eap_type_authsrv	src/ap/pmksa_cache_auth.h	/^	u8 eap_type_authsrv;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::expiration	src/ap/pmksa_cache_auth.h	/^	os_time_t expiration;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::expiration	src/rsn_supp/pmksa_cache.h	/^	os_time_t expiration;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::hnext	src/ap/pmksa_cache_auth.h	/^	struct rsn_pmksa_cache_entry *next, *hnext;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::	access:public
rsn_pmksa_cache_entry::identity	src/ap/pmksa_cache_auth.h	/^	u8 *identity;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::identity_len	src/ap/pmksa_cache_auth.h	/^	size_t identity_len;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::network_ctx	src/rsn_supp/pmksa_cache.h	/^	void *network_ctx;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::next	src/ap/pmksa_cache_auth.h	/^	struct rsn_pmksa_cache_entry *next, *hnext;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::next	src/rsn_supp/pmksa_cache.h	/^	struct rsn_pmksa_cache_entry *next;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::opportunistic	src/ap/pmksa_cache_auth.h	/^	int opportunistic;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::opportunistic	src/rsn_supp/pmksa_cache.h	/^	int opportunistic;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::pmk	src/ap/pmksa_cache_auth.h	/^	u8 pmk[PMK_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::pmk	src/rsn_supp/pmksa_cache.h	/^	u8 pmk[PMK_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::pmk_len	src/ap/pmksa_cache_auth.h	/^	size_t pmk_len;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::pmk_len	src/rsn_supp/pmksa_cache.h	/^	size_t pmk_len;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::pmkid	src/ap/pmksa_cache_auth.h	/^	u8 pmkid[PMKID_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::pmkid	src/rsn_supp/pmksa_cache.h	/^	u8 pmkid[PMKID_LEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::radius_class	src/ap/pmksa_cache_auth.h	/^	struct radius_class_data radius_class;$/;"	m	struct:rsn_pmksa_cache_entry	typeref:struct:rsn_pmksa_cache_entry::radius_class_data	access:public
rsn_pmksa_cache_entry::reauth_time	src/rsn_supp/pmksa_cache.h	/^	os_time_t reauth_time;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::spa	src/ap/pmksa_cache_auth.h	/^	u8 spa[ETH_ALEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_cache_entry::vlan_id	src/ap/pmksa_cache_auth.h	/^	int vlan_id;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
rsn_pmksa_candidate	src/rsn_supp/preauth.c	/^struct rsn_pmksa_candidate {$/;"	s	file:
rsn_pmksa_candidate::bssid	src/rsn_supp/preauth.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:rsn_pmksa_candidate	file:	access:public
rsn_pmksa_candidate::list	src/rsn_supp/preauth.c	/^	struct dl_list list;$/;"	m	struct:rsn_pmksa_candidate	typeref:struct:rsn_pmksa_candidate::dl_list	file:	access:public
rsn_pmksa_candidate::priority	src/rsn_supp/preauth.c	/^	int priority;$/;"	m	struct:rsn_pmksa_candidate	file:	access:public
rsn_preauth	src/ap/ap_config.h	/^	int rsn_preauth;$/;"	m	struct:hostapd_bss_config	access:public
rsn_preauth	src/ap/wpa_auth.h	/^	int rsn_preauth;$/;"	m	struct:wpa_auth_config	access:public
rsn_preauth	src/drivers/driver.h	/^	int rsn_preauth;$/;"	m	struct:wpa_bss_params	access:public
rsn_preauth_candidate_process	src/rsn_supp/preauth.c	/^void rsn_preauth_candidate_process(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_candidate_process	src/rsn_supp/preauth.h	/^static inline void rsn_preauth_candidate_process(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_candidate_process	src/rsn_supp/preauth.h	/^void rsn_preauth_candidate_process(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
rsn_preauth_deinit	src/rsn_supp/preauth.c	/^void rsn_preauth_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_deinit	src/rsn_supp/preauth.h	/^static inline void rsn_preauth_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_deinit	src/rsn_supp/preauth.h	/^void rsn_preauth_deinit(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
rsn_preauth_eapol_cb	src/rsn_supp/preauth.c	/^static void rsn_preauth_eapol_cb(struct eapol_sm *eapol, int success,$/;"	f	file:	signature:(struct eapol_sm *eapol, int success, void *ctx)
rsn_preauth_eapol_send	src/rsn_supp/preauth.c	/^static int rsn_preauth_eapol_send(void *ctx, int type, const u8 *buf,$/;"	f	file:	signature:(void *ctx, int type, const u8 *buf, size_t len)
rsn_preauth_finished	src/ap/preauth_auth.c	/^void rsn_preauth_finished(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int success)
rsn_preauth_finished	src/ap/preauth_auth.h	/^static inline void rsn_preauth_finished(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, int success)
rsn_preauth_finished	src/ap/preauth_auth.h	/^void rsn_preauth_finished(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, int success)
rsn_preauth_finished_cb	src/ap/preauth_auth.c	/^static void rsn_preauth_finished_cb(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
rsn_preauth_free_station	src/ap/preauth_auth.c	/^void rsn_preauth_free_station(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
rsn_preauth_free_station	src/ap/preauth_auth.h	/^static inline void rsn_preauth_free_station(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
rsn_preauth_free_station	src/ap/preauth_auth.h	/^void rsn_preauth_free_station(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
rsn_preauth_get_status	src/rsn_supp/preauth.c	/^int rsn_preauth_get_status(struct wpa_sm *sm, char *buf, size_t buflen,$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t buflen, int verbose)
rsn_preauth_get_status	src/rsn_supp/preauth.h	/^int rsn_preauth_get_status(struct wpa_sm *sm, char *buf, size_t buflen,$/;"	p	signature:(struct wpa_sm *sm, char *buf, size_t buflen, int verbose)
rsn_preauth_get_status	src/rsn_supp/preauth.h	/^static inline int rsn_preauth_get_status(struct wpa_sm *sm, char *buf,$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t buflen, int verbose)
rsn_preauth_iface_add	src/ap/preauth_auth.c	/^static int rsn_preauth_iface_add(struct hostapd_data *hapd, const char *ifname)$/;"	f	file:	signature:(struct hostapd_data *hapd, const char *ifname)
rsn_preauth_iface_deinit	src/ap/preauth_auth.c	/^void rsn_preauth_iface_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
rsn_preauth_iface_deinit	src/ap/preauth_auth.h	/^static inline void rsn_preauth_iface_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
rsn_preauth_iface_deinit	src/ap/preauth_auth.h	/^void rsn_preauth_iface_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
rsn_preauth_iface_init	src/ap/preauth_auth.c	/^int rsn_preauth_iface_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
rsn_preauth_iface_init	src/ap/preauth_auth.h	/^int rsn_preauth_iface_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
rsn_preauth_iface_init	src/ap/preauth_auth.h	/^static inline int rsn_preauth_iface_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
rsn_preauth_in_progress	src/rsn_supp/preauth.c	/^int rsn_preauth_in_progress(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_in_progress	src/rsn_supp/preauth.h	/^int rsn_preauth_in_progress(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
rsn_preauth_in_progress	src/rsn_supp/preauth.h	/^static inline int rsn_preauth_in_progress(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_init	src/rsn_supp/preauth.c	/^int rsn_preauth_init(struct wpa_sm *sm, const u8 *dst,$/;"	f	signature:(struct wpa_sm *sm, const u8 *dst, struct eap_peer_config *eap_conf)
rsn_preauth_init	src/rsn_supp/preauth.h	/^int rsn_preauth_init(struct wpa_sm *sm, const u8 *dst,$/;"	p	signature:(struct wpa_sm *sm, const u8 *dst, struct eap_peer_config *eap_conf)
rsn_preauth_init	src/rsn_supp/preauth.h	/^static inline int rsn_preauth_init(struct wpa_sm *sm, const u8 *dst,$/;"	f	signature:(struct wpa_sm *sm, const u8 *dst, struct eap_peer_config *eap_conf)
rsn_preauth_interface	src/ap/preauth_auth.c	/^struct rsn_preauth_interface {$/;"	s	file:
rsn_preauth_interface::hapd	src/ap/preauth_auth.c	/^	struct hostapd_data *hapd;$/;"	m	struct:rsn_preauth_interface	typeref:struct:rsn_preauth_interface::hostapd_data	file:	access:public
rsn_preauth_interface::ifindex	src/ap/preauth_auth.c	/^	int ifindex;$/;"	m	struct:rsn_preauth_interface	file:	access:public
rsn_preauth_interface::ifname	src/ap/preauth_auth.c	/^	char *ifname;$/;"	m	struct:rsn_preauth_interface	file:	access:public
rsn_preauth_interface::l2	src/ap/preauth_auth.c	/^	struct l2_packet_data *l2;$/;"	m	struct:rsn_preauth_interface	typeref:struct:rsn_preauth_interface::l2_packet_data	file:	access:public
rsn_preauth_interface::next	src/ap/preauth_auth.c	/^	struct rsn_preauth_interface *next;$/;"	m	struct:rsn_preauth_interface	typeref:struct:rsn_preauth_interface::rsn_preauth_interface	file:	access:public
rsn_preauth_interfaces	src/ap/ap_config.h	/^	char *rsn_preauth_interfaces;$/;"	m	struct:hostapd_bss_config	access:public
rsn_preauth_receive	src/ap/preauth_auth.c	/^static void rsn_preauth_receive(void *ctx, const u8 *src_addr,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
rsn_preauth_receive	src/rsn_supp/preauth.c	/^static void rsn_preauth_receive(void *ctx, const u8 *src_addr,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
rsn_preauth_scan_result	src/rsn_supp/preauth.c	/^void rsn_preauth_scan_result(struct wpa_sm *sm, const u8 *bssid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid, const u8 *ssid, const u8 *rsn)
rsn_preauth_scan_result	src/rsn_supp/preauth.h	/^static inline void rsn_preauth_scan_result(struct wpa_sm *sm, const u8 *bssid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid, const u8 *ssid, const u8 *rsn)
rsn_preauth_scan_result	src/rsn_supp/preauth.h	/^void rsn_preauth_scan_result(struct wpa_sm *sm, const u8 *bssid,$/;"	p	signature:(struct wpa_sm *sm, const u8 *bssid, const u8 *ssid, const u8 *rsn)
rsn_preauth_scan_results	src/rsn_supp/preauth.c	/^int rsn_preauth_scan_results(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_scan_results	src/rsn_supp/preauth.h	/^int rsn_preauth_scan_results(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
rsn_preauth_scan_results	src/rsn_supp/preauth.h	/^static inline int rsn_preauth_scan_results(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
rsn_preauth_send	src/ap/preauth_auth.c	/^void rsn_preauth_send(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 *buf, size_t len)
rsn_preauth_send	src/ap/preauth_auth.h	/^static inline void rsn_preauth_send(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 *buf, size_t len)
rsn_preauth_send	src/ap/preauth_auth.h	/^void rsn_preauth_send(struct hostapd_data *hapd, struct sta_info *sta,$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta, u8 *buf, size_t len)
rsn_preauth_timeout	src/rsn_supp/preauth.c	/^static void rsn_preauth_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
rsn_rdie	src/common/wpa_common.h	/^struct rsn_rdie {$/;"	s
rsn_rdie::descr_count	src/common/wpa_common.h	/^	u8 descr_count;$/;"	m	struct:rsn_rdie	access:public
rsn_rdie::id	src/common/wpa_common.h	/^	u8 id;$/;"	m	struct:rsn_rdie	access:public
rsn_rdie::status_code	src/common/wpa_common.h	/^	le16 status_code;$/;"	m	struct:rsn_rdie	access:public
rsn_selector_to_bitfield	src/common/wpa_common.c	/^static int rsn_selector_to_bitfield(const u8 *s)$/;"	f	file:	signature:(const u8 *s)
rsn_smkid	src/rsn_supp/peerkey.c	/^static void rsn_smkid(const u8 *smk, const u8 *pnonce, const u8 *mac_p,$/;"	f	file:	signature:(const u8 *smk, const u8 *pnonce, const u8 *mac_p, const u8 *inonce, const u8 *mac_i, u8 *smkid, int use_sha256)
rsn_supp_config	src/rsn_supp/wpa.h	/^struct rsn_supp_config {$/;"	s
rsn_supp_config::allowed_pairwise_cipher	src/rsn_supp/wpa.h	/^	int allowed_pairwise_cipher; \/* bitfield of WPA_CIPHER_* *\/$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::eap_conf_ctx	src/rsn_supp/wpa.h	/^	void *eap_conf_ctx;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::eap_workaround	src/rsn_supp/wpa.h	/^	int eap_workaround;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::network_ctx	src/rsn_supp/wpa.h	/^	void *network_ctx;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::peerkey_enabled	src/rsn_supp/wpa.h	/^	int peerkey_enabled;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::proactive_key_caching	src/rsn_supp/wpa.h	/^	int proactive_key_caching;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::ssid	src/rsn_supp/wpa.h	/^	const u8 *ssid;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::ssid_len	src/rsn_supp/wpa.h	/^	size_t ssid_len;$/;"	m	struct:rsn_supp_config	access:public
rsn_supp_config::wpa_ptk_rekey	src/rsn_supp/wpa.h	/^	int wpa_ptk_rekey;$/;"	m	struct:rsn_supp_config	access:public
rsn_testing	src/ap/wpa_auth_ie.c	/^int rsn_testing = 0;$/;"	v
rsnie_i	src/rsn_supp/peerkey.h	/^	u8 rsnie_i[PEERKEY_MAX_IE_LEN]; \/* Initiator RSN IE *\/$/;"	m	struct:wpa_peerkey	access:public
rsnie_i	src/rsn_supp/tdls.c	/^	u8 rsnie_i[TDLS_MAX_IE_LEN]; \/* Initiator RSN IE *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
rsnie_i_len	src/rsn_supp/peerkey.h	/^	size_t rsnie_i_len;$/;"	m	struct:wpa_peerkey	access:public
rsnie_i_len	src/rsn_supp/tdls.c	/^	size_t rsnie_i_len;$/;"	m	struct:wpa_tdls_peer	file:	access:public
rsnie_p	src/rsn_supp/peerkey.h	/^	u8 rsnie_p[PEERKEY_MAX_IE_LEN]; \/* Peer RSN IE *\/$/;"	m	struct:wpa_peerkey	access:public
rsnie_p	src/rsn_supp/tdls.c	/^	u8 rsnie_p[TDLS_MAX_IE_LEN]; \/* Peer RSN IE *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
rsnie_p_len	src/rsn_supp/peerkey.h	/^	size_t rsnie_p_len;$/;"	m	struct:wpa_peerkey	access:public
rsnie_p_len	src/rsn_supp/tdls.c	/^	size_t rsnie_p_len;$/;"	m	struct:wpa_tdls_peer	file:	access:public
rta_len	src/drivers/priv_netlink.h	/^	unsigned short rta_len;$/;"	m	struct:rtattr	access:public
rta_type	src/drivers/priv_netlink.h	/^	unsigned short rta_type;$/;"	m	struct:rtattr	access:public
rtattr	src/drivers/priv_netlink.h	/^struct rtattr$/;"	s
rtattr::rta_len	src/drivers/priv_netlink.h	/^	unsigned short rta_len;$/;"	m	struct:rtattr	access:public
rtattr::rta_type	src/drivers/priv_netlink.h	/^	unsigned short rta_type;$/;"	m	struct:rtattr	access:public
rtbuf_len	src/drivers/driver_bsd.c	/^rtbuf_len(void)$/;"	f	file:	signature:(void)
rtheader	src/utils/radiotap_iter.h	/^	struct ieee80211_radiotap_header *rtheader;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_header	access:public
rts	src/drivers/wireless_copy.h	/^	struct iw_param	rts;		\/* RTS threshold threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
rts_threshold	src/ap/ap_config.h	/^	int rts_threshold;$/;"	m	struct:hostapd_config	access:public
running	src/l2_packet/l2_packet_winpcap.c	/^	int running;$/;"	m	struct:l2_packet_data	file:	access:public
rxFailure	src/eap_peer/eap_i.h	/^	Boolean rxFailure;$/;"	m	struct:eap_sm	access:public
rxKey	src/eapol_auth/eapol_auth_sm_i.h	/^	Boolean rxKey;$/;"	m	struct:eapol_state_machine	access:public
rxKey	src/eapol_supp/eapol_supp_sm.c	/^	Boolean rxKey;$/;"	m	struct:eapol_sm	file:	access:public
rxReq	src/eap_peer/eap_i.h	/^	Boolean rxReq;$/;"	m	struct:eap_sm	access:public
rxResp	src/eap_peer/eap_i.h	/^	Boolean rxResp \/* LEAP only *\/;$/;"	m	struct:eap_sm	access:public
rxResp	src/eap_server/eap_i.h	/^	Boolean rxResp;$/;"	m	struct:eap_sm	access:public
rxSuccess	src/eap_peer/eap_i.h	/^	Boolean rxSuccess;$/;"	m	struct:eap_sm	access:public
rx_action	src/drivers/driver.h	/^	struct rx_action {$/;"	s	union:wpa_event_data	access:public
rx_action	src/drivers/driver.h	/^	} rx_action;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_action	access:public
rx_avail	src/l2_packet/l2_packet_ndis.c	/^	HANDLE rx_avail;$/;"	m	struct:l2_packet_data	file:	access:public
rx_avail	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
rx_buf	src/l2_packet/l2_packet_ndis.c	/^	u8 rx_buf[1514];$/;"	m	struct:l2_packet_data	file:	access:public
rx_buf	src/l2_packet/l2_packet_winpcap.c	/^	u8 *rx_buf, *rx_src;$/;"	m	struct:l2_packet_data	file:	access:public
rx_bytes	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
rx_callback	src/l2_packet/l2_packet_freebsd.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback	src/l2_packet/l2_packet_linux.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback	src/l2_packet/l2_packet_ndis.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback	src/l2_packet/l2_packet_none.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback	src/l2_packet/l2_packet_pcap.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback	src/l2_packet/l2_packet_privsep.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback	src/l2_packet/l2_packet_winpcap.c	/^	void (*rx_callback)(void *ctx, const u8 *src_addr,$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_freebsd.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_linux.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_ndis.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_none.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_pcap.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_privsep.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_callback_ctx	src/l2_packet/l2_packet_winpcap.c	/^	void *rx_callback_ctx;$/;"	m	struct:l2_packet_data	file:	access:public
rx_done	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
rx_eapol_key_secure	src/ap/wpa_auth_i.h	/^	unsigned int rx_eapol_key_secure:1;$/;"	m	struct:wpa_state_machine	access:public
rx_from_unknown	src/drivers/driver.h	/^	struct rx_from_unknown {$/;"	s	union:wpa_event_data	access:public
rx_from_unknown	src/drivers/driver.h	/^	} rx_from_unknown;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_from_unknown	access:public
rx_len	src/l2_packet/l2_packet_winpcap.c	/^	size_t rx_len;$/;"	m	struct:l2_packet_data	file:	access:public
rx_mgmt	src/drivers/driver.h	/^	struct rx_mgmt {$/;"	s	union:wpa_event_data	access:public
rx_mgmt	src/drivers/driver.h	/^	} rx_mgmt;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_mgmt	access:public
rx_mic_key	src/common/wpa_common.h	/^			u8 rx_mic_key[8];$/;"	m	struct:wpa_ptk::__anon33::__anon34	access:public
rx_no_wait	src/l2_packet/l2_packet_winpcap.c	/^	size_t rx_no_wait;$/;"	m	struct:l2_packet_data	file:	access:public
rx_notify	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
rx_overlapped	src/l2_packet/l2_packet_ndis.c	/^	OVERLAPPED rx_overlapped;$/;"	m	struct:l2_packet_data	file:	access:public
rx_packets	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
rx_probe_req	src/drivers/driver.h	/^	struct rx_probe_req {$/;"	s	union:wpa_event_data	access:public
rx_probe_req	src/drivers/driver.h	/^	} rx_probe_req;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_probe_req	access:public
rx_processed	src/l2_packet/l2_packet_ndis.c	/^	HANDLE rx_processed;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
rx_replay_counter	src/rsn_supp/wpa_i.h	/^	u8 rx_replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_sm	access:public
rx_replay_counter_set	src/rsn_supp/wpa_i.h	/^	int rx_replay_counter_set;$/;"	m	struct:wpa_sm	access:public
rx_req_put_wlan_response	src/wps/wps_upnp.h	/^	int (*rx_req_put_wlan_response)($/;"	m	struct:upnp_wps_device_ctx	access:public
rx_seq	src/drivers/wireless_copy.h	/^	__u8		rx_seq[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_encode_ext	access:public
rx_src	src/l2_packet/l2_packet_winpcap.c	/^	u8 *rx_buf, *rx_src;$/;"	m	struct:l2_packet_data	file:	access:public
rx_thread	src/l2_packet/l2_packet_ndis.c	/^	HANDLE rx_thread;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
rx_thread	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
rx_thread_done	src/l2_packet/l2_packet_winpcap.c	/^	HANDLE rx_avail, rx_done, rx_thread, rx_thread_done, rx_notify;$/;"	m	struct:l2_packet_data	file:	access:public
rx_written	src/l2_packet/l2_packet_ndis.c	/^	DWORD rx_written;$/;"	m	struct:l2_packet_data	file:	access:public
s	src/ap/vlan_init.c	/^	int s; \/* socket on which to listen for new\/removed interfaces. *\/$/;"	m	struct:full_dynamic_vlan	file:	access:public
s	src/common/wpa_ctrl.c	/^	int s;$/;"	m	struct:wpa_ctrl	file:	access:public
s	src/wps/wps_upnp_event.c	/^	struct subscription *s;         \/* parent *\/$/;"	m	struct:wps_event_	typeref:struct:wps_event_::subscription	file:	access:public
s16	src/utils/common.h	/^typedef INT16 s16;$/;"	t
s16	src/utils/common.h	/^typedef int16_t s16;$/;"	t
s1kh_id	src/ap/wpa_auth.h	/^	u8 s1kh_id[ETH_ALEN]; \/* copied from pull *\/$/;"	m	struct:ft_r0kh_r1kh_resp_frame	access:public
s1kh_id	src/ap/wpa_auth.h	/^	u8 s1kh_id[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_pull_frame	access:public
s1kh_id	src/ap/wpa_auth.h	/^	u8 s1kh_id[ETH_ALEN];$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
s32	src/utils/common.h	/^typedef INT32 s32;$/;"	t
s32	src/utils/common.h	/^typedef int32_t s32;$/;"	t
s64	src/utils/common.h	/^typedef INT64 s64;$/;"	t
s64	src/utils/common.h	/^typedef int64_t s64;$/;"	t
s64	src/utils/common.h	/^typedef long long s64;$/;"	t
s8	src/utils/common.h	/^typedef INT8 s8;$/;"	t
s8	src/utils/common.h	/^typedef int8_t s8;$/;"	t
sPortMode	src/eapol_supp/eapol_supp_sm.c	/^	PortControl sPortMode;$/;"	m	struct:eapol_sm	file:	access:public
s_mp_add	src/tls/libtommath.c	/^static int s_mp_add (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
s_mp_exptmod	src/tls/libtommath.c	/^static int s_mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f	file:	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
s_mp_exptmod	src/tls/libtommath.c	/^static int s_mp_exptmod(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode);$/;"	p	file:	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
s_mp_mul	src/tls/libtommath.c	128;"	d	file:
s_mp_mul_digs	src/tls/libtommath.c	/^static int s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_digs	src/tls/libtommath.c	/^static int s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_high_digs	src/tls/libtommath.c	/^static int s_mp_mul_high_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_high_digs	src/tls/libtommath.c	/^static int s_mp_mul_high_digs(mp_int * a, mp_int * b, mp_int * c, int digs);$/;"	p	file:	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_sqr	src/tls/libtommath.c	/^static int s_mp_sqr (mp_int * a, mp_int * b)$/;"	f	file:	signature:(mp_int * a, mp_int * b)
s_mp_sqr	src/tls/libtommath.c	/^static int s_mp_sqr(mp_int * a, mp_int * b);$/;"	p	file:	signature:(mp_int * a, mp_int * b)
s_mp_sub	src/tls/libtommath.c	/^static int s_mp_sub (mp_int * a, mp_int * b, mp_int * c)$/;"	f	file:	signature:(mp_int * a, mp_int * b, mp_int * c)
sa	src/ap/iapp.c	/^	u8 sa[ETH_ALEN]; \/* STA addr *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
sa	src/common/ieee802_11_defs.h	/^	u8 sa[6];$/;"	m	struct:ieee80211_mgmt	access:public
sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::rx_action	access:public
sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::unprot_deauth	access:public
sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::unprot_disassoc	access:public
sa	src/eap_common/ikev2_common.h	/^	const u8 *sa;$/;"	m	struct:ikev2_payloads	access:public
sa_len	src/eap_common/ikev2_common.h	/^	size_t sa_len;$/;"	m	struct:ikev2_payloads	access:public
sa_query_count	src/ap/sta_info.h	/^	int sa_query_count; \/* number of pending SA Query requests;$/;"	m	struct:sta_info	access:public
sa_query_req	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED sa_query_req;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54	access:public
sa_query_resp	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED sa_query_resp;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55	access:public
sa_query_start	src/ap/sta_info.h	/^	struct os_time sa_query_start;$/;"	m	struct:sta_info	typeref:struct:sta_info::os_time	access:public
sa_query_timed_out	src/ap/sta_info.h	/^	int sa_query_timed_out;$/;"	m	struct:sta_info	access:public
sa_query_trans_id	src/ap/sta_info.h	/^	u8 *sa_query_trans_id; \/* buffer of WLAN_SA_QUERY_TR_ID_LEN *$/;"	m	struct:sta_info	access:public
saddr	src/wps/wps_upnp_i.h	/^	struct sockaddr_in saddr; \/* address for doing connect *\/$/;"	m	struct:subscr_addr	typeref:struct:subscr_addr::sockaddr_in	access:public
salt	src/tls/pkcs5.c	/^	u8 salt[8];$/;"	m	struct:pkcs5_params	file:	access:public
salt_len	src/tls/pkcs5.c	/^	size_t salt_len;$/;"	m	struct:pkcs5_params	file:	access:public
scan2	src/drivers/driver.h	/^	int (*scan2)(void *priv, struct wpa_driver_scan_params *params);$/;"	m	struct:wpa_driver_ops	access:public
scan_capa	src/drivers/wireless_copy.h	/^	__u8		scan_capa; 	\/* IW_SCAN_CAPA_* bit field *\/$/;"	m	struct:iw_range	access:public
scan_cb	src/ap/hostapd.h	/^	void (*scan_cb)(struct hostapd_iface *iface);$/;"	m	struct:hostapd_iface	access:public
scan_complete_events	src/drivers/driver_nl80211.c	/^	int scan_complete_events;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
scan_complete_events	src/drivers/driver_wext.h	/^	int scan_complete_events;$/;"	m	struct:wpa_driver_wext_data	access:public
scan_info	src/drivers/driver.h	/^	struct scan_info {$/;"	s	union:wpa_event_data	access:public
scan_info	src/drivers/driver.h	/^	} scan_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::scan_info	access:public
scan_req	src/drivers/driver_hostap.h	/^		} scan_req;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon86	access:public
scan_type	src/drivers/wireless_copy.h	/^	__u8		scan_type; \/* IW_SCAN_TYPE_{ACTIVE,PASSIVE} *\/$/;"	m	struct:iw_scan_req	access:public
scanning_done	src/drivers/driver_ralink.c	/^	int scanning_done;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
scanres	src/drivers/driver_test.c	/^	struct wpa_scan_res *scanres[MAX_SCAN_RESULTS];$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::wpa_scan_res	file:	access:public
scard_ctx	src/eap_peer/eap_i.h	/^	void *scard_ctx;$/;"	m	struct:eap_sm	access:public
scard_ctx	src/eapol_supp/eapol_supp_sm.h	/^	void *scard_ctx;$/;"	m	struct:eapol_ctx	access:public
scard_ctx	src/rsn_supp/wpa_i.h	/^	void *scard_ctx; \/* context for smartcard callbacks *\/$/;"	m	struct:wpa_sm	access:public
scard_data	src/utils/pcsc_funcs.c	/^struct scard_data {$/;"	s	file:
scard_data::card	src/utils/pcsc_funcs.c	/^	SCARDHANDLE card;$/;"	m	struct:scard_data	file:	access:public
scard_data::ctx	src/utils/pcsc_funcs.c	/^	SCARDCONTEXT ctx;$/;"	m	struct:scard_data	file:	access:public
scard_data::pin1_required	src/utils/pcsc_funcs.c	/^	int pin1_required;$/;"	m	struct:scard_data	file:	access:public
scard_data::protocol	src/utils/pcsc_funcs.c	/^	DWORD protocol;$/;"	m	struct:scard_data	file:	access:public
scard_data::sim_type	src/utils/pcsc_funcs.c	/^	sim_types sim_type;$/;"	m	struct:scard_data	file:	access:public
scard_deinit	src/utils/pcsc_funcs.c	/^void scard_deinit(struct scard_data *scard)$/;"	f	signature:(struct scard_data *scard)
scard_deinit	src/utils/pcsc_funcs.h	/^void scard_deinit(struct scard_data *scard);$/;"	p	signature:(struct scard_data *scard)
scard_deinit	src/utils/pcsc_funcs.h	60;"	d
scard_get_aid	src/utils/pcsc_funcs.c	/^static int scard_get_aid(struct scard_data *scard, unsigned char *aid,$/;"	f	file:	signature:(struct scard_data *scard, unsigned char *aid, size_t maxlen)
scard_get_imsi	src/utils/pcsc_funcs.c	/^int scard_get_imsi(struct scard_data *scard, char *imsi, size_t *len)$/;"	f	signature:(struct scard_data *scard, char *imsi, size_t *len)
scard_get_imsi	src/utils/pcsc_funcs.h	/^int scard_get_imsi(struct scard_data *scard, char *imsi, size_t *len);$/;"	p	signature:(struct scard_data *scard, char *imsi, size_t *len)
scard_get_imsi	src/utils/pcsc_funcs.h	62;"	d
scard_get_record_len	src/utils/pcsc_funcs.c	/^static int scard_get_record_len(struct scard_data *scard, unsigned char recnum,$/;"	f	file:	signature:(struct scard_data *scard, unsigned char recnum, unsigned char mode)
scard_get_record_len	src/utils/pcsc_funcs.c	/^static int scard_get_record_len(struct scard_data *scard,$/;"	p	file:	signature:(struct scard_data *scard, unsigned char recnum, unsigned char mode)
scard_gsm_auth	src/utils/pcsc_funcs.c	/^int scard_gsm_auth(struct scard_data *scard, const unsigned char *_rand,$/;"	f	signature:(struct scard_data *scard, const unsigned char *_rand, unsigned char *sres, unsigned char *kc)
scard_gsm_auth	src/utils/pcsc_funcs.h	/^int scard_gsm_auth(struct scard_data *scard, const unsigned char *_rand,$/;"	p	signature:(struct scard_data *scard, const unsigned char *_rand, unsigned char *sres, unsigned char *kc)
scard_gsm_auth	src/utils/pcsc_funcs.h	63;"	d
scard_init	src/utils/pcsc_funcs.c	/^struct scard_data * scard_init(scard_sim_type sim_type)$/;"	f	signature:(scard_sim_type sim_type)
scard_init	src/utils/pcsc_funcs.h	/^struct scard_data * scard_init(scard_sim_type sim_type);$/;"	p	signature:(scard_sim_type sim_type)
scard_init	src/utils/pcsc_funcs.h	59;"	d
scard_parse_fsp_templ	src/utils/pcsc_funcs.c	/^static int scard_parse_fsp_templ(unsigned char *buf, size_t buf_len,$/;"	f	file:	signature:(unsigned char *buf, size_t buf_len, int *ps_do, int *file_len)
scard_pin_needed	src/utils/pcsc_funcs.c	/^static int scard_pin_needed(struct scard_data *scard,$/;"	f	file:	signature:(struct scard_data *scard, unsigned char *hdr, size_t hlen)
scard_read_file	src/utils/pcsc_funcs.c	/^static int scard_read_file(struct scard_data *scard,$/;"	f	file:	signature:(struct scard_data *scard, unsigned char *data, size_t len)
scard_read_record	src/utils/pcsc_funcs.c	/^static int scard_read_record(struct scard_data *scard,$/;"	f	file:	signature:(struct scard_data *scard, unsigned char *data, size_t len, unsigned char recnum, unsigned char mode)
scard_read_record	src/utils/pcsc_funcs.c	/^static int scard_read_record(struct scard_data *scard,$/;"	p	file:	signature:(struct scard_data *scard, unsigned char *data, size_t len, unsigned char recnum, unsigned char mode)
scard_select_file	src/utils/pcsc_funcs.c	/^static int scard_select_file(struct scard_data *scard, unsigned short file_id,$/;"	f	file:	signature:(struct scard_data *scard, unsigned short file_id, unsigned char *buf, size_t *buf_len)
scard_select_file	src/utils/pcsc_funcs.c	/^static int scard_select_file(struct scard_data *scard, unsigned short file_id,$/;"	p	file:	signature:(struct scard_data *scard, unsigned short file_id, unsigned char *buf, size_t *buf_len)
scard_set_pin	src/utils/pcsc_funcs.c	/^int scard_set_pin(struct scard_data *scard, const char *pin)$/;"	f	signature:(struct scard_data *scard, const char *pin)
scard_set_pin	src/utils/pcsc_funcs.h	/^int scard_set_pin(struct scard_data *scard, const char *pin);$/;"	p	signature:(struct scard_data *scard, const char *pin)
scard_set_pin	src/utils/pcsc_funcs.h	61;"	d
scard_sim_type	src/utils/pcsc_funcs.h	/^} scard_sim_type;$/;"	t	typeref:enum:__anon24
scard_transmit	src/utils/pcsc_funcs.c	/^static long scard_transmit(struct scard_data *scard,$/;"	f	file:	signature:(struct scard_data *scard, unsigned char *_send, size_t send_len, unsigned char *_recv, size_t *recv_len)
scard_umts_auth	src/utils/pcsc_funcs.c	/^int scard_umts_auth(struct scard_data *scard, const unsigned char *_rand,$/;"	f	signature:(struct scard_data *scard, const unsigned char *_rand, const unsigned char *autn, unsigned char *res, size_t *res_len, unsigned char *ik, unsigned char *ck, unsigned char *auts)
scard_umts_auth	src/utils/pcsc_funcs.h	/^int scard_umts_auth(struct scard_data *scard, const unsigned char *_rand,$/;"	p	signature:(struct scard_data *scard, const unsigned char *_rand, const unsigned char *autn, unsigned char *res, size_t *res_len, unsigned char *ik, unsigned char *ck, unsigned char *auts)
scard_umts_auth	src/utils/pcsc_funcs.h	64;"	d
scard_verify_pin	src/utils/pcsc_funcs.c	/^static int scard_verify_pin(struct scard_data *scard, const char *pin)$/;"	f	file:	signature:(struct scard_data *scard, const char *pin)
scard_verify_pin	src/utils/pcsc_funcs.c	/^static int scard_verify_pin(struct scard_data *scard, const char *pin);$/;"	p	file:	signature:(struct scard_data *scard, const char *pin)
schannel_cred	src/crypto/tls_schannel.c	/^	SCHANNEL_CRED schannel_cred;$/;"	m	struct:tls_connection	file:	access:public
schannel_load_lib	src/crypto/tls_schannel.c	/^static int schannel_load_lib(struct tls_global *global)$/;"	f	file:	signature:(struct tls_global *global)
sched_scan	src/drivers/driver.h	/^	int (*sched_scan)(void *priv, struct wpa_driver_scan_params *params,$/;"	m	struct:wpa_driver_ops	access:public
sched_scan_supported	src/drivers/driver.h	/^	int sched_scan_supported;$/;"	m	struct:wpa_driver_capa	access:public
scpd_url	src/wps/wps_er.h	/^	char *scpd_url;$/;"	m	struct:wps_er_ap	access:public
sd	src/wps/http_client.c	/^	int sd;$/;"	m	struct:http_client	file:	access:public
sd	src/wps/httpread.c	/^	int sd;         \/* descriptor of TCP socket to read from *\/$/;"	m	struct:httpread	file:	access:public
sd_frag_id	src/p2p/p2p_i.h	/^	u8 sd_frag_id;$/;"	m	struct:p2p_data	access:public
sd_peer	src/p2p/p2p_i.h	/^	struct p2p_device *sd_peer;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_device	access:public
sd_queries	src/p2p/p2p_i.h	/^	struct p2p_sd_query *sd_queries;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_sd_query	access:public
sd_query	src/p2p/p2p_i.h	/^	struct p2p_sd_query *sd_query;$/;"	m	struct:p2p_data	typeref:struct:p2p_data::p2p_sd_query	access:public
sd_registered	src/wps/httpread.c	/^	int sd_registered;      \/* nonzero if we need to unregister socket *\/$/;"	m	struct:httpread	file:	access:public
sd_request	src/p2p/p2p.h	/^	void (*sd_request)(void *ctx, int freq, const u8 *sa, u8 dialog_token,$/;"	m	struct:p2p_config	access:public
sd_resp	src/p2p/p2p_i.h	/^	struct wpabuf *sd_resp; \/* Fragmented SD response *\/$/;"	m	struct:p2p_data	typeref:struct:p2p_data::wpabuf	access:public
sd_resp_addr	src/p2p/p2p_i.h	/^	u8 sd_resp_addr[ETH_ALEN];$/;"	m	struct:p2p_data	access:public
sd_resp_dialog_token	src/p2p/p2p_i.h	/^	u8 sd_resp_dialog_token;$/;"	m	struct:p2p_data	access:public
sd_resp_pos	src/p2p/p2p_i.h	/^	size_t sd_resp_pos; \/* Offset in sd_resp *\/$/;"	m	struct:p2p_data	access:public
sd_response	src/p2p/p2p.h	/^	void (*sd_response)(void *ctx, const u8 *sa, u16 update_indic,$/;"	m	struct:p2p_config	access:public
sd_rx_resp	src/p2p/p2p_i.h	/^	struct wpabuf *sd_rx_resp; \/* Reassembled SD response *\/$/;"	m	struct:p2p_data	typeref:struct:p2p_data::wpabuf	access:public
sd_rx_update_indic	src/p2p/p2p_i.h	/^	u16 sd_rx_update_indic;$/;"	m	struct:p2p_data	access:public
search_backspace	src/utils/edit.c	/^static void search_backspace(void)$/;"	f	file:	signature:(void)
search_buf	src/utils/edit.c	/^static char search_buf[21];$/;"	v	file:
search_cancel	src/utils/edit.c	/^static void search_cancel(void)$/;"	f	file:	signature:(void)
search_char	src/utils/edit.c	/^static void search_char(char c)$/;"	f	file:	signature:(char c)
search_clear	src/utils/edit.c	/^static void search_clear(void)$/;"	f	file:	signature:(void)
search_find	src/utils/edit.c	/^static char * search_find(void)$/;"	f	file:	signature:(void)
search_key	src/utils/edit.c	/^static enum edit_key_code search_key(enum edit_key_code c)$/;"	f	file:	signature:(enum edit_key_code c)
search_next	src/utils/edit.c	/^static void search_next(void)$/;"	f	file:	signature:(void)
search_redraw	src/utils/edit.c	/^static void search_redraw(void)$/;"	f	file:	signature:(void)
search_skip	src/utils/edit.c	/^static int search_skip;$/;"	v	file:
search_start	src/utils/edit.c	/^static void search_start(void)$/;"	f	file:	signature:(void)
search_stop	src/utils/edit.c	/^static void search_stop(void)$/;"	f	file:	signature:(void)
search_tag	src/tls/tlsv1_cred.c	/^static const u8 * search_tag(const char *tag, const u8 *buf, size_t len)$/;"	f	file:	signature:(const char *tag, const u8 *buf, size_t len)
sec	src/utils/os.h	/^	int sec; \/* 0..59 or 60 for leap seconds *\/$/;"	m	struct:os_tm	access:public
sec	src/utils/os.h	/^	os_time_t sec;$/;"	m	struct:os_time	access:public
sec_block_len	src/ap/iapp.c	/^	u16 sec_block_len;$/;"	m	struct:iapp_send_security_block	file:	access:public
sec_channel_offset	src/drivers/driver.h	/^	int sec_channel_offset; \/* 0 = HT40 disabled, -1 = HT40 enabled,$/;"	m	struct:hostapd_freq_params	access:public
sec_dev_type	src/drivers/driver.h	/^	u8 sec_dev_type[DRV_MAX_SEC_DEV_TYPES][8];$/;"	m	struct:p2p_params	access:public
sec_dev_type	src/p2p/p2p.h	/^	u8 sec_dev_type[P2P_SEC_DEVICE_TYPES][8];$/;"	m	struct:p2p_config	access:public
sec_dev_type	src/wps/wps.h	/^	u8 sec_dev_type[WPS_SEC_DEVICE_TYPES][WPS_DEV_TYPE_LEN];$/;"	m	struct:wps_device_data	access:public
sec_dev_type_list	src/wps/wps_i.h	/^	const u8 *sec_dev_type_list; \/* <= 128 octets *\/$/;"	m	struct:wps_parse_attr	access:public
sec_dev_type_list_len	src/wps/wps_i.h	/^	size_t sec_dev_type_list_len;$/;"	m	struct:wps_parse_attr	access:public
sec_dev_types	src/p2p/p2p_i.h	/^		const u8 *sec_dev_types;$/;"	m	struct:p2p_group_info::p2p_client_info	access:public
secondary_channel	src/ap/ap_config.h	/^	int secondary_channel;$/;"	m	struct:hostapd_config	access:public
secpolicy	src/ap/ap_config.h	/^} secpolicy;$/;"	t	typeref:enum:hostap_security_policy
secs	src/drivers/driver_wired.c	/^	u_int16_t secs;$/;"	m	struct:dhcp_message	file:	access:public
security_parameters	src/crypto/tls_gnutls.c	/^	security_parameters_st security_parameters;$/;"	m	struct:gnutls_session_int	file:	access:public
security_parameters_st	src/crypto/tls_gnutls.c	/^} security_parameters_st;$/;"	t	typeref:struct:__anon192	file:
security_policy	src/ap/ap_config.h	/^	secpolicy security_policy;$/;"	m	struct:hostapd_ssid	access:public
sel_reg	src/wps/wps.h	/^		int sel_reg;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
sel_reg_config_methods	src/wps/wps.h	/^		u16 sel_reg_config_methods;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
sel_reg_config_methods	src/wps/wps_i.h	/^	const u8 *sel_reg_config_methods; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
sel_reg_config_methods_override	src/wps/wps_registrar.c	/^	int sel_reg_config_methods_override;$/;"	m	struct:wps_registrar	file:	access:public
sel_reg_dev_password_id_override	src/wps/wps_registrar.c	/^	int sel_reg_dev_password_id_override;$/;"	m	struct:wps_registrar	file:	access:public
sel_reg_union	src/wps/wps_registrar.c	/^	int sel_reg_union;$/;"	m	struct:wps_registrar	file:	access:public
selectedMethod	src/eap_peer/eap_i.h	/^	EapType selectedMethod;$/;"	m	struct:eap_sm	access:public
selected_registrar	src/wps/wps_i.h	/^	const u8 *selected_registrar; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
selected_registrar	src/wps/wps_registrar.c	/^	int selected_registrar;$/;"	m	struct:wps_registrar	file:	access:public
selected_registrar	src/wps/wps_upnp_i.h	/^	u8 selected_registrar;$/;"	m	struct:subscription	access:public
selected_version	src/eap_common/eap_sim_common.h	/^	int notification, counter, selected_version, client_error_code;$/;"	m	struct:eap_sim_attrs	access:public
selected_version	src/eap_peer/eap_sim.c	/^	int selected_version;$/;"	m	struct:eap_sim_data	file:	access:public
send	src/radius/radius.h	/^	u8 *send;$/;"	m	struct:radius_ms_mppe_keys	access:public
send_action	src/drivers/driver.h	/^	int (*send_action)(void *priv, unsigned int freq, unsigned int wait,$/;"	m	struct:wpa_driver_ops	access:public
send_action	src/p2p/p2p.h	/^	int (*send_action)(void *ctx, unsigned int freq, const u8 *dst,$/;"	m	struct:p2p_config	access:public
send_action_cancel_wait	src/drivers/driver.h	/^	void (*send_action_cancel_wait)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
send_action_cookie	src/drivers/driver_nl80211.c	/^	u64 send_action_cookie;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
send_action_done	src/p2p/p2p.h	/^	void (*send_action_done)(void *ctx);$/;"	m	struct:p2p_config	access:public
send_and_recv	src/drivers/driver_nl80211.c	/^static int send_and_recv(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nl_handle *nl_handle, struct nl_msg *msg, int (*valid_handler)(struct nl_msg *, void *), void *valid_data)
send_and_recv_msgs	src/drivers/driver_nl80211.c	/^static int send_and_recv_msgs(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct nl_msg *msg, int (*valid_handler)(struct nl_msg *, void *), void *valid_data)
send_assoc_resp	src/ap/ieee802_11.c	/^static void send_assoc_resp(struct hostapd_data *hapd, struct sta_info *sta,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta, u16 status_code, int reassoc, const u8 *ies, size_t ies_len)
send_auth_reply	src/ap/ieee802_11.c	/^static void send_auth_reply(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *dst, const u8 *bssid, u16 auth_alg, u16 auth_transaction, u16 resp, const u8 *ies, size_t ies_len)
send_deauth	src/ap/ieee802_11.c	/^static void send_deauth(struct hostapd_data *hapd, const u8 *addr,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *addr, u16 reason_code)
send_eapol	src/ap/wpa_auth.h	/^	int (*send_eapol)(void *ctx, const u8 *addr, const u8 *data,$/;"	m	struct:wpa_auth_callbacks	access:public
send_eapol	src/drivers/driver.h	/^	int (*send_eapol)(void *priv, const u8 *dest, u16 proto,$/;"	m	struct:wpa_driver_ops	access:public
send_ether	src/ap/wpa_auth.h	/^	int (*send_ether)(void *ctx, const u8 *dst, u16 proto, const u8 *data,$/;"	m	struct:wpa_auth_callbacks	access:public
send_ether	src/drivers/driver.h	/^	int (*send_ether)(void *priv, const u8 *dst, const u8 *src, u16 proto,$/;"	m	struct:wpa_driver_ops	access:public
send_frame	src/drivers/driver.h	/^	int (*send_frame)(void *priv, const u8 *data, size_t data_len,$/;"	m	struct:wpa_driver_ops	access:public
send_ft_action	src/ap/wpa_auth.h	/^	int (*send_ft_action)(void *ctx, const u8 *dst,$/;"	m	struct:wpa_auth_callbacks	access:public
send_ft_action	src/drivers/driver.h	/^	int (*send_ft_action)(void *priv, u8 action, const u8 *target_ap,$/;"	m	struct:wpa_driver_ops	access:public
send_ft_action	src/rsn_supp/wpa.h	/^	int (*send_ft_action)(void *ctx, u8 action, const u8 *target_ap,$/;"	m	struct:wpa_sm_ctx	access:public
send_len	src/radius/radius.h	/^	size_t send_len;$/;"	m	struct:radius_ms_mppe_keys	access:public
send_mlme	src/drivers/driver.h	/^	int (*send_mlme)(void *priv, const u8 *data, size_t data_len);$/;"	m	struct:wpa_driver_ops	access:public
send_new_pac	src/eap_server/eap_server_fast.c	/^	int send_new_pac; \/* server triggered re-keying of Tunnel PAC *\/$/;"	m	struct:eap_fast_data	file:	access:public
send_probe_resp	src/p2p/p2p.h	/^	int (*send_probe_resp)(void *ctx, const struct wpabuf *buf);$/;"	m	struct:p2p_config	access:public
send_probe_response	src/ap/ap_config.h	/^	u8 send_probe_response;$/;"	m	struct:hostapd_config	access:public
send_scan_event	src/drivers/driver_nl80211.c	/^static void send_scan_event(struct wpa_driver_nl80211_data *drv, int aborted,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int aborted, struct nlattr *tb[])
send_tdls_mgmt	src/drivers/driver.h	/^	int (*send_tdls_mgmt)(void *priv, const u8 *dst, u8 action_code,$/;"	m	struct:wpa_driver_ops	access:public
send_tdls_mgmt	src/rsn_supp/wpa.h	/^	int (*send_tdls_mgmt)(void *ctx, const u8 *dst,$/;"	m	struct:wpa_sm_ctx	access:public
send_wpabuf	src/wps/wps_upnp.c	/^int send_wpabuf(int fd, struct wpabuf *buf)$/;"	f	signature:(int fd, struct wpabuf *buf)
send_wpabuf	src/wps/wps_upnp_i.h	/^int send_wpabuf(int fd, struct wpabuf *buf);$/;"	p	signature:(int fd, struct wpabuf *buf)
sens	src/drivers/wireless_copy.h	/^	struct iw_param	sens;		\/* signal level threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
sensitivity	src/drivers/wireless_copy.h	/^	__s32		sensitivity;$/;"	m	struct:iw_range	access:public
seq	src/common/privsep_commands.h	/^	u8 seq[8];$/;"	m	struct:privsep_cmd_set_key	access:public
seq	src/drivers/driver_hostap.h	/^			u8 seq[8]; \/* sequence counter (set: RX, get: TX) *\/$/;"	m	struct:prism2_hostapd_param::__anon78::__anon81	access:public
seq_ctrl	src/common/ieee802_11_defs.h	/^	le16 seq_ctrl;$/;"	m	struct:ieee80211_hdr	access:public
seq_ctrl	src/common/ieee802_11_defs.h	/^	le16 seq_ctrl;$/;"	m	struct:ieee80211_mgmt	access:public
seq_len	src/common/privsep_commands.h	/^	size_t seq_len;$/;"	m	struct:privsep_cmd_set_key	access:public
seq_num	src/ap/iapp.c	/^	be16 seq_num;$/;"	m	struct:iapp_add_notify	file:	access:public
seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_cache_notify	file:	access:public
seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_cache_response	file:	access:public
seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_move_notify	file:	access:public
seq_num	src/ap/iapp.c	/^	u16 seq_num;$/;"	m	struct:iapp_move_response	file:	access:public
serial_number	src/ap/ap_config.h	/^	char *serial_number;$/;"	m	struct:hostapd_bss_config	access:public
serial_number	src/p2p/p2p.h	/^	char *serial_number;$/;"	m	struct:p2p_config	access:public
serial_number	src/p2p/p2p.h	/^	char serial_number[33];$/;"	m	struct:p2p_peer_info	access:public
serial_number	src/p2p/p2p_i.h	/^	const u8 *serial_number;$/;"	m	struct:p2p_message	access:public
serial_number	src/tls/x509v3.h	/^	unsigned long serial_number;$/;"	m	struct:x509_certificate	access:public
serial_number	src/wps/wps.h	/^		const char *serial_number;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
serial_number	src/wps/wps.h	/^		const char *serial_number;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
serial_number	src/wps/wps.h	/^		const u8 *serial_number;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
serial_number	src/wps/wps.h	/^	char *serial_number;$/;"	m	struct:wps_device_data	access:public
serial_number	src/wps/wps_er.h	/^	char *serial_number;$/;"	m	struct:wps_er_ap	access:public
serial_number	src/wps/wps_er.h	/^	char *serial_number;$/;"	m	struct:wps_er_sta	access:public
serial_number	src/wps/wps_i.h	/^	const u8 *serial_number;$/;"	m	struct:wps_parse_attr	access:public
serial_number_len	src/p2p/p2p_i.h	/^	size_t serial_number_len;$/;"	m	struct:p2p_message	access:public
serial_number_len	src/wps/wps.h	/^		size_t serial_number_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
serial_number_len	src/wps/wps_i.h	/^	size_t serial_number_len;$/;"	m	struct:wps_parse_attr	access:public
serv_sock	hostapd/hlr_auc_gw.c	/^static int serv_sock = -1;$/;"	v	file:
server	src/crypto/tls_gnutls.c	/^	int server;$/;"	m	struct:tls_global	file:	access:public
server	src/crypto/tls_internal.c	/^	int server;$/;"	m	struct:tls_global	file:	access:public
server	src/crypto/tls_internal.c	/^	struct tlsv1_server *server;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::tlsv1_server	file:	access:public
server	src/radius/radius_server.c	/^	struct radius_server_data *server;$/;"	m	struct:radius_session	typeref:struct:radius_session::radius_server_data	file:	access:public
serverTimeout	src/eapol_auth/eapol_auth_sm_i.h	/^	unsigned int serverTimeout; \/* default 30; 1..X 后台服务器认证超时时间，用于设置定时器aWhile*\/$/;"	m	struct:eapol_state_machine	access:public
server_cert	src/ap/ap_config.h	/^	char *server_cert;$/;"	m	struct:hostapd_bss_config	access:public
server_cert_only	src/crypto/tls_openssl.c	/^	unsigned int server_cert_only:1;$/;"	m	struct:tls_connection	file:	access:public
server_challenge	src/eap_common/eap_fast_common.h	/^	u8 server_challenge[16]; \/* MSCHAPv2 ServerChallenge *\/$/;"	m	struct:eap_fast_key_block_provisioning	access:public
server_cred	src/crypto/tls_internal.c	/^	struct tlsv1_credentials *server_cred;$/;"	m	struct:tls_global	typeref:struct:tls_global::tlsv1_credentials	file:	access:public
server_element	src/eap_peer/eap_pwd.c	/^	EC_POINT *server_element;$/;"	m	struct:eap_pwd_data	file:	access:public
server_random	src/crypto/tls.h	/^	const u8 *server_random;$/;"	m	struct:tls_keys	access:public
server_random	src/crypto/tls_gnutls.c	/^	opaque server_random[WPA_TLS_RANDOM_SIZE];$/;"	m	struct:__anon192	file:	access:public
server_random	src/tls/tlsv1_client_i.h	/^	u8 server_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_client	access:public
server_random	src/tls/tlsv1_server_i.h	/^	u8 server_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_server	access:public
server_random_len	src/crypto/tls.h	/^	size_t server_random_len;$/;"	m	struct:tls_keys	access:public
server_rsa_key	src/tls/tlsv1_client_i.h	/^	struct crypto_public_key *server_rsa_key;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::crypto_public_key	access:public
server_scalar	src/eap_peer/eap_pwd.c	/^	BIGNUM *server_scalar;$/;"	m	struct:eap_pwd_data	file:	access:public
serverid	src/eap_common/eap_sake_common.h	/^	const u8 *serverid;$/;"	m	struct:eap_sake_parse_attr	access:public
serverid	src/eap_peer/eap_sake.c	/^	u8 *serverid;$/;"	m	struct:eap_sake_data	file:	access:public
serverid	src/eap_server/eap_server_sake.c	/^	u8 *serverid;$/;"	m	struct:eap_sake_data	file:	access:public
serverid_len	src/eap_common/eap_sake_common.h	/^	size_t serverid_len;$/;"	m	struct:eap_sake_parse_attr	access:public
serverid_len	src/eap_peer/eap_sake.c	/^	size_t serverid_len;$/;"	m	struct:eap_sake_data	file:	access:public
serverid_len	src/eap_server/eap_server_sake.c	/^	size_t serverid_len;$/;"	m	struct:eap_sake_data	file:	access:public
service_start_time	src/common/ieee802_11_defs.h	/^	le32 service_start_time;$/;"	m	struct:wmm_tspec_element	access:public
sess_id	src/radius/radius_server.c	/^	unsigned int sess_id;$/;"	m	struct:radius_session	file:	access:public
session	src/crypto/tls_gnutls.c	/^	gnutls_session session;$/;"	m	struct:tls_connection	file:	access:public
session_data	src/crypto/tls_gnutls.c	/^	void *session_data;$/;"	m	struct:tls_global	file:	access:public
session_data_size	src/crypto/tls_gnutls.c	/^	size_t session_data_size;$/;"	m	struct:tls_global	file:	access:public
session_id	src/eap_common/eap_sake_common.h	/^	u8 session_id;$/;"	m	struct:eap_sake_hdr	access:public
session_id	src/eap_peer/eap_gpsk.c	/^	u8 session_id;$/;"	m	struct:eap_gpsk_data	file:	access:public
session_id	src/eap_peer/eap_sake.c	/^	u8 session_id;$/;"	m	struct:eap_sake_data	file:	access:public
session_id	src/eap_server/eap_server_sake.c	/^	u8 session_id;$/;"	m	struct:eap_sake_data	file:	access:public
session_id	src/tls/tlsv1_client_i.h	/^	u8 session_id[TLS_SESSION_ID_MAX_LEN];$/;"	m	struct:tlsv1_client	access:public
session_id	src/tls/tlsv1_server_i.h	/^	u8 session_id[TLS_SESSION_ID_MAX_LEN];$/;"	m	struct:tlsv1_server	access:public
session_id_len	src/tls/tlsv1_client_i.h	/^	size_t session_id_len;$/;"	m	struct:tlsv1_client	access:public
session_id_len	src/tls/tlsv1_server_i.h	/^	size_t session_id_len;$/;"	m	struct:tlsv1_server	access:public
session_id_set	src/eap_peer/eap_gpsk.c	/^	int session_id_set;$/;"	m	struct:eap_gpsk_data	file:	access:public
session_id_set	src/eap_peer/eap_sake.c	/^	int session_id_set;$/;"	m	struct:eap_sake_data	file:	access:public
session_key_seed	src/eap_common/eap_fast_common.h	/^	u8 session_key_seed[EAP_FAST_SKS_LEN];$/;"	m	struct:eap_fast_key_block_provisioning	access:public
session_resumed	src/tls/tlsv1_client_i.h	/^	unsigned int session_resumed:1;$/;"	m	struct:tlsv1_client	access:public
session_ticket	src/crypto/tls_openssl.c	/^	u8 *session_ticket;$/;"	m	struct:tls_connection	file:	access:public
session_ticket	src/tls/tlsv1_server_i.h	/^	u8 *session_ticket;$/;"	m	struct:tlsv1_server	access:public
session_ticket_cb	src/crypto/tls_openssl.c	/^	tls_session_ticket_cb session_ticket_cb;$/;"	m	struct:tls_connection	file:	access:public
session_ticket_cb	src/tls/tlsv1_client_i.h	/^	tlsv1_client_session_ticket_cb session_ticket_cb;$/;"	m	struct:tlsv1_client	access:public
session_ticket_cb	src/tls/tlsv1_server_i.h	/^	tlsv1_server_session_ticket_cb session_ticket_cb;$/;"	m	struct:tlsv1_server	access:public
session_ticket_cb_ctx	src/crypto/tls_openssl.c	/^	void *session_ticket_cb_ctx;$/;"	m	struct:tls_connection	file:	access:public
session_ticket_cb_ctx	src/tls/tlsv1_client_i.h	/^	void *session_ticket_cb_ctx;$/;"	m	struct:tlsv1_client	access:public
session_ticket_cb_ctx	src/tls/tlsv1_server_i.h	/^	void *session_ticket_cb_ctx;$/;"	m	struct:tlsv1_server	access:public
session_ticket_included	src/tls/tlsv1_client_i.h	/^	unsigned int session_ticket_included:1;$/;"	m	struct:tlsv1_client	access:public
session_ticket_len	src/crypto/tls_openssl.c	/^	size_t session_ticket_len;$/;"	m	struct:tls_connection	file:	access:public
session_ticket_len	src/tls/tlsv1_server_i.h	/^	size_t session_ticket_len;$/;"	m	struct:tlsv1_server	access:public
session_ticket_used	src/eap_peer/eap_fast.c	/^	int session_ticket_used;$/;"	m	struct:eap_fast_data	file:	access:public
session_timeout	src/ap/ieee802_11_auth.c	/^	u32 session_timeout;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
sessions	src/radius/radius_server.c	/^	struct radius_session *sessions;$/;"	m	struct:radius_client	typeref:struct:radius_client::radius_session	file:	access:public
set	src/drivers/driver.h	/^	int set; \/* Set STA parameters instead of add *\/$/;"	m	struct:hostapd_sta_add_params	access:public
set	src/drivers/nl80211_copy.h	/^	__u32 set;$/;"	m	struct:nl80211_sta_flag_update	access:public
set80211param	src/drivers/driver_atheros.c	/^set80211param(struct atheros_driver_data *drv, int op, int arg)$/;"	f	file:	signature:(struct atheros_driver_data *drv, int op, int arg)
set80211param	src/drivers/driver_bsd.c	/^set80211param(struct bsd_driver_data *drv, int op, int arg)$/;"	f	file:	signature:(struct bsd_driver_data *drv, int op, int arg)
set80211param	src/drivers/driver_madwifi.c	/^set80211param(struct madwifi_driver_data *drv, int op, int arg)$/;"	f	file:	signature:(struct madwifi_driver_data *drv, int op, int arg)
set80211param	src/drivers/driver_madwifi.c	/^set80211param(struct wpa_driver_madwifi_data *drv, int op, int arg,$/;"	f	file:	signature:(struct wpa_driver_madwifi_data *drv, int op, int arg, int show_err)
set80211priv	src/drivers/driver_atheros.c	/^set80211priv(struct atheros_driver_data *drv, int op, void *data, int len)$/;"	f	file:	signature:(struct atheros_driver_data *drv, int op, void *data, int len)
set80211priv	src/drivers/driver_madwifi.c	/^set80211priv(struct madwifi_driver_data *drv, int op, void *data, int len)$/;"	f	file:	signature:(struct madwifi_driver_data *drv, int op, void *data, int len)
set80211priv	src/drivers/driver_madwifi.c	/^set80211priv(struct wpa_driver_madwifi_data *drv, int op, void *data, int len,$/;"	f	file:	signature:(struct wpa_driver_madwifi_data *drv, int op, void *data, int len, int show_err)
set80211var	src/drivers/driver_bsd.c	/^set80211var(struct bsd_driver_data *drv, int op, const void *arg, int arg_len)$/;"	f	file:	signature:(struct bsd_driver_data *drv, int op, const void *arg, int arg_len)
setPortAuthorized	src/eapol_auth/eapol_auth_sm.c	48;"	d	file:
setPortUnauthorized	src/eapol_auth/eapol_auth_sm.c	51;"	d	file:
set_ap	src/drivers/driver.h	/^	int (*set_ap)(void *priv, struct wpa_driver_ap_params *params);$/;"	m	struct:wpa_driver_ops	access:public
set_ap_wps_ie	src/drivers/driver.h	/^	int (*set_ap_wps_ie)(void *priv, const struct wpabuf *beacon,$/;"	m	struct:wpa_driver_ops	access:public
set_args	src/drivers/wireless_copy.h	/^	__u16		set_args;	\/* Type and number of args *\/$/;"	m	struct:iw_priv_args	access:public
set_authmode	src/drivers/driver.h	/^	int (*set_authmode)(void *priv, int authmode);$/;"	m	struct:wpa_driver_ops	access:public
set_bool	src/eap_peer/eap.h	/^	void (*set_bool)(void *ctx, enum eapol_bool_var variable,$/;"	m	struct:eapol_callbacks	access:public
set_config_blob	src/eap_peer/eap.h	/^	void (*set_config_blob)(void *ctx, struct wpa_config_blob *blob);$/;"	m	struct:eapol_callbacks	access:public
set_config_blob	src/eapol_supp/eapol_supp_sm.h	/^	void (*set_config_blob)(void *ctx, struct wpa_config_blob *blob);$/;"	m	struct:eapol_ctx	access:public
set_config_blob	src/rsn_supp/wpa.h	/^	void (*set_config_blob)(void *ctx, struct wpa_config_blob *blob);$/;"	m	struct:wpa_sm_ctx	access:public
set_countermeasures	src/drivers/driver.h	/^	int (*set_countermeasures)(void *priv, int enabled);$/;"	m	struct:wpa_driver_ops	access:public
set_country	src/drivers/driver.h	/^	int (*set_country)(void *priv, const char *alpha2);$/;"	m	struct:wpa_driver_ops	access:public
set_eapol	src/ap/wpa_auth.h	/^	void (*set_eapol)(void *ctx, const u8 *addr, wpa_eapol_variable var,$/;"	m	struct:wpa_auth_callbacks	access:public
set_flags_sta	src/drivers/driver_hostap.h	/^		} set_flags_sta;$/;"	m	union:prism2_hostapd_param::__anon78	typeref:struct:prism2_hostapd_param::__anon78::__anon82	access:public
set_frag	src/drivers/driver.h	/^	int (*set_frag)(void *priv, int frag);$/;"	m	struct:wpa_driver_ops	access:public
set_freq	src/drivers/driver.h	/^	int (*set_freq)(void *priv, struct hostapd_freq_params *freq);$/;"	m	struct:wpa_driver_ops	access:public
set_generic_elem	src/drivers/driver.h	/^	int (*set_generic_elem)(void *priv, const u8 *elem, size_t elem_len);$/;"	m	struct:wpa_driver_ops	access:public
set_ie_cb	src/wps/wps.h	/^	int (*set_ie_cb)(void *ctx, struct wpabuf *beacon_ie,$/;"	m	struct:wps_registrar_config	access:public
set_ie_cb	src/wps/wps_registrar.c	/^	int (*set_ie_cb)(void *ctx, struct wpabuf *beacon_ie,$/;"	m	struct:wps_registrar	file:	access:public
set_ieee8021x	src/drivers/driver.h	/^	int (*set_ieee8021x)(void *priv, struct wpa_bss_params *params);$/;"	m	struct:wpa_driver_ops	access:public
set_int	src/eap_peer/eap.h	/^	void (*set_int)(void *ctx, enum eapol_int_var variable,$/;"	m	struct:eapol_callbacks	access:public
set_key	src/ap/wpa_auth.h	/^	int (*set_key)(void *ctx, int vlan_id, enum wpa_alg alg,$/;"	m	struct:wpa_auth_callbacks	access:public
set_key	src/drivers/driver.h	/^	int (*set_key)(const char *ifname, void *priv, enum wpa_alg alg,$/;"	m	struct:wpa_driver_ops	access:public
set_key	src/rsn_supp/wpa.h	/^	int (*set_key)(void *ctx, enum wpa_alg alg,$/;"	m	struct:wpa_sm_ctx	access:public
set_noa	src/drivers/driver.h	/^	int (*set_noa)(void *priv, u8 count, int start, int duration);$/;"	m	struct:wpa_driver_ops	access:public
set_operstate	src/drivers/driver.h	/^	int (*set_operstate)(void *priv, int state);$/;"	m	struct:wpa_driver_ops	access:public
set_p2p_powersave	src/drivers/driver.h	/^	int (*set_p2p_powersave)(void *priv, int legacy_ps, int opp_ps,$/;"	m	struct:wpa_driver_ops	access:public
set_param	src/drivers/driver.h	/^	int (*set_param)(void *priv, const char *param);$/;"	m	struct:wpa_driver_ops	access:public
set_port_authorized	src/eapol_auth/eapol_auth_sm.h	/^	void (*set_port_authorized)(void *ctx, void *sta_ctx, int authorized);  \/\/ ieee802_1x_set_port_authorized$/;"	m	struct:eapol_auth_cb	access:public
set_privacy	src/drivers/driver.h	/^	int (*set_privacy)(void *priv, int enabled);$/;"	m	struct:wpa_driver_ops	access:public
set_ptk_after_assoc	src/rsn_supp/wpa_i.h	/^	int set_ptk_after_assoc;$/;"	m	struct:wpa_sm	access:public
set_radius_acl_auth	src/drivers/driver.h	/^	int (*set_radius_acl_auth)(void *priv, const u8 *mac, int accepted, $/;"	m	struct:wpa_driver_ops	access:public
set_radius_acl_expire	src/drivers/driver.h	/^	int (*set_radius_acl_expire)(void *priv, const u8 *mac);$/;"	m	struct:wpa_driver_ops	access:public
set_rate_sets	src/drivers/driver.h	/^	int (*set_rate_sets)(void *priv, int *supp_rates, int *basic_rates,$/;"	m	struct:wpa_driver_ops	access:public
set_rekey_info	src/drivers/driver.h	/^	void (*set_rekey_info)(void *priv, const u8 *kek, const u8 *kck,$/;"	m	struct:wpa_driver_ops	access:public
set_rekey_offload	src/rsn_supp/wpa.h	/^	void (*set_rekey_offload)(void *ctx, const u8 *kek, const u8 *kck,$/;"	m	struct:wpa_sm_ctx	access:public
set_rts	src/drivers/driver.h	/^	int (*set_rts)(void *priv, int rts);$/;"	m	struct:wpa_driver_ops	access:public
set_sel_reg	src/wps/wps.h	/^	} set_sel_reg;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
set_sel_reg_cb	src/wps/wps.h	/^	void (*set_sel_reg_cb)(void *ctx, int sel_reg, u16 dev_passwd_id,$/;"	m	struct:wps_registrar_config	access:public
set_sel_reg_cb	src/wps/wps_registrar.c	/^	void (*set_sel_reg_cb)(void *ctx, int sel_reg, u16 dev_passwd_id,$/;"	m	struct:wps_registrar	file:	access:public
set_sel_reg_uuid_filter	src/wps/wps_er.h	/^	const u8 *set_sel_reg_uuid_filter;$/;"	m	struct:wps_er	access:public
set_sta_vlan	src/drivers/driver.h	/^	int (*set_sta_vlan)(void *priv, const u8 *addr, const char *ifname,$/;"	m	struct:wpa_driver_ops	access:public
set_state	src/rsn_supp/wpa.h	/^	void (*set_state)(void *ctx, enum wpa_states state);$/;"	m	struct:wpa_sm_ctx	access:public
set_supp_port	src/drivers/driver.h	/^	int (*set_supp_port)(void *priv, int authorized);$/;"	m	struct:wpa_driver_ops	access:public
set_tx	src/common/privsep_commands.h	/^	int set_tx;$/;"	m	struct:privsep_cmd_set_key	access:public
set_tx_queue_params	src/drivers/driver.h	/^	int (*set_tx_queue_params)(void *priv, int queue, int aifs, int cw_min,$/;"	m	struct:wpa_driver_ops	access:public
set_wds_sta	src/drivers/driver.h	/^	int (*set_wds_sta)(void *priv, const u8 *addr, int aid, int val,$/;"	m	struct:wpa_driver_ops	access:public
set_wep_key	src/eapol_supp/eapol_supp_sm.h	/^	int (*set_wep_key)(void *ctx, int unicast, int keyidx,$/;"	m	struct:eapol_ctx	access:public
settings_delay_time	src/wps/wps_i.h	/^	const u8 *settings_delay_time; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
setup_complete_cb	src/ap/hostapd.h	/^	void (*setup_complete_cb)(void *ctx);$/;"	m	struct:hostapd_data	access:public
setup_complete_cb_ctx	src/ap/hostapd.h	/^	void *setup_complete_cb_ctx;$/;"	m	struct:hostapd_data	access:public
setup_interface	src/ap/hostapd.c	/^static int setup_interface(struct hostapd_iface *iface)$/;"	f	file:	signature:(struct hostapd_iface *iface)
sha1	src/crypto/crypto_internal.c	/^		struct SHA1Context sha1;$/;"	m	union:crypto_hash::__anon193	typeref:struct:crypto_hash::__anon193::SHA1Context	file:	access:public
sha1_cert	src/tls/tlsv1_common.h	/^	struct crypto_hash *sha1_cert;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
sha1_client	src/tls/tlsv1_common.h	/^	struct crypto_hash *sha1_client;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
sha1_prf	src/crypto/sha1.c	/^int sha1_prf(const u8 *key, size_t key_len, const char *label,$/;"	f	signature:(const u8 *key, size_t key_len, const char *label, const u8 *data, size_t data_len, u8 *buf, size_t buf_len)
sha1_prf	src/crypto/sha1.h	/^int sha1_prf(const u8 *key, size_t key_len, const char *label,$/;"	p	signature:(const u8 *key, size_t key_len, const char *label, const u8 *data, size_t data_len, u8 *buf, size_t buf_len)
sha1_server	src/tls/tlsv1_common.h	/^	struct crypto_hash *sha1_server;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
sha1_t_prf	src/crypto/sha1-tprf.c	/^int sha1_t_prf(const u8 *key, size_t key_len, const char *label,$/;"	f	signature:(const u8 *key, size_t key_len, const char *label, const u8 *seed, size_t seed_len, u8 *buf, size_t buf_len)
sha1_t_prf	src/crypto/sha1.h	/^int sha1_t_prf(const u8 *key, size_t key_len, const char *label,$/;"	p	signature:(const u8 *key, size_t key_len, const char *label, const u8 *seed, size_t seed_len, u8 *buf, size_t buf_len)
sha1_transform	src/crypto/fips_prf_openssl.c	/^static void sha1_transform(u8 *state, const u8 data[64])$/;"	f	file:	signature:(u8 *state, const u8 data[64])
sha1_vector	src/crypto/crypto.h	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len,$/;"	p	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha1_vector	src/crypto/crypto_cryptoapi.c	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha1_vector	src/crypto/crypto_gnutls.c	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha1_vector	src/crypto/crypto_libtomcrypt.c	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha1_vector	src/crypto/crypto_nss.c	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha1_vector	src/crypto/crypto_openssl.c	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha1_vector	src/crypto/sha1-internal.c	/^int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha256_compress	src/crypto/sha256-internal.c	/^static int sha256_compress(struct sha256_state *md, unsigned char *buf)$/;"	f	file:	signature:(struct sha256_state *md, unsigned char *buf)
sha256_done	src/crypto/sha256-internal.c	/^static int sha256_done(struct sha256_state *md, unsigned char *out)$/;"	f	file:	signature:(struct sha256_state *md, unsigned char *out)
sha256_done	src/crypto/sha256-internal.c	/^static int sha256_done(struct sha256_state *md, unsigned char *out);$/;"	p	file:	signature:(struct sha256_state *md, unsigned char *out)
sha256_init	src/crypto/sha256-internal.c	/^static void sha256_init(struct sha256_state *md)$/;"	f	file:	signature:(struct sha256_state *md)
sha256_init	src/crypto/sha256-internal.c	/^static void sha256_init(struct sha256_state *md);$/;"	p	file:	signature:(struct sha256_state *md)
sha256_prf	src/crypto/sha256.c	/^void sha256_prf(const u8 *key, size_t key_len, const char *label,$/;"	f	signature:(const u8 *key, size_t key_len, const char *label, const u8 *data, size_t data_len, u8 *buf, size_t buf_len)
sha256_prf	src/crypto/sha256.h	/^void sha256_prf(const u8 *key, size_t key_len, const char *label,$/;"	p	signature:(const u8 *key, size_t key_len, const char *label, const u8 *data, size_t data_len, u8 *buf, size_t buf_len)
sha256_process	src/crypto/sha256-internal.c	/^static int sha256_process(struct sha256_state *md, const unsigned char *in,$/;"	f	file:	signature:(struct sha256_state *md, const unsigned char *in, unsigned long inlen)
sha256_process	src/crypto/sha256-internal.c	/^static int sha256_process(struct sha256_state *md, const unsigned char *in,$/;"	p	file:	signature:(struct sha256_state *md, const unsigned char *in, unsigned long inlen)
sha256_state	src/crypto/sha256-internal.c	/^struct sha256_state {$/;"	s	file:
sha256_state::buf	src/crypto/sha256-internal.c	/^	u8 buf[SHA256_BLOCK_SIZE];$/;"	m	struct:sha256_state	file:	access:public
sha256_state::curlen	src/crypto/sha256-internal.c	/^	u32 state[8], curlen;$/;"	m	struct:sha256_state	file:	access:public
sha256_state::length	src/crypto/sha256-internal.c	/^	u64 length;$/;"	m	struct:sha256_state	file:	access:public
sha256_state::state	src/crypto/sha256-internal.c	/^	u32 state[8], curlen;$/;"	m	struct:sha256_state	file:	access:public
sha256_vector	src/crypto/crypto.h	/^int sha256_vector(size_t num_elem, const u8 *addr[], const size_t *len,$/;"	p	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha256_vector	src/crypto/crypto_nss.c	/^int sha256_vector(size_t num_elem, const u8 *addr[], const size_t *len,$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha256_vector	src/crypto/crypto_openssl.c	/^int sha256_vector(size_t num_elem, const u8 *addr[], const size_t *len,$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
sha256_vector	src/crypto/sha256-internal.c	/^int sha256_vector(size_t num_elem, const u8 *addr[], const size_t *len,$/;"	f	signature:(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
shared_freq	src/drivers/driver.h	/^	int (*shared_freq)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
shared_secret	src/eap_peer/ikev2.h	/^	u8 *shared_secret;$/;"	m	struct:ikev2_responder_data	access:public
shared_secret	src/eap_server/ikev2.h	/^	u8 *shared_secret;$/;"	m	struct:ikev2_initiator_data	access:public
shared_secret	src/radius/radius_client.c	/^	const u8 *shared_secret;$/;"	m	struct:radius_msg_list	file:	access:public
shared_secret	src/radius/radius_client.h	/^	u8 *shared_secret;$/;"	m	struct:hostapd_radius_server	access:public
shared_secret	src/radius/radius_server.c	/^	char *shared_secret;$/;"	m	struct:radius_client	file:	access:public
shared_secret_len	src/eap_peer/ikev2.h	/^	size_t shared_secret_len;$/;"	m	struct:ikev2_responder_data	access:public
shared_secret_len	src/eap_server/ikev2.h	/^	size_t shared_secret_len;$/;"	m	struct:ikev2_initiator_data	access:public
shared_secret_len	src/radius/radius_client.c	/^	size_t shared_secret_len;$/;"	m	struct:radius_msg_list	file:	access:public
shared_secret_len	src/radius/radius_client.h	/^	size_t shared_secret_len;$/;"	m	struct:hostapd_radius_server	access:public
shared_secret_len	src/radius/radius_server.c	/^	int shared_secret_len;$/;"	m	struct:radius_client	file:	access:public
shared_upnp_device	src/wps/wps_upnp.c	/^static struct upnp_wps_device_sm *shared_upnp_device = NULL;$/;"	v	typeref:struct:upnp_wps_device_sm	file:
short_slot_time	src/drivers/driver.h	/^	int short_slot_time;$/;"	m	struct:wpa_driver_ap_params	access:public
show_esc_buf	src/utils/edit.c	/^static void show_esc_buf(const char *esc_buf, char c, int i)$/;"	f	file:	signature:(const char *esc_buf, char c, int i)
show_set_key_error	src/drivers/driver_hostap.c	/^static void show_set_key_error(struct prism2_hostapd_param *param)$/;"	f	file:	signature:(struct prism2_hostapd_param *param)
show_version	hostapd/main.c	/^static void show_version(void)$/;"	f	file:	signature:(void)
siaddr	src/drivers/driver_wired.c	/^	u_int32_t siaddr;$/;"	m	struct:dhcp_message	file:	access:public
sid	src/wps/wps_er.h	/^	u8 sid[WPS_UUID_LEN];$/;"	m	struct:wps_er_ap	access:public
sig	src/utils/eloop.c	/^	int sig;$/;"	m	struct:eloop_signal	file:	access:public
sig	src/utils/eloop_none.c	/^	int sig;$/;"	m	struct:eloop_signal	file:	access:public
sig	src/utils/eloop_win.c	/^	int sig;$/;"	m	struct:eloop_signal	file:	access:public
sign	src/tls/libtommath.c	/^    int used, alloc, sign;$/;"	m	struct:__anon109	file:	access:public
sign_key	src/eapol_supp/eapol_supp_sm.c	/^	u8 sign_key[IEEE8021X_SIGN_KEY_LEN];$/;"	m	struct:eap_key_data	file:	access:public
sign_value	src/tls/x509v3.h	/^	u8 *sign_value;$/;"	m	struct:x509_certificate	access:public
sign_value_len	src/tls/x509v3.h	/^	size_t sign_value_len;$/;"	m	struct:x509_certificate	access:public
signal	src/drivers/Apple80211.h	/^	UInt16 signal;$/;"	m	struct:WirelessInfo	access:public
signal	src/drivers/Apple80211.h	/^	UInt16 signal;$/;"	m	struct:WirelessNetworkInfo	access:public
signal_change	src/drivers/driver.h	/^	struct wpa_signal_info signal_change;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::wpa_signal_info	access:public
signal_count	src/utils/eloop.c	/^	int signal_count;$/;"	m	struct:eloop_data	file:	access:public
signal_count	src/utils/eloop_none.c	/^	int signal_count;$/;"	m	struct:eloop_data	file:	access:public
signal_count	src/utils/eloop_win.c	/^	int signal_count;$/;"	m	struct:eloop_data	file:	access:public
signal_monitor	src/drivers/driver.h	/^	int (*signal_monitor)(void *priv, int threshold, int hysteresis);$/;"	m	struct:wpa_driver_ops	access:public
signal_poll	src/drivers/driver.h	/^	int (*signal_poll)(void *priv, struct wpa_signal_info *signal_info);$/;"	m	struct:wpa_driver_ops	access:public
signaled	src/utils/eloop.c	/^	int signaled;$/;"	m	struct:eloop_data	file:	access:public
signaled	src/utils/eloop.c	/^	int signaled;$/;"	m	struct:eloop_signal	file:	access:public
signaled	src/utils/eloop_none.c	/^	int signaled;$/;"	m	struct:eloop_data	file:	access:public
signaled	src/utils/eloop_none.c	/^	int signaled;$/;"	m	struct:eloop_signal	file:	access:public
signaled	src/utils/eloop_win.c	/^	int signaled;$/;"	m	struct:eloop_data	file:	access:public
signaled	src/utils/eloop_win.c	/^	int signaled;$/;"	m	struct:eloop_signal	file:	access:public
signals	src/utils/eloop.c	/^	struct eloop_signal *signals;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
signals	src/utils/eloop_none.c	/^	struct eloop_signal *signals;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
signals	src/utils/eloop_win.c	/^	struct eloop_signal *signals;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
signature	src/tls/x509v3.h	/^	struct x509_algorithm_identifier signature;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_algorithm_identifier	access:public
signature_alg	src/tls/x509v3.h	/^	struct x509_algorithm_identifier signature_alg;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_algorithm_identifier	access:public
sim	src/eap_server/eap_sim_db.c	/^		} sim;$/;"	m	union:eap_sim_db_pending::__anon149	typeref:struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
sim_req_auth	hostapd/hlr_auc_gw.c	/^static void sim_req_auth(int s, struct sockaddr_un *from, socklen_t fromlen,$/;"	f	file:	signature:(int s, struct sockaddr_un *from, socklen_t fromlen, char *imsi)
sim_type	src/utils/pcsc_funcs.c	/^	sim_types sim_type;$/;"	m	struct:scard_data	file:	access:public
sim_types	src/utils/pcsc_funcs.c	/^typedef enum { SCARD_GSM_SIM, SCARD_USIM } sim_types;$/;"	t	typeref:enum:__anon25	file:
simck	src/eap_peer/eap_fast.c	/^	u8 simck[EAP_FAST_SIMCK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
simck	src/eap_server/eap_server_fast.c	/^	u8 simck[EAP_FAST_SIMCK_LEN];$/;"	m	struct:eap_fast_data	file:	access:public
simck_idx	src/eap_peer/eap_fast.c	/^	int simck_idx;$/;"	m	struct:eap_fast_data	file:	access:public
simck_idx	src/eap_server/eap_server_fast.c	/^	int simck_idx;$/;"	m	struct:eap_fast_data	file:	access:public
sink	src/drivers/ndis_events.c	/^	IWbemObjectSink sink;$/;"	m	struct:ndis_events_data	file:	access:public
sink_vtbl	src/drivers/ndis_events.c	/^	IWbemObjectSinkVtbl sink_vtbl;$/;"	m	struct:ndis_events_data	file:	access:public
size	src/utils/wpabuf.h	/^	size_t size; \/* total size of the allocated buffer *\/$/;"	m	struct:wpabuf	access:public
sk	src/eap_peer/eap_gpsk.c	/^	u8 sk[EAP_GPSK_MAX_SK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
sk	src/eap_server/eap_server_gpsk.c	/^	u8 sk[EAP_GPSK_MAX_SK_LEN];$/;"	m	struct:eap_gpsk_data	file:	access:public
sk_len	src/eap_peer/eap_gpsk.c	/^	size_t sk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
sk_len	src/eap_server/eap_server_gpsk.c	/^	size_t sk_len;$/;"	m	struct:eap_gpsk_data	file:	access:public
skip_cred_build	src/ap/ap_config.h	/^	int skip_cred_build;$/;"	m	struct:hostapd_bss_config	access:public
skip_cred_build	src/wps/wps.h	/^	int skip_cred_build;$/;"	m	struct:wps_registrar_config	access:public
skip_cred_build	src/wps/wps_registrar.c	/^	int skip_cred_build;$/;"	m	struct:wps_registrar	file:	access:public
skip_set_sel_reg	src/wps/wps_er.h	/^	int skip_set_sel_reg;$/;"	m	struct:wps_er	access:public
sm	src/ap/ieee802_1x.c	/^	struct eapol_state_machine *sm;$/;"	m	struct:sta_id_search	typeref:struct:sta_id_search::eapol_state_machine	file:	access:public
sm	src/ap/peerkey_auth.c	/^	struct wpa_state_machine *sm;$/;"	m	struct:wpa_stsl_search	typeref:struct:wpa_stsl_search::wpa_state_machine	file:	access:public
sm	src/rsn_supp/pmksa_cache.c	/^	struct wpa_sm *sm; \/* TODO: get rid of this reference(?) *\/$/;"	m	struct:rsn_pmksa_cache	typeref:struct:rsn_pmksa_cache::wpa_sm	file:	access:public
sm	src/wps/wps_upnp_i.h	/^	struct upnp_wps_device_sm *sm; \/* parent *\/$/;"	m	struct:subscription	typeref:struct:subscription::upnp_wps_device_sm	access:public
sm_tmr	src/rsn_supp/tdls.c	/^	} sm_tmr;$/;"	m	struct:wpa_tdls_peer	typeref:struct:wpa_tdls_peer::tpk_timer	file:	access:public
smk	src/ap/wpa_auth_ie.h	/^	const u8 *smk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
smk	src/rsn_supp/peerkey.h	/^	u8 smk[PMK_LEN];$/;"	m	struct:wpa_peerkey	access:public
smk	src/rsn_supp/wpa_ie.h	/^	const u8 *smk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
smk_complete	src/rsn_supp/peerkey.h	/^	int smk_complete;$/;"	m	struct:wpa_peerkey	access:public
smk_len	src/ap/wpa_auth_ie.h	/^	size_t smk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
smk_len	src/rsn_supp/wpa_ie.h	/^	size_t smk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
smkid	src/rsn_supp/peerkey.h	/^	u8 smkid[PMKID_LEN];$/;"	m	struct:wpa_peerkey	access:public
sname	src/drivers/driver_wired.c	/^	u_int8_t sname[64];$/;"	m	struct:dhcp_message	file:	access:public
snonce	src/common/wpa_common.h	/^	u8 snonce[WPA_NONCE_LEN];$/;"	m	struct:rsn_ftie	access:public
snonce	src/rsn_supp/wpa_i.h	/^	u8 snonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_sm	access:public
snonce	src/wps/wps_i.h	/^	u8 snonce[2 * WPS_SECRET_NONCE_LEN];$/;"	m	struct:wps_data	access:public
snprintf	src/utils/common.h	/^int snprintf(char *str, size_t size, const char *format, ...);$/;"	p	signature:(char *str, size_t size, const char *format, ...)
snprintf	src/utils/os.h	512;"	d
snprintf	src/utils/os.h	513;"	d
soap_error_postfix	src/wps/wps_upnp_web.c	/^static const char *soap_error_postfix =$/;"	v	file:
soap_error_prefix	src/wps/wps_upnp_web.c	/^static const char *soap_error_prefix =$/;"	v	file:
soap_postfix	src/wps/wps_er.c	/^static const char *soap_postfix =$/;"	v	file:
soap_postfix	src/wps/wps_upnp_web.c	/^static const char *soap_postfix =$/;"	v	file:
soap_prefix	src/wps/wps_er.c	/^static const char *soap_prefix =$/;"	v	file:
soap_prefix	src/wps/wps_upnp_web.c	/^static const char *soap_prefix =$/;"	v	file:
sock	src/drivers/driver_bsd.c	/^	int	sock;			\/* open socket for 802.11 ioctls *\/$/;"	m	struct:bsd_driver_data	file:	access:public
sock	src/drivers/driver_hostap.c	/^	int sock; \/* raw packet socket for driver access *\/$/;"	m	struct:hostap_driver_data	file:	access:public
sock	src/drivers/driver_hostap.c	/^	int sock;$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
sock	src/drivers/driver_madwifi.c	/^	int sock;$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
sock	src/drivers/driver_wired.c	/^	int sock; \/* raw packet socket for driver access *\/$/;"	m	struct:wpa_driver_wired_data	file:	access:public
sock	src/drivers/netlink.c	/^	int sock;$/;"	m	struct:netlink_data	file:	access:public
sock	src/eap_server/eap_sim_db.c	/^	int sock;$/;"	m	struct:eap_sim_db_data	file:	access:public
sock	src/utils/eloop.c	/^	int sock;                   \/\/ 描述符$/;"	m	struct:eloop_sock	file:	access:public
sock	src/utils/eloop_none.c	/^	int sock;$/;"	m	struct:eloop_sock	file:	access:public
sock	src/utils/eloop_win.c	/^	int sock;$/;"	m	struct:eloop_sock	file:	access:public
sock_raw	src/drivers/driver_atheros.c	/^	struct l2_packet_data *sock_raw; \/* raw 802.11 management frames *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::l2_packet_data	file:	access:public
sock_raw	src/drivers/driver_madwifi.c	/^	struct l2_packet_data *sock_raw; \/* raw 802.11 management frames *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::l2_packet_data	file:	access:public
sock_recv	src/drivers/driver_atheros.c	/^	struct l2_packet_data *sock_recv;	\/* raw packet recv socket *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::l2_packet_data	file:	access:public
sock_recv	src/drivers/driver_madwifi.c	/^	struct l2_packet_data *sock_recv;	\/* raw packet recv socket *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::l2_packet_data	file:	access:public
sock_xmit	src/drivers/driver_atheros.c	/^	struct l2_packet_data *sock_xmit;	\/* raw packet xmit socket *\/$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::l2_packet_data	file:	access:public
sock_xmit	src/drivers/driver_bsd.c	/^	struct l2_packet_data *sock_xmit;\/* raw packet xmit socket *\/$/;"	m	struct:bsd_driver_data	typeref:struct:bsd_driver_data::l2_packet_data	file:	access:public
sock_xmit	src/drivers/driver_madwifi.c	/^	struct l2_packet_data *sock_xmit;	\/* raw packet xmit socket *\/$/;"	m	struct:madwifi_driver_data	typeref:struct:madwifi_driver_data::l2_packet_data	file:	access:public
sockaddr_nl	src/drivers/priv_netlink.h	/^struct sockaddr_nl$/;"	s
sockaddr_nl::nl_family	src/drivers/priv_netlink.h	/^	sa_family_t nl_family;$/;"	m	struct:sockaddr_nl	access:public
sockaddr_nl::nl_groups	src/drivers/priv_netlink.h	/^	u32 nl_groups;$/;"	m	struct:sockaddr_nl	access:public
sockaddr_nl::nl_pad	src/drivers/priv_netlink.h	/^	unsigned short nl_pad;$/;"	m	struct:sockaddr_nl	access:public
sockaddr_nl::nl_pid	src/drivers/priv_netlink.h	/^	u32 nl_pid;$/;"	m	struct:sockaddr_nl	access:public
socket_path	hostapd/hlr_auc_gw.c	/^static const char *socket_path;$/;"	v	file:
socklen_t	src/utils/common.h	/^typedef int socklen_t;$/;"	t
soft	src/drivers/rfkill.c	/^	u8 soft;$/;"	m	struct:rfkill_event	file:	access:public
soh	src/eap_peer/eap_peap.c	/^	int soh; \/* Whether IF-TNCCS-SOH (Statement of Health; Microsoft NAP)$/;"	m	struct:eap_peap_data	file:	access:public
soh_response	src/eap_server/eap_server_peap.c	/^	struct wpabuf *soh_response;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::wpabuf	file:	access:public
spa	src/ap/pmksa_cache_auth.h	/^	u8 spa[ETH_ALEN];$/;"	m	struct:rsn_pmksa_cache_entry	access:public
spa	src/ap/wpa_auth_ft.c	/^	u8 spa[ETH_ALEN];$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
spa	src/ap/wpa_auth_ft.c	/^	u8 spa[ETH_ALEN];$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
spa	src/ap/wpa_auth_ie.c	/^	const u8 *spa;$/;"	m	struct:wpa_auth_okc_iter_data	file:	access:public
specifier	src/eap_common/eap_gpsk_common.h	/^	u8 specifier[2];$/;"	m	struct:eap_gpsk_csuite	access:public
specifier	src/eap_peer/eap_gpsk.c	/^	int specifier; \/* CSuite\/Specifier *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
specifier	src/eap_server/eap_server_gpsk.c	/^	int specifier; \/* CSuite\/Specifier *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
spi_p	src/eap_common/eap_sake_common.h	/^	const u8 *spi_p;$/;"	m	struct:eap_sake_parse_attr	access:public
spi_p_len	src/eap_common/eap_sake_common.h	/^	size_t spi_p_len;$/;"	m	struct:eap_sake_parse_attr	access:public
spi_s	src/eap_common/eap_sake_common.h	/^	const u8 *spi_s;$/;"	m	struct:eap_sake_parse_attr	access:public
spi_s_len	src/eap_common/eap_sake_common.h	/^	size_t spi_s_len;$/;"	m	struct:eap_sake_parse_attr	access:public
spi_size	src/eap_common/ikev2_common.h	/^	u8 spi_size;$/;"	m	struct:ikev2_proposal	access:public
sqn	hostapd/hlr_auc_gw.c	/^	u8 sqn[6];$/;"	m	struct:milenage_parameters	file:	access:public
src	src/drivers/driver.h	/^		const u8 *src;  \/\/ 帧源mac$/;"	m	struct:wpa_event_data::eapol_rx	access:public
src	src/drivers/driver.h	/^		const u8 *src;$/;"	m	struct:wpa_event_data::ft_rrb_rx	access:public
src	src/drivers/driver.h	/^		const u8 *src;$/;"	m	struct:wpa_event_data::michael_mic_failure	access:public
src	src/drivers/driver.h	/^		const u8 *src;$/;"	m	struct:wpa_event_data::p2p_go_neg_req_rx	access:public
src	src/drivers/driver_wired.c	/^	u8 src[6];$/;"	m	struct:ieee8023_hdr	file:	access:public
src	src/p2p/p2p_i.h	/^	u8 src[ETH_ALEN];$/;"	m	struct:p2p_pending_action_tx	access:public
src_addr	src/drivers/wireless_copy.h	/^	struct sockaddr	src_addr;$/;"	m	struct:iw_michaelmicfailure	typeref:struct:iw_michaelmicfailure::sockaddr	access:public
src_hapd	src/ap/wpa_auth_glue.c	/^	struct hostapd_data *src_hapd;$/;"	m	struct:wpa_auth_ft_iface_iter_data	typeref:struct:wpa_auth_ft_iface_iter_data::hostapd_data	file:	access:public
sres	hostapd/hlr_auc_gw.c	/^	u8 sres[4];$/;"	m	struct:gsm_triplet	file:	access:public
sres	src/eap_peer/eap_sim.c	/^	u8 sres[3][EAP_SIM_SRES_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
sres	src/eap_server/eap_server_sim.c	/^	u8 sres[EAP_SIM_MAX_CHAL][EAP_SIM_SRES_LEN];$/;"	m	struct:eap_sim_data	file:	access:public
sres	src/eap_server/eap_sim_db.c	/^			u8 sres[EAP_SIM_MAX_CHAL][EAP_SIM_SRES_LEN];$/;"	m	struct:eap_sim_db_pending::__anon149::__anon150	file:	access:public
srv	src/wps/http_server.c	/^	struct http_server *srv;$/;"	m	struct:http_request	typeref:struct:http_request::http_server	file:	access:public
srv_cert_hash	src/crypto/tls_openssl.c	/^	u8 srv_cert_hash[32];$/;"	m	struct:tls_connection	file:	access:public
srv_id	src/eap_server/eap_server_fast.c	/^	u8 *srv_id;$/;"	m	struct:eap_fast_data	file:	access:public
srv_id_info	src/eap_server/eap_server_fast.c	/^	char *srv_id_info;$/;"	m	struct:eap_fast_data	file:	access:public
srv_id_len	src/eap_server/eap_server_fast.c	/^	size_t srv_id_len;$/;"	m	struct:eap_fast_data	file:	access:public
srv_update_indic	src/p2p/p2p_i.h	/^	u16 srv_update_indic;$/;"	m	struct:p2p_data	access:public
ssap	src/ap/iapp.c	/^	u8 ssap; \/* null SSAP address, CR=Response *\/$/;"	m	struct:iapp_layer2_update	file:	access:public
ssdp_listener_handler	src/wps/wps_upnp_ssdp.c	/^static void ssdp_listener_handler(int sd, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sd, void *eloop_ctx, void *sock_ctx)
ssdp_listener_open	src/wps/wps_upnp_i.h	/^int ssdp_listener_open(void);$/;"	p	signature:(void)
ssdp_listener_open	src/wps/wps_upnp_ssdp.c	/^int ssdp_listener_open(void)$/;"	f	signature:(void)
ssdp_listener_start	src/wps/wps_upnp_i.h	/^int ssdp_listener_start(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
ssdp_listener_start	src/wps/wps_upnp_ssdp.c	/^int ssdp_listener_start(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
ssdp_listener_stop	src/wps/wps_upnp_i.h	/^void ssdp_listener_stop(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
ssdp_listener_stop	src/wps/wps_upnp_ssdp.c	/^void ssdp_listener_stop(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
ssdp_open_multicast	src/wps/wps_upnp_i.h	/^int ssdp_open_multicast(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
ssdp_open_multicast	src/wps/wps_upnp_ssdp.c	/^int ssdp_open_multicast(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
ssdp_open_multicast_sock	src/wps/wps_upnp_i.h	/^int ssdp_open_multicast_sock(u32 ip_addr);$/;"	p	signature:(u32 ip_addr)
ssdp_open_multicast_sock	src/wps/wps_upnp_ssdp.c	/^int ssdp_open_multicast_sock(u32 ip_addr)$/;"	f	signature:(u32 ip_addr)
ssdp_parse_msearch	src/wps/wps_upnp_ssdp.c	/^static void ssdp_parse_msearch(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct sockaddr_in *client, const char *data)
ssdp_sd	src/wps/wps_er.h	/^	int ssdp_sd;$/;"	m	struct:wps_er	access:public
ssdp_sd	src/wps/wps_upnp_i.h	/^	int ssdp_sd; \/* receive discovery UPD packets on socket *\/$/;"	m	struct:upnp_wps_device_sm	access:public
ssdp_sd_registered	src/wps/wps_upnp_i.h	/^	int ssdp_sd_registered; \/* nonzero if we must unregister *\/$/;"	m	struct:upnp_wps_device_sm	access:public
ssi	src/drivers/driver.h	/^		int ssi;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
ssi_signal	src/ap/ap_list.h	/^	int ssi_signal;$/;"	m	struct:ap_info	access:public
ssi_signal	src/ap/hostapd.h	/^	u32 ssi_signal;$/;"	m	struct:hostapd_frame_info	access:public
ssi_signal	src/drivers/driver.h	/^		u32 ssi_signal;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
ssid	src/ap/ap_config.h	/^	char ssid[HOSTAPD_MAX_SSID_LEN + 1];$/;"	m	struct:hostapd_ssid	access:public
ssid	src/ap/ap_config.h	/^	struct hostapd_ssid ssid;               \/\/ ssid(服务集标识)控制块，用来区分不同的网络$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_ssid	access:public
ssid	src/ap/ap_list.h	/^	u8 ssid[33];$/;"	m	struct:ap_info	access:public
ssid	src/ap/sta_info.h	/^	struct hostapd_ssid *ssid; \/* SSID selection based on (Re)AssocReq *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::hostapd_ssid	access:public
ssid	src/ap/wpa_auth.h	/^	u8 ssid[SSID_LEN];$/;"	m	struct:wpa_auth_config	access:public
ssid	src/common/ieee802_11_common.h	/^	const u8 *ssid;$/;"	m	struct:ieee802_11_elems	access:public
ssid	src/common/privsep_commands.h	/^	u8 ssid[32];$/;"	m	struct:privsep_cmd_associate	access:public
ssid	src/drivers/Apple80211.h	/^	UInt8 ssid[32];$/;"	m	struct:WirelessNetworkInfo	access:public
ssid	src/drivers/Apple80211.h	/^	UInt8 ssid[34];$/;"	m	struct:WirelessInfo	access:public
ssid	src/drivers/driver.h	/^		const u8 *ssid;$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_ssid	access:public
ssid	src/drivers/driver.h	/^		u8 ssid[32];$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_filter	access:public
ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_driver_ap_params	access:public
ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_driver_associate_params	access:public
ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_driver_auth_params	access:public
ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_init_params	access:public
ssid	src/drivers/driver_hostap.h	/^			u8 ssid[32];$/;"	m	struct:prism2_hostapd_param::__anon78::__anon86	access:public
ssid	src/drivers/driver_nl80211.c	/^	u8 ssid[32];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
ssid	src/drivers/driver_test.c	/^	u8 ssid[32];$/;"	m	struct:test_driver_bss	file:	access:public
ssid	src/drivers/driver_wext.c	/^	u8 ssid[32];$/;"	m	struct:wext_scan_data	file:	access:public
ssid	src/p2p/p2p.h	/^	u8 ssid[32];$/;"	m	struct:p2p_go_neg_results	access:public
ssid	src/p2p/p2p_i.h	/^	const u8 *ssid;$/;"	m	struct:p2p_message	access:public
ssid	src/p2p/p2p_i.h	/^	u8 ssid[32];$/;"	m	struct:p2p_data	access:public
ssid	src/rsn_supp/wpa.h	/^	const u8 *ssid;$/;"	m	struct:rsn_supp_config	access:public
ssid	src/rsn_supp/wpa_i.h	/^	u8 ssid[32];$/;"	m	struct:wpa_sm	access:public
ssid	src/wps/wps.h	/^	u8 ssid[32];$/;"	m	struct:wps_context	access:public
ssid	src/wps/wps.h	/^	u8 ssid[32];$/;"	m	struct:wps_credential	access:public
ssid	src/wps/wps_i.h	/^	const u8 *ssid; \/* <= 32 octets *\/$/;"	m	struct:wps_parse_attr	access:public
ssid_len	src/ap/ap_config.h	/^	size_t ssid_len;$/;"	m	struct:hostapd_ssid	access:public
ssid_len	src/ap/ap_list.h	/^	size_t ssid_len;$/;"	m	struct:ap_info	access:public
ssid_len	src/ap/wpa_auth.h	/^	size_t ssid_len;$/;"	m	struct:wpa_auth_config	access:public
ssid_len	src/common/ieee802_11_common.h	/^	u8 ssid_len;$/;"	m	struct:ieee802_11_elems	access:public
ssid_len	src/common/privsep_commands.h	/^	size_t ssid_len;$/;"	m	struct:privsep_cmd_associate	access:public
ssid_len	src/drivers/Apple80211.h	/^	UInt16 ssid_len;$/;"	m	struct:WirelessNetworkInfo	access:public
ssid_len	src/drivers/driver.h	/^		size_t ssid_len;$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_filter	access:public
ssid_len	src/drivers/driver.h	/^		size_t ssid_len;$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_ssid	access:public
ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_ap_params	access:public
ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_associate_params	access:public
ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_auth_params	access:public
ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_init_params	access:public
ssid_len	src/drivers/driver_hostap.h	/^			u8 ssid_len;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon86	access:public
ssid_len	src/drivers/driver_nl80211.c	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
ssid_len	src/drivers/driver_test.c	/^	size_t ssid_len;$/;"	m	struct:test_driver_bss	file:	access:public
ssid_len	src/drivers/driver_wext.c	/^	size_t ssid_len;$/;"	m	struct:wext_scan_data	file:	access:public
ssid_len	src/p2p/p2p.h	/^	size_t ssid_len;$/;"	m	struct:p2p_go_neg_results	access:public
ssid_len	src/p2p/p2p_i.h	/^	size_t ssid_len;$/;"	m	struct:p2p_data	access:public
ssid_len	src/rsn_supp/wpa.h	/^	size_t ssid_len;$/;"	m	struct:rsn_supp_config	access:public
ssid_len	src/rsn_supp/wpa_i.h	/^	size_t ssid_len;$/;"	m	struct:wpa_sm	access:public
ssid_len	src/wps/wps.h	/^	size_t ssid_len;$/;"	m	struct:wps_context	access:public
ssid_len	src/wps/wps.h	/^	size_t ssid_len;$/;"	m	struct:wps_credential	access:public
ssid_len	src/wps/wps_i.h	/^	size_t ssid_len;$/;"	m	struct:wps_parse_attr	access:public
ssid_postfix	src/p2p/p2p.h	/^	u8 ssid_postfix[32 - 9];$/;"	m	struct:p2p_config	access:public
ssid_postfix_len	src/p2p/p2p.h	/^	size_t ssid_postfix_len;$/;"	m	struct:p2p_config	access:public
ssid_probe	src/ap/sta_info.h	/^	struct hostapd_ssid *ssid_probe; \/* SSID selection based on ProbeReq *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::hostapd_ssid	access:public
ssid_set	src/ap/ap_config.h	/^	int ssid_set;$/;"	m	struct:hostapd_ssid	access:public
ssid_set	src/p2p/p2p_i.h	/^	int ssid_set;$/;"	m	struct:p2p_data	access:public
ssids	src/drivers/driver.h	/^		struct wpa_driver_scan_ssid ssids[WPAS_MAX_SCAN_SSIDS];$/;"	m	struct:wpa_event_data::scan_info	typeref:struct:wpa_event_data::scan_info::wpa_driver_scan_ssid	access:public
ssids	src/drivers/driver.h	/^	} ssids[WPAS_MAX_SCAN_SSIDS];$/;"	m	struct:wpa_driver_scan_params	typeref:struct:wpa_driver_scan_params::wpa_driver_scan_ssid	access:public
ssl	src/crypto/tls_openssl.c	/^	SSL *ssl;$/;"	m	struct:tls_connection	file:	access:public
ssl	src/eap_peer/eap_fast.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_ssl_data	file:	access:public
ssl	src/eap_peer/eap_peap.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_ssl_data	file:	access:public
ssl	src/eap_peer/eap_tls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_tls_data	typeref:struct:eap_tls_data::eap_ssl_data	file:	access:public
ssl	src/eap_peer/eap_ttls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_ssl_data	file:	access:public
ssl	src/eap_server/eap_server_fast.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_fast_data	typeref:struct:eap_fast_data::eap_ssl_data	file:	access:public
ssl	src/eap_server/eap_server_peap.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_peap_data	typeref:struct:eap_peap_data::eap_ssl_data	file:	access:public
ssl	src/eap_server/eap_server_tls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_tls_data	typeref:struct:eap_tls_data::eap_ssl_data	file:	access:public
ssl	src/eap_server/eap_server_ttls.c	/^	struct eap_ssl_data ssl;$/;"	m	struct:eap_ttls_data	typeref:struct:eap_ttls_data::eap_ssl_data	file:	access:public
ssl_ctx	src/ap/hostapd.h	/^	void *ssl_ctx;$/;"	m	struct:hostapd_data	access:public
ssl_ctx	src/eap_peer/eap_i.h	/^	void *ssl_ctx;$/;"	m	struct:eap_sm	access:public
ssl_ctx	src/eap_server/eap.h	/^	void *ssl_ctx;$/;"	m	struct:eap_config	access:public
ssl_ctx	src/eap_server/eap_i.h	/^	void *ssl_ctx;$/;"	m	struct:eap_sm	access:public
ssl_ctx	src/eapol_auth/eapol_auth_sm.h	/^	void *ssl_ctx;$/;"	m	struct:eapol_auth_config	access:public
ssl_ctx	src/radius/radius_server.c	/^	void *ssl_ctx;$/;"	m	struct:radius_server_data	file:	access:public
ssl_ctx	src/radius/radius_server.h	/^	void *ssl_ctx;$/;"	m	struct:radius_server_conf	access:public
ssl_in	src/crypto/tls_openssl.c	/^	BIO *ssl_in, *ssl_out;$/;"	m	struct:tls_connection	file:	access:public
ssl_info_cb	src/crypto/tls_openssl.c	/^static void ssl_info_cb(const SSL *ssl, int where, int ret)$/;"	f	file:	signature:(const SSL *ssl, int where, int ret)
ssl_out	src/crypto/tls_openssl.c	/^	BIO *ssl_in, *ssl_out;$/;"	m	struct:tls_connection	file:	access:public
sspi	src/crypto/tls_schannel.c	/^	PSecurityFunctionTable sspi;$/;"	m	struct:tls_global	file:	access:public
sta	src/eapol_auth/eapol_auth_sm_i.h	/^	void *sta; \/* station context pointer to use in callbacks 指向对应站表元素控制块*\/$/;"	m	struct:eapol_state_machine	access:public
sta	src/wps/wps_er.h	/^	struct dl_list sta; \/* list of STAs\/Enrollees using this AP *\/$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::dl_list	access:public
sta_add	src/drivers/driver.h	/^	int (*sta_add)(void *priv, struct hostapd_sta_add_params *params);$/;"	m	struct:wpa_driver_ops	access:public
sta_addr	src/common/ieee802_11_defs.h	/^					u8 sta_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
sta_addr	src/common/ieee802_11_defs.h	/^					u8 sta_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
sta_addr	src/drivers/driver_hostap.h	/^	u8 sta_addr[ETH_ALEN];$/;"	m	struct:prism2_hostapd_param	access:public
sta_aid	src/ap/hostapd.h	/^	u32 sta_aid[AID_WORDS];$/;"	m	struct:hostapd_data	access:public
sta_assoc	src/drivers/driver.h	/^	 int (*sta_assoc)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
sta_auth	src/drivers/driver.h	/^	 int (*sta_auth)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
sta_authorized_cb	src/ap/hostapd.h	/^	void (*sta_authorized_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:hostapd_data	access:public
sta_authorized_cb_ctx	src/ap/hostapd.h	/^	void *sta_authorized_cb_ctx;$/;"	m	struct:hostapd_data	access:public
sta_clear_stats	src/drivers/driver.h	/^	int (*sta_clear_stats)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
sta_deauth	src/drivers/driver.h	/^	int (*sta_deauth)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
sta_disassoc	src/drivers/driver.h	/^	int (*sta_disassoc)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
sta_entry_alive	src/eapol_auth/eapol_auth_sm.h	/^	int (*sta_entry_alive)(void *ctx, const u8 *addr);                      \/\/ ieee802_1x_sta_entry_alive$/;"	m	struct:eapol_auth_cb	access:public
sta_flags_nl80211	src/drivers/driver_nl80211.c	/^static u32 sta_flags_nl80211(int flags)$/;"	f	file:	signature:(int flags)
sta_hash	src/ap/hostapd.h	/^	struct sta_info *sta_hash[STA_HASH_SIZE];   \/\/ 拉链式hash表，记录了所有站表入口$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::sta_info	access:public
sta_id_search	src/ap/ieee802_1x.c	/^struct sta_id_search {$/;"	s	file:
sta_id_search::identifier	src/ap/ieee802_1x.c	/^	u8 identifier;$/;"	m	struct:sta_id_search	file:	access:public
sta_id_search::sm	src/ap/ieee802_1x.c	/^	struct eapol_state_machine *sm;$/;"	m	struct:sta_id_search	typeref:struct:sta_id_search::eapol_state_machine	file:	access:public
sta_info	src/ap/sta_info.h	/^struct sta_info {$/;"	s
sta_info::STA_DEAUTH	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
sta_info::STA_DISASSOC	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
sta_info::STA_NULLFUNC	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
sta_info::STA_REMOVE	src/ap/sta_info.h	/^		STA_NULLFUNC = 0, STA_DISASSOC, STA_DEAUTH, STA_REMOVE$/;"	e	enum:sta_info::__anon12
sta_info::acct_input_gigawords	src/ap/sta_info.h	/^	u32 acct_input_gigawords; \/* Acct-Input-Gigawords *\/$/;"	m	struct:sta_info	access:public
sta_info::acct_interim_interval	src/ap/sta_info.h	/^	int acct_interim_interval; \/* Acct-Interim-Interval     描述了对于某个确定的会话，中间更新流量信息的时间间隔  *\/$/;"	m	struct:sta_info	access:public
sta_info::acct_output_gigawords	src/ap/sta_info.h	/^	u32 acct_output_gigawords; \/* Acct-Output-Gigawords *\/$/;"	m	struct:sta_info	access:public
sta_info::acct_session_id_hi	src/ap/sta_info.h	/^	u32 acct_session_id_hi;$/;"	m	struct:sta_info	access:public
sta_info::acct_session_id_lo	src/ap/sta_info.h	/^	u32 acct_session_id_lo;$/;"	m	struct:sta_info	access:public
sta_info::acct_session_start	src/ap/sta_info.h	/^	time_t acct_session_start;$/;"	m	struct:sta_info	access:public
sta_info::acct_session_started	src/ap/sta_info.h	/^	int acct_session_started;$/;"	m	struct:sta_info	access:public
sta_info::acct_terminate_cause	src/ap/sta_info.h	/^	int acct_terminate_cause; \/* Acct-Terminate-Cause *\/$/;"	m	struct:sta_info	access:public
sta_info::addr	src/ap/sta_info.h	/^	u8 addr[6];     \/\/ 每个元素都对应一个唯一的mac地址$/;"	m	struct:sta_info	access:public
sta_info::aid	src/ap/sta_info.h	/^	u16 aid; \/* STA's unique AID (1 .. 2007) or 0 if not yet assigned *\/$/;"	m	struct:sta_info	access:public
sta_info::auth_alg	src/ap/sta_info.h	/^	u16 auth_alg;$/;"	m	struct:sta_info	access:public
sta_info::capability	src/ap/sta_info.h	/^	u16 capability;$/;"	m	struct:sta_info	access:public
sta_info::challenge	src/ap/sta_info.h	/^	u8 *challenge; \/* IEEE 802.11 Shared Key Authentication Challenge *\/$/;"	m	struct:sta_info	access:public
sta_info::deauth_reason	src/ap/sta_info.h	/^	u16 deauth_reason;$/;"	m	struct:sta_info	access:public
sta_info::disassoc_reason	src/ap/sta_info.h	/^	u16 disassoc_reason;$/;"	m	struct:sta_info	access:public
sta_info::eapol_sm	src/ap/sta_info.h	/^	struct eapol_state_machine *eapol_sm;       \/\/ eapol层状态机组$/;"	m	struct:sta_info	typeref:struct:sta_info::eapol_state_machine	access:public
sta_info::flags	src/ap/sta_info.h	/^	u32 flags; \/* Bitfield of WLAN_STA_* *\/$/;"	m	struct:sta_info	access:public
sta_info::hnext	src/ap/sta_info.h	/^	struct sta_info *hnext; \/* next entry in hash table list *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::sta_info	access:public
sta_info::ht_20mhz_set	src/ap/sta_info.h	/^	unsigned int ht_20mhz_set:1;$/;"	m	struct:sta_info	access:public
sta_info::ht_capabilities	src/ap/sta_info.h	/^	struct ieee80211_ht_capabilities *ht_capabilities;$/;"	m	struct:sta_info	typeref:struct:sta_info::ieee80211_ht_capabilities	access:public
sta_info::last_assoc_req	src/ap/sta_info.h	/^	struct ieee80211_mgmt *last_assoc_req;$/;"	m	struct:sta_info	typeref:struct:sta_info::ieee80211_mgmt	access:public
sta_info::last_rx_bytes	src/ap/sta_info.h	/^	unsigned long last_rx_bytes;$/;"	m	struct:sta_info	access:public
sta_info::last_tx_bytes	src/ap/sta_info.h	/^	unsigned long last_tx_bytes;$/;"	m	struct:sta_info	access:public
sta_info::listen_interval	src/ap/sta_info.h	/^	u16 listen_interval; \/* or beacon_int for APs *\/$/;"	m	struct:sta_info	access:public
sta_info::next	src/ap/sta_info.h	/^	struct sta_info *next; \/* next entry in sta list *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::sta_info	access:public
sta_info::no_ht_gf_set	src/ap/sta_info.h	/^	unsigned int no_ht_gf_set:1;$/;"	m	struct:sta_info	access:public
sta_info::no_ht_set	src/ap/sta_info.h	/^	unsigned int no_ht_set:1;$/;"	m	struct:sta_info	access:public
sta_info::no_p2p_set	src/ap/sta_info.h	/^	unsigned int no_p2p_set:1;$/;"	m	struct:sta_info	access:public
sta_info::no_short_preamble_set	src/ap/sta_info.h	/^	unsigned int no_short_preamble_set:1;$/;"	m	struct:sta_info	access:public
sta_info::no_short_slot_time_set	src/ap/sta_info.h	/^	unsigned int no_short_slot_time_set:1;$/;"	m	struct:sta_info	access:public
sta_info::nonerp_set	src/ap/sta_info.h	/^	unsigned int nonerp_set:1;$/;"	m	struct:sta_info	access:public
sta_info::p2p_ie	src/ap/sta_info.h	/^	struct wpabuf *p2p_ie; \/* P2P IE from (Re)Association Request *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::wpabuf	access:public
sta_info::preauth_iface	src/ap/sta_info.h	/^	struct rsn_preauth_interface *preauth_iface;$/;"	m	struct:sta_info	typeref:struct:sta_info::rsn_preauth_interface	access:public
sta_info::previous_ap	src/ap/sta_info.h	/^	u8 previous_ap[6];$/;"	m	struct:sta_info	access:public
sta_info::sa_query_count	src/ap/sta_info.h	/^	int sa_query_count; \/* number of pending SA Query requests;$/;"	m	struct:sta_info	access:public
sta_info::sa_query_start	src/ap/sta_info.h	/^	struct os_time sa_query_start;$/;"	m	struct:sta_info	typeref:struct:sta_info::os_time	access:public
sta_info::sa_query_timed_out	src/ap/sta_info.h	/^	int sa_query_timed_out;$/;"	m	struct:sta_info	access:public
sta_info::sa_query_trans_id	src/ap/sta_info.h	/^	u8 *sa_query_trans_id; \/* buffer of WLAN_SA_QUERY_TR_ID_LEN *$/;"	m	struct:sta_info	access:public
sta_info::ssid	src/ap/sta_info.h	/^	struct hostapd_ssid *ssid; \/* SSID selection based on (Re)AssocReq *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::hostapd_ssid	access:public
sta_info::ssid_probe	src/ap/sta_info.h	/^	struct hostapd_ssid *ssid_probe; \/* SSID selection based on ProbeReq *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::hostapd_ssid	access:public
sta_info::supported_rates	src/ap/sta_info.h	/^	u8 supported_rates[WLAN_SUPP_RATES_MAX];$/;"	m	struct:sta_info	access:public
sta_info::supported_rates_len	src/ap/sta_info.h	/^	int supported_rates_len;$/;"	m	struct:sta_info	access:public
sta_info::timeout_next	src/ap/sta_info.h	/^	} timeout_next;$/;"	m	struct:sta_info	typeref:enum:sta_info::__anon12	access:public
sta_info::vlan_id	src/ap/sta_info.h	/^	int vlan_id;$/;"	m	struct:sta_info	access:public
sta_info::wpa_sm	src/ap/sta_info.h	/^	struct wpa_state_machine *wpa_sm;$/;"	m	struct:sta_info	typeref:struct:sta_info::wpa_state_machine	access:public
sta_info::wps_ie	src/ap/sta_info.h	/^	struct wpabuf *wps_ie; \/* WPS IE from (Re)Association Request *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::wpabuf	access:public
sta_list	src/ap/hostapd.h	/^	struct sta_info *sta_list; \/* STA info list head 站表链表头*\/$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::sta_info	access:public
sta_remove	src/drivers/driver.h	/^	int (*sta_remove)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
sta_set_flags	src/drivers/driver.h	/^	int (*sta_set_flags)(void *priv, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
start	src/crypto/tls_schannel.c	/^	int established, start;$/;"	m	struct:tls_connection	file:	access:public
startCount	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int startCount;$/;"	m	struct:eapol_sm	file:	access:public
startPeriod	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int startPeriod; \/* dot1xSuppStartPeriod *\/$/;"	m	struct:eapol_sm	file:	access:public
startWhen	src/eapol_supp/eapol_supp_sm.c	/^	unsigned int startWhen;$/;"	m	struct:eapol_sm	file:	access:public
start_addr	src/drivers/driver_hostap.h	/^	u32 start_addr;$/;"	m	struct:prism2_download_param	access:public
start_after_scan	src/p2p/p2p_i.h	/^	} start_after_scan;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_after_scan	access:public
start_listen	src/p2p/p2p.h	/^	int (*start_listen)(void *ctx, unsigned int freq,$/;"	m	struct:p2p_config	access:public
start_reauth	src/eap_server/eap_i.h	/^	Boolean start_reauth;$/;"	m	struct:eap_sm	access:public
start_time	src/p2p/p2p_i.h	/^	u32 start_time;$/;"	m	struct:p2p_noa_desc	access:public
start_time	src/radius/radius_server.c	/^	struct os_time start_time;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::os_time	file:	access:public
started	src/ap/wpa_auth_i.h	/^	unsigned int started:1;$/;"	m	struct:wpa_state_machine	access:public
started	src/wps/wps_upnp_i.h	/^	int started; \/* nonzero if we are active *\/$/;"	m	struct:upnp_wps_device_sm	access:public
state	src/crypto/md4-internal.c	/^	u32 state[4];			\/* state *\/$/;"	m	struct:MD4Context	file:	access:public
state	src/crypto/sha1_i.h	/^	u32 state[5];$/;"	m	struct:SHA1Context	access:public
state	src/crypto/sha256-internal.c	/^	u32 state[8], curlen;$/;"	m	struct:sha256_state	file:	access:public
state	src/eap_peer/eap_aka.c	/^	} state;$/;"	m	struct:eap_aka_data	typeref:enum:eap_aka_data::__anon166	file:	access:public
state	src/eap_peer/eap_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_gpsk_data	typeref:enum:eap_gpsk_data::__anon180	file:	access:public
state	src/eap_peer/eap_ikev2.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_ikev2_data	typeref:enum:eap_ikev2_data::__anon185	file:	access:public
state	src/eap_peer/eap_leap.c	/^	} state;$/;"	m	struct:eap_leap_data	typeref:enum:eap_leap_data::__anon167	file:	access:public
state	src/eap_peer/eap_pax.c	/^	enum { PAX_INIT, PAX_STD_2_SENT, PAX_DONE } state;$/;"	m	struct:eap_pax_data	typeref:enum:eap_pax_data::__anon169	file:	access:public
state	src/eap_peer/eap_psk.c	/^	enum { PSK_INIT, PSK_MAC_SENT, PSK_DONE } state;$/;"	m	struct:eap_psk_data	typeref:enum:eap_psk_data::__anon178	file:	access:public
state	src/eap_peer/eap_pwd.c	/^	} state;$/;"	m	struct:eap_pwd_data	typeref:enum:eap_pwd_data::__anon179	file:	access:public
state	src/eap_peer/eap_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	m	struct:eap_sake_data	typeref:enum:eap_sake_data::__anon164	file:	access:public
state	src/eap_peer/eap_sim.c	/^	} state;$/;"	m	struct:eap_sim_data	typeref:enum:eap_sim_data::__anon168	file:	access:public
state	src/eap_peer/eap_tnc.c	/^	enum { WAIT_START, PROC_MSG, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_tnc_data	typeref:enum:eap_tnc_data::__anon163	file:	access:public
state	src/eap_peer/eap_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS } state;$/;"	m	struct:eap_vendor_test_data	typeref:enum:eap_vendor_test_data::__anon176	file:	access:public
state	src/eap_peer/eap_wsc.c	/^	enum { WAIT_START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::__anon181	file:	access:public
state	src/eap_peer/ikev2.h	/^		state;$/;"	m	struct:ikev2_responder_data	typeref:enum:ikev2_responder_data::__anon173	access:public
state	src/eap_server/eap_server_aka.c	/^	} state;$/;"	m	struct:eap_aka_data	typeref:enum:eap_aka_data::__anon139	file:	access:public
state	src/eap_server/eap_server_fast.c	/^	} state;$/;"	m	struct:eap_fast_data	typeref:enum:eap_fast_data::__anon146	file:	access:public
state	src/eap_server/eap_server_gpsk.c	/^	enum { GPSK_1, GPSK_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_gpsk_data	typeref:enum:eap_gpsk_data::__anon152	file:	access:public
state	src/eap_server/eap_server_gtc.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	m	struct:eap_gtc_data	typeref:enum:eap_gtc_data::__anon141	file:	access:public
state	src/eap_server/eap_server_identity.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;$/;"	m	struct:eap_identity_data	typeref:enum:eap_identity_data::__anon129	file:	access:public
state	src/eap_server/eap_server_ikev2.c	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_ikev2_data	typeref:enum:eap_ikev2_data::__anon137	file:	access:public
state	src/eap_server/eap_server_md5.c	/^	enum { CONTINUE, SUCCESS, FAILURE } state;  \/\/ MD5状态$/;"	m	struct:eap_md5_data	typeref:enum:eap_md5_data::__anon142	file:	access:public
state	src/eap_server/eap_server_mschapv2.c	/^	enum { CHALLENGE, SUCCESS_REQ, FAILURE_REQ, SUCCESS, FAILURE } state;$/;"	m	struct:eap_mschapv2_data	typeref:enum:eap_mschapv2_data::__anon140	file:	access:public
state	src/eap_server/eap_server_pax.c	/^	enum { PAX_STD_1, PAX_STD_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_pax_data	typeref:enum:eap_pax_data::__anon143	file:	access:public
state	src/eap_server/eap_server_peap.c	/^	} state;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon160	file:	access:public
state	src/eap_server/eap_server_psk.c	/^	enum { PSK_1, PSK_3, SUCCESS, FAILURE } state;$/;"	m	struct:eap_psk_data	typeref:enum:eap_psk_data::__anon131	file:	access:public
state	src/eap_server/eap_server_pwd.c	/^	} state;$/;"	m	struct:eap_pwd_data	typeref:enum:eap_pwd_data::__anon136	file:	access:public
state	src/eap_server/eap_server_sake.c	/^	enum { IDENTITY, CHALLENGE, CONFIRM, SUCCESS, FAILURE } state;$/;"	m	struct:eap_sake_data	typeref:enum:eap_sake_data::__anon127	file:	access:public
state	src/eap_server/eap_server_sim.c	/^	} state;$/;"	m	struct:eap_sim_data	typeref:enum:eap_sim_data::__anon130	file:	access:public
state	src/eap_server/eap_server_tls.c	/^	enum { START, CONTINUE, SUCCESS, FAILURE } state;$/;"	m	struct:eap_tls_data	typeref:enum:eap_tls_data::__anon153	file:	access:public
state	src/eap_server/eap_server_tnc.c	/^	} state;$/;"	m	struct:eap_tnc_data	typeref:enum:eap_tnc_data::eap_tnc_state	file:	access:public
state	src/eap_server/eap_server_ttls.c	/^	} state;$/;"	m	struct:eap_ttls_data	typeref:enum:eap_ttls_data::__anon126	file:	access:public
state	src/eap_server/eap_server_vendor_test.c	/^	enum { INIT, CONFIRM, SUCCESS, FAILURE } state;$/;"	m	struct:eap_vendor_test_data	typeref:enum:eap_vendor_test_data::__anon154	file:	access:public
state	src/eap_server/eap_server_wsc.c	/^	enum { START, MESG, FRAG_ACK, WAIT_FRAG_ACK, DONE, FAIL } state;$/;"	m	struct:eap_wsc_data	typeref:enum:eap_wsc_data::__anon132	file:	access:public
state	src/eap_server/eap_sim_db.c	/^	enum { PENDING, SUCCESS, FAILURE } state;$/;"	m	struct:eap_sim_db_pending	typeref:enum:eap_sim_db_pending::__anon148	file:	access:public
state	src/eap_server/eap_tls_common.h	/^	enum { MSG, FRAG_ACK, WAIT_FRAG_ACK } state;$/;"	m	struct:eap_ssl_data	typeref:enum:eap_ssl_data::__anon138	access:public
state	src/eap_server/ikev2.h	/^	enum { SA_INIT, SA_AUTH, CHILD_SA, IKEV2_DONE } state;$/;"	m	struct:ikev2_initiator_data	typeref:enum:ikev2_initiator_data::__anon134	access:public
state	src/p2p/p2p_i.h	/^	} state;$/;"	m	struct:p2p_data	typeref:enum:p2p_data::p2p_state	access:public
state	src/tls/tlsv1_client_i.h	/^	} state;$/;"	m	struct:tlsv1_client	typeref:enum:tlsv1_client::__anon108	access:public
state	src/tls/tlsv1_server_i.h	/^	} state;$/;"	m	struct:tlsv1_server	typeref:enum:tlsv1_server::__anon105	access:public
state	src/wps/wps.h	/^		} state;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	typeref:enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31	access:public
state	src/wps/wps_i.h	/^	} state;$/;"	m	struct:wps_data	typeref:enum:wps_data::__anon29	access:public
state	src/wps/wps_upnp_i.h	/^	int state;$/;"	m	struct:advertisement_state_machine	access:public
static_wep_only	src/wps/wps.h	/^	int static_wep_only;$/;"	m	struct:wps_registrar_config	access:public
static_wep_only	src/wps/wps_registrar.c	/^	int static_wep_only;$/;"	m	struct:wps_registrar	file:	access:public
status	src/ap/iapp.c	/^	u8 status;$/;"	m	struct:iapp_cache_response	file:	access:public
status	src/ap/iapp.c	/^	u8 status;$/;"	m	struct:iapp_move_response	file:	access:public
status	src/drivers/wireless_copy.h	/^	__u16		status;		\/* Status$/;"	m	struct:iw_statistics	access:public
status	src/eap_common/eap_tlv_common.h	/^	be16 status;$/;"	m	struct:eap_tlv_intermediate_result_tlv	access:public
status	src/eap_common/eap_tlv_common.h	/^	be16 status;$/;"	m	struct:eap_tlv_result_tlv	access:public
status	src/p2p/p2p.h	/^	int status;$/;"	m	struct:p2p_go_neg_results	access:public
status	src/p2p/p2p_i.h	/^	const u8 *status;$/;"	m	struct:p2p_message	access:public
status	src/p2p/p2p_i.h	/^	int status; \/* enum p2p_status_code *\/$/;"	m	struct:p2p_device	access:public
status_code	src/common/ieee802_11_defs.h	/^					le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
status_code	src/common/ieee802_11_defs.h	/^					u8 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
status_code	src/common/ieee802_11_defs.h	/^			le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
status_code	src/common/ieee802_11_defs.h	/^			le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
status_code	src/common/wpa_common.h	/^	le16 status_code;$/;"	m	struct:rsn_rdie	access:public
status_code	src/drivers/driver.h	/^		u16 status_code;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
status_code	src/drivers/driver.h	/^		u16 status_code;$/;"	m	struct:wpa_event_data::auth_info	access:public
status_code	src/rsn_supp/tdls.c	/^		u16 status_code;$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
stbc_param	src/common/ieee802_11_defs.h	/^	le16 stbc_param;$/;"	m	struct:ieee80211_ht_operation	access:public
stk	src/rsn_supp/peerkey.h	/^	struct wpa_ptk stk, tstk;$/;"	m	struct:wpa_peerkey	typeref:struct:wpa_peerkey::wpa_ptk	access:public
stk_set	src/rsn_supp/peerkey.h	/^	int stk_set, tstk_set;$/;"	m	struct:wpa_peerkey	access:public
stkstart	src/drivers/driver.h	/^	struct stkstart {$/;"	s	union:wpa_event_data	access:public
stkstart	src/drivers/driver.h	/^	} stkstart;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::stkstart	access:public
stop_listen	src/p2p/p2p.h	/^	void (*stop_listen)(void *ctx);$/;"	m	struct:p2p_config	access:public
stop_request	src/l2_packet/l2_packet_ndis.c	/^	HANDLE stop_request;$/;"	m	struct:l2_packet_ndisuio_global	file:	access:public
stop_sched_scan	src/drivers/driver.h	/^	int (*stop_sched_scan)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
str	src/utils/edit.c	/^	char str[1];$/;"	m	struct:edit_history	file:	access:public
str_starts	src/ap/wps_hostapd.c	/^static int str_starts(const char *str, const char *start)$/;"	f	file:	signature:(const char *str, const char *start)
str_starts	src/wps/wps_upnp_ssdp.c	/^static int str_starts(const char *str, const char *start)$/;"	f	file:	signature:(const char *str, const char *start)
strcasecmp	src/utils/os.h	500;"	d
strchr	src/utils/os.h	502;"	d
strchr	src/utils/os.h	503;"	d
strcmp	src/utils/os.h	504;"	d
strcmp	src/utils/os.h	505;"	d
strcpy	src/utils/os.h	515;"	d
strdup	src/utils/os.h	497;"	d
strdup	src/utils/os.h	498;"	d
strlen	src/utils/os.h	499;"	d
strncasecmp	src/utils/os.h	501;"	d
strncmp	src/utils/os.h	506;"	d
strncmp	src/utils/os.h	507;"	d
strncpy	src/utils/os.h	508;"	d
strncpy	src/utils/os.h	509;"	d
strrchr	src/utils/os.h	510;"	d
strstr	src/utils/os.h	511;"	d
stsl_negotiations	src/ap/wpa_auth_i.h	/^	struct wpa_stsl_negotiation *stsl_negotiations;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_stsl_negotiation	access:public
stype	src/drivers/driver.h	/^		u16 stype;$/;"	m	struct:wpa_event_data::tx_status	access:public
subject	src/crypto/tls.h	/^		const char *subject;$/;"	m	struct:tls_event_data::__anon194	access:public
subject	src/crypto/tls.h	/^		const char *subject;$/;"	m	struct:tls_event_data::__anon195	access:public
subject	src/tls/x509v3.h	/^	struct x509_name subject;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_name	access:public
subject_match	src/crypto/tls.h	/^	const char *subject_match;$/;"	m	struct:tls_connection_params	access:public
subject_match	src/crypto/tls_gnutls.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
subject_match	src/crypto/tls_openssl.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
subject_match	src/eap_peer/eap_config.h	/^	u8 *subject_match;$/;"	m	struct:eap_peer_config	access:public
subject_match2	src/eap_peer/eap_config.h	/^	u8 *subject_match2;$/;"	m	struct:eap_peer_config	access:public
subscr_addr	src/wps/wps_upnp_i.h	/^struct subscr_addr {$/;"	s
subscr_addr::domain_and_port	src/wps/wps_upnp_i.h	/^	char *domain_and_port; \/* domain and port part of url *\/$/;"	m	struct:subscr_addr	access:public
subscr_addr::list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:subscr_addr	typeref:struct:subscr_addr::dl_list	access:public
subscr_addr::num_failures	src/wps/wps_upnp_i.h	/^	unsigned num_failures;$/;"	m	struct:subscr_addr	access:public
subscr_addr::path	src/wps/wps_upnp_i.h	/^	char *path; \/* "filepath" part of url (from "mem") *\/$/;"	m	struct:subscr_addr	access:public
subscr_addr::saddr	src/wps/wps_upnp_i.h	/^	struct sockaddr_in saddr; \/* address for doing connect *\/$/;"	m	struct:subscr_addr	typeref:struct:subscr_addr::sockaddr_in	access:public
subscr_addr_add_url	src/wps/wps_upnp.c	/^static void subscr_addr_add_url(struct subscription *s, const char *url,$/;"	f	file:	signature:(struct subscription *s, const char *url, size_t url_len)
subscr_addr_delete	src/wps/wps_upnp.c	/^void subscr_addr_delete(struct subscr_addr *a)$/;"	f	signature:(struct subscr_addr *a)
subscr_addr_delete	src/wps/wps_upnp_i.h	/^void subscr_addr_delete(struct subscr_addr *a);$/;"	p	signature:(struct subscr_addr *a)
subscr_addr_free_all	src/wps/wps_upnp.c	/^static void subscr_addr_free_all(struct subscription *s)$/;"	f	file:	signature:(struct subscription *s)
subscr_addr_list_create	src/wps/wps_upnp.c	/^static void subscr_addr_list_create(struct subscription *s,$/;"	f	file:	signature:(struct subscription *s, const char *url_list)
subscribed	src/wps/wps_er.h	/^	int subscribed;$/;"	m	struct:wps_er_ap	access:public
subscriber_sequence	src/wps/wps_upnp_event.c	/^	unsigned subscriber_sequence;   \/* which event for this subscription*\/$/;"	m	struct:wps_event_	file:	access:public
subscription	src/wps/wps_upnp_i.h	/^struct subscription {$/;"	s
subscription::addr_list	src/wps/wps_upnp_i.h	/^	struct dl_list addr_list;$/;"	m	struct:subscription	typeref:struct:subscription::dl_list	access:public
subscription::authorized_macs	src/wps/wps_upnp_i.h	/^	u8 authorized_macs[WPS_MAX_AUTHORIZED_MACS][ETH_ALEN];$/;"	m	struct:subscription	access:public
subscription::config_methods	src/wps/wps_upnp_i.h	/^	u16 config_methods;$/;"	m	struct:subscription	access:public
subscription::current_event	src/wps/wps_upnp_i.h	/^	struct wps_event_ *current_event; \/* non-NULL if being sent (not in q)$/;"	m	struct:subscription	typeref:struct:subscription::wps_event_	access:public
subscription::dev_password_id	src/wps/wps_upnp_i.h	/^	u16 dev_password_id;$/;"	m	struct:subscription	access:public
subscription::event_queue	src/wps/wps_upnp_i.h	/^	struct dl_list event_queue; \/* Queued event messages. *\/$/;"	m	struct:subscription	typeref:struct:subscription::dl_list	access:public
subscription::last_event_failed	src/wps/wps_upnp_i.h	/^	int last_event_failed; \/* Whether delivery of last event failed *\/$/;"	m	struct:subscription	access:public
subscription::list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:subscription	typeref:struct:subscription::dl_list	access:public
subscription::next_subscriber_sequence	src/wps/wps_upnp_i.h	/^	unsigned next_subscriber_sequence; \/* number our messages *\/$/;"	m	struct:subscription	access:public
subscription::reg	src/wps/wps_upnp_i.h	/^	struct wps_registrar *reg;$/;"	m	struct:subscription	typeref:struct:subscription::wps_registrar	access:public
subscription::selected_registrar	src/wps/wps_upnp_i.h	/^	u8 selected_registrar;$/;"	m	struct:subscription	access:public
subscription::sm	src/wps/wps_upnp_i.h	/^	struct upnp_wps_device_sm *sm; \/* parent *\/$/;"	m	struct:subscription	typeref:struct:subscription::upnp_wps_device_sm	access:public
subscription::timeout_time	src/wps/wps_upnp_i.h	/^	time_t timeout_time; \/* when to age out the subscription *\/$/;"	m	struct:subscription	access:public
subscription::uuid	src/wps/wps_upnp_i.h	/^	u8 uuid[UUID_LEN];$/;"	m	struct:subscription	access:public
subscription_destroy	src/wps/wps_upnp.c	/^void subscription_destroy(struct subscription *s)$/;"	f	signature:(struct subscription *s)
subscription_destroy	src/wps/wps_upnp_i.h	/^void subscription_destroy(struct subscription *s);$/;"	p	signature:(struct subscription *s)
subscription_find	src/wps/wps_upnp.c	/^struct subscription * subscription_find(struct upnp_wps_device_sm *sm,$/;"	f	signature:(struct upnp_wps_device_sm *sm, const u8 uuid[UUID_LEN])
subscription_find	src/wps/wps_upnp_i.h	/^struct subscription * subscription_find(struct upnp_wps_device_sm *sm,$/;"	p	signature:(struct upnp_wps_device_sm *sm, const u8 uuid[UUID_LEN])
subscription_first_event	src/wps/wps_upnp.c	/^static int subscription_first_event(struct subscription *s)$/;"	f	file:	signature:(struct subscription *s)
subscription_list_age	src/wps/wps_upnp.c	/^static void subscription_list_age(struct upnp_wps_device_sm *sm, time_t now)$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, time_t now)
subscription_renew	src/wps/wps_upnp.c	/^struct subscription * subscription_renew(struct upnp_wps_device_sm *sm,$/;"	f	signature:(struct upnp_wps_device_sm *sm, const u8 uuid[UUID_LEN])
subscription_renew	src/wps/wps_upnp_i.h	/^struct subscription * subscription_renew(struct upnp_wps_device_sm *sm,$/;"	p	signature:(struct upnp_wps_device_sm *sm, const u8 uuid[UUID_LEN])
subscription_start	src/wps/wps_upnp.c	/^struct subscription * subscription_start(struct upnp_wps_device_sm *sm,$/;"	f	signature:(struct upnp_wps_device_sm *sm, const char *callback_urls)
subscription_start	src/wps/wps_upnp_i.h	/^struct subscription * subscription_start(struct upnp_wps_device_sm *sm,$/;"	p	signature:(struct upnp_wps_device_sm *sm, const char *callback_urls)
subscriptions	src/wps/wps_upnp_i.h	/^	struct dl_list subscriptions;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::dl_list	access:public
subtype	src/eap_common/eap_sake_common.h	/^	u8 subtype;$/;"	m	struct:eap_sake_hdr	access:public
subtype	src/eap_common/eap_tlv_common.h	/^	u8 subtype;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
success	src/eap_peer/eap_fast.c	/^	int success;$/;"	m	struct:eap_fast_data	file:	access:public
success	src/eap_peer/eap_mschapv2.c	/^	int success;$/;"	m	struct:eap_mschapv2_data	file:	access:public
suite	src/crypto/tls_gnutls.c	/^    uint8 suite[2];$/;"	m	struct:__anon191	file:	access:public
suite	src/tls/tlsv1_common.h	/^	u16 suite;$/;"	m	struct:tls_cipher_suite	access:public
sup_pmk_r1_name	src/ap/wpa_auth_i.h	/^	u8 sup_pmk_r1_name[WPA_PMK_NAME_LEN]; \/* PMKR1Name from EAPOL-Key$/;"	m	struct:wpa_state_machine	access:public
suppAbort	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppAbort;$/;"	m	struct:eapol_sm	file:	access:public
suppFail	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppFail;$/;"	m	struct:eapol_sm	file:	access:public
suppPortStatus	src/eapol_supp/eapol_supp_sm.c	/^	PortStatus suppPortStatus;  \/* dot1xSuppControlledPortStatus *\/$/;"	m	struct:eapol_sm	file:	access:public
suppStart	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppStart;$/;"	m	struct:eapol_sm	file:	access:public
suppSuccess	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppSuccess;$/;"	m	struct:eapol_sm	file:	access:public
suppTimeout	src/eapol_supp/eapol_supp_sm.c	/^	Boolean suppTimeout;$/;"	m	struct:eapol_sm	file:	access:public
supp_channels	src/common/ieee802_11_common.h	/^	const u8 *supp_channels;$/;"	m	struct:ieee802_11_elems	access:public
supp_channels_len	src/common/ieee802_11_common.h	/^	u8 supp_channels_len;$/;"	m	struct:ieee802_11_elems	access:public
supp_config_methods	src/drivers/driver.h	/^		u16 supp_config_methods;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
supp_rates	src/common/ieee802_11_common.h	/^	const u8 *supp_rates;$/;"	m	struct:ieee802_11_elems	access:public
supp_rates	src/drivers/driver.h	/^	const u8 *supp_rates;$/;"	m	struct:hostapd_sta_add_params	access:public
supp_rates	src/rsn_supp/tdls.c	/^	u8 supp_rates[IEEE80211_MAX_SUPP_RATES];$/;"	m	struct:wpa_tdls_peer	file:	access:public
supp_rates	src/rsn_supp/wpa_ie.h	/^	const u8 *supp_rates;$/;"	m	struct:wpa_eapol_ie_parse	access:public
supp_rates_11b_only	src/p2p/p2p.c	/^static int supp_rates_11b_only(struct ieee802_11_elems *elems)$/;"	f	file:	signature:(struct ieee802_11_elems *elems)
supp_rates_len	src/common/ieee802_11_common.h	/^	u8 supp_rates_len;$/;"	m	struct:ieee802_11_elems	access:public
supp_rates_len	src/drivers/driver.h	/^	size_t supp_rates_len;$/;"	m	struct:hostapd_sta_add_params	access:public
supp_rates_len	src/rsn_supp/tdls.c	/^	size_t supp_rates_len;$/;"	m	struct:wpa_tdls_peer	file:	access:public
supp_rates_len	src/rsn_supp/wpa_ie.h	/^	size_t supp_rates_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
supported_mcs_set	src/common/ieee802_11_defs.h	/^	u8 supported_mcs_set[16];$/;"	m	struct:ieee80211_ht_capabilities	access:public
supported_rates	src/ap/ap_config.h	/^	int *supported_rates;$/;"	m	struct:hostapd_config	access:public
supported_rates	src/ap/ap_list.h	/^	u8 supported_rates[WLAN_SUPP_RATES_MAX];$/;"	m	struct:ap_info	access:public
supported_rates	src/ap/sta_info.h	/^	u8 supported_rates[WLAN_SUPP_RATES_MAX];$/;"	m	struct:sta_info	access:public
supported_rates_len	src/ap/sta_info.h	/^	int supported_rates_len;$/;"	m	struct:sta_info	access:public
supported_types	src/eap_peer/tncc.c	/^	TNC_MessageTypeList supported_types;$/;"	m	struct:tnc_if_imc	file:	access:public
supported_types	src/eap_server/tncs.c	/^	TNC_MessageTypeList supported_types;$/;"	m	struct:tnc_if_imv	file:	access:public
surplus_bandwidth_allowance	src/common/ieee802_11_defs.h	/^	le16 surplus_bandwidth_allowance;$/;"	m	struct:wmm_tspec_element	access:public
suspend	src/drivers/driver.h	/^	void (*suspend)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
suspension_interval	src/common/ieee802_11_defs.h	/^	le32 suspension_interval;$/;"	m	struct:wmm_tspec_element	access:public
switch_count	src/common/ieee802_11_defs.h	/^					u8 switch_count;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
switch_mode	src/common/ieee802_11_defs.h	/^					u8 switch_mode;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon51	access:public
syms	src/utils/trace.c	/^static asymbol **syms = NULL;$/;"	v	file:
syslog_priority	src/utils/wpa_debug.c	/^static int syslog_priority(int level)$/;"	f	file:	signature:(int level)
table	src/utils/eloop.c	/^	struct eloop_sock *table;   \/\/ 列表$/;"	m	struct:eloop_sock_table	typeref:struct:eloop_sock_table::eloop_sock	file:	access:public
tag	src/tls/asn1.h	/^	unsigned int tag, length;$/;"	m	struct:asn1_hdr	access:public
tag_used	src/radius/radius.c	/^	int tag_used;$/;"	m	struct:radius_tunnel_attrs	file:	access:public
tail	src/drivers/driver.h	/^	const u8 *tail;$/;"	m	struct:wpa_driver_ap_params	access:public
tail_len	src/drivers/driver.h	/^	size_t tail_len;$/;"	m	struct:wpa_driver_ap_params	access:public
target_ap	src/drivers/driver.h	/^		u8 target_ap[ETH_ALEN];$/;"	m	struct:wpa_event_data::ft_ies	access:public
target_ap	src/rsn_supp/wpa_i.h	/^	u8 target_ap[ETH_ALEN]; \/* over-the-DS target AP *\/$/;"	m	struct:wpa_sm	access:public
target_ap_addr	src/common/ieee802_11_defs.h	/^					u8 target_ap_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
target_ap_addr	src/common/ieee802_11_defs.h	/^					u8 target_ap_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
tbs_cert_len	src/tls/x509v3.h	/^	size_t tbs_cert_len;$/;"	m	struct:x509_certificate	access:public
tbs_cert_start	src/tls/x509v3.h	/^	const u8 *tbs_cert_start;$/;"	m	struct:x509_certificate	access:public
tdls	src/ap/ap_config.h	/^	int tdls;$/;"	m	struct:hostapd_bss_config	access:public
tdls	src/drivers/driver.h	/^	struct tdls {$/;"	s	union:wpa_event_data	access:public
tdls	src/drivers/driver.h	/^	} tdls;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::tdls	access:public
tdls	src/rsn_supp/wpa_i.h	/^	struct wpa_tdls_peer *tdls;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_tdls_peer	access:public
tdls_disabled	src/rsn_supp/wpa_i.h	/^	int tdls_disabled;$/;"	m	struct:wpa_sm	access:public
tdls_external_setup	src/rsn_supp/wpa_i.h	/^	int tdls_external_setup;$/;"	m	struct:wpa_sm	access:public
tdls_get_capa	src/rsn_supp/wpa.h	/^	int (*tdls_get_capa)(void *ctx, int *tdls_supported,$/;"	m	struct:wpa_sm_ctx	access:public
tdls_oper	src/drivers/driver.h	/^	int (*tdls_oper)(void *priv, enum tdls_oper oper, const u8 *peer);$/;"	m	struct:wpa_driver_ops	access:public
tdls_oper	src/drivers/driver.h	/^enum tdls_oper {$/;"	g
tdls_oper	src/rsn_supp/wpa.h	/^	int (*tdls_oper)(void *ctx, int oper, const u8 *peer);$/;"	m	struct:wpa_sm_ctx	access:public
tdls_peer_addset	src/rsn_supp/wpa.h	/^	int (*tdls_peer_addset)(void *ctx, const u8 *addr, int add,$/;"	m	struct:wpa_sm_ctx	access:public
tdls_prohibited	src/rsn_supp/wpa_i.h	/^	int tdls_prohibited;$/;"	m	struct:wpa_sm	access:public
tdls_supported	src/rsn_supp/wpa_i.h	/^	int tdls_supported;$/;"	m	struct:wpa_sm	access:public
tdls_testing	src/rsn_supp/tdls.c	/^unsigned int tdls_testing = 0;$/;"	v
tek	src/eap_peer/eap_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
tek	src/eap_peer/eap_sake.c	/^	} tek;$/;"	m	struct:eap_sake_data	typeref:struct:eap_sake_data::__anon165	file:	access:public
tek	src/eap_server/eap_server_psk.c	/^	u8 ak[EAP_PSK_AK_LEN], kdk[EAP_PSK_KDK_LEN], tek[EAP_PSK_TEK_LEN];$/;"	m	struct:eap_psk_data	file:	access:public
tek	src/eap_server/eap_server_sake.c	/^	} tek;$/;"	m	struct:eap_sake_data	typeref:struct:eap_sake_data::__anon128	file:	access:public
term_event	src/utils/eloop_win.c	/^	HANDLE term_event;$/;"	m	struct:eloop_data	file:	access:public
term_signal	src/utils/eloop_win.c	/^	struct eloop_signal term_signal;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_signal	file:	access:public
terminate	src/utils/eloop.c	/^	int terminate;$/;"	m	struct:eloop_data	file:	access:public
terminate	src/utils/eloop_none.c	/^	int terminate;$/;"	m	struct:eloop_data	file:	access:public
terminate	src/utils/eloop_win.c	/^	int terminate;$/;"	m	struct:eloop_data	file:	access:public
terminating	src/drivers/ndis_events.c	/^	int terminating;$/;"	m	struct:ndis_events_data	file:	access:public
test_alloc_data	src/drivers/driver_test.c	/^static struct wpa_driver_test_data * test_alloc_data(void *ctx,$/;"	f	file:	signature:(void *ctx, const char *ifname)
test_client_socket	src/drivers/driver_test.c	/^struct test_client_socket {$/;"	s	file:
test_client_socket::addr	src/drivers/driver_test.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:test_client_socket	file:	access:public
test_client_socket::bss	src/drivers/driver_test.c	/^	struct test_driver_bss *bss;$/;"	m	struct:test_client_socket	typeref:struct:test_client_socket::test_driver_bss	file:	access:public
test_client_socket::next	src/drivers/driver_test.c	/^	struct test_client_socket *next;$/;"	m	struct:test_client_socket	typeref:struct:test_client_socket::test_client_socket	file:	access:public
test_client_socket::un	src/drivers/driver_test.c	/^	struct sockaddr_un un;$/;"	m	struct:test_client_socket	typeref:struct:test_client_socket::sockaddr_un	file:	access:public
test_client_socket::unlen	src/drivers/driver_test.c	/^	socklen_t unlen;$/;"	m	struct:test_client_socket	file:	access:public
test_dev_found	src/drivers/driver_test.c	/^static void test_dev_found(void *ctx, const u8 *addr,$/;"	f	file:	signature:(void *ctx, const u8 *addr, const struct p2p_peer_info *info, int new_device)
test_dir	src/drivers/driver_test.c	/^	char *test_dir;$/;"	m	struct:wpa_driver_test_data	file:	access:public
test_driver_assoc	src/drivers/driver_test.c	/^static void test_driver_assoc(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen, char *data)
test_driver_bss	src/drivers/driver_test.c	/^struct test_driver_bss {$/;"	s	file:
test_driver_bss::bss_ctx	src/drivers/driver_test.c	/^	void *bss_ctx;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::bssid	src/drivers/driver_test.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::drv	src/drivers/driver_test.c	/^	struct wpa_driver_test_data *drv;$/;"	m	struct:test_driver_bss	typeref:struct:test_driver_bss::wpa_driver_test_data	file:	access:public
test_driver_bss::ie	src/drivers/driver_test.c	/^	u8 *ie;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::ielen	src/drivers/driver_test.c	/^	size_t ielen;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::ifname	src/drivers/driver_test.c	/^	char ifname[IFNAMSIZ];$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::list	src/drivers/driver_test.c	/^	struct dl_list list;$/;"	m	struct:test_driver_bss	typeref:struct:test_driver_bss::dl_list	file:	access:public
test_driver_bss::privacy	src/drivers/driver_test.c	/^	int privacy;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::ssid	src/drivers/driver_test.c	/^	u8 ssid[32];$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::ssid_len	src/drivers/driver_test.c	/^	size_t ssid_len;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::wps_beacon_ie	src/drivers/driver_test.c	/^	u8 *wps_beacon_ie;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::wps_beacon_ie_len	src/drivers/driver_test.c	/^	size_t wps_beacon_ie_len;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::wps_probe_resp_ie	src/drivers/driver_test.c	/^	u8 *wps_probe_resp_ie;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss::wps_probe_resp_ie_len	src/drivers/driver_test.c	/^	size_t wps_probe_resp_ie_len;$/;"	m	struct:test_driver_bss	file:	access:public
test_driver_bss_add	src/drivers/driver_test.c	/^static int test_driver_bss_add(void *priv, const char *ifname, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const char *ifname, const u8 *bssid, void *bss_ctx, void **drv_priv)
test_driver_bss_remove	src/drivers/driver_test.c	/^static int test_driver_bss_remove(void *priv, const char *ifname)$/;"	f	file:	signature:(void *priv, const char *ifname)
test_driver_disassoc	src/drivers/driver_test.c	/^static void test_driver_disassoc(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen)
test_driver_eapol	src/drivers/driver_test.c	/^static void test_driver_eapol(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen, u8 *data, size_t datalen)
test_driver_ether	src/drivers/driver_test.c	/^static void test_driver_ether(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen, u8 *data, size_t datalen)
test_driver_free_bss	src/drivers/driver_test.c	/^static void test_driver_free_bss(struct test_driver_bss *bss)$/;"	f	file:	signature:(struct test_driver_bss *bss)
test_driver_free_bsses	src/drivers/driver_test.c	/^static void test_driver_free_bsses(struct wpa_driver_test_data *drv)$/;"	f	file:	signature:(struct wpa_driver_test_data *drv)
test_driver_get_cli	src/drivers/driver_test.c	/^test_driver_get_cli(struct wpa_driver_test_data *drv, struct sockaddr_un *from,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen)
test_driver_if_add	src/drivers/driver_test.c	/^static int test_driver_if_add(void *priv, enum wpa_driver_if_type type,$/;"	f	file:	signature:(void *priv, enum wpa_driver_if_type type, const char *ifname, const u8 *addr, void *bss_ctx, void **drv_priv, char *force_ifname, u8 *if_addr, const char *bridge)
test_driver_if_remove	src/drivers/driver_test.c	/^static int test_driver_if_remove(void *priv, enum wpa_driver_if_type type,$/;"	f	file:	signature:(void *priv, enum wpa_driver_if_type type, const char *ifname)
test_driver_init	src/drivers/driver_test.c	/^static void * test_driver_init(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
test_driver_mlme	src/drivers/driver_test.c	/^static void test_driver_mlme(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen, u8 *data, size_t datalen)
test_driver_receive_unix	src/drivers/driver_test.c	/^static void test_driver_receive_unix(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
test_driver_scan	src/drivers/driver_test.c	/^static void test_driver_scan(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr_un *from, socklen_t fromlen, char *data)
test_driver_send_eapol	src/drivers/driver_test.c	/^static int test_driver_send_eapol(void *priv, const u8 *addr, const u8 *data,$/;"	f	file:	signature:(void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
test_driver_send_ether	src/drivers/driver_test.c	/^static int test_driver_send_ether(void *priv, const u8 *dst, const u8 *src,$/;"	f	file:	signature:(void *priv, const u8 *dst, const u8 *src, u16 proto, const u8 *data, size_t data_len)
test_driver_set_ap_wps_ie	src/drivers/driver_test.c	/^static int test_driver_set_ap_wps_ie(void *priv, const struct wpabuf *beacon,$/;"	f	file:	signature:(void *priv, const struct wpabuf *beacon, const struct wpabuf *proberesp, const struct wpabuf *assocresp)
test_driver_set_generic_elem	src/drivers/driver_test.c	/^static int test_driver_set_generic_elem(void *priv,$/;"	f	file:	signature:(void *priv, const u8 *elem, size_t elem_len)
test_driver_set_privacy	src/drivers/driver_test.c	/^static int test_driver_set_privacy(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
test_driver_set_ssid	src/drivers/driver_test.c	/^static int test_driver_set_ssid(void *priv, const u8 *buf, int len)$/;"	f	file:	signature:(void *priv, const u8 *buf, int len)
test_driver_set_sta_vlan	src/drivers/driver_test.c	/^static int test_driver_set_sta_vlan(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, const char *ifname, int vlan_id)
test_driver_sta_add	src/drivers/driver_test.c	/^static int test_driver_sta_add(void *priv,$/;"	f	file:	signature:(void *priv, struct hostapd_sta_add_params *params)
test_driver_sta_deauth	src/drivers/driver_test.c	/^static int test_driver_sta_deauth(void *priv, const u8 *own_addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason)
test_driver_sta_disassoc	src/drivers/driver_test.c	/^static int test_driver_sta_disassoc(void *priv, const u8 *own_addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int reason)
test_go_neg_completed	src/drivers/driver_test.c	/^static void test_go_neg_completed(void *ctx, struct p2p_go_neg_results *res)$/;"	f	file:	signature:(void *ctx, struct p2p_go_neg_results *res)
test_go_neg_req_rx	src/drivers/driver_test.c	/^static void test_go_neg_req_rx(void *ctx, const u8 *src, u16 dev_passwd_id)$/;"	f	file:	signature:(void *ctx, const u8 *src, u16 dev_passwd_id)
test_p2p_scan	src/drivers/driver_test.c	/^static int test_p2p_scan(void *ctx, enum p2p_scan_type type, int freq,$/;"	f	file:	signature:(void *ctx, enum p2p_scan_type type, int freq, unsigned int num_req_dev_types, const u8 *req_dev_types, const u8 *dev_id)
test_prov_disc_req	src/drivers/driver_test.c	/^static void test_prov_disc_req(void *ctx, const u8 *peer, u16 config_methods,$/;"	f	file:	signature:(void *ctx, const u8 *peer, u16 config_methods, const u8 *dev_addr, const u8 *pri_dev_type, const char *dev_name, u16 supp_config_methods, u8 dev_capab, u8 group_capab, const u8 *group_id, size_t group_id_len)
test_prov_disc_resp	src/drivers/driver_test.c	/^static void test_prov_disc_resp(void *ctx, const u8 *peer, u16 config_methods)$/;"	f	file:	signature:(void *ctx, const u8 *peer, u16 config_methods)
test_remain_on_channel_timeout	src/drivers/driver_test.c	/^static void test_remain_on_channel_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
test_remain_on_channel_timeout	src/drivers/driver_test.c	/^static void test_remain_on_channel_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
test_sd_request	src/drivers/driver_test.c	/^static void test_sd_request(void *ctx, int freq, const u8 *sa, u8 dialog_token,$/;"	f	file:	signature:(void *ctx, int freq, const u8 *sa, u8 dialog_token, u16 update_indic, const u8 *tlvs, size_t tlvs_len)
test_sd_response	src/drivers/driver_test.c	/^static void test_sd_response(void *ctx, const u8 *sa, u16 update_indic,$/;"	f	file:	signature:(void *ctx, const u8 *sa, u16 update_indic, const u8 *tlvs, size_t tlvs_len)
test_send_action	src/drivers/driver_test.c	/^static int test_send_action(void *ctx, unsigned int freq, const u8 *dst,$/;"	f	file:	signature:(void *ctx, unsigned int freq, const u8 *dst, const u8 *src, const u8 *bssid, const u8 *buf, size_t len, unsigned int wait_time)
test_send_action_cb	src/drivers/driver_test.c	/^static void test_send_action_cb(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
test_send_action_done	src/drivers/driver_test.c	/^static void test_send_action_done(void *ctx)$/;"	f	file:	signature:(void *ctx)
test_send_probe_resp	src/drivers/driver_test.c	/^static int test_send_probe_resp(void *ctx, const struct wpabuf *buf)$/;"	f	file:	signature:(void *ctx, const struct wpabuf *buf)
test_socket	src/ap/ap_config.h	/^	char *test_socket; \/* UNIX domain socket path for driver_test *\/$/;"	m	struct:hostapd_bss_config	access:public
test_socket	src/drivers/driver.h	/^	const char *test_socket;$/;"	m	struct:wpa_init_params	access:public
test_socket	src/drivers/driver_test.c	/^	int test_socket;$/;"	m	struct:wpa_driver_test_data	file:	access:public
test_start_listen	src/drivers/driver_test.c	/^static int test_start_listen(void *ctx, unsigned int freq,$/;"	f	file:	signature:(void *ctx, unsigned int freq, unsigned int duration, const struct wpabuf *probe_resp_ie)
test_stop_listen	src/drivers/driver_test.c	/^static void test_stop_listen(void *ctx)$/;"	f	file:	signature:(void *ctx)
this_arg	src/utils/radiotap_iter.h	/^	unsigned char *this_arg;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
this_arg_index	src/utils/radiotap_iter.h	/^	int this_arg_index;$/;"	m	struct:ieee80211_radiotap_iterator	access:public
throughput	src/drivers/wireless_copy.h	/^	__u32		throughput;	\/* To give an idea... *\/$/;"	m	struct:iw_range	access:public
tie	src/common/wpa_common.h	/^	const u8 *tie;$/;"	m	struct:wpa_ft_ies	access:public
tie_len	src/common/wpa_common.h	/^	size_t tie_len;$/;"	m	struct:wpa_ft_ies	access:public
tim	src/common/ieee802_11_common.h	/^	const u8 *tim;$/;"	m	struct:ieee802_11_elems	access:public
tim_len	src/common/ieee802_11_common.h	/^	u8 tim_len;$/;"	m	struct:ieee802_11_elems	access:public
time	src/utils/eloop.c	/^	struct os_time time;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::os_time	file:	access:public
time	src/utils/eloop_none.c	/^	struct os_time time;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::os_time	file:	access:public
time	src/utils/eloop_win.c	/^	struct os_time time;$/;"	m	struct:eloop_timeout	typeref:struct:eloop_timeout::os_time	file:	access:public
time_adv	src/ap/hostapd.h	/^	struct wpabuf *time_adv;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
time_advertisement	src/ap/ap_config.h	/^	int time_advertisement;$/;"	m	struct:hostapd_bss_config	access:public
time_update_counter	src/ap/hostapd.h	/^	u8 time_update_counter;$/;"	m	struct:hostapd_data	access:public
time_zone	src/ap/ap_config.h	/^	char *time_zone;$/;"	m	struct:hostapd_bss_config	access:public
timeout	src/ap/wps_hostapd.c	/^	int timeout;$/;"	m	struct:wps_add_pin_data	file:	access:public
timeout	src/ap/wps_hostapd.c	/^	int timeout;$/;"	m	struct:wps_ap_pin_data	file:	access:public
timeout	src/utils/eloop.c	/^	struct dl_list timeout;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::dl_list	file:	access:public
timeout	src/utils/eloop_none.c	/^	struct eloop_timeout *timeout;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_timeout	file:	access:public
timeout	src/utils/eloop_win.c	/^	struct eloop_timeout *timeout;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_timeout	file:	access:public
timeout_event	src/drivers/driver.h	/^	struct timeout_event {$/;"	s	union:wpa_event_data	access:public
timeout_event	src/drivers/driver.h	/^	} timeout_event;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::timeout_event	access:public
timeout_int	src/common/ieee802_11_common.h	/^	const u8 *timeout_int;$/;"	m	struct:ieee802_11_elems	access:public
timeout_int_len	src/common/ieee802_11_common.h	/^	u8 timeout_int_len;$/;"	m	struct:ieee802_11_elems	access:public
timeout_next	src/ap/sta_info.h	/^	} timeout_next;$/;"	m	struct:sta_info	typeref:enum:sta_info::__anon12	access:public
timeout_seconds	src/wps/httpread.c	/^	int timeout_seconds;            \/* 0 or total duration timeout period *\/$/;"	m	struct:httpread	file:	access:public
timeout_time	src/wps/wps_upnp_i.h	/^	time_t timeout_time; \/* when to age out the subscription *\/$/;"	m	struct:subscription	access:public
timeouts	src/radius/radius_client.h	/^	u32 timeouts;$/;"	m	struct:hostapd_radius_server	access:public
timer	src/rsn_supp/tdls.c	/^		int timer;      \/* Timeout in milliseconds *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
timer_tick_enabled	src/eapol_supp/eapol_supp_sm.c	/^	int timer_tick_enabled;$/;"	m	struct:eapol_sm	file:	access:public
timestamp	src/ap/ieee802_11_auth.c	/^	os_time_t timestamp;$/;"	m	struct:hostapd_acl_query_data	file:	access:public
timestamp	src/ap/ieee802_11_auth.c	/^	os_time_t timestamp;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
timestamp	src/ap/wpa_auth.h	/^	u8 timestamp[4]; \/* current time in seconds since unix epoch, little$/;"	m	struct:ft_r0kh_r1kh_push_frame	access:public
timestamp	src/common/ieee802_11_defs.h	/^			u8 timestamp[8];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
timestamp	src/common/ieee802_11_defs.h	/^			u8 timestamp[8];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
timestamp	src/eap_server/eap_sim_db.c	/^	struct os_time timestamp;$/;"	m	struct:eap_sim_db_pending	typeref:struct:eap_sim_db_pending::os_time	file:	access:public
timestamp	src/wps/wps_registrar.c	/^	struct os_time timestamp;$/;"	m	struct:wps_pbc_session	typeref:struct:wps_pbc_session::os_time	file:	access:public
tk	src/rsn_supp/tdls.c	/^		u8 tk[16]; \/* TPK-TK; assuming only CCMP will be used *\/$/;"	m	struct:wpa_tdls_peer::tpk	file:	access:public
tk1	src/common/wpa_common.h	/^	u8 tk1[16]; \/* Temporal Key 1 (TK1) *\/$/;"	m	struct:wpa_ptk	access:public
tk2	src/common/wpa_common.h	/^		u8 tk2[16]; \/* Temporal Key 2 (TK2) *\/$/;"	m	union:wpa_ptk::__anon33	access:public
tkip_countermeasures	src/ap/hostapd.h	/^	int tkip_countermeasures;$/;"	m	struct:hostapd_data	access:public
tls_alert	src/tls/tlsv1_client.c	/^void tls_alert(struct tlsv1_client *conn, u8 level, u8 description)$/;"	f	signature:(struct tlsv1_client *conn, u8 level, u8 description)
tls_alert	src/tls/tlsv1_client_i.h	/^void tls_alert(struct tlsv1_client *conn, u8 level, u8 description);$/;"	p	signature:(struct tlsv1_client *conn, u8 level, u8 description)
tls_capabilities	src/crypto/tls.h	/^unsigned int tls_capabilities(void *tls_ctx);$/;"	p	signature:(void *tls_ctx)
tls_capabilities	src/crypto/tls_gnutls.c	/^unsigned int tls_capabilities(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_capabilities	src/crypto/tls_internal.c	/^unsigned int tls_capabilities(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_capabilities	src/crypto/tls_none.c	/^unsigned int tls_capabilities(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_capabilities	src/crypto/tls_nss.c	/^unsigned int tls_capabilities(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_capabilities	src/crypto/tls_openssl.c	/^unsigned int tls_capabilities(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_capabilities	src/crypto/tls_schannel.c	/^unsigned int tls_capabilities(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_cipher	src/tls/tlsv1_common.h	/^} tls_cipher;$/;"	t	typeref:enum:__anon102
tls_cipher_data	src/tls/tlsv1_common.h	/^struct tls_cipher_data {$/;"	s
tls_cipher_data::alg	src/tls/tlsv1_common.h	/^	enum crypto_cipher_alg alg;$/;"	m	struct:tls_cipher_data	typeref:enum:tls_cipher_data::crypto_cipher_alg	access:public
tls_cipher_data::block_size	src/tls/tlsv1_common.h	/^	size_t block_size; \/* also iv_size *\/$/;"	m	struct:tls_cipher_data	access:public
tls_cipher_data::cipher	src/tls/tlsv1_common.h	/^	tls_cipher cipher;$/;"	m	struct:tls_cipher_data	access:public
tls_cipher_data::expanded_key_material	src/tls/tlsv1_common.h	/^	size_t expanded_key_material;$/;"	m	struct:tls_cipher_data	access:public
tls_cipher_data::key_material	src/tls/tlsv1_common.h	/^	size_t key_material;$/;"	m	struct:tls_cipher_data	access:public
tls_cipher_data::type	src/tls/tlsv1_common.h	/^	tls_cipher_type type;$/;"	m	struct:tls_cipher_data	access:public
tls_cipher_suite	src/tls/tlsv1_common.h	/^struct tls_cipher_suite {$/;"	s
tls_cipher_suite::cipher	src/tls/tlsv1_common.h	/^	tls_cipher cipher;$/;"	m	struct:tls_cipher_suite	access:public
tls_cipher_suite::hash	src/tls/tlsv1_common.h	/^	tls_hash hash;$/;"	m	struct:tls_cipher_suite	access:public
tls_cipher_suite::key_exchange	src/tls/tlsv1_common.h	/^	tls_key_exchange key_exchange;$/;"	m	struct:tls_cipher_suite	access:public
tls_cipher_suite::suite	src/tls/tlsv1_common.h	/^	u16 suite;$/;"	m	struct:tls_cipher_suite	access:public
tls_cipher_suites	src/tls/tlsv1_common.c	/^static const struct tls_cipher_suite tls_cipher_suites[] = {$/;"	v	typeref:struct:tls_cipher_suite	file:
tls_cipher_type	src/tls/tlsv1_common.h	/^} tls_cipher_type;$/;"	t	typeref:enum:__anon104
tls_ciphers	src/tls/tlsv1_common.c	/^static const struct tls_cipher_data tls_ciphers[] = {$/;"	v	typeref:struct:tls_cipher_data	file:
tls_client_cert_chain_der_len	src/tls/tlsv1_client_write.c	/^static size_t tls_client_cert_chain_der_len(struct tlsv1_client *conn)$/;"	f	file:	signature:(struct tlsv1_client *conn)
tls_config	src/crypto/tls.h	/^struct tls_config {$/;"	s
tls_config::cb_ctx	src/crypto/tls.h	/^	void *cb_ctx;$/;"	m	struct:tls_config	access:public
tls_config::cert_in_cb	src/crypto/tls.h	/^	int cert_in_cb;$/;"	m	struct:tls_config	access:public
tls_config::event_cb	src/crypto/tls.h	/^	void (*event_cb)(void *ctx, enum tls_event ev,$/;"	m	struct:tls_config	access:public
tls_config::fips_mode	src/crypto/tls.h	/^	int fips_mode;$/;"	m	struct:tls_config	access:public
tls_config::opensc_engine_path	src/crypto/tls.h	/^	const char *opensc_engine_path;$/;"	m	struct:tls_config	access:public
tls_config::pkcs11_engine_path	src/crypto/tls.h	/^	const char *pkcs11_engine_path;$/;"	m	struct:tls_config	access:public
tls_config::pkcs11_module_path	src/crypto/tls.h	/^	const char *pkcs11_module_path;$/;"	m	struct:tls_config	access:public
tls_conn_hs_clienthello	src/crypto/tls_schannel.c	/^static struct wpabuf * tls_conn_hs_clienthello(struct tls_global *global,$/;"	f	file:	signature:(struct tls_global *global, struct tls_connection *conn)
tls_connection	src/crypto/tls_gnutls.c	/^struct tls_connection {$/;"	s	file:
tls_connection	src/crypto/tls_internal.c	/^struct tls_connection {$/;"	s	file:
tls_connection	src/crypto/tls_nss.c	/^struct tls_connection {$/;"	s	file:
tls_connection	src/crypto/tls_openssl.c	/^struct tls_connection {$/;"	s	file:
tls_connection	src/crypto/tls_schannel.c	/^struct tls_connection {$/;"	s	file:
tls_connection::altsubject_match	src/crypto/tls_gnutls.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::altsubject_match	src/crypto/tls_openssl.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::ca_cert_verify	src/crypto/tls_openssl.c	/^	unsigned int ca_cert_verify:1;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::cert_probe	src/crypto/tls_openssl.c	/^	unsigned int cert_probe:1;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::client	src/crypto/tls_internal.c	/^	struct tlsv1_client *client;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::tlsv1_client	file:	access:public
tls_connection::context	src/crypto/tls_schannel.c	/^	CtxtHandle context;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::creds	src/crypto/tls_schannel.c	/^	CredHandle creds;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::eap_tls_prf	src/crypto/tls_schannel.c	/^	u8 eap_tls_prf[128];$/;"	m	struct:tls_connection	file:	access:public
tls_connection::eap_tls_prf_set	src/crypto/tls_schannel.c	/^	int eap_tls_prf_set;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::engine	src/crypto/tls_openssl.c	/^	ENGINE *engine;        \/* functional reference to the engine *\/$/;"	m	struct:tls_connection	file:	access:public
tls_connection::established	src/crypto/tls_gnutls.c	/^	int established;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::established	src/crypto/tls_nss.c	/^	int established;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::established	src/crypto/tls_schannel.c	/^	int established, start;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::failed	src/crypto/tls_gnutls.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::failed	src/crypto/tls_openssl.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::failed	src/crypto/tls_schannel.c	/^	int failed, read_alerts, write_alerts;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::fd	src/crypto/tls_nss.c	/^	PRFileDesc *fd;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::flags	src/crypto/tls_openssl.c	/^	unsigned int flags;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::params_set	src/crypto/tls_gnutls.c	/^	int params_set;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::pre_shared_secret	src/crypto/tls_gnutls.c	/^	u8 *pre_shared_secret;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::pre_shared_secret_len	src/crypto/tls_gnutls.c	/^	size_t pre_shared_secret_len;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::private_key	src/crypto/tls_openssl.c	/^	EVP_PKEY *private_key; \/* the private key if using engine *\/$/;"	m	struct:tls_connection	file:	access:public
tls_connection::pull_buf	src/crypto/tls_gnutls.c	/^	struct wpabuf *pull_buf;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::wpabuf	file:	access:public
tls_connection::pull_buf	src/crypto/tls_nss.c	/^	u8 *push_buf, *pull_buf, *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::pull_buf_len	src/crypto/tls_nss.c	/^	size_t push_buf_len, pull_buf_len;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::pull_buf_offset	src/crypto/tls_gnutls.c	/^	const u8 *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::pull_buf_offset	src/crypto/tls_nss.c	/^	u8 *push_buf, *pull_buf, *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::push_buf	src/crypto/tls_gnutls.c	/^	struct wpabuf *push_buf;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::wpabuf	file:	access:public
tls_connection::push_buf	src/crypto/tls_nss.c	/^	u8 *push_buf, *pull_buf, *pull_buf_offset;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::push_buf_len	src/crypto/tls_nss.c	/^	size_t push_buf_len, pull_buf_len;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::read_alerts	src/crypto/tls_gnutls.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::read_alerts	src/crypto/tls_openssl.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::read_alerts	src/crypto/tls_schannel.c	/^	int failed, read_alerts, write_alerts;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::schannel_cred	src/crypto/tls_schannel.c	/^	SCHANNEL_CRED schannel_cred;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::server	src/crypto/tls_internal.c	/^	struct tlsv1_server *server;$/;"	m	struct:tls_connection	typeref:struct:tls_connection::tlsv1_server	file:	access:public
tls_connection::server_cert_only	src/crypto/tls_openssl.c	/^	unsigned int server_cert_only:1;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::session	src/crypto/tls_gnutls.c	/^	gnutls_session session;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::session_ticket	src/crypto/tls_openssl.c	/^	u8 *session_ticket;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::session_ticket_cb	src/crypto/tls_openssl.c	/^	tls_session_ticket_cb session_ticket_cb;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::session_ticket_cb_ctx	src/crypto/tls_openssl.c	/^	void *session_ticket_cb_ctx;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::session_ticket_len	src/crypto/tls_openssl.c	/^	size_t session_ticket_len;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::srv_cert_hash	src/crypto/tls_openssl.c	/^	u8 srv_cert_hash[32];$/;"	m	struct:tls_connection	file:	access:public
tls_connection::ssl	src/crypto/tls_openssl.c	/^	SSL *ssl;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::ssl_in	src/crypto/tls_openssl.c	/^	BIO *ssl_in, *ssl_out;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::ssl_out	src/crypto/tls_openssl.c	/^	BIO *ssl_in, *ssl_out;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::start	src/crypto/tls_schannel.c	/^	int established, start;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::subject_match	src/crypto/tls_gnutls.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::subject_match	src/crypto/tls_openssl.c	/^	char *subject_match, *altsubject_match;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::verify_peer	src/crypto/tls_gnutls.c	/^	int verify_peer;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::verify_peer	src/crypto/tls_nss.c	/^	int verify_peer;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::write_alerts	src/crypto/tls_gnutls.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::write_alerts	src/crypto/tls_openssl.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::write_alerts	src/crypto/tls_schannel.c	/^	int failed, read_alerts, write_alerts;$/;"	m	struct:tls_connection	file:	access:public
tls_connection::xcred	src/crypto/tls_gnutls.c	/^	gnutls_certificate_credentials_t xcred;$/;"	m	struct:tls_connection	file:	access:public
tls_connection_ca_cert	src/crypto/tls_openssl.c	/^static int tls_connection_ca_cert(void *_ssl_ctx, struct tls_connection *conn,$/;"	f	file:	signature:(void *_ssl_ctx, struct tls_connection *conn, const char *ca_cert, const u8 *ca_cert_blob, size_t ca_cert_blob_len, const char *ca_path)
tls_connection_client_cert	src/crypto/tls_openssl.c	/^static int tls_connection_client_cert(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, const char *client_cert, const u8 *client_cert_blob, size_t client_cert_blob_len)
tls_connection_client_hello_ext	src/crypto/tls.h	/^int __must_check tls_connection_client_hello_ext(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_client_hello_ext	src/crypto/tls_gnutls.c	/^int tls_connection_client_hello_ext(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_client_hello_ext	src/crypto/tls_internal.c	/^int tls_connection_client_hello_ext(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_client_hello_ext	src/crypto/tls_none.c	/^int tls_connection_client_hello_ext(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_client_hello_ext	src/crypto/tls_nss.c	/^int tls_connection_client_hello_ext(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_client_hello_ext	src/crypto/tls_openssl.c	/^int tls_connection_client_hello_ext(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_client_hello_ext	src/crypto/tls_schannel.c	/^int tls_connection_client_hello_ext(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, int ext_type, const u8 *data, size_t data_len)
tls_connection_decrypt	src/crypto/tls.h	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_decrypt	src/crypto/tls_gnutls.c	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_decrypt	src/crypto/tls_internal.c	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_decrypt	src/crypto/tls_none.c	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_decrypt	src/crypto/tls_nss.c	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_decrypt	src/crypto/tls_openssl.c	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_decrypt	src/crypto/tls_schannel.c	/^struct wpabuf * tls_connection_decrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_deinit	src/crypto/tls.h	/^void tls_connection_deinit(void *tls_ctx, struct tls_connection *conn);$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_deinit	src/crypto/tls_gnutls.c	/^void tls_connection_deinit(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_deinit	src/crypto/tls_internal.c	/^void tls_connection_deinit(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_deinit	src/crypto/tls_none.c	/^void tls_connection_deinit(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_deinit	src/crypto/tls_nss.c	/^void tls_connection_deinit(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_deinit	src/crypto/tls_openssl.c	/^void tls_connection_deinit(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_deinit	src/crypto/tls_schannel.c	/^void tls_connection_deinit(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_dh	src/crypto/tls_openssl.c	/^static int tls_connection_dh(struct tls_connection *conn, const char *dh_file)$/;"	f	file:	signature:(struct tls_connection *conn, const char *dh_file)
tls_connection_enable_workaround	src/crypto/tls.h	/^int __must_check tls_connection_enable_workaround(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_enable_workaround	src/crypto/tls_gnutls.c	/^int tls_connection_enable_workaround(void *ssl_ctx,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_enable_workaround	src/crypto/tls_internal.c	/^int tls_connection_enable_workaround(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_enable_workaround	src/crypto/tls_none.c	/^int tls_connection_enable_workaround(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_enable_workaround	src/crypto/tls_nss.c	/^int tls_connection_enable_workaround(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_enable_workaround	src/crypto/tls_openssl.c	/^int tls_connection_enable_workaround(void *ssl_ctx,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_enable_workaround	src/crypto/tls_schannel.c	/^int tls_connection_enable_workaround(void *ssl_ctx,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_encrypt	src/crypto/tls.h	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_encrypt	src/crypto/tls_gnutls.c	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_encrypt	src/crypto/tls_internal.c	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_encrypt	src/crypto/tls_none.c	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_encrypt	src/crypto/tls_nss.c	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_encrypt	src/crypto/tls_openssl.c	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_encrypt	src/crypto/tls_schannel.c	/^struct wpabuf * tls_connection_encrypt(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data)
tls_connection_engine_ca_cert	src/crypto/tls_openssl.c	/^static int tls_connection_engine_ca_cert(void *_ssl_ctx,$/;"	f	file:	signature:(void *_ssl_ctx, struct tls_connection *conn, const char *ca_cert_id)
tls_connection_engine_client_cert	src/crypto/tls_openssl.c	/^static int tls_connection_engine_client_cert(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, const char *cert_id)
tls_connection_engine_private_key	src/crypto/tls_openssl.c	/^static int tls_connection_engine_private_key(struct tls_connection *conn)$/;"	f	file:	signature:(struct tls_connection *conn)
tls_connection_established	src/crypto/tls.h	/^int tls_connection_established(void *tls_ctx, struct tls_connection *conn);$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_established	src/crypto/tls_gnutls.c	/^int tls_connection_established(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_established	src/crypto/tls_internal.c	/^int tls_connection_established(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_established	src/crypto/tls_none.c	/^int tls_connection_established(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_established	src/crypto/tls_nss.c	/^int tls_connection_established(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_established	src/crypto/tls_openssl.c	/^int tls_connection_established(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_established	src/crypto/tls_schannel.c	/^int tls_connection_established(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls.h	/^int tls_connection_get_failed(void *tls_ctx, struct tls_connection *conn);$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls_gnutls.c	/^int tls_connection_get_failed(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls_internal.c	/^int tls_connection_get_failed(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls_none.c	/^int tls_connection_get_failed(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls_nss.c	/^int tls_connection_get_failed(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls_openssl.c	/^int tls_connection_get_failed(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_failed	src/crypto/tls_schannel.c	/^int tls_connection_get_failed(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_keyblock_size	src/crypto/tls.h	/^int tls_connection_get_keyblock_size(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_keyblock_size	src/crypto/tls_gnutls.c	/^int tls_connection_get_keyblock_size(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_keyblock_size	src/crypto/tls_internal.c	/^int tls_connection_get_keyblock_size(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_keyblock_size	src/crypto/tls_none.c	/^int tls_connection_get_keyblock_size(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_keyblock_size	src/crypto/tls_nss.c	/^int tls_connection_get_keyblock_size(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_keyblock_size	src/crypto/tls_openssl.c	/^int tls_connection_get_keyblock_size(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_keys	src/crypto/tls.h	/^int __must_check tls_connection_get_keys(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_keys	src/crypto/tls_gnutls.c	/^int tls_connection_get_keys(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_keys	src/crypto/tls_internal.c	/^int tls_connection_get_keys(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_keys	src/crypto/tls_none.c	/^int tls_connection_get_keys(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_keys	src/crypto/tls_nss.c	/^int tls_connection_get_keys(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_keys	src/crypto/tls_openssl.c	/^int tls_connection_get_keys(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_keys	src/crypto/tls_schannel.c	/^int tls_connection_get_keys(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, struct tls_keys *keys)
tls_connection_get_read_alerts	src/crypto/tls.h	/^int tls_connection_get_read_alerts(void *tls_ctx, struct tls_connection *conn);$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_read_alerts	src/crypto/tls_gnutls.c	/^int tls_connection_get_read_alerts(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_read_alerts	src/crypto/tls_internal.c	/^int tls_connection_get_read_alerts(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_read_alerts	src/crypto/tls_none.c	/^int tls_connection_get_read_alerts(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_read_alerts	src/crypto/tls_nss.c	/^int tls_connection_get_read_alerts(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_read_alerts	src/crypto/tls_openssl.c	/^int tls_connection_get_read_alerts(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_read_alerts	src/crypto/tls_schannel.c	/^int tls_connection_get_read_alerts(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls.h	/^int tls_connection_get_write_alerts(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls_gnutls.c	/^int tls_connection_get_write_alerts(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls_internal.c	/^int tls_connection_get_write_alerts(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls_none.c	/^int tls_connection_get_write_alerts(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls_nss.c	/^int tls_connection_get_write_alerts(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls_openssl.c	/^int tls_connection_get_write_alerts(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_get_write_alerts	src/crypto/tls_schannel.c	/^int tls_connection_get_write_alerts(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_handshake	src/crypto/tls.h	/^struct wpabuf * tls_connection_handshake(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_handshake	src/crypto/tls_gnutls.c	/^struct wpabuf * tls_connection_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_handshake	src/crypto/tls_internal.c	/^struct wpabuf * tls_connection_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_handshake	src/crypto/tls_none.c	/^struct wpabuf * tls_connection_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_handshake	src/crypto/tls_nss.c	/^struct wpabuf * tls_connection_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_handshake	src/crypto/tls_openssl.c	/^tls_connection_handshake(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_handshake	src/crypto/tls_schannel.c	/^struct wpabuf * tls_connection_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_init	src/crypto/tls.h	/^struct tls_connection * tls_connection_init(void *tls_ctx);$/;"	p	signature:(void *tls_ctx)
tls_connection_init	src/crypto/tls_gnutls.c	/^struct tls_connection * tls_connection_init(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_connection_init	src/crypto/tls_internal.c	/^struct tls_connection * tls_connection_init(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_connection_init	src/crypto/tls_none.c	/^struct tls_connection * tls_connection_init(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_connection_init	src/crypto/tls_nss.c	/^struct tls_connection * tls_connection_init(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_connection_init	src/crypto/tls_openssl.c	/^struct tls_connection * tls_connection_init(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_connection_init	src/crypto/tls_schannel.c	/^struct tls_connection * tls_connection_init(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_connection_params	src/crypto/tls.h	/^struct tls_connection_params {$/;"	s
tls_connection_params::altsubject_match	src/crypto/tls.h	/^	const char *altsubject_match;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::ca_cert	src/crypto/tls.h	/^	const char *ca_cert;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::ca_cert_blob	src/crypto/tls.h	/^	const u8 *ca_cert_blob;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::ca_cert_blob_len	src/crypto/tls.h	/^	size_t ca_cert_blob_len;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::ca_cert_id	src/crypto/tls.h	/^	const char *ca_cert_id;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::ca_path	src/crypto/tls.h	/^	const char *ca_path;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::cert_id	src/crypto/tls.h	/^	const char *cert_id;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::client_cert	src/crypto/tls.h	/^	const char *client_cert;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::client_cert_blob	src/crypto/tls.h	/^	const u8 *client_cert_blob;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::client_cert_blob_len	src/crypto/tls.h	/^	size_t client_cert_blob_len;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::dh_blob	src/crypto/tls.h	/^	const u8 *dh_blob;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::dh_blob_len	src/crypto/tls.h	/^	size_t dh_blob_len;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::dh_file	src/crypto/tls.h	/^	const char *dh_file;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::engine	src/crypto/tls.h	/^	int engine;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::engine_id	src/crypto/tls.h	/^	const char *engine_id;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::flags	src/crypto/tls.h	/^	unsigned int flags;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::key_id	src/crypto/tls.h	/^	const char *key_id;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::pin	src/crypto/tls.h	/^	const char *pin;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::private_key	src/crypto/tls.h	/^	const char *private_key;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::private_key_blob	src/crypto/tls.h	/^	const u8 *private_key_blob;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::private_key_blob_len	src/crypto/tls.h	/^	size_t private_key_blob_len;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::private_key_passwd	src/crypto/tls.h	/^	const char *private_key_passwd;$/;"	m	struct:tls_connection_params	access:public
tls_connection_params::subject_match	src/crypto/tls.h	/^	const char *subject_match;$/;"	m	struct:tls_connection_params	access:public
tls_connection_prf	src/crypto/tls.h	/^int __must_check  tls_connection_prf(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_prf	src/crypto/tls_gnutls.c	/^int tls_connection_prf(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_prf	src/crypto/tls_internal.c	/^int tls_connection_prf(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_prf	src/crypto/tls_none.c	/^int tls_connection_prf(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_prf	src/crypto/tls_nss.c	/^int tls_connection_prf(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_prf	src/crypto/tls_openssl.c	/^int tls_connection_prf(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_prf	src/crypto/tls_schannel.c	/^int tls_connection_prf(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tls_connection_private_key	src/crypto/tls_openssl.c	/^static int tls_connection_private_key(void *_ssl_ctx,$/;"	f	file:	signature:(void *_ssl_ctx, struct tls_connection *conn, const char *private_key, const char *private_key_passwd, const u8 *private_key_blob, size_t private_key_blob_len)
tls_connection_resumed	src/crypto/tls.h	/^int tls_connection_resumed(void *tls_ctx, struct tls_connection *conn);$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_resumed	src/crypto/tls_gnutls.c	/^int tls_connection_resumed(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_resumed	src/crypto/tls_internal.c	/^int tls_connection_resumed(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_resumed	src/crypto/tls_none.c	/^int tls_connection_resumed(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_resumed	src/crypto/tls_nss.c	/^int tls_connection_resumed(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_resumed	src/crypto/tls_openssl.c	/^int tls_connection_resumed(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_resumed	src/crypto/tls_schannel.c	/^int tls_connection_resumed(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_server_handshake	src/crypto/tls.h	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_server_handshake	src/crypto/tls_gnutls.c	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_server_handshake	src/crypto/tls_internal.c	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_server_handshake	src/crypto/tls_none.c	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_server_handshake	src/crypto/tls_nss.c	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_server_handshake	src/crypto/tls_openssl.c	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_server_handshake	src/crypto/tls_schannel.c	/^struct wpabuf * tls_connection_server_handshake(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct wpabuf *in_data, struct wpabuf **appl_data)
tls_connection_set_cipher_list	src/crypto/tls.h	/^int __must_check tls_connection_set_cipher_list(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_cipher_list	src/crypto/tls_gnutls.c	/^int tls_connection_set_cipher_list(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_cipher_list	src/crypto/tls_internal.c	/^int tls_connection_set_cipher_list(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_cipher_list	src/crypto/tls_none.c	/^int tls_connection_set_cipher_list(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_cipher_list	src/crypto/tls_nss.c	/^int tls_connection_set_cipher_list(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_cipher_list	src/crypto/tls_openssl.c	/^int tls_connection_set_cipher_list(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_cipher_list	src/crypto/tls_schannel.c	/^int tls_connection_set_cipher_list(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, u8 *ciphers)
tls_connection_set_params	src/crypto/tls.h	/^tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_params	src/crypto/tls_gnutls.c	/^int tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_params	src/crypto/tls_internal.c	/^int tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_params	src/crypto/tls_none.c	/^int tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_params	src/crypto/tls_nss.c	/^int tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_params	src/crypto/tls_openssl.c	/^int tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_params	src/crypto/tls_schannel.c	/^int tls_connection_set_params(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, const struct tls_connection_params *params)
tls_connection_set_session_ticket_cb	src/crypto/tls.h	/^int __must_check  tls_connection_set_session_ticket_cb($/;"	p	signature:( void *tls_ctx, struct tls_connection *conn, tls_session_ticket_cb cb, void *ctx)
tls_connection_set_session_ticket_cb	src/crypto/tls_gnutls.c	/^int tls_connection_set_session_ticket_cb(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, tls_session_ticket_cb cb, void *ctx)
tls_connection_set_session_ticket_cb	src/crypto/tls_internal.c	/^int tls_connection_set_session_ticket_cb(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, tls_session_ticket_cb cb, void *ctx)
tls_connection_set_session_ticket_cb	src/crypto/tls_nss.c	/^int tls_connection_set_session_ticket_cb(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, tls_session_ticket_cb cb, void *ctx)
tls_connection_set_session_ticket_cb	src/crypto/tls_openssl.c	/^int tls_connection_set_session_ticket_cb(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, tls_session_ticket_cb cb, void *ctx)
tls_connection_set_subject_match	src/crypto/tls_openssl.c	/^static int tls_connection_set_subject_match(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, const char *subject_match, const char *altsubject_match)
tls_connection_set_verify	src/crypto/tls.h	/^int __must_check tls_connection_set_verify(void *tls_ctx,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_set_verify	src/crypto/tls_gnutls.c	/^int tls_connection_set_verify(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_set_verify	src/crypto/tls_internal.c	/^int tls_connection_set_verify(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_set_verify	src/crypto/tls_none.c	/^int tls_connection_set_verify(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_set_verify	src/crypto/tls_nss.c	/^int tls_connection_set_verify(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_set_verify	src/crypto/tls_openssl.c	/^int tls_connection_set_verify(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_set_verify	src/crypto/tls_schannel.c	/^int tls_connection_set_verify(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, int verify_peer)
tls_connection_shutdown	src/crypto/tls.h	/^int tls_connection_shutdown(void *tls_ctx, struct tls_connection *conn);$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_shutdown	src/crypto/tls_gnutls.c	/^int tls_connection_shutdown(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_shutdown	src/crypto/tls_internal.c	/^int tls_connection_shutdown(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_shutdown	src/crypto/tls_none.c	/^int tls_connection_shutdown(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_shutdown	src/crypto/tls_nss.c	/^int tls_connection_shutdown(void *tls_ctx, struct tls_connection *conn)$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn)
tls_connection_shutdown	src/crypto/tls_openssl.c	/^int tls_connection_shutdown(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_shutdown	src/crypto/tls_schannel.c	/^int tls_connection_shutdown(void *ssl_ctx, struct tls_connection *conn)$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn)
tls_connection_verify_peer	src/crypto/tls_gnutls.c	/^static int tls_connection_verify_peer(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, gnutls_alert_description_t *err)
tls_cryptoapi_ca_cert	src/crypto/tls_openssl.c	/^static int tls_cryptoapi_ca_cert(SSL_CTX *ssl_ctx, SSL *ssl, const char *name)$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, SSL *ssl, const char *name)
tls_cryptoapi_cert	src/crypto/tls_openssl.c	/^static int tls_cryptoapi_cert(SSL *ssl, const char *name)$/;"	f	file:	signature:(SSL *ssl, const char *name)
tls_deinit	src/crypto/tls.h	/^void tls_deinit(void *tls_ctx);$/;"	p	signature:(void *tls_ctx)
tls_deinit	src/crypto/tls_gnutls.c	/^void tls_deinit(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_deinit	src/crypto/tls_internal.c	/^void tls_deinit(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_deinit	src/crypto/tls_none.c	/^void tls_deinit(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_deinit	src/crypto/tls_nss.c	/^void tls_deinit(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_deinit	src/crypto/tls_openssl.c	/^void tls_deinit(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_deinit	src/crypto/tls_schannel.c	/^void tls_deinit(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_derive_keys	src/tls/tlsv1_client.c	/^int tls_derive_keys(struct tlsv1_client *conn,$/;"	f	signature:(struct tlsv1_client *conn, const u8 *pre_master_secret, size_t pre_master_secret_len)
tls_derive_keys	src/tls/tlsv1_client_i.h	/^int tls_derive_keys(struct tlsv1_client *conn,$/;"	p	signature:(struct tlsv1_client *conn, const u8 *pre_master_secret, size_t pre_master_secret_len)
tls_derive_pre_master_secret	src/tls/tlsv1_client.c	/^int tls_derive_pre_master_secret(u8 *pre_master_secret)$/;"	f	signature:(u8 *pre_master_secret)
tls_derive_pre_master_secret	src/tls/tlsv1_client_i.h	/^int tls_derive_pre_master_secret(u8 *pre_master_secret);$/;"	p	signature:(u8 *pre_master_secret)
tls_engine_deinit	src/crypto/tls_openssl.c	/^static void tls_engine_deinit(struct tls_connection *conn)$/;"	f	file:	signature:(struct tls_connection *conn)
tls_engine_get_cert	src/crypto/tls_openssl.c	/^static int tls_engine_get_cert(struct tls_connection *conn,$/;"	f	file:	signature:(struct tls_connection *conn, const char *cert_id, X509 **cert)
tls_engine_init	src/crypto/tls_openssl.c	/^static int tls_engine_init(struct tls_connection *conn, const char *engine_id,$/;"	f	file:	signature:(struct tls_connection *conn, const char *engine_id, const char *pin, const char *key_id, const char *cert_id, const char *ca_cert_id)
tls_engine_load_dynamic_generic	src/crypto/tls_openssl.c	/^static int tls_engine_load_dynamic_generic(const char *pre[],$/;"	f	file:	signature:(const char *pre[], const char *post[], const char *id)
tls_engine_load_dynamic_opensc	src/crypto/tls_openssl.c	/^static int tls_engine_load_dynamic_opensc(const char *opensc_so_path)$/;"	f	file:	signature:(const char *opensc_so_path)
tls_engine_load_dynamic_pkcs11	src/crypto/tls_openssl.c	/^static int tls_engine_load_dynamic_pkcs11(const char *pkcs11_so_path,$/;"	f	file:	signature:(const char *pkcs11_so_path, const char *pkcs11_module_path)
tls_event	src/crypto/tls.h	/^enum tls_event {$/;"	g
tls_event_data	src/crypto/tls.h	/^union tls_event_data {$/;"	u
tls_event_data::__anon194::cert	src/crypto/tls.h	/^		const struct wpabuf *cert;$/;"	m	struct:tls_event_data::__anon194	typeref:struct:tls_event_data::__anon194::wpabuf	access:public
tls_event_data::__anon194::depth	src/crypto/tls.h	/^		int depth;$/;"	m	struct:tls_event_data::__anon194	access:public
tls_event_data::__anon194::reason	src/crypto/tls.h	/^		enum tls_fail_reason reason;$/;"	m	struct:tls_event_data::__anon194	typeref:enum:tls_event_data::__anon194::tls_fail_reason	access:public
tls_event_data::__anon194::reason_txt	src/crypto/tls.h	/^		const char *reason_txt;$/;"	m	struct:tls_event_data::__anon194	access:public
tls_event_data::__anon194::subject	src/crypto/tls.h	/^		const char *subject;$/;"	m	struct:tls_event_data::__anon194	access:public
tls_event_data::__anon195::cert	src/crypto/tls.h	/^		const struct wpabuf *cert;$/;"	m	struct:tls_event_data::__anon195	typeref:struct:tls_event_data::__anon195::wpabuf	access:public
tls_event_data::__anon195::depth	src/crypto/tls.h	/^		int depth;$/;"	m	struct:tls_event_data::__anon195	access:public
tls_event_data::__anon195::hash	src/crypto/tls.h	/^		const u8 *hash;$/;"	m	struct:tls_event_data::__anon195	access:public
tls_event_data::__anon195::hash_len	src/crypto/tls.h	/^		size_t hash_len;$/;"	m	struct:tls_event_data::__anon195	access:public
tls_event_data::__anon195::subject	src/crypto/tls.h	/^		const char *subject;$/;"	m	struct:tls_event_data::__anon195	access:public
tls_event_data::cert_fail	src/crypto/tls.h	/^	} cert_fail;$/;"	m	union:tls_event_data	typeref:struct:tls_event_data::__anon194	access:public
tls_event_data::peer_cert	src/crypto/tls.h	/^	} peer_cert;$/;"	m	union:tls_event_data	typeref:struct:tls_event_data::__anon195	access:public
tls_fail_reason	src/crypto/tls.h	/^enum tls_fail_reason {$/;"	g
tls_get_cipher	src/crypto/tls.h	/^int __must_check tls_get_cipher(void *tls_ctx, struct tls_connection *conn,$/;"	p	signature:(void *tls_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher	src/crypto/tls_gnutls.c	/^int tls_get_cipher(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher	src/crypto/tls_internal.c	/^int tls_get_cipher(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher	src/crypto/tls_none.c	/^int tls_get_cipher(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher	src/crypto/tls_nss.c	/^int tls_get_cipher(void *tls_ctx, struct tls_connection *conn,$/;"	f	signature:(void *tls_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher	src/crypto/tls_openssl.c	/^int tls_get_cipher(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher	src/crypto/tls_schannel.c	/^int tls_get_cipher(void *ssl_ctx, struct tls_connection *conn,$/;"	f	signature:(void *ssl_ctx, struct tls_connection *conn, char *buf, size_t buflen)
tls_get_cipher_data	src/tls/tlsv1_common.c	/^const struct tls_cipher_data * tls_get_cipher_data(tls_cipher cipher)$/;"	f	signature:(tls_cipher cipher)
tls_get_cipher_data	src/tls/tlsv1_common.h	/^const struct tls_cipher_data * tls_get_cipher_data(tls_cipher cipher);$/;"	p	signature:(tls_cipher cipher)
tls_get_cipher_suite	src/tls/tlsv1_common.c	/^const struct tls_cipher_suite * tls_get_cipher_suite(u16 suite)$/;"	f	signature:(u16 suite)
tls_get_cipher_suite	src/tls/tlsv1_common.h	/^const struct tls_cipher_suite * tls_get_cipher_suite(u16 suite);$/;"	p	signature:(u16 suite)
tls_get_eap	src/crypto/tls_schannel.c	/^static int tls_get_eap(struct tls_global *global, struct tls_connection *conn)$/;"	f	file:	signature:(struct tls_global *global, struct tls_connection *conn)
tls_get_errors	src/crypto/tls.h	/^int tls_get_errors(void *tls_ctx);$/;"	p	signature:(void *tls_ctx)
tls_get_errors	src/crypto/tls_gnutls.c	/^int tls_get_errors(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_get_errors	src/crypto/tls_internal.c	/^int tls_get_errors(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_get_errors	src/crypto/tls_none.c	/^int tls_get_errors(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_get_errors	src/crypto/tls_nss.c	/^int tls_get_errors(void *tls_ctx)$/;"	f	signature:(void *tls_ctx)
tls_get_errors	src/crypto/tls_openssl.c	/^int tls_get_errors(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_get_errors	src/crypto/tls_schannel.c	/^int tls_get_errors(void *ssl_ctx)$/;"	f	signature:(void *ssl_ctx)
tls_global	src/crypto/tls_gnutls.c	/^struct tls_global {$/;"	s	file:
tls_global	src/crypto/tls_internal.c	/^struct tls_global {$/;"	s	file:
tls_global	src/crypto/tls_openssl.c	/^static struct tls_global *tls_global = NULL;$/;"	v	typeref:struct:tls_global	file:
tls_global	src/crypto/tls_openssl.c	/^struct tls_global {$/;"	s	file:
tls_global	src/crypto/tls_schannel.c	/^struct tls_global {$/;"	s	file:
tls_global::cb_ctx	src/crypto/tls_openssl.c	/^	void *cb_ctx;$/;"	m	struct:tls_global	file:	access:public
tls_global::cert_in_cb	src/crypto/tls_openssl.c	/^	int cert_in_cb;$/;"	m	struct:tls_global	file:	access:public
tls_global::check_crl	src/crypto/tls_internal.c	/^	int check_crl;$/;"	m	struct:tls_global	file:	access:public
tls_global::event_cb	src/crypto/tls_openssl.c	/^	void (*event_cb)(void *ctx, enum tls_event ev,$/;"	m	struct:tls_global	file:	access:public
tls_global::hsecurity	src/crypto/tls_schannel.c	/^	HMODULE hsecurity;$/;"	m	struct:tls_global	file:	access:public
tls_global::my_cert_store	src/crypto/tls_schannel.c	/^	HCERTSTORE my_cert_store;$/;"	m	struct:tls_global	file:	access:public
tls_global::params_set	src/crypto/tls_gnutls.c	/^	int params_set;$/;"	m	struct:tls_global	file:	access:public
tls_global::server	src/crypto/tls_gnutls.c	/^	int server;$/;"	m	struct:tls_global	file:	access:public
tls_global::server	src/crypto/tls_internal.c	/^	int server;$/;"	m	struct:tls_global	file:	access:public
tls_global::server_cred	src/crypto/tls_internal.c	/^	struct tlsv1_credentials *server_cred;$/;"	m	struct:tls_global	typeref:struct:tls_global::tlsv1_credentials	file:	access:public
tls_global::session_data	src/crypto/tls_gnutls.c	/^	void *session_data;$/;"	m	struct:tls_global	file:	access:public
tls_global::session_data_size	src/crypto/tls_gnutls.c	/^	size_t session_data_size;$/;"	m	struct:tls_global	file:	access:public
tls_global::sspi	src/crypto/tls_schannel.c	/^	PSecurityFunctionTable sspi;$/;"	m	struct:tls_global	file:	access:public
tls_global::xcred	src/crypto/tls_gnutls.c	/^	gnutls_certificate_credentials_t xcred;$/;"	m	struct:tls_global	file:	access:public
tls_global_ca_cert	src/crypto/tls_openssl.c	/^static int tls_global_ca_cert(SSL_CTX *ssl_ctx, const char *ca_cert)$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, const char *ca_cert)
tls_global_client_cert	src/crypto/tls_openssl.c	/^static int tls_global_client_cert(SSL_CTX *ssl_ctx, const char *client_cert)$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, const char *client_cert)
tls_global_dh	src/crypto/tls_openssl.c	/^static int tls_global_dh(SSL_CTX *ssl_ctx, const char *dh_file)$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, const char *dh_file)
tls_global_private_key	src/crypto/tls_openssl.c	/^static int tls_global_private_key(SSL_CTX *ssl_ctx, const char *private_key,$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, const char *private_key, const char *private_key_passwd)
tls_global_set_params	src/crypto/tls.h	/^int __must_check tls_global_set_params($/;"	p	signature:( void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_params	src/crypto/tls_gnutls.c	/^int tls_global_set_params(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_params	src/crypto/tls_internal.c	/^int tls_global_set_params(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_params	src/crypto/tls_none.c	/^int tls_global_set_params(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_params	src/crypto/tls_nss.c	/^int tls_global_set_params(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_params	src/crypto/tls_openssl.c	/^int tls_global_set_params(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_params	src/crypto/tls_schannel.c	/^int tls_global_set_params(void *tls_ctx,$/;"	f	signature:(void *tls_ctx, const struct tls_connection_params *params)
tls_global_set_verify	src/crypto/tls.h	/^int __must_check tls_global_set_verify(void *tls_ctx, int check_crl);$/;"	p	signature:(void *tls_ctx, int check_crl)
tls_global_set_verify	src/crypto/tls_gnutls.c	/^int tls_global_set_verify(void *ssl_ctx, int check_crl)$/;"	f	signature:(void *ssl_ctx, int check_crl)
tls_global_set_verify	src/crypto/tls_internal.c	/^int tls_global_set_verify(void *tls_ctx, int check_crl)$/;"	f	signature:(void *tls_ctx, int check_crl)
tls_global_set_verify	src/crypto/tls_none.c	/^int tls_global_set_verify(void *tls_ctx, int check_crl)$/;"	f	signature:(void *tls_ctx, int check_crl)
tls_global_set_verify	src/crypto/tls_nss.c	/^int tls_global_set_verify(void *tls_ctx, int check_crl)$/;"	f	signature:(void *tls_ctx, int check_crl)
tls_global_set_verify	src/crypto/tls_openssl.c	/^int tls_global_set_verify(void *ssl_ctx, int check_crl)$/;"	f	signature:(void *ssl_ctx, int check_crl)
tls_global_set_verify	src/crypto/tls_schannel.c	/^int tls_global_set_verify(void *ssl_ctx, int check_crl)$/;"	f	signature:(void *ssl_ctx, int check_crl)
tls_gnutls_init_session	src/crypto/tls_gnutls.c	/^static int tls_gnutls_init_session(struct tls_global *global,$/;"	f	file:	signature:(struct tls_global *global, struct tls_connection *conn)
tls_gnutls_ref_count	src/crypto/tls_gnutls.c	/^static int tls_gnutls_ref_count = 0;$/;"	v	file:
tls_hash	src/tls/tlsv1_common.h	/^} tls_hash;$/;"	t	typeref:enum:__anon103
tls_hello_ext_cb	src/crypto/tls_openssl.c	/^static int tls_hello_ext_cb(SSL *s, TLS_EXTENSION *ext, void *arg)$/;"	f	file:	signature:(SSL *s, TLS_EXTENSION *ext, void *arg)
tls_hello_ext_cb	src/crypto/tls_openssl.c	/^static void tls_hello_ext_cb(SSL *s, int client_server, int type,$/;"	f	file:	signature:(SSL *s, int client_server, int type, unsigned char *data, int len, void *arg)
tls_in	src/eap_peer/eap_tls_common.h	/^	struct wpabuf *tls_in;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
tls_in	src/eap_server/eap_tls_common.h	/^	struct wpabuf *tls_in;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
tls_in_left	src/eap_peer/eap_tls_common.h	/^	size_t tls_in_left;$/;"	m	struct:eap_ssl_data	access:public
tls_in_total	src/eap_peer/eap_tls_common.h	/^	size_t tls_in_total;$/;"	m	struct:eap_ssl_data	access:public
tls_init	src/crypto/tls.h	/^void * tls_init(const struct tls_config *conf);$/;"	p	signature:(const struct tls_config *conf)
tls_init	src/crypto/tls_gnutls.c	/^void * tls_init(const struct tls_config *conf)$/;"	f	signature:(const struct tls_config *conf)
tls_init	src/crypto/tls_internal.c	/^void * tls_init(const struct tls_config *conf)$/;"	f	signature:(const struct tls_config *conf)
tls_init	src/crypto/tls_none.c	/^void * tls_init(const struct tls_config *conf)$/;"	f	signature:(const struct tls_config *conf)
tls_init	src/crypto/tls_nss.c	/^void * tls_init(const struct tls_config *conf)$/;"	f	signature:(const struct tls_config *conf)
tls_init	src/crypto/tls_openssl.c	/^void * tls_init(const struct tls_config *conf)$/;"	f	signature:(const struct tls_config *conf)
tls_init	src/crypto/tls_schannel.c	/^void * tls_init(const struct tls_config *conf)$/;"	f	signature:(const struct tls_config *conf)
tls_key_exchange	src/tls/tlsv1_common.h	/^} tls_key_exchange;$/;"	t	typeref:enum:__anon101
tls_keys	src/crypto/tls.h	/^struct tls_keys {$/;"	s
tls_keys::client_random	src/crypto/tls.h	/^	const u8 *client_random;$/;"	m	struct:tls_keys	access:public
tls_keys::client_random_len	src/crypto/tls.h	/^	size_t client_random_len;$/;"	m	struct:tls_keys	access:public
tls_keys::master_key	src/crypto/tls.h	/^	const u8 *master_key; \/* TLS master secret *\/$/;"	m	struct:tls_keys	access:public
tls_keys::master_key_len	src/crypto/tls.h	/^	size_t master_key_len;$/;"	m	struct:tls_keys	access:public
tls_keys::server_random	src/crypto/tls.h	/^	const u8 *server_random;$/;"	m	struct:tls_keys	access:public
tls_keys::server_random_len	src/crypto/tls.h	/^	size_t server_random_len;$/;"	m	struct:tls_keys	access:public
tls_load_ca_der	src/crypto/tls_openssl.c	/^static int tls_load_ca_der(void *_ssl_ctx, const char *ca_cert)$/;"	f	file:	signature:(void *_ssl_ctx, const char *ca_cert)
tls_log_func	src/crypto/tls_gnutls.c	/^static void tls_log_func(int level, const char *msg)$/;"	f	file:	signature:(int level, const char *msg)
tls_match_altsubject	src/crypto/tls_openssl.c	/^static int tls_match_altsubject(X509 *cert, const char *match)$/;"	f	file:	signature:(X509 *cert, const char *match)
tls_match_altsubject_component	src/crypto/tls_openssl.c	/^static int tls_match_altsubject_component(X509 *cert, int type,$/;"	f	file:	signature:(X509 *cert, int type, const char *value, size_t len)
tls_nss_ref_count	src/crypto/tls_nss.c	/^static int tls_nss_ref_count = 0;$/;"	v	file:
tls_openssl_ref_count	src/crypto/tls_openssl.c	/^static int tls_openssl_ref_count = 0;$/;"	v	file:
tls_out	src/eap_peer/eap_tls_common.h	/^	struct wpabuf *tls_out;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
tls_out	src/eap_server/eap_tls_common.h	/^	struct wpabuf *tls_out;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
tls_out_limit	src/eap_peer/eap_tls_common.h	/^	size_t tls_out_limit;$/;"	m	struct:eap_ssl_data	access:public
tls_out_limit	src/eap_server/eap_tls_common.h	/^	size_t tls_out_limit;$/;"	m	struct:eap_ssl_data	access:public
tls_out_pos	src/eap_peer/eap_tls_common.h	/^	size_t tls_out_pos;$/;"	m	struct:eap_ssl_data	access:public
tls_out_pos	src/eap_server/eap_tls_common.h	/^	size_t tls_out_pos;$/;"	m	struct:eap_ssl_data	access:public
tls_parse_cert	src/tls/tlsv1_common.c	/^int tls_parse_cert(const u8 *buf, size_t len, struct crypto_public_key **pk)$/;"	f	signature:(const u8 *buf, size_t len, struct crypto_public_key **pk)
tls_parse_cert	src/tls/tlsv1_common.h	/^int tls_parse_cert(const u8 *buf, size_t len, struct crypto_public_key **pk);$/;"	p	signature:(const u8 *buf, size_t len, struct crypto_public_key **pk)
tls_parse_pkcs12	src/crypto/tls_openssl.c	/^static int tls_parse_pkcs12(SSL_CTX *ssl_ctx, SSL *ssl, PKCS12 *p12,$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, SSL *ssl, PKCS12 *p12, const char *passwd)
tls_passwd_cb	src/crypto/tls_openssl.c	/^static int tls_passwd_cb(char *buf, int size, int rwflag, void *password)$/;"	f	file:	signature:(char *buf, int size, int rwflag, void *password)
tls_prf	src/crypto/sha1-tlsprf.c	/^int tls_prf(const u8 *secret, size_t secret_len, const char *label,$/;"	f	signature:(const u8 *secret, size_t secret_len, const char *label, const u8 *seed, size_t seed_len, u8 *out, size_t outlen)
tls_prf	src/crypto/sha1.h	/^int __must_check tls_prf(const u8 *secret, size_t secret_len,$/;"	p	signature:(const u8 *secret, size_t secret_len, const char *label, const u8 *seed, size_t seed_len, u8 *out, size_t outlen)
tls_process_application_data	src/tls/tlsv1_client_read.c	/^static int tls_process_application_data(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len, u8 **out_data, size_t *out_len)
tls_process_certificate	src/tls/tlsv1_client_read.c	/^static int tls_process_certificate(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_certificate	src/tls/tlsv1_server_read.c	/^static int tls_process_certificate(struct tlsv1_server *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_certificate_request	src/tls/tlsv1_client_read.c	/^static int tls_process_certificate_request(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_certificate_request	src/tls/tlsv1_client_read.c	/^static int tls_process_certificate_request(struct tlsv1_client *conn, u8 ct,$/;"	p	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_certificate_verify	src/tls/tlsv1_server_read.c	/^static int tls_process_certificate_verify(struct tlsv1_server *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_change_cipher_spec	src/tls/tlsv1_server_read.c	/^static int tls_process_change_cipher_spec(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_change_cipher_spec	src/tls/tlsv1_server_read.c	/^static int tls_process_change_cipher_spec(struct tlsv1_server *conn,$/;"	p	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_client_finished	src/tls/tlsv1_server_read.c	/^static int tls_process_client_finished(struct tlsv1_server *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_client_hello	src/tls/tlsv1_server_read.c	/^static int tls_process_client_hello(struct tlsv1_server *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_client_key_exchange	src/tls/tlsv1_server_read.c	/^static int tls_process_client_key_exchange(struct tlsv1_server *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_client_key_exchange	src/tls/tlsv1_server_read.c	/^static int tls_process_client_key_exchange(struct tlsv1_server *conn, u8 ct,$/;"	p	file:	signature:(struct tlsv1_server *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_client_key_exchange_dh_anon	src/tls/tlsv1_server_read.c	/^static int tls_process_client_key_exchange_dh_anon($/;"	f	file:	signature:( struct tlsv1_server *conn, const u8 *pos, const u8 *end)
tls_process_client_key_exchange_rsa	src/tls/tlsv1_server_read.c	/^static int tls_process_client_key_exchange_rsa($/;"	f	file:	signature:( struct tlsv1_server *conn, const u8 *pos, const u8 *end)
tls_process_server_change_cipher_spec	src/tls/tlsv1_client_read.c	/^static int tls_process_server_change_cipher_spec(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_server_finished	src/tls/tlsv1_client_read.c	/^static int tls_process_server_finished(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_server_hello	src/tls/tlsv1_client_read.c	/^static int tls_process_server_hello(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_server_hello_done	src/tls/tlsv1_client_read.c	/^static int tls_process_server_hello_done(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_server_hello_done	src/tls/tlsv1_client_read.c	/^static int tls_process_server_hello_done(struct tlsv1_client *conn, u8 ct,$/;"	p	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_server_key_exchange	src/tls/tlsv1_client_read.c	/^static int tls_process_server_key_exchange(struct tlsv1_client *conn, u8 ct,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_process_server_key_exchange	src/tls/tlsv1_client_read.c	/^static int tls_process_server_key_exchange(struct tlsv1_client *conn, u8 ct,$/;"	p	file:	signature:(struct tlsv1_client *conn, u8 ct, const u8 *in_data, size_t *in_len)
tls_pull_func	src/crypto/tls_gnutls.c	/^static ssize_t tls_pull_func(gnutls_transport_ptr ptr, void *buf,$/;"	f	file:	signature:(gnutls_transport_ptr ptr, void *buf, size_t len)
tls_push_func	src/crypto/tls_gnutls.c	/^static ssize_t tls_push_func(gnutls_transport_ptr ptr, const void *buf,$/;"	f	file:	signature:(gnutls_transport_ptr ptr, const void *buf, size_t len)
tls_read_pkcs12	src/crypto/tls_openssl.c	/^static int tls_read_pkcs12(SSL_CTX *ssl_ctx, SSL *ssl, const char *private_key,$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, SSL *ssl, const char *private_key, const char *passwd)
tls_read_pkcs12_blob	src/crypto/tls_openssl.c	/^static int tls_read_pkcs12_blob(SSL_CTX *ssl_ctx, SSL *ssl,$/;"	f	file:	signature:(SSL_CTX *ssl_ctx, SSL *ssl, const u8 *blob, size_t len, const char *passwd)
tls_ref_count	src/crypto/tls_internal.c	/^static int tls_ref_count = 0;$/;"	v	file:
tls_send_change_cipher_spec	src/tls/tlsv1_client_write.c	/^static u8 * tls_send_change_cipher_spec(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, size_t *out_len)
tls_send_change_cipher_spec	src/tls/tlsv1_server_write.c	/^static u8 * tls_send_change_cipher_spec(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, size_t *out_len)
tls_send_client_hello	src/tls/tlsv1_client_i.h	/^u8 * tls_send_client_hello(struct tlsv1_client *conn, size_t *out_len);$/;"	p	signature:(struct tlsv1_client *conn, size_t *out_len)
tls_send_client_hello	src/tls/tlsv1_client_write.c	/^u8 * tls_send_client_hello(struct tlsv1_client *conn, size_t *out_len)$/;"	f	signature:(struct tlsv1_client *conn, size_t *out_len)
tls_send_client_key_exchange	src/tls/tlsv1_client_write.c	/^static u8 * tls_send_client_key_exchange(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, size_t *out_len)
tls_send_server_hello	src/tls/tlsv1_server_write.c	/^static u8 * tls_send_server_hello(struct tlsv1_server *conn, size_t *out_len)$/;"	f	file:	signature:(struct tlsv1_server *conn, size_t *out_len)
tls_server_cert_chain_der_len	src/tls/tlsv1_server_write.c	/^static size_t tls_server_cert_chain_der_len(struct tlsv1_server *conn)$/;"	f	file:	signature:(struct tlsv1_server *conn)
tls_server_key_exchange_allowed	src/tls/tlsv1_common.c	/^int tls_server_key_exchange_allowed(tls_cipher cipher)$/;"	f	signature:(tls_cipher cipher)
tls_server_key_exchange_allowed	src/tls/tlsv1_common.h	/^int tls_server_key_exchange_allowed(tls_cipher cipher);$/;"	p	signature:(tls_cipher cipher)
tls_sess_sec_cb	src/crypto/tls_openssl.c	/^static int tls_sess_sec_cb(SSL *s, void *secret, int *secret_len,$/;"	f	file:	signature:(SSL *s, void *secret, int *secret_len, STACK_OF(SSL_CIPHER) *peer_ciphers, SSL_CIPHER **cipher, void *arg)
tls_session_ticket_cb	src/crypto/tls.h	/^typedef int (*tls_session_ticket_cb)$/;"	t
tls_session_ticket_ext_cb	src/crypto/tls_openssl.c	/^static int tls_session_ticket_ext_cb(SSL *s, const unsigned char *data,$/;"	f	file:	signature:(SSL *s, const unsigned char *data, int len, void *arg)
tls_show_errors	src/crypto/tls_openssl.c	/^static void tls_show_errors(int level, const char *func, const char *txt)$/;"	f	file:	signature:(int level, const char *func, const char *txt)
tls_show_errors	src/crypto/tls_openssl.c	105;"	d	file:
tls_verify_cb	src/crypto/tls_openssl.c	/^static int tls_verify_cb(int preverify_ok, X509_STORE_CTX *x509_ctx)$/;"	f	file:	signature:(int preverify_ok, X509_STORE_CTX *x509_ctx)
tls_verify_hash	src/tls/tlsv1_common.h	/^struct tls_verify_hash {$/;"	s
tls_verify_hash::md5_cert	src/tls/tlsv1_common.h	/^	struct crypto_hash *md5_cert;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
tls_verify_hash::md5_client	src/tls/tlsv1_common.h	/^	struct crypto_hash *md5_client;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
tls_verify_hash::md5_server	src/tls/tlsv1_common.h	/^	struct crypto_hash *md5_server;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
tls_verify_hash::sha1_cert	src/tls/tlsv1_common.h	/^	struct crypto_hash *sha1_cert;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
tls_verify_hash::sha1_client	src/tls/tlsv1_common.h	/^	struct crypto_hash *sha1_client;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
tls_verify_hash::sha1_server	src/tls/tlsv1_common.h	/^	struct crypto_hash *sha1_server;$/;"	m	struct:tls_verify_hash	typeref:struct:tls_verify_hash::crypto_hash	access:public
tls_verify_hash_add	src/tls/tlsv1_common.c	/^void tls_verify_hash_add(struct tls_verify_hash *verify, const u8 *buf,$/;"	f	signature:(struct tls_verify_hash *verify, const u8 *buf, size_t len)
tls_verify_hash_add	src/tls/tlsv1_common.h	/^void tls_verify_hash_add(struct tls_verify_hash *verify, const u8 *buf,$/;"	p	signature:(struct tls_verify_hash *verify, const u8 *buf, size_t len)
tls_verify_hash_free	src/tls/tlsv1_common.c	/^void tls_verify_hash_free(struct tls_verify_hash *verify)$/;"	f	signature:(struct tls_verify_hash *verify)
tls_verify_hash_free	src/tls/tlsv1_common.h	/^void tls_verify_hash_free(struct tls_verify_hash *verify);$/;"	p	signature:(struct tls_verify_hash *verify)
tls_verify_hash_init	src/tls/tlsv1_common.c	/^int tls_verify_hash_init(struct tls_verify_hash *verify)$/;"	f	signature:(struct tls_verify_hash *verify)
tls_verify_hash_init	src/tls/tlsv1_common.h	/^int tls_verify_hash_init(struct tls_verify_hash *verify);$/;"	p	signature:(struct tls_verify_hash *verify)
tls_version	src/tls/tlsv1_record.h	/^	u16 tls_version;$/;"	m	struct:tlsv1_record_layer	access:public
tls_write_client_certificate	src/tls/tlsv1_client_write.c	/^static int tls_write_client_certificate(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **msgpos, u8 *end)
tls_write_client_certificate_verify	src/tls/tlsv1_client_write.c	/^static int tls_write_client_certificate_verify(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **msgpos, u8 *end)
tls_write_client_change_cipher_spec	src/tls/tlsv1_client_write.c	/^static int tls_write_client_change_cipher_spec(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **msgpos, u8 *end)
tls_write_client_finished	src/tls/tlsv1_client_write.c	/^static int tls_write_client_finished(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **msgpos, u8 *end)
tls_write_client_key_exchange	src/tls/tlsv1_client_write.c	/^static int tls_write_client_key_exchange(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **msgpos, u8 *end)
tls_write_server_certificate	src/tls/tlsv1_server_write.c	/^static int tls_write_server_certificate(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tls_write_server_certificate_request	src/tls/tlsv1_server_write.c	/^static int tls_write_server_certificate_request(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tls_write_server_change_cipher_spec	src/tls/tlsv1_server_write.c	/^static int tls_write_server_change_cipher_spec(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tls_write_server_finished	src/tls/tlsv1_server_write.c	/^static int tls_write_server_finished(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tls_write_server_hello	src/tls/tlsv1_server_write.c	/^static int tls_write_server_hello(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tls_write_server_hello_done	src/tls/tlsv1_server_write.c	/^static int tls_write_server_hello_done(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tls_write_server_key_exchange	src/tls/tlsv1_server_write.c	/^static int tls_write_server_key_exchange(struct tlsv1_server *conn,$/;"	f	file:	signature:(struct tlsv1_server *conn, u8 **msgpos, u8 *end)
tlsv1_add_cert	src/tls/tlsv1_cred.c	/^static int tlsv1_add_cert(struct x509_certificate **chain,$/;"	f	file:	signature:(struct x509_certificate **chain, const u8 *buf, size_t len)
tlsv1_add_cert_der	src/tls/tlsv1_cred.c	/^static int tlsv1_add_cert_der(struct x509_certificate **chain,$/;"	f	file:	signature:(struct x509_certificate **chain, const u8 *buf, size_t len)
tlsv1_client	src/tls/tlsv1_client_i.h	/^struct tlsv1_client {$/;"	s
tlsv1_client::ACK_FINISHED	src/tls/tlsv1_client_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED, ACK_FINISHED,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::CHANGE_CIPHER_SPEC	src/tls/tlsv1_client_i.h	/^		SERVER_HELLO_DONE, CLIENT_KEY_EXCHANGE, CHANGE_CIPHER_SPEC,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::CLIENT_HELLO	src/tls/tlsv1_client_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::CLIENT_KEY_EXCHANGE	src/tls/tlsv1_client_i.h	/^		SERVER_HELLO_DONE, CLIENT_KEY_EXCHANGE, CHANGE_CIPHER_SPEC,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::ESTABLISHED	src/tls/tlsv1_client_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::FAILED	src/tls/tlsv1_client_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_CERTIFICATE	src/tls/tlsv1_client_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_CERTIFICATE_REQUEST	src/tls/tlsv1_client_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_CHANGE_CIPHER_SPEC	src/tls/tlsv1_client_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED, ACK_FINISHED,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_FINISHED	src/tls/tlsv1_client_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED, ACK_FINISHED,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_HELLO	src/tls/tlsv1_client_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_HELLO_DONE	src/tls/tlsv1_client_i.h	/^		SERVER_HELLO_DONE, CLIENT_KEY_EXCHANGE, CHANGE_CIPHER_SPEC,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::SERVER_KEY_EXCHANGE	src/tls/tlsv1_client_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_client::__anon108
tlsv1_client::alert_description	src/tls/tlsv1_client_i.h	/^	u8 alert_description;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::alert_level	src/tls/tlsv1_client_i.h	/^	u8 alert_level;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::certificate_requested	src/tls/tlsv1_client_i.h	/^	unsigned int certificate_requested:1;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::cipher_suites	src/tls/tlsv1_client_i.h	/^	u16 cipher_suites[MAX_CIPHER_COUNT];$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::client_hello_ext	src/tls/tlsv1_client_i.h	/^	u8 *client_hello_ext;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::client_hello_ext_len	src/tls/tlsv1_client_i.h	/^	size_t client_hello_ext_len;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::client_random	src/tls/tlsv1_client_i.h	/^	u8 client_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::cred	src/tls/tlsv1_client_i.h	/^	struct tlsv1_credentials *cred;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::tlsv1_credentials	access:public
tlsv1_client::dh_g	src/tls/tlsv1_client_i.h	/^	u8 *dh_g;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::dh_g_len	src/tls/tlsv1_client_i.h	/^	size_t dh_g_len;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::dh_p	src/tls/tlsv1_client_i.h	/^	u8 *dh_p;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::dh_p_len	src/tls/tlsv1_client_i.h	/^	size_t dh_p_len;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::dh_ys	src/tls/tlsv1_client_i.h	/^	u8 *dh_ys;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::dh_ys_len	src/tls/tlsv1_client_i.h	/^	size_t dh_ys_len;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::disable_time_checks	src/tls/tlsv1_client_i.h	/^	unsigned int disable_time_checks:1;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::master_secret	src/tls/tlsv1_client_i.h	/^	u8 master_secret[TLS_MASTER_SECRET_LEN];$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::num_cipher_suites	src/tls/tlsv1_client_i.h	/^	size_t num_cipher_suites;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::prev_cipher_suite	src/tls/tlsv1_client_i.h	/^	u16 prev_cipher_suite;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::rl	src/tls/tlsv1_client_i.h	/^	struct tlsv1_record_layer rl;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::tlsv1_record_layer	access:public
tlsv1_client::server_random	src/tls/tlsv1_client_i.h	/^	u8 server_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::server_rsa_key	src/tls/tlsv1_client_i.h	/^	struct crypto_public_key *server_rsa_key;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::crypto_public_key	access:public
tlsv1_client::session_id	src/tls/tlsv1_client_i.h	/^	u8 session_id[TLS_SESSION_ID_MAX_LEN];$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::session_id_len	src/tls/tlsv1_client_i.h	/^	size_t session_id_len;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::session_resumed	src/tls/tlsv1_client_i.h	/^	unsigned int session_resumed:1;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::session_ticket_cb	src/tls/tlsv1_client_i.h	/^	tlsv1_client_session_ticket_cb session_ticket_cb;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::session_ticket_cb_ctx	src/tls/tlsv1_client_i.h	/^	void *session_ticket_cb_ctx;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::session_ticket_included	src/tls/tlsv1_client_i.h	/^	unsigned int session_ticket_included:1;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::state	src/tls/tlsv1_client_i.h	/^	} state;$/;"	m	struct:tlsv1_client	typeref:enum:tlsv1_client::__anon108	access:public
tlsv1_client::use_session_ticket	src/tls/tlsv1_client_i.h	/^	unsigned int use_session_ticket:1;$/;"	m	struct:tlsv1_client	access:public
tlsv1_client::verify	src/tls/tlsv1_client_i.h	/^	struct tls_verify_hash verify;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::tls_verify_hash	access:public
tlsv1_client_decrypt	src/tls/tlsv1_client.c	/^int tlsv1_client_decrypt(struct tlsv1_client *conn,$/;"	f	signature:(struct tlsv1_client *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_client_decrypt	src/tls/tlsv1_client.h	/^int tlsv1_client_decrypt(struct tlsv1_client *conn,$/;"	p	signature:(struct tlsv1_client *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_client_deinit	src/tls/tlsv1_client.c	/^void tlsv1_client_deinit(struct tlsv1_client *conn)$/;"	f	signature:(struct tlsv1_client *conn)
tlsv1_client_deinit	src/tls/tlsv1_client.h	/^void tlsv1_client_deinit(struct tlsv1_client *conn);$/;"	p	signature:(struct tlsv1_client *conn)
tlsv1_client_encrypt	src/tls/tlsv1_client.c	/^int tlsv1_client_encrypt(struct tlsv1_client *conn,$/;"	f	signature:(struct tlsv1_client *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_client_encrypt	src/tls/tlsv1_client.h	/^int tlsv1_client_encrypt(struct tlsv1_client *conn,$/;"	p	signature:(struct tlsv1_client *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_client_established	src/tls/tlsv1_client.c	/^int tlsv1_client_established(struct tlsv1_client *conn)$/;"	f	signature:(struct tlsv1_client *conn)
tlsv1_client_established	src/tls/tlsv1_client.h	/^int tlsv1_client_established(struct tlsv1_client *conn);$/;"	p	signature:(struct tlsv1_client *conn)
tlsv1_client_free_dh	src/tls/tlsv1_client.c	/^void tlsv1_client_free_dh(struct tlsv1_client *conn)$/;"	f	signature:(struct tlsv1_client *conn)
tlsv1_client_free_dh	src/tls/tlsv1_client_i.h	/^void tlsv1_client_free_dh(struct tlsv1_client *conn);$/;"	p	signature:(struct tlsv1_client *conn)
tlsv1_client_get_cipher	src/tls/tlsv1_client.c	/^int tlsv1_client_get_cipher(struct tlsv1_client *conn, char *buf,$/;"	f	signature:(struct tlsv1_client *conn, char *buf, size_t buflen)
tlsv1_client_get_cipher	src/tls/tlsv1_client.h	/^int tlsv1_client_get_cipher(struct tlsv1_client *conn, char *buf,$/;"	p	signature:(struct tlsv1_client *conn, char *buf, size_t buflen)
tlsv1_client_get_keyblock_size	src/tls/tlsv1_client.c	/^int tlsv1_client_get_keyblock_size(struct tlsv1_client *conn)$/;"	f	signature:(struct tlsv1_client *conn)
tlsv1_client_get_keyblock_size	src/tls/tlsv1_client.h	/^int tlsv1_client_get_keyblock_size(struct tlsv1_client *conn);$/;"	p	signature:(struct tlsv1_client *conn)
tlsv1_client_get_keys	src/tls/tlsv1_client.c	/^int tlsv1_client_get_keys(struct tlsv1_client *conn, struct tls_keys *keys)$/;"	f	signature:(struct tlsv1_client *conn, struct tls_keys *keys)
tlsv1_client_get_keys	src/tls/tlsv1_client.h	/^int tlsv1_client_get_keys(struct tlsv1_client *conn, struct tls_keys *keys);$/;"	p	signature:(struct tlsv1_client *conn, struct tls_keys *keys)
tlsv1_client_global_deinit	src/tls/tlsv1_client.c	/^void tlsv1_client_global_deinit(void)$/;"	f	signature:(void)
tlsv1_client_global_deinit	src/tls/tlsv1_client.h	/^void tlsv1_client_global_deinit(void);$/;"	p	signature:(void)
tlsv1_client_global_init	src/tls/tlsv1_client.c	/^int tlsv1_client_global_init(void)$/;"	f	signature:(void)
tlsv1_client_global_init	src/tls/tlsv1_client.h	/^int tlsv1_client_global_init(void);$/;"	p	signature:(void)
tlsv1_client_handshake	src/tls/tlsv1_client.c	/^u8 * tlsv1_client_handshake(struct tlsv1_client *conn,$/;"	f	signature:(struct tlsv1_client *conn, const u8 *in_data, size_t in_len, size_t *out_len, u8 **appl_data, size_t *appl_data_len)
tlsv1_client_handshake	src/tls/tlsv1_client.h	/^u8 * tlsv1_client_handshake(struct tlsv1_client *conn,$/;"	p	signature:(struct tlsv1_client *conn, const u8 *in_data, size_t in_len, size_t *out_len, u8 **appl_data, size_t *appl_data_len)
tlsv1_client_handshake_write	src/tls/tlsv1_client_i.h	/^u8 * tlsv1_client_handshake_write(struct tlsv1_client *conn, size_t *out_len,$/;"	p	signature:(struct tlsv1_client *conn, size_t *out_len, int no_appl_data)
tlsv1_client_handshake_write	src/tls/tlsv1_client_write.c	/^u8 * tlsv1_client_handshake_write(struct tlsv1_client *conn, size_t *out_len,$/;"	f	signature:(struct tlsv1_client *conn, size_t *out_len, int no_appl_data)
tlsv1_client_hello_ext	src/tls/tlsv1_client.c	/^int tlsv1_client_hello_ext(struct tlsv1_client *conn, int ext_type,$/;"	f	signature:(struct tlsv1_client *conn, int ext_type, const u8 *data, size_t data_len)
tlsv1_client_hello_ext	src/tls/tlsv1_client.h	/^int tlsv1_client_hello_ext(struct tlsv1_client *conn, int ext_type,$/;"	p	signature:(struct tlsv1_client *conn, int ext_type, const u8 *data, size_t data_len)
tlsv1_client_init	src/tls/tlsv1_client.c	/^struct tlsv1_client * tlsv1_client_init(void)$/;"	f	signature:(void)
tlsv1_client_init	src/tls/tlsv1_client.h	/^struct tlsv1_client * tlsv1_client_init(void);$/;"	p	signature:(void)
tlsv1_client_prf	src/tls/tlsv1_client.c	/^int tlsv1_client_prf(struct tlsv1_client *conn, const char *label,$/;"	f	signature:(struct tlsv1_client *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tlsv1_client_prf	src/tls/tlsv1_client.h	/^int tlsv1_client_prf(struct tlsv1_client *conn, const char *label,$/;"	p	signature:(struct tlsv1_client *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tlsv1_client_process_handshake	src/tls/tlsv1_client_i.h	/^int tlsv1_client_process_handshake(struct tlsv1_client *conn, u8 ct,$/;"	p	signature:(struct tlsv1_client *conn, u8 ct, const u8 *buf, size_t *len, u8 **out_data, size_t *out_len)
tlsv1_client_process_handshake	src/tls/tlsv1_client_read.c	/^int tlsv1_client_process_handshake(struct tlsv1_client *conn, u8 ct,$/;"	f	signature:(struct tlsv1_client *conn, u8 ct, const u8 *buf, size_t *len, u8 **out_data, size_t *out_len)
tlsv1_client_resumed	src/tls/tlsv1_client.c	/^int tlsv1_client_resumed(struct tlsv1_client *conn)$/;"	f	signature:(struct tlsv1_client *conn)
tlsv1_client_resumed	src/tls/tlsv1_client.h	/^int tlsv1_client_resumed(struct tlsv1_client *conn);$/;"	p	signature:(struct tlsv1_client *conn)
tlsv1_client_send_alert	src/tls/tlsv1_client_i.h	/^u8 * tlsv1_client_send_alert(struct tlsv1_client *conn, u8 level,$/;"	p	signature:(struct tlsv1_client *conn, u8 level, u8 description, size_t *out_len)
tlsv1_client_send_alert	src/tls/tlsv1_client_write.c	/^u8 * tlsv1_client_send_alert(struct tlsv1_client *conn, u8 level,$/;"	f	signature:(struct tlsv1_client *conn, u8 level, u8 description, size_t *out_len)
tlsv1_client_session_ticket_cb	src/tls/tlsv1_client.h	/^typedef int (*tlsv1_client_session_ticket_cb)$/;"	t
tlsv1_client_set_cipher_list	src/tls/tlsv1_client.c	/^int tlsv1_client_set_cipher_list(struct tlsv1_client *conn, u8 *ciphers)$/;"	f	signature:(struct tlsv1_client *conn, u8 *ciphers)
tlsv1_client_set_cipher_list	src/tls/tlsv1_client.h	/^int tlsv1_client_set_cipher_list(struct tlsv1_client *conn, u8 *ciphers);$/;"	p	signature:(struct tlsv1_client *conn, u8 *ciphers)
tlsv1_client_set_cred	src/tls/tlsv1_client.c	/^int tlsv1_client_set_cred(struct tlsv1_client *conn,$/;"	f	signature:(struct tlsv1_client *conn, struct tlsv1_credentials *cred)
tlsv1_client_set_cred	src/tls/tlsv1_client.h	/^int tlsv1_client_set_cred(struct tlsv1_client *conn,$/;"	p	signature:(struct tlsv1_client *conn, struct tlsv1_credentials *cred)
tlsv1_client_set_session_ticket_cb	src/tls/tlsv1_client.c	/^void tlsv1_client_set_session_ticket_cb(struct tlsv1_client *conn,$/;"	f	signature:(struct tlsv1_client *conn, tlsv1_client_session_ticket_cb cb, void *ctx)
tlsv1_client_set_session_ticket_cb	src/tls/tlsv1_client.h	/^void tlsv1_client_set_session_ticket_cb(struct tlsv1_client *conn,$/;"	p	signature:(struct tlsv1_client *conn, tlsv1_client_session_ticket_cb cb, void *ctx)
tlsv1_client_set_time_checks	src/tls/tlsv1_client.c	/^void tlsv1_client_set_time_checks(struct tlsv1_client *conn, int enabled)$/;"	f	signature:(struct tlsv1_client *conn, int enabled)
tlsv1_client_set_time_checks	src/tls/tlsv1_client.h	/^void tlsv1_client_set_time_checks(struct tlsv1_client *conn, int enabled);$/;"	p	signature:(struct tlsv1_client *conn, int enabled)
tlsv1_client_shutdown	src/tls/tlsv1_client.c	/^int tlsv1_client_shutdown(struct tlsv1_client *conn)$/;"	f	signature:(struct tlsv1_client *conn)
tlsv1_client_shutdown	src/tls/tlsv1_client.h	/^int tlsv1_client_shutdown(struct tlsv1_client *conn);$/;"	p	signature:(struct tlsv1_client *conn)
tlsv1_cred_alloc	src/tls/tlsv1_cred.c	/^struct tlsv1_credentials * tlsv1_cred_alloc(void)$/;"	f	signature:(void)
tlsv1_cred_alloc	src/tls/tlsv1_cred.h	/^struct tlsv1_credentials * tlsv1_cred_alloc(void);$/;"	p	signature:(void)
tlsv1_cred_free	src/tls/tlsv1_cred.c	/^void tlsv1_cred_free(struct tlsv1_credentials *cred)$/;"	f	signature:(struct tlsv1_credentials *cred)
tlsv1_cred_free	src/tls/tlsv1_cred.h	/^void tlsv1_cred_free(struct tlsv1_credentials *cred);$/;"	p	signature:(struct tlsv1_credentials *cred)
tlsv1_credentials	src/tls/tlsv1_cred.h	/^struct tlsv1_credentials {$/;"	s
tlsv1_credentials::cert	src/tls/tlsv1_cred.h	/^	struct x509_certificate *cert;$/;"	m	struct:tlsv1_credentials	typeref:struct:tlsv1_credentials::x509_certificate	access:public
tlsv1_credentials::dh_g	src/tls/tlsv1_cred.h	/^	u8 *dh_g; \/* generator *\/$/;"	m	struct:tlsv1_credentials	access:public
tlsv1_credentials::dh_g_len	src/tls/tlsv1_cred.h	/^	size_t dh_g_len;$/;"	m	struct:tlsv1_credentials	access:public
tlsv1_credentials::dh_p	src/tls/tlsv1_cred.h	/^	u8 *dh_p; \/* prime *\/$/;"	m	struct:tlsv1_credentials	access:public
tlsv1_credentials::dh_p_len	src/tls/tlsv1_cred.h	/^	size_t dh_p_len;$/;"	m	struct:tlsv1_credentials	access:public
tlsv1_credentials::key	src/tls/tlsv1_cred.h	/^	struct crypto_private_key *key;$/;"	m	struct:tlsv1_credentials	typeref:struct:tlsv1_credentials::crypto_private_key	access:public
tlsv1_credentials::trusted_certs	src/tls/tlsv1_cred.h	/^	struct x509_certificate *trusted_certs;$/;"	m	struct:tlsv1_credentials	typeref:struct:tlsv1_credentials::x509_certificate	access:public
tlsv1_key_x_anon_dh	src/tls/tlsv1_client_write.c	/^static int tlsv1_key_x_anon_dh(struct tlsv1_client *conn, u8 **pos, u8 *end)$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **pos, u8 *end)
tlsv1_key_x_rsa	src/tls/tlsv1_client_write.c	/^static int tlsv1_key_x_rsa(struct tlsv1_client *conn, u8 **pos, u8 *end)$/;"	f	file:	signature:(struct tlsv1_client *conn, u8 **pos, u8 *end)
tlsv1_process_diffie_hellman	src/tls/tlsv1_client_read.c	/^static int tlsv1_process_diffie_hellman(struct tlsv1_client *conn,$/;"	f	file:	signature:(struct tlsv1_client *conn, const u8 *buf, size_t len)
tlsv1_record_change_read_cipher	src/tls/tlsv1_record.c	/^int tlsv1_record_change_read_cipher(struct tlsv1_record_layer *rl)$/;"	f	signature:(struct tlsv1_record_layer *rl)
tlsv1_record_change_read_cipher	src/tls/tlsv1_record.h	/^int tlsv1_record_change_read_cipher(struct tlsv1_record_layer *rl);$/;"	p	signature:(struct tlsv1_record_layer *rl)
tlsv1_record_change_write_cipher	src/tls/tlsv1_record.c	/^int tlsv1_record_change_write_cipher(struct tlsv1_record_layer *rl)$/;"	f	signature:(struct tlsv1_record_layer *rl)
tlsv1_record_change_write_cipher	src/tls/tlsv1_record.h	/^int tlsv1_record_change_write_cipher(struct tlsv1_record_layer *rl);$/;"	p	signature:(struct tlsv1_record_layer *rl)
tlsv1_record_layer	src/tls/tlsv1_record.h	/^struct tlsv1_record_layer {$/;"	s
tlsv1_record_layer::cipher_alg	src/tls/tlsv1_record.h	/^	enum crypto_cipher_alg cipher_alg;$/;"	m	struct:tlsv1_record_layer	typeref:enum:tlsv1_record_layer::crypto_cipher_alg	access:public
tlsv1_record_layer::cipher_suite	src/tls/tlsv1_record.h	/^	u16 cipher_suite;$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::hash_alg	src/tls/tlsv1_record.h	/^	enum crypto_hash_alg hash_alg;$/;"	m	struct:tlsv1_record_layer	typeref:enum:tlsv1_record_layer::crypto_hash_alg	access:public
tlsv1_record_layer::hash_size	src/tls/tlsv1_record.h	/^	size_t hash_size;$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::iv_size	src/tls/tlsv1_record.h	/^	size_t iv_size; \/* also block_size *\/$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::key_material_len	src/tls/tlsv1_record.h	/^	size_t key_material_len;$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::read_cbc	src/tls/tlsv1_record.h	/^	struct crypto_cipher *read_cbc;$/;"	m	struct:tlsv1_record_layer	typeref:struct:tlsv1_record_layer::crypto_cipher	access:public
tlsv1_record_layer::read_cipher_suite	src/tls/tlsv1_record.h	/^	u16 read_cipher_suite;$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::read_iv	src/tls/tlsv1_record.h	/^	u8 read_iv[TLS_MAX_IV_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::read_key	src/tls/tlsv1_record.h	/^	u8 read_key[TLS_MAX_WRITE_KEY_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::read_mac_secret	src/tls/tlsv1_record.h	/^	u8 read_mac_secret[TLS_MAX_WRITE_MAC_SECRET_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::read_seq_num	src/tls/tlsv1_record.h	/^	u8 read_seq_num[TLS_SEQ_NUM_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::tls_version	src/tls/tlsv1_record.h	/^	u16 tls_version;$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::write_cbc	src/tls/tlsv1_record.h	/^	struct crypto_cipher *write_cbc;$/;"	m	struct:tlsv1_record_layer	typeref:struct:tlsv1_record_layer::crypto_cipher	access:public
tlsv1_record_layer::write_cipher_suite	src/tls/tlsv1_record.h	/^	u16 write_cipher_suite;$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::write_iv	src/tls/tlsv1_record.h	/^	u8 write_iv[TLS_MAX_IV_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::write_key	src/tls/tlsv1_record.h	/^	u8 write_key[TLS_MAX_WRITE_KEY_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::write_mac_secret	src/tls/tlsv1_record.h	/^	u8 write_mac_secret[TLS_MAX_WRITE_MAC_SECRET_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_layer::write_seq_num	src/tls/tlsv1_record.h	/^	u8 write_seq_num[TLS_SEQ_NUM_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
tlsv1_record_receive	src/tls/tlsv1_record.c	/^int tlsv1_record_receive(struct tlsv1_record_layer *rl,$/;"	f	signature:(struct tlsv1_record_layer *rl, const u8 *in_data, size_t in_len, u8 *out_data, size_t *out_len, u8 *alert)
tlsv1_record_receive	src/tls/tlsv1_record.h	/^int tlsv1_record_receive(struct tlsv1_record_layer *rl,$/;"	p	signature:(struct tlsv1_record_layer *rl, const u8 *in_data, size_t in_len, u8 *out_data, size_t *out_len, u8 *alert)
tlsv1_record_send	src/tls/tlsv1_record.c	/^int tlsv1_record_send(struct tlsv1_record_layer *rl, u8 content_type, u8 *buf,$/;"	f	signature:(struct tlsv1_record_layer *rl, u8 content_type, u8 *buf, size_t buf_size, const u8 *payload, size_t payload_len, size_t *out_len)
tlsv1_record_send	src/tls/tlsv1_record.h	/^int tlsv1_record_send(struct tlsv1_record_layer *rl, u8 content_type, u8 *buf,$/;"	p	signature:(struct tlsv1_record_layer *rl, u8 content_type, u8 *buf, size_t buf_size, const u8 *payload, size_t payload_len, size_t *out_len)
tlsv1_record_set_cipher_suite	src/tls/tlsv1_record.c	/^int tlsv1_record_set_cipher_suite(struct tlsv1_record_layer *rl,$/;"	f	signature:(struct tlsv1_record_layer *rl, u16 cipher_suite)
tlsv1_record_set_cipher_suite	src/tls/tlsv1_record.h	/^int tlsv1_record_set_cipher_suite(struct tlsv1_record_layer *rl,$/;"	p	signature:(struct tlsv1_record_layer *rl, u16 cipher_suite)
tlsv1_server	src/tls/tlsv1_server_i.h	/^struct tlsv1_server {$/;"	s
tlsv1_server::CERTIFICATE_VERIFY	src/tls/tlsv1_server_i.h	/^		CERTIFICATE_VERIFY, CHANGE_CIPHER_SPEC, CLIENT_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::CHANGE_CIPHER_SPEC	src/tls/tlsv1_server_i.h	/^		CERTIFICATE_VERIFY, CHANGE_CIPHER_SPEC, CLIENT_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::CLIENT_CERTIFICATE	src/tls/tlsv1_server_i.h	/^		SERVER_HELLO_DONE, CLIENT_CERTIFICATE, CLIENT_KEY_EXCHANGE,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::CLIENT_FINISHED	src/tls/tlsv1_server_i.h	/^		CERTIFICATE_VERIFY, CHANGE_CIPHER_SPEC, CLIENT_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::CLIENT_HELLO	src/tls/tlsv1_server_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::CLIENT_KEY_EXCHANGE	src/tls/tlsv1_server_i.h	/^		SERVER_HELLO_DONE, CLIENT_CERTIFICATE, CLIENT_KEY_EXCHANGE,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::ESTABLISHED	src/tls/tlsv1_server_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::FAILED	src/tls/tlsv1_server_i.h	/^		ESTABLISHED, FAILED$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_CERTIFICATE	src/tls/tlsv1_server_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_CERTIFICATE_REQUEST	src/tls/tlsv1_server_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_CHANGE_CIPHER_SPEC	src/tls/tlsv1_server_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_FINISHED	src/tls/tlsv1_server_i.h	/^		SERVER_CHANGE_CIPHER_SPEC, SERVER_FINISHED,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_HELLO	src/tls/tlsv1_server_i.h	/^		CLIENT_HELLO, SERVER_HELLO, SERVER_CERTIFICATE,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_HELLO_DONE	src/tls/tlsv1_server_i.h	/^		SERVER_HELLO_DONE, CLIENT_CERTIFICATE, CLIENT_KEY_EXCHANGE,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::SERVER_KEY_EXCHANGE	src/tls/tlsv1_server_i.h	/^		SERVER_KEY_EXCHANGE, SERVER_CERTIFICATE_REQUEST,$/;"	e	enum:tlsv1_server::__anon105
tlsv1_server::alert_description	src/tls/tlsv1_server_i.h	/^	u8 alert_description;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::alert_level	src/tls/tlsv1_server_i.h	/^	u8 alert_level;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::cipher_suite	src/tls/tlsv1_server_i.h	/^	u16 cipher_suite;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::cipher_suites	src/tls/tlsv1_server_i.h	/^	u16 cipher_suites[MAX_CIPHER_COUNT];$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::client_random	src/tls/tlsv1_server_i.h	/^	u8 client_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::client_rsa_key	src/tls/tlsv1_server_i.h	/^	struct crypto_public_key *client_rsa_key;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::crypto_public_key	access:public
tlsv1_server::client_version	src/tls/tlsv1_server_i.h	/^	u16 client_version;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::cred	src/tls/tlsv1_server_i.h	/^	struct tlsv1_credentials *cred;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::tlsv1_credentials	access:public
tlsv1_server::dh_secret	src/tls/tlsv1_server_i.h	/^	u8 *dh_secret;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::dh_secret_len	src/tls/tlsv1_server_i.h	/^	size_t dh_secret_len;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::master_secret	src/tls/tlsv1_server_i.h	/^	u8 master_secret[TLS_MASTER_SECRET_LEN];$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::num_cipher_suites	src/tls/tlsv1_server_i.h	/^	size_t num_cipher_suites;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::rl	src/tls/tlsv1_server_i.h	/^	struct tlsv1_record_layer rl;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::tlsv1_record_layer	access:public
tlsv1_server::server_random	src/tls/tlsv1_server_i.h	/^	u8 server_random[TLS_RANDOM_LEN];$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::session_id	src/tls/tlsv1_server_i.h	/^	u8 session_id[TLS_SESSION_ID_MAX_LEN];$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::session_id_len	src/tls/tlsv1_server_i.h	/^	size_t session_id_len;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::session_ticket	src/tls/tlsv1_server_i.h	/^	u8 *session_ticket;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::session_ticket_cb	src/tls/tlsv1_server_i.h	/^	tlsv1_server_session_ticket_cb session_ticket_cb;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::session_ticket_cb_ctx	src/tls/tlsv1_server_i.h	/^	void *session_ticket_cb_ctx;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::session_ticket_len	src/tls/tlsv1_server_i.h	/^	size_t session_ticket_len;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::state	src/tls/tlsv1_server_i.h	/^	} state;$/;"	m	struct:tlsv1_server	typeref:enum:tlsv1_server::__anon105	access:public
tlsv1_server::use_session_ticket	src/tls/tlsv1_server_i.h	/^	int use_session_ticket;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server::verify	src/tls/tlsv1_server_i.h	/^	struct tls_verify_hash verify;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::tls_verify_hash	access:public
tlsv1_server::verify_peer	src/tls/tlsv1_server_i.h	/^	int verify_peer;$/;"	m	struct:tlsv1_server	access:public
tlsv1_server_alert	src/tls/tlsv1_server.c	/^void tlsv1_server_alert(struct tlsv1_server *conn, u8 level, u8 description)$/;"	f	signature:(struct tlsv1_server *conn, u8 level, u8 description)
tlsv1_server_alert	src/tls/tlsv1_server_i.h	/^void tlsv1_server_alert(struct tlsv1_server *conn, u8 level, u8 description);$/;"	p	signature:(struct tlsv1_server *conn, u8 level, u8 description)
tlsv1_server_clear_data	src/tls/tlsv1_server.c	/^static void tlsv1_server_clear_data(struct tlsv1_server *conn)$/;"	f	file:	signature:(struct tlsv1_server *conn)
tlsv1_server_decrypt	src/tls/tlsv1_server.c	/^int tlsv1_server_decrypt(struct tlsv1_server *conn,$/;"	f	signature:(struct tlsv1_server *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_server_decrypt	src/tls/tlsv1_server.h	/^int tlsv1_server_decrypt(struct tlsv1_server *conn,$/;"	p	signature:(struct tlsv1_server *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_server_deinit	src/tls/tlsv1_server.c	/^void tlsv1_server_deinit(struct tlsv1_server *conn)$/;"	f	signature:(struct tlsv1_server *conn)
tlsv1_server_deinit	src/tls/tlsv1_server.h	/^void tlsv1_server_deinit(struct tlsv1_server *conn);$/;"	p	signature:(struct tlsv1_server *conn)
tlsv1_server_derive_keys	src/tls/tlsv1_server.c	/^int tlsv1_server_derive_keys(struct tlsv1_server *conn,$/;"	f	signature:(struct tlsv1_server *conn, const u8 *pre_master_secret, size_t pre_master_secret_len)
tlsv1_server_derive_keys	src/tls/tlsv1_server_i.h	/^int tlsv1_server_derive_keys(struct tlsv1_server *conn,$/;"	p	signature:(struct tlsv1_server *conn, const u8 *pre_master_secret, size_t pre_master_secret_len)
tlsv1_server_encrypt	src/tls/tlsv1_server.c	/^int tlsv1_server_encrypt(struct tlsv1_server *conn,$/;"	f	signature:(struct tlsv1_server *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_server_encrypt	src/tls/tlsv1_server.h	/^int tlsv1_server_encrypt(struct tlsv1_server *conn,$/;"	p	signature:(struct tlsv1_server *conn, const u8 *in_data, size_t in_len, u8 *out_data, size_t out_len)
tlsv1_server_established	src/tls/tlsv1_server.c	/^int tlsv1_server_established(struct tlsv1_server *conn)$/;"	f	signature:(struct tlsv1_server *conn)
tlsv1_server_established	src/tls/tlsv1_server.h	/^int tlsv1_server_established(struct tlsv1_server *conn);$/;"	p	signature:(struct tlsv1_server *conn)
tlsv1_server_get_cipher	src/tls/tlsv1_server.c	/^int tlsv1_server_get_cipher(struct tlsv1_server *conn, char *buf,$/;"	f	signature:(struct tlsv1_server *conn, char *buf, size_t buflen)
tlsv1_server_get_cipher	src/tls/tlsv1_server.h	/^int tlsv1_server_get_cipher(struct tlsv1_server *conn, char *buf,$/;"	p	signature:(struct tlsv1_server *conn, char *buf, size_t buflen)
tlsv1_server_get_keyblock_size	src/tls/tlsv1_server.c	/^int tlsv1_server_get_keyblock_size(struct tlsv1_server *conn)$/;"	f	signature:(struct tlsv1_server *conn)
tlsv1_server_get_keyblock_size	src/tls/tlsv1_server.h	/^int tlsv1_server_get_keyblock_size(struct tlsv1_server *conn);$/;"	p	signature:(struct tlsv1_server *conn)
tlsv1_server_get_keys	src/tls/tlsv1_server.c	/^int tlsv1_server_get_keys(struct tlsv1_server *conn, struct tls_keys *keys)$/;"	f	signature:(struct tlsv1_server *conn, struct tls_keys *keys)
tlsv1_server_get_keys	src/tls/tlsv1_server.h	/^int tlsv1_server_get_keys(struct tlsv1_server *conn, struct tls_keys *keys);$/;"	p	signature:(struct tlsv1_server *conn, struct tls_keys *keys)
tlsv1_server_global_deinit	src/tls/tlsv1_server.c	/^void tlsv1_server_global_deinit(void)$/;"	f	signature:(void)
tlsv1_server_global_deinit	src/tls/tlsv1_server.h	/^void tlsv1_server_global_deinit(void);$/;"	p	signature:(void)
tlsv1_server_global_init	src/tls/tlsv1_server.c	/^int tlsv1_server_global_init(void)$/;"	f	signature:(void)
tlsv1_server_global_init	src/tls/tlsv1_server.h	/^int tlsv1_server_global_init(void);$/;"	p	signature:(void)
tlsv1_server_handshake	src/tls/tlsv1_server.c	/^u8 * tlsv1_server_handshake(struct tlsv1_server *conn,$/;"	f	signature:(struct tlsv1_server *conn, const u8 *in_data, size_t in_len, size_t *out_len)
tlsv1_server_handshake	src/tls/tlsv1_server.h	/^u8 * tlsv1_server_handshake(struct tlsv1_server *conn,$/;"	p	signature:(struct tlsv1_server *conn, const u8 *in_data, size_t in_len, size_t *out_len)
tlsv1_server_handshake_write	src/tls/tlsv1_server_i.h	/^u8 * tlsv1_server_handshake_write(struct tlsv1_server *conn, size_t *out_len);$/;"	p	signature:(struct tlsv1_server *conn, size_t *out_len)
tlsv1_server_handshake_write	src/tls/tlsv1_server_write.c	/^u8 * tlsv1_server_handshake_write(struct tlsv1_server *conn, size_t *out_len)$/;"	f	signature:(struct tlsv1_server *conn, size_t *out_len)
tlsv1_server_init	src/tls/tlsv1_server.c	/^struct tlsv1_server * tlsv1_server_init(struct tlsv1_credentials *cred)$/;"	f	signature:(struct tlsv1_credentials *cred)
tlsv1_server_init	src/tls/tlsv1_server.h	/^struct tlsv1_server * tlsv1_server_init(struct tlsv1_credentials *cred);$/;"	p	signature:(struct tlsv1_credentials *cred)
tlsv1_server_prf	src/tls/tlsv1_server.c	/^int tlsv1_server_prf(struct tlsv1_server *conn, const char *label,$/;"	f	signature:(struct tlsv1_server *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tlsv1_server_prf	src/tls/tlsv1_server.h	/^int tlsv1_server_prf(struct tlsv1_server *conn, const char *label,$/;"	p	signature:(struct tlsv1_server *conn, const char *label, int server_random_first, u8 *out, size_t out_len)
tlsv1_server_process_handshake	src/tls/tlsv1_server_i.h	/^int tlsv1_server_process_handshake(struct tlsv1_server *conn, u8 ct,$/;"	p	signature:(struct tlsv1_server *conn, u8 ct, const u8 *buf, size_t *len)
tlsv1_server_process_handshake	src/tls/tlsv1_server_read.c	/^int tlsv1_server_process_handshake(struct tlsv1_server *conn, u8 ct,$/;"	f	signature:(struct tlsv1_server *conn, u8 ct, const u8 *buf, size_t *len)
tlsv1_server_resumed	src/tls/tlsv1_server.c	/^int tlsv1_server_resumed(struct tlsv1_server *conn)$/;"	f	signature:(struct tlsv1_server *conn)
tlsv1_server_resumed	src/tls/tlsv1_server.h	/^int tlsv1_server_resumed(struct tlsv1_server *conn);$/;"	p	signature:(struct tlsv1_server *conn)
tlsv1_server_send_alert	src/tls/tlsv1_server_i.h	/^u8 * tlsv1_server_send_alert(struct tlsv1_server *conn, u8 level,$/;"	p	signature:(struct tlsv1_server *conn, u8 level, u8 description, size_t *out_len)
tlsv1_server_send_alert	src/tls/tlsv1_server_write.c	/^u8 * tlsv1_server_send_alert(struct tlsv1_server *conn, u8 level,$/;"	f	signature:(struct tlsv1_server *conn, u8 level, u8 description, size_t *out_len)
tlsv1_server_session_ticket_cb	src/tls/tlsv1_server.h	/^typedef int (*tlsv1_server_session_ticket_cb)$/;"	t
tlsv1_server_set_cipher_list	src/tls/tlsv1_server.c	/^int tlsv1_server_set_cipher_list(struct tlsv1_server *conn, u8 *ciphers)$/;"	f	signature:(struct tlsv1_server *conn, u8 *ciphers)
tlsv1_server_set_cipher_list	src/tls/tlsv1_server.h	/^int tlsv1_server_set_cipher_list(struct tlsv1_server *conn, u8 *ciphers);$/;"	p	signature:(struct tlsv1_server *conn, u8 *ciphers)
tlsv1_server_set_session_ticket_cb	src/tls/tlsv1_server.c	/^void tlsv1_server_set_session_ticket_cb(struct tlsv1_server *conn,$/;"	f	signature:(struct tlsv1_server *conn, tlsv1_server_session_ticket_cb cb, void *ctx)
tlsv1_server_set_session_ticket_cb	src/tls/tlsv1_server.h	/^void tlsv1_server_set_session_ticket_cb(struct tlsv1_server *conn,$/;"	p	signature:(struct tlsv1_server *conn, tlsv1_server_session_ticket_cb cb, void *ctx)
tlsv1_server_set_verify	src/tls/tlsv1_server.c	/^int tlsv1_server_set_verify(struct tlsv1_server *conn, int verify_peer)$/;"	f	signature:(struct tlsv1_server *conn, int verify_peer)
tlsv1_server_set_verify	src/tls/tlsv1_server.h	/^int tlsv1_server_set_verify(struct tlsv1_server *conn, int verify_peer);$/;"	p	signature:(struct tlsv1_server *conn, int verify_peer)
tlsv1_server_shutdown	src/tls/tlsv1_server.c	/^int tlsv1_server_shutdown(struct tlsv1_server *conn)$/;"	f	signature:(struct tlsv1_server *conn)
tlsv1_server_shutdown	src/tls/tlsv1_server.h	/^int tlsv1_server_shutdown(struct tlsv1_server *conn);$/;"	p	signature:(struct tlsv1_server *conn)
tlsv1_set_ca_cert	src/tls/tlsv1_cred.c	/^int tlsv1_set_ca_cert(struct tlsv1_credentials *cred, const char *cert,$/;"	f	signature:(struct tlsv1_credentials *cred, const char *cert, const u8 *cert_blob, size_t cert_blob_len, const char *path)
tlsv1_set_ca_cert	src/tls/tlsv1_cred.h	/^int tlsv1_set_ca_cert(struct tlsv1_credentials *cred, const char *cert,$/;"	p	signature:(struct tlsv1_credentials *cred, const char *cert, const u8 *cert_blob, size_t cert_blob_len, const char *path)
tlsv1_set_cert	src/tls/tlsv1_cred.c	/^int tlsv1_set_cert(struct tlsv1_credentials *cred, const char *cert,$/;"	f	signature:(struct tlsv1_credentials *cred, const char *cert, const u8 *cert_blob, size_t cert_blob_len)
tlsv1_set_cert	src/tls/tlsv1_cred.h	/^int tlsv1_set_cert(struct tlsv1_credentials *cred, const char *cert,$/;"	p	signature:(struct tlsv1_credentials *cred, const char *cert, const u8 *cert_blob, size_t cert_blob_len)
tlsv1_set_cert_chain	src/tls/tlsv1_cred.c	/^static int tlsv1_set_cert_chain(struct x509_certificate **chain,$/;"	f	file:	signature:(struct x509_certificate **chain, const char *cert, const u8 *cert_blob, size_t cert_blob_len)
tlsv1_set_dhparams	src/tls/tlsv1_cred.c	/^int tlsv1_set_dhparams(struct tlsv1_credentials *cred, const char *dh_file,$/;"	f	signature:(struct tlsv1_credentials *cred, const char *dh_file, const u8 *dh_blob, size_t dh_blob_len)
tlsv1_set_dhparams	src/tls/tlsv1_cred.h	/^int tlsv1_set_dhparams(struct tlsv1_credentials *cred, const char *dh_file,$/;"	p	signature:(struct tlsv1_credentials *cred, const char *dh_file, const u8 *dh_blob, size_t dh_blob_len)
tlsv1_set_dhparams_blob	src/tls/tlsv1_cred.c	/^static int tlsv1_set_dhparams_blob(struct tlsv1_credentials *cred,$/;"	f	file:	signature:(struct tlsv1_credentials *cred, const u8 *buf, size_t len)
tlsv1_set_dhparams_der	src/tls/tlsv1_cred.c	/^static int tlsv1_set_dhparams_der(struct tlsv1_credentials *cred,$/;"	f	file:	signature:(struct tlsv1_credentials *cred, const u8 *dh, size_t len)
tlsv1_set_key	src/tls/tlsv1_cred.c	/^static int tlsv1_set_key(struct tlsv1_credentials *cred,$/;"	f	file:	signature:(struct tlsv1_credentials *cred, const u8 *key, size_t len, const char *passwd)
tlsv1_set_key_enc_pem	src/tls/tlsv1_cred.c	/^static struct crypto_private_key * tlsv1_set_key_enc_pem(const u8 *key,$/;"	f	file:	signature:(const u8 *key, size_t len, const char *passwd)
tlsv1_set_key_pem	src/tls/tlsv1_cred.c	/^static struct crypto_private_key * tlsv1_set_key_pem(const u8 *key, size_t len)$/;"	f	file:	signature:(const u8 *key, size_t len)
tlsv1_set_private_key	src/tls/tlsv1_cred.c	/^int tlsv1_set_private_key(struct tlsv1_credentials *cred,$/;"	f	signature:(struct tlsv1_credentials *cred, const char *private_key, const char *private_key_passwd, const u8 *private_key_blob, size_t private_key_blob_len)
tlsv1_set_private_key	src/tls/tlsv1_cred.h	/^int tlsv1_set_private_key(struct tlsv1_credentials *cred,$/;"	p	signature:(struct tlsv1_credentials *cred, const char *private_key, const char *private_key_passwd, const u8 *private_key_blob, size_t private_key_blob_len)
tlv_request	src/eap_server/eap_server_peap.c	/^	enum { TLV_REQ_NONE, TLV_REQ_SUCCESS, TLV_REQ_FAILURE } tlv_request;$/;"	m	struct:eap_peap_data	typeref:enum:eap_peap_data::__anon161	file:	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type; \/* PAC_TYPE_PAC_TYPE *\/$/;"	m	struct:eap_tlv_pac_type_tlv	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_hdr	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_intermediate_result_tlv	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_nak_tlv	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_pac_ack_tlv	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_request_action_tlv	access:public
tlv_type	src/eap_common/eap_tlv_common.h	/^	be16 tlv_type;$/;"	m	struct:eap_tlv_result_tlv	access:public
tlvs	src/drivers/driver.h	/^		const u8 *tlvs;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
tlvs	src/drivers/driver.h	/^		const u8 *tlvs;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
tlvs	src/p2p/p2p_i.h	/^	struct wpabuf *tlvs;$/;"	m	struct:p2p_sd_query	typeref:struct:p2p_sd_query::wpabuf	access:public
tlvs_len	src/drivers/driver.h	/^		size_t tlvs_len;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
tlvs_len	src/drivers/driver.h	/^		size_t tlvs_len;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
tmpbuf	src/eap_server/eap_tls_common.h	/^	struct wpabuf tmpbuf;$/;"	m	struct:eap_ssl_data	typeref:struct:eap_ssl_data::wpabuf	access:public
tnc	src/ap/ap_config.h	/^	int tnc;$/;"	m	struct:hostapd_bss_config	access:public
tnc	src/eap_server/eap.h	/^	int tnc;$/;"	m	struct:eap_config	access:public
tnc	src/eap_server/eap_i.h	/^	int tnc;$/;"	m	struct:eap_sm	access:public
tnc	src/eapol_auth/eapol_auth_sm.h	/^	int tnc;$/;"	m	struct:eapol_auth_config	access:public
tnc	src/radius/radius_server.c	/^	int tnc;$/;"	m	struct:radius_server_data	file:	access:public
tnc	src/radius/radius_server.h	/^	int tnc;$/;"	m	struct:radius_server_conf	access:public
tnc_if_imc	src/eap_peer/tncc.c	/^struct tnc_if_imc {$/;"	s	file:
tnc_if_imc::BatchEnding	src/eap_peer/tncc.c	/^	TNC_Result (*BatchEnding)($/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::BeginHandshake	src/eap_peer/tncc.c	/^	TNC_Result (*BeginHandshake)($/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::Initialize	src/eap_peer/tncc.c	/^	TNC_Result (*Initialize)($/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::NotifyConnectionChange	src/eap_peer/tncc.c	/^	TNC_Result (*NotifyConnectionChange)($/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::ProvideBindFunction	src/eap_peer/tncc.c	/^	TNC_Result (*ProvideBindFunction)($/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::ReceiveMessage	src/eap_peer/tncc.c	/^	TNC_Result (*ReceiveMessage)($/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::Terminate	src/eap_peer/tncc.c	/^	TNC_Result (*Terminate)(TNC_IMCID imcID);$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::connectionID	src/eap_peer/tncc.c	/^	TNC_ConnectionID connectionID;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::dlhandle	src/eap_peer/tncc.c	/^	void *dlhandle; \/* from dlopen() *\/$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::imcID	src/eap_peer/tncc.c	/^	TNC_IMCID imcID;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::imc_send	src/eap_peer/tncc.c	/^	u8 *imc_send;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::imc_send_len	src/eap_peer/tncc.c	/^	size_t imc_send_len;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::name	src/eap_peer/tncc.c	/^	char *name;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::next	src/eap_peer/tncc.c	/^	struct tnc_if_imc *next;$/;"	m	struct:tnc_if_imc	typeref:struct:tnc_if_imc::tnc_if_imc	file:	access:public
tnc_if_imc::num_supported_types	src/eap_peer/tncc.c	/^	size_t num_supported_types;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::path	src/eap_peer/tncc.c	/^	char *path;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imc::supported_types	src/eap_peer/tncc.c	/^	TNC_MessageTypeList supported_types;$/;"	m	struct:tnc_if_imc	file:	access:public
tnc_if_imv	src/eap_server/tncs.c	/^struct tnc_if_imv {$/;"	s	file:
tnc_if_imv::BatchEnding	src/eap_server/tncs.c	/^	TNC_Result (*BatchEnding)($/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::Initialize	src/eap_server/tncs.c	/^	TNC_Result (*Initialize)($/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::NotifyConnectionChange	src/eap_server/tncs.c	/^	TNC_Result (*NotifyConnectionChange)($/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::ProvideBindFunction	src/eap_server/tncs.c	/^	TNC_Result (*ProvideBindFunction)($/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::ReceiveMessage	src/eap_server/tncs.c	/^	TNC_Result (*ReceiveMessage)($/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::SolicitRecommendation	src/eap_server/tncs.c	/^	TNC_Result (*SolicitRecommendation)($/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::Terminate	src/eap_server/tncs.c	/^	TNC_Result (*Terminate)(TNC_IMVID imvID);$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::dlhandle	src/eap_server/tncs.c	/^	void *dlhandle; \/* from dlopen() *\/$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::imvID	src/eap_server/tncs.c	/^	TNC_IMVID imvID;$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::name	src/eap_server/tncs.c	/^	char *name;$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::next	src/eap_server/tncs.c	/^	struct tnc_if_imv *next;$/;"	m	struct:tnc_if_imv	typeref:struct:tnc_if_imv::tnc_if_imv	file:	access:public
tnc_if_imv::num_supported_types	src/eap_server/tncs.c	/^	size_t num_supported_types;$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::path	src/eap_server/tncs.c	/^	char *path;$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_if_imv::supported_types	src/eap_server/tncs.c	/^	TNC_MessageTypeList supported_types;$/;"	m	struct:tnc_if_imv	file:	access:public
tnc_imc	src/eap_peer/tncc.c	/^static struct tnc_if_imc *tnc_imc[TNC_MAX_IMC_ID] = { NULL };$/;"	v	typeref:struct:tnc_if_imc	file:
tnc_started	src/eap_peer/eap_ttls.c	/^	int tnc_started;$/;"	m	struct:eap_ttls_data	file:	access:public
tnc_started	src/eap_server/eap_server_fast.c	/^	int tnc_started;$/;"	m	struct:eap_fast_data	file:	access:public
tnc_started	src/eap_server/eap_server_ttls.c	/^	int tnc_started;$/;"	m	struct:eap_ttls_data	file:	access:public
tncc	src/eap_peer/eap_tnc.c	/^	struct tncc_data *tncc;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::tncc_data	file:	access:public
tncc_build_soh	src/eap_peer/tncc.c	/^static struct wpabuf * tncc_build_soh(int ver)$/;"	f	file:	signature:(int ver)
tncc_copy_send_buf	src/eap_peer/tncc.c	/^u8 * tncc_copy_send_buf(struct tncc_data *tncc, u8 *pos)$/;"	f	signature:(struct tncc_data *tncc, u8 *pos)
tncc_copy_send_buf	src/eap_peer/tncc.h	/^u8 * tncc_copy_send_buf(struct tncc_data *tncc, u8 *pos);$/;"	p	signature:(struct tncc_data *tncc, u8 *pos)
tncc_data	src/eap_peer/tncc.c	/^struct tncc_data {$/;"	s	file:
tncc_data::imc	src/eap_peer/tncc.c	/^	struct tnc_if_imc *imc;$/;"	m	struct:tncc_data	typeref:struct:tncc_data::tnc_if_imc	file:	access:public
tncc_data::last_batchid	src/eap_peer/tncc.c	/^	unsigned int last_batchid;$/;"	m	struct:tncc_data	file:	access:public
tncc_deinit	src/eap_peer/tncc.c	/^void tncc_deinit(struct tncc_data *tncc)$/;"	f	signature:(struct tncc_data *tncc)
tncc_deinit	src/eap_peer/tncc.h	/^void tncc_deinit(struct tncc_data *tncc);$/;"	p	signature:(struct tncc_data *tncc)
tncc_get_base64	src/eap_peer/tncc.c	/^static unsigned char * tncc_get_base64(char *start, size_t *decoded_len)$/;"	f	file:	signature:(char *start, size_t *decoded_len)
tncc_get_recommendation	src/eap_peer/tncc.c	/^static enum tncc_process_res tncc_get_recommendation(char *start)$/;"	f	file:	signature:(char *start)
tncc_get_sym	src/eap_peer/tncc.c	/^static void * tncc_get_sym(void *handle, char *func)$/;"	f	file:	signature:(void *handle, char *func)
tncc_get_type	src/eap_peer/tncc.c	/^static int tncc_get_type(char *start, unsigned int *type)$/;"	f	file:	signature:(char *start, unsigned int *type)
tncc_if_tnccs_end	src/eap_peer/tncc.c	/^char * tncc_if_tnccs_end(void)$/;"	f	signature:(void)
tncc_if_tnccs_end	src/eap_peer/tncc.h	/^char * tncc_if_tnccs_end(void);$/;"	p	signature:(void)
tncc_if_tnccs_start	src/eap_peer/tncc.c	/^char * tncc_if_tnccs_start(struct tncc_data *tncc)$/;"	f	signature:(struct tncc_data *tncc)
tncc_if_tnccs_start	src/eap_peer/tncc.h	/^char * tncc_if_tnccs_start(struct tncc_data *tncc);$/;"	p	signature:(struct tncc_data *tncc)
tncc_imc_begin_handshake	src/eap_peer/tncc.c	/^static int tncc_imc_begin_handshake(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncc_imc_initialize	src/eap_peer/tncc.c	/^static int tncc_imc_initialize(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncc_imc_notify_connection_change	src/eap_peer/tncc.c	/^static int tncc_imc_notify_connection_change(struct tnc_if_imc *imc,$/;"	f	file:	signature:(struct tnc_if_imc *imc, TNC_ConnectionState state)
tncc_imc_provide_bind_function	src/eap_peer/tncc.c	/^static int tncc_imc_provide_bind_function(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncc_imc_resolve_funcs	src/eap_peer/tncc.c	/^static int tncc_imc_resolve_funcs(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncc_imc_terminate	src/eap_peer/tncc.c	/^static int tncc_imc_terminate(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncc_init	src/eap_peer/tncc.c	/^struct tncc_data * tncc_init(void)$/;"	f	signature:(void)
tncc_init	src/eap_peer/tncc.h	/^struct tncc_data * tncc_init(void);$/;"	p	signature:(void)
tncc_init_connection	src/eap_peer/tncc.c	/^void tncc_init_connection(struct tncc_data *tncc)$/;"	f	signature:(struct tncc_data *tncc)
tncc_init_connection	src/eap_peer/tncc.h	/^void tncc_init_connection(struct tncc_data *tncc);$/;"	p	signature:(struct tncc_data *tncc)
tncc_load_imc	src/eap_peer/tncc.c	/^static int tncc_load_imc(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncc_notify_recommendation	src/eap_peer/tncc.c	/^static void tncc_notify_recommendation(struct tncc_data *tncc,$/;"	f	file:	signature:(struct tncc_data *tncc, enum tncc_process_res res)
tncc_parse_imc	src/eap_peer/tncc.c	/^static struct tnc_if_imc * tncc_parse_imc(char *start, char *end, int *error)$/;"	f	file:	signature:(char *start, char *end, int *error)
tncc_process_if_tnccs	src/eap_peer/tncc.c	/^enum tncc_process_res tncc_process_if_tnccs(struct tncc_data *tncc,$/;"	f	signature:(struct tncc_data *tncc, const u8 *msg, size_t len)
tncc_process_if_tnccs	src/eap_peer/tncc.h	/^enum tncc_process_res tncc_process_if_tnccs(struct tncc_data *tncc,$/;"	p	signature:(struct tncc_data *tncc, const u8 *msg, size_t len)
tncc_process_res	src/eap_peer/tncc.h	/^enum tncc_process_res {$/;"	g
tncc_process_soh_request	src/eap_peer/tncc.c	/^struct wpabuf * tncc_process_soh_request(int ver, const u8 *data, size_t len)$/;"	f	signature:(int ver, const u8 *data, size_t len)
tncc_process_soh_request	src/eap_peer/tncc.h	/^struct wpabuf * tncc_process_soh_request(int ver, const u8 *data, size_t len);$/;"	p	signature:(int ver, const u8 *data, size_t len)
tncc_read_config	src/eap_peer/tncc.c	/^static int tncc_read_config(struct tncc_data *tncc)$/;"	f	file:	signature:(struct tncc_data *tncc)
tncc_read_config_reg	src/eap_peer/tncc.c	/^static int tncc_read_config_reg(struct tncc_data *tncc, HKEY hive)$/;"	f	file:	signature:(struct tncc_data *tncc, HKEY hive)
tncc_send_to_imcs	src/eap_peer/tncc.c	/^static void tncc_send_to_imcs(struct tncc_data *tncc, unsigned int type,$/;"	f	file:	signature:(struct tncc_data *tncc, unsigned int type, const u8 *msg, size_t len)
tncc_supported_type	src/eap_peer/tncc.c	/^static int tncc_supported_type(struct tnc_if_imc *imc, unsigned int type)$/;"	f	file:	signature:(struct tnc_if_imc *imc, unsigned int type)
tncc_total_send_len	src/eap_peer/tncc.c	/^size_t tncc_total_send_len(struct tncc_data *tncc)$/;"	f	signature:(struct tncc_data *tncc)
tncc_total_send_len	src/eap_peer/tncc.h	/^size_t tncc_total_send_len(struct tncc_data *tncc);$/;"	p	signature:(struct tncc_data *tncc)
tncc_unload_imc	src/eap_peer/tncc.c	/^static void tncc_unload_imc(struct tnc_if_imc *imc)$/;"	f	file:	signature:(struct tnc_if_imc *imc)
tncs	src/eap_server/eap_server_tnc.c	/^	struct tncs_data *tncs;$/;"	m	struct:eap_tnc_data	typeref:struct:eap_tnc_data::tncs_data	file:	access:public
tncs_batch_ending	src/eap_server/tncs.c	/^static void tncs_batch_ending(struct tncs_data *tncs)$/;"	f	file:	signature:(struct tncs_data *tncs)
tncs_build_soh_request	src/eap_server/tncs.c	/^struct wpabuf * tncs_build_soh_request(void)$/;"	f	signature:(void)
tncs_build_soh_request	src/eap_server/tncs.h	/^struct wpabuf * tncs_build_soh_request(void);$/;"	p	signature:(void)
tncs_copy_send_buf	src/eap_server/tncs.c	/^u8 * tncs_copy_send_buf(struct tncs_data *tncs, u8 *pos)$/;"	f	signature:(struct tncs_data *tncs, u8 *pos)
tncs_copy_send_buf	src/eap_server/tncs.h	/^u8 * tncs_copy_send_buf(struct tncs_data *tncs, u8 *pos);$/;"	p	signature:(struct tncs_data *tncs, u8 *pos)
tncs_data	src/eap_server/tncs.c	/^struct tncs_data {$/;"	s	file:
tncs_data::conn_imv	src/eap_server/tncs.c	/^	struct conn_imv {$/;"	s	struct:tncs_data	file:	access:public
tncs_data::conn_imv::imv_send	src/eap_server/tncs.c	/^		u8 *imv_send;$/;"	m	struct:tncs_data::conn_imv	file:	access:public
tncs_data::conn_imv::imv_send_len	src/eap_server/tncs.c	/^		size_t imv_send_len;$/;"	m	struct:tncs_data::conn_imv	file:	access:public
tncs_data::conn_imv::recommendation	src/eap_server/tncs.c	/^		enum IMV_Action_Recommendation recommendation;$/;"	m	struct:tncs_data::conn_imv	typeref:enum:tncs_data::conn_imv::IMV_Action_Recommendation	file:	access:public
tncs_data::conn_imv::recommendation_set	src/eap_server/tncs.c	/^		int recommendation_set;$/;"	m	struct:tncs_data::conn_imv	file:	access:public
tncs_data::connectionID	src/eap_server/tncs.c	/^	TNC_ConnectionID connectionID;$/;"	m	struct:tncs_data	file:	access:public
tncs_data::done	src/eap_server/tncs.c	/^	int done;$/;"	m	struct:tncs_data	file:	access:public
tncs_data::imv	src/eap_server/tncs.c	/^	struct tnc_if_imv *imv; \/* local copy of tncs_global_data->imv *\/$/;"	m	struct:tncs_data	typeref:struct:tncs_data::tnc_if_imv	file:	access:public
tncs_data::imv_data	src/eap_server/tncs.c	/^	} imv_data[TNC_MAX_IMV_ID];$/;"	m	struct:tncs_data	typeref:struct:tncs_data::conn_imv	file:	access:public
tncs_data::last_batchid	src/eap_server/tncs.c	/^	unsigned int last_batchid;$/;"	m	struct:tncs_data	file:	access:public
tncs_data::next	src/eap_server/tncs.c	/^	struct tncs_data *next;$/;"	m	struct:tncs_data	typeref:struct:tncs_data::tncs_data	file:	access:public
tncs_data::recommendation	src/eap_server/tncs.c	/^	enum IMV_Action_Recommendation recommendation;$/;"	m	struct:tncs_data	typeref:enum:tncs_data::IMV_Action_Recommendation	file:	access:public
tncs_data::tncs_message	src/eap_server/tncs.c	/^	char *tncs_message;$/;"	m	struct:tncs_data	file:	access:public
tncs_deinit	src/eap_server/tncs.c	/^void tncs_deinit(struct tncs_data *tncs)$/;"	f	signature:(struct tncs_data *tncs)
tncs_deinit	src/eap_server/tncs.h	/^void tncs_deinit(struct tncs_data *tncs);$/;"	p	signature:(struct tncs_data *tncs)
tncs_derive_recommendation	src/eap_server/tncs.c	/^static enum tncs_process_res tncs_derive_recommendation(struct tncs_data *tncs)$/;"	f	file:	signature:(struct tncs_data *tncs)
tncs_free_imv	src/eap_server/tncs.c	/^static void tncs_free_imv(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
tncs_get_base64	src/eap_server/tncs.c	/^static unsigned char * tncs_get_base64(char *start, size_t *decoded_len)$/;"	f	file:	signature:(char *start, size_t *decoded_len)
tncs_get_conn	src/eap_server/tncs.c	/^static struct tncs_data * tncs_get_conn(TNC_ConnectionID connectionID)$/;"	f	file:	signature:(TNC_ConnectionID connectionID)
tncs_get_imv	src/eap_server/tncs.c	/^static struct tnc_if_imv * tncs_get_imv(TNC_IMVID imvID)$/;"	f	file:	signature:(TNC_IMVID imvID)
tncs_get_sym	src/eap_server/tncs.c	/^static void * tncs_get_sym(void *handle, char *func)$/;"	f	file:	signature:(void *handle, char *func)
tncs_get_type	src/eap_server/tncs.c	/^static int tncs_get_type(char *start, unsigned int *type)$/;"	f	file:	signature:(char *start, unsigned int *type)
tncs_global	src/eap_server/tncs.c	/^struct tncs_global {$/;"	s	file:
tncs_global::connections	src/eap_server/tncs.c	/^	struct tncs_data *connections;$/;"	m	struct:tncs_global	typeref:struct:tncs_global::tncs_data	file:	access:public
tncs_global::imv	src/eap_server/tncs.c	/^	struct tnc_if_imv *imv;$/;"	m	struct:tncs_global	typeref:struct:tncs_global::tnc_if_imv	file:	access:public
tncs_global::next_conn_id	src/eap_server/tncs.c	/^	TNC_ConnectionID next_conn_id;$/;"	m	struct:tncs_global	file:	access:public
tncs_global_data	src/eap_server/tncs.c	/^static struct tncs_global *tncs_global_data = NULL;$/;"	v	typeref:struct:tncs_global	file:
tncs_global_deinit	src/eap_server/tncs.c	/^void tncs_global_deinit(void)$/;"	f	signature:(void)
tncs_global_deinit	src/eap_server/tncs.h	/^void tncs_global_deinit(void);$/;"	p	signature:(void)
tncs_global_init	src/eap_server/tncs.c	/^int tncs_global_init(void)$/;"	f	signature:(void)
tncs_global_init	src/eap_server/tncs.h	/^int tncs_global_init(void);$/;"	p	signature:(void)
tncs_if_tnccs_end	src/eap_server/tncs.c	/^char * tncs_if_tnccs_end(void)$/;"	f	signature:(void)
tncs_if_tnccs_end	src/eap_server/tncs.h	/^char * tncs_if_tnccs_end(void);$/;"	p	signature:(void)
tncs_if_tnccs_start	src/eap_server/tncs.c	/^char * tncs_if_tnccs_start(struct tncs_data *tncs)$/;"	f	signature:(struct tncs_data *tncs)
tncs_if_tnccs_start	src/eap_server/tncs.h	/^char * tncs_if_tnccs_start(struct tncs_data *tncs);$/;"	p	signature:(struct tncs_data *tncs)
tncs_imv_initialize	src/eap_server/tncs.c	/^static int tncs_imv_initialize(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
tncs_imv_notify_connection_change	src/eap_server/tncs.c	/^static int tncs_imv_notify_connection_change(struct tnc_if_imv *imv,$/;"	f	file:	signature:(struct tnc_if_imv *imv, TNC_ConnectionID conn, TNC_ConnectionState state)
tncs_imv_provide_bind_function	src/eap_server/tncs.c	/^static int tncs_imv_provide_bind_function(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
tncs_imv_resolve_funcs	src/eap_server/tncs.c	/^static int tncs_imv_resolve_funcs(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
tncs_imv_terminate	src/eap_server/tncs.c	/^static int tncs_imv_terminate(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
tncs_init	src/eap_server/tncs.c	/^struct tncs_data * tncs_init(void)$/;"	f	signature:(void)
tncs_init	src/eap_server/tncs.h	/^struct tncs_data * tncs_init(void);$/;"	p	signature:(void)
tncs_init_connection	src/eap_server/tncs.c	/^void tncs_init_connection(struct tncs_data *tncs)$/;"	f	signature:(struct tncs_data *tncs)
tncs_init_connection	src/eap_server/tncs.h	/^void tncs_init_connection(struct tncs_data *tncs);$/;"	p	signature:(struct tncs_data *tncs)
tncs_load_imv	src/eap_server/tncs.c	/^static int tncs_load_imv(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
tncs_message	src/eap_server/tncs.c	/^	char *tncs_message;$/;"	m	struct:tncs_data	file:	access:public
tncs_parse_imv	src/eap_server/tncs.c	/^static struct tnc_if_imv * tncs_parse_imv(int id, char *start, char *end,$/;"	f	file:	signature:(int id, char *start, char *end, int *error)
tncs_process	src/eap_server/eap_server_tnc.c	/^static void tncs_process(struct eap_tnc_data *data, struct wpabuf *inbuf)$/;"	f	file:	signature:(struct eap_tnc_data *data, struct wpabuf *inbuf)
tncs_process_if_tnccs	src/eap_server/tncs.c	/^enum tncs_process_res tncs_process_if_tnccs(struct tncs_data *tncs,$/;"	f	signature:(struct tncs_data *tncs, const u8 *msg, size_t len)
tncs_process_if_tnccs	src/eap_server/tncs.h	/^enum tncs_process_res tncs_process_if_tnccs(struct tncs_data *tncs,$/;"	p	signature:(struct tncs_data *tncs, const u8 *msg, size_t len)
tncs_process_res	src/eap_server/tncs.h	/^enum tncs_process_res {$/;"	g
tncs_process_soh	src/eap_server/tncs.c	/^struct wpabuf * tncs_process_soh(const u8 *soh_tlv, size_t soh_tlv_len,$/;"	f	signature:(const u8 *soh_tlv, size_t soh_tlv_len, int *failure)
tncs_process_soh	src/eap_server/tncs.h	/^struct wpabuf * tncs_process_soh(const u8 *soh_tlv, size_t soh_tlv_len,$/;"	p	signature:(const u8 *soh_tlv, size_t soh_tlv_len, int *failure)
tncs_read_config	src/eap_server/tncs.c	/^static int tncs_read_config(struct tncs_global *global)$/;"	f	file:	signature:(struct tncs_global *global)
tncs_send_to_imvs	src/eap_server/tncs.c	/^static void tncs_send_to_imvs(struct tncs_data *tncs, unsigned int type,$/;"	f	file:	signature:(struct tncs_data *tncs, unsigned int type, const u8 *msg, size_t len)
tncs_solicit_recommendation	src/eap_server/tncs.c	/^static void tncs_solicit_recommendation(struct tncs_data *tncs)$/;"	f	file:	signature:(struct tncs_data *tncs)
tncs_supported_type	src/eap_server/tncs.c	/^static int tncs_supported_type(struct tnc_if_imv *imv, unsigned int type)$/;"	f	file:	signature:(struct tnc_if_imv *imv, unsigned int type)
tncs_total_send_len	src/eap_server/tncs.c	/^size_t tncs_total_send_len(struct tncs_data *tncs)$/;"	f	signature:(struct tncs_data *tncs)
tncs_total_send_len	src/eap_server/tncs.h	/^size_t tncs_total_send_len(struct tncs_data *tncs);$/;"	p	signature:(struct tncs_data *tncs)
tncs_unload_imv	src/eap_server/tncs.c	/^static void tncs_unload_imv(struct tnc_if_imv *imv)$/;"	f	file:	signature:(struct tnc_if_imv *imv)
to_registered	src/wps/httpread.c	/^	int to_registered;      \/* nonzero if we need to unregister timeout *\/$/;"	m	struct:httpread	file:	access:public
token	src/eap_common/eap_pwd_common.h	/^	u8 token[4];$/;"	m	struct:eap_pwd_id	access:public
token	src/eap_server/eap_server_pwd.c	/^	u32 token;$/;"	m	struct:eap_pwd_data	file:	access:public
token_eq	src/wps/wps_upnp_ssdp.c	/^static int token_eq(const char *s1, const char *s2)$/;"	f	file:	signature:(const char *s1, const char *s2)
token_length	src/wps/wps_upnp_ssdp.c	/^static int token_length(const char *s)$/;"	f	file:	signature:(const char *s)
tokenize_cmd	hostapd/hostapd_cli.c	/^static int tokenize_cmd(char *cmd, char *argv[])$/;"	f	file:	signature:(char *cmd, char *argv[])
total_collected	src/crypto/random.c	/^static unsigned int total_collected = 0;$/;"	v	file:
total_length	src/eap_common/eap_pwd_common.h	/^	u8 total_length[0];         \/* included when l_bit is set *\/$/;"	m	struct:eap_pwd_hdr	access:public
total_length	src/wps/ndef.c	/^	u32 total_length;$/;"	m	struct:ndef_record	file:	access:public
totrot	src/crypto/des-internal.c	/^static const u8 totrot[16] = {$/;"	v	file:
tpk	src/rsn_supp/tdls.c	/^	struct tpk {$/;"	s	struct:wpa_tdls_peer	file:	access:public
tpk	src/rsn_supp/tdls.c	/^	} tpk;$/;"	m	struct:wpa_tdls_peer	typeref:struct:wpa_tdls_peer::tpk	file:	access:public
tpk_set	src/rsn_supp/tdls.c	/^	int tpk_set;$/;"	m	struct:wpa_tdls_peer	file:	access:public
tpk_success	src/rsn_supp/tdls.c	/^	int tpk_success;$/;"	m	struct:wpa_tdls_peer	file:	access:public
tpk_timer	src/rsn_supp/tdls.c	/^	struct tpk_timer {$/;"	s	struct:wpa_tdls_peer	file:	access:public
tptk	src/rsn_supp/wpa_i.h	/^	struct wpa_ptk ptk, tptk;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::	access:public
tptk_set	src/rsn_supp/wpa_i.h	/^	int ptk_set, tptk_set;$/;"	m	struct:wpa_sm	access:public
trailer_empty_cr	src/wps/httpread.c	/^		trailer_empty_cr,       \/* empty line + CR *\/$/;"	e	enum:httpread::trailer_state	file:
trailer_line_begin	src/wps/httpread.c	/^		trailer_line_begin = 0,$/;"	e	enum:httpread::trailer_state	file:
trailer_nonempty	src/wps/httpread.c	/^		trailer_nonempty,$/;"	e	enum:httpread::trailer_state	file:
trailer_nonempty_cr	src/wps/httpread.c	/^		trailer_nonempty_cr,$/;"	e	enum:httpread::trailer_state	file:
trailer_state	src/wps/httpread.c	/^	enum trailer_state {$/;"	g	struct:httpread	file:	access:public
trailer_state	src/wps/httpread.c	/^	} trailer_state;$/;"	m	struct:httpread	typeref:enum:httpread::trailer_state	file:	access:public
trans_id	src/common/ieee802_11_defs.h	/^					u8 trans_id[WLAN_SA_QUERY_TR_ID_LEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon54	access:public
trans_id	src/common/ieee802_11_defs.h	/^					u8 trans_id[WLAN_SA_QUERY_TR_ID_LEN];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon55	access:public
transform_id	src/eap_common/ikev2_common.h	/^	u8 transform_id[2];$/;"	m	struct:ikev2_transform	access:public
transform_length	src/eap_common/ikev2_common.h	/^	u8 transform_length[2]; \/* including Header and Attributes *\/$/;"	m	struct:ikev2_transform	access:public
transform_type	src/eap_common/ikev2_common.h	/^	u8 transform_type;$/;"	m	struct:ikev2_transform	access:public
trunc_nl	src/utils/edit_readline.c	/^static void trunc_nl(char *str)$/;"	f	file:	signature:(char *str)
trusted_certs	src/tls/tlsv1_cred.h	/^	struct x509_certificate *trusted_certs;$/;"	m	struct:tlsv1_credentials	typeref:struct:tlsv1_credentials::x509_certificate	access:public
ts_info	src/common/ieee802_11_defs.h	/^	u8 ts_info[3];$/;"	m	struct:wmm_tspec_element	access:public
tsc	src/drivers/wireless_copy.h	/^	__u8		tsc[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_michaelmicfailure	access:public
tsf	src/drivers/driver.h	/^	u64 tsf;$/;"	m	struct:wpa_scan_res	access:public
tstk	src/rsn_supp/peerkey.h	/^	struct wpa_ptk stk, tstk;$/;"	m	struct:wpa_peerkey	typeref:struct:wpa_peerkey::	access:public
tstk_set	src/rsn_supp/peerkey.h	/^	int stk_set, tstk_set;$/;"	m	struct:wpa_peerkey	access:public
ttls_auth	src/ap/ap_config.h	/^	int ttls_auth; \/* EAP_TTLS_AUTH_* bitfield *\/$/;"	m	struct:hostapd_eap_user	access:public
ttls_auth	src/eap_server/eap.h	/^	int ttls_auth; \/* bitfield of$/;"	m	struct:eap_user	access:public
ttls_avp	src/eap_common/eap_ttls.h	/^struct ttls_avp {$/;"	s
ttls_avp::avp_code	src/eap_common/eap_ttls.h	/^	be32 avp_code;$/;"	m	struct:ttls_avp	access:public
ttls_avp::avp_length	src/eap_common/eap_ttls.h	/^	be32 avp_length; \/* 8-bit flags, 24-bit length;$/;"	m	struct:ttls_avp	access:public
ttls_avp_vendor	src/eap_common/eap_ttls.h	/^struct ttls_avp_vendor {$/;"	s
ttls_avp_vendor::avp_code	src/eap_common/eap_ttls.h	/^	be32 avp_code;$/;"	m	struct:ttls_avp_vendor	access:public
ttls_avp_vendor::avp_length	src/eap_common/eap_ttls.h	/^	be32 avp_length; \/* 8-bit flags, 24-bit length;$/;"	m	struct:ttls_avp_vendor	access:public
ttls_avp_vendor::vendor_id	src/eap_common/eap_ttls.h	/^	be32 vendor_id;$/;"	m	struct:ttls_avp_vendor	access:public
ttls_parse_avp	src/eap_peer/eap_ttls.c	/^struct ttls_parse_avp {$/;"	s	file:
ttls_parse_avp::eap_len	src/eap_peer/eap_ttls.c	/^	size_t eap_len;$/;"	m	struct:ttls_parse_avp	file:	access:public
ttls_parse_avp::eapdata	src/eap_peer/eap_ttls.c	/^	u8 *eapdata;$/;"	m	struct:ttls_parse_avp	file:	access:public
ttls_parse_avp::mschapv2	src/eap_peer/eap_ttls.c	/^	u8 *mschapv2;$/;"	m	struct:ttls_parse_avp	file:	access:public
ttls_parse_avp::mschapv2_error	src/eap_peer/eap_ttls.c	/^	int mschapv2_error;$/;"	m	struct:ttls_parse_avp	file:	access:public
ttls_version	src/eap_peer/eap_ttls.c	/^	int ttls_version;$/;"	m	struct:eap_ttls_data	file:	access:public
ttls_version	src/eap_server/eap_server_ttls.c	/^	int ttls_version;$/;"	m	struct:eap_ttls_data	file:	access:public
tx	src/rsn_supp/wpa.c	/^	int tx, key_rsc_len, keyidx;$/;"	m	struct:wpa_gtk_data	file:	access:public
txCannedFail	src/eapol_auth/eapol_auth_sm.c	55;"	d	file:
txCannedSuccess	src/eapol_auth/eapol_auth_sm.c	56;"	d	file:
txKey	src/eapol_auth/eapol_auth_sm.c	59;"	d	file:
txReq	src/eapol_auth/eapol_auth_sm.c	57;"	d	file:
tx_bf_capability_info	src/common/ieee802_11_defs.h	/^	le32 tx_bf_capability_info;$/;"	m	struct:ieee80211_ht_capabilities	access:public
tx_bytes	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
tx_key	src/eapol_auth/eapol_auth_sm.h	/^	void (*tx_key)(void *ctx, void *sta_ctx);                               \/\/ _ieee802_1x_tx_key$/;"	m	struct:eapol_auth_cb	access:public
tx_mic_key	src/common/wpa_common.h	/^			u8 tx_mic_key[8];$/;"	m	struct:wpa_ptk::__anon33::__anon34	access:public
tx_packets	src/drivers/driver.h	/^	unsigned long rx_packets, tx_packets, rx_bytes, tx_bytes;$/;"	m	struct:hostap_sta_driver_data	access:public
tx_queue	src/ap/ap_config.h	/^	struct hostapd_tx_queue_params tx_queue[NUM_TX_QUEUES];$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::hostapd_tx_queue_params	access:public
tx_retry_count	src/drivers/driver.h	/^	unsigned long tx_retry_count;$/;"	m	struct:hostap_sta_driver_data	access:public
tx_retry_failed	src/drivers/driver.h	/^	unsigned long tx_retry_failed;$/;"	m	struct:hostap_sta_driver_data	access:public
tx_seq	src/drivers/wireless_copy.h	/^	__u8		tx_seq[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_encode_ext	access:public
tx_status	src/ap/wpa_auth.h	/^	int tx_status;$/;"	m	struct:wpa_auth_config	access:public
tx_status	src/drivers/driver.h	/^	struct tx_status {$/;"	s	union:wpa_event_data	access:public
tx_status	src/drivers/driver.h	/^	} tx_status;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::tx_status	access:public
tx_supp_rates	src/drivers/driver_hostap.h	/^			u8 tx_supp_rates;$/;"	m	struct:prism2_hostapd_param::__anon78::__anon79	access:public
txop_limit	src/ap/ap_config.h	/^	int txop_limit; \/* in units of 32us *\/$/;"	m	struct:hostapd_wmm_ac_params	access:public
txop_limit	src/common/ieee802_11_defs.h	/^	le16 txop_limit;$/;"	m	struct:wmm_ac_parameter	access:public
txpower	src/drivers/wireless_copy.h	/^	__s32		txpower[IW_MAX_TXPOWER];	\/* list, in bps *\/$/;"	m	struct:iw_range	access:public
txpower	src/drivers/wireless_copy.h	/^	struct iw_param	txpower;	\/* default transmit power *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param	access:public
txpower_capa	src/drivers/wireless_copy.h	/^	__u16		txpower_capa;	\/* What options are supported *\/$/;"	m	struct:iw_range	access:public
type	src/ap/ieee802_1x.h	/^	u8 type;$/;"	m	struct:ieee802_1x_eapol_key	access:public
type	src/common/eapol_common.h	/^	u8 type;$/;"	m	struct:ieee802_1x_hdr	access:public
type	src/common/wpa_common.h	/^	u8 type;$/;"	m	struct:wpa_eapol_key	access:public
type	src/drivers/driver.h	/^		u16 type;$/;"	m	struct:wpa_event_data::tx_status	access:public
type	src/drivers/rfkill.c	/^	u8 type;$/;"	m	struct:rfkill_event	file:	access:public
type	src/eap_common/eap_fast_common.h	/^	be16 type;$/;"	m	struct:pac_tlv_hdr	access:public
type	src/eap_common/eap_sim_common.c	/^	int type;$/;"	m	struct:eap_sim_msg	file:	access:public
type	src/eap_common/ikev2_common.h	/^	u8 type; \/* 0 (last) or 2 (more) *\/$/;"	m	struct:ikev2_proposal	access:public
type	src/eap_common/ikev2_common.h	/^	u8 type; \/* 0 (last) or 3 (more) *\/$/;"	m	struct:ikev2_transform	access:public
type	src/eapol_supp/eapol_supp_sm.c	/^	u8 type;$/;"	m	struct:ieee802_1x_eapol_key	file:	access:public
type	src/radius/radius.c	/^	int type; \/* Tunnel-Type *\/$/;"	m	struct:radius_tunnel_attrs	file:	access:public
type	src/radius/radius.c	/^	u8 type;$/;"	m	struct:radius_attr_type	file:	access:public
type	src/radius/radius.h	/^	u8 type;$/;"	m	struct:radius_attr_hdr	access:public
type	src/tls/tlsv1_common.h	/^	tls_cipher_type type;$/;"	m	struct:tls_cipher_data	access:public
type	src/tls/x509v3.h	/^	} type;$/;"	m	struct:x509_name_attr	typeref:enum:x509_name_attr::x509_name_attr_type	access:public
type	src/wps/ndef.c	/^	u8 *type;$/;"	m	struct:ndef_record	file:	access:public
type	src/wps/wps.h	/^	enum wps_msg_type type;$/;"	m	struct:upnp_pending_message	typeref:enum:upnp_pending_message::wps_msg_type	access:public
type	src/wps/wps_upnp_i.h	/^	enum advertisement_type_enum type;$/;"	m	struct:advertisement_state_machine	typeref:enum:advertisement_state_machine::advertisement_type_enum	access:public
type_length	src/wps/ndef.c	/^	u8 type_length;$/;"	m	struct:ndef_record	file:	access:public
u	src/common/ieee802_11_defs.h	/^			} u;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48	typeref:union:ieee80211_mgmt::__anon38::__anon48::__anon49	access:public
u	src/common/ieee802_11_defs.h	/^	} u;$/;"	m	struct:ieee80211_mgmt	typeref:union:ieee80211_mgmt::__anon38	access:public
u	src/common/wpa_common.h	/^	} u;$/;"	m	struct:wpa_ptk	typeref:union:wpa_ptk::__anon33	access:public
u	src/crypto/crypto_internal-cipher.c	/^	} u;$/;"	m	struct:crypto_cipher	typeref:union:crypto_cipher::__anon186	file:	access:public
u	src/crypto/crypto_internal.c	/^	} u;$/;"	m	struct:crypto_hash	typeref:union:crypto_hash::__anon193	file:	access:public
u	src/crypto/crypto_libtomcrypt.c	/^	} u;$/;"	m	struct:crypto_cipher	typeref:union:crypto_cipher::__anon199	file:	access:public
u	src/crypto/crypto_libtomcrypt.c	/^	} u;$/;"	m	struct:crypto_hash	typeref:union:crypto_hash::__anon198	file:	access:public
u	src/drivers/driver_hostap.h	/^	} u;$/;"	m	struct:prism2_hostapd_param	typeref:union:prism2_hostapd_param::__anon78	access:public
u	src/drivers/driver_ralink.h	/^    } u;$/;"	m	union:_LARGE_INTEGER	typeref:struct:_LARGE_INTEGER::__anon89	access:public
u	src/drivers/wireless_copy.h	/^	union	iwreq_data	u;$/;"	m	struct:iwreq	typeref:union:iwreq::iwreq_data	access:public
u	src/drivers/wireless_copy.h	/^	union iwreq_data	u;		\/* IOCTL fixed payload *\/$/;"	m	struct:iw_event	typeref:union:iw_event::iwreq_data	access:public
u	src/eap_server/eap_sim_db.c	/^	} u;$/;"	m	struct:eap_sim_db_pending	typeref:union:eap_sim_db_pending::__anon149	file:	access:public
u	src/utils/ip_addr.h	/^	} u;$/;"	m	struct:hostapd_ip_addr	typeref:union:hostapd_ip_addr::__anon27	access:public
u16	src/utils/common.h	/^typedef TUint16 u16;$/;"	t
u16	src/utils/common.h	/^typedef UINT16 u16;$/;"	t
u16	src/utils/common.h	/^typedef uint16_t u16;$/;"	t
u16	src/utils/common.h	/^typedef unsigned short u16;$/;"	t
u32	src/utils/common.h	/^typedef TUint32 u32;$/;"	t
u32	src/utils/common.h	/^typedef UINT32 u32;$/;"	t
u32	src/utils/common.h	/^typedef uint32_t u32;$/;"	t
u32	src/utils/common.h	/^typedef unsigned int u32;$/;"	t
u64	src/utils/common.h	/^typedef TUint64 u64;$/;"	t
u64	src/utils/common.h	/^typedef UINT64 u64;$/;"	t
u64	src/utils/common.h	/^typedef uint64_t u64;$/;"	t
u64	src/utils/common.h	/^typedef unsigned long long u64;$/;"	t
u64	src/utils/common.h	/^typedef unsigned long u64;$/;"	t
u8	src/utils/common.h	/^typedef TUint8 u8;$/;"	t
u8	src/utils/common.h	/^typedef UINT8 u8;$/;"	t
u8	src/utils/common.h	/^typedef uint8_t u8;$/;"	t
u8	src/utils/common.h	/^typedef unsigned char u8;$/;"	t
uIEsLength	src/drivers/driver_ndis.c	/^	ULONG uIEsLength;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uIEsOffset	src/drivers/driver_ndis.c	/^	ULONG uIEsOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uNumOfPhyTypeInfos	src/drivers/driver_ndis.c	/^	ULONG uNumOfPhyTypeInfos;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uNumOfRequestIDs	src/drivers/driver_ndis.c	/^	ULONG uNumOfRequestIDs;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uNumOfdot11SSIDs	src/drivers/driver_ndis.c	/^	ULONG uNumOfdot11SSIDs;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uPhyTypeInfosOffset	src/drivers/driver_ndis.c	/^	ULONG uPhyTypeInfosOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uRequestIDsOffset	src/drivers/driver_ndis.c	/^	ULONG uRequestIDsOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
uapsd	src/drivers/driver.h	/^	int uapsd;$/;"	m	struct:wpa_driver_associate_params	access:public
ucBuffer	src/drivers/driver_ndis.c	/^	UCHAR ucBuffer[1];$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
udn	src/wps/wps_er.h	/^	char *udn;$/;"	m	struct:wps_er_ap	access:public
udot11SSIDsOffset	src/drivers/driver_ndis.c	/^	ULONG udot11SSIDsOffset;$/;"	m	struct:_DOT11_SCAN_REQUEST_V2	file:	access:public
udp_port	src/drivers/driver_test.c	/^	int udp_port;$/;"	m	struct:wpa_driver_test_data	file:	access:public
udp_sock	src/ap/iapp.c	/^	int udp_sock;$/;"	m	struct:iapp_data	file:	access:public
uesa	src/ap/ap_config.h	/^	int uesa;$/;"	m	struct:hostapd_bss_config	access:public
ufd_fd	src/wps/wps_ufd.c	/^	int ufd_fd;$/;"	m	struct:wps_ufd_data	file:	access:public
ufd_mkdir	src/wps/wps_ufd.c	/^static int ufd_mkdir(const char *path)$/;"	f	file:	signature:(const char *path)
uint32	src/drivers/driver_ralink.h	87;"	d
uint8	src/crypto/tls_gnutls.c	/^typedef u8 uint8;$/;"	t	file:
uint8	src/drivers/driver_ralink.h	88;"	d
ulMediaState	src/drivers/driver_ndis.c	/^	ULONG ulMediaState;$/;"	m	struct:__anon97	file:	access:public
ulMediaType	src/drivers/driver_ndis.c	/^	ULONG ulMediaType;$/;"	m	struct:__anon97	file:	access:public
ulPhysicalMediaType	src/drivers/driver_ndis.c	/^	ULONG ulPhysicalMediaType;$/;"	m	struct:__anon97	file:	access:public
ulong	src/utils/radiotap.c	28;"	d	file:
un	src/drivers/driver_test.c	/^	struct sockaddr_un un;$/;"	m	struct:test_client_socket	typeref:struct:test_client_socket::sockaddr_un	file:	access:public
unblocked_cb	src/drivers/rfkill.h	/^	void (*unblocked_cb)(void *ctx);$/;"	m	struct:rfkill_config	access:public
unicast	src/drivers/driver.h	/^		int unicast;$/;"	m	struct:wpa_event_data::michael_mic_failure	access:public
unicast_key_received	src/eapol_supp/eapol_supp_sm.c	/^	Boolean unicast_key_received, broadcast_key_received;$/;"	m	struct:eapol_sm	file:	access:public
unknown_types	src/radius/radius_client.h	/^	u32 unknown_types;$/;"	m	struct:hostapd_radius_server	access:public
unknown_types	src/radius/radius_server.c	/^	u32 unknown_types;$/;"	m	struct:radius_server_counters	file:	access:public
unknown_user	src/eap_server/ikev2.h	/^	int unknown_user;$/;"	m	struct:ikev2_initiator_data	access:public
unlen	src/drivers/driver_test.c	/^	socklen_t unlen;$/;"	m	struct:test_client_socket	file:	access:public
unlikely	src/utils/radiotap.c	29;"	d	file:
unprot_deauth	src/drivers/driver.h	/^	struct unprot_deauth {$/;"	s	union:wpa_event_data	access:public
unprot_deauth	src/drivers/driver.h	/^	} unprot_deauth;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::unprot_deauth	access:public
unprot_disassoc	src/drivers/driver.h	/^	struct unprot_disassoc {$/;"	s	union:wpa_event_data	access:public
unprot_disassoc	src/drivers/driver.h	/^	} unprot_disassoc;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::unprot_disassoc	access:public
upc	src/ap/ap_config.h	/^	char *upc;$/;"	m	struct:hostapd_bss_config	access:public
upc	src/wps/wps.h	/^		const char *upc;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
upc	src/wps/wps.h	/^	char *upc;$/;"	m	struct:wps_context	access:public
upc	src/wps/wps_er.h	/^	char *upc;$/;"	m	struct:wps_er_ap	access:public
update_ft_ies	src/drivers/driver.h	/^	int (*update_ft_ies)(void *priv, const u8 *md, const u8 *ies,$/;"	m	struct:wpa_driver_ops	access:public
update_ft_ies	src/rsn_supp/wpa.h	/^	int (*update_ft_ies)(void *ctx, const u8 *md, const u8 *ies,$/;"	m	struct:wpa_sm_ctx	access:public
update_ht_state	src/ap/ieee802_11.h	/^void update_ht_state(struct hostapd_data *hapd, struct sta_info *sta);$/;"	p	signature:(struct hostapd_data *hapd, struct sta_info *sta)
update_ht_state	src/ap/ieee802_11_ht.c	/^void update_ht_state(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	signature:(struct hostapd_data *hapd, struct sta_info *sta)
update_indic	src/drivers/driver.h	/^		u16 update_indic;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
update_indic	src/drivers/driver.h	/^		u16 update_indic;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
update_sta_ht	src/ap/ieee802_11_ht.c	/^static void update_sta_ht(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
update_sta_no_ht	src/ap/ieee802_11_ht.c	/^static void update_sta_no_ht(struct hostapd_data *hapd, struct sta_info *sta)$/;"	f	file:	signature:(struct hostapd_data *hapd, struct sta_info *sta)
update_user	src/eap_server/eap_i.h	/^	Boolean update_user;$/;"	m	struct:eap_sm	access:public
updated	src/drivers/wireless_copy.h	/^	__u8		updated;	\/* Flags to know if updated *\/$/;"	m	struct:iw_quality	access:public
upnp_er_remove_notification	src/wps/wps_upnp_ap.c	/^void upnp_er_remove_notification(struct subscription *s)$/;"	f	signature:(struct subscription *s)
upnp_er_remove_notification	src/wps/wps_upnp_i.h	/^void upnp_er_remove_notification(struct subscription *s);$/;"	p	signature:(struct subscription *s)
upnp_er_set_selected_registrar	src/wps/wps_upnp_ap.c	/^int upnp_er_set_selected_registrar(struct wps_registrar *reg,$/;"	f	signature:(struct wps_registrar *reg, struct subscription *s, const struct wpabuf *msg)
upnp_er_set_selected_registrar	src/wps/wps_upnp_i.h	/^int upnp_er_set_selected_registrar(struct wps_registrar *reg,$/;"	p	signature:(struct wps_registrar *reg, struct subscription *s, const struct wpabuf *msg)
upnp_er_set_selected_timeout	src/wps/wps_upnp_ap.c	/^static void upnp_er_set_selected_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
upnp_iface	src/ap/ap_config.h	/^	char *upnp_iface;$/;"	m	struct:hostapd_bss_config	access:public
upnp_msgs	src/wps/wps.h	/^	struct upnp_pending_message *upnp_msgs;$/;"	m	struct:wps_context	typeref:struct:wps_context::upnp_pending_message	access:public
upnp_pending_message	src/wps/wps.h	/^struct upnp_pending_message {$/;"	s
upnp_pending_message::addr	src/wps/wps.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:upnp_pending_message	access:public
upnp_pending_message::msg	src/wps/wps.h	/^	struct wpabuf *msg;$/;"	m	struct:upnp_pending_message	typeref:struct:upnp_pending_message::wpabuf	access:public
upnp_pending_message::next	src/wps/wps.h	/^	struct upnp_pending_message *next;$/;"	m	struct:upnp_pending_message	typeref:struct:upnp_pending_message::upnp_pending_message	access:public
upnp_pending_message::type	src/wps/wps.h	/^	enum wps_msg_type type;$/;"	m	struct:upnp_pending_message	typeref:enum:upnp_pending_message::wps_msg_type	access:public
upnp_wps_device_ctx	src/wps/wps_upnp.h	/^struct upnp_wps_device_ctx {$/;"	s
upnp_wps_device_ctx::ap_pin	src/wps/wps_upnp.h	/^	char *ap_pin;$/;"	m	struct:upnp_wps_device_ctx	access:public
upnp_wps_device_ctx::rx_req_put_wlan_response	src/wps/wps_upnp.h	/^	int (*rx_req_put_wlan_response)($/;"	m	struct:upnp_wps_device_ctx	access:public
upnp_wps_device_deinit	src/wps/wps_upnp.c	/^void upnp_wps_device_deinit(struct upnp_wps_device_sm *sm, void *priv)$/;"	f	signature:(struct upnp_wps_device_sm *sm, void *priv)
upnp_wps_device_deinit	src/wps/wps_upnp.h	/^void upnp_wps_device_deinit(struct upnp_wps_device_sm *sm, void *priv);$/;"	p	signature:(struct upnp_wps_device_sm *sm, void *priv)
upnp_wps_device_init	src/wps/wps_upnp.c	/^upnp_wps_device_init(struct upnp_wps_device_ctx *ctx, struct wps_context *wps,$/;"	f	signature:(struct upnp_wps_device_ctx *ctx, struct wps_context *wps, void *priv, char *net_if)
upnp_wps_device_init	src/wps/wps_upnp.h	/^upnp_wps_device_init(struct upnp_wps_device_ctx *ctx, struct wps_context *wps,$/;"	p	signature:(struct upnp_wps_device_ctx *ctx, struct wps_context *wps, void *priv, char *net_if)
upnp_wps_device_interface	src/wps/wps_upnp_i.h	/^struct upnp_wps_device_interface {$/;"	s
upnp_wps_device_interface::ctx	src/wps/wps_upnp_i.h	/^	struct upnp_wps_device_ctx *ctx; \/* callback table *\/$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::upnp_wps_device_ctx	access:public
upnp_wps_device_interface::list	src/wps/wps_upnp_i.h	/^	struct dl_list list;$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::dl_list	access:public
upnp_wps_device_interface::peer	src/wps/wps_upnp_i.h	/^	struct upnp_wps_peer peer;$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::upnp_wps_peer	access:public
upnp_wps_device_interface::priv	src/wps/wps_upnp_i.h	/^	void *priv;$/;"	m	struct:upnp_wps_device_interface	access:public
upnp_wps_device_interface::wps	src/wps/wps_upnp_i.h	/^	struct wps_context *wps;$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::wps_context	access:public
upnp_wps_device_send_event	src/wps/wps_upnp.c	/^static void upnp_wps_device_send_event(struct upnp_wps_device_sm *sm)$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm)
upnp_wps_device_send_wlan_event	src/wps/wps_upnp.c	/^int upnp_wps_device_send_wlan_event(struct upnp_wps_device_sm *sm,$/;"	f	signature:(struct upnp_wps_device_sm *sm, const u8 from_mac_addr[ETH_ALEN], enum upnp_wps_wlanevent_type ev_type, const struct wpabuf *msg)
upnp_wps_device_send_wlan_event	src/wps/wps_upnp.h	/^int upnp_wps_device_send_wlan_event(struct upnp_wps_device_sm *sm,$/;"	p	signature:(struct upnp_wps_device_sm *sm, const u8 from_mac_addr[ETH_ALEN], enum upnp_wps_wlanevent_type ev_type, const struct wpabuf *msg)
upnp_wps_device_sm	src/wps/wps_upnp_i.h	/^struct upnp_wps_device_sm {$/;"	s
upnp_wps_device_sm::advertise_count	src/wps/wps_upnp_i.h	/^	unsigned advertise_count; \/* how many advertisements done *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::advertisement	src/wps/wps_upnp_i.h	/^	struct advertisement_state_machine advertisement;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::advertisement_state_machine	access:public
upnp_wps_device_sm::desc_url	src/wps/wps_upnp_i.h	/^	char *desc_url;$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::event_send_all_queued	src/wps/wps_upnp_i.h	/^	int event_send_all_queued; \/* if we are scheduled to send events soon$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::interfaces	src/wps/wps_upnp_i.h	/^	struct dl_list interfaces; \/* struct upnp_wps_device_interface *\/$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::dl_list	access:public
upnp_wps_device_sm::ip_addr	src/wps/wps_upnp_i.h	/^	unsigned ip_addr; \/* IP address of network i.f. we use (host order) *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::ip_addr_text	src/wps/wps_upnp_i.h	/^	char *ip_addr_text; \/* IP address of network i.f. we use *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::last_event_sec	src/wps/wps_upnp_i.h	/^	os_time_t last_event_sec;$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::mac_addr	src/wps/wps_upnp_i.h	/^	u8 mac_addr[ETH_ALEN]; \/* mac addr of network i.f. we use *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::msearch_replies	src/wps/wps_upnp_i.h	/^	struct dl_list msearch_replies;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::dl_list	access:public
upnp_wps_device_sm::multicast_sd	src/wps/wps_upnp_i.h	/^	int multicast_sd; \/* send multicast messages over this socket *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::num_events_in_sec	src/wps/wps_upnp_i.h	/^	unsigned int num_events_in_sec;$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::root_dir	src/wps/wps_upnp_i.h	/^	char *root_dir;$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::ssdp_sd	src/wps/wps_upnp_i.h	/^	int ssdp_sd; \/* receive discovery UPD packets on socket *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::ssdp_sd_registered	src/wps/wps_upnp_i.h	/^	int ssdp_sd_registered; \/* nonzero if we must unregister *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::started	src/wps/wps_upnp_i.h	/^	int started; \/* nonzero if we are active *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::subscriptions	src/wps/wps_upnp_i.h	/^	struct dl_list subscriptions;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::dl_list	access:public
upnp_wps_device_sm::web_port	src/wps/wps_upnp_i.h	/^	int web_port; \/* our port that others get xml files from *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::web_srv	src/wps/wps_upnp_i.h	/^	struct http_server *web_srv;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::http_server	access:public
upnp_wps_device_sm::wlanevent	src/wps/wps_upnp_i.h	/^	char *wlanevent; \/* the last WLANEvent data *\/$/;"	m	struct:upnp_wps_device_sm	access:public
upnp_wps_device_sm::wlanevent_type	src/wps/wps_upnp_i.h	/^	enum upnp_wps_wlanevent_type wlanevent_type;$/;"	m	struct:upnp_wps_device_sm	typeref:enum:upnp_wps_device_sm::upnp_wps_wlanevent_type	access:public
upnp_wps_device_start	src/wps/wps_upnp.c	/^static int upnp_wps_device_start(struct upnp_wps_device_sm *sm, char *net_if)$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, char *net_if)
upnp_wps_device_stop	src/wps/wps_upnp.c	/^static void upnp_wps_device_stop(struct upnp_wps_device_sm *sm)$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm)
upnp_wps_free_msearchreply	src/wps/wps_upnp.c	/^static void upnp_wps_free_msearchreply(struct dl_list *head)$/;"	f	file:	signature:(struct dl_list *head)
upnp_wps_free_subscriptions	src/wps/wps_upnp.c	/^static void upnp_wps_free_subscriptions(struct dl_list *head,$/;"	f	file:	signature:(struct dl_list *head, struct wps_registrar *reg)
upnp_wps_get_iface	src/wps/wps_upnp.c	/^upnp_wps_get_iface(struct upnp_wps_device_sm *sm, void *priv)$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, void *priv)
upnp_wps_peer	src/wps/wps_upnp.h	/^struct upnp_wps_peer {$/;"	s
upnp_wps_peer::wps	src/wps/wps_upnp.h	/^	struct wps_data *wps;$/;"	m	struct:upnp_wps_peer	typeref:struct:upnp_wps_peer::wps_data	access:public
upnp_wps_set_ap_pin	src/wps/wps_upnp.c	/^int upnp_wps_set_ap_pin(struct upnp_wps_device_sm *sm, const char *ap_pin)$/;"	f	signature:(struct upnp_wps_device_sm *sm, const char *ap_pin)
upnp_wps_set_ap_pin	src/wps/wps_upnp.h	/^int upnp_wps_set_ap_pin(struct upnp_wps_device_sm *sm, const char *ap_pin);$/;"	p	signature:(struct upnp_wps_device_sm *sm, const char *ap_pin)
upnp_wps_subscribers	src/wps/wps_upnp.c	/^int upnp_wps_subscribers(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
upnp_wps_subscribers	src/wps/wps_upnp.h	/^int upnp_wps_subscribers(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
upnp_wps_wlanevent_type	src/wps/wps_upnp.h	/^enum upnp_wps_wlanevent_type {$/;"	g
uri	src/tls/x509v3.h	/^	char *uri; \/* uniformResourceIdentifier *\/$/;"	m	struct:x509_name	access:public
uri	src/wps/httpread.c	/^	char *uri;$/;"	m	struct:httpread	file:	access:public
urn_wfawlanconfig	src/wps/wps_er.c	/^static const char *urn_wfawlanconfig =$/;"	v	file:
urn_wfawlanconfig	src/wps/wps_upnp_web.c	/^static const char *urn_wfawlanconfig =$/;"	v	file:
usage	hostapd/hlr_auc_gw.c	/^static void usage(void)$/;"	f	file:	signature:(void)
usage	hostapd/hostapd_cli.c	/^static void usage(void)$/;"	f	file:	signature:(void)
usage	hostapd/main.c	/^static void usage(void)$/;"	f	file:	signature:(void)
use_associnfo	src/drivers/driver_test.c	/^	int use_associnfo;$/;"	m	struct:wpa_driver_test_data	file:	access:public
use_cred	src/wps/wps_i.h	/^	struct wps_credential *use_cred;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_credential	access:public
use_crypt	src/drivers/driver_wext.h	/^	int use_crypt;$/;"	m	struct:wpa_driver_wext_data	access:public
use_pac_binary_format	src/eap_peer/eap_fast.c	/^	int use_pac_binary_format;$/;"	m	struct:eap_fast_data	file:	access:public
use_pae_group_addr	src/ap/ap_config.h	/^	int use_pae_group_addr; \/* Whether to send EAPOL frames to PAE group$/;"	m	struct:hostapd_bss_config	access:public
use_pae_group_addr	src/drivers/driver.h	/^	int use_pae_group_addr;$/;"	m	struct:wpa_init_params	access:public
use_pae_group_addr	src/drivers/driver_wired.c	/^	int use_pae_group_addr;     \/\/ 标志位，是否使用多播地址$/;"	m	struct:wpa_driver_wired_data	file:	access:public
use_psk_key	src/wps/wps.h	/^	int use_psk_key;$/;"	m	struct:wps_config	access:public
use_psk_key	src/wps/wps_i.h	/^	int use_psk_key;$/;"	m	struct:wps_data	access:public
use_result_ind	src/eap_peer/eap_aka.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_aka_data	file:	access:public
use_result_ind	src/eap_peer/eap_sim.c	/^	int result_ind, use_result_ind;$/;"	m	struct:eap_sim_data	file:	access:public
use_result_ind	src/eap_server/eap_server_aka.c	/^	int use_result_ind;$/;"	m	struct:eap_aka_data	file:	access:public
use_result_ind	src/eap_server/eap_server_sim.c	/^	int use_result_ind;$/;"	m	struct:eap_sim_data	file:	access:public
use_session_ticket	src/tls/tlsv1_client_i.h	/^	unsigned int use_session_ticket:1;$/;"	m	struct:tlsv1_client	access:public
use_session_ticket	src/tls/tlsv1_server_i.h	/^	int use_session_ticket;$/;"	m	struct:tlsv1_server	access:public
use_sha256	src/rsn_supp/peerkey.h	/^	int use_sha256; \/* whether AKMP indicate SHA256-based derivations *\/$/;"	m	struct:wpa_peerkey	access:public
usec	src/utils/os.h	/^	os_time_t usec;$/;"	m	struct:os_time	access:public
used	src/tls/libtommath.c	/^    int used, alloc, sign;$/;"	m	struct:__anon109	file:	access:public
used	src/utils/wpabuf.h	/^	size_t used; \/* length of data in the buffer *\/$/;"	m	struct:wpabuf	access:public
used_bytes	src/crypto/crypto_internal-cipher.c	/^			size_t used_bytes;$/;"	m	struct:crypto_cipher::__anon186::__anon187	file:	access:public
used_bytes	src/crypto/crypto_libtomcrypt.c	/^			size_t used_bytes;$/;"	m	struct:crypto_cipher::__anon199::__anon200	file:	access:public
user	src/eap_server/eap_i.h	/^	struct eap_user *user;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::eap_user	access:public
userLogoff	src/eapol_supp/eapol_supp_sm.c	/^	Boolean userLogoff;$/;"	m	struct:eapol_sm	file:	access:public
user_data	src/utils/eloop.c	/^	void *user_data;            \/\/ 回调函数参数3$/;"	m	struct:eloop_sock	file:	access:public
user_data	src/utils/eloop.c	/^	void *user_data;$/;"	m	struct:eloop_signal	file:	access:public
user_data	src/utils/eloop.c	/^	void *user_data;$/;"	m	struct:eloop_timeout	file:	access:public
user_data	src/utils/eloop_none.c	/^	void *user_data;$/;"	m	struct:eloop_signal	file:	access:public
user_data	src/utils/eloop_none.c	/^	void *user_data;$/;"	m	struct:eloop_sock	file:	access:public
user_data	src/utils/eloop_none.c	/^	void *user_data;$/;"	m	struct:eloop_timeout	file:	access:public
user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_event	file:	access:public
user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_signal	file:	access:public
user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_sock	file:	access:public
user_data	src/utils/eloop_win.c	/^	void *user_data;$/;"	m	struct:eloop_timeout	file:	access:public
user_eap_method_index	src/eap_server/eap_i.h	/^	int user_eap_method_index;$/;"	m	struct:eap_sm	access:public
user_initiated_pd	src/p2p/p2p_i.h	/^	u8 user_initiated_pd;$/;"	m	struct:p2p_data	access:public
user_name	src/eap_server/eap_server_ttls.c	/^	u8 *user_name;$/;"	m	struct:eap_ttls_avp	file:	access:public
user_name_len	src/eap_server/eap_server_ttls.c	/^	size_t user_name_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
user_password	src/eap_server/eap_server_ttls.c	/^	u8 *user_password;$/;"	m	struct:eap_ttls_avp	file:	access:public
user_password_len	src/eap_server/eap_server_ttls.c	/^	size_t user_password_len;$/;"	m	struct:eap_ttls_avp	file:	access:public
utf8_to_ucs2	src/crypto/ms_funcs.c	/^static int utf8_to_ucs2(const u8 *utf8_string, size_t utf8_string_len,$/;"	f	file:	signature:(const u8 *utf8_string, size_t utf8_string_len, u8 *ucs2_buffer, size_t ucs2_buffer_size, size_t *ucs2_string_size)
uuid	src/ap/ap_config.h	/^	u8 uuid[16];$/;"	m	struct:hostapd_bss_config	access:public
uuid	src/ap/wps_hostapd.c	/^	const u8 *uuid;$/;"	m	struct:wps_add_pin_data	file:	access:public
uuid	src/p2p/p2p.h	/^	u8 uuid[16];$/;"	m	struct:p2p_config	access:public
uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_ap_settings	access:public
uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
uuid	src/wps/wps.h	/^	u8 uuid[16];$/;"	m	struct:wps_context	access:public
uuid	src/wps/wps_er.h	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_er_ap	access:public
uuid	src/wps/wps_er.h	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_er_ap_settings	access:public
uuid	src/wps/wps_er.h	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_er_sta	access:public
uuid	src/wps/wps_registrar.c	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_registrar_device	file:	access:public
uuid	src/wps/wps_registrar.c	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_uuid_pin	file:	access:public
uuid	src/wps/wps_upnp_i.h	/^	u8 uuid[UUID_LEN];$/;"	m	struct:subscription	access:public
uuid_bin2str	src/utils/uuid.c	/^int uuid_bin2str(const u8 *bin, char *str, size_t max_len)$/;"	f	signature:(const u8 *bin, char *str, size_t max_len)
uuid_bin2str	src/utils/uuid.h	/^int uuid_bin2str(const u8 *bin, char *str, size_t max_len);$/;"	p	signature:(const u8 *bin, char *str, size_t max_len)
uuid_e	src/ap/wps_hostapd.c	/^	const u8 *uuid_e;$/;"	m	struct:wps_stop_reg_data	file:	access:public
uuid_e	src/wps/wps_i.h	/^	const u8 *uuid_e; \/* WPS_UUID_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
uuid_e	src/wps/wps_i.h	/^	u8 uuid_e[WPS_UUID_LEN];$/;"	m	struct:wps_data	access:public
uuid_e	src/wps/wps_registrar.c	/^	u8 uuid_e[WPS_UUID_LEN];$/;"	m	struct:wps_pbc_session	file:	access:public
uuid_gen_mac_addr	src/wps/wps.h	/^void uuid_gen_mac_addr(const u8 *mac_addr, u8 *uuid);$/;"	p	signature:(const u8 *mac_addr, u8 *uuid)
uuid_gen_mac_addr	src/wps/wps_common.c	/^void uuid_gen_mac_addr(const u8 *mac_addr, u8 *uuid)$/;"	f	signature:(const u8 *mac_addr, u8 *uuid)
uuid_make	src/wps/wps_upnp.c	/^static void uuid_make(u8 uuid[UUID_LEN])$/;"	f	file:	signature:(u8 uuid[UUID_LEN])
uuid_r	src/wps/wps_i.h	/^	const u8 *uuid_r; \/* WPS_UUID_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
uuid_r	src/wps/wps_i.h	/^	u8 uuid_r[WPS_UUID_LEN];$/;"	m	struct:wps_data	access:public
uuid_str2bin	src/utils/uuid.c	/^int uuid_str2bin(const char *str, u8 *bin)$/;"	f	signature:(const char *str, u8 *bin)
uuid_str2bin	src/utils/uuid.h	/^int uuid_str2bin(const char *str, u8 *bin);$/;"	p	signature:(const char *str, u8 *bin)
v4	src/utils/ip_addr.h	/^		struct in_addr v4;$/;"	m	union:hostapd_ip_addr::__anon27	typeref:struct:hostapd_ip_addr::__anon27::in_addr	access:public
v6	src/utils/ip_addr.h	/^		struct in6_addr v6;$/;"	m	union:hostapd_ip_addr::__anon27	typeref:struct:hostapd_ip_addr::__anon27::in6_addr	access:public
val	src/drivers/driver_broadcom.c	/^	uint32 val;$/;"	m	struct:__anon93	file:	access:public
valid	src/ap/wpa_auth_i.h	/^		Boolean valid;$/;"	m	struct:wpa_state_machine::__anon15	access:public
valid_config_methods	src/wps/wps_validate.c	/^static int valid_config_methods(u16 val, int wps2)$/;"	f	file:	signature:(u16 val, int wps2)
valid_cw	hostapd/config_file.c	/^static int valid_cw(int cw)$/;"	f	file:	signature:(int cw)
validity_interval	src/common/ieee802_11_defs.h	/^					u8 validity_interval;$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
value	src/drivers/wireless_copy.h	/^  __s32		value;		\/* The value of the parameter itself *\/$/;"	m	struct:iw_param	access:public
value	src/rsn_supp/tdls.c	/^	u8 value[TDLS_TIMEOUT_LEN];$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
value	src/tls/x509v3.h	/^	char *value;$/;"	m	struct:x509_name_attr	access:public
variable	src/common/ieee802_11_defs.h	/^					u8 variable[0]; \/* FT Request *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon52	access:public
variable	src/common/ieee802_11_defs.h	/^					u8 variable[0]; \/* FT Request *\/$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon53	access:public
variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon56	access:public
variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
variable	src/common/ieee802_11_defs.h	/^					u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon58	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon39	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon40	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon41	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon42	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon43	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon44	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon45	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon46	access:public
variable	src/common/ieee802_11_defs.h	/^			u8 variable[0];$/;"	m	struct:ieee80211_mgmt::__anon38::__anon47	access:public
vendor	src/ap/ap_config.h	/^		int vendor;$/;"	m	struct:hostapd_eap_user::__anon2	access:public
vendor	src/eap_common/eap_gpsk_common.h	/^	u8 vendor[4];$/;"	m	struct:eap_gpsk_csuite	access:public
vendor	src/eap_peer/eap.h	/^	int vendor;$/;"	m	struct:eap_method_type	access:public
vendor	src/eap_peer/eap_gpsk.c	/^	int vendor; \/* CSuite\/Specifier *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
vendor	src/eap_peer/eap_i.h	/^	int vendor;$/;"	m	struct:eap_method	access:public
vendor	src/eap_server/eap.h	/^		int vendor;$/;"	m	struct:eap_user::__anon133	access:public
vendor	src/eap_server/eap_i.h	/^	int vendor;$/;"	m	struct:eap_method	access:public
vendor	src/eap_server/eap_server_gpsk.c	/^	int vendor; \/* CSuite\/Vendor *\/$/;"	m	struct:eap_gpsk_data	file:	access:public
vendor_action_cb	src/ap/hostapd.h	/^	int (*vendor_action_cb)(void *ctx, const u8 *buf, size_t len,$/;"	m	struct:hostapd_data	access:public
vendor_action_cb_ctx	src/ap/hostapd.h	/^	void *vendor_action_cb_ctx;$/;"	m	struct:hostapd_data	access:public
vendor_ext	src/wps/wps.h	/^	struct wpabuf *vendor_ext[MAX_WPS_VENDOR_EXTENSIONS];$/;"	m	struct:wps_device_data	typeref:struct:wps_device_data::wpabuf	access:public
vendor_ext	src/wps/wps_i.h	/^	const u8 *vendor_ext[MAX_WPS_PARSE_VENDOR_EXT];$/;"	m	struct:wps_parse_attr	access:public
vendor_ext_len	src/wps/wps_i.h	/^	size_t vendor_ext_len[MAX_WPS_PARSE_VENDOR_EXT];$/;"	m	struct:wps_parse_attr	access:public
vendor_ht_cap	src/common/ieee802_11_common.h	/^	const u8 *vendor_ht_cap;$/;"	m	struct:ieee802_11_elems	access:public
vendor_ht_cap_len	src/common/ieee802_11_common.h	/^	u8 vendor_ht_cap_len;$/;"	m	struct:ieee802_11_elems	access:public
vendor_id	src/eap_common/eap_tlv_common.h	/^	be32 vendor_id;$/;"	m	struct:eap_tlv_nak_tlv	access:public
vendor_id	src/eap_common/eap_ttls.h	/^	be32 vendor_id;$/;"	m	struct:ttls_avp_vendor	access:public
vendor_length	src/radius/radius.h	/^	u8 vendor_length;$/;"	m	struct:radius_attr_vendor	access:public
vendor_type	src/radius/radius.h	/^	u8 vendor_type;$/;"	m	struct:radius_attr_vendor	access:public
venue_group	src/ap/ap_config.h	/^	u8 venue_group;$/;"	m	struct:hostapd_bss_config	access:public
venue_info_set	src/ap/ap_config.h	/^	int venue_info_set;$/;"	m	struct:hostapd_bss_config	access:public
venue_type	src/ap/ap_config.h	/^	u8 venue_type;$/;"	m	struct:hostapd_bss_config	access:public
ver_list	src/eap_peer/eap_sim.c	/^	u8 *ver_list;$/;"	m	struct:eap_sim_data	file:	access:public
ver_list_len	src/eap_peer/eap_sim.c	/^	size_t ver_list_len;$/;"	m	struct:eap_sim_data	file:	access:public
verify	src/tls/tlsv1_client_i.h	/^	struct tls_verify_hash verify;$/;"	m	struct:tlsv1_client	typeref:struct:tlsv1_client::tls_verify_hash	access:public
verify	src/tls/tlsv1_server_i.h	/^	struct tls_verify_hash verify;$/;"	m	struct:tlsv1_server	typeref:struct:tlsv1_server::tls_verify_hash	access:public
verify_peer	src/crypto/tls_gnutls.c	/^	int verify_peer;$/;"	m	struct:tls_connection	file:	access:public
verify_peer	src/crypto/tls_nss.c	/^	int verify_peer;$/;"	m	struct:tls_connection	file:	access:public
verify_peer	src/tls/tlsv1_server_i.h	/^	int verify_peer;$/;"	m	struct:tlsv1_server	access:public
version	src/ap/iapp.c	/^	u8 version;$/;"	m	struct:iapp_hdr	file:	access:public
version	src/common/eapol_common.h	/^	u8 version;$/;"	m	struct:ieee802_1x_hdr	access:public
version	src/common/ieee802_11_defs.h	/^	u8 version; \/* 1 *\/$/;"	m	struct:wmm_tspec_element	access:public
version	src/common/ieee802_11_defs.h	/^	u8 version; \/* 1 for WMM version 1.0 *\/$/;"	m	struct:wmm_information_element	access:public
version	src/common/ieee802_11_defs.h	/^	u8 version; \/* 1 for WMM version 1.0 *\/$/;"	m	struct:wmm_parameter_element	access:public
version	src/common/wpa_common.h	/^	u8 version[2]; \/* little endian *\/$/;"	m	struct:rsn_ie_hdr	access:public
version	src/common/wpa_common.h	/^	u8 version[2]; \/* little endian *\/$/;"	m	struct:wpa_ie_hdr	access:public
version	src/eap_common/eap_sake_common.h	/^	u8 version; \/* EAP_SAKE_VERSION *\/$/;"	m	struct:eap_sake_hdr	access:public
version	src/eap_common/eap_tlv_common.h	/^	u8 version;$/;"	m	struct:eap_tlv_crypto_binding_tlv	access:public
version	src/eap_common/ikev2_common.h	/^	u8 version; \/* MjVer | MnVer *\/$/;"	m	struct:ikev2_hdr	access:public
version	src/eap_peer/eap_i.h	/^	int version;$/;"	m	struct:eap_method	access:public
version	src/eap_server/eap_i.h	/^	int version;$/;"	m	struct:eap_method	access:public
version	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	m	struct:x509_certificate	typeref:enum:x509_certificate::__anon106	access:public
version	src/wps/httpread.c	/^	int version;            \/* 1 if we've seen 1.1 *\/$/;"	m	struct:httpread	file:	access:public
version	src/wps/wps_i.h	/^	const u8 *version; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
version2	src/wps/wps_i.h	/^	const u8 *version2; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
version_list	src/eap_common/eap_sim_common.h	/^	const u8 *rand, *autn, *mac, *iv, *encr_data, *version_list, *nonce_s;$/;"	m	struct:eap_sim_attrs	access:public
version_list_len	src/eap_common/eap_sim_common.h	/^	size_t num_chal, version_list_len, encr_data_len;$/;"	m	struct:eap_sim_attrs	access:public
vlan	src/ap/ap_config.h	/^	char vlan[IFNAMSIZ + 1];$/;"	m	struct:hostapd_ssid	access:public
vlan	src/ap/ap_config.h	/^	struct hostapd_vlan *vlan, *vlan_tail;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::hostapd_vlan	access:public
vlan_add	src/ap/vlan_init.c	/^static int vlan_add(const char *if_name, int vid)$/;"	f	file:	signature:(const char *if_name, int vid)
vlan_add_dynamic	src/ap/vlan_init.c	/^struct hostapd_vlan * vlan_add_dynamic(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_vlan *vlan, int vlan_id)
vlan_add_dynamic	src/ap/vlan_init.h	/^static inline struct hostapd_vlan * vlan_add_dynamic(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_vlan *vlan, int vlan_id)
vlan_add_dynamic	src/ap/vlan_init.h	/^struct hostapd_vlan * vlan_add_dynamic(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct hostapd_vlan *vlan, int vlan_id)
vlan_deinit	src/ap/vlan_init.c	/^void vlan_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
vlan_deinit	src/ap/vlan_init.h	/^static inline void vlan_deinit(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
vlan_deinit	src/ap/vlan_init.h	/^void vlan_deinit(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
vlan_dellink	src/ap/vlan_init.c	/^static void vlan_dellink(char *ifname, struct hostapd_data *hapd)$/;"	f	file:	signature:(char *ifname, struct hostapd_data *hapd)
vlan_dynamic_add	src/ap/vlan_init.c	/^static int vlan_dynamic_add(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct hostapd_vlan *vlan)
vlan_dynamic_remove	src/ap/vlan_init.c	/^static void vlan_dynamic_remove(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct hostapd_vlan *vlan)
vlan_event_receive	src/ap/vlan_init.c	/^static void vlan_event_receive(int sock, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
vlan_id	src/ap/ap_config.h	/^	int vlan_id; \/* VLAN ID or -1 (VLAN_ID_WILDCARD) for wildcard entry *\/$/;"	m	struct:hostapd_vlan	access:public
vlan_id	src/ap/ap_config.h	/^	int vlan_id;$/;"	m	struct:mac_acl_entry	access:public
vlan_id	src/ap/ieee802_11_auth.c	/^	int vlan_id;$/;"	m	struct:hostapd_cached_radius_acl	file:	access:public
vlan_id	src/ap/pmksa_cache_auth.h	/^	int vlan_id;$/;"	m	struct:rsn_pmksa_cache_entry	access:public
vlan_id	src/ap/sta_info.h	/^	int vlan_id;$/;"	m	struct:sta_info	access:public
vlan_id	src/ap/wpa_auth_i.h	/^	int vlan_id;$/;"	m	struct:wpa_group	access:public
vlan_init	src/ap/vlan_init.c	/^int vlan_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
vlan_init	src/ap/vlan_init.h	/^int vlan_init(struct hostapd_data *hapd);$/;"	p	signature:(struct hostapd_data *hapd)
vlan_init	src/ap/vlan_init.h	/^static inline int vlan_init(struct hostapd_data *hapd)$/;"	f	signature:(struct hostapd_data *hapd)
vlan_newlink	src/ap/vlan_init.c	/^static void vlan_newlink(char *ifname, struct hostapd_data *hapd)$/;"	f	file:	signature:(char *ifname, struct hostapd_data *hapd)
vlan_read_ifnames	src/ap/vlan_init.c	/^vlan_read_ifnames(struct nlmsghdr *h, size_t len, int del,$/;"	f	file:	signature:(struct nlmsghdr *h, size_t len, int del, struct hostapd_data *hapd)
vlan_rem	src/ap/vlan_init.c	/^static int vlan_rem(const char *if_name)$/;"	f	file:	signature:(const char *if_name)
vlan_remove_dynamic	src/ap/vlan_init.c	/^int vlan_remove_dynamic(struct hostapd_data *hapd, int vlan_id)$/;"	f	signature:(struct hostapd_data *hapd, int vlan_id)
vlan_remove_dynamic	src/ap/vlan_init.h	/^int vlan_remove_dynamic(struct hostapd_data *hapd, int vlan_id);$/;"	p	signature:(struct hostapd_data *hapd, int vlan_id)
vlan_remove_dynamic	src/ap/vlan_init.h	/^static inline int vlan_remove_dynamic(struct hostapd_data *hapd, int vlan_id)$/;"	f	signature:(struct hostapd_data *hapd, int vlan_id)
vlan_set_name_type	src/ap/vlan_init.c	/^static int vlan_set_name_type(unsigned int name_type)$/;"	f	file:	signature:(unsigned int name_type)
vlan_setup_encryption_dyn	src/ap/vlan_init.c	/^int vlan_setup_encryption_dyn(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_ssid *mssid, const char *dyn_vlan)
vlan_setup_encryption_dyn	src/ap/vlan_init.h	/^int vlan_setup_encryption_dyn(struct hostapd_data *hapd,$/;"	p	signature:(struct hostapd_data *hapd, struct hostapd_ssid *mssid, const char *dyn_vlan)
vlan_setup_encryption_dyn	src/ap/vlan_init.h	/^static inline int vlan_setup_encryption_dyn(struct hostapd_data *hapd,$/;"	f	signature:(struct hostapd_data *hapd, struct hostapd_ssid *mssid, const char *dyn_vlan)
vlan_tagged_interface	src/ap/ap_config.h	/^	char *vlan_tagged_interface;$/;"	m	struct:hostapd_ssid	access:public
vlan_tail	src/ap/ap_config.h	/^	struct hostapd_vlan *vlan, *vlan_tail;$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::	access:public
vlanid	src/radius/radius.c	/^	int vlanid;$/;"	m	struct:radius_tunnel_attrs	file:	access:public
vs_public_action	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED vs_public_action;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon57	access:public
vsnprintf	src/utils/common.h	/^int vsnprintf(char *str, size_t size, const char *format, va_list ap);$/;"	p	signature:(char *str, size_t size, const char *format, va_list ap)
vsnprintf	src/utils/common.h	92;"	d
vsnprintf	src/utils/common.h	93;"	d
vv	src/drivers/driver_ralink.h	/^    }vv;$/;"	m	union:_LARGE_INTEGER	typeref:struct:_LARGE_INTEGER::__anon88	access:public
wait_count	src/p2p/p2p_i.h	/^	unsigned int wait_count;$/;"	m	struct:p2p_device	access:public
wait_time	src/p2p/p2p_i.h	/^	unsigned int wait_time;$/;"	m	struct:p2p_pending_action_tx	access:public
was_done	src/eap_server/eap_server_tnc.c	/^	unsigned int was_done:1;$/;"	m	struct:eap_tnc_data	file:	access:public
was_fail	src/eap_server/eap_server_tnc.c	/^	unsigned int was_fail:1;$/;"	m	struct:eap_tnc_data	file:	access:public
wds	src/drivers/driver.h	/^		int wds;$/;"	m	struct:wpa_event_data::rx_from_unknown	access:public
wds_bridge	src/ap/ap_config.h	/^	char wds_bridge[IFNAMSIZ + 1];$/;"	m	struct:hostapd_bss_config	access:public
wds_sta	src/ap/ap_config.h	/^	int wds_sta;$/;"	m	struct:hostapd_bss_config	access:public
we_version	src/drivers/driver_atheros.c	/^	int	we_version;$/;"	m	struct:atheros_driver_data	file:	access:public
we_version	src/drivers/driver_hostap.c	/^	int we_version;$/;"	m	struct:hostap_driver_data	file:	access:public
we_version	src/drivers/driver_madwifi.c	/^	int	we_version;$/;"	m	struct:madwifi_driver_data	file:	access:public
we_version_compiled	src/drivers/driver_ralink.c	/^	int we_version_compiled;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
we_version_compiled	src/drivers/driver_wext.h	/^	int we_version_compiled;$/;"	m	struct:wpa_driver_wext_data	access:public
we_version_compiled	src/drivers/wireless_copy.h	/^	__u8		we_version_compiled;	\/* Must be WIRELESS_EXT *\/$/;"	m	struct:iw_range	access:public
we_version_source	src/drivers/wireless_copy.h	/^	__u8		we_version_source;	\/* Last update of source *\/$/;"	m	struct:iw_range	access:public
web_connection_check_data	src/wps/wps_upnp_web.c	/^static void web_connection_check_data(void *ctx, struct http_request *req)$/;"	f	file:	signature:(void *ctx, struct http_request *req)
web_connection_parse_get	src/wps/wps_upnp_web.c	/^static void web_connection_parse_get(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct http_request *hreq, char *filename)
web_connection_parse_post	src/wps/wps_upnp_web.c	/^static void web_connection_parse_post(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct sockaddr_in *cli, struct http_request *req, const char *filename)
web_connection_parse_subscribe	src/wps/wps_upnp_web.c	/^static void web_connection_parse_subscribe(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct http_request *req, const char *filename)
web_connection_parse_unsubscribe	src/wps/wps_upnp_web.c	/^static void web_connection_parse_unsubscribe(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct http_request *req, const char *filename)
web_connection_send_reply	src/wps/wps_upnp_web.c	/^static void web_connection_send_reply(struct http_request *req,$/;"	f	file:	signature:(struct http_request *req, enum http_reply_code ret, const char *action, int action_len, const struct wpabuf *reply, const char *replyname)
web_connection_unimplemented	src/wps/wps_upnp_web.c	/^static void web_connection_unimplemented(struct http_request *req)$/;"	f	file:	signature:(struct http_request *req)
web_get_action	src/wps/wps_upnp_web.c	/^static const char * web_get_action(struct http_request *req,$/;"	f	file:	signature:(struct http_request *req, size_t *action_len)
web_listener_start	src/wps/wps_upnp_i.h	/^int web_listener_start(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
web_listener_start	src/wps/wps_upnp_web.c	/^int web_listener_start(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
web_listener_stop	src/wps/wps_upnp_i.h	/^void web_listener_stop(struct upnp_wps_device_sm *sm);$/;"	p	signature:(struct upnp_wps_device_sm *sm)
web_listener_stop	src/wps/wps_upnp_web.c	/^void web_listener_stop(struct upnp_wps_device_sm *sm)$/;"	f	signature:(struct upnp_wps_device_sm *sm)
web_port	src/wps/wps_upnp_i.h	/^	int web_port; \/* our port that others get xml files from *\/$/;"	m	struct:upnp_wps_device_sm	access:public
web_process_get_device_info	src/wps/wps_upnp_web.c	/^web_process_get_device_info(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct wpabuf **reply, const char **replyname)
web_process_put_message	src/wps/wps_upnp_web.c	/^web_process_put_message(struct upnp_wps_device_sm *sm, char *data,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, char *data, struct wpabuf **reply, const char **replyname)
web_process_put_wlan_response	src/wps/wps_upnp_web.c	/^web_process_put_wlan_response(struct upnp_wps_device_sm *sm, char *data,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, char *data, struct wpabuf **reply, const char **replyname)
web_process_set_selected_registrar	src/wps/wps_upnp_web.c	/^web_process_set_selected_registrar(struct upnp_wps_device_sm *sm,$/;"	f	file:	signature:(struct upnp_wps_device_sm *sm, struct sockaddr_in *cli, char *data, struct wpabuf **reply, const char **replyname)
web_srv	src/wps/wps_upnp_i.h	/^	struct http_server *web_srv;$/;"	m	struct:upnp_wps_device_sm	typeref:struct:upnp_wps_device_sm::http_server	access:public
wep	src/ap/ap_config.h	/^	struct hostapd_wep_keys wep;$/;"	m	struct:hostapd_ssid	typeref:struct:hostapd_ssid::hostapd_wep_keys	access:public
wep_key	src/drivers/driver.h	/^	const u8 *wep_key[4];$/;"	m	struct:wpa_driver_associate_params	access:public
wep_key	src/drivers/driver.h	/^	const u8 *wep_key[4];$/;"	m	struct:wpa_driver_auth_params	access:public
wep_key_len	src/drivers/driver.h	/^	size_t wep_key_len[4];$/;"	m	struct:wpa_driver_associate_params	access:public
wep_key_len	src/drivers/driver.h	/^	size_t wep_key_len[4];$/;"	m	struct:wpa_driver_auth_params	access:public
wep_rekeying_period	src/ap/ap_config.h	/^	int wep_rekeying_period;$/;"	m	struct:hostapd_bss_config	access:public
wep_tx_keyidx	src/drivers/driver.h	/^	int wep_tx_keyidx;$/;"	m	struct:wpa_driver_associate_params	access:public
wep_tx_keyidx	src/drivers/driver.h	/^	int wep_tx_keyidx;$/;"	m	struct:wpa_driver_auth_params	access:public
wext	src/drivers/driver_hostap.c	/^	void *wext; \/* private data for driver_wext *\/$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
wext	src/drivers/driver_madwifi.c	/^	void *wext; \/* private data for driver_wext *\/$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
wext_19_iw_point	src/drivers/driver_wext.c	/^static int wext_19_iw_point(struct wpa_driver_wext_data *drv, u16 cmd)$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, u16 cmd)
wext_get_phy_name	src/drivers/driver_wext.c	/^static void wext_get_phy_name(struct wpa_driver_wext_data *drv)$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv)
wext_get_radio_name	src/drivers/driver_wext.c	/^static const char * wext_get_radio_name(void *priv)$/;"	f	file:	signature:(void *priv)
wext_get_scan_custom	src/drivers/driver_wext.c	/^static void wext_get_scan_custom(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res, char *custom, char *end)
wext_get_scan_encode	src/drivers/driver_wext.c	/^static void wext_get_scan_encode(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res)
wext_get_scan_freq	src/drivers/driver_wext.c	/^static void wext_get_scan_freq(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res)
wext_get_scan_iwevgenie	src/drivers/driver_wext.c	/^static void wext_get_scan_iwevgenie(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res, char *custom, char *end)
wext_get_scan_mode	src/drivers/driver_wext.c	/^static void wext_get_scan_mode(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res)
wext_get_scan_qual	src/drivers/driver_wext.c	/^static void wext_get_scan_qual(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, struct iw_event *iwe, struct wext_scan_data *res)
wext_get_scan_rate	src/drivers/driver_wext.c	/^static void wext_get_scan_rate(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res, char *pos, char *end)
wext_get_scan_ssid	src/drivers/driver_wext.c	/^static void wext_get_scan_ssid(struct iw_event *iwe,$/;"	f	file:	signature:(struct iw_event *iwe, struct wext_scan_data *res, char *custom, char *end)
wext_scan_data	src/drivers/driver_wext.c	/^struct wext_scan_data {$/;"	s	file:
wext_scan_data::ie	src/drivers/driver_wext.c	/^	u8 *ie;$/;"	m	struct:wext_scan_data	file:	access:public
wext_scan_data::ie_len	src/drivers/driver_wext.c	/^	size_t ie_len;$/;"	m	struct:wext_scan_data	file:	access:public
wext_scan_data::maxrate	src/drivers/driver_wext.c	/^	int maxrate;$/;"	m	struct:wext_scan_data	file:	access:public
wext_scan_data::res	src/drivers/driver_wext.c	/^	struct wpa_scan_res res;$/;"	m	struct:wext_scan_data	typeref:struct:wext_scan_data::wpa_scan_res	file:	access:public
wext_scan_data::ssid	src/drivers/driver_wext.c	/^	u8 ssid[32];$/;"	m	struct:wext_scan_data	file:	access:public
wext_scan_data::ssid_len	src/drivers/driver_wext.c	/^	size_t ssid_len;$/;"	m	struct:wext_scan_data	file:	access:public
wifi_filter	src/wps/ndef.c	/^static int wifi_filter(struct ndef_record *record)$/;"	f	file:	signature:(struct ndef_record *record)
wifi_handover_type	src/wps/ndef.c	/^static char wifi_handover_type[] = "application\/vnd.wfa.wsc";$/;"	v	file:
wildcard_prefix	src/ap/ap_config.h	/^	unsigned int wildcard_prefix:1;$/;"	m	struct:hostapd_eap_user	access:public
wildcard_uuid	src/wps/wps_registrar.c	/^	int wildcard_uuid;$/;"	m	struct:wps_uuid_pin	file:	access:public
wiphy_info_data	src/drivers/driver_nl80211.c	/^struct wiphy_info_data {$/;"	s	file:
wiphy_info_data::capa	src/drivers/driver_nl80211.c	/^	struct wpa_driver_capa *capa;$/;"	m	struct:wiphy_info_data	typeref:struct:wiphy_info_data::wpa_driver_capa	file:	access:public
wiphy_info_data::error	src/drivers/driver_nl80211.c	/^	unsigned int error:1;$/;"	m	struct:wiphy_info_data	file:	access:public
wiphy_info_handler	src/drivers/driver_nl80211.c	/^static int wiphy_info_handler(struct nl_msg *msg, void *arg)$/;"	f	file:	signature:(struct nl_msg *msg, void *arg)
wired	src/drivers/driver_ndis.h	/^	int wired;$/;"	m	struct:wpa_driver_ndis_data	access:public
wired_driver_hapd_deinit	src/drivers/driver_wired.c	/^static void wired_driver_hapd_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wired_driver_hapd_init	src/drivers/driver_wired.c	/^static void * wired_driver_hapd_init(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, struct wpa_init_params *params)
wired_init_sockets	src/drivers/driver_wired.c	/^static int wired_init_sockets(struct wpa_driver_wired_data *drv, u8 *own_addr)$/;"	f	file:	signature:(struct wpa_driver_wired_data *drv, u8 *own_addr)
wired_multicast_membership	src/drivers/driver_wired.c	/^static int wired_multicast_membership(int sock, int ifindex,$/;"	f	file:	signature:(int sock, int ifindex, const u8 *addr, int add)
wired_send_eapol	src/drivers/driver_wired.c	/^static int wired_send_eapol(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
wirelessKeyType	src/drivers/Apple80211.h	/^typedef int wirelessKeyType; \/* TODO *\/$/;"	t
wlanevent	src/wps/wps_upnp_i.h	/^	char *wlanevent; \/* the last WLANEvent data *\/$/;"	m	struct:upnp_wps_device_sm	access:public
wlanevent_type	src/wps/wps_upnp_i.h	/^	enum upnp_wps_wlanevent_type wlanevent_type;$/;"	m	struct:upnp_wps_device_sm	typeref:enum:upnp_wps_device_sm::upnp_wps_wlanevent_type	access:public
wlc_deauth_t	src/drivers/driver_broadcom.c	/^} wlc_deauth_t;$/;"	t	typeref:struct:__anon93	file:
wmi_first	src/drivers/ndis_events.c	/^static int wmi_first = 1;$/;"	v	file:
wmi_refcnt	src/drivers/ndis_events.c	/^static int wmi_refcnt = 0;$/;"	v	file:
wmm	src/common/ieee802_11_common.h	/^	const u8 *wmm; \/* WMM Information or Parameter Element *\/$/;"	m	struct:ieee802_11_elems	access:public
wmm_ac_parameter	src/common/ieee802_11_defs.h	/^struct wmm_ac_parameter {$/;"	s
wmm_ac_parameter::aci_aifsn	src/common/ieee802_11_defs.h	/^	u8 aci_aifsn; \/* AIFSN, ACM, ACI *\/$/;"	m	struct:wmm_ac_parameter	access:public
wmm_ac_parameter::cw	src/common/ieee802_11_defs.h	/^	u8 cw; \/* ECWmin, ECWmax (CW = 2^ECW - 1) *\/$/;"	m	struct:wmm_ac_parameter	access:public
wmm_ac_parameter::txop_limit	src/common/ieee802_11_defs.h	/^	le16 txop_limit;$/;"	m	struct:wmm_ac_parameter	access:public
wmm_ac_params	src/ap/ap_config.h	/^	struct hostapd_wmm_ac_params wmm_ac_params[4];$/;"	m	struct:hostapd_config	typeref:struct:hostapd_config::hostapd_wmm_ac_params	access:public
wmm_aci_aifsn	src/ap/wmm.c	/^static inline u8 wmm_aci_aifsn(int aifsn, int acm, int aci)$/;"	f	file:	signature:(int aifsn, int acm, int aci)
wmm_action	src/common/ieee802_11_defs.h	/^				} STRUCT_PACKED wmm_action;$/;"	m	union:ieee80211_mgmt::__anon38::__anon48::__anon49	typeref:struct:ieee80211_mgmt::__anon38::__anon48::__anon49::__anon50	access:public
wmm_addts_req	src/ap/wmm.c	/^static void wmm_addts_req(struct hostapd_data *hapd,$/;"	f	file:	signature:(struct hostapd_data *hapd, const struct ieee80211_mgmt *mgmt, struct wmm_tspec_element *tspec, size_t len)
wmm_ecw	src/ap/wmm.c	/^static inline u8 wmm_ecw(int ecwmin, int ecwmax)$/;"	f	file:	signature:(int ecwmin, int ecwmax)
wmm_enabled	src/ap/ap_config.h	/^	int wmm_enabled;$/;"	m	struct:hostapd_bss_config	access:public
wmm_enabled	src/ap/wpa_auth.h	/^	int wmm_enabled;$/;"	m	struct:wpa_auth_config	access:public
wmm_information_element	src/common/ieee802_11_defs.h	/^struct wmm_information_element {$/;"	s
wmm_information_element::oui	src/common/ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_information_element	access:public
wmm_information_element::oui_subtype	src/common/ieee802_11_defs.h	/^	u8 oui_subtype; \/* 0 *\/$/;"	m	struct:wmm_information_element	access:public
wmm_information_element::oui_type	src/common/ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_information_element	access:public
wmm_information_element::qos_info	src/common/ieee802_11_defs.h	/^	u8 qos_info; \/* AP\/STA specific QoS info *\/$/;"	m	struct:wmm_information_element	access:public
wmm_information_element::version	src/common/ieee802_11_defs.h	/^	u8 version; \/* 1 for WMM version 1.0 *\/$/;"	m	struct:wmm_information_element	access:public
wmm_len	src/common/ieee802_11_common.h	/^	u8 wmm_len; \/* 7 = WMM Information; 24 = WMM Parameter *\/$/;"	m	struct:ieee802_11_elems	access:public
wmm_parameter_element	src/common/ieee802_11_defs.h	/^struct wmm_parameter_element {$/;"	s
wmm_parameter_element::ac	src/common/ieee802_11_defs.h	/^	struct wmm_ac_parameter ac[4]; \/* AC_BE, AC_BK, AC_VI, AC_VO *\/$/;"	m	struct:wmm_parameter_element	typeref:struct:wmm_parameter_element::wmm_ac_parameter	access:public
wmm_parameter_element::oui	src/common/ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_parameter_element	access:public
wmm_parameter_element::oui_subtype	src/common/ieee802_11_defs.h	/^	u8 oui_subtype; \/* 1 *\/$/;"	m	struct:wmm_parameter_element	access:public
wmm_parameter_element::oui_type	src/common/ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_parameter_element	access:public
wmm_parameter_element::qos_info	src/common/ieee802_11_defs.h	/^	u8 qos_info; \/* AP\/STA specific QoS info *\/$/;"	m	struct:wmm_parameter_element	access:public
wmm_parameter_element::reserved	src/common/ieee802_11_defs.h	/^	u8 reserved; \/* 0 *\/$/;"	m	struct:wmm_parameter_element	access:public
wmm_parameter_element::version	src/common/ieee802_11_defs.h	/^	u8 version; \/* 1 for WMM version 1.0 *\/$/;"	m	struct:wmm_parameter_element	access:public
wmm_process_tspec	src/ap/wmm.c	/^int wmm_process_tspec(struct wmm_tspec_element *tspec)$/;"	f	signature:(struct wmm_tspec_element *tspec)
wmm_process_tspec	src/ap/wmm.h	/^int wmm_process_tspec(struct wmm_tspec_element *tspec);$/;"	p	signature:(struct wmm_tspec_element *tspec)
wmm_send_action	src/ap/wmm.c	/^static void wmm_send_action(struct hostapd_data *hapd, const u8 *addr,$/;"	f	file:	signature:(struct hostapd_data *hapd, const u8 *addr, const struct wmm_tspec_element *tspec, u8 action_code, u8 dialogue_token, u8 status_code)
wmm_tspec	src/common/ieee802_11_common.h	/^	const u8 *wmm_tspec;$/;"	m	struct:ieee802_11_elems	access:public
wmm_tspec_element	src/common/ieee802_11_defs.h	/^struct wmm_tspec_element {$/;"	s
wmm_tspec_element::delay_bound	src/common/ieee802_11_defs.h	/^	le32 delay_bound;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::eid	src/common/ieee802_11_defs.h	/^	u8 eid; \/* 221 = 0xdd *\/$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::inactivity_interval	src/common/ieee802_11_defs.h	/^	le32 inactivity_interval;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::length	src/common/ieee802_11_defs.h	/^	u8 length; \/* 6 + 55 = 61 *\/$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::maximum_burst_size	src/common/ieee802_11_defs.h	/^	le32 maximum_burst_size;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::maximum_msdu_size	src/common/ieee802_11_defs.h	/^	le16 maximum_msdu_size;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::maximum_service_interval	src/common/ieee802_11_defs.h	/^	le32 maximum_service_interval;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::mean_data_rate	src/common/ieee802_11_defs.h	/^	le32 mean_data_rate;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::medium_time	src/common/ieee802_11_defs.h	/^	le16 medium_time;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::minimum_data_rate	src/common/ieee802_11_defs.h	/^	le32 minimum_data_rate;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::minimum_phy_rate	src/common/ieee802_11_defs.h	/^	le32 minimum_phy_rate;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::minimum_service_interval	src/common/ieee802_11_defs.h	/^	le32 minimum_service_interval;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::nominal_msdu_size	src/common/ieee802_11_defs.h	/^	le16 nominal_msdu_size;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::oui	src/common/ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::oui_subtype	src/common/ieee802_11_defs.h	/^	u8 oui_subtype; \/* 2 *\/$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::oui_type	src/common/ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::peak_data_rate	src/common/ieee802_11_defs.h	/^	le32 peak_data_rate;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::service_start_time	src/common/ieee802_11_defs.h	/^	le32 service_start_time;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::surplus_bandwidth_allowance	src/common/ieee802_11_defs.h	/^	le16 surplus_bandwidth_allowance;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::suspension_interval	src/common/ieee802_11_defs.h	/^	le32 suspension_interval;$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::ts_info	src/common/ieee802_11_defs.h	/^	u8 ts_info[3];$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_element::version	src/common/ieee802_11_defs.h	/^	u8 version; \/* 1 *\/$/;"	m	struct:wmm_tspec_element	access:public
wmm_tspec_len	src/common/ieee802_11_common.h	/^	u8 wmm_tspec_len;$/;"	m	struct:ieee802_11_elems	access:public
wmm_uapsd	src/ap/ap_config.h	/^	int wmm_uapsd;$/;"	m	struct:hostapd_bss_config	access:public
wmm_uapsd	src/ap/wpa_auth.h	/^	int wmm_uapsd;$/;"	m	struct:wpa_auth_config	access:public
wnm_action	src/common/ieee802_11_defs.h	/^enum wnm_action {$/;"	g
word_eq	src/wps/httpread.c	/^static int word_eq(char *s1, char *s2)$/;"	f	file:	signature:(char *s1, char *s2)
word_separation_length	src/wps/wps_upnp_ssdp.c	/^static int word_separation_length(const char *s)$/;"	f	file:	signature:(const char *s)
workaround	src/eap_peer/eap_i.h	/^	unsigned int workaround;$/;"	m	struct:eap_sm	access:public
workaround	src/eapol_supp/eapol_supp_sm.h	/^	unsigned int workaround;$/;"	m	struct:eapol_config	access:public
wpa	src/ap/ap_config.h	/^	int wpa; \/* bitfield of WPA_PROTO_WPA, WPA_PROTO_RSN  wpa\/wpa2功能选择位*\/$/;"	m	struct:hostapd_bss_config	access:public
wpa	src/ap/ap_list.h	/^	int wpa;$/;"	m	struct:ap_info	access:public
wpa	src/ap/wpa_auth.h	/^	int wpa;$/;"	m	struct:wpa_auth_config	access:public
wpa	src/ap/wpa_auth_i.h	/^	} wpa;$/;"	m	struct:wpa_state_machine	typeref:enum:wpa_state_machine::__anon16	access:public
wpa	src/drivers/driver.h	/^	int wpa;$/;"	m	struct:wpa_bss_params	access:public
wpa	src/eapol_auth/eapol_auth_sm.h	/^	int wpa;                \/\/ wpa\/wpa2功能选择位$/;"	m	struct:eapol_auth_config	access:public
wpa_add_ie	src/rsn_supp/peerkey.c	/^static u8 * wpa_add_ie(u8 *pos, const u8 *ie, size_t ie_len)$/;"	f	file:	signature:(u8 *pos, const u8 *ie, size_t ie_len)
wpa_add_ie	src/rsn_supp/tdls.c	/^static u8 * wpa_add_ie(u8 *pos, const u8 *ie, size_t ie_len)$/;"	f	file:	signature:(u8 *pos, const u8 *ie, size_t ie_len)
wpa_add_kde	src/ap/wpa_auth_ie.c	/^u8 * wpa_add_kde(u8 *pos, u32 kde, const u8 *data, size_t data_len,$/;"	f	signature:(u8 *pos, u32 kde, const u8 *data, size_t data_len, const u8 *data2, size_t data2_len)
wpa_add_kde	src/ap/wpa_auth_ie.h	/^u8 * wpa_add_kde(u8 *pos, u32 kde, const u8 *data, size_t data_len,$/;"	p	signature:(u8 *pos, u32 kde, const u8 *data, size_t data_len, const u8 *data2, size_t data2_len)
wpa_add_kde	src/rsn_supp/peerkey.c	/^static u8 * wpa_add_kde(u8 *pos, u32 kde, const u8 *data, size_t data_len)$/;"	f	file:	signature:(u8 *pos, u32 kde, const u8 *data, size_t data_len)
wpa_add_tdls_timeoutie	src/rsn_supp/tdls.c	/^static u8 * wpa_add_tdls_timeoutie(u8 *pos, u8 *ie, size_t ie_len, u32 tsecs)$/;"	f	file:	signature:(u8 *pos, u8 *ie, size_t ie_len, u32 tsecs)
wpa_add_tdls_timeoutie	src/rsn_supp/tdls.c	/^static u8 * wpa_add_tdls_timeoutie(u8 *pos, u8 *ie, size_t ie_len, u32 tsecs);$/;"	p	file:	signature:(u8 *pos, u8 *ie, size_t ie_len, u32 tsecs)
wpa_alg	src/common/defs.h	/^enum wpa_alg {$/;"	g
wpa_alg_enum	src/ap/wpa_auth.c	/^static enum wpa_alg wpa_alg_enum(int alg)$/;"	f	file:	signature:(int alg)
wpa_auth	src/ap/hostapd.h	/^	struct wpa_authenticator *wpa_auth;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpa_authenticator	access:public
wpa_auth	src/ap/wpa_auth_i.h	/^	struct wpa_authenticator *wpa_auth;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::wpa_authenticator	access:public
wpa_auth_add_group	src/ap/wpa_auth.c	/^wpa_auth_add_group(struct wpa_authenticator *wpa_auth, int vlan_id)$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, int vlan_id)
wpa_auth_callbacks	src/ap/wpa_auth.h	/^struct wpa_auth_callbacks {$/;"	s
wpa_auth_callbacks::add_sta	src/ap/wpa_auth.h	/^	struct wpa_state_machine * (*add_sta)(void *ctx, const u8 *sta_addr);$/;"	m	struct:wpa_auth_callbacks	typeref:struct:wpa_auth_callbacks::add_sta	access:public
wpa_auth_callbacks::ctx	src/ap/wpa_auth.h	/^	void *ctx;$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::disconnect	src/ap/wpa_auth.h	/^	void (*disconnect)(void *ctx, const u8 *addr, u16 reason);$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::for_each_auth	src/ap/wpa_auth.h	/^	int (*for_each_auth)(void *ctx, int (*cb)(struct wpa_authenticator *a,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::for_each_sta	src/ap/wpa_auth.h	/^	int (*for_each_sta)(void *ctx, int (*cb)(struct wpa_state_machine *sm,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::get_eapol	src/ap/wpa_auth.h	/^	int (*get_eapol)(void *ctx, const u8 *addr, wpa_eapol_variable var);$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::get_msk	src/ap/wpa_auth.h	/^	int (*get_msk)(void *ctx, const u8 *addr, u8 *msk, size_t *len);$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::get_psk	src/ap/wpa_auth.h	/^	const u8 * (*get_psk)(void *ctx, const u8 *addr, const u8 *prev_psk);$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::get_seqnum	src/ap/wpa_auth.h	/^	int (*get_seqnum)(void *ctx, const u8 *addr, int idx, u8 *seq);$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::logger	src/ap/wpa_auth.h	/^	void (*logger)(void *ctx, const u8 *addr, logger_level level,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::mic_failure_report	src/ap/wpa_auth.h	/^	void (*mic_failure_report)(void *ctx, const u8 *addr);$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::send_eapol	src/ap/wpa_auth.h	/^	int (*send_eapol)(void *ctx, const u8 *addr, const u8 *data,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::send_ether	src/ap/wpa_auth.h	/^	int (*send_ether)(void *ctx, const u8 *dst, u16 proto, const u8 *data,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::send_ft_action	src/ap/wpa_auth.h	/^	int (*send_ft_action)(void *ctx, const u8 *dst,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::set_eapol	src/ap/wpa_auth.h	/^	void (*set_eapol)(void *ctx, const u8 *addr, wpa_eapol_variable var,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_callbacks::set_key	src/ap/wpa_auth.h	/^	int (*set_key)(void *ctx, int vlan_id, enum wpa_alg alg,$/;"	m	struct:wpa_auth_callbacks	access:public
wpa_auth_config	src/ap/wpa_auth.h	/^struct wpa_auth_config {$/;"	s
wpa_auth_config::disable_pmksa_caching	src/ap/wpa_auth.h	/^	int disable_pmksa_caching;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::eapol_version	src/ap/wpa_auth.h	/^	int eapol_version;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::ft_over_ds	src/ap/wpa_auth.h	/^	int ft_over_ds;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::ieee80211w	src/ap/wpa_auth.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:wpa_auth_config	typeref:enum:wpa_auth_config::mfp_options	access:public
wpa_auth_config::mobility_domain	src/ap/wpa_auth.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::okc	src/ap/wpa_auth.h	/^	int okc;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::peerkey	src/ap/wpa_auth.h	/^	int peerkey;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::pmk_r1_push	src/ap/wpa_auth.h	/^	int pmk_r1_push;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::r0_key_holder	src/ap/wpa_auth.h	/^	u8 r0_key_holder[FT_R0KH_ID_MAX_LEN];$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::r0_key_holder_len	src/ap/wpa_auth.h	/^	size_t r0_key_holder_len;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::r0_key_lifetime	src/ap/wpa_auth.h	/^	u32 r0_key_lifetime;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::r0kh_list	src/ap/wpa_auth.h	/^	struct ft_remote_r0kh *r0kh_list;$/;"	m	struct:wpa_auth_config	typeref:struct:wpa_auth_config::ft_remote_r0kh	access:public
wpa_auth_config::r1_key_holder	src/ap/wpa_auth.h	/^	u8 r1_key_holder[FT_R1KH_ID_LEN];$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::r1kh_list	src/ap/wpa_auth.h	/^	struct ft_remote_r1kh *r1kh_list;$/;"	m	struct:wpa_auth_config	typeref:struct:wpa_auth_config::ft_remote_r1kh	access:public
wpa_auth_config::reassociation_deadline	src/ap/wpa_auth.h	/^	u32 reassociation_deadline;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::rsn_pairwise	src/ap/wpa_auth.h	/^	int rsn_pairwise;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::rsn_preauth	src/ap/wpa_auth.h	/^	int rsn_preauth;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::ssid	src/ap/wpa_auth.h	/^	u8 ssid[SSID_LEN];$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::ssid_len	src/ap/wpa_auth.h	/^	size_t ssid_len;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::tx_status	src/ap/wpa_auth.h	/^	int tx_status;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wmm_enabled	src/ap/wpa_auth.h	/^	int wmm_enabled;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wmm_uapsd	src/ap/wpa_auth.h	/^	int wmm_uapsd;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa	src/ap/wpa_auth.h	/^	int wpa;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_gmk_rekey	src/ap/wpa_auth.h	/^	int wpa_gmk_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_group	src/ap/wpa_auth.h	/^	int wpa_group;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_group_rekey	src/ap/wpa_auth.h	/^	int wpa_group_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_key_mgmt	src/ap/wpa_auth.h	/^	int wpa_key_mgmt;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_pairwise	src/ap/wpa_auth.h	/^	int wpa_pairwise;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_ptk_rekey	src/ap/wpa_auth.h	/^	int wpa_ptk_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_config::wpa_strict_rekey	src/ap/wpa_auth.h	/^	int wpa_strict_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_auth_countermeasures_start	src/ap/wpa_auth.c	/^void wpa_auth_countermeasures_start(struct wpa_authenticator *wpa_auth)$/;"	f	signature:(struct wpa_authenticator *wpa_auth)
wpa_auth_countermeasures_start	src/ap/wpa_auth.h	/^void wpa_auth_countermeasures_start(struct wpa_authenticator *wpa_auth);$/;"	p	signature:(struct wpa_authenticator *wpa_auth)
wpa_auth_derive_ptk_ft	src/ap/wpa_auth_ft.c	/^int wpa_auth_derive_ptk_ft(struct wpa_state_machine *sm, const u8 *pmk,$/;"	f	signature:(struct wpa_state_machine *sm, const u8 *pmk, struct wpa_ptk *ptk, size_t ptk_len)
wpa_auth_derive_ptk_ft	src/ap/wpa_auth_i.h	/^int wpa_auth_derive_ptk_ft(struct wpa_state_machine *sm, const u8 *pmk,$/;"	p	signature:(struct wpa_state_machine *sm, const u8 *pmk, struct wpa_ptk *ptk, size_t ptk_len)
wpa_auth_eapol_key_tx_status	src/ap/wpa_auth.c	/^void wpa_auth_eapol_key_tx_status(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, int ack)
wpa_auth_eapol_key_tx_status	src/ap/wpa_auth.h	/^void wpa_auth_eapol_key_tx_status(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, int ack)
wpa_auth_for_each_auth	src/ap/wpa_auth.c	/^int wpa_auth_for_each_auth(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, int (*cb)(struct wpa_authenticator *a, void *ctx), void *cb_ctx)
wpa_auth_for_each_auth	src/ap/wpa_auth_i.h	/^int wpa_auth_for_each_auth(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, int (*cb)(struct wpa_authenticator *a, void *ctx), void *cb_ctx)
wpa_auth_for_each_sta	src/ap/wpa_auth.c	/^int wpa_auth_for_each_sta(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, int (*cb)(struct wpa_state_machine *sm, void *ctx), void *cb_ctx)
wpa_auth_for_each_sta	src/ap/wpa_auth_i.h	/^int wpa_auth_for_each_sta(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, int (*cb)(struct wpa_state_machine *sm, void *ctx), void *cb_ctx)
wpa_auth_ft_iface_iter_data	src/ap/wpa_auth_glue.c	/^struct wpa_auth_ft_iface_iter_data {$/;"	s	file:
wpa_auth_ft_iface_iter_data::data	src/ap/wpa_auth_glue.c	/^	const u8 *data;$/;"	m	struct:wpa_auth_ft_iface_iter_data	file:	access:public
wpa_auth_ft_iface_iter_data::data_len	src/ap/wpa_auth_glue.c	/^	size_t data_len;$/;"	m	struct:wpa_auth_ft_iface_iter_data	file:	access:public
wpa_auth_ft_iface_iter_data::dst	src/ap/wpa_auth_glue.c	/^	const u8 *dst;$/;"	m	struct:wpa_auth_ft_iface_iter_data	file:	access:public
wpa_auth_ft_iface_iter_data::src_hapd	src/ap/wpa_auth_glue.c	/^	struct hostapd_data *src_hapd;$/;"	m	struct:wpa_auth_ft_iface_iter_data	typeref:struct:wpa_auth_ft_iface_iter_data::hostapd_data	file:	access:public
wpa_auth_gen_wpa_ie	src/ap/wpa_auth_ie.c	/^int wpa_auth_gen_wpa_ie(struct wpa_authenticator *wpa_auth)$/;"	f	signature:(struct wpa_authenticator *wpa_auth)
wpa_auth_gen_wpa_ie	src/ap/wpa_auth_ie.h	/^int wpa_auth_gen_wpa_ie(struct wpa_authenticator *wpa_auth);$/;"	p	signature:(struct wpa_authenticator *wpa_auth)
wpa_auth_get_eapol	src/ap/wpa_auth.c	/^static inline int wpa_auth_get_eapol(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, wpa_eapol_variable var)
wpa_auth_get_msk	src/ap/wpa_auth.c	/^static inline int wpa_auth_get_msk(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, u8 *msk, size_t *len)
wpa_auth_get_pairwise	src/ap/wpa_auth.c	/^int wpa_auth_get_pairwise(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_get_pairwise	src/ap/wpa_auth.h	/^int wpa_auth_get_pairwise(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_get_psk	src/ap/wpa_auth.c	/^static inline const u8 * wpa_auth_get_psk(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, const u8 *prev_psk)
wpa_auth_get_seqnum	src/ap/wpa_auth.c	/^static inline int wpa_auth_get_seqnum(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, int idx, u8 *seq)
wpa_auth_get_seqnum	src/ap/wpa_auth_ft.c	/^static inline int wpa_auth_get_seqnum(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, int idx, u8 *seq)
wpa_auth_get_wpa_ie	src/ap/wpa_auth.c	/^const u8 * wpa_auth_get_wpa_ie(struct wpa_authenticator *wpa_auth, size_t *len)$/;"	f	signature:(struct wpa_authenticator *wpa_auth, size_t *len)
wpa_auth_get_wpa_ie	src/ap/wpa_auth.h	/^const u8 * wpa_auth_get_wpa_ie(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, size_t *len)
wpa_auth_iface_iter	src/ap/wpa_auth_glue.c	/^static int wpa_auth_iface_iter(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
wpa_auth_iface_iter_data	src/ap/wpa_auth_glue.c	/^struct wpa_auth_iface_iter_data {$/;"	s	file:
wpa_auth_iface_iter_data::cb	src/ap/wpa_auth_glue.c	/^	int (*cb)(struct wpa_authenticator *sm, void *ctx);$/;"	m	struct:wpa_auth_iface_iter_data	file:	access:public
wpa_auth_iface_iter_data::cb_ctx	src/ap/wpa_auth_glue.c	/^	void *cb_ctx;$/;"	m	struct:wpa_auth_iface_iter_data	file:	access:public
wpa_auth_logger	src/ap/wpa_auth.c	/^void wpa_auth_logger(struct wpa_authenticator *wpa_auth, const u8 *addr,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, logger_level level, const char *txt)
wpa_auth_logger	src/ap/wpa_auth_i.h	/^void wpa_auth_logger(struct wpa_authenticator *wpa_auth, const u8 *addr,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, logger_level level, const char *txt)
wpa_auth_mic_failure_report	src/ap/wpa_auth.c	/^static inline void wpa_auth_mic_failure_report($/;"	f	file:	signature:( struct wpa_authenticator *wpa_auth, const u8 *addr)
wpa_auth_okc_iter	src/ap/wpa_auth_ie.c	/^static int wpa_auth_okc_iter(struct wpa_authenticator *a, void *ctx)$/;"	f	file:	signature:(struct wpa_authenticator *a, void *ctx)
wpa_auth_okc_iter_data	src/ap/wpa_auth_ie.c	/^struct wpa_auth_okc_iter_data {$/;"	s	file:
wpa_auth_okc_iter_data::aa	src/ap/wpa_auth_ie.c	/^	const u8 *aa;$/;"	m	struct:wpa_auth_okc_iter_data	file:	access:public
wpa_auth_okc_iter_data::pmkid	src/ap/wpa_auth_ie.c	/^	const u8 *pmkid;$/;"	m	struct:wpa_auth_okc_iter_data	file:	access:public
wpa_auth_okc_iter_data::pmksa	src/ap/wpa_auth_ie.c	/^	struct rsn_pmksa_cache_entry *pmksa;$/;"	m	struct:wpa_auth_okc_iter_data	typeref:struct:wpa_auth_okc_iter_data::rsn_pmksa_cache_entry	file:	access:public
wpa_auth_okc_iter_data::spa	src/ap/wpa_auth_ie.c	/^	const u8 *spa;$/;"	m	struct:wpa_auth_okc_iter_data	file:	access:public
wpa_auth_pairwise_set	src/ap/wpa_auth.c	/^int wpa_auth_pairwise_set(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_pairwise_set	src/ap/wpa_auth.h	/^int wpa_auth_pairwise_set(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_pmksa_add	src/ap/wpa_auth.c	/^int wpa_auth_pmksa_add(struct wpa_state_machine *sm, const u8 *pmk,$/;"	f	signature:(struct wpa_state_machine *sm, const u8 *pmk, int session_timeout, struct eapol_state_machine *eapol)
wpa_auth_pmksa_add	src/ap/wpa_auth.h	/^int wpa_auth_pmksa_add(struct wpa_state_machine *sm, const u8 *pmk,$/;"	p	signature:(struct wpa_state_machine *sm, const u8 *pmk, int session_timeout, struct eapol_state_machine *eapol)
wpa_auth_pmksa_add_preauth	src/ap/wpa_auth.c	/^int wpa_auth_pmksa_add_preauth(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, const u8 *pmk, size_t len, const u8 *sta_addr, int session_timeout, struct eapol_state_machine *eapol)
wpa_auth_pmksa_add_preauth	src/ap/wpa_auth.h	/^int wpa_auth_pmksa_add_preauth(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, const u8 *pmk, size_t len, const u8 *sta_addr, int session_timeout, struct eapol_state_machine *eapol)
wpa_auth_pmksa_clear_cb	src/ap/wpa_auth.c	/^static int wpa_auth_pmksa_clear_cb(struct wpa_state_machine *sm, void *ctx)$/;"	f	file:	signature:(struct wpa_state_machine *sm, void *ctx)
wpa_auth_pmksa_free_cb	src/ap/wpa_auth.c	/^static void wpa_auth_pmksa_free_cb(struct rsn_pmksa_cache_entry *entry,$/;"	f	file:	signature:(struct rsn_pmksa_cache_entry *entry, void *ctx)
wpa_auth_send_eapol	src/ap/wpa_auth.c	/^wpa_auth_send_eapol(struct wpa_authenticator *wpa_auth, const u8 *addr,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, const u8 *data, size_t data_len, int encrypt)
wpa_auth_set_eapol	src/ap/wpa_auth.c	/^static inline void wpa_auth_set_eapol(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, wpa_eapol_variable var, int value)
wpa_auth_set_key	src/ap/wpa_auth.c	/^static inline int wpa_auth_set_key(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, int vlan_id, enum wpa_alg alg, const u8 *addr, int idx, u8 *key, size_t key_len)
wpa_auth_set_key	src/ap/wpa_auth_ft.c	/^static inline int wpa_auth_set_key(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, int vlan_id, enum wpa_alg alg, const u8 *addr, int idx, u8 *key, size_t key_len)
wpa_auth_sm_event	src/ap/wpa_auth.c	/^int wpa_auth_sm_event(struct wpa_state_machine *sm, wpa_event event)$/;"	f	signature:(struct wpa_state_machine *sm, wpa_event event)
wpa_auth_sm_event	src/ap/wpa_auth.h	/^int wpa_auth_sm_event(struct wpa_state_machine *sm, wpa_event event);$/;"	p	signature:(struct wpa_state_machine *sm, wpa_event event)
wpa_auth_sm_notify	src/ap/wpa_auth.c	/^void wpa_auth_sm_notify(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sm_notify	src/ap/wpa_auth.h	/^void wpa_auth_sm_notify(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_associated	src/ap/wpa_auth.c	/^int wpa_auth_sta_associated(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm)
wpa_auth_sta_associated	src/ap/wpa_auth.h	/^int wpa_auth_sta_associated(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm)
wpa_auth_sta_clear_pmksa	src/ap/wpa_auth.c	/^int wpa_auth_sta_clear_pmksa(struct wpa_state_machine *sm,$/;"	f	signature:(struct wpa_state_machine *sm, struct rsn_pmksa_cache_entry *entry)
wpa_auth_sta_clear_pmksa	src/ap/wpa_auth.h	/^int wpa_auth_sta_clear_pmksa(struct wpa_state_machine *sm,$/;"	p	signature:(struct wpa_state_machine *sm, struct rsn_pmksa_cache_entry *entry)
wpa_auth_sta_deinit	src/ap/wpa_auth.c	/^void wpa_auth_sta_deinit(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_deinit	src/ap/wpa_auth.h	/^void wpa_auth_sta_deinit(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_get_pmksa	src/ap/wpa_auth.c	/^wpa_auth_sta_get_pmksa(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_get_pmksa	src/ap/wpa_auth.h	/^wpa_auth_sta_get_pmksa(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_init	src/ap/wpa_auth.c	/^wpa_auth_sta_init(struct wpa_authenticator *wpa_auth, const u8 *addr)$/;"	f	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr)
wpa_auth_sta_init	src/ap/wpa_auth.h	/^wpa_auth_sta_init(struct wpa_authenticator *wpa_auth, const u8 *addr);$/;"	p	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr)
wpa_auth_sta_key_mgmt	src/ap/wpa_auth.c	/^int wpa_auth_sta_key_mgmt(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_key_mgmt	src/ap/wpa_auth.h	/^int wpa_auth_sta_key_mgmt(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_local_mic_failure_report	src/ap/wpa_auth.c	/^void wpa_auth_sta_local_mic_failure_report(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_local_mic_failure_report	src/ap/wpa_auth.h	/^void wpa_auth_sta_local_mic_failure_report(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_no_wpa	src/ap/wpa_auth.c	/^void wpa_auth_sta_no_wpa(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_no_wpa	src/ap/wpa_auth.h	/^void wpa_auth_sta_no_wpa(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_set_vlan	src/ap/wpa_auth.c	/^int wpa_auth_sta_set_vlan(struct wpa_state_machine *sm, int vlan_id)$/;"	f	signature:(struct wpa_state_machine *sm, int vlan_id)
wpa_auth_sta_set_vlan	src/ap/wpa_auth.h	/^int wpa_auth_sta_set_vlan(struct wpa_state_machine *sm, int vlan_id);$/;"	p	signature:(struct wpa_state_machine *sm, int vlan_id)
wpa_auth_sta_wpa_version	src/ap/wpa_auth.c	/^int wpa_auth_sta_wpa_version(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_sta_wpa_version	src/ap/wpa_auth.h	/^int wpa_auth_sta_wpa_version(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_uses_mfp	src/ap/wpa_auth.h	/^int wpa_auth_uses_mfp(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_auth_uses_mfp	src/ap/wpa_auth_ie.c	/^int wpa_auth_uses_mfp(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_auth_vlogger	src/ap/wpa_auth.c	/^void wpa_auth_vlogger(struct wpa_authenticator *wpa_auth, const u8 *addr,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, logger_level level, const char *fmt, ...)
wpa_auth_vlogger	src/ap/wpa_auth_i.h	/^void wpa_auth_vlogger(struct wpa_authenticator *wpa_auth, const u8 *addr,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr, logger_level level, const char *fmt, ...)
wpa_authenticator	src/ap/wpa_auth_i.h	/^struct wpa_authenticator {$/;"	s
wpa_authenticator::addr	src/ap/wpa_auth_i.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::cb	src/ap/wpa_auth_i.h	/^	struct wpa_auth_callbacks cb;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_auth_callbacks	access:public
wpa_authenticator::conf	src/ap/wpa_auth_i.h	/^	struct wpa_auth_config conf;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_auth_config	access:public
wpa_authenticator::dot11RSNA4WayHandshakeFailures	src/ap/wpa_auth_i.h	/^	unsigned int dot11RSNA4WayHandshakeFailures;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAAuthenticationSuiteRequested	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAAuthenticationSuiteRequested; \/* FIX: update *\/$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAAuthenticationSuiteSelected	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAAuthenticationSuiteSelected;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAGroupCipherRequested	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAGroupCipherRequested; \/* FIX: update *\/$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAGroupCipherSelected	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAGroupCipherSelected;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAPMKIDUsed	src/ap/wpa_auth_i.h	/^	u8 dot11RSNAPMKIDUsed[PMKID_LEN];$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAPairwiseCipherRequested	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAPairwiseCipherRequested; \/* FIX: update *\/$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAPairwiseCipherSelected	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAPairwiseCipherSelected;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNAStatsTKIPRemoteMICFailures	src/ap/wpa_auth_i.h	/^	unsigned int dot11RSNAStatsTKIPRemoteMICFailures;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::dot11RSNATKIPCounterMeasuresInvoked	src/ap/wpa_auth_i.h	/^	unsigned int dot11RSNATKIPCounterMeasuresInvoked;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::ft_pmk_cache	src/ap/wpa_auth_i.h	/^	struct wpa_ft_pmk_cache *ft_pmk_cache;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_ft_pmk_cache	access:public
wpa_authenticator::group	src/ap/wpa_auth_i.h	/^	struct wpa_group *group;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_group	access:public
wpa_authenticator::pmksa	src/ap/wpa_auth_i.h	/^	struct rsn_pmksa_cache *pmksa;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::rsn_pmksa_cache	access:public
wpa_authenticator::stsl_negotiations	src/ap/wpa_auth_i.h	/^	struct wpa_stsl_negotiation *stsl_negotiations;$/;"	m	struct:wpa_authenticator	typeref:struct:wpa_authenticator::wpa_stsl_negotiation	access:public
wpa_authenticator::wpa_ie	src/ap/wpa_auth_i.h	/^	u8 *wpa_ie;$/;"	m	struct:wpa_authenticator	access:public
wpa_authenticator::wpa_ie_len	src/ap/wpa_auth_i.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_authenticator	access:public
wpa_bool_txt	src/ap/wpa_auth.c	/^static const char * wpa_bool_txt(int bool)$/;"	f	file:	signature:(int bool)
wpa_bss_params	src/drivers/driver.h	/^struct wpa_bss_params {$/;"	s
wpa_bss_params::enabled	src/drivers/driver.h	/^	int enabled;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::ieee80211w	src/drivers/driver.h	/^	enum mfp_options ieee80211w;$/;"	m	struct:wpa_bss_params	typeref:enum:wpa_bss_params::mfp_options	access:public
wpa_bss_params::ieee802_1x	src/drivers/driver.h	/^	int ieee802_1x;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::ifname	src/drivers/driver.h	/^	const char *ifname;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::rsn_preauth	src/drivers/driver.h	/^	int rsn_preauth;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::wpa	src/drivers/driver.h	/^	int wpa;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::wpa_group	src/drivers/driver.h	/^	int wpa_group;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::wpa_key_mgmt	src/drivers/driver.h	/^	int wpa_key_mgmt;$/;"	m	struct:wpa_bss_params	access:public
wpa_bss_params::wpa_pairwise	src/drivers/driver.h	/^	int wpa_pairwise;$/;"	m	struct:wpa_bss_params	access:public
wpa_cipher	src/common/defs.h	/^enum wpa_cipher {$/;"	g
wpa_cipher_bits	src/ap/wpa_auth.c	/^static int wpa_cipher_bits(int cipher)$/;"	f	file:	signature:(int cipher)
wpa_cipher_bits	src/rsn_supp/wpa.c	/^static int wpa_cipher_bits(int cipher)$/;"	f	file:	signature:(int cipher)
wpa_cipher_suite	src/rsn_supp/wpa.c	/^static u32 wpa_cipher_suite(struct wpa_sm *sm, int cipher)$/;"	f	file:	signature:(struct wpa_sm *sm, int cipher)
wpa_cipher_txt	src/common/wpa_common.c	/^const char * wpa_cipher_txt(int cipher)$/;"	f	signature:(int cipher)
wpa_cipher_txt	src/common/wpa_common.h	/^const char * wpa_cipher_txt(int cipher);$/;"	p	signature:(int cipher)
wpa_compare_rsn_ie	src/common/wpa_common.c	/^int wpa_compare_rsn_ie(int ft_initial_assoc,$/;"	f	signature:(int ft_initial_assoc, const u8 *ie1, size_t ie1len, const u8 *ie2, size_t ie2len)
wpa_compare_rsn_ie	src/common/wpa_common.h	/^int wpa_compare_rsn_ie(int ft_initial_assoc,$/;"	p	signature:(int ft_initial_assoc, const u8 *ie1, size_t ie1len, const u8 *ie2, size_t ie2len)
wpa_config_blob	src/eap_peer/eap_config.h	/^struct wpa_config_blob {$/;"	s
wpa_config_blob::data	src/eap_peer/eap_config.h	/^	u8 *data;$/;"	m	struct:wpa_config_blob	access:public
wpa_config_blob::len	src/eap_peer/eap_config.h	/^	size_t len;$/;"	m	struct:wpa_config_blob	access:public
wpa_config_blob::name	src/eap_peer/eap_config.h	/^	char *name;$/;"	m	struct:wpa_config_blob	access:public
wpa_config_blob::next	src/eap_peer/eap_config.h	/^	struct wpa_config_blob *next;$/;"	m	struct:wpa_config_blob	typeref:struct:wpa_config_blob::wpa_config_blob	access:public
wpa_ctrl	src/common/wpa_ctrl.c	/^struct wpa_ctrl {$/;"	s	file:
wpa_ctrl::cookie	src/common/wpa_ctrl.c	/^	char *cookie;$/;"	m	struct:wpa_ctrl	file:	access:public
wpa_ctrl::dest	src/common/wpa_ctrl.c	/^	struct sockaddr_in dest;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_in	file:	access:public
wpa_ctrl::dest	src/common/wpa_ctrl.c	/^	struct sockaddr_un dest;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_un	file:	access:public
wpa_ctrl::local	src/common/wpa_ctrl.c	/^	struct sockaddr_in local;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_in	file:	access:public
wpa_ctrl::local	src/common/wpa_ctrl.c	/^	struct sockaddr_un local;$/;"	m	struct:wpa_ctrl	typeref:struct:wpa_ctrl::sockaddr_un	file:	access:public
wpa_ctrl::pipe	src/common/wpa_ctrl.c	/^	HANDLE pipe;$/;"	m	struct:wpa_ctrl	file:	access:public
wpa_ctrl::s	src/common/wpa_ctrl.c	/^	int s;$/;"	m	struct:wpa_ctrl	file:	access:public
wpa_ctrl_attach	src/common/wpa_ctrl.c	/^int wpa_ctrl_attach(struct wpa_ctrl *ctrl)$/;"	f	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_attach	src/common/wpa_ctrl.h	/^int wpa_ctrl_attach(struct wpa_ctrl *ctrl);$/;"	p	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_attach_helper	src/common/wpa_ctrl.c	/^static int wpa_ctrl_attach_helper(struct wpa_ctrl *ctrl, int attach)$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int attach)
wpa_ctrl_cleanup	src/common/wpa_ctrl.c	/^void wpa_ctrl_cleanup(void)$/;"	f	signature:(void)
wpa_ctrl_cleanup	src/common/wpa_ctrl.h	/^void wpa_ctrl_cleanup(void);$/;"	p	signature:(void)
wpa_ctrl_close	src/common/wpa_ctrl.c	/^void wpa_ctrl_close(struct wpa_ctrl *ctrl)$/;"	f	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_close	src/common/wpa_ctrl.h	/^void wpa_ctrl_close(struct wpa_ctrl *ctrl);$/;"	p	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_command	hostapd/hostapd_cli.c	/^static inline int wpa_ctrl_command(struct wpa_ctrl *ctrl, char *cmd)$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, char *cmd)
wpa_ctrl_command_sta	hostapd/hostapd_cli.c	/^static int wpa_ctrl_command_sta(struct wpa_ctrl *ctrl, char *cmd,$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, char *cmd, char *addr, size_t addr_len)
wpa_ctrl_detach	src/common/wpa_ctrl.c	/^int wpa_ctrl_detach(struct wpa_ctrl *ctrl)$/;"	f	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_detach	src/common/wpa_ctrl.h	/^int wpa_ctrl_detach(struct wpa_ctrl *ctrl);$/;"	p	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_dst	hostapd/ctrl_iface.c	/^struct wpa_ctrl_dst {$/;"	s	file:
wpa_ctrl_dst::addr	hostapd/ctrl_iface.c	/^	struct sockaddr_un addr;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::sockaddr_un	file:	access:public
wpa_ctrl_dst::addrlen	hostapd/ctrl_iface.c	/^	socklen_t addrlen;$/;"	m	struct:wpa_ctrl_dst	file:	access:public
wpa_ctrl_dst::debug_level	hostapd/ctrl_iface.c	/^	int debug_level;$/;"	m	struct:wpa_ctrl_dst	file:	access:public
wpa_ctrl_dst::errors	hostapd/ctrl_iface.c	/^	int errors;$/;"	m	struct:wpa_ctrl_dst	file:	access:public
wpa_ctrl_dst::next	hostapd/ctrl_iface.c	/^	struct wpa_ctrl_dst *next;$/;"	m	struct:wpa_ctrl_dst	typeref:struct:wpa_ctrl_dst::wpa_ctrl_dst	file:	access:public
wpa_ctrl_get_fd	src/common/wpa_ctrl.c	/^int wpa_ctrl_get_fd(struct wpa_ctrl *ctrl)$/;"	f	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_get_fd	src/common/wpa_ctrl.h	/^int wpa_ctrl_get_fd(struct wpa_ctrl *ctrl);$/;"	p	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_open	src/common/wpa_ctrl.c	/^struct wpa_ctrl * wpa_ctrl_open(const char *ctrl_path)$/;"	f	signature:(const char *ctrl_path)
wpa_ctrl_open	src/common/wpa_ctrl.h	/^struct wpa_ctrl * wpa_ctrl_open(const char *ctrl_path);$/;"	p	signature:(const char *ctrl_path)
wpa_ctrl_pending	src/common/wpa_ctrl.c	/^int wpa_ctrl_pending(struct wpa_ctrl *ctrl)$/;"	f	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_pending	src/common/wpa_ctrl.h	/^int wpa_ctrl_pending(struct wpa_ctrl *ctrl);$/;"	p	signature:(struct wpa_ctrl *ctrl)
wpa_ctrl_recv	src/common/wpa_ctrl.c	/^int wpa_ctrl_recv(struct wpa_ctrl *ctrl, char *reply, size_t *reply_len)$/;"	f	signature:(struct wpa_ctrl *ctrl, char *reply, size_t *reply_len)
wpa_ctrl_recv	src/common/wpa_ctrl.h	/^int wpa_ctrl_recv(struct wpa_ctrl *ctrl, char *reply, size_t *reply_len);$/;"	p	signature:(struct wpa_ctrl *ctrl, char *reply, size_t *reply_len)
wpa_ctrl_req_type	src/common/defs.h	/^enum wpa_ctrl_req_type {$/;"	g
wpa_ctrl_request	src/common/wpa_ctrl.c	/^int wpa_ctrl_request(struct wpa_ctrl *ctrl, const char *cmd, size_t cmd_len,$/;"	f	signature:(struct wpa_ctrl *ctrl, const char *cmd, size_t cmd_len, char *reply, size_t *reply_len, void (*msg_cb)(char *msg, size_t len))
wpa_ctrl_request	src/common/wpa_ctrl.h	/^int wpa_ctrl_request(struct wpa_ctrl *ctrl, const char *cmd, size_t cmd_len,$/;"	p	signature:(struct wpa_ctrl *ctrl, const char *cmd, size_t cmd_len, char *reply, size_t *reply_len, void (*msg_cb)(char *msg, size_t len))
wpa_dbg	src/utils/wpa_debug.h	182;"	d
wpa_dbg	src/utils/wpa_debug.h	38;"	d
wpa_dbg	src/utils/wpa_debug.h	65;"	d
wpa_debug_close_file	src/utils/wpa_debug.c	/^void wpa_debug_close_file(void)$/;"	f	signature:(void)
wpa_debug_close_file	src/utils/wpa_debug.h	/^void wpa_debug_close_file(void);$/;"	p	signature:(void)
wpa_debug_close_file	src/utils/wpa_debug.h	37;"	d
wpa_debug_close_file	src/utils/wpa_debug.h	64;"	d
wpa_debug_close_syslog	src/utils/wpa_debug.c	/^void wpa_debug_close_syslog(void)$/;"	f	signature:(void)
wpa_debug_close_syslog	src/utils/wpa_debug.h	/^static inline void wpa_debug_close_syslog(void)$/;"	f	signature:(void)
wpa_debug_close_syslog	src/utils/wpa_debug.h	/^void wpa_debug_close_syslog(void);$/;"	p	signature:(void)
wpa_debug_level	src/utils/wpa_debug.c	/^int wpa_debug_level = MSG_INFO;$/;"	v
wpa_debug_open_file	src/utils/wpa_debug.c	/^int wpa_debug_open_file(const char *path)$/;"	f	signature:(const char *path)
wpa_debug_open_file	src/utils/wpa_debug.h	/^int wpa_debug_open_file(const char *path);$/;"	p	signature:(const char *path)
wpa_debug_open_file	src/utils/wpa_debug.h	36;"	d
wpa_debug_open_file	src/utils/wpa_debug.h	63;"	d
wpa_debug_open_syslog	src/utils/wpa_debug.c	/^void wpa_debug_open_syslog(void)$/;"	f	signature:(void)
wpa_debug_open_syslog	src/utils/wpa_debug.h	/^static inline void wpa_debug_open_syslog(void)$/;"	f	signature:(void)
wpa_debug_open_syslog	src/utils/wpa_debug.h	/^void wpa_debug_open_syslog(void);$/;"	p	signature:(void)
wpa_debug_print_timestamp	src/utils/wpa_debug.c	/^void wpa_debug_print_timestamp(void)$/;"	f	signature:(void)
wpa_debug_print_timestamp	src/utils/wpa_debug.h	/^void wpa_debug_print_timestamp(void);$/;"	p	signature:(void)
wpa_debug_print_timestamp	src/utils/wpa_debug.h	29;"	d
wpa_debug_print_timestamp	src/utils/wpa_debug.h	55;"	d
wpa_debug_reopen_file	src/utils/wpa_debug.c	/^int wpa_debug_reopen_file(void)$/;"	f	signature:(void)
wpa_debug_reopen_file	src/utils/wpa_debug.h	/^int wpa_debug_reopen_file(void);$/;"	p	signature:(void)
wpa_debug_reopen_file	src/utils/wpa_debug.h	/^static inline int wpa_debug_reopen_file(void)$/;"	f	signature:(void)
wpa_debug_show_keys	src/utils/wpa_debug.c	/^int wpa_debug_show_keys = 0;$/;"	v
wpa_debug_syslog	src/utils/wpa_debug.c	/^static int wpa_debug_syslog = 0;$/;"	v	file:
wpa_debug_timestamp	src/utils/wpa_debug.c	/^int wpa_debug_timestamp = 0;$/;"	v
wpa_deinit	src/ap/wpa_auth.c	/^void wpa_deinit(struct wpa_authenticator *wpa_auth)$/;"	f	signature:(struct wpa_authenticator *wpa_auth)
wpa_deinit	src/ap/wpa_auth.h	/^void wpa_deinit(struct wpa_authenticator *wpa_auth);$/;"	p	signature:(struct wpa_authenticator *wpa_auth)
wpa_derive_pmk_r0	src/common/wpa_common.c	/^void wpa_derive_pmk_r0(const u8 *xxkey, size_t xxkey_len,$/;"	f	signature:(const u8 *xxkey, size_t xxkey_len, const u8 *ssid, size_t ssid_len, const u8 *mdid, const u8 *r0kh_id, size_t r0kh_id_len, const u8 *s0kh_id, u8 *pmk_r0, u8 *pmk_r0_name)
wpa_derive_pmk_r0	src/common/wpa_common.h	/^void wpa_derive_pmk_r0(const u8 *xxkey, size_t xxkey_len,$/;"	p	signature:(const u8 *xxkey, size_t xxkey_len, const u8 *ssid, size_t ssid_len, const u8 *mdid, const u8 *r0kh_id, size_t r0kh_id_len, const u8 *s0kh_id, u8 *pmk_r0, u8 *pmk_r0_name)
wpa_derive_pmk_r1	src/common/wpa_common.c	/^void wpa_derive_pmk_r1(const u8 *pmk_r0, const u8 *pmk_r0_name,$/;"	f	signature:(const u8 *pmk_r0, const u8 *pmk_r0_name, const u8 *r1kh_id, const u8 *s1kh_id, u8 *pmk_r1, u8 *pmk_r1_name)
wpa_derive_pmk_r1	src/common/wpa_common.h	/^void wpa_derive_pmk_r1(const u8 *pmk_r0, const u8 *pmk_r0_name,$/;"	p	signature:(const u8 *pmk_r0, const u8 *pmk_r0_name, const u8 *r1kh_id, const u8 *s1kh_id, u8 *pmk_r1, u8 *pmk_r1_name)
wpa_derive_pmk_r1_name	src/common/wpa_common.c	/^void wpa_derive_pmk_r1_name(const u8 *pmk_r0_name, const u8 *r1kh_id,$/;"	f	signature:(const u8 *pmk_r0_name, const u8 *r1kh_id, const u8 *s1kh_id, u8 *pmk_r1_name)
wpa_derive_pmk_r1_name	src/common/wpa_common.h	/^void wpa_derive_pmk_r1_name(const u8 *pmk_r0_name, const u8 *r1kh_id,$/;"	p	signature:(const u8 *pmk_r0_name, const u8 *r1kh_id, const u8 *s1kh_id, u8 *pmk_r1_name)
wpa_derive_ptk	src/ap/wpa_auth.c	/^static int wpa_derive_ptk(struct wpa_state_machine *sm, const u8 *pmk,$/;"	f	file:	signature:(struct wpa_state_machine *sm, const u8 *pmk, struct wpa_ptk *ptk)
wpa_derive_ptk	src/rsn_supp/wpa.c	/^static int wpa_derive_ptk(struct wpa_sm *sm, const unsigned char *src_addr,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, struct wpa_ptk *ptk)
wpa_derive_ptk_ft	src/rsn_supp/wpa_ft.c	/^int wpa_derive_ptk_ft(struct wpa_sm *sm, const unsigned char *src_addr,$/;"	f	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, struct wpa_ptk *ptk, size_t ptk_len)
wpa_derive_ptk_ft	src/rsn_supp/wpa_i.h	/^int wpa_derive_ptk_ft(struct wpa_sm *sm, const unsigned char *src_addr,$/;"	p	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, struct wpa_ptk *ptk, size_t ptk_len)
wpa_driver_ap_params	src/drivers/driver.h	/^struct wpa_driver_ap_params {$/;"	s
wpa_driver_ap_params::access_network_type	src/drivers/driver.h	/^	u8 access_network_type;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::assocresp_ies	src/drivers/driver.h	/^	const struct wpabuf *assocresp_ies;$/;"	m	struct:wpa_driver_ap_params	typeref:struct:wpa_driver_ap_params::wpabuf	access:public
wpa_driver_ap_params::auth_algs	src/drivers/driver.h	/^	unsigned int auth_algs;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::beacon_ies	src/drivers/driver.h	/^	const struct wpabuf *beacon_ies;$/;"	m	struct:wpa_driver_ap_params	typeref:struct:wpa_driver_ap_params::wpabuf	access:public
wpa_driver_ap_params::beacon_int	src/drivers/driver.h	/^	int beacon_int;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::cts_protect	src/drivers/driver.h	/^	int cts_protect;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::dtim_period	src/drivers/driver.h	/^	int dtim_period;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::group_cipher	src/drivers/driver.h	/^	unsigned int group_cipher;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::head	src/drivers/driver.h	/^	const u8 *head;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::head_len	src/drivers/driver.h	/^	size_t head_len;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::hessid	src/drivers/driver.h	/^	const u8 *hessid;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::hide_ssid	src/drivers/driver.h	/^	enum hide_ssid hide_ssid;$/;"	m	struct:wpa_driver_ap_params	typeref:enum:wpa_driver_ap_params::hide_ssid	access:public
wpa_driver_ap_params::ht_opmode	src/drivers/driver.h	/^	int ht_opmode;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::interworking	src/drivers/driver.h	/^	int interworking;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::isolate	src/drivers/driver.h	/^	int isolate;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::key_mgmt_suites	src/drivers/driver.h	/^	unsigned int key_mgmt_suites;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::pairwise_ciphers	src/drivers/driver.h	/^	unsigned int pairwise_ciphers;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::preamble	src/drivers/driver.h	/^	int preamble;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::privacy	src/drivers/driver.h	/^	int privacy;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::proberesp_ies	src/drivers/driver.h	/^	const struct wpabuf *proberesp_ies;$/;"	m	struct:wpa_driver_ap_params	typeref:struct:wpa_driver_ap_params::wpabuf	access:public
wpa_driver_ap_params::short_slot_time	src/drivers/driver.h	/^	int short_slot_time;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::tail	src/drivers/driver.h	/^	const u8 *tail;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::tail_len	src/drivers/driver.h	/^	size_t tail_len;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_ap_params::wpa_version	src/drivers/driver.h	/^	unsigned int wpa_version;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_driver_associate_params	src/drivers/driver.h	/^struct wpa_driver_associate_params {$/;"	s
wpa_driver_associate_params::auth_alg	src/drivers/driver.h	/^	int auth_alg;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::bssid	src/drivers/driver.h	/^	const u8 *bssid;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::drop_unencrypted	src/drivers/driver.h	/^	int drop_unencrypted;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::ft_ies	src/drivers/driver.h	/^	const u8 *ft_ies;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::ft_ies_len	src/drivers/driver.h	/^	size_t ft_ies_len;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::ft_md	src/drivers/driver.h	/^	const u8 *ft_md;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::group_suite	src/drivers/driver.h	/^	enum wpa_cipher group_suite;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wpa_cipher	access:public
wpa_driver_associate_params::key_mgmt_suite	src/drivers/driver.h	/^	enum wpa_key_mgmt key_mgmt_suite;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wpa_key_mgmt	access:public
wpa_driver_associate_params::mgmt_frame_protection	src/drivers/driver.h	/^	enum mfp_options mgmt_frame_protection;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::mfp_options	access:public
wpa_driver_associate_params::mode	src/drivers/driver.h	/^	int mode;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::p2p	src/drivers/driver.h	/^	int p2p;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::pairwise_suite	src/drivers/driver.h	/^	enum wpa_cipher pairwise_suite;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wpa_cipher	access:public
wpa_driver_associate_params::passphrase	src/drivers/driver.h	/^	const char *passphrase;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::prev_bssid	src/drivers/driver.h	/^	const u8 *prev_bssid;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::psk	src/drivers/driver.h	/^	const u8 *psk;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::uapsd	src/drivers/driver.h	/^	int uapsd;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wep_key	src/drivers/driver.h	/^	const u8 *wep_key[4];$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wep_key_len	src/drivers/driver.h	/^	size_t wep_key_len[4];$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wep_tx_keyidx	src/drivers/driver.h	/^	int wep_tx_keyidx;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wpa_ie	src/drivers/driver.h	/^	const u8 *wpa_ie;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wpa_ie_len	src/drivers/driver.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wpa_proto	src/drivers/driver.h	/^	unsigned int wpa_proto;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_driver_associate_params::wps	src/drivers/driver.h	/^	enum wps_mode wps;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wps_mode	access:public
wpa_driver_atheros_ops	src/drivers/driver_atheros.c	/^const struct wpa_driver_ops wpa_driver_atheros_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_auth_params	src/drivers/driver.h	/^struct wpa_driver_auth_params {$/;"	s
wpa_driver_auth_params::auth_alg	src/drivers/driver.h	/^	int auth_alg;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::bssid	src/drivers/driver.h	/^	const u8 *bssid;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::ie	src/drivers/driver.h	/^	const u8 *ie;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::ie_len	src/drivers/driver.h	/^	size_t ie_len;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::local_state_change	src/drivers/driver.h	/^	int local_state_change;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::p2p	src/drivers/driver.h	/^	int p2p;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::wep_key	src/drivers/driver.h	/^	const u8 *wep_key[4];$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::wep_key_len	src/drivers/driver.h	/^	size_t wep_key_len[4];$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_auth_params::wep_tx_keyidx	src/drivers/driver.h	/^	int wep_tx_keyidx;$/;"	m	struct:wpa_driver_auth_params	access:public
wpa_driver_broadcom_associate	src/drivers/driver_broadcom.c	/^wpa_driver_broadcom_associate(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_broadcom_data	src/drivers/driver_broadcom.c	/^struct wpa_driver_broadcom_data {$/;"	s	file:
wpa_driver_broadcom_data::ctx	src/drivers/driver_broadcom.c	/^	void *ctx;$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
wpa_driver_broadcom_data::event_sock	src/drivers/driver_broadcom.c	/^	int event_sock;$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
wpa_driver_broadcom_data::ifname	src/drivers/driver_broadcom.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
wpa_driver_broadcom_data::ioctl_sock	src/drivers/driver_broadcom.c	/^	int ioctl_sock;$/;"	m	struct:wpa_driver_broadcom_data	file:	access:public
wpa_driver_broadcom_deauthenticate	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_broadcom_deinit	src/drivers/driver_broadcom.c	/^static void wpa_driver_broadcom_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_broadcom_disassociate	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_broadcom_event_receive	src/drivers/driver_broadcom.c	/^static void wpa_driver_broadcom_event_receive(int sock, void *ctx,$/;"	f	file:	signature:(int sock, void *ctx, void *sock_ctx)
wpa_driver_broadcom_get_bssid	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_broadcom_get_scan_results	src/drivers/driver_broadcom.c	/^wpa_driver_broadcom_get_scan_results(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_broadcom_get_ssid	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_broadcom_init	src/drivers/driver_broadcom.c	/^static void * wpa_driver_broadcom_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_broadcom_ops	src/drivers/driver_broadcom.c	/^const struct wpa_driver_ops wpa_driver_broadcom_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_broadcom_scan	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_broadcom_scan_timeout	src/drivers/driver_broadcom.c	/^static void wpa_driver_broadcom_scan_timeout(void *eloop_ctx,$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_broadcom_scan_timeout	src/drivers/driver_broadcom.c	/^static void wpa_driver_broadcom_scan_timeout(void *eloop_ctx,$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_broadcom_set_countermeasures	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_set_countermeasures(void *priv,$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_broadcom_set_drop_unencrypted	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_set_drop_unencrypted(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_broadcom_set_key	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_broadcom_set_wpa	src/drivers/driver_broadcom.c	/^static int wpa_driver_broadcom_set_wpa(void *priv, int enable)$/;"	f	file:	signature:(void *priv, int enable)
wpa_driver_bsd_add_scan_entry	src/drivers/driver_bsd.c	/^wpa_driver_bsd_add_scan_entry(struct wpa_scan_results *res,$/;"	f	file:	signature:(struct wpa_scan_results *res, struct ieee80211req_scan_result *sr)
wpa_driver_bsd_associate	src/drivers/driver_bsd.c	/^wpa_driver_bsd_associate(void *priv, struct wpa_driver_associate_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_bsd_capa	src/drivers/driver_bsd.c	/^static int wpa_driver_bsd_capa(struct bsd_driver_data *drv)$/;"	f	file:	signature:(struct bsd_driver_data *drv)
wpa_driver_bsd_deauthenticate	src/drivers/driver_bsd.c	/^wpa_driver_bsd_deauthenticate(void *priv, const u8 *addr, int reason_code)$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_bsd_deinit	src/drivers/driver_bsd.c	/^wpa_driver_bsd_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_bsd_disassociate	src/drivers/driver_bsd.c	/^wpa_driver_bsd_disassociate(void *priv, const u8 *addr, int reason_code)$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_bsd_event_receive	src/drivers/driver_bsd.c	/^wpa_driver_bsd_event_receive(int sock, void *ctx, void *sock_ctx)$/;"	f	file:	signature:(int sock, void *ctx, void *sock_ctx)
wpa_driver_bsd_get_bssid	src/drivers/driver_bsd.c	/^wpa_driver_bsd_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_bsd_get_capa	src/drivers/driver_bsd.c	/^wpa_driver_bsd_get_capa(void *priv, struct wpa_driver_capa *capa)$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_bsd_get_scan_results2	src/drivers/driver_bsd.c	/^wpa_driver_bsd_get_scan_results2(void *priv)$/;"	f	signature:(void *priv)
wpa_driver_bsd_get_ssid	src/drivers/driver_bsd.c	/^wpa_driver_bsd_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_bsd_init	src/drivers/driver_bsd.c	/^wpa_driver_bsd_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_bsd_ops	src/drivers/driver_bsd.c	/^const struct wpa_driver_ops wpa_driver_bsd_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_bsd_scan	src/drivers/driver_bsd.c	/^wpa_driver_bsd_scan(void *priv, struct wpa_driver_scan_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_bsd_set_auth_alg	src/drivers/driver_bsd.c	/^wpa_driver_bsd_set_auth_alg(void *priv, int auth_alg)$/;"	f	file:	signature:(void *priv, int auth_alg)
wpa_driver_bsd_set_countermeasures	src/drivers/driver_bsd.c	/^wpa_driver_bsd_set_countermeasures(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_bsd_set_drop_unencrypted	src/drivers/driver_bsd.c	/^wpa_driver_bsd_set_drop_unencrypted(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_bsd_set_wpa	src/drivers/driver_bsd.c	/^wpa_driver_bsd_set_wpa(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_bsd_set_wpa_ie	src/drivers/driver_bsd.c	/^wpa_driver_bsd_set_wpa_ie(struct bsd_driver_data *drv, const u8 *wpa_ie,$/;"	f	file:	signature:(struct bsd_driver_data *drv, const u8 *wpa_ie, size_t wpa_ie_len)
wpa_driver_bsd_set_wpa_internal	src/drivers/driver_bsd.c	/^wpa_driver_bsd_set_wpa_internal(void *priv, int wpa, int privacy)$/;"	f	file:	signature:(void *priv, int wpa, int privacy)
wpa_driver_capa	src/drivers/driver.h	/^struct wpa_driver_capa {$/;"	s
wpa_driver_capa::auth	src/drivers/driver.h	/^	unsigned int auth;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::enc	src/drivers/driver.h	/^	unsigned int enc;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::flags	src/drivers/driver.h	/^	unsigned int flags;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::key_mgmt	src/drivers/driver.h	/^	unsigned int key_mgmt;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::max_match_sets	src/drivers/driver.h	/^	int max_match_sets;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::max_remain_on_chan	src/drivers/driver.h	/^	unsigned int max_remain_on_chan;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::max_scan_ssids	src/drivers/driver.h	/^	int max_scan_ssids;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::max_sched_scan_ssids	src/drivers/driver.h	/^	int max_sched_scan_ssids;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::max_stations	src/drivers/driver.h	/^	unsigned int max_stations;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_capa::sched_scan_supported	src/drivers/driver.h	/^	int sched_scan_supported;$/;"	m	struct:wpa_driver_capa	access:public
wpa_driver_hostap_associate	src/drivers/driver_hostap.c	/^wpa_driver_hostap_associate(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_hostap_data	src/drivers/driver_hostap.c	/^struct wpa_driver_hostap_data {$/;"	s	file:
wpa_driver_hostap_data::ctx	src/drivers/driver_hostap.c	/^	void *ctx;$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
wpa_driver_hostap_data::current_mode	src/drivers/driver_hostap.c	/^	int current_mode; \/* infra\/adhoc *\/$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
wpa_driver_hostap_data::ifname	src/drivers/driver_hostap.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
wpa_driver_hostap_data::sock	src/drivers/driver_hostap.c	/^	int sock;$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
wpa_driver_hostap_data::wext	src/drivers/driver_hostap.c	/^	void *wext; \/* private data for driver_wext *\/$/;"	m	struct:wpa_driver_hostap_data	file:	access:public
wpa_driver_hostap_deauthenticate	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_hostap_deinit	src/drivers/driver_hostap.c	/^static void wpa_driver_hostap_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_hostap_disassociate	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_hostap_get_bssid	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_hostap_get_scan_results	src/drivers/driver_hostap.c	/^static struct wpa_scan_results * wpa_driver_hostap_get_scan_results(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_hostap_get_ssid	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_hostap_init	src/drivers/driver_hostap.c	/^static void * wpa_driver_hostap_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_hostap_mlme	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_mlme(struct wpa_driver_hostap_data *drv,$/;"	f	file:	signature:(struct wpa_driver_hostap_data *drv, const u8 *addr, int cmd, int reason_code)
wpa_driver_hostap_ops	src/drivers/driver_hostap.c	/^const struct wpa_driver_ops wpa_driver_hostap_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_hostap_poll_client	src/drivers/driver_hostap.c	/^static void wpa_driver_hostap_poll_client(void *priv, const u8 *own_addr,$/;"	f	file:	signature:(void *priv, const u8 *own_addr, const u8 *addr, int qos)
wpa_driver_hostap_reset	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_reset(struct wpa_driver_hostap_data *drv,$/;"	f	file:	signature:(struct wpa_driver_hostap_data *drv, int type)
wpa_driver_hostap_scan	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_hostap_set_auth_alg	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_auth_alg(void *priv, int auth_alg)$/;"	f	file:	signature:(void *priv, int auth_alg)
wpa_driver_hostap_set_auth_alg	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_auth_alg(void *priv, int auth_alg);$/;"	p	file:	signature:(void *priv, int auth_alg)
wpa_driver_hostap_set_countermeasures	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_countermeasures(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_hostap_set_key	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_hostap_set_operstate	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_operstate(void *priv, int state)$/;"	f	file:	signature:(void *priv, int state)
wpa_driver_hostap_set_wpa	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_wpa(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_hostap_set_wpa_ie	src/drivers/driver_hostap.c	/^static int wpa_driver_hostap_set_wpa_ie(struct wpa_driver_hostap_data *drv,$/;"	f	file:	signature:(struct wpa_driver_hostap_data *drv, const u8 *wpa_ie, size_t wpa_ie_len)
wpa_driver_if_type	src/drivers/driver.h	/^enum wpa_driver_if_type {$/;"	g
wpa_driver_madwifi_associate	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_associate(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_madwifi_data	src/drivers/driver_madwifi.c	/^struct wpa_driver_madwifi_data {$/;"	s	file:
wpa_driver_madwifi_data::ctx	src/drivers/driver_madwifi.c	/^	void *ctx;$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
wpa_driver_madwifi_data::ifname	src/drivers/driver_madwifi.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
wpa_driver_madwifi_data::sock	src/drivers/driver_madwifi.c	/^	int sock;$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
wpa_driver_madwifi_data::wext	src/drivers/driver_madwifi.c	/^	void *wext; \/* private data for driver_wext *\/$/;"	m	struct:wpa_driver_madwifi_data	file:	access:public
wpa_driver_madwifi_deauthenticate	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_deauthenticate(void *priv, const u8 *addr, int reason_code)$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_madwifi_deinit	src/drivers/driver_madwifi.c	/^static void wpa_driver_madwifi_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_madwifi_del_key	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_del_key(struct wpa_driver_madwifi_data *drv, int key_idx,$/;"	f	file:	signature:(struct wpa_driver_madwifi_data *drv, int key_idx, const u8 *addr)
wpa_driver_madwifi_disassociate	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_disassociate(void *priv, const u8 *addr, int reason_code)$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_madwifi_get_bssid	src/drivers/driver_madwifi.c	/^static int wpa_driver_madwifi_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_madwifi_get_scan_results	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_get_scan_results(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_madwifi_get_ssid	src/drivers/driver_madwifi.c	/^static int wpa_driver_madwifi_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_madwifi_init	src/drivers/driver_madwifi.c	/^static void * wpa_driver_madwifi_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_madwifi_ops	src/drivers/driver_madwifi.c	/^const struct wpa_driver_ops wpa_driver_madwifi_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_madwifi_scan	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_scan(void *priv, struct wpa_driver_scan_params *params)$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_madwifi_set_auth_alg	src/drivers/driver_madwifi.c	/^static int wpa_driver_madwifi_set_auth_alg(void *priv, int auth_alg);$/;"	p	file:	signature:(void *priv, int auth_alg)
wpa_driver_madwifi_set_auth_alg	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_set_auth_alg(void *priv, int auth_alg)$/;"	f	file:	signature:(void *priv, int auth_alg)
wpa_driver_madwifi_set_countermeasures	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_set_countermeasures(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_madwifi_set_key	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_set_key(const char *ifname, void *priv, enum wpa_alg alg,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_madwifi_set_operstate	src/drivers/driver_madwifi.c	/^static int wpa_driver_madwifi_set_operstate(void *priv, int state)$/;"	f	file:	signature:(void *priv, int state)
wpa_driver_madwifi_set_probe_req_ie	src/drivers/driver_madwifi.c	/^static int wpa_driver_madwifi_set_probe_req_ie(void *priv, const u8 *ies,$/;"	f	file:	signature:(void *priv, const u8 *ies, size_t ies_len)
wpa_driver_madwifi_set_probe_req_ie	src/drivers/driver_madwifi.c	/^static int wpa_driver_madwifi_set_probe_req_ie(void *priv, const u8 *ies,$/;"	p	file:	signature:(void *priv, const u8 *ies, size_t ies_len)
wpa_driver_madwifi_set_wpa_ie	src/drivers/driver_madwifi.c	/^wpa_driver_madwifi_set_wpa_ie(struct wpa_driver_madwifi_data *drv,$/;"	f	file:	signature:(struct wpa_driver_madwifi_data *drv, const u8 *wpa_ie, size_t wpa_ie_len)
wpa_driver_ndis_adapter_close	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_adapter_close(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_adapter_close	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_adapter_close(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_adapter_init	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_adapter_init(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_adapter_init	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_adapter_init(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_adapter_open	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_adapter_open(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_adapter_open	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_adapter_open(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_add_pmkid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_add_pmkid(void *priv, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
wpa_driver_ndis_add_scan_ssid	src/drivers/driver_ndis.c	/^static struct wpa_scan_res * wpa_driver_ndis_add_scan_ssid($/;"	f	file:	signature:( struct wpa_scan_res *r, NDIS_802_11_SSID *ssid)
wpa_driver_ndis_add_wep	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_add_wep(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, int pairwise, int key_idx, int set_tx, const u8 *key, size_t key_len)
wpa_driver_ndis_associate	src/drivers/driver_ndis.c	/^wpa_driver_ndis_associate(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_ndis_data	src/drivers/driver_ndis.h	/^struct wpa_driver_ndis_data {$/;"	s
wpa_driver_ndis_data::adapter	src/drivers/driver_ndis.h	/^	LPADAPTER adapter;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::adapter_desc	src/drivers/driver_ndis.h	/^	char *adapter_desc;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::adapter_name	src/drivers/driver_ndis.h	/^	TCHAR *adapter_name;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::bssid	src/drivers/driver_ndis.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::capa	src/drivers/driver_ndis.h	/^	struct wpa_driver_capa capa;$/;"	m	struct:wpa_driver_ndis_data	typeref:struct:wpa_driver_ndis_data::wpa_driver_capa	access:public
wpa_driver_ndis_data::connected_event	src/drivers/driver_ndis.h	/^	HANDLE connected_event; \/* WpaSupplicantConnected event *\/$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::ctx	src/drivers/driver_ndis.h	/^	void *ctx;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::event_avail	src/drivers/driver_ndis.h	/^	HANDLE events_pipe, event_avail;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::event_queue	src/drivers/driver_ndis.h	/^	HANDLE event_queue; \/* NDISUIO notifier MsgQueue *\/$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::events	src/drivers/driver_ndis.h	/^	struct ndis_events_data *events;$/;"	m	struct:wpa_driver_ndis_data	typeref:struct:wpa_driver_ndis_data::ndis_events_data	access:public
wpa_driver_ndis_data::events_pipe	src/drivers/driver_ndis.h	/^	HANDLE events_pipe, event_avail;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::has_capability	src/drivers/driver_ndis.h	/^	int has_capability;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::ifname	src/drivers/driver_ndis.h	/^	char ifname[100]; \/* GUID: {7EE3EFE5-C165-472F-986D-F6FBEDFE8C8D} *\/$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::mode	src/drivers/driver_ndis.h	/^	int mode;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::native80211	src/drivers/driver_ndis.h	/^	int native80211;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::ndisuio	src/drivers/driver_ndis.h	/^	HANDLE ndisuio;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::no_of_pmkid	src/drivers/driver_ndis.h	/^	int no_of_pmkid;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::oid_bssid_set	src/drivers/driver_ndis.h	/^	int oid_bssid_set;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::own_addr	src/drivers/driver_ndis.h	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::pmkid	src/drivers/driver_ndis.h	/^	struct ndis_pmkid_entry *pmkid;$/;"	m	struct:wpa_driver_ndis_data	typeref:struct:wpa_driver_ndis_data::ndis_pmkid_entry	access:public
wpa_driver_ndis_data::radio_enabled	src/drivers/driver_ndis.h	/^	int radio_enabled;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::wired	src/drivers/driver_ndis.h	/^	int wired;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_data::wzc_disabled	src/drivers/driver_ndis.h	/^	int wzc_disabled;$/;"	m	struct:wpa_driver_ndis_data	access:public
wpa_driver_ndis_deauthenticate	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_ndis_deinit	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ndis_deinit	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_deinit(void *priv);$/;"	p	file:	signature:(void *priv)
wpa_driver_ndis_disassociate	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_ndis_disconnect	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_disconnect(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_adapter_arrival	src/drivers/driver_ndis.c	/^void wpa_driver_ndis_event_adapter_arrival(struct wpa_driver_ndis_data *drv)$/;"	f	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_adapter_arrival	src/drivers/driver_ndis_.c	/^void wpa_driver_ndis_event_adapter_arrival(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_adapter_removal	src/drivers/driver_ndis.c	/^void wpa_driver_ndis_event_adapter_removal(struct wpa_driver_ndis_data *drv)$/;"	f	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_adapter_removal	src/drivers/driver_ndis_.c	/^void wpa_driver_ndis_event_adapter_removal(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_auth	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_event_auth(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, const u8 *data, size_t data_len)
wpa_driver_ndis_event_connect	src/drivers/driver_ndis.c	/^void wpa_driver_ndis_event_connect(struct wpa_driver_ndis_data *drv)$/;"	f	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_connect	src/drivers/driver_ndis_.c	/^void wpa_driver_ndis_event_connect(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_disconnect	src/drivers/driver_ndis.c	/^void wpa_driver_ndis_event_disconnect(struct wpa_driver_ndis_data *drv)$/;"	f	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_disconnect	src/drivers/driver_ndis_.c	/^void wpa_driver_ndis_event_disconnect(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_event_media_specific	src/drivers/driver_ndis.c	/^void wpa_driver_ndis_event_media_specific(struct wpa_driver_ndis_data *drv,$/;"	f	signature:(struct wpa_driver_ndis_data *drv, const u8 *data, size_t data_len)
wpa_driver_ndis_event_media_specific	src/drivers/driver_ndis_.c	/^void wpa_driver_ndis_event_media_specific(struct wpa_driver_ndis_data *drv,$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv, const u8 *data, size_t data_len)
wpa_driver_ndis_event_pipe_cb	src/drivers/driver_ndis.c	/^void wpa_driver_ndis_event_pipe_cb(void *eloop_data, void *user_data);$/;"	p	file:	signature:(void *eloop_data, void *user_data)
wpa_driver_ndis_event_pipe_cb	src/drivers/driver_ndis_.c	/^void wpa_driver_ndis_event_pipe_cb(void *eloop_data, void *user_data)$/;"	f	signature:(void *eloop_data, void *user_data)
wpa_driver_ndis_event_pmkid	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_event_pmkid(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, const u8 *data, size_t data_len)
wpa_driver_ndis_event_process	src/drivers/driver_ndis_.c	/^static void wpa_driver_ndis_event_process(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, u8 *buf, size_t len)
wpa_driver_ndis_flush_pmkid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_flush_pmkid(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ndis_get_associnfo	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_get_associnfo(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_get_bssid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_ndis_get_capa	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_get_capa(void *priv, struct wpa_driver_capa *capa)$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_ndis_get_capability	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_get_capability(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_get_ifname	src/drivers/driver_ndis.c	/^static const char * wpa_driver_ndis_get_ifname(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ndis_get_interfaces	src/drivers/driver_ndis.c	/^wpa_driver_ndis_get_interfaces(void *global_priv)$/;"	f	file:	signature:(void *global_priv)
wpa_driver_ndis_get_mac_addr	src/drivers/driver_ndis.c	/^static const u8 * wpa_driver_ndis_get_mac_addr(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ndis_get_names	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_get_names(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_get_scan_results	src/drivers/driver_ndis.c	/^static struct wpa_scan_results * wpa_driver_ndis_get_scan_results(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ndis_get_ssid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_ndis_get_wpa_capability	src/drivers/driver_ndis.c	/^wpa_driver_ndis_get_wpa_capability(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_init	src/drivers/driver_ndis.c	/^static void * wpa_driver_ndis_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_ndis_ops	src/drivers/driver_ndis.c	/^struct wpa_driver_ops wpa_driver_ndis_ops;$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_ndis_poll	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_poll(void *drv);$/;"	p	file:	signature:(void *drv)
wpa_driver_ndis_poll	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_poll(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ndis_poll_timeout	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_poll_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_ndis_poll_timeout	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_poll_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_ndis_radio_off	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_radio_off(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_rebind_adapter	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_rebind_adapter(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_remove_key	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_remove_key(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, int key_idx, const u8 *addr, const u8 *bssid, int pairwise)
wpa_driver_ndis_remove_pmkid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_remove_pmkid(void *priv, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
wpa_driver_ndis_scan	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_ndis_scan_native80211	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_scan_native80211($/;"	f	file:	signature:( struct wpa_driver_ndis_data *drv, struct wpa_driver_scan_params *params)
wpa_driver_ndis_scan_timeout	src/drivers/driver_ndis.c	/^static void wpa_driver_ndis_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_ndis_set_key	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_ndis_set_pmkid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_set_pmkid(struct wpa_driver_ndis_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_ndis_set_ssid	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_set_ssid(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, const u8 *ssid, size_t ssid_len)
wpa_driver_ndis_set_wzc	src/drivers/driver_ndis.c	/^static int wpa_driver_ndis_set_wzc(struct wpa_driver_ndis_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ndis_data *drv, int enable)
wpa_driver_nl80211_add_11b	src/drivers/driver_nl80211.c	/^wpa_driver_nl80211_add_11b(struct hostapd_hw_modes *modes, u16 *num_modes)$/;"	f	file:	signature:(struct hostapd_hw_modes *modes, u16 *num_modes)
wpa_driver_nl80211_ap	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_ap(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct wpa_driver_associate_params *params)
wpa_driver_nl80211_associate	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_associate($/;"	f	file:	signature:( void *priv, struct wpa_driver_associate_params *params)
wpa_driver_nl80211_authenticate	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_authenticate($/;"	f	file:	signature:( void *priv, struct wpa_driver_auth_params *params)
wpa_driver_nl80211_cancel_remain_on_channel	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_cancel_remain_on_channel(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_capa	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_capa(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
wpa_driver_nl80211_check_bss_status	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_check_bss_status($/;"	f	file:	signature:( struct wpa_driver_nl80211_data *drv, struct wpa_scan_results *res)
wpa_driver_nl80211_connect	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_connect($/;"	f	file:	signature:( struct wpa_driver_nl80211_data *drv, struct wpa_driver_associate_params *params)
wpa_driver_nl80211_data	src/drivers/driver_nl80211.c	/^struct wpa_driver_nl80211_data {$/;"	s	file:
wpa_driver_nl80211_data::addr	src/drivers/driver_nl80211.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::ap_oper_freq	src/drivers/driver_nl80211.c	/^	unsigned int ap_oper_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::ap_scan_as_station	src/drivers/driver_nl80211.c	/^	enum nl80211_iftype ap_scan_as_station;$/;"	m	struct:wpa_driver_nl80211_data	typeref:enum:wpa_driver_nl80211_data::nl80211_iftype	file:	access:public
wpa_driver_nl80211_data::assoc_freq	src/drivers/driver_nl80211.c	/^	unsigned int assoc_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::associated	src/drivers/driver_nl80211.c	/^	int associated;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::auth_bssid	src/drivers/driver_nl80211.c	/^	u8 auth_bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::bssid	src/drivers/driver_nl80211.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::capa	src/drivers/driver_nl80211.c	/^	struct wpa_driver_capa capa;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::wpa_driver_capa	file:	access:public
wpa_driver_nl80211_data::ctx	src/drivers/driver_nl80211.c	/^	void *ctx;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::default_if_indices	src/drivers/driver_nl80211.c	/^	int default_if_indices[16];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::disabled_11b_rates	src/drivers/driver_nl80211.c	/^	unsigned int disabled_11b_rates:1;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::eapol_sock	src/drivers/driver_nl80211.c	/^	int eapol_sock; \/* socket for EAPOL frames *\/$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::filter_ssids	src/drivers/driver_nl80211.c	/^	struct wpa_driver_scan_filter *filter_ssids;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::wpa_driver_scan_filter	file:	access:public
wpa_driver_nl80211_data::first_bss	src/drivers/driver_nl80211.c	/^	struct i802_bss first_bss;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::i802_bss	file:	access:public
wpa_driver_nl80211_data::global	src/drivers/driver_nl80211.c	/^	struct nl80211_global *global;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::nl80211_global	file:	access:public
wpa_driver_nl80211_data::has_capability	src/drivers/driver_nl80211.c	/^	int has_capability;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::if_disabled	src/drivers/driver_nl80211.c	/^	int if_disabled;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::if_indices	src/drivers/driver_nl80211.c	/^	int *if_indices;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::if_removed	src/drivers/driver_nl80211.c	/^	int if_removed;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::ifindex	src/drivers/driver_nl80211.c	/^	int ifindex;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::ignore_if_down_event	src/drivers/driver_nl80211.c	/^	int ignore_if_down_event;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::in_interface_list	src/drivers/driver_nl80211.c	/^	unsigned int in_interface_list:1;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::l2	src/drivers/driver_nl80211.c	/^	struct l2_packet_data *l2;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::l2_packet_data	file:	access:public
wpa_driver_nl80211_data::last_freq	src/drivers/driver_nl80211.c	/^	int last_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::last_freq_ht	src/drivers/driver_nl80211.c	/^	int last_freq_ht;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::last_mgmt_freq	src/drivers/driver_nl80211.c	/^	unsigned int last_mgmt_freq;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::list	src/drivers/driver_nl80211.c	/^	struct dl_list list;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::dl_list	file:	access:public
wpa_driver_nl80211_data::monitor_ifidx	src/drivers/driver_nl80211.c	/^	int monitor_ifidx;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::monitor_sock	src/drivers/driver_nl80211.c	/^	int monitor_sock;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::nl_event	src/drivers/driver_nl80211.c	/^	struct nl80211_handles nl_event, nl_preq;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::nl80211_handles	file:	access:public
wpa_driver_nl80211_data::nl_preq	src/drivers/driver_nl80211.c	/^	struct nl80211_handles nl_event, nl_preq;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::	file:	access:public
wpa_driver_nl80211_data::nlmode	src/drivers/driver_nl80211.c	/^	enum nl80211_iftype nlmode;$/;"	m	struct:wpa_driver_nl80211_data	typeref:enum:wpa_driver_nl80211_data::nl80211_iftype	file:	access:public
wpa_driver_nl80211_data::no_monitor_iface_capab	src/drivers/driver_nl80211.c	/^	int no_monitor_iface_capab;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::num_filter_ssids	src/drivers/driver_nl80211.c	/^	size_t num_filter_ssids;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::num_if_indices	src/drivers/driver_nl80211.c	/^	int num_if_indices;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::operstate	src/drivers/driver_nl80211.c	/^	int operstate;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::pending_remain_on_chan	src/drivers/driver_nl80211.c	/^	unsigned int pending_remain_on_chan:1;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::phyname	src/drivers/driver_nl80211.c	/^	char phyname[32];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::remain_on_chan_cookie	src/drivers/driver_nl80211.c	/^	u64 remain_on_chan_cookie;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::rfkill	src/drivers/driver_nl80211.c	/^	struct rfkill_data *rfkill;$/;"	m	struct:wpa_driver_nl80211_data	typeref:struct:wpa_driver_nl80211_data::rfkill_data	file:	access:public
wpa_driver_nl80211_data::scan_complete_events	src/drivers/driver_nl80211.c	/^	int scan_complete_events;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::send_action_cookie	src/drivers/driver_nl80211.c	/^	u64 send_action_cookie;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::ssid	src/drivers/driver_nl80211.c	/^	u8 ssid[32];$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_data::ssid_len	src/drivers/driver_nl80211.c	/^	size_t ssid_len;$/;"	m	struct:wpa_driver_nl80211_data	file:	access:public
wpa_driver_nl80211_deauthenticate	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_nl80211_deinit	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_deinit	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_deinit(void *priv);$/;"	p	file:	signature:(void *priv)
wpa_driver_nl80211_deinit_ap	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_deinit_ap(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_deinit_p2p_cli	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_deinit_p2p_cli(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_del_beacon	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_del_beacon(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
wpa_driver_nl80211_disassociate	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_nl80211_disconnect	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_disconnect(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *addr, int reason_code)
wpa_driver_nl80211_event_link	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_event_link(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, char *buf, size_t len, int del)
wpa_driver_nl80211_event_receive	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_event_receive(int sock, void *eloop_ctx,$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *handle)
wpa_driver_nl80211_event_rtm_dellink	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_event_rtm_dellink(void *ctx,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
wpa_driver_nl80211_event_rtm_newlink	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_event_rtm_newlink(void *ctx,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
wpa_driver_nl80211_finish_drv_init	src/drivers/driver_nl80211.c	/^wpa_driver_nl80211_finish_drv_init(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
wpa_driver_nl80211_finish_drv_init	src/drivers/driver_nl80211.c	/^wpa_driver_nl80211_finish_drv_init(struct wpa_driver_nl80211_data *drv);$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv)
wpa_driver_nl80211_get_bssid	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_nl80211_get_capa	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_get_capa(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_nl80211_get_hw_feature_data	src/drivers/driver_nl80211.c	/^wpa_driver_nl80211_get_hw_feature_data(void *priv, u16 *num_modes, u16 *flags)$/;"	f	file:	signature:(void *priv, u16 *num_modes, u16 *flags)
wpa_driver_nl80211_get_info	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_get_info(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct wiphy_info_data *info)
wpa_driver_nl80211_get_scan_results	src/drivers/driver_nl80211.c	/^wpa_driver_nl80211_get_scan_results(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_get_ssid	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_nl80211_hapd_send_eapol	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_hapd_send_eapol($/;"	f	file:	signature:( void *priv, const u8 *addr, const u8 *data, size_t data_len, int encrypt, const u8 *own_addr, u32 flags)
wpa_driver_nl80211_ibss	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_ibss(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, struct wpa_driver_associate_params *params)
wpa_driver_nl80211_if_add	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_if_add(void *priv, enum wpa_driver_if_type type,$/;"	f	file:	signature:(void *priv, enum wpa_driver_if_type type, const char *ifname, const u8 *addr, void *bss_ctx, void **drv_priv, char *force_ifname, u8 *if_addr, const char *bridge)
wpa_driver_nl80211_if_remove	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_if_remove(void *priv,$/;"	f	file:	signature:(void *priv, enum wpa_driver_if_type type, const char *ifname)
wpa_driver_nl80211_if_remove	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_if_remove(void *priv,$/;"	p	file:	signature:(void *priv, enum wpa_driver_if_type type, const char *ifname)
wpa_driver_nl80211_if_type	src/drivers/driver_nl80211.c	/^static enum nl80211_iftype wpa_driver_nl80211_if_type($/;"	f	file:	signature:( enum wpa_driver_if_type type)
wpa_driver_nl80211_init	src/drivers/driver_nl80211.c	/^static void * wpa_driver_nl80211_init(void *ctx, const char *ifname,$/;"	f	file:	signature:(void *ctx, const char *ifname, void *global_priv)
wpa_driver_nl80211_init_nl	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_init_nl(struct wpa_driver_nl80211_data *drv)$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv)
wpa_driver_nl80211_init_nl_global	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_init_nl_global(struct nl80211_global *global)$/;"	f	file:	signature:(struct nl80211_global *global)
wpa_driver_nl80211_mlme	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_mlme(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *addr, int cmd, u16 reason_code, int local_state_change)
wpa_driver_nl80211_mlme	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_mlme(struct wpa_driver_nl80211_data *drv,$/;"	p	file:	signature:(struct wpa_driver_nl80211_data *drv, const u8 *addr, int cmd, u16 reason_code, int local_state_change)
wpa_driver_nl80211_ops	src/drivers/driver_nl80211.c	/^const struct wpa_driver_ops wpa_driver_nl80211_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_nl80211_own_ifindex	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_own_ifindex(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int ifindex, u8 *buf, size_t len)
wpa_driver_nl80211_own_ifname	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_own_ifname(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, u8 *buf, size_t len)
wpa_driver_nl80211_probe_req_report	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_probe_req_report(void *priv, int report)$/;"	f	file:	signature:(void *priv, int report)
wpa_driver_nl80211_probe_req_report	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_probe_req_report(void *priv, int report);$/;"	p	file:	signature:(void *priv, int report)
wpa_driver_nl80211_remain_on_channel	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_remain_on_channel(void *priv, unsigned int freq,$/;"	f	file:	signature:(void *priv, unsigned int freq, unsigned int duration)
wpa_driver_nl80211_resume	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_resume(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_rfkill_blocked	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_rfkill_blocked(void *ctx)$/;"	f	file:	signature:(void *ctx)
wpa_driver_nl80211_rfkill_unblocked	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_rfkill_unblocked(void *ctx)$/;"	f	file:	signature:(void *ctx)
wpa_driver_nl80211_scan	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_nl80211_scan_timeout	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_nl80211_scan_timeout	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_scan_timeout(void *eloop_ctx,$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_nl80211_sched_scan	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_sched_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params, u32 interval)
wpa_driver_nl80211_send_action	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_send_action(void *priv, unsigned int freq,$/;"	f	file:	signature:(void *priv, unsigned int freq, unsigned int wait_time, const u8 *dst, const u8 *src, const u8 *bssid, const u8 *data, size_t data_len, int no_cck)
wpa_driver_nl80211_send_action_cancel_wait	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_send_action_cancel_wait(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_nl80211_send_frame	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_send_frame(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, const void *data, size_t len, int encrypt)
wpa_driver_nl80211_send_mlme	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_send_mlme(void *priv, const u8 *data,$/;"	f	file:	signature:(void *priv, const u8 *data, size_t data_len)
wpa_driver_nl80211_send_rfkill	src/drivers/driver_nl80211.c	/^static void wpa_driver_nl80211_send_rfkill(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_nl80211_set_ap	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_ap(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_ap_params *params)
wpa_driver_nl80211_set_country	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_country(void *priv, const char *alpha2_arg)$/;"	f	file:	signature:(void *priv, const char *alpha2_arg)
wpa_driver_nl80211_set_freq	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_freq(struct wpa_driver_nl80211_data *drv,$/;"	f	file:	signature:(struct wpa_driver_nl80211_data *drv, int freq, int ht_enabled, int sec_channel_offset)
wpa_driver_nl80211_set_key	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_nl80211_set_mode	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_mode(struct i802_bss *bss,$/;"	f	file:	signature:(struct i802_bss *bss, enum nl80211_iftype nlmode)
wpa_driver_nl80211_set_mode	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_mode(struct i802_bss *bss,$/;"	p	file:	signature:(struct i802_bss *bss, enum nl80211_iftype nlmode)
wpa_driver_nl80211_set_operstate	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_operstate(void *priv, int state)$/;"	f	file:	signature:(void *priv, int state)
wpa_driver_nl80211_set_supp_port	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_set_supp_port(void *priv, int authorized)$/;"	f	file:	signature:(void *priv, int authorized)
wpa_driver_nl80211_sta_add	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_sta_add(void *priv,$/;"	f	file:	signature:(void *priv, struct hostapd_sta_add_params *params)
wpa_driver_nl80211_sta_remove	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_sta_remove(void *priv, const u8 *addr)$/;"	f	file:	signature:(void *priv, const u8 *addr)
wpa_driver_nl80211_sta_set_flags	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_sta_set_flags(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int total_flags, int flags_or, int flags_and)
wpa_driver_nl80211_stop_sched_scan	src/drivers/driver_nl80211.c	/^static int wpa_driver_nl80211_stop_sched_scan(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_none_ops	src/drivers/driver_none.c	/^const struct wpa_driver_ops wpa_driver_none_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_ops	src/drivers/driver.h	/^struct wpa_driver_ops {$/;"	s
wpa_driver_ops::add_pmkid	src/drivers/driver.h	/^	int (*add_pmkid)(void *priv, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::add_sta_node	src/drivers/driver.h	/^	int (*add_sta_node)(void *priv, const u8 *addr, u16 auth_alg);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::add_tspec	src/drivers/driver.h	/^	 int (*add_tspec)(void *priv, const u8 *addr, u8 *tspec_ie,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::ampdu	src/drivers/driver.h	/^	int (*ampdu)(void *priv, int ampdu);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::associate	src/drivers/driver.h	/^	int (*associate)(void *priv,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::authenticate	src/drivers/driver.h	/^	int (*authenticate)(void *priv,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::cancel_remain_on_channel	src/drivers/driver.h	/^	int (*cancel_remain_on_channel)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::commit	src/drivers/driver.h	/^	int (*commit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::deauthenticate	src/drivers/driver.h	/^	int (*deauthenticate)(void *priv, const u8 *addr, int reason_code);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::deinit	src/drivers/driver.h	/^	void (*deinit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::deinit_ap	src/drivers/driver.h	/^	int (*deinit_ap)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::deinit_p2p_cli	src/drivers/driver.h	/^	int (*deinit_p2p_cli)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::desc	src/drivers/driver.h	/^	const char *desc;$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::disassociate	src/drivers/driver.h	/^	int (*disassociate)(void *priv, const u8 *addr, int reason_code);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::flush	src/drivers/driver.h	/^	int (*flush)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::flush_pmkid	src/drivers/driver.h	/^	int (*flush_pmkid)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_bssid	src/drivers/driver.h	/^	int (*get_bssid)(void *priv, u8 *bssid);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_capa	src/drivers/driver.h	/^	int (*get_capa)(void *priv, struct wpa_driver_capa *capa);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_hw_feature_data	src/drivers/driver.h	/^	struct hostapd_hw_modes * (*get_hw_feature_data)(void *priv,$/;"	m	struct:wpa_driver_ops	typeref:struct:wpa_driver_ops::get_hw_feature_data	access:public
wpa_driver_ops::get_ifname	src/drivers/driver.h	/^	const char * (*get_ifname)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_inact_sec	src/drivers/driver.h	/^	int (*get_inact_sec)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_interfaces	src/drivers/driver.h	/^	struct wpa_interface_info * (*get_interfaces)(void *global_priv);$/;"	m	struct:wpa_driver_ops	typeref:struct:wpa_driver_ops::get_interfaces	access:public
wpa_driver_ops::get_mac_addr	src/drivers/driver.h	/^	const u8 * (*get_mac_addr)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_noa	src/drivers/driver.h	/^	int (*get_noa)(void *priv, u8 *buf, size_t buf_len);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_radio_name	src/drivers/driver.h	/^	const char * (*get_radio_name)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_scan_results2	src/drivers/driver.h	/^	 struct wpa_scan_results * (*get_scan_results2)(void *priv);$/;"	m	struct:wpa_driver_ops	typeref:struct:wpa_driver_ops::get_scan_results2	access:public
wpa_driver_ops::get_seqnum	src/drivers/driver.h	/^	int (*get_seqnum)(const char *ifname, void *priv, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::get_ssid	src/drivers/driver.h	/^	int (*get_ssid)(void *priv, u8 *ssid);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::global_deinit	src/drivers/driver.h	/^	void (*global_deinit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::global_init	src/drivers/driver.h	/^	void * (*global_init)(void);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::hapd_deinit	src/drivers/driver.h	/^	void (*hapd_deinit)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::hapd_get_ssid	src/drivers/driver.h	/^	int (*hapd_get_ssid)(void *priv, u8 *buf, int len);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::hapd_init	src/drivers/driver.h	/^	void * (*hapd_init)(struct hostapd_data *hapd,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::hapd_send_eapol	src/drivers/driver.h	/^	int (*hapd_send_eapol)(void *priv, const u8 *addr, const u8 *data,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::hapd_set_countermeasures	src/drivers/driver.h	/^	int (*hapd_set_countermeasures)(void *priv, int enabled);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::hapd_set_ssid	src/drivers/driver.h	/^	int (*hapd_set_ssid)(void *priv, const u8 *buf, int len);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::if_add	src/drivers/driver.h	/^	int (*if_add)(void *priv, enum wpa_driver_if_type type,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::if_remove	src/drivers/driver.h	/^	int (*if_remove)(void *priv, enum wpa_driver_if_type type,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::init	src/drivers/driver.h	/^	void * (*init)(void *ctx, const char *ifname);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::init2	src/drivers/driver.h	/^	void * (*init2)(void *ctx, const char *ifname, void *global_priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::mlme_setprotection	src/drivers/driver.h	/^	int (*mlme_setprotection)(void *priv, const u8 *addr, int protect_type,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::name	src/drivers/driver.h	/^	const char *name;$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_connect	src/drivers/driver.h	/^	int (*p2p_connect)(void *priv, const u8 *peer_addr, int wps_method,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_find	src/drivers/driver.h	/^	int (*p2p_find)(void *priv, unsigned int timeout, int type);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_group_formation_failed	src/drivers/driver.h	/^	int (*p2p_group_formation_failed)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_invite	src/drivers/driver.h	/^	int (*p2p_invite)(void *priv, const u8 *peer, int role,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_listen	src/drivers/driver.h	/^	int (*p2p_listen)(void *priv, unsigned int timeout);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_prov_disc_req	src/drivers/driver.h	/^	int (*p2p_prov_disc_req)(void *priv, const u8 *peer_addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_reject	src/drivers/driver.h	/^	int (*p2p_reject)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_sd_cancel_request	src/drivers/driver.h	/^	int (*p2p_sd_cancel_request)(void *priv, u64 req);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_sd_request	src/drivers/driver.h	/^	u64 (*p2p_sd_request)(void *priv, const u8 *dst,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_sd_response	src/drivers/driver.h	/^	int (*p2p_sd_response)(void *priv, int freq, const u8 *dst,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_service_update	src/drivers/driver.h	/^	int (*p2p_service_update)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_set_params	src/drivers/driver.h	/^	int (*p2p_set_params)(void *priv, const struct p2p_params *params);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::p2p_stop_find	src/drivers/driver.h	/^	int (*p2p_stop_find)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::poll	src/drivers/driver.h	/^	void (*poll)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::poll_client	src/drivers/driver.h	/^	void (*poll_client)(void *priv, const u8 *own_addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::probe_req_report	src/drivers/driver.h	/^	int (*probe_req_report)(void *priv, int report);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::read_sta_data	src/drivers/driver.h	/^	int (*read_sta_data)(void *priv, struct hostap_sta_driver_data *data,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::remain_on_channel	src/drivers/driver.h	/^	int (*remain_on_channel)(void *priv, unsigned int freq,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::remove_pmkid	src/drivers/driver.h	/^	int (*remove_pmkid)(void *priv, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::resume	src/drivers/driver.h	/^	void (*resume)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::scan2	src/drivers/driver.h	/^	int (*scan2)(void *priv, struct wpa_driver_scan_params *params);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sched_scan	src/drivers/driver.h	/^	int (*sched_scan)(void *priv, struct wpa_driver_scan_params *params,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_action	src/drivers/driver.h	/^	int (*send_action)(void *priv, unsigned int freq, unsigned int wait,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_action_cancel_wait	src/drivers/driver.h	/^	void (*send_action_cancel_wait)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_eapol	src/drivers/driver.h	/^	int (*send_eapol)(void *priv, const u8 *dest, u16 proto,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_ether	src/drivers/driver.h	/^	int (*send_ether)(void *priv, const u8 *dst, const u8 *src, u16 proto,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_frame	src/drivers/driver.h	/^	int (*send_frame)(void *priv, const u8 *data, size_t data_len,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_ft_action	src/drivers/driver.h	/^	int (*send_ft_action)(void *priv, u8 action, const u8 *target_ap,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_mlme	src/drivers/driver.h	/^	int (*send_mlme)(void *priv, const u8 *data, size_t data_len);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::send_tdls_mgmt	src/drivers/driver.h	/^	int (*send_tdls_mgmt)(void *priv, const u8 *dst, u8 action_code,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_ap	src/drivers/driver.h	/^	int (*set_ap)(void *priv, struct wpa_driver_ap_params *params);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_ap_wps_ie	src/drivers/driver.h	/^	int (*set_ap_wps_ie)(void *priv, const struct wpabuf *beacon,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_authmode	src/drivers/driver.h	/^	int (*set_authmode)(void *priv, int authmode);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_countermeasures	src/drivers/driver.h	/^	int (*set_countermeasures)(void *priv, int enabled);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_country	src/drivers/driver.h	/^	int (*set_country)(void *priv, const char *alpha2);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_frag	src/drivers/driver.h	/^	int (*set_frag)(void *priv, int frag);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_freq	src/drivers/driver.h	/^	int (*set_freq)(void *priv, struct hostapd_freq_params *freq);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_generic_elem	src/drivers/driver.h	/^	int (*set_generic_elem)(void *priv, const u8 *elem, size_t elem_len);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_ieee8021x	src/drivers/driver.h	/^	int (*set_ieee8021x)(void *priv, struct wpa_bss_params *params);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_key	src/drivers/driver.h	/^	int (*set_key)(const char *ifname, void *priv, enum wpa_alg alg,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_noa	src/drivers/driver.h	/^	int (*set_noa)(void *priv, u8 count, int start, int duration);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_operstate	src/drivers/driver.h	/^	int (*set_operstate)(void *priv, int state);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_p2p_powersave	src/drivers/driver.h	/^	int (*set_p2p_powersave)(void *priv, int legacy_ps, int opp_ps,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_param	src/drivers/driver.h	/^	int (*set_param)(void *priv, const char *param);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_privacy	src/drivers/driver.h	/^	int (*set_privacy)(void *priv, int enabled);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_radius_acl_auth	src/drivers/driver.h	/^	int (*set_radius_acl_auth)(void *priv, const u8 *mac, int accepted, $/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_radius_acl_expire	src/drivers/driver.h	/^	int (*set_radius_acl_expire)(void *priv, const u8 *mac);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_rate_sets	src/drivers/driver.h	/^	int (*set_rate_sets)(void *priv, int *supp_rates, int *basic_rates,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_rekey_info	src/drivers/driver.h	/^	void (*set_rekey_info)(void *priv, const u8 *kek, const u8 *kck,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_rts	src/drivers/driver.h	/^	int (*set_rts)(void *priv, int rts);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_sta_vlan	src/drivers/driver.h	/^	int (*set_sta_vlan)(void *priv, const u8 *addr, const char *ifname,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_supp_port	src/drivers/driver.h	/^	int (*set_supp_port)(void *priv, int authorized);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_tx_queue_params	src/drivers/driver.h	/^	int (*set_tx_queue_params)(void *priv, int queue, int aifs, int cw_min,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::set_wds_sta	src/drivers/driver.h	/^	int (*set_wds_sta)(void *priv, const u8 *addr, int aid, int val,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::shared_freq	src/drivers/driver.h	/^	int (*shared_freq)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::signal_monitor	src/drivers/driver.h	/^	int (*signal_monitor)(void *priv, int threshold, int hysteresis);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::signal_poll	src/drivers/driver.h	/^	int (*signal_poll)(void *priv, struct wpa_signal_info *signal_info);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_add	src/drivers/driver.h	/^	int (*sta_add)(void *priv, struct hostapd_sta_add_params *params);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_assoc	src/drivers/driver.h	/^	 int (*sta_assoc)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_auth	src/drivers/driver.h	/^	 int (*sta_auth)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_clear_stats	src/drivers/driver.h	/^	int (*sta_clear_stats)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_deauth	src/drivers/driver.h	/^	int (*sta_deauth)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_disassoc	src/drivers/driver.h	/^	int (*sta_disassoc)(void *priv, const u8 *own_addr, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_remove	src/drivers/driver.h	/^	int (*sta_remove)(void *priv, const u8 *addr);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::sta_set_flags	src/drivers/driver.h	/^	int (*sta_set_flags)(void *priv, const u8 *addr,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::stop_sched_scan	src/drivers/driver.h	/^	int (*stop_sched_scan)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::suspend	src/drivers/driver.h	/^	void (*suspend)(void *priv);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::tdls_oper	src/drivers/driver.h	/^	int (*tdls_oper)(void *priv, enum tdls_oper oper, const u8 *peer);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::update_ft_ies	src/drivers/driver.h	/^	int (*update_ft_ies)(void *priv, const u8 *md, const u8 *ies,$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_ops::wps_success_cb	src/drivers/driver.h	/^	int (*wps_success_cb)(void *priv, const u8 *peer_addr);$/;"	m	struct:wpa_driver_ops	access:public
wpa_driver_privsep_associate	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_associate($/;"	f	file:	signature:( void *priv, struct wpa_driver_associate_params *params)
wpa_driver_privsep_data	src/drivers/driver_privsep.c	/^struct wpa_driver_privsep_data {$/;"	s	file:
wpa_driver_privsep_data::cmd_socket	src/drivers/driver_privsep.c	/^	int cmd_socket;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_data::ctx	src/drivers/driver_privsep.c	/^	void *ctx;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_data::ifname	src/drivers/driver_privsep.c	/^	char ifname[16];$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_data::own_addr	src/drivers/driver_privsep.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_data::own_cmd_path	src/drivers/driver_privsep.c	/^	char *own_cmd_path;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_data::own_socket_path	src/drivers/driver_privsep.c	/^	char *own_socket_path;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_data::priv_addr	src/drivers/driver_privsep.c	/^	struct sockaddr_un priv_addr;$/;"	m	struct:wpa_driver_privsep_data	typeref:struct:wpa_driver_privsep_data::sockaddr_un	file:	access:public
wpa_driver_privsep_data::priv_socket	src/drivers/driver_privsep.c	/^	int priv_socket;$/;"	m	struct:wpa_driver_privsep_data	file:	access:public
wpa_driver_privsep_deauthenticate	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_privsep_deinit	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_privsep_disassociate	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_privsep_event_assoc	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_assoc(void *ctx,$/;"	f	file:	signature:(void *ctx, enum wpa_event_type event, u8 *buf, size_t len)
wpa_driver_privsep_event_ft_response	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_ft_response(void *ctx, u8 *buf,$/;"	f	file:	signature:(void *ctx, u8 *buf, size_t len)
wpa_driver_privsep_event_interface_status	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_interface_status(void *ctx, u8 *buf,$/;"	f	file:	signature:(void *ctx, u8 *buf, size_t len)
wpa_driver_privsep_event_michael_mic_failure	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_michael_mic_failure($/;"	f	file:	signature:( void *ctx, u8 *buf, size_t len)
wpa_driver_privsep_event_pmkid_candidate	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_pmkid_candidate(void *ctx, u8 *buf,$/;"	f	file:	signature:(void *ctx, u8 *buf, size_t len)
wpa_driver_privsep_event_rx_eapol	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_rx_eapol(void *ctx, u8 *buf, size_t len)$/;"	f	file:	signature:(void *ctx, u8 *buf, size_t len)
wpa_driver_privsep_event_stkstart	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_event_stkstart(void *ctx, u8 *buf, size_t len)$/;"	f	file:	signature:(void *ctx, u8 *buf, size_t len)
wpa_driver_privsep_get_bssid	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_privsep_get_capa	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_get_capa(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_privsep_get_mac_addr	src/drivers/driver_privsep.c	/^static const u8 * wpa_driver_privsep_get_mac_addr(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_privsep_get_scan_results2	src/drivers/driver_privsep.c	/^wpa_driver_privsep_get_scan_results2(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_privsep_get_ssid	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_privsep_init	src/drivers/driver_privsep.c	/^static void * wpa_driver_privsep_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_privsep_ops	src/drivers/driver_privsep.c	/^struct wpa_driver_ops wpa_driver_privsep_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_privsep_receive	src/drivers/driver_privsep.c	/^static void wpa_driver_privsep_receive(int sock, void *eloop_ctx,$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
wpa_driver_privsep_scan	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_privsep_set_country	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_set_country(void *priv, const char *alpha2)$/;"	f	file:	signature:(void *priv, const char *alpha2)
wpa_driver_privsep_set_key	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_privsep_set_param	src/drivers/driver_privsep.c	/^static int wpa_driver_privsep_set_param(void *priv, const char *param)$/;"	f	file:	signature:(void *priv, const char *param)
wpa_driver_ralink_add_pmkid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_add_pmkid(void *priv, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
wpa_driver_ralink_add_wep	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_add_wep(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, int pairwise, int key_idx, int set_tx, const u8 *key, size_t key_len)
wpa_driver_ralink_associate	src/drivers/driver_ralink.c	/^wpa_driver_ralink_associate(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_ralink_data	src/drivers/driver_ralink.c	/^struct wpa_driver_ralink_data {$/;"	s	file:
wpa_driver_ralink_data::ap_scan	src/drivers/driver_ralink.c	/^	int ap_scan;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::assoc_req_ies	src/drivers/driver_ralink.c	/^	u8 *assoc_req_ies;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::assoc_req_ies_len	src/drivers/driver_ralink.c	/^	size_t assoc_req_ies_len;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::assoc_resp_ies	src/drivers/driver_ralink.c	/^	u8 *assoc_resp_ies;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::assoc_resp_ies_len	src/drivers/driver_ralink.c	/^	size_t assoc_resp_ies_len;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::bAddWepKey	src/drivers/driver_ralink.c	/^	BOOLEAN	bAddWepKey;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::ctx	src/drivers/driver_ralink.c	/^	void *ctx;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::g_driver_down	src/drivers/driver_ralink.c	/^	u8 g_driver_down;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::ifname	src/drivers/driver_ralink.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::ioctl_sock	src/drivers/driver_ralink.c	/^	int ioctl_sock;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::netlink	src/drivers/driver_ralink.c	/^	struct netlink_data *netlink;$/;"	m	struct:wpa_driver_ralink_data	typeref:struct:wpa_driver_ralink_data::netlink_data	file:	access:public
wpa_driver_ralink_data::no_of_pmkid	src/drivers/driver_ralink.c	/^	int no_of_pmkid;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::pmkid	src/drivers/driver_ralink.c	/^	struct ndis_pmkid_entry *pmkid;$/;"	m	struct:wpa_driver_ralink_data	typeref:struct:wpa_driver_ralink_data::ndis_pmkid_entry	file:	access:public
wpa_driver_ralink_data::scanning_done	src/drivers/driver_ralink.c	/^	int scanning_done;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_data::we_version_compiled	src/drivers/driver_ralink.c	/^	int we_version_compiled;$/;"	m	struct:wpa_driver_ralink_data	file:	access:public
wpa_driver_ralink_deauthenticate	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_ralink_deinit	src/drivers/driver_ralink.c	/^static void wpa_driver_ralink_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ralink_disassociate	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_ralink_event_pmkid	src/drivers/driver_ralink.c	/^static void wpa_driver_ralink_event_pmkid(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, const u8 *data, size_t data_len)
wpa_driver_ralink_event_rtm_newlink	src/drivers/driver_ralink.c	/^wpa_driver_ralink_event_rtm_newlink(void *ctx, struct ifinfomsg *ifi, $/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
wpa_driver_ralink_event_wireless	src/drivers/driver_ralink.c	/^wpa_driver_ralink_event_wireless(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, void *ctx, char *data, int len)
wpa_driver_ralink_event_wireless_custom	src/drivers/driver_ralink.c	/^wpa_driver_ralink_event_wireless_custom(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, void *ctx, char *custom)
wpa_driver_ralink_flush_pmkid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_flush_pmkid(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ralink_get_bssid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_ralink_get_scan_results	src/drivers/driver_ralink.c	/^wpa_driver_ralink_get_scan_results(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_ralink_get_ssid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_ralink_init	src/drivers/driver_ralink.c	/^static void * wpa_driver_ralink_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_ralink_ops	src/drivers/driver_ralink.c	/^const struct wpa_driver_ops wpa_driver_ralink_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_ralink_remove_key	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_remove_key(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, int key_idx, const u8 *addr, const u8 *bssid, int pairwise)
wpa_driver_ralink_remove_pmkid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_remove_pmkid(void *priv, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
wpa_driver_ralink_scan	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_ralink_scan_timeout	src/drivers/driver_ralink.c	/^static void wpa_driver_ralink_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_ralink_scan_timeout	src/drivers/driver_ralink.c	/^static void wpa_driver_ralink_scan_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_ralink_set_countermeasures	src/drivers/driver_ralink.c	/^wpa_driver_ralink_set_countermeasures(void *priv, int enabled)$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_ralink_set_gen_ie	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_set_gen_ie(void *priv, const u8 *ie,$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t ie_len)
wpa_driver_ralink_set_key	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_ralink_set_pmkid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_set_pmkid(struct wpa_driver_ralink_data *drv)$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv)
wpa_driver_ralink_set_ssid	src/drivers/driver_ralink.c	/^static int wpa_driver_ralink_set_ssid(struct wpa_driver_ralink_data *drv,$/;"	f	file:	signature:(struct wpa_driver_ralink_data *drv, const u8 *ssid, size_t ssid_len)
wpa_driver_register_event_cb	src/drivers/driver_ndis.c	/^int wpa_driver_register_event_cb(struct wpa_driver_ndis_data *drv);$/;"	p	file:	signature:(struct wpa_driver_ndis_data *drv)
wpa_driver_roboswitch_addr_be16	src/drivers/driver_roboswitch.c	/^static void wpa_driver_roboswitch_addr_be16(const u8 addr[ETH_ALEN], u16 *be)$/;"	f	file:	signature:(const u8 addr[ETH_ALEN], u16 *be)
wpa_driver_roboswitch_data	src/drivers/driver_roboswitch.c	/^struct wpa_driver_roboswitch_data {$/;"	s	file:
wpa_driver_roboswitch_data::ctx	src/drivers/driver_roboswitch.c	/^	void *ctx;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
wpa_driver_roboswitch_data::fd	src/drivers/driver_roboswitch.c	/^	int fd, is_5350;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
wpa_driver_roboswitch_data::ifname	src/drivers/driver_roboswitch.c	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
wpa_driver_roboswitch_data::ifr	src/drivers/driver_roboswitch.c	/^	struct ifreq ifr;$/;"	m	struct:wpa_driver_roboswitch_data	typeref:struct:wpa_driver_roboswitch_data::ifreq	file:	access:public
wpa_driver_roboswitch_data::is_5350	src/drivers/driver_roboswitch.c	/^	int fd, is_5350;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
wpa_driver_roboswitch_data::l2	src/drivers/driver_roboswitch.c	/^	struct l2_packet_data *l2;$/;"	m	struct:wpa_driver_roboswitch_data	typeref:struct:wpa_driver_roboswitch_data::l2_packet_data	file:	access:public
wpa_driver_roboswitch_data::own_addr	src/drivers/driver_roboswitch.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
wpa_driver_roboswitch_data::ports	src/drivers/driver_roboswitch.c	/^	u16 ports;$/;"	m	struct:wpa_driver_roboswitch_data	file:	access:public
wpa_driver_roboswitch_deinit	src/drivers/driver_roboswitch.c	/^static void wpa_driver_roboswitch_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_roboswitch_get_bssid	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_roboswitch_get_capa	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_get_capa(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_roboswitch_get_ifname	src/drivers/driver_roboswitch.c	/^static const char * wpa_driver_roboswitch_get_ifname(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_roboswitch_get_ssid	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_roboswitch_init	src/drivers/driver_roboswitch.c	/^static void * wpa_driver_roboswitch_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_roboswitch_join	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_join(struct wpa_driver_roboswitch_data *drv,$/;"	f	file:	signature:(struct wpa_driver_roboswitch_data *drv, u16 ports, const u8 *addr)
wpa_driver_roboswitch_leave	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_leave(struct wpa_driver_roboswitch_data *drv,$/;"	f	file:	signature:(struct wpa_driver_roboswitch_data *drv, u16 ports, const u8 *addr)
wpa_driver_roboswitch_mdio_read	src/drivers/driver_roboswitch.c	/^static u16 wpa_driver_roboswitch_mdio_read($/;"	f	file:	signature:( struct wpa_driver_roboswitch_data *drv, u8 reg)
wpa_driver_roboswitch_mdio_write	src/drivers/driver_roboswitch.c	/^static void wpa_driver_roboswitch_mdio_write($/;"	f	file:	signature:( struct wpa_driver_roboswitch_data *drv, u8 reg, u16 val)
wpa_driver_roboswitch_ops	src/drivers/driver_roboswitch.c	/^const struct wpa_driver_ops wpa_driver_roboswitch_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_roboswitch_read	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_read(struct wpa_driver_roboswitch_data *drv,$/;"	f	file:	signature:(struct wpa_driver_roboswitch_data *drv, u8 page, u8 reg, u16 *val, int len)
wpa_driver_roboswitch_receive	src/drivers/driver_roboswitch.c	/^static void wpa_driver_roboswitch_receive(void *priv, const u8 *src_addr,$/;"	f	file:	signature:(void *priv, const u8 *src_addr, const u8 *buf, size_t len)
wpa_driver_roboswitch_reg	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_reg(struct wpa_driver_roboswitch_data *drv,$/;"	f	file:	signature:(struct wpa_driver_roboswitch_data *drv, u8 page, u8 reg, u8 op)
wpa_driver_roboswitch_set_param	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_set_param(void *priv, const char *param)$/;"	f	file:	signature:(void *priv, const char *param)
wpa_driver_roboswitch_write	src/drivers/driver_roboswitch.c	/^static int wpa_driver_roboswitch_write(struct wpa_driver_roboswitch_data *drv,$/;"	f	file:	signature:(struct wpa_driver_roboswitch_data *drv, u8 page, u8 reg, u16 *val, int len)
wpa_driver_scan_dir	src/drivers/driver_test.c	/^static void wpa_driver_scan_dir(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, const char *path)
wpa_driver_scan_filter	src/drivers/driver.h	/^	struct wpa_driver_scan_filter {$/;"	s	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params	src/drivers/driver.h	/^struct wpa_driver_scan_params {$/;"	s
wpa_driver_scan_params::extra_ies	src/drivers/driver.h	/^	const u8 *extra_ies;$/;"	m	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::extra_ies_len	src/drivers/driver.h	/^	size_t extra_ies_len;$/;"	m	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::filter_ssids	src/drivers/driver.h	/^	} *filter_ssids;$/;"	m	struct:wpa_driver_scan_params	typeref:struct:wpa_driver_scan_params::wpa_driver_scan_filter	access:public
wpa_driver_scan_params::freqs	src/drivers/driver.h	/^	int *freqs;$/;"	m	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::num_filter_ssids	src/drivers/driver.h	/^	size_t num_filter_ssids;$/;"	m	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::num_ssids	src/drivers/driver.h	/^	size_t num_ssids;$/;"	m	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::p2p_probe	src/drivers/driver.h	/^	u8 p2p_probe;$/;"	m	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::ssids	src/drivers/driver.h	/^	} ssids[WPAS_MAX_SCAN_SSIDS];$/;"	m	struct:wpa_driver_scan_params	typeref:struct:wpa_driver_scan_params::wpa_driver_scan_ssid	access:public
wpa_driver_scan_params::wpa_driver_scan_filter	src/drivers/driver.h	/^	struct wpa_driver_scan_filter {$/;"	s	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::wpa_driver_scan_filter::ssid	src/drivers/driver.h	/^		u8 ssid[32];$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_filter	access:public
wpa_driver_scan_params::wpa_driver_scan_filter::ssid_len	src/drivers/driver.h	/^		size_t ssid_len;$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_filter	access:public
wpa_driver_scan_params::wpa_driver_scan_ssid	src/drivers/driver.h	/^	struct wpa_driver_scan_ssid {$/;"	s	struct:wpa_driver_scan_params	access:public
wpa_driver_scan_params::wpa_driver_scan_ssid::ssid	src/drivers/driver.h	/^		const u8 *ssid;$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_ssid	access:public
wpa_driver_scan_params::wpa_driver_scan_ssid::ssid_len	src/drivers/driver.h	/^		size_t ssid_len;$/;"	m	struct:wpa_driver_scan_params::wpa_driver_scan_ssid	access:public
wpa_driver_scan_ssid	src/drivers/driver.h	/^	struct wpa_driver_scan_ssid {$/;"	s	struct:wpa_driver_scan_params	access:public
wpa_driver_test_associate	src/drivers/driver_test.c	/^static int wpa_driver_test_associate($/;"	f	file:	signature:( void *priv, struct wpa_driver_associate_params *params)
wpa_driver_test_assocresp	src/drivers/driver_test.c	/^static void wpa_driver_test_assocresp(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr *from, socklen_t fromlen, const char *data)
wpa_driver_test_attach	src/drivers/driver_test.c	/^static int wpa_driver_test_attach(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, const char *dir, int ap)
wpa_driver_test_attach	src/drivers/driver_test.c	/^static int wpa_driver_test_attach(struct wpa_driver_test_data *drv,$/;"	p	file:	signature:(struct wpa_driver_test_data *drv, const char *dir, int ap)
wpa_driver_test_attach_udp	src/drivers/driver_test.c	/^static int wpa_driver_test_attach_udp(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, char *dst)
wpa_driver_test_cancel_remain_on_channel	src/drivers/driver_test.c	/^static int wpa_driver_test_cancel_remain_on_channel(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_close_test_socket	src/drivers/driver_test.c	/^static void wpa_driver_test_close_test_socket($/;"	p	file:	signature:( struct wpa_driver_test_data *drv)
wpa_driver_test_close_test_socket	src/drivers/driver_test.c	/^static void wpa_driver_test_close_test_socket(struct wpa_driver_test_data *drv)$/;"	f	file:	signature:(struct wpa_driver_test_data *drv)
wpa_driver_test_data	src/drivers/driver_test.c	/^struct wpa_driver_test_data {$/;"	s	file:
wpa_driver_test_data::WPA_TRACE_REF	src/drivers/driver_test.c	/^	WPA_TRACE_REF(ctx);$/;"	p	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::alloc_iface_idx	src/drivers/driver_test.c	/^	int alloc_iface_idx;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::ap	src/drivers/driver_test.c	/^	int ap;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::assoc_wpa_ie	src/drivers/driver_test.c	/^	u8 assoc_wpa_ie[80];$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::assoc_wpa_ie_len	src/drivers/driver_test.c	/^	size_t assoc_wpa_ie_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::associated	src/drivers/driver_test.c	/^	int associated;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::bss	src/drivers/driver_test.c	/^	struct dl_list bss;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::dl_list	file:	access:public
wpa_driver_test_data::cli	src/drivers/driver_test.c	/^	struct test_client_socket *cli;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::test_client_socket	file:	access:public
wpa_driver_test_data::ctx	src/drivers/driver_test.c	/^	void *ctx;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::current_freq	src/drivers/driver_test.c	/^	int current_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::global	src/drivers/driver_test.c	/^	struct wpa_driver_test_global *global;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::wpa_driver_test_global	file:	access:public
wpa_driver_test_data::hostapd_addr	src/drivers/driver_test.c	/^	struct sockaddr_un hostapd_addr;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::sockaddr_un	file:	access:public
wpa_driver_test_data::hostapd_addr_set	src/drivers/driver_test.c	/^	int hostapd_addr_set;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::hostapd_addr_udp	src/drivers/driver_test.c	/^	struct sockaddr_in hostapd_addr_udp;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::sockaddr_in	file:	access:public
wpa_driver_test_data::hostapd_addr_udp_set	src/drivers/driver_test.c	/^	int hostapd_addr_udp_set;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::ibss	src/drivers/driver_test.c	/^	int ibss;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::num_scanres	src/drivers/driver_test.c	/^	size_t num_scanres;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::off_channel_freq	src/drivers/driver_test.c	/^	unsigned int off_channel_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::own_addr	src/drivers/driver_test.c	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::own_socket_path	src/drivers/driver_test.c	/^	char *own_socket_path;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::p2p	src/drivers/driver_test.c	/^	struct p2p_data *p2p;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::p2p_data	file:	access:public
wpa_driver_test_data::pending_action_bssid	src/drivers/driver_test.c	/^	u8 pending_action_bssid[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_action_dst	src/drivers/driver_test.c	/^	u8 pending_action_dst[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_action_freq	src/drivers/driver_test.c	/^	unsigned int pending_action_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_action_no_cck	src/drivers/driver_test.c	/^	unsigned int pending_action_no_cck;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_action_src	src/drivers/driver_test.c	/^	u8 pending_action_src[ETH_ALEN];$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_action_tx	src/drivers/driver_test.c	/^	struct wpabuf *pending_action_tx;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::wpabuf	file:	access:public
wpa_driver_test_data::pending_listen_duration	src/drivers/driver_test.c	/^	unsigned int pending_listen_duration;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_listen_freq	src/drivers/driver_test.c	/^	unsigned int pending_listen_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::pending_p2p_scan	src/drivers/driver_test.c	/^	int pending_p2p_scan;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::probe_from	src/drivers/driver_test.c	/^	struct sockaddr *probe_from;$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::sockaddr	file:	access:public
wpa_driver_test_data::probe_from_len	src/drivers/driver_test.c	/^	socklen_t probe_from_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::probe_req_ie	src/drivers/driver_test.c	/^	u8 *probe_req_ie;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::probe_req_ie_len	src/drivers/driver_test.c	/^	size_t probe_req_ie_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::probe_req_report	src/drivers/driver_test.c	/^	int probe_req_report;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::probe_req_ssid	src/drivers/driver_test.c	/^	u8 probe_req_ssid[32];$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::probe_req_ssid_len	src/drivers/driver_test.c	/^	size_t probe_req_ssid_len;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::remain_on_channel_duration	src/drivers/driver_test.c	/^	unsigned int remain_on_channel_duration;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::remain_on_channel_freq	src/drivers/driver_test.c	/^	unsigned int remain_on_channel_freq;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::scanres	src/drivers/driver_test.c	/^	struct wpa_scan_res *scanres[MAX_SCAN_RESULTS];$/;"	m	struct:wpa_driver_test_data	typeref:struct:wpa_driver_test_data::wpa_scan_res	file:	access:public
wpa_driver_test_data::test_dir	src/drivers/driver_test.c	/^	char *test_dir;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::test_socket	src/drivers/driver_test.c	/^	int test_socket;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::udp_port	src/drivers/driver_test.c	/^	int udp_port;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_data::use_associnfo	src/drivers/driver_test.c	/^	int use_associnfo;$/;"	m	struct:wpa_driver_test_data	file:	access:public
wpa_driver_test_deauthenticate	src/drivers/driver_test.c	/^static int wpa_driver_test_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_test_deinit	src/drivers/driver_test.c	/^static void wpa_driver_test_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_deinit	src/drivers/driver_test.c	/^static void wpa_driver_test_deinit(void *priv);$/;"	p	file:	signature:(void *priv)
wpa_driver_test_disassoc	src/drivers/driver_test.c	/^static void wpa_driver_test_disassoc(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr *from, socklen_t fromlen)
wpa_driver_test_disassociate	src/drivers/driver_test.c	/^static int wpa_driver_test_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_test_eapol	src/drivers/driver_test.c	/^static void wpa_driver_test_eapol(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr *from, socklen_t fromlen, const u8 *data, size_t data_len)
wpa_driver_test_get_bssid	src/drivers/driver_test.c	/^static int wpa_driver_test_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_test_get_capa	src/drivers/driver_test.c	/^static int wpa_driver_test_get_capa(void *priv, struct wpa_driver_capa *capa)$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_test_get_hw_feature_data	src/drivers/driver_test.c	/^wpa_driver_test_get_hw_feature_data(void *priv, u16 *num_modes, u16 *flags)$/;"	f	file:	signature:(void *priv, u16 *num_modes, u16 *flags)
wpa_driver_test_get_interfaces	src/drivers/driver_test.c	/^wpa_driver_test_get_interfaces(void *global_priv)$/;"	f	file:	signature:(void *global_priv)
wpa_driver_test_get_mac_addr	src/drivers/driver_test.c	/^static const u8 * wpa_driver_test_get_mac_addr(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_get_scan_results2	src/drivers/driver_test.c	/^static struct wpa_scan_results * wpa_driver_test_get_scan_results2(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_get_ssid	src/drivers/driver_test.c	/^static int wpa_driver_test_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_test_global	src/drivers/driver_test.c	/^struct wpa_driver_test_global {$/;"	s	file:
wpa_driver_test_global::bss_add_used	src/drivers/driver_test.c	/^	int bss_add_used;$/;"	m	struct:wpa_driver_test_global	file:	access:public
wpa_driver_test_global::req_addr	src/drivers/driver_test.c	/^	u8 req_addr[ETH_ALEN];$/;"	m	struct:wpa_driver_test_global	file:	access:public
wpa_driver_test_global_deinit	src/drivers/driver_test.c	/^static void wpa_driver_test_global_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_global_init	src/drivers/driver_test.c	/^static void * wpa_driver_test_global_init(void)$/;"	f	file:	signature:(void)
wpa_driver_test_init2	src/drivers/driver_test.c	/^static void * wpa_driver_test_init2(void *ctx, const char *ifname,$/;"	f	file:	signature:(void *ctx, const char *ifname, void *global_priv)
wpa_driver_test_init_p2p	src/drivers/driver_test.c	/^static int wpa_driver_test_init_p2p(struct wpa_driver_test_data *drv)$/;"	f	file:	signature:(struct wpa_driver_test_data *drv)
wpa_driver_test_init_p2p	src/drivers/driver_test.c	/^static int wpa_driver_test_init_p2p(struct wpa_driver_test_data *drv);$/;"	p	file:	signature:(struct wpa_driver_test_data *drv)
wpa_driver_test_mlme	src/drivers/driver_test.c	/^static void wpa_driver_test_mlme(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr *from, socklen_t fromlen, const u8 *data, size_t data_len)
wpa_driver_test_mlme_setprotection	src/drivers/driver_test.c	/^static int wpa_driver_test_mlme_setprotection(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int protect_type, int key_type)
wpa_driver_test_ops	src/drivers/driver_test.c	/^const struct wpa_driver_ops wpa_driver_test_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_test_p2p_connect	src/drivers/driver_test.c	/^static int wpa_driver_test_p2p_connect(void *priv, const u8 *peer_addr,$/;"	f	file:	signature:(void *priv, const u8 *peer_addr, int wps_method, int go_intent, const u8 *own_interface_addr, unsigned int force_freq, int persistent_group)
wpa_driver_test_p2p_find	src/drivers/driver_test.c	/^static int wpa_driver_test_p2p_find(void *priv, unsigned int timeout, int type)$/;"	f	file:	signature:(void *priv, unsigned int timeout, int type)
wpa_driver_test_p2p_group_formation_failed	src/drivers/driver_test.c	/^static int wpa_driver_test_p2p_group_formation_failed(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_p2p_listen	src/drivers/driver_test.c	/^static int wpa_driver_test_p2p_listen(void *priv, unsigned int timeout)$/;"	f	file:	signature:(void *priv, unsigned int timeout)
wpa_driver_test_p2p_set_params	src/drivers/driver_test.c	/^static int wpa_driver_test_p2p_set_params(void *priv,$/;"	f	file:	signature:(void *priv, const struct p2p_params *params)
wpa_driver_test_p2p_stop_find	src/drivers/driver_test.c	/^static int wpa_driver_test_p2p_stop_find(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_test_poll	src/drivers/driver_test.c	/^static void wpa_driver_test_poll(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_test_probe_req_report	src/drivers/driver_test.c	/^static int wpa_driver_test_probe_req_report(void *priv, int report)$/;"	f	file:	signature:(void *priv, int report)
wpa_driver_test_receive_unix	src/drivers/driver_test.c	/^static void wpa_driver_test_receive_unix(int sock, void *eloop_ctx,$/;"	f	file:	signature:(int sock, void *eloop_ctx, void *sock_ctx)
wpa_driver_test_remain_on_channel	src/drivers/driver_test.c	/^static int wpa_driver_test_remain_on_channel(void *priv, unsigned int freq,$/;"	f	file:	signature:(void *priv, unsigned int freq, unsigned int duration)
wpa_driver_test_scan	src/drivers/driver_test.c	/^static int wpa_driver_test_scan(void *priv,$/;"	f	file:	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_test_scan_cmd	src/drivers/driver_test.c	/^static void wpa_driver_test_scan_cmd(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr *from, socklen_t fromlen, const u8 *data, size_t data_len)
wpa_driver_test_scan_timeout	src/drivers/driver_test.c	/^static void wpa_driver_test_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_test_scanresp	src/drivers/driver_test.c	/^static void wpa_driver_test_scanresp(struct wpa_driver_test_data *drv,$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, struct sockaddr *from, socklen_t fromlen, const char *data)
wpa_driver_test_send_action	src/drivers/driver_test.c	/^static int wpa_driver_test_send_action(void *priv, unsigned int freq,$/;"	f	file:	signature:(void *priv, unsigned int freq, unsigned int wait, const u8 *dst, const u8 *src, const u8 *bssid, const u8 *data, size_t data_len, int no_cck)
wpa_driver_test_send_disassoc	src/drivers/driver_test.c	/^static int wpa_driver_test_send_disassoc(struct wpa_driver_test_data *drv)$/;"	f	file:	signature:(struct wpa_driver_test_data *drv)
wpa_driver_test_send_eapol	src/drivers/driver_test.c	/^static int wpa_driver_test_send_eapol(void *priv, const u8 *dest, u16 proto,$/;"	f	file:	signature:(void *priv, const u8 *dest, u16 proto, const u8 *data, size_t data_len)
wpa_driver_test_send_mlme	src/drivers/driver_test.c	/^static int wpa_driver_test_send_mlme(void *priv, const u8 *data,$/;"	f	file:	signature:(void *priv, const u8 *data, size_t data_len)
wpa_driver_test_set_freq	src/drivers/driver_test.c	/^static int wpa_driver_test_set_freq(void *priv,$/;"	f	file:	signature:(void *priv, struct hostapd_freq_params *freq)
wpa_driver_test_set_key	src/drivers/driver_test.c	/^static int wpa_driver_test_set_key(const char *ifname, void *priv,$/;"	f	file:	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_test_set_param	src/drivers/driver_test.c	/^static int wpa_driver_test_set_param(void *priv, const char *param)$/;"	f	file:	signature:(void *priv, const char *param)
wpa_driver_test_wps_success_cb	src/drivers/driver_test.c	/^static int wpa_driver_test_wps_success_cb(void *priv, const u8 *peer_addr)$/;"	f	file:	signature:(void *priv, const u8 *peer_addr)
wpa_driver_update_mode	src/drivers/driver_test.c	/^static int wpa_driver_update_mode(struct wpa_driver_test_data *drv, int ap)$/;"	f	file:	signature:(struct wpa_driver_test_data *drv, int ap)
wpa_driver_wext_add_pmkid	src/drivers/driver_wext.c	/^static int wpa_driver_wext_add_pmkid(void *priv, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
wpa_driver_wext_add_scan_entry	src/drivers/driver_wext.c	/^static void wpa_driver_wext_add_scan_entry(struct wpa_scan_results *res,$/;"	f	file:	signature:(struct wpa_scan_results *res, struct wext_scan_data *data)
wpa_driver_wext_alternative_ifindex	src/drivers/driver_wext.c	/^int wpa_driver_wext_alternative_ifindex(struct wpa_driver_wext_data *drv,$/;"	f	signature:(struct wpa_driver_wext_data *drv, const char *ifname)
wpa_driver_wext_alternative_ifindex	src/drivers/driver_wext.h	/^int wpa_driver_wext_alternative_ifindex(struct wpa_driver_wext_data *drv,$/;"	p	signature:(struct wpa_driver_wext_data *drv, const char *ifname)
wpa_driver_wext_associate	src/drivers/driver_wext.c	/^int wpa_driver_wext_associate(void *priv,$/;"	f	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_wext_associate	src/drivers/driver_wext.h	/^int wpa_driver_wext_associate(void *priv,$/;"	p	signature:(void *priv, struct wpa_driver_associate_params *params)
wpa_driver_wext_auth_alg_fallback	src/drivers/driver_wext.c	/^wpa_driver_wext_auth_alg_fallback(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, struct wpa_driver_associate_params *params)
wpa_driver_wext_cipher2wext	src/drivers/driver_wext.c	/^int wpa_driver_wext_cipher2wext(int cipher)$/;"	f	signature:(int cipher)
wpa_driver_wext_cipher2wext	src/drivers/driver_wext.h	/^int wpa_driver_wext_cipher2wext(int cipher);$/;"	p	signature:(int cipher)
wpa_driver_wext_data	src/drivers/driver_wext.h	/^struct wpa_driver_wext_data {$/;"	s
wpa_driver_wext_data::assoc_req_ies	src/drivers/driver_wext.h	/^	u8 *assoc_req_ies;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::assoc_req_ies_len	src/drivers/driver_wext.h	/^	size_t assoc_req_ies_len;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::assoc_resp_ies	src/drivers/driver_wext.h	/^	u8 *assoc_resp_ies;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::assoc_resp_ies_len	src/drivers/driver_wext.h	/^	size_t assoc_resp_ies_len;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::auth_alg_fallback	src/drivers/driver_wext.h	/^	int auth_alg_fallback;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::capa	src/drivers/driver_wext.h	/^	struct wpa_driver_capa capa;$/;"	m	struct:wpa_driver_wext_data	typeref:struct:wpa_driver_wext_data::wpa_driver_capa	access:public
wpa_driver_wext_data::cfg80211	src/drivers/driver_wext.h	/^	int cfg80211; \/* whether driver is using cfg80211 *\/$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::ctx	src/drivers/driver_wext.h	/^	void *ctx;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::has_capability	src/drivers/driver_wext.h	/^	int has_capability;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::if_disabled	src/drivers/driver_wext.h	/^	int if_disabled;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::if_removed	src/drivers/driver_wext.h	/^	int if_removed;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::ifindex	src/drivers/driver_wext.h	/^	int ifindex;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::ifindex2	src/drivers/driver_wext.h	/^	int ifindex2;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::ifname	src/drivers/driver_wext.h	/^	char ifname[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::ioctl_sock	src/drivers/driver_wext.h	/^	int ioctl_sock;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::max_level	src/drivers/driver_wext.h	/^	u8 max_level;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::mlme_sock	src/drivers/driver_wext.h	/^	int mlme_sock;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::mlmedev	src/drivers/driver_wext.h	/^	char mlmedev[IFNAMSIZ + 1];$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::netlink	src/drivers/driver_wext.h	/^	struct netlink_data *netlink;$/;"	m	struct:wpa_driver_wext_data	typeref:struct:wpa_driver_wext_data::netlink_data	access:public
wpa_driver_wext_data::operstate	src/drivers/driver_wext.h	/^	int operstate;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::phyname	src/drivers/driver_wext.h	/^	char phyname[32];$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::rfkill	src/drivers/driver_wext.h	/^	struct rfkill_data *rfkill;$/;"	m	struct:wpa_driver_wext_data	typeref:struct:wpa_driver_wext_data::rfkill_data	access:public
wpa_driver_wext_data::scan_complete_events	src/drivers/driver_wext.h	/^	int scan_complete_events;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::use_crypt	src/drivers/driver_wext.h	/^	int use_crypt;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_data::we_version_compiled	src/drivers/driver_wext.h	/^	int we_version_compiled;$/;"	m	struct:wpa_driver_wext_data	access:public
wpa_driver_wext_deauthenticate	src/drivers/driver_wext.c	/^static int wpa_driver_wext_deauthenticate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_wext_deinit	src/drivers/driver_wext.c	/^void wpa_driver_wext_deinit(void *priv)$/;"	f	signature:(void *priv)
wpa_driver_wext_deinit	src/drivers/driver_wext.h	/^void wpa_driver_wext_deinit(void *priv);$/;"	p	signature:(void *priv)
wpa_driver_wext_disassociate	src/drivers/driver_wext.c	/^static int wpa_driver_wext_disassociate(void *priv, const u8 *addr,$/;"	f	file:	signature:(void *priv, const u8 *addr, int reason_code)
wpa_driver_wext_disconnect	src/drivers/driver_wext.c	/^static void wpa_driver_wext_disconnect(struct wpa_driver_wext_data *drv)$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_disconnect	src/drivers/driver_wext.c	/^static void wpa_driver_wext_disconnect(struct wpa_driver_wext_data *drv);$/;"	p	file:	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_event_assoc_ies	src/drivers/driver_wext.c	/^static void wpa_driver_wext_event_assoc_ies(struct wpa_driver_wext_data *drv)$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_event_link	src/drivers/driver_wext.c	/^static void wpa_driver_wext_event_link(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, char *buf, size_t len, int del)
wpa_driver_wext_event_rtm_dellink	src/drivers/driver_wext.c	/^static void wpa_driver_wext_event_rtm_dellink(void *ctx, struct ifinfomsg *ifi,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
wpa_driver_wext_event_rtm_newlink	src/drivers/driver_wext.c	/^static void wpa_driver_wext_event_rtm_newlink(void *ctx, struct ifinfomsg *ifi,$/;"	f	file:	signature:(void *ctx, struct ifinfomsg *ifi, u8 *buf, size_t len)
wpa_driver_wext_event_wireless	src/drivers/driver_wext.c	/^static void wpa_driver_wext_event_wireless(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, char *data, int len)
wpa_driver_wext_event_wireless_assocreqie	src/drivers/driver_wext.c	/^static int wpa_driver_wext_event_wireless_assocreqie($/;"	f	file:	signature:( struct wpa_driver_wext_data *drv, const char *ev, int len)
wpa_driver_wext_event_wireless_assocrespie	src/drivers/driver_wext.c	/^static int wpa_driver_wext_event_wireless_assocrespie($/;"	f	file:	signature:( struct wpa_driver_wext_data *drv, const char *ev, int len)
wpa_driver_wext_event_wireless_custom	src/drivers/driver_wext.c	/^wpa_driver_wext_event_wireless_custom(void *ctx, char *custom)$/;"	f	file:	signature:(void *ctx, char *custom)
wpa_driver_wext_event_wireless_michaelmicfailure	src/drivers/driver_wext.c	/^static int wpa_driver_wext_event_wireless_michaelmicfailure($/;"	f	file:	signature:( void *ctx, const char *ev, size_t len)
wpa_driver_wext_event_wireless_pmkidcand	src/drivers/driver_wext.c	/^static int wpa_driver_wext_event_wireless_pmkidcand($/;"	f	file:	signature:( struct wpa_driver_wext_data *drv, const char *ev, size_t len)
wpa_driver_wext_finish_drv_init	src/drivers/driver_wext.c	/^static int wpa_driver_wext_finish_drv_init(struct wpa_driver_wext_data *drv)$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_finish_drv_init	src/drivers/driver_wext.c	/^static int wpa_driver_wext_finish_drv_init(struct wpa_driver_wext_data *drv);$/;"	p	file:	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_flush_pmkid	src/drivers/driver_wext.c	/^static int wpa_driver_wext_flush_pmkid(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_wext_flush_pmkid	src/drivers/driver_wext.c	/^static int wpa_driver_wext_flush_pmkid(void *priv);$/;"	p	file:	signature:(void *priv)
wpa_driver_wext_get_bssid	src/drivers/driver_wext.c	/^int wpa_driver_wext_get_bssid(void *priv, u8 *bssid)$/;"	f	signature:(void *priv, u8 *bssid)
wpa_driver_wext_get_bssid	src/drivers/driver_wext.h	/^int wpa_driver_wext_get_bssid(void *priv, u8 *bssid);$/;"	p	signature:(void *priv, u8 *bssid)
wpa_driver_wext_get_capa	src/drivers/driver_wext.c	/^int wpa_driver_wext_get_capa(void *priv, struct wpa_driver_capa *capa)$/;"	f	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_wext_get_capa	src/drivers/driver_wext.h	/^int wpa_driver_wext_get_capa(void *priv, struct wpa_driver_capa *capa);$/;"	p	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_wext_get_range	src/drivers/driver_wext.c	/^static int wpa_driver_wext_get_range(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_wext_get_range	src/drivers/driver_wext.c	/^static int wpa_driver_wext_get_range(void *priv);$/;"	p	file:	signature:(void *priv)
wpa_driver_wext_get_scan_results	src/drivers/driver_wext.c	/^struct wpa_scan_results * wpa_driver_wext_get_scan_results(void *priv)$/;"	f	signature:(void *priv)
wpa_driver_wext_get_scan_results	src/drivers/driver_wext.h	/^struct wpa_scan_results * wpa_driver_wext_get_scan_results(void *priv);$/;"	p	signature:(void *priv)
wpa_driver_wext_get_ssid	src/drivers/driver_wext.c	/^int wpa_driver_wext_get_ssid(void *priv, u8 *ssid)$/;"	f	signature:(void *priv, u8 *ssid)
wpa_driver_wext_get_ssid	src/drivers/driver_wext.h	/^int wpa_driver_wext_get_ssid(void *priv, u8 *ssid);$/;"	p	signature:(void *priv, u8 *ssid)
wpa_driver_wext_get_version	src/drivers/driver_wext.c	/^int wpa_driver_wext_get_version(struct wpa_driver_wext_data *drv)$/;"	f	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_get_version	src/drivers/driver_wext.h	/^int wpa_driver_wext_get_version(struct wpa_driver_wext_data *drv);$/;"	p	signature:(struct wpa_driver_wext_data *drv)
wpa_driver_wext_giwscan	src/drivers/driver_wext.c	/^static u8 * wpa_driver_wext_giwscan(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, size_t *len)
wpa_driver_wext_init	src/drivers/driver_wext.c	/^void * wpa_driver_wext_init(void *ctx, const char *ifname)$/;"	f	signature:(void *ctx, const char *ifname)
wpa_driver_wext_init	src/drivers/driver_wext.h	/^void * wpa_driver_wext_init(void *ctx, const char *ifname);$/;"	p	signature:(void *ctx, const char *ifname)
wpa_driver_wext_keymgmt2wext	src/drivers/driver_wext.c	/^int wpa_driver_wext_keymgmt2wext(int keymgmt)$/;"	f	signature:(int keymgmt)
wpa_driver_wext_keymgmt2wext	src/drivers/driver_wext.h	/^int wpa_driver_wext_keymgmt2wext(int keymgmt);$/;"	p	signature:(int keymgmt)
wpa_driver_wext_mlme	src/drivers/driver_wext.c	/^static int wpa_driver_wext_mlme(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, const u8 *addr, int cmd, int reason_code)
wpa_driver_wext_ops	src/drivers/driver_wext.c	/^const struct wpa_driver_ops wpa_driver_wext_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_wext_own_ifindex	src/drivers/driver_wext.c	/^static int wpa_driver_wext_own_ifindex(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, int ifindex, u8 *buf, size_t len)
wpa_driver_wext_own_ifname	src/drivers/driver_wext.c	/^static int wpa_driver_wext_own_ifname(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, u8 *buf, size_t len)
wpa_driver_wext_pmksa	src/drivers/driver_wext.c	/^static int wpa_driver_wext_pmksa(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, u32 cmd, const u8 *bssid, const u8 *pmkid)
wpa_driver_wext_remove_pmkid	src/drivers/driver_wext.c	/^static int wpa_driver_wext_remove_pmkid(void *priv, const u8 *bssid,$/;"	f	file:	signature:(void *priv, const u8 *bssid, const u8 *pmkid)
wpa_driver_wext_rfkill_blocked	src/drivers/driver_wext.c	/^static void wpa_driver_wext_rfkill_blocked(void *ctx)$/;"	f	file:	signature:(void *ctx)
wpa_driver_wext_rfkill_unblocked	src/drivers/driver_wext.c	/^static void wpa_driver_wext_rfkill_unblocked(void *ctx)$/;"	f	file:	signature:(void *ctx)
wpa_driver_wext_scan	src/drivers/driver_wext.c	/^int wpa_driver_wext_scan(void *priv, struct wpa_driver_scan_params *params)$/;"	f	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_wext_scan	src/drivers/driver_wext.h	/^int wpa_driver_wext_scan(void *priv, struct wpa_driver_scan_params *params);$/;"	p	signature:(void *priv, struct wpa_driver_scan_params *params)
wpa_driver_wext_scan_timeout	src/drivers/driver_wext.c	/^void wpa_driver_wext_scan_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_wext_scan_timeout	src/drivers/driver_wext.h	/^void wpa_driver_wext_scan_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_wext_send_rfkill	src/drivers/driver_wext.c	/^static void wpa_driver_wext_send_rfkill(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_driver_wext_set_auth_alg	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_auth_alg(void *priv, int auth_alg)$/;"	f	file:	signature:(void *priv, int auth_alg)
wpa_driver_wext_set_auth_alg	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_auth_alg(void *priv, int auth_alg);$/;"	p	file:	signature:(void *priv, int auth_alg)
wpa_driver_wext_set_auth_param	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_auth_param(struct wpa_driver_wext_data *drv,$/;"	f	signature:(struct wpa_driver_wext_data *drv, int idx, u32 value)
wpa_driver_wext_set_auth_param	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_auth_param(struct wpa_driver_wext_data *drv,$/;"	p	signature:(struct wpa_driver_wext_data *drv, int idx, u32 value)
wpa_driver_wext_set_bssid	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_bssid(void *priv, const u8 *bssid)$/;"	f	signature:(void *priv, const u8 *bssid)
wpa_driver_wext_set_bssid	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_bssid(void *priv, const u8 *bssid);$/;"	p	signature:(void *priv, const u8 *bssid)
wpa_driver_wext_set_countermeasures	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_countermeasures(void *priv,$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_wext_set_drop_unencrypted	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_drop_unencrypted(void *priv,$/;"	f	file:	signature:(void *priv, int enabled)
wpa_driver_wext_set_freq	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_freq(void *priv, int freq)$/;"	f	signature:(void *priv, int freq)
wpa_driver_wext_set_freq	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_freq(void *priv, int freq);$/;"	p	signature:(void *priv, int freq)
wpa_driver_wext_set_gen_ie	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_gen_ie(void *priv, const u8 *ie,$/;"	f	file:	signature:(void *priv, const u8 *ie, size_t ie_len)
wpa_driver_wext_set_key	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_key(const char *ifname, void *priv, enum wpa_alg alg,$/;"	f	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_wext_set_key	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_key(const char *ifname, void *priv, enum wpa_alg alg,$/;"	p	signature:(const char *ifname, void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_wext_set_key_ext	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_key_ext(void *priv, enum wpa_alg alg,$/;"	f	file:	signature:(void *priv, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_driver_wext_set_mode	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_mode(void *priv, int mode)$/;"	f	signature:(void *priv, int mode)
wpa_driver_wext_set_mode	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_mode(void *priv, int mode);$/;"	p	signature:(void *priv, int mode)
wpa_driver_wext_set_operstate	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_operstate(void *priv, int state)$/;"	f	signature:(void *priv, int state)
wpa_driver_wext_set_operstate	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_operstate(void *priv, int state);$/;"	p	signature:(void *priv, int state)
wpa_driver_wext_set_psk	src/drivers/driver_wext.c	/^static int wpa_driver_wext_set_psk(struct wpa_driver_wext_data *drv,$/;"	f	file:	signature:(struct wpa_driver_wext_data *drv, const u8 *psk)
wpa_driver_wext_set_ssid	src/drivers/driver_wext.c	/^int wpa_driver_wext_set_ssid(void *priv, const u8 *ssid, size_t ssid_len)$/;"	f	signature:(void *priv, const u8 *ssid, size_t ssid_len)
wpa_driver_wext_set_ssid	src/drivers/driver_wext.h	/^int wpa_driver_wext_set_ssid(void *priv, const u8 *ssid, size_t ssid_len);$/;"	p	signature:(void *priv, const u8 *ssid, size_t ssid_len)
wpa_driver_wired_data	src/drivers/driver_wired.c	/^struct wpa_driver_wired_data {$/;"	s	file:
wpa_driver_wired_data::ctx	src/drivers/driver_wired.c	/^	void *ctx;                  \/\/ 指向父结构hostapd_data $/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::dhcp_sock	src/drivers/driver_wired.c	/^	int dhcp_sock; \/* socket for dhcp packets *\/$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::iff_allmulti	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::iff_up	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::ifname	src/drivers/driver_wired.c	/^	char ifname[IFNAMSIZ + 1];  \/\/ 接口名$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::membership	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::multi	src/drivers/driver_wired.c	/^	int membership, multi, iff_allmulti, iff_up;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::pf_sock	src/drivers/driver_wired.c	/^	int pf_sock;$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::sock	src/drivers/driver_wired.c	/^	int sock; \/* raw packet socket for driver access *\/$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_data::use_pae_group_addr	src/drivers/driver_wired.c	/^	int use_pae_group_addr;     \/\/ 标志位，是否使用多播地址$/;"	m	struct:wpa_driver_wired_data	file:	access:public
wpa_driver_wired_deinit	src/drivers/driver_wired.c	/^static void wpa_driver_wired_deinit(void *priv)$/;"	f	file:	signature:(void *priv)
wpa_driver_wired_get_bssid	src/drivers/driver_wired.c	/^static int wpa_driver_wired_get_bssid(void *priv, u8 *bssid)$/;"	f	file:	signature:(void *priv, u8 *bssid)
wpa_driver_wired_get_capa	src/drivers/driver_wired.c	/^static int wpa_driver_wired_get_capa(void *priv, struct wpa_driver_capa *capa)$/;"	f	file:	signature:(void *priv, struct wpa_driver_capa *capa)
wpa_driver_wired_get_ifflags	src/drivers/driver_wired.c	/^static int wpa_driver_wired_get_ifflags(const char *ifname, int *flags)$/;"	f	file:	signature:(const char *ifname, int *flags)
wpa_driver_wired_get_ssid	src/drivers/driver_wired.c	/^static int wpa_driver_wired_get_ssid(void *priv, u8 *ssid)$/;"	f	file:	signature:(void *priv, u8 *ssid)
wpa_driver_wired_init	src/drivers/driver_wired.c	/^static void * wpa_driver_wired_init(void *ctx, const char *ifname)$/;"	f	file:	signature:(void *ctx, const char *ifname)
wpa_driver_wired_multi	src/drivers/driver_wired.c	/^static int wpa_driver_wired_multi(const char *ifname, const u8 *addr, int add)$/;"	f	file:	signature:(const char *ifname, const u8 *addr, int add)
wpa_driver_wired_ops	src/drivers/driver_wired.c	/^const struct wpa_driver_ops wpa_driver_wired_ops = {$/;"	v	typeref:struct:wpa_driver_ops
wpa_driver_wired_set_ifflags	src/drivers/driver_wired.c	/^static int wpa_driver_wired_set_ifflags(const char *ifname, int flags)$/;"	f	file:	signature:(const char *ifname, int flags)
wpa_drivers	src/drivers/driver_privsep.c	/^struct wpa_driver_ops *wpa_drivers[] =$/;"	v	typeref:struct:wpa_driver_ops
wpa_drivers	src/drivers/drivers.c	/^struct wpa_driver_ops *wpa_drivers[] =$/;"	v	typeref:struct:wpa_driver_ops
wpa_eapol_ie_parse	src/ap/wpa_auth_ie.h	/^struct wpa_eapol_ie_parse {$/;"	s
wpa_eapol_ie_parse	src/rsn_supp/wpa_ie.h	/^struct wpa_eapol_ie_parse {$/;"	s
wpa_eapol_ie_parse::error	src/ap/wpa_auth_ie.h	/^	const u8 *error;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::error	src/rsn_supp/wpa_ie.h	/^	const u8 *error;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::error_len	src/ap/wpa_auth_ie.h	/^	size_t error_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::error_len	src/rsn_supp/wpa_ie.h	/^	size_t error_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ext_capab	src/rsn_supp/wpa_ie.h	/^	const u8 *ext_capab;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ext_capab_len	src/rsn_supp/wpa_ie.h	/^	size_t ext_capab_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ext_supp_rates	src/rsn_supp/wpa_ie.h	/^	const u8 *ext_supp_rates;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ext_supp_rates_len	src/rsn_supp/wpa_ie.h	/^	size_t ext_supp_rates_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ftie	src/ap/wpa_auth_ie.h	/^	const u8 *ftie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ftie	src/rsn_supp/wpa_ie.h	/^	const u8 *ftie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ftie_len	src/ap/wpa_auth_ie.h	/^	size_t ftie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::ftie_len	src/rsn_supp/wpa_ie.h	/^	size_t ftie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::gtk	src/ap/wpa_auth_ie.h	/^	const u8 *gtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::gtk	src/rsn_supp/wpa_ie.h	/^	const u8 *gtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::gtk_len	src/ap/wpa_auth_ie.h	/^	size_t gtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::gtk_len	src/rsn_supp/wpa_ie.h	/^	size_t gtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::igtk	src/ap/wpa_auth_ie.h	/^	const u8 *igtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::igtk	src/rsn_supp/wpa_ie.h	/^	const u8 *igtk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::igtk_len	src/ap/wpa_auth_ie.h	/^	size_t igtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::igtk_len	src/rsn_supp/wpa_ie.h	/^	size_t igtk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::key_lifetime	src/rsn_supp/wpa_ie.h	/^	const u8 *key_lifetime;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::lifetime	src/ap/wpa_auth_ie.h	/^	const u8 *lifetime;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::lifetime	src/rsn_supp/wpa_ie.h	/^	const u8 *lifetime;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::lifetime_len	src/ap/wpa_auth_ie.h	/^	size_t lifetime_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::lifetime_len	src/rsn_supp/wpa_ie.h	/^	size_t lifetime_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::lnkid	src/rsn_supp/wpa_ie.h	/^	const u8 *lnkid;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::lnkid_len	src/rsn_supp/wpa_ie.h	/^	size_t lnkid_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mac_addr	src/ap/wpa_auth_ie.h	/^	const u8 *mac_addr;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mac_addr	src/rsn_supp/wpa_ie.h	/^	const u8 *mac_addr;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mac_addr_len	src/ap/wpa_auth_ie.h	/^	size_t mac_addr_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mac_addr_len	src/rsn_supp/wpa_ie.h	/^	size_t mac_addr_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mdie	src/ap/wpa_auth_ie.h	/^	const u8 *mdie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mdie	src/rsn_supp/wpa_ie.h	/^	const u8 *mdie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mdie_len	src/ap/wpa_auth_ie.h	/^	size_t mdie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::mdie_len	src/rsn_supp/wpa_ie.h	/^	size_t mdie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::nonce	src/ap/wpa_auth_ie.h	/^	const u8 *nonce;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::nonce	src/rsn_supp/wpa_ie.h	/^	const u8 *nonce;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::nonce_len	src/ap/wpa_auth_ie.h	/^	size_t nonce_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::nonce_len	src/rsn_supp/wpa_ie.h	/^	size_t nonce_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::pmkid	src/ap/wpa_auth_ie.h	/^	const u8 *pmkid;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::pmkid	src/rsn_supp/wpa_ie.h	/^	const u8 *pmkid;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::reassoc_deadline	src/rsn_supp/wpa_ie.h	/^	const u8 *reassoc_deadline;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::rsn_ie	src/ap/wpa_auth_ie.h	/^	const u8 *rsn_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::rsn_ie	src/rsn_supp/wpa_ie.h	/^	const u8 *rsn_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::rsn_ie_len	src/ap/wpa_auth_ie.h	/^	size_t rsn_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::rsn_ie_len	src/rsn_supp/wpa_ie.h	/^	size_t rsn_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::smk	src/ap/wpa_auth_ie.h	/^	const u8 *smk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::smk	src/rsn_supp/wpa_ie.h	/^	const u8 *smk;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::smk_len	src/ap/wpa_auth_ie.h	/^	size_t smk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::smk_len	src/rsn_supp/wpa_ie.h	/^	size_t smk_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::supp_rates	src/rsn_supp/wpa_ie.h	/^	const u8 *supp_rates;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::supp_rates_len	src/rsn_supp/wpa_ie.h	/^	size_t supp_rates_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::wpa_ie	src/ap/wpa_auth_ie.h	/^	const u8 *wpa_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::wpa_ie	src/rsn_supp/wpa_ie.h	/^	const u8 *wpa_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::wpa_ie_len	src/ap/wpa_auth_ie.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_ie_parse::wpa_ie_len	src/rsn_supp/wpa_ie.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_eapol_key	src/common/wpa_common.h	/^struct wpa_eapol_key {$/;"	s
wpa_eapol_key::key_data_length	src/common/wpa_common.h	/^	u8 key_data_length[2]; \/* big endian *\/$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_id	src/common/wpa_common.h	/^	u8 key_id[8]; \/* Reserved in IEEE 802.11i\/RSN *\/$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_info	src/common/wpa_common.h	/^	u8 key_info[2]; \/* big endian *\/$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_iv	src/common/wpa_common.h	/^	u8 key_iv[16];$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_length	src/common/wpa_common.h	/^	u8 key_length[2]; \/* big endian *\/$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_mic	src/common/wpa_common.h	/^	u8 key_mic[16];$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_nonce	src/common/wpa_common.h	/^	u8 key_nonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::key_rsc	src/common/wpa_common.h	/^	u8 key_rsc[WPA_KEY_RSC_LEN];$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::replay_counter	src/common/wpa_common.h	/^	u8 replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key::type	src/common/wpa_common.h	/^	u8 type;$/;"	m	struct:wpa_eapol_key	access:public
wpa_eapol_key_dump	src/rsn_supp/wpa.c	/^static void wpa_eapol_key_dump(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_eapol_key *key)
wpa_eapol_key_mic	src/common/wpa_common.c	/^int wpa_eapol_key_mic(const u8 *key, int ver, const u8 *buf, size_t len,$/;"	f	signature:(const u8 *key, int ver, const u8 *buf, size_t len, u8 *mic)
wpa_eapol_key_mic	src/common/wpa_common.h	/^int wpa_eapol_key_mic(const u8 *key, int ver, const u8 *buf, size_t len,$/;"	p	signature:(const u8 *key, int ver, const u8 *buf, size_t len, u8 *mic)
wpa_eapol_key_send	src/rsn_supp/wpa.c	/^void wpa_eapol_key_send(struct wpa_sm *sm, const u8 *kck,$/;"	f	signature:(struct wpa_sm *sm, const u8 *kck, int ver, const u8 *dest, u16 proto, u8 *msg, size_t msg_len, u8 *key_mic)
wpa_eapol_key_send	src/rsn_supp/wpa_i.h	/^void wpa_eapol_key_send(struct wpa_sm *sm, const u8 *kck,$/;"	p	signature:(struct wpa_sm *sm, const u8 *kck, int ver, const u8 *dest, u16 proto, u8 *msg, size_t msg_len, u8 *key_mic)
wpa_eapol_variable	src/ap/wpa_auth.h	/^} wpa_eapol_variable;$/;"	t	typeref:enum:__anon6
wpa_event	src/ap/wpa_auth.h	/^} wpa_event;$/;"	t	typeref:enum:__anon8
wpa_event_data	src/drivers/driver.h	/^union wpa_event_data {$/;"	u
wpa_event_data::assoc_info	src/drivers/driver.h	/^	struct assoc_info {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::assoc_info	src/drivers/driver.h	/^	} assoc_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::beacon_ies	src/drivers/driver.h	/^		const u8 *beacon_ies;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::beacon_ies_len	src/drivers/driver.h	/^		size_t beacon_ies_len;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::freq	src/drivers/driver.h	/^		unsigned int freq;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::reassoc	src/drivers/driver.h	/^		int reassoc;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::req_ies	src/drivers/driver.h	/^		const u8 *req_ies;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::req_ies_len	src/drivers/driver.h	/^		size_t req_ies_len;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::resp_ies	src/drivers/driver.h	/^		const u8 *resp_ies;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_info::resp_ies_len	src/drivers/driver.h	/^		size_t resp_ies_len;$/;"	m	struct:wpa_event_data::assoc_info	access:public
wpa_event_data::assoc_reject	src/drivers/driver.h	/^	struct assoc_reject {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::assoc_reject	src/drivers/driver.h	/^	} assoc_reject;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::assoc_reject	access:public
wpa_event_data::assoc_reject::bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
wpa_event_data::assoc_reject::resp_ies	src/drivers/driver.h	/^		const u8 *resp_ies;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
wpa_event_data::assoc_reject::resp_ies_len	src/drivers/driver.h	/^		size_t resp_ies_len;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
wpa_event_data::assoc_reject::status_code	src/drivers/driver.h	/^		u16 status_code;$/;"	m	struct:wpa_event_data::assoc_reject	access:public
wpa_event_data::auth	src/drivers/driver.h	/^	} auth;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info	src/drivers/driver.h	/^	struct auth_info {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::auth_info::auth_transaction	src/drivers/driver.h	/^		u16 auth_transaction;$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info::auth_type	src/drivers/driver.h	/^		u16 auth_type;$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info::bssid	src/drivers/driver.h	/^		u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info::ies	src/drivers/driver.h	/^		const u8 *ies;$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info::ies_len	src/drivers/driver.h	/^		size_t ies_len;$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info::peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::auth_info::status_code	src/drivers/driver.h	/^		u16 status_code;$/;"	m	struct:wpa_event_data::auth_info	access:public
wpa_event_data::best_chan	src/drivers/driver.h	/^	} best_chan;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::best_channel	access:public
wpa_event_data::best_channel	src/drivers/driver.h	/^	struct best_channel {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::best_channel::freq_24	src/drivers/driver.h	/^		int freq_24;$/;"	m	struct:wpa_event_data::best_channel	access:public
wpa_event_data::best_channel::freq_5	src/drivers/driver.h	/^		int freq_5;$/;"	m	struct:wpa_event_data::best_channel	access:public
wpa_event_data::best_channel::freq_overall	src/drivers/driver.h	/^		int freq_overall;$/;"	m	struct:wpa_event_data::best_channel	access:public
wpa_event_data::client_poll	src/drivers/driver.h	/^	struct client_poll {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::client_poll	src/drivers/driver.h	/^	} client_poll;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::client_poll	access:public
wpa_event_data::client_poll::addr	src/drivers/driver.h	/^		u8 addr[ETH_ALEN];$/;"	m	struct:wpa_event_data::client_poll	access:public
wpa_event_data::deauth_info	src/drivers/driver.h	/^	struct deauth_info {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::deauth_info	src/drivers/driver.h	/^	} deauth_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::deauth_info	access:public
wpa_event_data::deauth_info::addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::deauth_info	access:public
wpa_event_data::deauth_info::ie	src/drivers/driver.h	/^		const u8 *ie;$/;"	m	struct:wpa_event_data::deauth_info	access:public
wpa_event_data::deauth_info::ie_len	src/drivers/driver.h	/^		size_t ie_len;$/;"	m	struct:wpa_event_data::deauth_info	access:public
wpa_event_data::deauth_info::reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::deauth_info	access:public
wpa_event_data::disassoc_info	src/drivers/driver.h	/^	struct disassoc_info {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::disassoc_info	src/drivers/driver.h	/^	} disassoc_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::disassoc_info	access:public
wpa_event_data::disassoc_info::addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
wpa_event_data::disassoc_info::ie	src/drivers/driver.h	/^		const u8 *ie;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
wpa_event_data::disassoc_info::ie_len	src/drivers/driver.h	/^		size_t ie_len;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
wpa_event_data::disassoc_info::reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::disassoc_info	access:public
wpa_event_data::driver_gtk_rekey	src/drivers/driver.h	/^	struct driver_gtk_rekey {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::driver_gtk_rekey	src/drivers/driver.h	/^	} driver_gtk_rekey;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::driver_gtk_rekey	access:public
wpa_event_data::driver_gtk_rekey::bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::driver_gtk_rekey	access:public
wpa_event_data::driver_gtk_rekey::replay_ctr	src/drivers/driver.h	/^		const u8 *replay_ctr;$/;"	m	struct:wpa_event_data::driver_gtk_rekey	access:public
wpa_event_data::eapol_rx	src/drivers/driver.h	/^	struct eapol_rx {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::eapol_rx	src/drivers/driver.h	/^	} eapol_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::eapol_rx	access:public
wpa_event_data::eapol_rx::data	src/drivers/driver.h	/^		const u8 *data; \/\/ 帧数据部分$/;"	m	struct:wpa_event_data::eapol_rx	access:public
wpa_event_data::eapol_rx::data_len	src/drivers/driver.h	/^		size_t data_len;\/\/ 帧数据长度 $/;"	m	struct:wpa_event_data::eapol_rx	access:public
wpa_event_data::eapol_rx::src	src/drivers/driver.h	/^		const u8 *src;  \/\/ 帧源mac$/;"	m	struct:wpa_event_data::eapol_rx	access:public
wpa_event_data::ft_ies	src/drivers/driver.h	/^	struct ft_ies {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::ft_ies	src/drivers/driver.h	/^	} ft_ies;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_ies::ft_action	src/drivers/driver.h	/^		int ft_action;$/;"	m	struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_ies::ies	src/drivers/driver.h	/^		const u8 *ies;$/;"	m	struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_ies::ies_len	src/drivers/driver.h	/^		size_t ies_len;$/;"	m	struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_ies::ric_ies	src/drivers/driver.h	/^		const u8 *ric_ies;$/;"	m	struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_ies::ric_ies_len	src/drivers/driver.h	/^		size_t ric_ies_len;$/;"	m	struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_ies::target_ap	src/drivers/driver.h	/^		u8 target_ap[ETH_ALEN];$/;"	m	struct:wpa_event_data::ft_ies	access:public
wpa_event_data::ft_rrb_rx	src/drivers/driver.h	/^	struct ft_rrb_rx {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::ft_rrb_rx	src/drivers/driver.h	/^	} ft_rrb_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ft_rrb_rx	access:public
wpa_event_data::ft_rrb_rx::data	src/drivers/driver.h	/^		const u8 *data;$/;"	m	struct:wpa_event_data::ft_rrb_rx	access:public
wpa_event_data::ft_rrb_rx::data_len	src/drivers/driver.h	/^		size_t data_len;$/;"	m	struct:wpa_event_data::ft_rrb_rx	access:public
wpa_event_data::ft_rrb_rx::src	src/drivers/driver.h	/^		const u8 *src;$/;"	m	struct:wpa_event_data::ft_rrb_rx	access:public
wpa_event_data::ibss_peer_lost	src/drivers/driver.h	/^	struct ibss_peer_lost {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::ibss_peer_lost	src/drivers/driver.h	/^	} ibss_peer_lost;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ibss_peer_lost	access:public
wpa_event_data::ibss_peer_lost::peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::ibss_peer_lost	access:public
wpa_event_data::ibss_rsn_start	src/drivers/driver.h	/^	struct ibss_rsn_start {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::ibss_rsn_start	src/drivers/driver.h	/^	} ibss_rsn_start;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::ibss_rsn_start	access:public
wpa_event_data::ibss_rsn_start::peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::ibss_rsn_start	access:public
wpa_event_data::interface_status	src/drivers/driver.h	/^	struct interface_status {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::interface_status	src/drivers/driver.h	/^	} interface_status;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::interface_status	access:public
wpa_event_data::interface_status::EVENT_INTERFACE_ADDED	src/drivers/driver.h	/^			EVENT_INTERFACE_ADDED, EVENT_INTERFACE_REMOVED$/;"	e	enum:wpa_event_data::interface_status::__anon90
wpa_event_data::interface_status::EVENT_INTERFACE_REMOVED	src/drivers/driver.h	/^			EVENT_INTERFACE_ADDED, EVENT_INTERFACE_REMOVED$/;"	e	enum:wpa_event_data::interface_status::__anon90
wpa_event_data::interface_status::ievent	src/drivers/driver.h	/^		} ievent;$/;"	m	struct:wpa_event_data::interface_status	typeref:enum:wpa_event_data::interface_status::__anon90	access:public
wpa_event_data::interface_status::ifname	src/drivers/driver.h	/^		char ifname[100];$/;"	m	struct:wpa_event_data::interface_status	access:public
wpa_event_data::low_ack	src/drivers/driver.h	/^	struct low_ack {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::low_ack	src/drivers/driver.h	/^	} low_ack;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::low_ack	access:public
wpa_event_data::low_ack::addr	src/drivers/driver.h	/^		u8 addr[ETH_ALEN];$/;"	m	struct:wpa_event_data::low_ack	access:public
wpa_event_data::michael_mic_failure	src/drivers/driver.h	/^	struct michael_mic_failure {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::michael_mic_failure	src/drivers/driver.h	/^	} michael_mic_failure;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::michael_mic_failure	access:public
wpa_event_data::michael_mic_failure::src	src/drivers/driver.h	/^		const u8 *src;$/;"	m	struct:wpa_event_data::michael_mic_failure	access:public
wpa_event_data::michael_mic_failure::unicast	src/drivers/driver.h	/^		int unicast;$/;"	m	struct:wpa_event_data::michael_mic_failure	access:public
wpa_event_data::mlme_rx	src/drivers/driver.h	/^	struct mlme_rx {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::mlme_rx	src/drivers/driver.h	/^	} mlme_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::mlme_rx	access:public
wpa_event_data::mlme_rx::buf	src/drivers/driver.h	/^		const u8 *buf;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
wpa_event_data::mlme_rx::channel	src/drivers/driver.h	/^		int channel;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
wpa_event_data::mlme_rx::freq	src/drivers/driver.h	/^		int freq;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
wpa_event_data::mlme_rx::len	src/drivers/driver.h	/^		size_t len;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
wpa_event_data::mlme_rx::ssi	src/drivers/driver.h	/^		int ssi;$/;"	m	struct:wpa_event_data::mlme_rx	access:public
wpa_event_data::new_sta	src/drivers/driver.h	/^	struct new_sta {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::new_sta	src/drivers/driver.h	/^	} new_sta;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::new_sta	access:public
wpa_event_data::new_sta::addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::new_sta	access:public
wpa_event_data::p2p_dev_found	src/drivers/driver.h	/^	struct p2p_dev_found {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_dev_found	src/drivers/driver.h	/^	} p2p_dev_found;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::config_methods	src/drivers/driver.h	/^		u16 config_methods;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::dev_addr	src/drivers/driver.h	/^		const u8 *dev_addr;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::dev_capab	src/drivers/driver.h	/^		u8 dev_capab;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::dev_name	src/drivers/driver.h	/^		const char *dev_name;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::group_capab	src/drivers/driver.h	/^		u8 group_capab;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_dev_found::pri_dev_type	src/drivers/driver.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wpa_event_data::p2p_dev_found	access:public
wpa_event_data::p2p_go_neg_completed	src/drivers/driver.h	/^	struct p2p_go_neg_completed {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_go_neg_completed	src/drivers/driver.h	/^	} p2p_go_neg_completed;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_go_neg_completed	access:public
wpa_event_data::p2p_go_neg_completed::res	src/drivers/driver.h	/^		struct p2p_go_neg_results *res;$/;"	m	struct:wpa_event_data::p2p_go_neg_completed	typeref:struct:wpa_event_data::p2p_go_neg_completed::p2p_go_neg_results	access:public
wpa_event_data::p2p_go_neg_req_rx	src/drivers/driver.h	/^	struct p2p_go_neg_req_rx {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_go_neg_req_rx	src/drivers/driver.h	/^	} p2p_go_neg_req_rx;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_go_neg_req_rx	access:public
wpa_event_data::p2p_go_neg_req_rx::dev_passwd_id	src/drivers/driver.h	/^		u16 dev_passwd_id;$/;"	m	struct:wpa_event_data::p2p_go_neg_req_rx	access:public
wpa_event_data::p2p_go_neg_req_rx::src	src/drivers/driver.h	/^		const u8 *src;$/;"	m	struct:wpa_event_data::p2p_go_neg_req_rx	access:public
wpa_event_data::p2p_prov_disc_req	src/drivers/driver.h	/^	struct p2p_prov_disc_req {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_prov_disc_req	src/drivers/driver.h	/^	} p2p_prov_disc_req;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::config_methods	src/drivers/driver.h	/^		u16 config_methods;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::dev_addr	src/drivers/driver.h	/^		const u8 *dev_addr;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::dev_capab	src/drivers/driver.h	/^		u8 dev_capab;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::dev_name	src/drivers/driver.h	/^		const char *dev_name;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::group_capab	src/drivers/driver.h	/^		u8 group_capab;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::peer	src/drivers/driver.h	/^		const u8 *peer;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::pri_dev_type	src/drivers/driver.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_req::supp_config_methods	src/drivers/driver.h	/^		u16 supp_config_methods;$/;"	m	struct:wpa_event_data::p2p_prov_disc_req	access:public
wpa_event_data::p2p_prov_disc_resp	src/drivers/driver.h	/^	struct p2p_prov_disc_resp {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_prov_disc_resp	src/drivers/driver.h	/^	} p2p_prov_disc_resp;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_prov_disc_resp	access:public
wpa_event_data::p2p_prov_disc_resp::config_methods	src/drivers/driver.h	/^		u16 config_methods;$/;"	m	struct:wpa_event_data::p2p_prov_disc_resp	access:public
wpa_event_data::p2p_prov_disc_resp::peer	src/drivers/driver.h	/^		const u8 *peer;$/;"	m	struct:wpa_event_data::p2p_prov_disc_resp	access:public
wpa_event_data::p2p_sd_req	src/drivers/driver.h	/^	struct p2p_sd_req {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_sd_req	src/drivers/driver.h	/^	} p2p_sd_req;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_req::dialog_token	src/drivers/driver.h	/^		u8 dialog_token;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_req::freq	src/drivers/driver.h	/^		int freq;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_req::sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_req::tlvs	src/drivers/driver.h	/^		const u8 *tlvs;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_req::tlvs_len	src/drivers/driver.h	/^		size_t tlvs_len;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_req::update_indic	src/drivers/driver.h	/^		u16 update_indic;$/;"	m	struct:wpa_event_data::p2p_sd_req	access:public
wpa_event_data::p2p_sd_resp	src/drivers/driver.h	/^	struct p2p_sd_resp {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::p2p_sd_resp	src/drivers/driver.h	/^	} p2p_sd_resp;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::p2p_sd_resp	access:public
wpa_event_data::p2p_sd_resp::sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
wpa_event_data::p2p_sd_resp::tlvs	src/drivers/driver.h	/^		const u8 *tlvs;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
wpa_event_data::p2p_sd_resp::tlvs_len	src/drivers/driver.h	/^		size_t tlvs_len;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
wpa_event_data::p2p_sd_resp::update_indic	src/drivers/driver.h	/^		u16 update_indic;$/;"	m	struct:wpa_event_data::p2p_sd_resp	access:public
wpa_event_data::pmkid_candidate	src/drivers/driver.h	/^	struct pmkid_candidate {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::pmkid_candidate	src/drivers/driver.h	/^	} pmkid_candidate;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::pmkid_candidate	access:public
wpa_event_data::pmkid_candidate::bssid	src/drivers/driver.h	/^		u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_event_data::pmkid_candidate	access:public
wpa_event_data::pmkid_candidate::index	src/drivers/driver.h	/^		int index;$/;"	m	struct:wpa_event_data::pmkid_candidate	access:public
wpa_event_data::pmkid_candidate::preauth	src/drivers/driver.h	/^		int preauth;$/;"	m	struct:wpa_event_data::pmkid_candidate	access:public
wpa_event_data::remain_on_channel	src/drivers/driver.h	/^	struct remain_on_channel {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::remain_on_channel	src/drivers/driver.h	/^	} remain_on_channel;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::remain_on_channel	access:public
wpa_event_data::remain_on_channel::duration	src/drivers/driver.h	/^		unsigned int duration;$/;"	m	struct:wpa_event_data::remain_on_channel	access:public
wpa_event_data::remain_on_channel::freq	src/drivers/driver.h	/^		unsigned int freq;$/;"	m	struct:wpa_event_data::remain_on_channel	access:public
wpa_event_data::rx_action	src/drivers/driver.h	/^	struct rx_action {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::rx_action	src/drivers/driver.h	/^	} rx_action;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::category	src/drivers/driver.h	/^		u8 category;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::data	src/drivers/driver.h	/^		const u8 *data;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::freq	src/drivers/driver.h	/^		int freq;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::len	src/drivers/driver.h	/^		size_t len;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_action::sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::rx_action	access:public
wpa_event_data::rx_from_unknown	src/drivers/driver.h	/^	struct rx_from_unknown {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::rx_from_unknown	src/drivers/driver.h	/^	} rx_from_unknown;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_from_unknown	access:public
wpa_event_data::rx_from_unknown::addr	src/drivers/driver.h	/^		const u8 *addr;$/;"	m	struct:wpa_event_data::rx_from_unknown	access:public
wpa_event_data::rx_from_unknown::bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::rx_from_unknown	access:public
wpa_event_data::rx_from_unknown::wds	src/drivers/driver.h	/^		int wds;$/;"	m	struct:wpa_event_data::rx_from_unknown	access:public
wpa_event_data::rx_mgmt	src/drivers/driver.h	/^	struct rx_mgmt {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::rx_mgmt	src/drivers/driver.h	/^	} rx_mgmt;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_mgmt	access:public
wpa_event_data::rx_mgmt::datarate	src/drivers/driver.h	/^		u32 datarate;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
wpa_event_data::rx_mgmt::frame	src/drivers/driver.h	/^		const u8 *frame;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
wpa_event_data::rx_mgmt::frame_len	src/drivers/driver.h	/^		size_t frame_len;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
wpa_event_data::rx_mgmt::ssi_signal	src/drivers/driver.h	/^		u32 ssi_signal;$/;"	m	struct:wpa_event_data::rx_mgmt	access:public
wpa_event_data::rx_probe_req	src/drivers/driver.h	/^	struct rx_probe_req {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::rx_probe_req	src/drivers/driver.h	/^	} rx_probe_req;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::rx_probe_req	access:public
wpa_event_data::rx_probe_req::bssid	src/drivers/driver.h	/^		const u8 *bssid;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
wpa_event_data::rx_probe_req::da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
wpa_event_data::rx_probe_req::ie	src/drivers/driver.h	/^		const u8 *ie;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
wpa_event_data::rx_probe_req::ie_len	src/drivers/driver.h	/^		size_t ie_len;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
wpa_event_data::rx_probe_req::sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::rx_probe_req	access:public
wpa_event_data::scan_info	src/drivers/driver.h	/^	struct scan_info {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::scan_info	src/drivers/driver.h	/^	} scan_info;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::scan_info	access:public
wpa_event_data::scan_info::aborted	src/drivers/driver.h	/^		int aborted;$/;"	m	struct:wpa_event_data::scan_info	access:public
wpa_event_data::scan_info::freqs	src/drivers/driver.h	/^		const int *freqs;$/;"	m	struct:wpa_event_data::scan_info	access:public
wpa_event_data::scan_info::num_freqs	src/drivers/driver.h	/^		size_t num_freqs;$/;"	m	struct:wpa_event_data::scan_info	access:public
wpa_event_data::scan_info::num_ssids	src/drivers/driver.h	/^		size_t num_ssids;$/;"	m	struct:wpa_event_data::scan_info	access:public
wpa_event_data::scan_info::ssids	src/drivers/driver.h	/^		struct wpa_driver_scan_ssid ssids[WPAS_MAX_SCAN_SSIDS];$/;"	m	struct:wpa_event_data::scan_info	typeref:struct:wpa_event_data::scan_info::wpa_driver_scan_ssid	access:public
wpa_event_data::signal_change	src/drivers/driver.h	/^	struct wpa_signal_info signal_change;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::wpa_signal_info	access:public
wpa_event_data::stkstart	src/drivers/driver.h	/^	struct stkstart {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::stkstart	src/drivers/driver.h	/^	} stkstart;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::stkstart	access:public
wpa_event_data::stkstart::peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::stkstart	access:public
wpa_event_data::tdls	src/drivers/driver.h	/^	struct tdls {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::tdls	src/drivers/driver.h	/^	} tdls;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::tdls	access:public
wpa_event_data::tdls::TDLS_REQUEST_SETUP	src/drivers/driver.h	/^			TDLS_REQUEST_SETUP,$/;"	e	enum:wpa_event_data::tdls::__anon91
wpa_event_data::tdls::TDLS_REQUEST_TEARDOWN	src/drivers/driver.h	/^			TDLS_REQUEST_TEARDOWN$/;"	e	enum:wpa_event_data::tdls::__anon91
wpa_event_data::tdls::oper	src/drivers/driver.h	/^		} oper;$/;"	m	struct:wpa_event_data::tdls	typeref:enum:wpa_event_data::tdls::__anon91	access:public
wpa_event_data::tdls::peer	src/drivers/driver.h	/^		u8 peer[ETH_ALEN];$/;"	m	struct:wpa_event_data::tdls	access:public
wpa_event_data::tdls::reason_code	src/drivers/driver.h	/^		u16 reason_code; \/* for teardown *\/$/;"	m	struct:wpa_event_data::tdls	access:public
wpa_event_data::timeout_event	src/drivers/driver.h	/^	struct timeout_event {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::timeout_event	src/drivers/driver.h	/^	} timeout_event;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::timeout_event	access:public
wpa_event_data::timeout_event::addr	src/drivers/driver.h	/^		u8 addr[ETH_ALEN];$/;"	m	struct:wpa_event_data::timeout_event	access:public
wpa_event_data::tx_status	src/drivers/driver.h	/^	struct tx_status {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::tx_status	src/drivers/driver.h	/^	} tx_status;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::tx_status	access:public
wpa_event_data::tx_status::ack	src/drivers/driver.h	/^		int ack;$/;"	m	struct:wpa_event_data::tx_status	access:public
wpa_event_data::tx_status::data	src/drivers/driver.h	/^		const u8 *data;$/;"	m	struct:wpa_event_data::tx_status	access:public
wpa_event_data::tx_status::data_len	src/drivers/driver.h	/^		size_t data_len;$/;"	m	struct:wpa_event_data::tx_status	access:public
wpa_event_data::tx_status::dst	src/drivers/driver.h	/^		const u8 *dst;$/;"	m	struct:wpa_event_data::tx_status	access:public
wpa_event_data::tx_status::stype	src/drivers/driver.h	/^		u16 stype;$/;"	m	struct:wpa_event_data::tx_status	access:public
wpa_event_data::tx_status::type	src/drivers/driver.h	/^		u16 type;$/;"	m	struct:wpa_event_data::tx_status	access:public
wpa_event_data::unprot_deauth	src/drivers/driver.h	/^	struct unprot_deauth {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::unprot_deauth	src/drivers/driver.h	/^	} unprot_deauth;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::unprot_deauth	access:public
wpa_event_data::unprot_deauth::da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::unprot_deauth	access:public
wpa_event_data::unprot_deauth::reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::unprot_deauth	access:public
wpa_event_data::unprot_deauth::sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::unprot_deauth	access:public
wpa_event_data::unprot_disassoc	src/drivers/driver.h	/^	struct unprot_disassoc {$/;"	s	union:wpa_event_data	access:public
wpa_event_data::unprot_disassoc	src/drivers/driver.h	/^	} unprot_disassoc;$/;"	m	union:wpa_event_data	typeref:struct:wpa_event_data::unprot_disassoc	access:public
wpa_event_data::unprot_disassoc::da	src/drivers/driver.h	/^		const u8 *da;$/;"	m	struct:wpa_event_data::unprot_disassoc	access:public
wpa_event_data::unprot_disassoc::reason_code	src/drivers/driver.h	/^		u16 reason_code;$/;"	m	struct:wpa_event_data::unprot_disassoc	access:public
wpa_event_data::unprot_disassoc::sa	src/drivers/driver.h	/^		const u8 *sa;$/;"	m	struct:wpa_event_data::unprot_disassoc	access:public
wpa_event_type	src/drivers/driver.h	/^enum wpa_event_type {$/;"	g
wpa_free_sta_sm	src/ap/wpa_auth.c	/^static void wpa_free_sta_sm(struct wpa_state_machine *sm)$/;"	f	file:	signature:(struct wpa_state_machine *sm)
wpa_ft_action_rx	src/ap/wpa_auth.h	/^int wpa_ft_action_rx(struct wpa_state_machine *sm, const u8 *data, size_t len);$/;"	p	signature:(struct wpa_state_machine *sm, const u8 *data, size_t len)
wpa_ft_action_rx	src/ap/wpa_auth_ft.c	/^int wpa_ft_action_rx(struct wpa_state_machine *sm, const u8 *data, size_t len)$/;"	f	signature:(struct wpa_state_machine *sm, const u8 *data, size_t len)
wpa_ft_action_send	src/ap/wpa_auth_ft.c	/^static int wpa_ft_action_send(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *dst, const u8 *data, size_t data_len)
wpa_ft_add_sta	src/ap/wpa_auth_ft.c	/^wpa_ft_add_sta(struct wpa_authenticator *wpa_auth, const u8 *sta_addr)$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *sta_addr)
wpa_ft_fetch_pmk_r0	src/ap/wpa_auth_ft.c	/^static int wpa_ft_fetch_pmk_r0(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *spa, const u8 *pmk_r0_name, u8 *pmk_r0, int *pairwise)
wpa_ft_fetch_pmk_r1	src/ap/wpa_auth_ft.c	/^static int wpa_ft_fetch_pmk_r1(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *spa, const u8 *pmk_r1_name, u8 *pmk_r1, int *pairwise)
wpa_ft_gen_req_ies	src/rsn_supp/wpa_ft.c	/^static u8 * wpa_ft_gen_req_ies(struct wpa_sm *sm, size_t *len,$/;"	f	file:	signature:(struct wpa_sm *sm, size_t *len, const u8 *anonce, const u8 *pmk_name, const u8 *kck, const u8 *target_ap, const u8 *ric_ies, size_t ric_ies_len, const u8 *ap_mdie)
wpa_ft_generate_pmk_r1	src/ap/wpa_auth_ft.c	/^static void wpa_ft_generate_pmk_r1(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_ft_pmk_r0_sa *pmk_r0, struct ft_remote_r1kh *r1kh, const u8 *s1kh_id, int pairwise)
wpa_ft_gtk_subelem	src/ap/wpa_auth_ft.c	/^static u8 * wpa_ft_gtk_subelem(struct wpa_state_machine *sm, size_t *len)$/;"	f	file:	signature:(struct wpa_state_machine *sm, size_t *len)
wpa_ft_ies	src/common/wpa_common.h	/^struct wpa_ft_ies {$/;"	s
wpa_ft_ies::ftie	src/common/wpa_common.h	/^	const u8 *ftie;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::ftie_len	src/common/wpa_common.h	/^	size_t ftie_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::gtk	src/common/wpa_common.h	/^	const u8 *gtk;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::gtk_len	src/common/wpa_common.h	/^	size_t gtk_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::igtk	src/common/wpa_common.h	/^	const u8 *igtk;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::igtk_len	src/common/wpa_common.h	/^	size_t igtk_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::mdie	src/common/wpa_common.h	/^	const u8 *mdie;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::mdie_len	src/common/wpa_common.h	/^	size_t mdie_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::r0kh_id	src/common/wpa_common.h	/^	const u8 *r0kh_id;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::r0kh_id_len	src/common/wpa_common.h	/^	size_t r0kh_id_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::r1kh_id	src/common/wpa_common.h	/^	const u8 *r1kh_id;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::ric	src/common/wpa_common.h	/^	const u8 *ric;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::ric_len	src/common/wpa_common.h	/^	size_t ric_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::rsn	src/common/wpa_common.h	/^	const u8 *rsn;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::rsn_len	src/common/wpa_common.h	/^	size_t rsn_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::rsn_pmkid	src/common/wpa_common.h	/^	const u8 *rsn_pmkid;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::tie	src/common/wpa_common.h	/^	const u8 *tie;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_ies::tie_len	src/common/wpa_common.h	/^	size_t tie_len;$/;"	m	struct:wpa_ft_ies	access:public
wpa_ft_igtk_subelem	src/ap/wpa_auth_ft.c	/^static u8 * wpa_ft_igtk_subelem(struct wpa_state_machine *sm, size_t *len)$/;"	f	file:	signature:(struct wpa_state_machine *sm, size_t *len)
wpa_ft_install_ptk	src/ap/wpa_auth_ft.c	/^void wpa_ft_install_ptk(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_ft_install_ptk	src/ap/wpa_auth_i.h	/^void wpa_ft_install_ptk(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_ft_install_ptk	src/rsn_supp/wpa_ft.c	/^static int wpa_ft_install_ptk(struct wpa_sm *sm, const u8 *bssid)$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *bssid)
wpa_ft_is_completed	src/rsn_supp/wpa.h	/^int wpa_ft_is_completed(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_ft_is_completed	src/rsn_supp/wpa.h	/^static inline int wpa_ft_is_completed(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_ft_is_completed	src/rsn_supp/wpa_ft.c	/^int wpa_ft_is_completed(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_ft_mic	src/common/wpa_common.c	/^int wpa_ft_mic(const u8 *kck, const u8 *sta_addr, const u8 *ap_addr,$/;"	f	signature:(const u8 *kck, const u8 *sta_addr, const u8 *ap_addr, u8 transaction_seqnum, const u8 *mdie, size_t mdie_len, const u8 *ftie, size_t ftie_len, const u8 *rsnie, size_t rsnie_len, const u8 *ric, size_t ric_len, u8 *mic)
wpa_ft_mic	src/common/wpa_common.h	/^int wpa_ft_mic(const u8 *kck, const u8 *sta_addr, const u8 *ap_addr,$/;"	p	signature:(const u8 *kck, const u8 *sta_addr, const u8 *ap_addr, u8 transaction_seqnum, const u8 *mdie, size_t mdie_len, const u8 *ftie, size_t ftie_len, const u8 *rsnie, size_t rsnie_len, const u8 *ric, size_t ric_len, u8 *mic)
wpa_ft_parse_ftie	src/common/wpa_common.c	/^static int wpa_ft_parse_ftie(const u8 *ie, size_t ie_len,$/;"	f	file:	signature:(const u8 *ie, size_t ie_len, struct wpa_ft_ies *parse)
wpa_ft_parse_ies	src/common/wpa_common.c	/^int wpa_ft_parse_ies(const u8 *ies, size_t ies_len,$/;"	f	signature:(const u8 *ies, size_t ies_len, struct wpa_ft_ies *parse)
wpa_ft_parse_ies	src/common/wpa_common.h	/^int wpa_ft_parse_ies(const u8 *ies, size_t ies_len, struct wpa_ft_ies *parse);$/;"	p	signature:(const u8 *ies, size_t ies_len, struct wpa_ft_ies *parse)
wpa_ft_pmk_cache	src/ap/wpa_auth_ft.c	/^struct wpa_ft_pmk_cache {$/;"	s	file:
wpa_ft_pmk_cache::pmk_r0	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r0_sa *pmk_r0;$/;"	m	struct:wpa_ft_pmk_cache	typeref:struct:wpa_ft_pmk_cache::wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_cache::pmk_r1	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r1_sa *pmk_r1;$/;"	m	struct:wpa_ft_pmk_cache	typeref:struct:wpa_ft_pmk_cache::wpa_ft_pmk_r1_sa	file:	access:public
wpa_ft_pmk_cache_deinit	src/ap/wpa_auth_ft.c	/^void wpa_ft_pmk_cache_deinit(struct wpa_ft_pmk_cache *cache)$/;"	f	signature:(struct wpa_ft_pmk_cache *cache)
wpa_ft_pmk_cache_deinit	src/ap/wpa_auth_i.h	/^void wpa_ft_pmk_cache_deinit(struct wpa_ft_pmk_cache *cache);$/;"	p	signature:(struct wpa_ft_pmk_cache *cache)
wpa_ft_pmk_cache_init	src/ap/wpa_auth_ft.c	/^struct wpa_ft_pmk_cache * wpa_ft_pmk_cache_init(void)$/;"	f	signature:(void)
wpa_ft_pmk_cache_init	src/ap/wpa_auth_i.h	/^struct wpa_ft_pmk_cache * wpa_ft_pmk_cache_init(void);$/;"	p	signature:(void)
wpa_ft_pmk_r0_sa	src/ap/wpa_auth_ft.c	/^struct wpa_ft_pmk_r0_sa {$/;"	s	file:
wpa_ft_pmk_r0_sa::next	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r0_sa *next;$/;"	m	struct:wpa_ft_pmk_r0_sa	typeref:struct:wpa_ft_pmk_r0_sa::wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_r0_sa::pairwise	src/ap/wpa_auth_ft.c	/^	int pairwise; \/* Pairwise cipher suite, WPA_CIPHER_* *\/$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_r0_sa::pmk_r0	src/ap/wpa_auth_ft.c	/^	u8 pmk_r0[PMK_LEN];$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_r0_sa::pmk_r0_name	src/ap/wpa_auth_ft.c	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_r0_sa::pmk_r1_pushed	src/ap/wpa_auth_ft.c	/^	int pmk_r1_pushed;$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_r0_sa::spa	src/ap/wpa_auth_ft.c	/^	u8 spa[ETH_ALEN];$/;"	m	struct:wpa_ft_pmk_r0_sa	file:	access:public
wpa_ft_pmk_r1_sa	src/ap/wpa_auth_ft.c	/^struct wpa_ft_pmk_r1_sa {$/;"	s	file:
wpa_ft_pmk_r1_sa::next	src/ap/wpa_auth_ft.c	/^	struct wpa_ft_pmk_r1_sa *next;$/;"	m	struct:wpa_ft_pmk_r1_sa	typeref:struct:wpa_ft_pmk_r1_sa::wpa_ft_pmk_r1_sa	file:	access:public
wpa_ft_pmk_r1_sa::pairwise	src/ap/wpa_auth_ft.c	/^	int pairwise; \/* Pairwise cipher suite, WPA_CIPHER_* *\/$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
wpa_ft_pmk_r1_sa::pmk_r1	src/ap/wpa_auth_ft.c	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
wpa_ft_pmk_r1_sa::pmk_r1_name	src/ap/wpa_auth_ft.c	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
wpa_ft_pmk_r1_sa::spa	src/ap/wpa_auth_ft.c	/^	u8 spa[ETH_ALEN];$/;"	m	struct:wpa_ft_pmk_r1_sa	file:	access:public
wpa_ft_prepare_auth_request	src/rsn_supp/wpa.h	/^int wpa_ft_prepare_auth_request(struct wpa_sm *sm, const u8 *mdie);$/;"	p	signature:(struct wpa_sm *sm, const u8 *mdie)
wpa_ft_prepare_auth_request	src/rsn_supp/wpa.h	/^static inline int wpa_ft_prepare_auth_request(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, const u8 *mdie)
wpa_ft_prepare_auth_request	src/rsn_supp/wpa_ft.c	/^int wpa_ft_prepare_auth_request(struct wpa_sm *sm, const u8 *mdie)$/;"	f	signature:(struct wpa_sm *sm, const u8 *mdie)
wpa_ft_process_auth	src/ap/wpa_auth.h	/^void wpa_ft_process_auth(struct wpa_state_machine *sm, const u8 *bssid,$/;"	p	signature:(struct wpa_state_machine *sm, const u8 *bssid, u16 auth_transaction, const u8 *ies, size_t ies_len, void (*cb)(void *ctx, const u8 *dst, const u8 *bssid, u16 auth_transaction, u16 resp, const u8 *ies, size_t ies_len), void *ctx)
wpa_ft_process_auth	src/ap/wpa_auth_ft.c	/^void wpa_ft_process_auth(struct wpa_state_machine *sm, const u8 *bssid,$/;"	f	signature:(struct wpa_state_machine *sm, const u8 *bssid, u16 auth_transaction, const u8 *ies, size_t ies_len, void (*cb)(void *ctx, const u8 *dst, const u8 *bssid, u16 auth_transaction, u16 status, const u8 *ies, size_t ies_len), void *ctx)
wpa_ft_process_auth_req	src/ap/wpa_auth_ft.c	/^static u16 wpa_ft_process_auth_req(struct wpa_state_machine *sm,$/;"	f	file:	signature:(struct wpa_state_machine *sm, const u8 *ies, size_t ies_len, u8 **resp_ies, size_t *resp_ies_len)
wpa_ft_process_gtk_subelem	src/rsn_supp/wpa_ft.c	/^static int wpa_ft_process_gtk_subelem(struct wpa_sm *sm, const u8 *gtk_elem,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *gtk_elem, size_t gtk_elem_len)
wpa_ft_process_igtk_subelem	src/rsn_supp/wpa_ft.c	/^static int wpa_ft_process_igtk_subelem(struct wpa_sm *sm, const u8 *igtk_elem,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *igtk_elem, size_t igtk_elem_len)
wpa_ft_process_rdie	src/ap/wpa_auth_ft.c	/^static u8 * wpa_ft_process_rdie(u8 *pos, u8 *end, u8 id, u8 descr_count,$/;"	f	file:	signature:(u8 *pos, u8 *end, u8 id, u8 descr_count, const u8 *ies, size_t ies_len)
wpa_ft_process_response	src/rsn_supp/wpa.h	/^int wpa_ft_process_response(struct wpa_sm *sm, const u8 *ies, size_t ies_len,$/;"	p	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len, int ft_action, const u8 *target_ap, const u8 *ric_ies, size_t ric_ies_len)
wpa_ft_process_response	src/rsn_supp/wpa.h	/^wpa_ft_process_response(struct wpa_sm *sm, const u8 *ies, size_t ies_len,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len, int ft_action, const u8 *target_ap)
wpa_ft_process_response	src/rsn_supp/wpa_ft.c	/^int wpa_ft_process_response(struct wpa_sm *sm, const u8 *ies, size_t ies_len,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len, int ft_action, const u8 *target_ap, const u8 *ric_ies, size_t ric_ies_len)
wpa_ft_process_ric	src/ap/wpa_auth_ft.c	/^static u8 * wpa_ft_process_ric(u8 *pos, u8 *end, const u8 *ric, size_t ric_len)$/;"	f	file:	signature:(u8 *pos, u8 *end, const u8 *ric, size_t ric_len)
wpa_ft_pull_pmk_r1	src/ap/wpa_auth_ft.c	/^static int wpa_ft_pull_pmk_r1(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *s1kh_id, const u8 *r0kh_id, size_t r0kh_id_len, const u8 *pmk_r0_name)
wpa_ft_push_pmk_r1	src/ap/wpa_auth.h	/^void wpa_ft_push_pmk_r1(struct wpa_authenticator *wpa_auth, const u8 *addr);$/;"	p	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr)
wpa_ft_push_pmk_r1	src/ap/wpa_auth_ft.c	/^void wpa_ft_push_pmk_r1(struct wpa_authenticator *wpa_auth, const u8 *addr)$/;"	f	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr)
wpa_ft_rrb_rx	src/ap/wpa_auth.h	/^int wpa_ft_rrb_rx(struct wpa_authenticator *wpa_auth, const u8 *src_addr,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, const u8 *src_addr, const u8 *data, size_t data_len)
wpa_ft_rrb_rx	src/ap/wpa_auth_ft.c	/^int wpa_ft_rrb_rx(struct wpa_authenticator *wpa_auth, const u8 *src_addr,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, const u8 *src_addr, const u8 *data, size_t data_len)
wpa_ft_rrb_rx_pull	src/ap/wpa_auth_ft.c	/^static int wpa_ft_rrb_rx_pull(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *src_addr, const u8 *data, size_t data_len)
wpa_ft_rrb_rx_push	src/ap/wpa_auth_ft.c	/^static int wpa_ft_rrb_rx_push(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *src_addr, const u8 *data, size_t data_len)
wpa_ft_rrb_rx_request	src/ap/wpa_auth_ft.c	/^static int wpa_ft_rrb_rx_request(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *current_ap, const u8 *sta_addr, const u8 *body, size_t len)
wpa_ft_rrb_rx_resp	src/ap/wpa_auth_ft.c	/^static int wpa_ft_rrb_rx_resp(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *src_addr, const u8 *data, size_t data_len)
wpa_ft_rrb_send	src/ap/wpa_auth_ft.c	/^static int wpa_ft_rrb_send(struct wpa_authenticator *wpa_auth, const u8 *dst,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *dst, const u8 *data, size_t data_len)
wpa_ft_start_over_ds	src/rsn_supp/wpa.h	/^int wpa_ft_start_over_ds(struct wpa_sm *sm, const u8 *target_ap,$/;"	p	signature:(struct wpa_sm *sm, const u8 *target_ap, const u8 *mdie)
wpa_ft_start_over_ds	src/rsn_supp/wpa_ft.c	/^int wpa_ft_start_over_ds(struct wpa_sm *sm, const u8 *target_ap,$/;"	f	signature:(struct wpa_sm *sm, const u8 *target_ap, const u8 *mdie)
wpa_ft_store_pmk_r0	src/ap/wpa_auth_ft.c	/^static int wpa_ft_store_pmk_r0(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *spa, const u8 *pmk_r0, const u8 *pmk_r0_name, int pairwise)
wpa_ft_store_pmk_r1	src/ap/wpa_auth_ft.c	/^static int wpa_ft_store_pmk_r1(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *spa, const u8 *pmk_r1, const u8 *pmk_r1_name, int pairwise)
wpa_ft_validate_reassoc	src/ap/wpa_auth.h	/^u16 wpa_ft_validate_reassoc(struct wpa_state_machine *sm, const u8 *ies,$/;"	p	signature:(struct wpa_state_machine *sm, const u8 *ies, size_t ies_len)
wpa_ft_validate_reassoc	src/ap/wpa_auth_ft.c	/^u16 wpa_ft_validate_reassoc(struct wpa_state_machine *sm, const u8 *ies,$/;"	f	signature:(struct wpa_state_machine *sm, const u8 *ies, size_t ies_len)
wpa_ft_validate_reassoc_resp	src/rsn_supp/wpa.h	/^int wpa_ft_validate_reassoc_resp(struct wpa_sm *sm, const u8 *ies,$/;"	p	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len, const u8 *src_addr)
wpa_ft_validate_reassoc_resp	src/rsn_supp/wpa.h	/^wpa_ft_validate_reassoc_resp(struct wpa_sm *sm, const u8 *ies, size_t ies_len,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len, const u8 *src_addr)
wpa_ft_validate_reassoc_resp	src/rsn_supp/wpa_ft.c	/^int wpa_ft_validate_reassoc_resp(struct wpa_sm *sm, const u8 *ies,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len, const u8 *src_addr)
wpa_gen_wpa_ie	src/rsn_supp/wpa_ie.c	/^int wpa_gen_wpa_ie(struct wpa_sm *sm, u8 *wpa_ie, size_t wpa_ie_len)$/;"	f	signature:(struct wpa_sm *sm, u8 *wpa_ie, size_t wpa_ie_len)
wpa_gen_wpa_ie	src/rsn_supp/wpa_ie.h	/^int wpa_gen_wpa_ie(struct wpa_sm *sm, u8 *wpa_ie, size_t wpa_ie_len);$/;"	p	signature:(struct wpa_sm *sm, u8 *wpa_ie, size_t wpa_ie_len)
wpa_gen_wpa_ie_rsn	src/rsn_supp/wpa_ie.c	/^static int wpa_gen_wpa_ie_rsn(u8 *rsn_ie, size_t rsn_ie_len,$/;"	f	file:	signature:(u8 *rsn_ie, size_t rsn_ie_len, int pairwise_cipher, int group_cipher, int key_mgmt, int mgmt_group_cipher, struct wpa_sm *sm)
wpa_gen_wpa_ie_wpa	src/rsn_supp/wpa_ie.c	/^static int wpa_gen_wpa_ie_wpa(u8 *wpa_ie, size_t wpa_ie_len,$/;"	f	file:	signature:(u8 *wpa_ie, size_t wpa_ie_len, int pairwise_cipher, int group_cipher, int key_mgmt)
wpa_get_mib	src/ap/wpa_auth.c	/^int wpa_get_mib(struct wpa_authenticator *wpa_auth, char *buf, size_t buflen)$/;"	f	signature:(struct wpa_authenticator *wpa_auth, char *buf, size_t buflen)
wpa_get_mib	src/ap/wpa_auth.h	/^int wpa_get_mib(struct wpa_authenticator *wpa_auth, char *buf, size_t buflen);$/;"	p	signature:(struct wpa_authenticator *wpa_auth, char *buf, size_t buflen)
wpa_get_mib_sta	src/ap/wpa_auth.c	/^int wpa_get_mib_sta(struct wpa_state_machine *sm, char *buf, size_t buflen)$/;"	f	signature:(struct wpa_state_machine *sm, char *buf, size_t buflen)
wpa_get_mib_sta	src/ap/wpa_auth.h	/^int wpa_get_mib_sta(struct wpa_state_machine *sm, char *buf, size_t buflen);$/;"	p	signature:(struct wpa_state_machine *sm, char *buf, size_t buflen)
wpa_get_ntp_timestamp	src/utils/common.c	/^void wpa_get_ntp_timestamp(u8 *buf)$/;"	f	signature:(u8 *buf)
wpa_get_ntp_timestamp	src/utils/common.h	/^void wpa_get_ntp_timestamp(u8 *buf);$/;"	p	signature:(u8 *buf)
wpa_gmk_rekey	src/ap/ap_config.h	/^	int wpa_gmk_rekey;$/;"	m	struct:hostapd_bss_config	access:public
wpa_gmk_rekey	src/ap/wpa_auth.h	/^	int wpa_gmk_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_gmk_to_gtk	src/ap/wpa_auth.c	/^static int wpa_gmk_to_gtk(const u8 *gmk, const char *label, const u8 *addr,$/;"	f	file:	signature:(const u8 *gmk, const char *label, const u8 *addr, const u8 *gnonce, u8 *gtk, size_t gtk_len)
wpa_group	src/ap/ap_config.h	/^	int wpa_group;$/;"	m	struct:hostapd_bss_config	access:public
wpa_group	src/ap/wpa_auth.h	/^	int wpa_group;$/;"	m	struct:wpa_auth_config	access:public
wpa_group	src/ap/wpa_auth_i.h	/^struct wpa_group {$/;"	s
wpa_group	src/drivers/driver.h	/^	int wpa_group;$/;"	m	struct:wpa_bss_params	access:public
wpa_group::Counter	src/ap/wpa_auth_i.h	/^	u8 Counter[WPA_NONCE_LEN];$/;"	m	struct:wpa_group	access:public
wpa_group::GInit	src/ap/wpa_auth_i.h	/^	Boolean GInit;$/;"	m	struct:wpa_group	access:public
wpa_group::GKeyDoneStations	src/ap/wpa_auth_i.h	/^	int GKeyDoneStations;$/;"	m	struct:wpa_group	access:public
wpa_group::GM	src/ap/wpa_auth_i.h	/^	int GN, GM;$/;"	m	struct:wpa_group	access:public
wpa_group::GMK	src/ap/wpa_auth_i.h	/^	u8 GMK[WPA_GMK_LEN];$/;"	m	struct:wpa_group	access:public
wpa_group::GM_igtk	src/ap/wpa_auth_i.h	/^	int GN_igtk, GM_igtk;$/;"	m	struct:wpa_group	access:public
wpa_group::GN	src/ap/wpa_auth_i.h	/^	int GN, GM;$/;"	m	struct:wpa_group	access:public
wpa_group::GN_igtk	src/ap/wpa_auth_i.h	/^	int GN_igtk, GM_igtk;$/;"	m	struct:wpa_group	access:public
wpa_group::GNonce	src/ap/wpa_auth_i.h	/^	u8 GNonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_group	access:public
wpa_group::GTK	src/ap/wpa_auth_i.h	/^	u8 GTK[2][WPA_GTK_MAX_LEN];$/;"	m	struct:wpa_group	access:public
wpa_group::GTKAuthenticator	src/ap/wpa_auth_i.h	/^	Boolean GTKAuthenticator;$/;"	m	struct:wpa_group	access:public
wpa_group::GTKReKey	src/ap/wpa_auth_i.h	/^	Boolean GTKReKey;$/;"	m	struct:wpa_group	access:public
wpa_group::GTK_len	src/ap/wpa_auth_i.h	/^	int GTK_len;$/;"	m	struct:wpa_group	access:public
wpa_group::IGTK	src/ap/wpa_auth_i.h	/^	u8 IGTK[2][WPA_IGTK_LEN];$/;"	m	struct:wpa_group	access:public
wpa_group::WPA_GROUP_GTK_INIT	src/ap/wpa_auth_i.h	/^		WPA_GROUP_GTK_INIT = 0,$/;"	e	enum:wpa_group::__anon17
wpa_group::WPA_GROUP_SETKEYS	src/ap/wpa_auth_i.h	/^		WPA_GROUP_SETKEYS, WPA_GROUP_SETKEYSDONE$/;"	e	enum:wpa_group::__anon17
wpa_group::WPA_GROUP_SETKEYSDONE	src/ap/wpa_auth_i.h	/^		WPA_GROUP_SETKEYS, WPA_GROUP_SETKEYSDONE$/;"	e	enum:wpa_group::__anon17
wpa_group::changed	src/ap/wpa_auth_i.h	/^	Boolean changed;$/;"	m	struct:wpa_group	access:public
wpa_group::first_sta_seen	src/ap/wpa_auth_i.h	/^	Boolean first_sta_seen;$/;"	m	struct:wpa_group	access:public
wpa_group::next	src/ap/wpa_auth_i.h	/^	struct wpa_group *next;$/;"	m	struct:wpa_group	typeref:struct:wpa_group::wpa_group	access:public
wpa_group::reject_4way_hs_for_entropy	src/ap/wpa_auth_i.h	/^	Boolean reject_4way_hs_for_entropy;$/;"	m	struct:wpa_group	access:public
wpa_group::vlan_id	src/ap/wpa_auth_i.h	/^	int vlan_id;$/;"	m	struct:wpa_group	access:public
wpa_group::wpa_group_state	src/ap/wpa_auth_i.h	/^	} wpa_group_state;$/;"	m	struct:wpa_group	typeref:enum:wpa_group::__anon17	access:public
wpa_group_config_group_keys	src/ap/wpa_auth.c	/^static int wpa_group_config_group_keys(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_config_group_keys	src/ap/wpa_auth.c	/^static int wpa_group_config_group_keys(struct wpa_authenticator *wpa_auth,$/;"	p	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_first_station	src/ap/wpa_auth.c	/^static void wpa_group_first_station(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_gtk_init	src/ap/wpa_auth.c	/^static void wpa_group_gtk_init(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_init	src/ap/wpa_auth.c	/^static struct wpa_group * wpa_group_init(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, int vlan_id, int delay_init)
wpa_group_init_gmk_and_counter	src/ap/wpa_auth.c	/^static int wpa_group_init_gmk_and_counter(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_rekey	src/ap/ap_config.h	/^	int wpa_group_rekey;$/;"	m	struct:hostapd_bss_config	access:public
wpa_group_rekey	src/ap/wpa_auth.h	/^	int wpa_group_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_group_set_key_len	src/ap/wpa_auth.c	/^static void wpa_group_set_key_len(struct wpa_group *group, int cipher)$/;"	f	file:	signature:(struct wpa_group *group, int cipher)
wpa_group_setkeys	src/ap/wpa_auth.c	/^static void wpa_group_setkeys(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_setkeysdone	src/ap/wpa_auth.c	/^static int wpa_group_setkeysdone(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_sm_step	src/ap/wpa_auth.c	/^static void wpa_group_sm_step(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_sm_step	src/ap/wpa_auth.c	/^static void wpa_group_sm_step(struct wpa_authenticator *wpa_auth,$/;"	p	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_group_state	src/ap/wpa_auth_i.h	/^	} wpa_group_state;$/;"	m	struct:wpa_group	typeref:enum:wpa_group::__anon17	access:public
wpa_group_update_sta	src/ap/wpa_auth.c	/^static int wpa_group_update_sta(struct wpa_state_machine *sm, void *ctx)$/;"	f	file:	signature:(struct wpa_state_machine *sm, void *ctx)
wpa_gtk_data	src/rsn_supp/wpa.c	/^struct wpa_gtk_data {$/;"	s	file:
wpa_gtk_data::alg	src/rsn_supp/wpa.c	/^	enum wpa_alg alg;$/;"	m	struct:wpa_gtk_data	typeref:enum:wpa_gtk_data::wpa_alg	file:	access:public
wpa_gtk_data::gtk	src/rsn_supp/wpa.c	/^	u8 gtk[32];$/;"	m	struct:wpa_gtk_data	file:	access:public
wpa_gtk_data::gtk_len	src/rsn_supp/wpa.c	/^	int gtk_len;$/;"	m	struct:wpa_gtk_data	file:	access:public
wpa_gtk_data::key_rsc_len	src/rsn_supp/wpa.c	/^	int tx, key_rsc_len, keyidx;$/;"	m	struct:wpa_gtk_data	file:	access:public
wpa_gtk_data::keyidx	src/rsn_supp/wpa.c	/^	int tx, key_rsc_len, keyidx;$/;"	m	struct:wpa_gtk_data	file:	access:public
wpa_gtk_data::tx	src/rsn_supp/wpa.c	/^	int tx, key_rsc_len, keyidx;$/;"	m	struct:wpa_gtk_data	file:	access:public
wpa_gtk_rekey	src/ap/wpa_auth.c	/^void wpa_gtk_rekey(struct wpa_authenticator *wpa_auth)$/;"	f	signature:(struct wpa_authenticator *wpa_auth)
wpa_gtk_rekey	src/ap/wpa_auth.h	/^void wpa_gtk_rekey(struct wpa_authenticator *wpa_auth);$/;"	p	signature:(struct wpa_authenticator *wpa_auth)
wpa_gtk_update	src/ap/wpa_auth.c	/^static int wpa_gtk_update(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_gtk_update	src/ap/wpa_auth.c	/^static int wpa_gtk_update(struct wpa_authenticator *wpa_auth,$/;"	p	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_group *group)
wpa_hexdump	src/utils/wpa_debug.c	/^void wpa_hexdump(int level, const char *title, const u8 *buf, size_t len)$/;"	f	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump	src/utils/wpa_debug.h	/^void wpa_hexdump(int level, const char *title, const u8 *buf, size_t len);$/;"	p	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump	src/utils/wpa_debug.h	30;"	d
wpa_hexdump	src/utils/wpa_debug.h	57;"	d
wpa_hexdump_ascii	src/utils/wpa_debug.c	/^void wpa_hexdump_ascii(int level, const char *title, const u8 *buf, size_t len)$/;"	f	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump_ascii	src/utils/wpa_debug.h	/^void wpa_hexdump_ascii(int level, const char *title, const u8 *buf,$/;"	p	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump_ascii	src/utils/wpa_debug.h	34;"	d
wpa_hexdump_ascii	src/utils/wpa_debug.h	61;"	d
wpa_hexdump_ascii_key	src/utils/wpa_debug.c	/^void wpa_hexdump_ascii_key(int level, const char *title, const u8 *buf,$/;"	f	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump_ascii_key	src/utils/wpa_debug.h	/^void wpa_hexdump_ascii_key(int level, const char *title, const u8 *buf,$/;"	p	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump_ascii_key	src/utils/wpa_debug.h	35;"	d
wpa_hexdump_ascii_key	src/utils/wpa_debug.h	62;"	d
wpa_hexdump_buf	src/utils/wpa_debug.h	/^static inline void wpa_hexdump_buf(int level, const char *title,$/;"	f	signature:(int level, const char *title, const struct wpabuf *buf)
wpa_hexdump_buf	src/utils/wpa_debug.h	32;"	d
wpa_hexdump_buf	src/utils/wpa_debug.h	58;"	d
wpa_hexdump_buf_key	src/utils/wpa_debug.h	/^static inline void wpa_hexdump_buf_key(int level, const char *title,$/;"	f	signature:(int level, const char *title, const struct wpabuf *buf)
wpa_hexdump_buf_key	src/utils/wpa_debug.h	33;"	d
wpa_hexdump_buf_key	src/utils/wpa_debug.h	60;"	d
wpa_hexdump_key	src/utils/wpa_debug.c	/^void wpa_hexdump_key(int level, const char *title, const u8 *buf, size_t len)$/;"	f	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump_key	src/utils/wpa_debug.h	/^void wpa_hexdump_key(int level, const char *title, const u8 *buf, size_t len);$/;"	p	signature:(int level, const char *title, const u8 *buf, size_t len)
wpa_hexdump_key	src/utils/wpa_debug.h	31;"	d
wpa_hexdump_key	src/utils/wpa_debug.h	59;"	d
wpa_ie	src/ap/wpa_auth_i.h	/^	u8 *wpa_ie;$/;"	m	struct:wpa_authenticator	access:public
wpa_ie	src/ap/wpa_auth_i.h	/^	u8 *wpa_ie;$/;"	m	struct:wpa_state_machine	access:public
wpa_ie	src/ap/wpa_auth_ie.h	/^	const u8 *wpa_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_ie	src/common/ieee802_11_common.h	/^	const u8 *wpa_ie;$/;"	m	struct:ieee802_11_elems	access:public
wpa_ie	src/drivers/driver.h	/^	const u8 *wpa_ie;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_ie	src/drivers/driver_atheros.c	/^	struct wpabuf *wpa_ie;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::wpabuf	file:	access:public
wpa_ie	src/rsn_supp/wpa_ie.h	/^	const u8 *wpa_ie;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_ie_data	src/common/wpa_common.h	/^struct wpa_ie_data {$/;"	s
wpa_ie_data::capabilities	src/common/wpa_common.h	/^	int capabilities;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::group_cipher	src/common/wpa_common.h	/^	int group_cipher;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::key_mgmt	src/common/wpa_common.h	/^	int key_mgmt;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::mgmt_group_cipher	src/common/wpa_common.h	/^	int mgmt_group_cipher;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::num_pmkid	src/common/wpa_common.h	/^	size_t num_pmkid;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::pairwise_cipher	src/common/wpa_common.h	/^	int pairwise_cipher;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::pmkid	src/common/wpa_common.h	/^	const u8 *pmkid;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_data::proto	src/common/wpa_common.h	/^	int proto;$/;"	m	struct:wpa_ie_data	access:public
wpa_ie_hdr	src/common/wpa_common.h	/^struct wpa_ie_hdr {$/;"	s
wpa_ie_hdr::elem_id	src/common/wpa_common.h	/^	u8 elem_id;$/;"	m	struct:wpa_ie_hdr	access:public
wpa_ie_hdr::len	src/common/wpa_common.h	/^	u8 len;$/;"	m	struct:wpa_ie_hdr	access:public
wpa_ie_hdr::oui	src/common/wpa_common.h	/^	u8 oui[4]; \/* 24-bit OUI followed by 8-bit OUI type *\/$/;"	m	struct:wpa_ie_hdr	access:public
wpa_ie_hdr::version	src/common/wpa_common.h	/^	u8 version[2]; \/* little endian *\/$/;"	m	struct:wpa_ie_hdr	access:public
wpa_ie_len	src/ap/wpa_auth_i.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_authenticator	access:public
wpa_ie_len	src/ap/wpa_auth_i.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_state_machine	access:public
wpa_ie_len	src/ap/wpa_auth_ie.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_ie_len	src/common/ieee802_11_common.h	/^	u8 wpa_ie_len;$/;"	m	struct:ieee802_11_elems	access:public
wpa_ie_len	src/common/privsep_commands.h	/^	size_t wpa_ie_len;$/;"	m	struct:privsep_cmd_associate	access:public
wpa_ie_len	src/drivers/driver.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_ie_len	src/rsn_supp/wpa_ie.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_eapol_ie_parse	access:public
wpa_igtk_kde	src/common/wpa_common.h	/^struct wpa_igtk_kde {$/;"	s
wpa_igtk_kde::igtk	src/common/wpa_common.h	/^	u8 igtk[WPA_IGTK_LEN];$/;"	m	struct:wpa_igtk_kde	access:public
wpa_igtk_kde::keyid	src/common/wpa_common.h	/^	u8 keyid[2];$/;"	m	struct:wpa_igtk_kde	access:public
wpa_igtk_kde::pn	src/common/wpa_common.h	/^	u8 pn[6];$/;"	m	struct:wpa_igtk_kde	access:public
wpa_init	src/ap/wpa_auth.c	/^struct wpa_authenticator * wpa_init(const u8 *addr,$/;"	f	signature:(const u8 *addr, struct wpa_auth_config *conf, struct wpa_auth_callbacks *cb)
wpa_init	src/ap/wpa_auth.h	/^struct wpa_authenticator * wpa_init(const u8 *addr,$/;"	p	signature:(const u8 *addr, struct wpa_auth_config *conf, struct wpa_auth_callbacks *cb)
wpa_init_keys	src/ap/wpa_auth.c	/^int wpa_init_keys(struct wpa_authenticator *wpa_auth)$/;"	f	signature:(struct wpa_authenticator *wpa_auth)
wpa_init_keys	src/ap/wpa_auth.h	/^int wpa_init_keys(struct wpa_authenticator *wpa_auth);$/;"	p	signature:(struct wpa_authenticator *wpa_auth)
wpa_init_params	src/drivers/driver.h	/^struct wpa_init_params {$/;"	s
wpa_init_params::bridge	src/drivers/driver.h	/^	char **bridge;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::bssid	src/drivers/driver.h	/^	const u8 *bssid;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::global_priv	src/drivers/driver.h	/^	void *global_priv;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::ifname	src/drivers/driver.h	/^	const char *ifname;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::num_bridge	src/drivers/driver.h	/^	size_t num_bridge;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::own_addr	src/drivers/driver.h	/^	u8 *own_addr; \/* buffer for writing own MAC address *\/$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::ssid	src/drivers/driver.h	/^	const u8 *ssid;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::ssid_len	src/drivers/driver.h	/^	size_t ssid_len;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::test_socket	src/drivers/driver.h	/^	const char *test_socket;$/;"	m	struct:wpa_init_params	access:public
wpa_init_params::use_pae_group_addr	src/drivers/driver.h	/^	int use_pae_group_addr;$/;"	m	struct:wpa_init_params	access:public
wpa_insert_pmkid	src/common/wpa_common.c	/^int wpa_insert_pmkid(u8 *ies, size_t ies_len, const u8 *pmkid)$/;"	f	signature:(u8 *ies, size_t ies_len, const u8 *pmkid)
wpa_insert_pmkid	src/common/wpa_common.h	/^int wpa_insert_pmkid(u8 *ies, size_t ies_len, const u8 *pmkid);$/;"	p	signature:(u8 *ies, size_t ies_len, const u8 *pmkid)
wpa_interface_info	src/drivers/driver.h	/^struct wpa_interface_info {$/;"	s
wpa_interface_info::desc	src/drivers/driver.h	/^	char *desc;$/;"	m	struct:wpa_interface_info	access:public
wpa_interface_info::drv_name	src/drivers/driver.h	/^	const char *drv_name;$/;"	m	struct:wpa_interface_info	access:public
wpa_interface_info::ifname	src/drivers/driver.h	/^	char *ifname;$/;"	m	struct:wpa_interface_info	access:public
wpa_interface_info::next	src/drivers/driver.h	/^	struct wpa_interface_info *next;$/;"	m	struct:wpa_interface_info	typeref:struct:wpa_interface_info::wpa_interface_info	access:public
wpa_key_mgmt	src/ap/ap_config.h	/^	int wpa_key_mgmt;$/;"	m	struct:hostapd_bss_config	access:public
wpa_key_mgmt	src/ap/wpa_auth.h	/^	int wpa_key_mgmt;$/;"	m	struct:wpa_auth_config	access:public
wpa_key_mgmt	src/ap/wpa_auth_i.h	/^	int wpa_key_mgmt; \/* the selected WPA_KEY_MGMT_* *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_key_mgmt	src/common/defs.h	/^enum wpa_key_mgmt {$/;"	g
wpa_key_mgmt	src/drivers/driver.h	/^	int wpa_key_mgmt;$/;"	m	struct:wpa_bss_params	access:public
wpa_key_mgmt_ft	src/common/defs.h	/^static inline int wpa_key_mgmt_ft(int akm)$/;"	f	signature:(int akm)
wpa_key_mgmt_sha256	src/common/defs.h	/^static inline int wpa_key_mgmt_sha256(int akm)$/;"	f	signature:(int akm)
wpa_key_mgmt_suite	src/rsn_supp/wpa.c	/^static u32 wpa_key_mgmt_suite(struct wpa_sm *sm)$/;"	f	file:	signature:(struct wpa_sm *sm)
wpa_key_mgmt_to_bitfield	src/common/wpa_common.c	/^static int wpa_key_mgmt_to_bitfield(const u8 *s)$/;"	f	file:	signature:(const u8 *s)
wpa_key_mgmt_txt	src/common/wpa_common.c	/^const char * wpa_key_mgmt_txt(int key_mgmt, int proto)$/;"	f	signature:(int key_mgmt, int proto)
wpa_key_mgmt_txt	src/common/wpa_common.h	/^const char * wpa_key_mgmt_txt(int key_mgmt, int proto);$/;"	p	signature:(int key_mgmt, int proto)
wpa_key_mgmt_wpa	src/common/defs.h	/^static inline int wpa_key_mgmt_wpa(int akm)$/;"	f	signature:(int akm)
wpa_key_mgmt_wpa_ieee8021x	src/common/defs.h	/^static inline int wpa_key_mgmt_wpa_ieee8021x(int akm)$/;"	f	signature:(int akm)
wpa_key_mgmt_wpa_psk	src/common/defs.h	/^static inline int wpa_key_mgmt_wpa_psk(int akm)$/;"	f	signature:(int akm)
wpa_msg	src/utils/wpa_debug.c	/^void wpa_msg(void *ctx, int level, const char *fmt, ...)$/;"	f	signature:(void *ctx, int level, const char *fmt, ...)
wpa_msg	src/utils/wpa_debug.h	190;"	d
wpa_msg_cb	src/utils/wpa_debug.c	/^static wpa_msg_cb_func wpa_msg_cb = NULL;$/;"	v	file:
wpa_msg_cb_func	src/utils/wpa_debug.h	/^typedef void (*wpa_msg_cb_func)(void *ctx, int level, const char *txt,$/;"	t
wpa_msg_ctrl	src/utils/wpa_debug.c	/^void wpa_msg_ctrl(void *ctx, int level, const char *fmt, ...)$/;"	f	signature:(void *ctx, int level, const char *fmt, ...)
wpa_msg_ctrl	src/utils/wpa_debug.h	191;"	d
wpa_msg_get_ifname_func	src/utils/wpa_debug.h	/^typedef const char * (*wpa_msg_get_ifname_func)(void *ctx);$/;"	t
wpa_msg_ifname_cb	src/utils/wpa_debug.c	/^static wpa_msg_get_ifname_func wpa_msg_ifname_cb = NULL;$/;"	v	file:
wpa_msg_register_cb	src/utils/wpa_debug.c	/^void wpa_msg_register_cb(wpa_msg_cb_func func)$/;"	f	signature:(wpa_msg_cb_func func)
wpa_msg_register_cb	src/utils/wpa_debug.h	/^void wpa_msg_register_cb(wpa_msg_cb_func func);$/;"	p	signature:(wpa_msg_cb_func func)
wpa_msg_register_cb	src/utils/wpa_debug.h	192;"	d
wpa_msg_register_ifname_cb	src/utils/wpa_debug.c	/^void wpa_msg_register_ifname_cb(wpa_msg_get_ifname_func func)$/;"	f	signature:(wpa_msg_get_ifname_func func)
wpa_msg_register_ifname_cb	src/utils/wpa_debug.h	/^void wpa_msg_register_ifname_cb(wpa_msg_get_ifname_func func);$/;"	p	signature:(wpa_msg_get_ifname_func func)
wpa_msg_register_ifname_cb	src/utils/wpa_debug.h	193;"	d
wpa_pairwise	src/ap/ap_config.h	/^	int wpa_pairwise;$/;"	m	struct:hostapd_bss_config	access:public
wpa_pairwise	src/ap/wpa_auth.h	/^	int wpa_pairwise;$/;"	m	struct:wpa_auth_config	access:public
wpa_pairwise	src/drivers/driver.h	/^	int wpa_pairwise;$/;"	m	struct:wpa_bss_params	access:public
wpa_parse_generic	src/ap/wpa_auth_ie.c	/^static int wpa_parse_generic(const u8 *pos, const u8 *end,$/;"	f	file:	signature:(const u8 *pos, const u8 *end, struct wpa_eapol_ie_parse *ie)
wpa_parse_generic	src/rsn_supp/wpa_ie.c	/^static int wpa_parse_generic(const u8 *pos, const u8 *end,$/;"	f	file:	signature:(const u8 *pos, const u8 *end, struct wpa_eapol_ie_parse *ie)
wpa_parse_kde_ies	src/ap/wpa_auth_ie.c	/^int wpa_parse_kde_ies(const u8 *buf, size_t len, struct wpa_eapol_ie_parse *ie)$/;"	f	signature:(const u8 *buf, size_t len, struct wpa_eapol_ie_parse *ie)
wpa_parse_kde_ies	src/ap/wpa_auth_ie.h	/^int wpa_parse_kde_ies(const u8 *buf, size_t len,$/;"	p	signature:(const u8 *buf, size_t len, struct wpa_eapol_ie_parse *ie)
wpa_parse_wpa_ie	src/rsn_supp/wpa.h	/^int wpa_parse_wpa_ie(const u8 *wpa_ie, size_t wpa_ie_len,$/;"	p	signature:(const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ie_data *data)
wpa_parse_wpa_ie	src/rsn_supp/wpa.h	/^static inline int wpa_parse_wpa_ie(const u8 *wpa_ie, size_t wpa_ie_len,$/;"	f	signature:(const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ie_data *data)
wpa_parse_wpa_ie	src/rsn_supp/wpa_ie.c	/^int wpa_parse_wpa_ie(const u8 *wpa_ie, size_t wpa_ie_len,$/;"	f	signature:(const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ie_data *data)
wpa_parse_wpa_ie_rsn	src/common/wpa_common.c	/^int wpa_parse_wpa_ie_rsn(const u8 *rsn_ie, size_t rsn_ie_len,$/;"	f	signature:(const u8 *rsn_ie, size_t rsn_ie_len, struct wpa_ie_data *data)
wpa_parse_wpa_ie_rsn	src/common/wpa_common.h	/^int wpa_parse_wpa_ie_rsn(const u8 *rsn_ie, size_t rsn_ie_len,$/;"	p	signature:(const u8 *rsn_ie, size_t rsn_ie_len, struct wpa_ie_data *data)
wpa_parse_wpa_ie_wpa	src/common/wpa_common.c	/^int wpa_parse_wpa_ie_wpa(const u8 *wpa_ie, size_t wpa_ie_len,$/;"	f	signature:(const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ie_data *data)
wpa_parse_wpa_ie_wpa	src/common/wpa_common.h	/^int wpa_parse_wpa_ie_wpa(const u8 *wpa_ie, size_t wpa_ie_len,$/;"	p	signature:(const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ie_data *data)
wpa_passphrase	src/ap/ap_config.h	/^	char *wpa_passphrase;$/;"	m	struct:hostapd_ssid	access:public
wpa_peerkey	src/rsn_supp/peerkey.h	/^struct wpa_peerkey {$/;"	s
wpa_peerkey::addr	src/rsn_supp/peerkey.h	/^	u8 addr[ETH_ALEN]; \/* other end MAC address *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::cipher	src/rsn_supp/peerkey.h	/^	int cipher; \/* Selected cipher (WPA_CIPHER_*) *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::expiration	src/rsn_supp/peerkey.h	/^	os_time_t expiration;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::initiator	src/rsn_supp/peerkey.h	/^	int initiator; \/* whether this end was initator for SMK handshake *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::inonce	src/rsn_supp/peerkey.h	/^	u8 inonce[WPA_NONCE_LEN]; \/* Initiator Nonce *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::lifetime	src/rsn_supp/peerkey.h	/^	u32 lifetime;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::next	src/rsn_supp/peerkey.h	/^	struct wpa_peerkey *next;$/;"	m	struct:wpa_peerkey	typeref:struct:wpa_peerkey::wpa_peerkey	access:public
wpa_peerkey::pnonce	src/rsn_supp/peerkey.h	/^	u8 pnonce[WPA_NONCE_LEN]; \/* Peer Nonce *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::replay_counter	src/rsn_supp/peerkey.h	/^	u8 replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::replay_counter_set	src/rsn_supp/peerkey.h	/^	int replay_counter_set;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::rsnie_i	src/rsn_supp/peerkey.h	/^	u8 rsnie_i[PEERKEY_MAX_IE_LEN]; \/* Initiator RSN IE *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::rsnie_i_len	src/rsn_supp/peerkey.h	/^	size_t rsnie_i_len;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::rsnie_p	src/rsn_supp/peerkey.h	/^	u8 rsnie_p[PEERKEY_MAX_IE_LEN]; \/* Peer RSN IE *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::rsnie_p_len	src/rsn_supp/peerkey.h	/^	size_t rsnie_p_len;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::smk	src/rsn_supp/peerkey.h	/^	u8 smk[PMK_LEN];$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::smk_complete	src/rsn_supp/peerkey.h	/^	int smk_complete;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::smkid	src/rsn_supp/peerkey.h	/^	u8 smkid[PMKID_LEN];$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::stk	src/rsn_supp/peerkey.h	/^	struct wpa_ptk stk, tstk;$/;"	m	struct:wpa_peerkey	typeref:struct:wpa_peerkey::wpa_ptk	access:public
wpa_peerkey::stk_set	src/rsn_supp/peerkey.h	/^	int stk_set, tstk_set;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::tstk	src/rsn_supp/peerkey.h	/^	struct wpa_ptk stk, tstk;$/;"	m	struct:wpa_peerkey	typeref:struct:wpa_peerkey::	access:public
wpa_peerkey::tstk_set	src/rsn_supp/peerkey.h	/^	int stk_set, tstk_set;$/;"	m	struct:wpa_peerkey	access:public
wpa_peerkey::use_sha256	src/rsn_supp/peerkey.h	/^	int use_sha256; \/* whether AKMP indicate SHA256-based derivations *\/$/;"	m	struct:wpa_peerkey	access:public
wpa_pmk_r1_to_ptk	src/common/wpa_common.c	/^void wpa_pmk_r1_to_ptk(const u8 *pmk_r1, const u8 *snonce, const u8 *anonce,$/;"	f	signature:(const u8 *pmk_r1, const u8 *snonce, const u8 *anonce, const u8 *sta_addr, const u8 *bssid, const u8 *pmk_r1_name, u8 *ptk, size_t ptk_len, u8 *ptk_name)
wpa_pmk_r1_to_ptk	src/common/wpa_common.h	/^void wpa_pmk_r1_to_ptk(const u8 *pmk_r1, const u8 *snonce, const u8 *anonce,$/;"	p	signature:(const u8 *pmk_r1, const u8 *snonce, const u8 *anonce, const u8 *sta_addr, const u8 *bssid, const u8 *pmk_r1_name, u8 *ptk, size_t ptk_len, u8 *ptk_name)
wpa_pmk_to_ptk	src/common/wpa_common.c	/^void wpa_pmk_to_ptk(const u8 *pmk, size_t pmk_len, const char *label,$/;"	f	signature:(const u8 *pmk, size_t pmk_len, const char *label, const u8 *addr1, const u8 *addr2, const u8 *nonce1, const u8 *nonce2, u8 *ptk, size_t ptk_len, int use_sha256)
wpa_pmk_to_ptk	src/common/wpa_common.h	/^void wpa_pmk_to_ptk(const u8 *pmk, size_t pmk_len, const char *label,$/;"	p	signature:(const u8 *pmk, size_t pmk_len, const char *label, const u8 *addr1, const u8 *addr2, const u8 *nonce1, const u8 *nonce2, u8 *ptk, size_t ptk_len, int use_sha256)
wpa_printf	src/utils/wpa_debug.c	/^void wpa_printf(int level, const char *fmt, ...)$/;"	f	signature:(int level, const char *fmt, ...)
wpa_printf	src/utils/wpa_debug.h	49;"	d
wpa_printf	src/utils/wpa_debug.h	56;"	d
wpa_priv_cmd	src/drivers/driver_privsep.c	/^static int wpa_priv_cmd(struct wpa_driver_privsep_data *drv, int cmd,$/;"	f	file:	signature:(struct wpa_driver_privsep_data *drv, int cmd, const void *data, size_t data_len, void *reply, size_t *reply_len)
wpa_priv_cmd	src/l2_packet/l2_packet_privsep.c	/^static int wpa_priv_cmd(struct l2_packet_data *l2, int cmd,$/;"	f	file:	signature:(struct l2_packet_data *l2, int cmd, const void *data, size_t data_len)
wpa_priv_reg_cmd	src/drivers/driver_privsep.c	/^static int wpa_priv_reg_cmd(struct wpa_driver_privsep_data *drv, int cmd)$/;"	f	file:	signature:(struct wpa_driver_privsep_data *drv, int cmd)
wpa_proto	src/drivers/driver.h	/^	unsigned int wpa_proto;$/;"	m	struct:wpa_driver_associate_params	access:public
wpa_psk	src/ap/ap_config.h	/^	struct hostapd_wpa_psk *wpa_psk;$/;"	m	struct:hostapd_ssid	typeref:struct:hostapd_ssid::hostapd_wpa_psk	access:public
wpa_psk_file	src/ap/ap_config.h	/^	char *wpa_psk_file;$/;"	m	struct:hostapd_ssid	access:public
wpa_ptk	src/common/wpa_common.h	/^struct wpa_ptk {$/;"	s
wpa_ptk::__anon33::__anon34::rx_mic_key	src/common/wpa_common.h	/^			u8 rx_mic_key[8];$/;"	m	struct:wpa_ptk::__anon33::__anon34	access:public
wpa_ptk::__anon33::__anon34::tx_mic_key	src/common/wpa_common.h	/^			u8 tx_mic_key[8];$/;"	m	struct:wpa_ptk::__anon33::__anon34	access:public
wpa_ptk::__anon33::auth	src/common/wpa_common.h	/^		} auth;$/;"	m	union:wpa_ptk::__anon33	typeref:struct:wpa_ptk::__anon33::__anon34	access:public
wpa_ptk::__anon33::tk2	src/common/wpa_common.h	/^		u8 tk2[16]; \/* Temporal Key 2 (TK2) *\/$/;"	m	union:wpa_ptk::__anon33	access:public
wpa_ptk::kck	src/common/wpa_common.h	/^	u8 kck[16]; \/* EAPOL-Key Key Confirmation Key (KCK) *\/$/;"	m	struct:wpa_ptk	access:public
wpa_ptk::kek	src/common/wpa_common.h	/^	u8 kek[16]; \/* EAPOL-Key Key Encryption Key (KEK) *\/$/;"	m	struct:wpa_ptk	access:public
wpa_ptk::tk1	src/common/wpa_common.h	/^	u8 tk1[16]; \/* Temporal Key 1 (TK1) *\/$/;"	m	struct:wpa_ptk	access:public
wpa_ptk::u	src/common/wpa_common.h	/^	} u;$/;"	m	struct:wpa_ptk	typeref:union:wpa_ptk::__anon33	access:public
wpa_ptk_group_state	src/ap/wpa_auth_i.h	/^	} wpa_ptk_group_state;$/;"	m	struct:wpa_state_machine	typeref:enum:wpa_state_machine::__anon14	access:public
wpa_ptk_rekey	src/ap/ap_config.h	/^	int wpa_ptk_rekey;$/;"	m	struct:hostapd_bss_config	access:public
wpa_ptk_rekey	src/ap/wpa_auth.h	/^	int wpa_ptk_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_ptk_rekey	src/rsn_supp/wpa.h	/^	int wpa_ptk_rekey;$/;"	m	struct:rsn_supp_config	access:public
wpa_ptk_rekey	src/rsn_supp/wpa_i.h	/^	int wpa_ptk_rekey;$/;"	m	struct:wpa_sm	access:public
wpa_ptk_state	src/ap/wpa_auth_i.h	/^	} wpa_ptk_state;$/;"	m	struct:wpa_state_machine	typeref:enum:wpa_state_machine::__anon13	access:public
wpa_receive	src/ap/wpa_auth.c	/^void wpa_receive(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, u8 *data, size_t data_len)
wpa_receive	src/ap/wpa_auth.h	/^void wpa_receive(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, u8 *data, size_t data_len)
wpa_receive_error_report	src/ap/wpa_auth.c	/^static void wpa_receive_error_report(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, int group)
wpa_reconfig	src/ap/wpa_auth.c	/^int wpa_reconfig(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_auth_config *conf)
wpa_reconfig	src/ap/wpa_auth.h	/^int wpa_reconfig(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_auth_config *conf)
wpa_rekey_gmk	src/ap/wpa_auth.c	/^static void wpa_rekey_gmk(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_rekey_gtk	src/ap/wpa_auth.c	/^static void wpa_rekey_gtk(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_rekey_ptk	src/ap/wpa_auth.c	/^static void wpa_rekey_ptk(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_remove_ptk	src/ap/wpa_auth.c	/^void wpa_remove_ptk(struct wpa_state_machine *sm)$/;"	f	signature:(struct wpa_state_machine *sm)
wpa_remove_ptk	src/ap/wpa_auth.h	/^void wpa_remove_ptk(struct wpa_state_machine *sm);$/;"	p	signature:(struct wpa_state_machine *sm)
wpa_replay_counter_valid	src/ap/wpa_auth.c	/^static int wpa_replay_counter_valid(struct wpa_state_machine *sm,$/;"	f	file:	signature:(struct wpa_state_machine *sm, const u8 *replay_counter)
wpa_report_ie_mismatch	src/rsn_supp/wpa.c	/^static void wpa_report_ie_mismatch(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const char *reason, const u8 *src_addr, const u8 *wpa_ie, size_t wpa_ie_len, const u8 *rsn_ie, size_t rsn_ie_len)
wpa_request	hostapd/hostapd_cli.c	/^static void wpa_request(struct wpa_ctrl *ctrl, int argc, char *argv[])$/;"	f	file:	signature:(struct wpa_ctrl *ctrl, int argc, char *argv[])
wpa_request_new_ptk	src/ap/wpa_auth.c	/^static void wpa_request_new_ptk(struct wpa_state_machine *sm)$/;"	f	file:	signature:(struct wpa_state_machine *sm)
wpa_request_new_ptk	src/ap/wpa_auth.c	/^static void wpa_request_new_ptk(struct wpa_state_machine *sm);$/;"	p	file:	signature:(struct wpa_state_machine *sm)
wpa_scan_get_ie	src/drivers/driver_ndis.c	/^static const u8 * wpa_scan_get_ie(const struct wpa_scan_res *res, u8 ie)$/;"	f	file:	signature:(const struct wpa_scan_res *res, u8 ie)
wpa_scan_get_ie	src/drivers/driver_test.c	/^static const u8 * wpa_scan_get_ie(const struct wpa_scan_res *res, u8 ie)$/;"	f	file:	signature:(const struct wpa_scan_res *res, u8 ie)
wpa_scan_res	src/drivers/driver.h	/^struct wpa_scan_res {$/;"	s
wpa_scan_res::age	src/drivers/driver.h	/^	unsigned int age;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::beacon_ie_len	src/drivers/driver.h	/^	size_t beacon_ie_len;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::beacon_int	src/drivers/driver.h	/^	u16 beacon_int;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::bssid	src/drivers/driver.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::caps	src/drivers/driver.h	/^	u16 caps;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::flags	src/drivers/driver.h	/^	unsigned int flags;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::freq	src/drivers/driver.h	/^	int freq;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::ie_len	src/drivers/driver.h	/^	size_t ie_len;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::level	src/drivers/driver.h	/^	int level;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::noise	src/drivers/driver.h	/^	int noise;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::qual	src/drivers/driver.h	/^	int qual;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_res::tsf	src/drivers/driver.h	/^	u64 tsf;$/;"	m	struct:wpa_scan_res	access:public
wpa_scan_results	src/drivers/driver.h	/^struct wpa_scan_results {$/;"	s
wpa_scan_results::num	src/drivers/driver.h	/^	size_t num;$/;"	m	struct:wpa_scan_results	access:public
wpa_scan_results::res	src/drivers/driver.h	/^	struct wpa_scan_res **res;$/;"	m	struct:wpa_scan_results	typeref:struct:wpa_scan_results::wpa_scan_res	access:public
wpa_scan_results_free	src/drivers/driver.h	/^void wpa_scan_results_free(struct wpa_scan_results *res);$/;"	p	signature:(struct wpa_scan_results *res)
wpa_scan_results_free	src/drivers/driver_common.c	/^void wpa_scan_results_free(struct wpa_scan_results *res)$/;"	f	signature:(struct wpa_scan_results *res)
wpa_selector_to_bitfield	src/common/wpa_common.c	/^static int wpa_selector_to_bitfield(const u8 *s)$/;"	f	file:	signature:(const u8 *s)
wpa_send_eapol	src/ap/wpa_auth.c	/^static void wpa_send_eapol(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, int key_info, const u8 *key_rsc, const u8 *nonce, const u8 *kde, size_t kde_len, int keyidx, int encr)
wpa_send_eapol_timeout	src/ap/wpa_auth.c	/^static void wpa_send_eapol_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_send_eapol_timeout	src/ap/wpa_auth.c	/^static void wpa_send_eapol_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_send_smk_m4	src/ap/peerkey_auth.c	/^static void wpa_send_smk_m4(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key, struct wpa_eapol_ie_parse *kde, const u8 *smk)
wpa_send_smk_m5	src/ap/peerkey_auth.c	/^static void wpa_send_smk_m5(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key, struct wpa_eapol_ie_parse *kde, const u8 *smk, const u8 *peer)
wpa_signal_info	src/drivers/driver.h	/^struct wpa_signal_info {$/;"	s
wpa_signal_info::above_threshold	src/drivers/driver.h	/^	int above_threshold;$/;"	m	struct:wpa_signal_info	access:public
wpa_signal_info::current_noise	src/drivers/driver.h	/^	int current_noise;$/;"	m	struct:wpa_signal_info	access:public
wpa_signal_info::current_signal	src/drivers/driver.h	/^	int current_signal;$/;"	m	struct:wpa_signal_info	access:public
wpa_signal_info::current_txrate	src/drivers/driver.h	/^	int current_txrate;$/;"	m	struct:wpa_signal_info	access:public
wpa_signal_info::frequency	src/drivers/driver.h	/^	u32 frequency;$/;"	m	struct:wpa_signal_info	access:public
wpa_sm	src/ap/sta_info.h	/^	struct wpa_state_machine *wpa_sm;$/;"	m	struct:sta_info	typeref:struct:sta_info::wpa_state_machine	access:public
wpa_sm	src/rsn_supp/wpa_i.h	/^struct wpa_sm {$/;"	s
wpa_sm::allowed_pairwise_cipher	src/rsn_supp/wpa_i.h	/^	int allowed_pairwise_cipher; \/* bitfield of WPA_CIPHER_* *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::anonce	src/rsn_supp/wpa_i.h	/^	u8 anonce[WPA_NONCE_LEN]; \/* ANonce from the last 1\/4 msg *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::ap_rsn_ie	src/rsn_supp/wpa_i.h	/^	u8 *ap_wpa_ie, *ap_rsn_ie;$/;"	m	struct:wpa_sm	access:public
wpa_sm::ap_rsn_ie_len	src/rsn_supp/wpa_i.h	/^	size_t ap_wpa_ie_len, ap_rsn_ie_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::ap_wpa_ie	src/rsn_supp/wpa_i.h	/^	u8 *ap_wpa_ie, *ap_rsn_ie;$/;"	m	struct:wpa_sm	access:public
wpa_sm::ap_wpa_ie_len	src/rsn_supp/wpa_i.h	/^	size_t ap_wpa_ie_len, ap_rsn_ie_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::assoc_resp_ies	src/rsn_supp/wpa_i.h	/^	u8 *assoc_resp_ies; \/* MDIE and FTIE from (Re)Association Response *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::assoc_resp_ies_len	src/rsn_supp/wpa_i.h	/^	size_t assoc_resp_ies_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::assoc_wpa_ie	src/rsn_supp/wpa_i.h	/^	u8 *assoc_wpa_ie; \/* Own WPA\/RSN IE from (Re)AssocReq *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::assoc_wpa_ie_len	src/rsn_supp/wpa_i.h	/^	size_t assoc_wpa_ie_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::bridge_ifname	src/rsn_supp/wpa_i.h	/^	const char *bridge_ifname;$/;"	m	struct:wpa_sm	access:public
wpa_sm::bssid	src/rsn_supp/wpa_i.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::ctx	src/rsn_supp/wpa_i.h	/^	struct wpa_sm_ctx *ctx;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_sm_ctx	access:public
wpa_sm::cur_pmksa	src/rsn_supp/wpa_i.h	/^	struct rsn_pmksa_cache_entry *cur_pmksa; \/* current PMKSA entry *\/$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::rsn_pmksa_cache_entry	access:public
wpa_sm::dot11RSNA4WayHandshakeFailures	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNA4WayHandshakeFailures;$/;"	m	struct:wpa_sm	access:public
wpa_sm::dot11RSNAConfigPMKLifetime	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNAConfigPMKLifetime;$/;"	m	struct:wpa_sm	access:public
wpa_sm::dot11RSNAConfigPMKReauthThreshold	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNAConfigPMKReauthThreshold;$/;"	m	struct:wpa_sm	access:public
wpa_sm::dot11RSNAConfigSATimeout	src/rsn_supp/wpa_i.h	/^	unsigned int dot11RSNAConfigSATimeout;$/;"	m	struct:wpa_sm	access:public
wpa_sm::eap_conf_ctx	src/rsn_supp/wpa_i.h	/^	void *eap_conf_ctx;$/;"	m	struct:wpa_sm	access:public
wpa_sm::eap_workaround	src/rsn_supp/wpa_i.h	/^	int eap_workaround;$/;"	m	struct:wpa_sm	access:public
wpa_sm::eapol	src/rsn_supp/wpa_i.h	/^	struct eapol_sm *eapol; \/* EAPOL state machine from upper level code *\/$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::eapol_sm	access:public
wpa_sm::fast_reauth	src/rsn_supp/wpa_i.h	/^	int fast_reauth; \/* whether EAP fast re-authentication is enabled *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::ft_completed	src/rsn_supp/wpa_i.h	/^	int ft_completed;$/;"	m	struct:wpa_sm	access:public
wpa_sm::group_cipher	src/rsn_supp/wpa_i.h	/^	unsigned int group_cipher;$/;"	m	struct:wpa_sm	access:public
wpa_sm::ifname	src/rsn_supp/wpa_i.h	/^	const char *ifname;$/;"	m	struct:wpa_sm	access:public
wpa_sm::key_mgmt	src/rsn_supp/wpa_i.h	/^	unsigned int key_mgmt;$/;"	m	struct:wpa_sm	access:public
wpa_sm::l2_preauth	src/rsn_supp/wpa_i.h	/^	struct l2_packet_data *l2_preauth;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::l2_packet_data	access:public
wpa_sm::l2_preauth_br	src/rsn_supp/wpa_i.h	/^	struct l2_packet_data *l2_preauth_br;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::l2_packet_data	access:public
wpa_sm::l2_tdls	src/rsn_supp/wpa_i.h	/^	struct l2_packet_data *l2_tdls;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::l2_packet_data	access:public
wpa_sm::mdie_ft_capab	src/rsn_supp/wpa_i.h	/^	u8 mdie_ft_capab; \/* FT Capability and Policy from target AP MDIE *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::mfp	src/rsn_supp/wpa_i.h	/^	int mfp; \/* 0 = disabled, 1 = optional, 2 = mandatory *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::mgmt_group_cipher	src/rsn_supp/wpa_i.h	/^	unsigned int mgmt_group_cipher;$/;"	m	struct:wpa_sm	access:public
wpa_sm::mobility_domain	src/rsn_supp/wpa_i.h	/^	u8 mobility_domain[MOBILITY_DOMAIN_ID_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::network_ctx	src/rsn_supp/wpa_i.h	/^	void *network_ctx;$/;"	m	struct:wpa_sm	access:public
wpa_sm::over_the_ds_in_progress	src/rsn_supp/wpa_i.h	/^	int over_the_ds_in_progress;$/;"	m	struct:wpa_sm	access:public
wpa_sm::own_addr	src/rsn_supp/wpa_i.h	/^	u8 own_addr[ETH_ALEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::pairwise_cipher	src/rsn_supp/wpa_i.h	/^	unsigned int pairwise_cipher;$/;"	m	struct:wpa_sm	access:public
wpa_sm::peerkey	src/rsn_supp/wpa_i.h	/^	struct wpa_peerkey *peerkey;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_peerkey	access:public
wpa_sm::peerkey_enabled	src/rsn_supp/wpa_i.h	/^	int peerkey_enabled;$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmk	src/rsn_supp/wpa_i.h	/^	u8 pmk[PMK_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmk_len	src/rsn_supp/wpa_i.h	/^	size_t pmk_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmk_r0	src/rsn_supp/wpa_i.h	/^	u8 pmk_r0[PMK_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmk_r0_name	src/rsn_supp/wpa_i.h	/^	u8 pmk_r0_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmk_r1	src/rsn_supp/wpa_i.h	/^	u8 pmk_r1[PMK_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmk_r1_name	src/rsn_supp/wpa_i.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::pmksa	src/rsn_supp/wpa_i.h	/^	struct rsn_pmksa_cache *pmksa; \/* PMKSA cache *\/$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::rsn_pmksa_cache	access:public
wpa_sm::pmksa_candidates	src/rsn_supp/wpa_i.h	/^	struct dl_list pmksa_candidates;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::dl_list	access:public
wpa_sm::preauth_bssid	src/rsn_supp/wpa_i.h	/^	u8 preauth_bssid[ETH_ALEN]; \/* current RSN pre-auth peer or$/;"	m	struct:wpa_sm	access:public
wpa_sm::preauth_eapol	src/rsn_supp/wpa_i.h	/^	struct eapol_sm *preauth_eapol;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::eapol_sm	access:public
wpa_sm::proactive_key_caching	src/rsn_supp/wpa_i.h	/^	int proactive_key_caching;$/;"	m	struct:wpa_sm	access:public
wpa_sm::proto	src/rsn_supp/wpa_i.h	/^	unsigned int proto;$/;"	m	struct:wpa_sm	access:public
wpa_sm::ptk	src/rsn_supp/wpa_i.h	/^	struct wpa_ptk ptk, tptk;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_ptk	access:public
wpa_sm::ptk_set	src/rsn_supp/wpa_i.h	/^	int ptk_set, tptk_set;$/;"	m	struct:wpa_sm	access:public
wpa_sm::r0kh_id	src/rsn_supp/wpa_i.h	/^	u8 r0kh_id[FT_R0KH_ID_MAX_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::r0kh_id_len	src/rsn_supp/wpa_i.h	/^	size_t r0kh_id_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::r1kh_id	src/rsn_supp/wpa_i.h	/^	u8 r1kh_id[FT_R1KH_ID_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::renew_snonce	src/rsn_supp/wpa_i.h	/^	int renew_snonce;$/;"	m	struct:wpa_sm	access:public
wpa_sm::request_counter	src/rsn_supp/wpa_i.h	/^	u8 request_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::rsn_enabled	src/rsn_supp/wpa_i.h	/^	int rsn_enabled; \/* Whether RSN is enabled in configuration *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::rx_replay_counter	src/rsn_supp/wpa_i.h	/^	u8 rx_replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::rx_replay_counter_set	src/rsn_supp/wpa_i.h	/^	int rx_replay_counter_set;$/;"	m	struct:wpa_sm	access:public
wpa_sm::scard_ctx	src/rsn_supp/wpa_i.h	/^	void *scard_ctx; \/* context for smartcard callbacks *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::set_ptk_after_assoc	src/rsn_supp/wpa_i.h	/^	int set_ptk_after_assoc;$/;"	m	struct:wpa_sm	access:public
wpa_sm::snonce	src/rsn_supp/wpa_i.h	/^	u8 snonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_sm	access:public
wpa_sm::ssid	src/rsn_supp/wpa_i.h	/^	u8 ssid[32];$/;"	m	struct:wpa_sm	access:public
wpa_sm::ssid_len	src/rsn_supp/wpa_i.h	/^	size_t ssid_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm::target_ap	src/rsn_supp/wpa_i.h	/^	u8 target_ap[ETH_ALEN]; \/* over-the-DS target AP *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::tdls	src/rsn_supp/wpa_i.h	/^	struct wpa_tdls_peer *tdls;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::wpa_tdls_peer	access:public
wpa_sm::tdls_disabled	src/rsn_supp/wpa_i.h	/^	int tdls_disabled;$/;"	m	struct:wpa_sm	access:public
wpa_sm::tdls_external_setup	src/rsn_supp/wpa_i.h	/^	int tdls_external_setup;$/;"	m	struct:wpa_sm	access:public
wpa_sm::tdls_prohibited	src/rsn_supp/wpa_i.h	/^	int tdls_prohibited;$/;"	m	struct:wpa_sm	access:public
wpa_sm::tdls_supported	src/rsn_supp/wpa_i.h	/^	int tdls_supported;$/;"	m	struct:wpa_sm	access:public
wpa_sm::tptk	src/rsn_supp/wpa_i.h	/^	struct wpa_ptk ptk, tptk;$/;"	m	struct:wpa_sm	typeref:struct:wpa_sm::	access:public
wpa_sm::tptk_set	src/rsn_supp/wpa_i.h	/^	int ptk_set, tptk_set;$/;"	m	struct:wpa_sm	access:public
wpa_sm::wpa_ptk_rekey	src/rsn_supp/wpa_i.h	/^	int wpa_ptk_rekey;$/;"	m	struct:wpa_sm	access:public
wpa_sm::xxkey	src/rsn_supp/wpa_i.h	/^	u8 xxkey[PMK_LEN]; \/* PSK or the second 256 bits of MSK *\/$/;"	m	struct:wpa_sm	access:public
wpa_sm::xxkey_len	src/rsn_supp/wpa_i.h	/^	size_t xxkey_len;$/;"	m	struct:wpa_sm	access:public
wpa_sm_aborted_cached	src/rsn_supp/wpa.c	/^void wpa_sm_aborted_cached(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_aborted_cached	src/rsn_supp/wpa.h	/^static inline void wpa_sm_aborted_cached(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_aborted_cached	src/rsn_supp/wpa.h	/^void wpa_sm_aborted_cached(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_sm_add_pmkid	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_add_pmkid(struct wpa_sm *sm, const u8 *bssid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid, const u8 *pmkid)
wpa_sm_alloc_eapol	src/rsn_supp/wpa_i.h	/^static inline u8 * wpa_sm_alloc_eapol(struct wpa_sm *sm, u8 type,$/;"	f	signature:(struct wpa_sm *sm, u8 type, const void *data, u16 data_len, size_t *msg_len, void **data_pos)
wpa_sm_call_step	src/ap/wpa_auth.c	/^static void wpa_sm_call_step(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_sm_call_step	src/ap/wpa_auth.c	/^static void wpa_sm_call_step(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_sm_cancel_auth_timeout	src/rsn_supp/wpa_i.h	/^static inline void wpa_sm_cancel_auth_timeout(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_conf_params	src/rsn_supp/wpa.h	/^enum wpa_sm_conf_params {$/;"	g
wpa_sm_ctx	src/rsn_supp/wpa.h	/^struct wpa_sm_ctx {$/;"	s
wpa_sm_ctx::add_pmkid	src/rsn_supp/wpa.h	/^	int (*add_pmkid)(void *ctx, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::alloc_eapol	src/rsn_supp/wpa.h	/^	u8 * (*alloc_eapol)(void *ctx, u8 type, const void *data, u16 data_len,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::cancel_auth_timeout	src/rsn_supp/wpa.h	/^	void (*cancel_auth_timeout)(void *ctx);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::ctx	src/rsn_supp/wpa.h	/^	void *ctx; \/* pointer to arbitrary upper level context *\/$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::deauthenticate	src/rsn_supp/wpa.h	/^	void (*deauthenticate)(void * ctx, int reason_code); $/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::disassociate	src/rsn_supp/wpa.h	/^	void (*disassociate)(void *ctx, int reason_code);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::ether_send	src/rsn_supp/wpa.h	/^	int (*ether_send)(void *ctx, const u8 *dest, u16 proto, const u8 *buf,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::get_beacon_ie	src/rsn_supp/wpa.h	/^	int (*get_beacon_ie)(void *ctx);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::get_bssid	src/rsn_supp/wpa.h	/^	int (*get_bssid)(void *ctx, u8 *bssid);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::get_config_blob	src/rsn_supp/wpa.h	/^	const struct wpa_config_blob * (*get_config_blob)(void *ctx,$/;"	m	struct:wpa_sm_ctx	typeref:struct:wpa_sm_ctx::get_config_blob	access:public
wpa_sm_ctx::get_network_ctx	src/rsn_supp/wpa.h	/^	void * (*get_network_ctx)(void *ctx);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::get_state	src/rsn_supp/wpa.h	/^	enum wpa_states (*get_state)(void *ctx);$/;"	m	struct:wpa_sm_ctx	typeref:enum:wpa_sm_ctx::get_state	access:public
wpa_sm_ctx::mark_authenticated	src/rsn_supp/wpa.h	/^	int (*mark_authenticated)(void *ctx, const u8 *target_ap);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::mlme_setprotection	src/rsn_supp/wpa.h	/^	int (*mlme_setprotection)(void *ctx, const u8 *addr,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::msg_ctx	src/rsn_supp/wpa.h	/^	void *msg_ctx; \/* upper level context for wpa_msg() calls *\/$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::remove_pmkid	src/rsn_supp/wpa.h	/^	int (*remove_pmkid)(void *ctx, const u8 *bssid, const u8 *pmkid);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::send_ft_action	src/rsn_supp/wpa.h	/^	int (*send_ft_action)(void *ctx, u8 action, const u8 *target_ap,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::send_tdls_mgmt	src/rsn_supp/wpa.h	/^	int (*send_tdls_mgmt)(void *ctx, const u8 *dst,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::set_config_blob	src/rsn_supp/wpa.h	/^	void (*set_config_blob)(void *ctx, struct wpa_config_blob *blob);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::set_key	src/rsn_supp/wpa.h	/^	int (*set_key)(void *ctx, enum wpa_alg alg,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::set_rekey_offload	src/rsn_supp/wpa.h	/^	void (*set_rekey_offload)(void *ctx, const u8 *kek, const u8 *kck,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::set_state	src/rsn_supp/wpa.h	/^	void (*set_state)(void *ctx, enum wpa_states state);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::tdls_get_capa	src/rsn_supp/wpa.h	/^	int (*tdls_get_capa)(void *ctx, int *tdls_supported,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::tdls_oper	src/rsn_supp/wpa.h	/^	int (*tdls_oper)(void *ctx, int oper, const u8 *peer);$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::tdls_peer_addset	src/rsn_supp/wpa.h	/^	int (*tdls_peer_addset)(void *ctx, const u8 *addr, int add,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_ctx::update_ft_ies	src/rsn_supp/wpa.h	/^	int (*update_ft_ies)(void *ctx, const u8 *md, const u8 *ies,$/;"	m	struct:wpa_sm_ctx	access:public
wpa_sm_deauthenticate	src/rsn_supp/wpa_i.h	/^static inline void wpa_sm_deauthenticate(struct wpa_sm *sm, int reason_code)$/;"	f	signature:(struct wpa_sm *sm, int reason_code)
wpa_sm_deinit	src/rsn_supp/wpa.c	/^void wpa_sm_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_deinit	src/rsn_supp/wpa.h	/^static inline void wpa_sm_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_deinit	src/rsn_supp/wpa.h	/^void wpa_sm_deinit(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_sm_disassociate	src/rsn_supp/wpa_i.h	/^static inline void wpa_sm_disassociate(struct wpa_sm *sm, int reason_code)$/;"	f	signature:(struct wpa_sm *sm, int reason_code)
wpa_sm_drop_sa	src/rsn_supp/wpa.c	/^void wpa_sm_drop_sa(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_drop_sa	src/rsn_supp/wpa.h	/^static inline void wpa_sm_drop_sa(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_drop_sa	src/rsn_supp/wpa.h	/^void wpa_sm_drop_sa(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_sm_ether_send	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_ether_send(struct wpa_sm *sm, const u8 *dest,$/;"	f	signature:(struct wpa_sm *sm, const u8 *dest, u16 proto, const u8 *buf, size_t len)
wpa_sm_get_beacon_ie	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_get_beacon_ie(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_get_bssid	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_get_bssid(struct wpa_sm *sm, u8 *bssid)$/;"	f	signature:(struct wpa_sm *sm, u8 *bssid)
wpa_sm_get_mib	src/rsn_supp/wpa.c	/^int wpa_sm_get_mib(struct wpa_sm *sm, char *buf, size_t buflen)$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t buflen)
wpa_sm_get_mib	src/rsn_supp/wpa.h	/^int wpa_sm_get_mib(struct wpa_sm *sm, char *buf, size_t buflen);$/;"	p	signature:(struct wpa_sm *sm, char *buf, size_t buflen)
wpa_sm_get_mib	src/rsn_supp/wpa.h	/^static inline int wpa_sm_get_mib(struct wpa_sm *sm, char *buf, size_t buflen)$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t buflen)
wpa_sm_get_network_ctx	src/rsn_supp/wpa_i.h	/^static inline void * wpa_sm_get_network_ctx(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_get_param	src/rsn_supp/wpa.c	/^unsigned int wpa_sm_get_param(struct wpa_sm *sm, enum wpa_sm_conf_params param)$/;"	f	signature:(struct wpa_sm *sm, enum wpa_sm_conf_params param)
wpa_sm_get_param	src/rsn_supp/wpa.h	/^static inline unsigned int wpa_sm_get_param(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, enum wpa_sm_conf_params param)
wpa_sm_get_param	src/rsn_supp/wpa.h	/^unsigned int wpa_sm_get_param(struct wpa_sm *sm,$/;"	p	signature:(struct wpa_sm *sm, enum wpa_sm_conf_params param)
wpa_sm_get_state	src/rsn_supp/wpa_i.h	/^static inline enum wpa_states wpa_sm_get_state(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_get_status	src/rsn_supp/wpa.c	/^int wpa_sm_get_status(struct wpa_sm *sm, char *buf, size_t buflen,$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t buflen, int verbose)
wpa_sm_get_status	src/rsn_supp/wpa.h	/^int wpa_sm_get_status(struct wpa_sm *sm, char *buf, size_t buflen,$/;"	p	signature:(struct wpa_sm *sm, char *buf, size_t buflen, int verbose)
wpa_sm_get_status	src/rsn_supp/wpa.h	/^static inline int wpa_sm_get_status(struct wpa_sm *sm, char *buf,$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t buflen, int verbose)
wpa_sm_has_ptk	src/rsn_supp/wpa.c	/^int wpa_sm_has_ptk(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_has_ptk	src/rsn_supp/wpa.h	/^int wpa_sm_has_ptk(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_sm_has_ptk	src/rsn_supp/wpa.h	/^static inline int wpa_sm_has_ptk(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_init	src/rsn_supp/wpa.c	/^struct wpa_sm * wpa_sm_init(struct wpa_sm_ctx *ctx)$/;"	f	signature:(struct wpa_sm_ctx *ctx)
wpa_sm_init	src/rsn_supp/wpa.h	/^static inline struct wpa_sm * wpa_sm_init(struct wpa_sm_ctx *ctx)$/;"	f	signature:(struct wpa_sm_ctx *ctx)
wpa_sm_init	src/rsn_supp/wpa.h	/^struct wpa_sm * wpa_sm_init(struct wpa_sm_ctx *ctx);$/;"	p	signature:(struct wpa_sm_ctx *ctx)
wpa_sm_key_request	src/rsn_supp/wpa.c	/^void wpa_sm_key_request(struct wpa_sm *sm, int error, int pairwise)$/;"	f	signature:(struct wpa_sm *sm, int error, int pairwise)
wpa_sm_key_request	src/rsn_supp/wpa.h	/^static inline void wpa_sm_key_request(struct wpa_sm *sm, int error,$/;"	f	signature:(struct wpa_sm *sm, int error, int pairwise)
wpa_sm_key_request	src/rsn_supp/wpa.h	/^void wpa_sm_key_request(struct wpa_sm *sm, int error, int pairwise);$/;"	p	signature:(struct wpa_sm *sm, int error, int pairwise)
wpa_sm_mark_authenticated	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_mark_authenticated(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, const u8 *target_ap)
wpa_sm_mlme_setprotection	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_mlme_setprotection(struct wpa_sm *sm, const u8 *addr,$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr, int protect_type, int key_type)
wpa_sm_notify_assoc	src/rsn_supp/wpa.c	/^void wpa_sm_notify_assoc(struct wpa_sm *sm, const u8 *bssid)$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid)
wpa_sm_notify_assoc	src/rsn_supp/wpa.h	/^static inline void wpa_sm_notify_assoc(struct wpa_sm *sm, const u8 *bssid)$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid)
wpa_sm_notify_assoc	src/rsn_supp/wpa.h	/^void wpa_sm_notify_assoc(struct wpa_sm *sm, const u8 *bssid);$/;"	p	signature:(struct wpa_sm *sm, const u8 *bssid)
wpa_sm_notify_disassoc	src/rsn_supp/wpa.c	/^void wpa_sm_notify_disassoc(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_notify_disassoc	src/rsn_supp/wpa.h	/^static inline void wpa_sm_notify_disassoc(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_notify_disassoc	src/rsn_supp/wpa.h	/^void wpa_sm_notify_disassoc(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_sm_parse_own_wpa_ie	src/rsn_supp/wpa.c	/^int wpa_sm_parse_own_wpa_ie(struct wpa_sm *sm, struct wpa_ie_data *data)$/;"	f	signature:(struct wpa_sm *sm, struct wpa_ie_data *data)
wpa_sm_parse_own_wpa_ie	src/rsn_supp/wpa.h	/^int wpa_sm_parse_own_wpa_ie(struct wpa_sm *sm, struct wpa_ie_data *data);$/;"	p	signature:(struct wpa_sm *sm, struct wpa_ie_data *data)
wpa_sm_parse_own_wpa_ie	src/rsn_supp/wpa.h	/^static inline int wpa_sm_parse_own_wpa_ie(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, struct wpa_ie_data *data)
wpa_sm_pmksa_cache_flush	src/rsn_supp/wpa.c	/^void wpa_sm_pmksa_cache_flush(struct wpa_sm *sm, void *network_ctx)$/;"	f	signature:(struct wpa_sm *sm, void *network_ctx)
wpa_sm_pmksa_cache_flush	src/rsn_supp/wpa.h	/^static inline void wpa_sm_pmksa_cache_flush(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, void *network_ctx)
wpa_sm_pmksa_cache_flush	src/rsn_supp/wpa.h	/^void wpa_sm_pmksa_cache_flush(struct wpa_sm *sm, void *network_ctx);$/;"	p	signature:(struct wpa_sm *sm, void *network_ctx)
wpa_sm_pmksa_cache_list	src/rsn_supp/wpa.c	/^int wpa_sm_pmksa_cache_list(struct wpa_sm *sm, char *buf, size_t len)$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t len)
wpa_sm_pmksa_cache_list	src/rsn_supp/wpa.h	/^int wpa_sm_pmksa_cache_list(struct wpa_sm *sm, char *buf, size_t len);$/;"	p	signature:(struct wpa_sm *sm, char *buf, size_t len)
wpa_sm_pmksa_cache_list	src/rsn_supp/wpa.h	/^static inline int wpa_sm_pmksa_cache_list(struct wpa_sm *sm, char *buf,$/;"	f	signature:(struct wpa_sm *sm, char *buf, size_t len)
wpa_sm_pmksa_free_cb	src/rsn_supp/wpa.c	/^static void wpa_sm_pmksa_free_cb(struct rsn_pmksa_cache_entry *entry,$/;"	f	file:	signature:(struct rsn_pmksa_cache_entry *entry, void *ctx, int replace)
wpa_sm_rekey_ptk	src/rsn_supp/wpa.c	/^static void wpa_sm_rekey_ptk(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_sm_remove_pmkid	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_remove_pmkid(struct wpa_sm *sm, const u8 *bssid,$/;"	f	signature:(struct wpa_sm *sm, const u8 *bssid, const u8 *pmkid)
wpa_sm_rx_eapol	src/rsn_supp/wpa.c	/^int wpa_sm_rx_eapol(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_sm_rx_eapol	src/rsn_supp/wpa.h	/^int wpa_sm_rx_eapol(struct wpa_sm *sm, const u8 *src_addr,$/;"	p	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_sm_rx_eapol	src/rsn_supp/wpa.h	/^static inline int wpa_sm_rx_eapol(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_sm_send_ft_action	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_send_ft_action(struct wpa_sm *sm, u8 action,$/;"	f	signature:(struct wpa_sm *sm, u8 action, const u8 *target_ap, const u8 *ies, size_t ies_len)
wpa_sm_send_tdls_mgmt	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_send_tdls_mgmt(struct wpa_sm *sm, const u8 *dst,$/;"	f	signature:(struct wpa_sm *sm, const u8 *dst, u8 action_code, u8 dialog_token, u16 status_code, const u8 *buf, size_t len)
wpa_sm_set_ap_rsn_ie	src/rsn_supp/wpa.c	/^int wpa_sm_set_ap_rsn_ie(struct wpa_sm *sm, const u8 *ie, size_t len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_ap_rsn_ie	src/rsn_supp/wpa.h	/^int wpa_sm_set_ap_rsn_ie(struct wpa_sm *sm, const u8 *ie, size_t len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_ap_rsn_ie	src/rsn_supp/wpa.h	/^static inline int wpa_sm_set_ap_rsn_ie(struct wpa_sm *sm, const u8 *ie,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_ap_wpa_ie	src/rsn_supp/wpa.c	/^int wpa_sm_set_ap_wpa_ie(struct wpa_sm *sm, const u8 *ie, size_t len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_ap_wpa_ie	src/rsn_supp/wpa.h	/^int wpa_sm_set_ap_wpa_ie(struct wpa_sm *sm, const u8 *ie, size_t len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_ap_wpa_ie	src/rsn_supp/wpa.h	/^static inline int wpa_sm_set_ap_wpa_ie(struct wpa_sm *sm, const u8 *ie,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_assoc_wpa_ie	src/rsn_supp/wpa.c	/^int wpa_sm_set_assoc_wpa_ie(struct wpa_sm *sm, const u8 *ie, size_t len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_assoc_wpa_ie	src/rsn_supp/wpa.h	/^int wpa_sm_set_assoc_wpa_ie(struct wpa_sm *sm, const u8 *ie, size_t len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_assoc_wpa_ie	src/rsn_supp/wpa.h	/^static inline int wpa_sm_set_assoc_wpa_ie(struct wpa_sm *sm, const u8 *ie,$/;"	f	signature:(struct wpa_sm *sm, const u8 *ie, size_t len)
wpa_sm_set_assoc_wpa_ie_default	src/rsn_supp/wpa.c	/^int wpa_sm_set_assoc_wpa_ie_default(struct wpa_sm *sm, u8 *wpa_ie,$/;"	f	signature:(struct wpa_sm *sm, u8 *wpa_ie, size_t *wpa_ie_len)
wpa_sm_set_assoc_wpa_ie_default	src/rsn_supp/wpa.h	/^int wpa_sm_set_assoc_wpa_ie_default(struct wpa_sm *sm, u8 *wpa_ie,$/;"	p	signature:(struct wpa_sm *sm, u8 *wpa_ie, size_t *wpa_ie_len)
wpa_sm_set_assoc_wpa_ie_default	src/rsn_supp/wpa.h	/^static inline int wpa_sm_set_assoc_wpa_ie_default(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, u8 *wpa_ie, size_t *wpa_ie_len)
wpa_sm_set_config	src/rsn_supp/wpa.c	/^void wpa_sm_set_config(struct wpa_sm *sm, struct rsn_supp_config *config)$/;"	f	signature:(struct wpa_sm *sm, struct rsn_supp_config *config)
wpa_sm_set_config	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_config(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, struct rsn_supp_config *config)
wpa_sm_set_config	src/rsn_supp/wpa.h	/^void wpa_sm_set_config(struct wpa_sm *sm, struct rsn_supp_config *config);$/;"	p	signature:(struct wpa_sm *sm, struct rsn_supp_config *config)
wpa_sm_set_eapol	src/rsn_supp/wpa.c	/^void wpa_sm_set_eapol(struct wpa_sm *sm, struct eapol_sm *eapol)$/;"	f	signature:(struct wpa_sm *sm, struct eapol_sm *eapol)
wpa_sm_set_eapol	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_eapol(struct wpa_sm *sm, struct eapol_sm *eapol)$/;"	f	signature:(struct wpa_sm *sm, struct eapol_sm *eapol)
wpa_sm_set_eapol	src/rsn_supp/wpa.h	/^void wpa_sm_set_eapol(struct wpa_sm *sm, struct eapol_sm *eapol);$/;"	p	signature:(struct wpa_sm *sm, struct eapol_sm *eapol)
wpa_sm_set_fast_reauth	src/rsn_supp/wpa.c	/^void wpa_sm_set_fast_reauth(struct wpa_sm *sm, int fast_reauth)$/;"	f	signature:(struct wpa_sm *sm, int fast_reauth)
wpa_sm_set_fast_reauth	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_fast_reauth(struct wpa_sm *sm, int fast_reauth)$/;"	f	signature:(struct wpa_sm *sm, int fast_reauth)
wpa_sm_set_fast_reauth	src/rsn_supp/wpa.h	/^void wpa_sm_set_fast_reauth(struct wpa_sm *sm, int fast_reauth);$/;"	p	signature:(struct wpa_sm *sm, int fast_reauth)
wpa_sm_set_ft_params	src/rsn_supp/wpa.h	/^int wpa_sm_set_ft_params(struct wpa_sm *sm, const u8 *ies, size_t ies_len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len)
wpa_sm_set_ft_params	src/rsn_supp/wpa.h	/^wpa_sm_set_ft_params(struct wpa_sm *sm, const u8 *ies, size_t ies_len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len)
wpa_sm_set_ft_params	src/rsn_supp/wpa_ft.c	/^int wpa_sm_set_ft_params(struct wpa_sm *sm, const u8 *ies, size_t ies_len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t ies_len)
wpa_sm_set_ifname	src/rsn_supp/wpa.c	/^void wpa_sm_set_ifname(struct wpa_sm *sm, const char *ifname,$/;"	f	signature:(struct wpa_sm *sm, const char *ifname, const char *bridge_ifname)
wpa_sm_set_ifname	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_ifname(struct wpa_sm *sm, const char *ifname,$/;"	f	signature:(struct wpa_sm *sm, const char *ifname, const char *bridge_ifname)
wpa_sm_set_ifname	src/rsn_supp/wpa.h	/^void wpa_sm_set_ifname(struct wpa_sm *sm, const char *ifname,$/;"	p	signature:(struct wpa_sm *sm, const char *ifname, const char *bridge_ifname)
wpa_sm_set_key	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_set_key(struct wpa_sm *sm, enum wpa_alg alg,$/;"	f	signature:(struct wpa_sm *sm, enum wpa_alg alg, const u8 *addr, int key_idx, int set_tx, const u8 *seq, size_t seq_len, const u8 *key, size_t key_len)
wpa_sm_set_own_addr	src/rsn_supp/wpa.c	/^void wpa_sm_set_own_addr(struct wpa_sm *sm, const u8 *addr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_sm_set_own_addr	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_own_addr(struct wpa_sm *sm, const u8 *addr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_sm_set_own_addr	src/rsn_supp/wpa.h	/^void wpa_sm_set_own_addr(struct wpa_sm *sm, const u8 *addr);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_sm_set_param	src/rsn_supp/wpa.c	/^int wpa_sm_set_param(struct wpa_sm *sm, enum wpa_sm_conf_params param,$/;"	f	signature:(struct wpa_sm *sm, enum wpa_sm_conf_params param, unsigned int value)
wpa_sm_set_param	src/rsn_supp/wpa.h	/^int wpa_sm_set_param(struct wpa_sm *sm, enum wpa_sm_conf_params param,$/;"	p	signature:(struct wpa_sm *sm, enum wpa_sm_conf_params param, unsigned int value)
wpa_sm_set_param	src/rsn_supp/wpa.h	/^static inline int wpa_sm_set_param(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, enum wpa_sm_conf_params param, unsigned int value)
wpa_sm_set_pmk	src/rsn_supp/wpa.c	/^void wpa_sm_set_pmk(struct wpa_sm *sm, const u8 *pmk, size_t pmk_len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *pmk, size_t pmk_len)
wpa_sm_set_pmk	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_pmk(struct wpa_sm *sm, const u8 *pmk,$/;"	f	signature:(struct wpa_sm *sm, const u8 *pmk, size_t pmk_len)
wpa_sm_set_pmk	src/rsn_supp/wpa.h	/^void wpa_sm_set_pmk(struct wpa_sm *sm, const u8 *pmk, size_t pmk_len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *pmk, size_t pmk_len)
wpa_sm_set_pmk_from_pmksa	src/rsn_supp/wpa.c	/^void wpa_sm_set_pmk_from_pmksa(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_set_pmk_from_pmksa	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_pmk_from_pmksa(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_set_pmk_from_pmksa	src/rsn_supp/wpa.h	/^void wpa_sm_set_pmk_from_pmksa(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_sm_set_rekey_offload	src/rsn_supp/wpa_i.h	/^static inline void wpa_sm_set_rekey_offload(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_sm_set_scard_ctx	src/rsn_supp/wpa.c	/^void wpa_sm_set_scard_ctx(struct wpa_sm *sm, void *scard_ctx)$/;"	f	signature:(struct wpa_sm *sm, void *scard_ctx)
wpa_sm_set_scard_ctx	src/rsn_supp/wpa.h	/^static inline void wpa_sm_set_scard_ctx(struct wpa_sm *sm, void *scard_ctx)$/;"	f	signature:(struct wpa_sm *sm, void *scard_ctx)
wpa_sm_set_scard_ctx	src/rsn_supp/wpa.h	/^void wpa_sm_set_scard_ctx(struct wpa_sm *sm, void *scard_ctx);$/;"	p	signature:(struct wpa_sm *sm, void *scard_ctx)
wpa_sm_set_state	src/rsn_supp/wpa_i.h	/^static inline void wpa_sm_set_state(struct wpa_sm *sm, enum wpa_states state)$/;"	f	signature:(struct wpa_sm *sm, enum wpa_states state)
wpa_sm_start_preauth	src/rsn_supp/wpa.c	/^static void wpa_sm_start_preauth(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_sm_step	src/ap/wpa_auth.c	/^static int wpa_sm_step(struct wpa_state_machine *sm)$/;"	f	file:	signature:(struct wpa_state_machine *sm)
wpa_sm_step	src/ap/wpa_auth.c	/^static int wpa_sm_step(struct wpa_state_machine *sm);$/;"	p	file:	signature:(struct wpa_state_machine *sm)
wpa_sm_stkstart	src/rsn_supp/peerkey.c	/^int wpa_sm_stkstart(struct wpa_sm *sm, const u8 *peer)$/;"	f	signature:(struct wpa_sm *sm, const u8 *peer)
wpa_sm_stkstart	src/rsn_supp/wpa.h	/^int wpa_sm_stkstart(struct wpa_sm *sm, const u8 *peer);$/;"	p	signature:(struct wpa_sm *sm, const u8 *peer)
wpa_sm_stkstart	src/rsn_supp/wpa.h	/^static inline int wpa_sm_stkstart(struct wpa_sm *sm, const u8 *peer)$/;"	f	signature:(struct wpa_sm *sm, const u8 *peer)
wpa_sm_tdls_get_capa	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_tdls_get_capa(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, int *tdls_supported, int *tdls_ext_setup)
wpa_sm_tdls_oper	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_tdls_oper(struct wpa_sm *sm, int oper,$/;"	f	signature:(struct wpa_sm *sm, int oper, const u8 *peer)
wpa_sm_tdls_peer_addset	src/rsn_supp/wpa_i.h	/^wpa_sm_tdls_peer_addset(struct wpa_sm *sm, const u8 *addr, int add,$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr, int add, u16 capability, const u8 *supp_rates, size_t supp_rates_len)
wpa_sm_update_ft_ies	src/rsn_supp/wpa_i.h	/^static inline int wpa_sm_update_ft_ies(struct wpa_sm *sm, const u8 *md,$/;"	f	signature:(struct wpa_sm *sm, const u8 *md, const u8 *ies, size_t ies_len)
wpa_sm_update_replay_ctr	src/rsn_supp/wpa.c	/^void wpa_sm_update_replay_ctr(struct wpa_sm *sm, const u8 *replay_ctr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *replay_ctr)
wpa_sm_update_replay_ctr	src/rsn_supp/wpa.h	/^static inline void wpa_sm_update_replay_ctr(struct wpa_sm *sm,$/;"	f	signature:(struct wpa_sm *sm, const u8 *replay_ctr)
wpa_sm_update_replay_ctr	src/rsn_supp/wpa.h	/^void wpa_sm_update_replay_ctr(struct wpa_sm *sm, const u8 *replay_ctr);$/;"	p	signature:(struct wpa_sm *sm, const u8 *replay_ctr)
wpa_sm_write_assoc_resp_ies	src/ap/wpa_auth.h	/^u8 * wpa_sm_write_assoc_resp_ies(struct wpa_state_machine *sm, u8 *pos,$/;"	p	signature:(struct wpa_state_machine *sm, u8 *pos, size_t max_len, int auth_alg, const u8 *req_ies, size_t req_ies_len)
wpa_sm_write_assoc_resp_ies	src/ap/wpa_auth_ft.c	/^u8 * wpa_sm_write_assoc_resp_ies(struct wpa_state_machine *sm, u8 *pos,$/;"	f	signature:(struct wpa_state_machine *sm, u8 *pos, size_t max_len, int auth_alg, const u8 *req_ies, size_t req_ies_len)
wpa_smk_error	src/ap/peerkey_auth.c	/^void wpa_smk_error(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key)
wpa_smk_error	src/ap/wpa_auth_i.h	/^void wpa_smk_error(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key)
wpa_smk_m1	src/ap/peerkey_auth.c	/^void wpa_smk_m1(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key)
wpa_smk_m1	src/ap/wpa_auth_i.h	/^void wpa_smk_m1(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key)
wpa_smk_m3	src/ap/peerkey_auth.c	/^void wpa_smk_m3(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key)
wpa_smk_m3	src/ap/wpa_auth_i.h	/^void wpa_smk_m3(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, struct wpa_eapol_key *key)
wpa_smk_send_error	src/ap/peerkey_auth.c	/^static void wpa_smk_send_error(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, const u8 *peer, u16 mui, u16 error_type)
wpa_snprintf_hex	src/utils/common.c	/^int wpa_snprintf_hex(char *buf, size_t buf_size, const u8 *data, size_t len)$/;"	f	signature:(char *buf, size_t buf_size, const u8 *data, size_t len)
wpa_snprintf_hex	src/utils/common.h	/^int wpa_snprintf_hex(char *buf, size_t buf_size, const u8 *data, size_t len);$/;"	p	signature:(char *buf, size_t buf_size, const u8 *data, size_t len)
wpa_snprintf_hex_uppercase	src/utils/common.c	/^int wpa_snprintf_hex_uppercase(char *buf, size_t buf_size, const u8 *data,$/;"	f	signature:(char *buf, size_t buf_size, const u8 *data, size_t len)
wpa_snprintf_hex_uppercase	src/utils/common.h	/^int wpa_snprintf_hex_uppercase(char *buf, size_t buf_size, const u8 *data,$/;"	p	signature:(char *buf, size_t buf_size, const u8 *data, size_t len)
wpa_ssid_txt	src/utils/common.c	/^const char * wpa_ssid_txt(const u8 *ssid, size_t ssid_len)$/;"	f	signature:(const u8 *ssid, size_t ssid_len)
wpa_ssid_txt	src/utils/common.h	/^const char * wpa_ssid_txt(const u8 *ssid, size_t ssid_len);$/;"	p	signature:(const u8 *ssid, size_t ssid_len)
wpa_sta_disconnect	src/ap/wpa_auth.c	/^static void wpa_sta_disconnect(struct wpa_authenticator *wpa_auth,$/;"	f	file:	signature:(struct wpa_authenticator *wpa_auth, const u8 *addr)
wpa_state_machine	src/ap/wpa_auth_i.h	/^struct wpa_state_machine {$/;"	s
wpa_state_machine::ANonce	src/ap/wpa_auth_i.h	/^	u8 ANonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::AuthenticationRequest	src/ap/wpa_auth_i.h	/^	Boolean AuthenticationRequest;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::DeauthenticationRequest	src/ap/wpa_auth_i.h	/^	Boolean DeauthenticationRequest;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::Disconnect	src/ap/wpa_auth_i.h	/^	Boolean Disconnect;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::EAPOLKeyPairwise	src/ap/wpa_auth_i.h	/^	Boolean EAPOLKeyPairwise;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::EAPOLKeyReceived	src/ap/wpa_auth_i.h	/^	Boolean EAPOLKeyReceived;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::EAPOLKeyRequest	src/ap/wpa_auth_i.h	/^	Boolean EAPOLKeyRequest;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::GTimeoutCtr	src/ap/wpa_auth_i.h	/^	int GTimeoutCtr;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::GUpdateStationKeys	src/ap/wpa_auth_i.h	/^	Boolean GUpdateStationKeys;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::Init	src/ap/wpa_auth_i.h	/^	Boolean Init;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::MICVerified	src/ap/wpa_auth_i.h	/^	Boolean MICVerified;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::PInitAKeys	src/ap/wpa_auth_i.h	/^	Boolean PInitAKeys; \/* WPA only, not in IEEE 802.11i *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::PMK	src/ap/wpa_auth_i.h	/^	u8 PMK[PMK_LEN];$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::PTK	src/ap/wpa_auth_i.h	/^	struct wpa_ptk PTK;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::wpa_ptk	access:public
wpa_state_machine::PTKRequest	src/ap/wpa_auth_i.h	/^	Boolean PTKRequest; \/* not in IEEE 802.11i state machine *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::PTK_valid	src/ap/wpa_auth_i.h	/^	Boolean PTK_valid;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::Pair	src/ap/wpa_auth_i.h	/^	Boolean Pair;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::PtkGroupInit	src/ap/wpa_auth_i.h	/^	Boolean PtkGroupInit; \/* init request for PTK Group state machine *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::ReAuthenticationRequest	src/ap/wpa_auth_i.h	/^	Boolean ReAuthenticationRequest;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::SNonce	src/ap/wpa_auth_i.h	/^	u8 SNonce[WPA_NONCE_LEN];$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::TimeoutCtr	src/ap/wpa_auth_i.h	/^	int TimeoutCtr;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::TimeoutEvt	src/ap/wpa_auth_i.h	/^	Boolean TimeoutEvt;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::WPA_PTK_AUTHENTICATION	src/ap/wpa_auth_i.h	/^		WPA_PTK_AUTHENTICATION, WPA_PTK_AUTHENTICATION2,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_AUTHENTICATION2	src/ap/wpa_auth_i.h	/^		WPA_PTK_AUTHENTICATION, WPA_PTK_AUTHENTICATION2,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_DISCONNECT	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITIALIZE, WPA_PTK_DISCONNECT, WPA_PTK_DISCONNECTED,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_DISCONNECTED	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITIALIZE, WPA_PTK_DISCONNECT, WPA_PTK_DISCONNECTED,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_GROUP_IDLE	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_IDLE = 0,$/;"	e	enum:wpa_state_machine::__anon14
wpa_state_machine::WPA_PTK_GROUP_KEYERROR	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_KEYERROR$/;"	e	enum:wpa_state_machine::__anon14
wpa_state_machine::WPA_PTK_GROUP_REKEYESTABLISHED	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_REKEYESTABLISHED,$/;"	e	enum:wpa_state_machine::__anon14
wpa_state_machine::WPA_PTK_GROUP_REKEYNEGOTIATING	src/ap/wpa_auth_i.h	/^		WPA_PTK_GROUP_REKEYNEGOTIATING,$/;"	e	enum:wpa_state_machine::__anon14
wpa_state_machine::WPA_PTK_INITIALIZE	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITIALIZE, WPA_PTK_DISCONNECT, WPA_PTK_DISCONNECTED,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_INITPMK	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITPMK, WPA_PTK_INITPSK, WPA_PTK_PTKSTART,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_INITPSK	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITPMK, WPA_PTK_INITPSK, WPA_PTK_PTKSTART,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_PTKCALCNEGOTIATING	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKCALCNEGOTIATING, WPA_PTK_PTKCALCNEGOTIATING2,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_PTKCALCNEGOTIATING2	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKCALCNEGOTIATING, WPA_PTK_PTKCALCNEGOTIATING2,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_PTKINITDONE	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKINITNEGOTIATING, WPA_PTK_PTKINITDONE$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_PTKINITNEGOTIATING	src/ap/wpa_auth_i.h	/^		WPA_PTK_PTKINITNEGOTIATING, WPA_PTK_PTKINITDONE$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_PTK_PTKSTART	src/ap/wpa_auth_i.h	/^		WPA_PTK_INITPMK, WPA_PTK_INITPSK, WPA_PTK_PTKSTART,$/;"	e	enum:wpa_state_machine::__anon13
wpa_state_machine::WPA_VERSION_NO_WPA	src/ap/wpa_auth_i.h	/^		WPA_VERSION_NO_WPA = 0 \/* WPA not used *\/,$/;"	e	enum:wpa_state_machine::__anon16
wpa_state_machine::WPA_VERSION_WPA	src/ap/wpa_auth_i.h	/^		WPA_VERSION_WPA = 1 \/* WPA \/ IEEE 802.11i\/D3.0 *\/,$/;"	e	enum:wpa_state_machine::__anon16
wpa_state_machine::WPA_VERSION_WPA2	src/ap/wpa_auth_i.h	/^		WPA_VERSION_WPA2 = 2 \/* WPA2 \/ IEEE 802.11i *\/$/;"	e	enum:wpa_state_machine::__anon16
wpa_state_machine::__anon15::counter	src/ap/wpa_auth_i.h	/^		u8 counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_state_machine::__anon15	access:public
wpa_state_machine::__anon15::valid	src/ap/wpa_auth_i.h	/^		Boolean valid;$/;"	m	struct:wpa_state_machine::__anon15	access:public
wpa_state_machine::addr	src/ap/wpa_auth_i.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::assoc_resp_ftie	src/ap/wpa_auth_i.h	/^	u8 *assoc_resp_ftie;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::changed	src/ap/wpa_auth_i.h	/^	unsigned int changed:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::dot11RSNAStatsTKIPLocalMICFailures	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAStatsTKIPLocalMICFailures;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::dot11RSNAStatsTKIPRemoteMICFailures	src/ap/wpa_auth_i.h	/^	u32 dot11RSNAStatsTKIPRemoteMICFailures;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::ft_completed	src/ap/wpa_auth_i.h	/^	unsigned int ft_completed:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::group	src/ap/wpa_auth_i.h	/^	struct wpa_group *group;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::wpa_group	access:public
wpa_state_machine::has_GTK	src/ap/wpa_auth_i.h	/^	Boolean has_GTK;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::in_step_loop	src/ap/wpa_auth_i.h	/^	unsigned int in_step_loop:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::key_replay	src/ap/wpa_auth_i.h	/^	} key_replay[RSNA_MAX_EAPOL_RETRIES];$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::__anon15	access:public
wpa_state_machine::keycount	src/ap/wpa_auth_i.h	/^	int keycount;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::last_rx_eapol_key	src/ap/wpa_auth_i.h	/^	u8 *last_rx_eapol_key; \/* starting from IEEE 802.1X header *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::last_rx_eapol_key_len	src/ap/wpa_auth_i.h	/^	size_t last_rx_eapol_key_len;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::mgmt_frame_prot	src/ap/wpa_auth_i.h	/^	unsigned int mgmt_frame_prot:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pairwise	src/ap/wpa_auth_i.h	/^	int pairwise; \/* Pairwise cipher suite, WPA_CIPHER_* *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pairwise_set	src/ap/wpa_auth_i.h	/^	Boolean pairwise_set;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pending_1_of_4_timeout	src/ap/wpa_auth_i.h	/^	int pending_1_of_4_timeout;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pending_deinit	src/ap/wpa_auth_i.h	/^	unsigned int pending_deinit:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pmk_r1_name	src/ap/wpa_auth_i.h	/^	u8 pmk_r1_name[WPA_PMK_NAME_LEN]; \/* PMKR1Name derived from FT Auth$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pmk_r1_name_valid	src/ap/wpa_auth_i.h	/^	unsigned int pmk_r1_name_valid:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::pmksa	src/ap/wpa_auth_i.h	/^	struct rsn_pmksa_cache_entry *pmksa;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::rsn_pmksa_cache_entry	access:public
wpa_state_machine::r0kh_id	src/ap/wpa_auth_i.h	/^	u8 r0kh_id[FT_R0KH_ID_MAX_LEN]; \/* R0KH-ID from FT Auth Request *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::r0kh_id_len	src/ap/wpa_auth_i.h	/^	size_t r0kh_id_len;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::req_replay_counter	src/ap/wpa_auth_i.h	/^	u8 req_replay_counter[WPA_REPLAY_COUNTER_LEN];$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::req_replay_counter_used	src/ap/wpa_auth_i.h	/^	int req_replay_counter_used;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::rx_eapol_key_secure	src/ap/wpa_auth_i.h	/^	unsigned int rx_eapol_key_secure:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::started	src/ap/wpa_auth_i.h	/^	unsigned int started:1;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::sup_pmk_r1_name	src/ap/wpa_auth_i.h	/^	u8 sup_pmk_r1_name[WPA_PMK_NAME_LEN]; \/* PMKR1Name from EAPOL-Key$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::wpa	src/ap/wpa_auth_i.h	/^	} wpa;$/;"	m	struct:wpa_state_machine	typeref:enum:wpa_state_machine::__anon16	access:public
wpa_state_machine::wpa_auth	src/ap/wpa_auth_i.h	/^	struct wpa_authenticator *wpa_auth;$/;"	m	struct:wpa_state_machine	typeref:struct:wpa_state_machine::wpa_authenticator	access:public
wpa_state_machine::wpa_ie	src/ap/wpa_auth_i.h	/^	u8 *wpa_ie;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::wpa_ie_len	src/ap/wpa_auth_i.h	/^	size_t wpa_ie_len;$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::wpa_key_mgmt	src/ap/wpa_auth_i.h	/^	int wpa_key_mgmt; \/* the selected WPA_KEY_MGMT_* *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::wpa_ptk_group_state	src/ap/wpa_auth_i.h	/^	} wpa_ptk_group_state;$/;"	m	struct:wpa_state_machine	typeref:enum:wpa_state_machine::__anon14	access:public
wpa_state_machine::wpa_ptk_state	src/ap/wpa_auth_i.h	/^	} wpa_ptk_state;$/;"	m	struct:wpa_state_machine	typeref:enum:wpa_state_machine::__anon13	access:public
wpa_state_machine::xxkey	src/ap/wpa_auth_i.h	/^	u8 xxkey[PMK_LEN]; \/* PSK or the second 256 bits of MSK *\/$/;"	m	struct:wpa_state_machine	access:public
wpa_state_machine::xxkey_len	src/ap/wpa_auth_i.h	/^	size_t xxkey_len;$/;"	m	struct:wpa_state_machine	access:public
wpa_states	src/common/defs.h	/^enum wpa_states {$/;"	g
wpa_strdup_tchar	src/utils/common.c	/^TCHAR * wpa_strdup_tchar(const char *str)$/;"	f	signature:(const char *str)
wpa_strdup_tchar	src/utils/common.h	/^TCHAR * wpa_strdup_tchar(const char *str);$/;"	p	signature:(const char *str)
wpa_strdup_tchar	src/utils/common.h	476;"	d
wpa_strict_rekey	src/ap/ap_config.h	/^	int wpa_strict_rekey;$/;"	m	struct:hostapd_bss_config	access:public
wpa_strict_rekey	src/ap/wpa_auth.h	/^	int wpa_strict_rekey;$/;"	m	struct:wpa_auth_config	access:public
wpa_stsl_negotiation	src/ap/wpa_auth_i.h	/^struct wpa_stsl_negotiation {$/;"	s
wpa_stsl_negotiation::initiator	src/ap/wpa_auth_i.h	/^	u8 initiator[ETH_ALEN];$/;"	m	struct:wpa_stsl_negotiation	access:public
wpa_stsl_negotiation::next	src/ap/wpa_auth_i.h	/^	struct wpa_stsl_negotiation *next;$/;"	m	struct:wpa_stsl_negotiation	typeref:struct:wpa_stsl_negotiation::wpa_stsl_negotiation	access:public
wpa_stsl_negotiation::peer	src/ap/wpa_auth_i.h	/^	u8 peer[ETH_ALEN];$/;"	m	struct:wpa_stsl_negotiation	access:public
wpa_stsl_remove	src/ap/peerkey_auth.c	/^int wpa_stsl_remove(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_stsl_negotiation *neg)
wpa_stsl_remove	src/ap/wpa_auth_i.h	/^int wpa_stsl_remove(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_stsl_negotiation *neg)
wpa_stsl_search	src/ap/peerkey_auth.c	/^struct wpa_stsl_search {$/;"	s	file:
wpa_stsl_search::addr	src/ap/peerkey_auth.c	/^	const u8 *addr;$/;"	m	struct:wpa_stsl_search	file:	access:public
wpa_stsl_search::sm	src/ap/peerkey_auth.c	/^	struct wpa_state_machine *sm;$/;"	m	struct:wpa_stsl_search	typeref:struct:wpa_stsl_search::wpa_state_machine	file:	access:public
wpa_stsl_select_sta	src/ap/peerkey_auth.c	/^static int wpa_stsl_select_sta(struct wpa_state_machine *sm, void *ctx)$/;"	f	file:	signature:(struct wpa_state_machine *sm, void *ctx)
wpa_stsl_step	src/ap/peerkey_auth.c	/^static void wpa_stsl_step(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_supplicant_check_group_cipher	src/rsn_supp/wpa.c	/^static int wpa_supplicant_check_group_cipher(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, int group_cipher, int keylen, int maxkeylen, int *key_rsc_len, enum wpa_alg *alg)
wpa_supplicant_decrypt_key_data	src/rsn_supp/wpa.c	/^static int wpa_supplicant_decrypt_key_data(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_event	src/ap/drv_callbacks.c	/^void wpa_supplicant_event(void *ctx, enum wpa_event_type event,$/;"	f	signature:(void *ctx, enum wpa_event_type event, union wpa_event_data *data)
wpa_supplicant_event	src/drivers/driver.h	/^void wpa_supplicant_event(void *ctx, enum wpa_event_type event,$/;"	p	signature:(void *ctx, enum wpa_event_type event, union wpa_event_data *data)
wpa_supplicant_get_pmk	src/rsn_supp/wpa.c	/^static int wpa_supplicant_get_pmk(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const u8 *pmkid)
wpa_supplicant_gtk_tx_bit_workaround	src/rsn_supp/wpa.c	/^static int wpa_supplicant_gtk_tx_bit_workaround(const struct wpa_sm *sm,$/;"	f	file:	signature:(const struct wpa_sm *sm, int tx)
wpa_supplicant_install_gtk	src/rsn_supp/wpa.c	/^static int wpa_supplicant_install_gtk(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_gtk_data *gd, const u8 *key_rsc)
wpa_supplicant_install_ptk	src/rsn_supp/wpa.c	/^static int wpa_supplicant_install_ptk(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_eapol_key *key)
wpa_supplicant_key_neg_complete	src/rsn_supp/wpa.c	/^static void wpa_supplicant_key_neg_complete(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *addr, int secure)
wpa_supplicant_pairwise_gtk	src/rsn_supp/wpa.c	/^static int wpa_supplicant_pairwise_gtk(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_eapol_key *key, const u8 *gtk, size_t gtk_len, int key_info)
wpa_supplicant_parse_ies	src/rsn_supp/wpa_ie.c	/^int wpa_supplicant_parse_ies(const u8 *buf, size_t len,$/;"	f	signature:(const u8 *buf, size_t len, struct wpa_eapol_ie_parse *ie)
wpa_supplicant_parse_ies	src/rsn_supp/wpa_ie.h	/^int wpa_supplicant_parse_ies(const u8 *buf, size_t len,$/;"	p	signature:(const u8 *buf, size_t len, struct wpa_eapol_ie_parse *ie)
wpa_supplicant_peerkey_free	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_peerkey_free(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey)
wpa_supplicant_process_1_of_2	src/rsn_supp/wpa.c	/^static void wpa_supplicant_process_1_of_2(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, int extra_len, u16 ver)
wpa_supplicant_process_1_of_2_rsn	src/rsn_supp/wpa.c	/^static int wpa_supplicant_process_1_of_2_rsn(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *keydata, size_t keydatalen, u16 key_info, struct wpa_gtk_data *gd)
wpa_supplicant_process_1_of_2_wpa	src/rsn_supp/wpa.c	/^static int wpa_supplicant_process_1_of_2_wpa(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_eapol_key *key, size_t keydatalen, int key_info, size_t extra_len, u16 ver, struct wpa_gtk_data *gd)
wpa_supplicant_process_1_of_4	src/rsn_supp/wpa.c	/^static void wpa_supplicant_process_1_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_process_3_of_4	src/rsn_supp/wpa.c	/^static void wpa_supplicant_process_3_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_process_smk_error	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_process_smk_error($/;"	f	file:	signature:( struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, size_t extra_len)
wpa_supplicant_process_smk_m2	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_process_smk_m2($/;"	f	file:	signature:( struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, size_t extra_len, int ver)
wpa_supplicant_process_smk_m4	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_process_smk_m4(struct wpa_peerkey *peerkey,$/;"	f	file:	signature:(struct wpa_peerkey *peerkey, struct wpa_eapol_ie_parse *kde)
wpa_supplicant_process_smk_m45	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_process_smk_m45($/;"	f	file:	signature:( struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, size_t extra_len, int ver)
wpa_supplicant_process_smk_m5	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_process_smk_m5(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, int ver, struct wpa_peerkey *peerkey, struct wpa_eapol_ie_parse *kde)
wpa_supplicant_process_stk_1_of_4	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_process_stk_1_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, const struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_process_stk_2_of_4	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_process_stk_2_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, const struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_process_stk_3_of_4	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_process_stk_3_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, const struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_process_stk_4_of_4	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_process_stk_4_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, const struct wpa_eapol_key *key, u16 ver)
wpa_supplicant_rx_tdls	src/rsn_supp/tdls.c	/^static void wpa_supplicant_rx_tdls(void *ctx, const u8 *src_addr,$/;"	f	file:	signature:(void *ctx, const u8 *src_addr, const u8 *buf, size_t len)
wpa_supplicant_send_2_of_2	src/rsn_supp/wpa.c	/^static int wpa_supplicant_send_2_of_2(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const struct wpa_eapol_key *key, int ver, u16 key_info)
wpa_supplicant_send_2_of_4	src/rsn_supp/wpa.c	/^int wpa_supplicant_send_2_of_4(struct wpa_sm *sm, const unsigned char *dst,$/;"	f	signature:(struct wpa_sm *sm, const unsigned char *dst, const struct wpa_eapol_key *key, int ver, const u8 *nonce, const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ptk *ptk)
wpa_supplicant_send_2_of_4	src/rsn_supp/wpa_i.h	/^int wpa_supplicant_send_2_of_4(struct wpa_sm *sm, const unsigned char *dst,$/;"	p	signature:(struct wpa_sm *sm, const unsigned char *dst, const struct wpa_eapol_key *key, int ver, const u8 *nonce, const u8 *wpa_ie, size_t wpa_ie_len, struct wpa_ptk *ptk)
wpa_supplicant_send_4_of_4	src/rsn_supp/wpa.c	/^int wpa_supplicant_send_4_of_4(struct wpa_sm *sm, const unsigned char *dst,$/;"	f	signature:(struct wpa_sm *sm, const unsigned char *dst, const struct wpa_eapol_key *key, u16 ver, u16 key_info, const u8 *kde, size_t kde_len, struct wpa_ptk *ptk)
wpa_supplicant_send_4_of_4	src/rsn_supp/wpa_i.h	/^int wpa_supplicant_send_4_of_4(struct wpa_sm *sm, const unsigned char *dst,$/;"	p	signature:(struct wpa_sm *sm, const unsigned char *dst, const struct wpa_eapol_key *key, u16 ver, u16 key_info, const u8 *kde, size_t kde_len, struct wpa_ptk *ptk)
wpa_supplicant_send_smk_error	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_send_smk_error(struct wpa_sm *sm, const u8 *dst,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *dst, const u8 *peer, u16 mui, u16 error_type, int ver)
wpa_supplicant_send_smk_m3	src/rsn_supp/peerkey.c	/^static int wpa_supplicant_send_smk_m3(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, const struct wpa_eapol_key *key, int ver, struct wpa_peerkey *peerkey)
wpa_supplicant_send_stk_1_of_4	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_send_stk_1_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey)
wpa_supplicant_send_stk_3_of_4	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_send_stk_3_of_4(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey)
wpa_supplicant_smk_timeout	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_smk_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_supplicant_update_smk_lifetime	src/rsn_supp/peerkey.c	/^static void wpa_supplicant_update_smk_lifetime(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_peerkey *peerkey, struct wpa_eapol_ie_parse *kde)
wpa_supplicant_validate_ie	src/rsn_supp/wpa.c	/^static int wpa_supplicant_validate_ie(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, struct wpa_eapol_ie_parse *ie)
wpa_supplicant_validate_ie_ft	src/rsn_supp/wpa.c	/^static int wpa_supplicant_validate_ie_ft(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, struct wpa_eapol_ie_parse *ie)
wpa_supplicant_verify_eapol_key_mic	src/rsn_supp/wpa.c	/^static int wpa_supplicant_verify_eapol_key_mic(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_eapol_key *key, u16 ver, const u8 *buf, size_t len)
wpa_supplicant_verify_tdls_mic	src/rsn_supp/tdls.c	/^static int wpa_supplicant_verify_tdls_mic(u8 trans_seq,$/;"	f	file:	signature:(u8 trans_seq, struct wpa_tdls_peer *peer, const u8 *lnkid, const u8 *timeoutie, const struct wpa_tdls_ftie *ftie)
wpa_supplicant_verify_tdls_mic_teardown	src/rsn_supp/tdls.c	/^static int wpa_supplicant_verify_tdls_mic_teardown($/;"	f	file:	signature:( u8 trans_seq, u16 rcode, u8 dtoken, struct wpa_tdls_peer *peer, const u8 *lnkid, const struct wpa_tdls_ftie *ftie)
wpa_swap_16	src/utils/common.h	/^static inline unsigned short wpa_swap_16(unsigned short v)$/;"	f	signature:(unsigned short v)
wpa_swap_32	src/utils/common.h	/^static inline unsigned int wpa_swap_32(unsigned int v)$/;"	f	signature:(unsigned int v)
wpa_tdls_add_peer	src/rsn_supp/tdls.c	/^wpa_tdls_add_peer(struct wpa_sm *sm, const u8 *addr)$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_ap_ies	src/rsn_supp/tdls.c	/^void wpa_tdls_ap_ies(struct wpa_sm *sm, const u8 *ies, size_t len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t len)
wpa_tdls_ap_ies	src/rsn_supp/wpa.h	/^void wpa_tdls_ap_ies(struct wpa_sm *sm, const u8 *ies, size_t len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *ies, size_t len)
wpa_tdls_assoc	src/rsn_supp/tdls.c	/^void wpa_tdls_assoc(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_tdls_assoc	src/rsn_supp/wpa_i.h	/^void wpa_tdls_assoc(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_tdls_assoc_resp_ies	src/rsn_supp/tdls.c	/^void wpa_tdls_assoc_resp_ies(struct wpa_sm *sm, const u8 *ies, size_t len)$/;"	f	signature:(struct wpa_sm *sm, const u8 *ies, size_t len)
wpa_tdls_assoc_resp_ies	src/rsn_supp/wpa.h	/^void wpa_tdls_assoc_resp_ies(struct wpa_sm *sm, const u8 *ies, size_t len);$/;"	p	signature:(struct wpa_sm *sm, const u8 *ies, size_t len)
wpa_tdls_deinit	src/rsn_supp/tdls.c	/^void wpa_tdls_deinit(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_tdls_deinit	src/rsn_supp/wpa.h	/^void wpa_tdls_deinit(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_tdls_del_key	src/rsn_supp/tdls.c	/^static int wpa_tdls_del_key(struct wpa_sm *sm, struct wpa_tdls_peer *peer)$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer)
wpa_tdls_disable_link	src/rsn_supp/tdls.c	/^void wpa_tdls_disable_link(struct wpa_sm *sm, const u8 *addr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_disable_link	src/rsn_supp/wpa.h	/^void wpa_tdls_disable_link(struct wpa_sm *sm, const u8 *addr);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_disassoc	src/rsn_supp/tdls.c	/^void wpa_tdls_disassoc(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_tdls_disassoc	src/rsn_supp/wpa_i.h	/^void wpa_tdls_disassoc(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_tdls_do_teardown	src/rsn_supp/tdls.c	/^static int wpa_tdls_do_teardown(struct wpa_sm *sm, struct wpa_tdls_peer *peer,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer, u16 reason_code, int free_peer)
wpa_tdls_enable	src/rsn_supp/tdls.c	/^void wpa_tdls_enable(struct wpa_sm *sm, int enabled)$/;"	f	signature:(struct wpa_sm *sm, int enabled)
wpa_tdls_enable	src/rsn_supp/wpa.h	/^void wpa_tdls_enable(struct wpa_sm *sm, int enabled);$/;"	p	signature:(struct wpa_sm *sm, int enabled)
wpa_tdls_enable_link	src/rsn_supp/tdls.c	/^static void wpa_tdls_enable_link(struct wpa_sm *sm, struct wpa_tdls_peer *peer)$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer)
wpa_tdls_frame	src/rsn_supp/tdls.c	/^struct wpa_tdls_frame {$/;"	s	file:
wpa_tdls_frame::action	src/rsn_supp/tdls.c	/^	u8 action; \/* Action (enum tdls_frame_type) *\/$/;"	m	struct:wpa_tdls_frame	file:	access:public
wpa_tdls_frame::category	src/rsn_supp/tdls.c	/^	u8 category; \/* Category *\/$/;"	m	struct:wpa_tdls_frame	file:	access:public
wpa_tdls_frame::payloadtype	src/rsn_supp/tdls.c	/^	u8 payloadtype; \/* IEEE80211_TDLS_RFTYPE *\/$/;"	m	struct:wpa_tdls_frame	file:	access:public
wpa_tdls_ftie	src/rsn_supp/tdls.c	/^struct wpa_tdls_ftie {$/;"	s	file:
wpa_tdls_ftie::Anonce	src/rsn_supp/tdls.c	/^	u8 Anonce[WPA_NONCE_LEN]; \/* Responder Nonce in TDLS *\/$/;"	m	struct:wpa_tdls_ftie	file:	access:public
wpa_tdls_ftie::Snonce	src/rsn_supp/tdls.c	/^	u8 Snonce[WPA_NONCE_LEN]; \/* Initiator Nonce in TDLS *\/$/;"	m	struct:wpa_tdls_ftie	file:	access:public
wpa_tdls_ftie::ie_len	src/rsn_supp/tdls.c	/^	u8 ie_len;$/;"	m	struct:wpa_tdls_ftie	file:	access:public
wpa_tdls_ftie::ie_type	src/rsn_supp/tdls.c	/^	u8 ie_type; \/* FTIE *\/$/;"	m	struct:wpa_tdls_ftie	file:	access:public
wpa_tdls_ftie::mic	src/rsn_supp/tdls.c	/^	u8 mic[TDLS_MIC_LEN];$/;"	m	struct:wpa_tdls_ftie	file:	access:public
wpa_tdls_ftie::mic_ctrl	src/rsn_supp/tdls.c	/^	u8 mic_ctrl[2];$/;"	m	struct:wpa_tdls_ftie	file:	access:public
wpa_tdls_ftie_mic	src/rsn_supp/tdls.c	/^static int wpa_tdls_ftie_mic(const u8 *kck, u8 trans_seq, const u8 *lnkid,$/;"	f	file:	signature:(const u8 *kck, u8 trans_seq, const u8 *lnkid, const u8 *rsnie, const u8 *timeoutie, const u8 *ftie, u8 *mic)
wpa_tdls_generate_tpk	src/rsn_supp/tdls.c	/^static void wpa_tdls_generate_tpk(struct wpa_tdls_peer *peer,$/;"	f	file:	signature:(struct wpa_tdls_peer *peer, const u8 *own_addr, const u8 *bssid)
wpa_tdls_get_privacy	src/rsn_supp/tdls.c	/^static int wpa_tdls_get_privacy(struct wpa_sm *sm)$/;"	f	file:	signature:(struct wpa_sm *sm)
wpa_tdls_init	src/rsn_supp/tdls.c	/^int wpa_tdls_init(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_tdls_init	src/rsn_supp/wpa.h	/^int wpa_tdls_init(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_tdls_is_external_setup	src/rsn_supp/tdls.c	/^int wpa_tdls_is_external_setup(struct wpa_sm *sm)$/;"	f	signature:(struct wpa_sm *sm)
wpa_tdls_is_external_setup	src/rsn_supp/wpa.h	/^int wpa_tdls_is_external_setup(struct wpa_sm *sm);$/;"	p	signature:(struct wpa_sm *sm)
wpa_tdls_key_mic_teardown	src/rsn_supp/tdls.c	/^static int wpa_tdls_key_mic_teardown(const u8 *kck, u8 trans_seq, u16 rcode,$/;"	f	file:	signature:(const u8 *kck, u8 trans_seq, u16 rcode, u8 dtoken, const u8 *lnkid, const u8 *ftie, u8 *mic)
wpa_tdls_linkid	src/rsn_supp/tdls.c	/^static void wpa_tdls_linkid(struct wpa_sm *sm, struct wpa_tdls_peer *peer,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer, struct wpa_tdls_lnkid *lnkid)
wpa_tdls_lnkid	src/rsn_supp/tdls.c	/^struct wpa_tdls_lnkid {$/;"	s	file:
wpa_tdls_lnkid::bssid	src/rsn_supp/tdls.c	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
wpa_tdls_lnkid::ie_len	src/rsn_supp/tdls.c	/^	u8 ie_len;$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
wpa_tdls_lnkid::ie_type	src/rsn_supp/tdls.c	/^	u8 ie_type; \/* Link Identifier IE *\/$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
wpa_tdls_lnkid::init_sta	src/rsn_supp/tdls.c	/^	u8 init_sta[ETH_ALEN];$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
wpa_tdls_lnkid::resp_sta	src/rsn_supp/tdls.c	/^	u8 resp_sta[ETH_ALEN];$/;"	m	struct:wpa_tdls_lnkid	file:	access:public
wpa_tdls_peer	src/rsn_supp/tdls.c	/^struct wpa_tdls_peer {$/;"	s	file:
wpa_tdls_peer::addr	src/rsn_supp/tdls.c	/^	u8 addr[ETH_ALEN]; \/* other end MAC address *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::capability	src/rsn_supp/tdls.c	/^	u16 capability;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::cipher	src/rsn_supp/tdls.c	/^	int cipher; \/* Selected cipher (WPA_CIPHER_*) *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::dtoken	src/rsn_supp/tdls.c	/^	u8 dtoken;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::initiator	src/rsn_supp/tdls.c	/^	int initiator; \/* whether this end was initiator for TDLS setup *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::inonce	src/rsn_supp/tdls.c	/^	u8 inonce[WPA_NONCE_LEN]; \/* Initiator Nonce *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::lifetime	src/rsn_supp/tdls.c	/^	u32 lifetime;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::next	src/rsn_supp/tdls.c	/^	struct wpa_tdls_peer *next;$/;"	m	struct:wpa_tdls_peer	typeref:struct:wpa_tdls_peer::wpa_tdls_peer	file:	access:public
wpa_tdls_peer::rnonce	src/rsn_supp/tdls.c	/^	u8 rnonce[WPA_NONCE_LEN]; \/* Responder Nonce *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::rsnie_i	src/rsn_supp/tdls.c	/^	u8 rsnie_i[TDLS_MAX_IE_LEN]; \/* Initiator RSN IE *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::rsnie_i_len	src/rsn_supp/tdls.c	/^	size_t rsnie_i_len;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::rsnie_p	src/rsn_supp/tdls.c	/^	u8 rsnie_p[TDLS_MAX_IE_LEN]; \/* Peer RSN IE *\/$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::rsnie_p_len	src/rsn_supp/tdls.c	/^	size_t rsnie_p_len;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::sm_tmr	src/rsn_supp/tdls.c	/^	} sm_tmr;$/;"	m	struct:wpa_tdls_peer	typeref:struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::supp_rates	src/rsn_supp/tdls.c	/^	u8 supp_rates[IEEE80211_MAX_SUPP_RATES];$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::supp_rates_len	src/rsn_supp/tdls.c	/^	size_t supp_rates_len;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::tpk	src/rsn_supp/tdls.c	/^	struct tpk {$/;"	s	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::tpk	src/rsn_supp/tdls.c	/^	} tpk;$/;"	m	struct:wpa_tdls_peer	typeref:struct:wpa_tdls_peer::tpk	file:	access:public
wpa_tdls_peer::tpk::kck	src/rsn_supp/tdls.c	/^		u8 kck[16]; \/* TPK-KCK *\/$/;"	m	struct:wpa_tdls_peer::tpk	file:	access:public
wpa_tdls_peer::tpk::tk	src/rsn_supp/tdls.c	/^		u8 tk[16]; \/* TPK-TK; assuming only CCMP will be used *\/$/;"	m	struct:wpa_tdls_peer::tpk	file:	access:public
wpa_tdls_peer::tpk_set	src/rsn_supp/tdls.c	/^	int tpk_set;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::tpk_success	src/rsn_supp/tdls.c	/^	int tpk_success;$/;"	m	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::tpk_timer	src/rsn_supp/tdls.c	/^	struct tpk_timer {$/;"	s	struct:wpa_tdls_peer	file:	access:public
wpa_tdls_peer::tpk_timer::action_code	src/rsn_supp/tdls.c	/^		u8 action_code; \/* TDLS frame type *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::buf	src/rsn_supp/tdls.c	/^		u8 *buf;        \/* buffer for TPK message *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::buf_len	src/rsn_supp/tdls.c	/^		int buf_len;    \/* length of TPK message for retransmission *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::count	src/rsn_supp/tdls.c	/^		int count;      \/* Retry Count *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::dest	src/rsn_supp/tdls.c	/^		u8 dest[ETH_ALEN];$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::dialog_token	src/rsn_supp/tdls.c	/^		u8 dialog_token;$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::status_code	src/rsn_supp/tdls.c	/^		u16 status_code;$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer::tpk_timer::timer	src/rsn_supp/tdls.c	/^		int timer;      \/* Timeout in milliseconds *\/$/;"	m	struct:wpa_tdls_peer::tpk_timer	file:	access:public
wpa_tdls_peer_free	src/rsn_supp/tdls.c	/^static void wpa_tdls_peer_free(struct wpa_sm *sm, struct wpa_tdls_peer *peer)$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer)
wpa_tdls_peer_free	src/rsn_supp/tdls.c	/^static void wpa_tdls_peer_free(struct wpa_sm *sm, struct wpa_tdls_peer *peer);$/;"	p	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer)
wpa_tdls_process_discovery_request	src/rsn_supp/tdls.c	/^wpa_tdls_process_discovery_request(struct wpa_sm *sm, const u8 *addr,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *addr, const u8 *buf, size_t len)
wpa_tdls_process_tpk_m1	src/rsn_supp/tdls.c	/^static int wpa_tdls_process_tpk_m1(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_tdls_process_tpk_m2	src/rsn_supp/tdls.c	/^static int wpa_tdls_process_tpk_m2(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_tdls_process_tpk_m3	src/rsn_supp/tdls.c	/^static int wpa_tdls_process_tpk_m3(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_tdls_prohibited	src/rsn_supp/tdls.c	/^static int wpa_tdls_prohibited(const u8 *ies, size_t len)$/;"	f	file:	signature:(const u8 *ies, size_t len)
wpa_tdls_recv_teardown	src/rsn_supp/tdls.c	/^static int wpa_tdls_recv_teardown(struct wpa_sm *sm, const u8 *src_addr,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *src_addr, const u8 *buf, size_t len)
wpa_tdls_remove_peers	src/rsn_supp/tdls.c	/^static void wpa_tdls_remove_peers(struct wpa_sm *sm)$/;"	f	file:	signature:(struct wpa_sm *sm)
wpa_tdls_reneg	src/rsn_supp/tdls.c	/^int wpa_tdls_reneg(struct wpa_sm *sm, const u8 *addr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_reneg	src/rsn_supp/wpa.h	/^int wpa_tdls_reneg(struct wpa_sm *sm, const u8 *addr);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_send_discovery_request	src/rsn_supp/tdls.c	/^int wpa_tdls_send_discovery_request(struct wpa_sm *sm, const u8 *addr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_send_discovery_request	src/rsn_supp/wpa.h	/^int wpa_tdls_send_discovery_request(struct wpa_sm *sm, const u8 *addr);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_send_discovery_response	src/rsn_supp/tdls.c	/^static int wpa_tdls_send_discovery_response(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer, u8 dialog_token)
wpa_tdls_send_error	src/rsn_supp/tdls.c	/^static int wpa_tdls_send_error(struct wpa_sm *sm, const u8 *dst,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *dst, u8 tdls_action, u8 dialog_token, u16 status)
wpa_tdls_send_teardown	src/rsn_supp/tdls.c	/^int wpa_tdls_send_teardown(struct wpa_sm *sm, const u8 *addr, u16 reason_code)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr, u16 reason_code)
wpa_tdls_send_teardown	src/rsn_supp/wpa.h	/^int wpa_tdls_send_teardown(struct wpa_sm *sm, const u8 *addr, u16 reason_code);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr, u16 reason_code)
wpa_tdls_send_tpk_m1	src/rsn_supp/tdls.c	/^static int wpa_tdls_send_tpk_m1(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer)
wpa_tdls_send_tpk_m2	src/rsn_supp/tdls.c	/^static int wpa_tdls_send_tpk_m2(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, u8 dtoken, struct wpa_tdls_lnkid *lnkid, const struct wpa_tdls_peer *peer)
wpa_tdls_send_tpk_m3	src/rsn_supp/tdls.c	/^static int wpa_tdls_send_tpk_m3(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, const unsigned char *src_addr, u8 dtoken, struct wpa_tdls_lnkid *lnkid, const struct wpa_tdls_peer *peer)
wpa_tdls_send_tpk_msg	src/rsn_supp/tdls.c	/^static int wpa_tdls_send_tpk_msg(struct wpa_sm *sm, const u8 *dst,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *dst, u8 action_code, u8 dialog_token, u16 status_code, const u8 *buf, size_t len)
wpa_tdls_set_key	src/rsn_supp/tdls.c	/^static int wpa_tdls_set_key(struct wpa_sm *sm, struct wpa_tdls_peer *peer)$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer)
wpa_tdls_start	src/rsn_supp/tdls.c	/^int wpa_tdls_start(struct wpa_sm *sm, const u8 *addr)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_start	src/rsn_supp/wpa.h	/^int wpa_tdls_start(struct wpa_sm *sm, const u8 *addr);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr)
wpa_tdls_teardown_link	src/rsn_supp/tdls.c	/^int wpa_tdls_teardown_link(struct wpa_sm *sm, const u8 *addr, u16 reason_code)$/;"	f	signature:(struct wpa_sm *sm, const u8 *addr, u16 reason_code)
wpa_tdls_teardown_link	src/rsn_supp/wpa.h	/^int wpa_tdls_teardown_link(struct wpa_sm *sm, const u8 *addr, u16 reason_code);$/;"	p	signature:(struct wpa_sm *sm, const u8 *addr, u16 reason_code)
wpa_tdls_timeoutie	src/rsn_supp/tdls.c	/^struct wpa_tdls_timeoutie {$/;"	s	file:
wpa_tdls_timeoutie::ie_len	src/rsn_supp/tdls.c	/^	u8 ie_len;$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
wpa_tdls_timeoutie::ie_type	src/rsn_supp/tdls.c	/^	u8 ie_type; \/* Timeout IE *\/$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
wpa_tdls_timeoutie::interval_type	src/rsn_supp/tdls.c	/^	u8 interval_type;$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
wpa_tdls_timeoutie::value	src/rsn_supp/tdls.c	/^	u8 value[TDLS_TIMEOUT_LEN];$/;"	m	struct:wpa_tdls_timeoutie	file:	access:public
wpa_tdls_tpk_retry_timeout	src/rsn_supp/tdls.c	/^static void wpa_tdls_tpk_retry_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_tdls_tpk_retry_timeout	src/rsn_supp/tdls.c	/^static void wpa_tdls_tpk_retry_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_tdls_tpk_retry_timeout_cancel	src/rsn_supp/tdls.c	/^static void wpa_tdls_tpk_retry_timeout_cancel(struct wpa_sm *sm,$/;"	f	file:	signature:(struct wpa_sm *sm, struct wpa_tdls_peer *peer, u8 action_code)
wpa_tdls_tpk_send	src/rsn_supp/tdls.c	/^static int wpa_tdls_tpk_send(struct wpa_sm *sm, const u8 *dest, u8 action_code,$/;"	f	file:	signature:(struct wpa_sm *sm, const u8 *dest, u8 action_code, u8 dialog_token, u16 status_code, const u8 *msg, size_t msg_len)
wpa_tdls_tpk_timeout	src/rsn_supp/tdls.c	/^static void wpa_tdls_tpk_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wpa_trace_add_ref	src/utils/trace.h	40;"	d
wpa_trace_add_ref	src/utils/trace.h	57;"	d
wpa_trace_add_ref_func	src/utils/trace.c	/^void wpa_trace_add_ref_func(struct wpa_trace_ref *ref, const void *addr)$/;"	f	signature:(struct wpa_trace_ref *ref, const void *addr)
wpa_trace_add_ref_func	src/utils/trace.h	/^void wpa_trace_add_ref_func(struct wpa_trace_ref *ref, const void *addr);$/;"	p	signature:(struct wpa_trace_ref *ref, const void *addr)
wpa_trace_bfd_addr	src/utils/trace.c	/^static void wpa_trace_bfd_addr(void *pc)$/;"	f	file:	signature:(void *pc)
wpa_trace_bfd_addr	src/utils/trace.c	256;"	d	file:
wpa_trace_bfd_addr2func	src/utils/trace.c	/^static const char * wpa_trace_bfd_addr2func(void *pc)$/;"	f	file:	signature:(void *pc)
wpa_trace_bfd_addr2func	src/utils/trace.c	257;"	d	file:
wpa_trace_bfd_init	src/utils/trace.c	/^static void wpa_trace_bfd_init(void)$/;"	f	file:	signature:(void)
wpa_trace_bfd_init	src/utils/trace.c	255;"	d	file:
wpa_trace_check_ref	src/utils/trace.c	/^void wpa_trace_check_ref(const void *addr)$/;"	f	signature:(const void *addr)
wpa_trace_check_ref	src/utils/trace.h	/^void wpa_trace_check_ref(const void *addr);$/;"	p	signature:(const void *addr)
wpa_trace_check_ref	src/utils/trace.h	59;"	d
wpa_trace_dump	src/utils/trace.h	34;"	d
wpa_trace_dump	src/utils/trace.h	54;"	d
wpa_trace_dump_func	src/utils/trace.c	/^void wpa_trace_dump_func(const char *title, void **btrace, int btrace_num)$/;"	f	signature:(const char *title, void **btrace, int btrace_num)
wpa_trace_dump_func	src/utils/trace.h	/^void wpa_trace_dump_func(const char *title, void **btrace, int btrace_num);$/;"	p	signature:(const char *title, void **btrace, int btrace_num)
wpa_trace_dump_funcname	src/utils/trace.c	/^void wpa_trace_dump_funcname(const char *title, void *pc)$/;"	f	signature:(const char *title, void *pc)
wpa_trace_dump_funcname	src/utils/trace.h	/^void wpa_trace_dump_funcname(const char *title, void *pc);$/;"	p	signature:(const char *title, void *pc)
wpa_trace_dump_funcname	src/utils/trace.h	70;"	d
wpa_trace_record	src/utils/trace.h	37;"	d
wpa_trace_record	src/utils/trace.h	55;"	d
wpa_trace_ref	src/utils/trace.h	/^struct wpa_trace_ref {$/;"	s
wpa_trace_ref::addr	src/utils/trace.h	/^	const void *addr;$/;"	m	struct:wpa_trace_ref	access:public
wpa_trace_ref::list	src/utils/trace.h	/^	struct dl_list list;$/;"	m	struct:wpa_trace_ref	typeref:struct:wpa_trace_ref::dl_list	access:public
wpa_trace_remove_ref	src/utils/trace.h	43;"	d
wpa_trace_remove_ref	src/utils/trace.h	58;"	d
wpa_trace_show	src/utils/trace.c	/^void wpa_trace_show(const char *title)$/;"	f	signature:(const char *title)
wpa_trace_show	src/utils/trace.h	/^void wpa_trace_show(const char *title);$/;"	p	signature:(const char *title)
wpa_trace_show	src/utils/trace.h	56;"	d
wpa_unicode2ascii_inplace	src/utils/common.c	/^void wpa_unicode2ascii_inplace(TCHAR *str)$/;"	f	signature:(TCHAR *str)
wpa_unicode2ascii_inplace	src/utils/common.h	/^void wpa_unicode2ascii_inplace(TCHAR *str);$/;"	p	signature:(TCHAR *str)
wpa_unicode2ascii_inplace	src/utils/common.h	475;"	d
wpa_use_aes_cmac	src/ap/wpa_auth.c	/^static int wpa_use_aes_cmac(struct wpa_state_machine *sm)$/;"	f	file:	signature:(struct wpa_state_machine *sm)
wpa_validate_wpa_ie	src/ap/wpa_auth.h	/^int wpa_validate_wpa_ie(struct wpa_authenticator *wpa_auth,$/;"	p	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, const u8 *wpa_ie, size_t wpa_ie_len, const u8 *mdie, size_t mdie_len)
wpa_validate_wpa_ie	src/ap/wpa_auth_ie.c	/^int wpa_validate_wpa_ie(struct wpa_authenticator *wpa_auth,$/;"	f	signature:(struct wpa_authenticator *wpa_auth, struct wpa_state_machine *sm, const u8 *wpa_ie, size_t wpa_ie_len, const u8 *mdie, size_t mdie_len)
wpa_verify_key_mic	src/ap/wpa_auth.c	/^static int wpa_verify_key_mic(struct wpa_ptk *PTK, u8 *data, size_t data_len)$/;"	f	file:	signature:(struct wpa_ptk *PTK, u8 *data, size_t data_len)
wpa_verify_key_mic	src/ap/wpa_auth.c	/^static int wpa_verify_key_mic(struct wpa_ptk *PTK, u8 *data, size_t data_len);$/;"	p	file:	signature:(struct wpa_ptk *PTK, u8 *data, size_t data_len)
wpa_version	src/drivers/driver.h	/^	unsigned int wpa_version;$/;"	m	struct:wpa_driver_ap_params	access:public
wpa_write_ftie	src/ap/wpa_auth_ft.c	/^int wpa_write_ftie(struct wpa_auth_config *conf, const u8 *r0kh_id,$/;"	f	signature:(struct wpa_auth_config *conf, const u8 *r0kh_id, size_t r0kh_id_len, const u8 *anonce, const u8 *snonce, u8 *buf, size_t len, const u8 *subelem, size_t subelem_len)
wpa_write_ftie	src/ap/wpa_auth_i.h	/^int wpa_write_ftie(struct wpa_auth_config *conf, const u8 *r0kh_id,$/;"	p	signature:(struct wpa_auth_config *conf, const u8 *r0kh_id, size_t r0kh_id_len, const u8 *anonce, const u8 *snonce, u8 *buf, size_t len, const u8 *subelem, size_t subelem_len)
wpa_write_mdie	src/ap/wpa_auth_ft.c	/^int wpa_write_mdie(struct wpa_auth_config *conf, u8 *buf, size_t len)$/;"	f	signature:(struct wpa_auth_config *conf, u8 *buf, size_t len)
wpa_write_mdie	src/ap/wpa_auth_i.h	/^int wpa_write_mdie(struct wpa_auth_config *conf, u8 *buf, size_t len);$/;"	p	signature:(struct wpa_auth_config *conf, u8 *buf, size_t len)
wpa_write_rsn_ie	src/ap/wpa_auth_i.h	/^int wpa_write_rsn_ie(struct wpa_auth_config *conf, u8 *buf, size_t len,$/;"	p	signature:(struct wpa_auth_config *conf, u8 *buf, size_t len, const u8 *pmkid)
wpa_write_rsn_ie	src/ap/wpa_auth_ie.c	/^int wpa_write_rsn_ie(struct wpa_auth_config *conf, u8 *buf, size_t len,$/;"	f	signature:(struct wpa_auth_config *conf, u8 *buf, size_t len, const u8 *pmkid)
wpa_write_wpa_ie	src/ap/wpa_auth_ie.c	/^static int wpa_write_wpa_ie(struct wpa_auth_config *conf, u8 *buf, size_t len)$/;"	f	file:	signature:(struct wpa_auth_config *conf, u8 *buf, size_t len)
wpabuf	src/utils/wpabuf.h	/^struct wpabuf {$/;"	s
wpabuf::ext_data	src/utils/wpabuf.h	/^	u8 *ext_data; \/* pointer to external data; NULL if data follows$/;"	m	struct:wpabuf	access:public
wpabuf::size	src/utils/wpabuf.h	/^	size_t size; \/* total size of the allocated buffer *\/$/;"	m	struct:wpabuf	access:public
wpabuf::used	src/utils/wpabuf.h	/^	size_t used; \/* length of data in the buffer *\/$/;"	m	struct:wpabuf	access:public
wpabuf_alloc	src/utils/wpabuf.c	/^struct wpabuf * wpabuf_alloc(size_t len)$/;"	f	signature:(size_t len)
wpabuf_alloc	src/utils/wpabuf.h	/^struct wpabuf * wpabuf_alloc(size_t len);$/;"	p	signature:(size_t len)
wpabuf_alloc_copy	src/utils/wpabuf.c	/^struct wpabuf * wpabuf_alloc_copy(const void *data, size_t len)$/;"	f	signature:(const void *data, size_t len)
wpabuf_alloc_copy	src/utils/wpabuf.h	/^struct wpabuf * wpabuf_alloc_copy(const void *data, size_t len);$/;"	p	signature:(const void *data, size_t len)
wpabuf_alloc_ext_data	src/utils/wpabuf.c	/^struct wpabuf * wpabuf_alloc_ext_data(u8 *data, size_t len)$/;"	f	signature:(u8 *data, size_t len)
wpabuf_alloc_ext_data	src/utils/wpabuf.h	/^struct wpabuf * wpabuf_alloc_ext_data(u8 *data, size_t len);$/;"	p	signature:(u8 *data, size_t len)
wpabuf_concat	src/utils/wpabuf.c	/^struct wpabuf * wpabuf_concat(struct wpabuf *a, struct wpabuf *b)$/;"	f	signature:(struct wpabuf *a, struct wpabuf *b)
wpabuf_concat	src/utils/wpabuf.h	/^struct wpabuf * wpabuf_concat(struct wpabuf *a, struct wpabuf *b);$/;"	p	signature:(struct wpabuf *a, struct wpabuf *b)
wpabuf_dup	src/utils/wpabuf.c	/^struct wpabuf * wpabuf_dup(const struct wpabuf *src)$/;"	f	signature:(const struct wpabuf *src)
wpabuf_dup	src/utils/wpabuf.h	/^struct wpabuf * wpabuf_dup(const struct wpabuf *src);$/;"	p	signature:(const struct wpabuf *src)
wpabuf_free	src/utils/wpabuf.c	/^void wpabuf_free(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
wpabuf_free	src/utils/wpabuf.h	/^void wpabuf_free(struct wpabuf *buf);$/;"	p	signature:(struct wpabuf *buf)
wpabuf_get_trace	src/utils/wpabuf.c	/^static struct wpabuf_trace * wpabuf_get_trace(const struct wpabuf *buf)$/;"	f	file:	signature:(const struct wpabuf *buf)
wpabuf_head	src/utils/wpabuf.h	/^static inline const void * wpabuf_head(const struct wpabuf *buf)$/;"	f	signature:(const struct wpabuf *buf)
wpabuf_head_u8	src/utils/wpabuf.h	/^static inline const u8 * wpabuf_head_u8(const struct wpabuf *buf)$/;"	f	signature:(const struct wpabuf *buf)
wpabuf_len	src/utils/wpabuf.h	/^static inline size_t wpabuf_len(const struct wpabuf *buf)$/;"	f	signature:(const struct wpabuf *buf)
wpabuf_mhead	src/utils/wpabuf.h	/^static inline void * wpabuf_mhead(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
wpabuf_mhead_u8	src/utils/wpabuf.h	/^static inline u8 * wpabuf_mhead_u8(struct wpabuf *buf)$/;"	f	signature:(struct wpabuf *buf)
wpabuf_overflow	src/utils/wpabuf.c	/^static void wpabuf_overflow(const struct wpabuf *buf, size_t len)$/;"	f	file:	signature:(const struct wpabuf *buf, size_t len)
wpabuf_printf	src/utils/wpabuf.c	/^void wpabuf_printf(struct wpabuf *buf, char *fmt, ...)$/;"	f	signature:(struct wpabuf *buf, char *fmt, ...)
wpabuf_put	src/utils/wpabuf.c	/^void * wpabuf_put(struct wpabuf *buf, size_t len)$/;"	f	signature:(struct wpabuf *buf, size_t len)
wpabuf_put	src/utils/wpabuf.h	/^void * wpabuf_put(struct wpabuf *buf, size_t len);$/;"	p	signature:(struct wpabuf *buf, size_t len)
wpabuf_put_be16	src/utils/wpabuf.h	/^static inline void wpabuf_put_be16(struct wpabuf *buf, u16 data)$/;"	f	signature:(struct wpabuf *buf, u16 data)
wpabuf_put_be24	src/utils/wpabuf.h	/^static inline void wpabuf_put_be24(struct wpabuf *buf, u32 data)$/;"	f	signature:(struct wpabuf *buf, u32 data)
wpabuf_put_be32	src/utils/wpabuf.h	/^static inline void wpabuf_put_be32(struct wpabuf *buf, u32 data)$/;"	f	signature:(struct wpabuf *buf, u32 data)
wpabuf_put_buf	src/utils/wpabuf.h	/^static inline void wpabuf_put_buf(struct wpabuf *dst,$/;"	f	signature:(struct wpabuf *dst, const struct wpabuf *src)
wpabuf_put_data	src/utils/wpabuf.h	/^static inline void wpabuf_put_data(struct wpabuf *buf, const void *data,$/;"	f	signature:(struct wpabuf *buf, const void *data, size_t len)
wpabuf_put_le16	src/utils/wpabuf.h	/^static inline void wpabuf_put_le16(struct wpabuf *buf, u16 data)$/;"	f	signature:(struct wpabuf *buf, u16 data)
wpabuf_put_le32	src/utils/wpabuf.h	/^static inline void wpabuf_put_le32(struct wpabuf *buf, u32 data)$/;"	f	signature:(struct wpabuf *buf, u32 data)
wpabuf_put_property	src/wps/wps_upnp.c	/^static void wpabuf_put_property(struct wpabuf *buf, const char *name,$/;"	f	file:	signature:(struct wpabuf *buf, const char *name, const char *value)
wpabuf_put_str	src/utils/wpabuf.h	/^static inline void wpabuf_put_str(struct wpabuf *dst, const char *str)$/;"	f	signature:(struct wpabuf *dst, const char *str)
wpabuf_put_u8	src/utils/wpabuf.h	/^static inline void wpabuf_put_u8(struct wpabuf *buf, u8 data)$/;"	f	signature:(struct wpabuf *buf, u8 data)
wpabuf_resize	src/utils/wpabuf.c	/^int wpabuf_resize(struct wpabuf **_buf, size_t add_len)$/;"	f	signature:(struct wpabuf **_buf, size_t add_len)
wpabuf_resize	src/utils/wpabuf.h	/^int wpabuf_resize(struct wpabuf **buf, size_t add_len);$/;"	p	signature:(struct wpabuf **buf, size_t add_len)
wpabuf_set	src/utils/wpabuf.h	/^static inline void wpabuf_set(struct wpabuf *buf, const void *data, size_t len)$/;"	f	signature:(struct wpabuf *buf, const void *data, size_t len)
wpabuf_size	src/utils/wpabuf.h	/^static inline size_t wpabuf_size(const struct wpabuf *buf)$/;"	f	signature:(const struct wpabuf *buf)
wpabuf_tailroom	src/utils/wpabuf.h	/^static inline size_t wpabuf_tailroom(const struct wpabuf *buf)$/;"	f	signature:(const struct wpabuf *buf)
wpabuf_trace	src/utils/wpabuf.c	/^struct wpabuf_trace {$/;"	s	file:
wpabuf_trace::magic	src/utils/wpabuf.c	/^	unsigned int magic;$/;"	m	struct:wpabuf_trace	file:	access:public
wpabuf_zeropad	src/utils/wpabuf.c	/^struct wpabuf * wpabuf_zeropad(struct wpabuf *buf, size_t len)$/;"	f	signature:(struct wpabuf *buf, size_t len)
wpabuf_zeropad	src/utils/wpabuf.h	/^struct wpabuf * wpabuf_zeropad(struct wpabuf *buf, size_t len);$/;"	p	signature:(struct wpabuf *buf, size_t len)
wps	src/ap/hostapd.h	/^	struct wps_context *wps;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wps_context	access:public
wps	src/drivers/driver.h	/^	enum wps_mode wps;$/;"	m	struct:wpa_driver_associate_params	typeref:enum:wpa_driver_associate_params::wps_mode	access:public
wps	src/eap_peer/eap.h	/^	struct wps_context *wps;$/;"	m	struct:eap_config	typeref:struct:eap_config::wps_context	access:public
wps	src/eap_peer/eap_i.h	/^	struct wps_context *wps;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wps_context	access:public
wps	src/eap_peer/eap_wsc.c	/^	struct wps_data *wps;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wps_data	file:	access:public
wps	src/eap_server/eap.h	/^	struct wps_context *wps;$/;"	m	struct:eap_config	typeref:struct:eap_config::wps_context	access:public
wps	src/eap_server/eap_i.h	/^	struct wps_context *wps;$/;"	m	struct:eap_sm	typeref:struct:eap_sm::wps_context	access:public
wps	src/eap_server/eap_server_wsc.c	/^	struct wps_data *wps;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wps_data	file:	access:public
wps	src/eapol_auth/eapol_auth_sm.h	/^	struct wps_context *wps;$/;"	m	struct:eapol_auth_config	typeref:struct:eapol_auth_config::wps_context	access:public
wps	src/eapol_supp/eapol_supp_sm.h	/^	struct wps_context *wps;$/;"	m	struct:eapol_ctx	typeref:struct:eapol_ctx::wps_context	access:public
wps	src/radius/radius_server.c	/^	struct wps_context *wps;$/;"	m	struct:radius_server_data	typeref:struct:radius_server_data::wps_context	file:	access:public
wps	src/radius/radius_server.h	/^	struct wps_context *wps;$/;"	m	struct:radius_server_conf	typeref:struct:radius_server_conf::wps_context	access:public
wps	src/wps/wps.h	/^	struct wps_context *wps;$/;"	m	struct:wps_config	typeref:struct:wps_config::wps_context	access:public
wps	src/wps/wps_er.h	/^	struct wps_context *wps;$/;"	m	struct:wps_er	typeref:struct:wps_er::wps_context	access:public
wps	src/wps/wps_er.h	/^	struct wps_data *wps;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::wps_data	access:public
wps	src/wps/wps_er.h	/^	struct wps_data *wps;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::wps_data	access:public
wps	src/wps/wps_i.h	/^	struct wps_context *wps;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_context	access:public
wps	src/wps/wps_registrar.c	/^	struct wps_context *wps;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wps_context	file:	access:public
wps	src/wps/wps_upnp.h	/^	struct wps_data *wps;$/;"	m	struct:upnp_wps_peer	typeref:struct:upnp_wps_peer::wps_data	access:public
wps	src/wps/wps_upnp_i.h	/^	struct wps_context *wps;$/;"	m	struct:upnp_wps_device_interface	typeref:struct:upnp_wps_device_interface::wps_context	access:public
wps_add_pin	src/ap/wps_hostapd.c	/^static int wps_add_pin(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_add_pin_data	src/ap/wps_hostapd.c	/^struct wps_add_pin_data {$/;"	s	file:
wps_add_pin_data::added	src/ap/wps_hostapd.c	/^	int added;$/;"	m	struct:wps_add_pin_data	file:	access:public
wps_add_pin_data::addr	src/ap/wps_hostapd.c	/^	const u8 *addr;$/;"	m	struct:wps_add_pin_data	file:	access:public
wps_add_pin_data::pin	src/ap/wps_hostapd.c	/^	const u8 *pin;$/;"	m	struct:wps_add_pin_data	file:	access:public
wps_add_pin_data::pin_len	src/ap/wps_hostapd.c	/^	size_t pin_len;$/;"	m	struct:wps_add_pin_data	file:	access:public
wps_add_pin_data::timeout	src/ap/wps_hostapd.c	/^	int timeout;$/;"	m	struct:wps_add_pin_data	file:	access:public
wps_add_pin_data::uuid	src/ap/wps_hostapd.c	/^	const u8 *uuid;$/;"	m	struct:wps_add_pin_data	file:	access:public
wps_ap_pin_data	src/ap/wps_hostapd.c	/^struct wps_ap_pin_data {$/;"	s	file:
wps_ap_pin_data::pin_txt	src/ap/wps_hostapd.c	/^	char pin_txt[9];$/;"	m	struct:wps_ap_pin_data	file:	access:public
wps_ap_pin_data::timeout	src/ap/wps_hostapd.c	/^	int timeout;$/;"	m	struct:wps_ap_pin_data	file:	access:public
wps_ap_pin_disable	src/ap/wps_hostapd.c	/^static int wps_ap_pin_disable(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_ap_pin_set	src/ap/wps_hostapd.c	/^static int wps_ap_pin_set(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_ap_pin_success	src/ap/wps_hostapd.c	/^static int wps_ap_pin_success(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_ap_priority_compar	src/wps/wps.c	/^int wps_ap_priority_compar(const struct wpabuf *wps_a,$/;"	f	signature:(const struct wpabuf *wps_a, const struct wpabuf *wps_b)
wps_ap_priority_compar	src/wps/wps.h	/^int wps_ap_priority_compar(const struct wpabuf *wps_a,$/;"	p	signature:(const struct wpabuf *wps_a, const struct wpabuf *wps_b)
wps_assoc_state	src/wps/wps_defs.h	/^enum wps_assoc_state {$/;"	g
wps_attr_text	src/wps/wps.c	/^int wps_attr_text(struct wpabuf *data, char *buf, char *end)$/;"	f	signature:(struct wpabuf *data, char *buf, char *end)
wps_attr_text	src/wps/wps.h	/^int wps_attr_text(struct wpabuf *data, char *buf, char *end);$/;"	p	signature:(struct wpabuf *data, char *buf, char *end)
wps_attribute	src/wps/wps_defs.h	/^enum wps_attribute {$/;"	g
wps_attributes	src/p2p/p2p_i.h	/^	struct wpabuf *wps_attributes;$/;"	m	struct:p2p_message	typeref:struct:p2p_message::wpabuf	access:public
wps_authorized_macs	src/wps/wps_i.h	/^const u8 * wps_authorized_macs(struct wps_registrar *reg, size_t *count);$/;"	p	signature:(struct wps_registrar *reg, size_t *count)
wps_authorized_macs	src/wps/wps_registrar.c	/^const u8 * wps_authorized_macs(struct wps_registrar *reg, size_t *count)$/;"	f	signature:(struct wps_registrar *reg, size_t *count)
wps_beacon_ie	src/ap/hostapd.h	/^	struct wpabuf *wps_beacon_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
wps_beacon_ie	src/drivers/driver_atheros.c	/^	struct wpabuf *wps_beacon_ie;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::wpabuf	file:	access:public
wps_beacon_ie	src/drivers/driver_test.c	/^	u8 *wps_beacon_ie;$/;"	m	struct:test_driver_bss	file:	access:public
wps_beacon_ie_len	src/drivers/driver_test.c	/^	size_t wps_beacon_ie_len;$/;"	m	struct:test_driver_bss	file:	access:public
wps_build_ap_cred	src/wps/wps_registrar.c	/^static struct wpabuf * wps_build_ap_cred(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_ap_settings	src/wps/wps_enrollee.c	/^static int wps_build_ap_settings(struct wps_data *wps, struct wpabuf *plain)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *plain)
wps_build_ap_settings	src/wps/wps_registrar.c	/^static int wps_build_ap_settings(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_ap_setup_locked	src/wps/wps_registrar.c	/^static int wps_build_ap_setup_locked(struct wps_context *wps,$/;"	f	file:	signature:(struct wps_context *wps, struct wpabuf *msg)
wps_build_assoc_req_ie	src/wps/wps.c	/^struct wpabuf * wps_build_assoc_req_ie(enum wps_request_type req_type)$/;"	f	signature:(enum wps_request_type req_type)
wps_build_assoc_req_ie	src/wps/wps.h	/^struct wpabuf * wps_build_assoc_req_ie(enum wps_request_type req_type);$/;"	p	signature:(enum wps_request_type req_type)
wps_build_assoc_resp_ie	src/wps/wps.c	/^struct wpabuf * wps_build_assoc_resp_ie(void)$/;"	f	signature:(void)
wps_build_assoc_resp_ie	src/wps/wps.h	/^struct wpabuf * wps_build_assoc_resp_ie(void);$/;"	p	signature:(void)
wps_build_assoc_state	src/wps/wps_attr_build.c	/^int wps_build_assoc_state(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_assoc_state	src/wps/wps_i.h	/^int wps_build_assoc_state(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_auth_type_flags	src/wps/wps_attr_build.c	/^int wps_build_auth_type_flags(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_auth_type_flags	src/wps/wps_i.h	/^int wps_build_auth_type_flags(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_authenticator	src/wps/wps_attr_build.c	/^int wps_build_authenticator(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_authenticator	src/wps/wps_i.h	/^int wps_build_authenticator(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_config_error	src/wps/wps_attr_build.c	/^int wps_build_config_error(struct wpabuf *msg, u16 err)$/;"	f	signature:(struct wpabuf *msg, u16 err)
wps_build_config_error	src/wps/wps_i.h	/^int wps_build_config_error(struct wpabuf *msg, u16 err);$/;"	p	signature:(struct wpabuf *msg, u16 err)
wps_build_config_methods	src/wps/wps_attr_build.c	/^int wps_build_config_methods(struct wpabuf *msg, u16 methods)$/;"	f	signature:(struct wpabuf *msg, u16 methods)
wps_build_config_methods	src/wps/wps_i.h	/^int wps_build_config_methods(struct wpabuf *msg, u16 methods);$/;"	p	signature:(struct wpabuf *msg, u16 methods)
wps_build_config_methods_r	src/wps/wps_registrar.c	/^static int wps_build_config_methods_r(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *msg)
wps_build_conn_type_flags	src/wps/wps_attr_build.c	/^int wps_build_conn_type_flags(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_conn_type_flags	src/wps/wps_i.h	/^int wps_build_conn_type_flags(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred	src/wps/wps_i.h	/^int wps_build_cred(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred	src/wps/wps_registrar.c	/^int wps_build_cred(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred_auth_type	src/wps/wps_enrollee.c	/^static int wps_build_cred_auth_type(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred_auth_type	src/wps/wps_registrar.c	/^static int wps_build_cred_auth_type(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_cred_encr_type	src/wps/wps_enrollee.c	/^static int wps_build_cred_encr_type(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred_encr_type	src/wps/wps_registrar.c	/^static int wps_build_cred_encr_type(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_cred_mac_addr	src/wps/wps_enrollee.c	/^static int wps_build_cred_mac_addr(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred_mac_addr	src/wps/wps_registrar.c	/^static int wps_build_cred_mac_addr(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_cred_network_idx	src/wps/wps_registrar.c	/^static int wps_build_cred_network_idx(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_cred_network_key	src/wps/wps_enrollee.c	/^static int wps_build_cred_network_key(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred_network_key	src/wps/wps_registrar.c	/^static int wps_build_cred_network_key(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_cred_ssid	src/wps/wps_enrollee.c	/^static int wps_build_cred_ssid(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_cred_ssid	src/wps/wps_registrar.c	/^static int wps_build_cred_ssid(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_credential	src/wps/wps_registrar.c	/^static int wps_build_credential(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_credential_wrap	src/wps/wps.h	/^int wps_build_credential_wrap(struct wpabuf *msg,$/;"	p	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_credential_wrap	src/wps/wps_registrar.c	/^int wps_build_credential_wrap(struct wpabuf *msg,$/;"	f	signature:(struct wpabuf *msg, const struct wps_credential *cred)
wps_build_dev_name	src/wps/wps_dev_attr.c	/^int wps_build_dev_name(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_dev_name	src/wps/wps_dev_attr.h	/^int wps_build_dev_name(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_dev_password_id	src/wps/wps_attr_build.c	/^int wps_build_dev_password_id(struct wpabuf *msg, u16 id)$/;"	f	signature:(struct wpabuf *msg, u16 id)
wps_build_dev_password_id	src/wps/wps_i.h	/^int wps_build_dev_password_id(struct wpabuf *msg, u16 id);$/;"	p	signature:(struct wpabuf *msg, u16 id)
wps_build_device_attrs	src/wps/wps_dev_attr.c	/^int wps_build_device_attrs(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_device_attrs	src/wps/wps_dev_attr.h	/^int wps_build_device_attrs(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_e_hash	src/wps/wps_enrollee.c	/^static int wps_build_e_hash(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_e_snonce1	src/wps/wps_enrollee.c	/^static int wps_build_e_snonce1(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_e_snonce2	src/wps/wps_enrollee.c	/^static int wps_build_e_snonce2(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_encr_settings	src/wps/wps_attr_build.c	/^int wps_build_encr_settings(struct wps_data *wps, struct wpabuf *msg,$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg, struct wpabuf *plain)
wps_build_encr_settings	src/wps/wps_i.h	/^int wps_build_encr_settings(struct wps_data *wps, struct wpabuf *msg,$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg, struct wpabuf *plain)
wps_build_encr_type_flags	src/wps/wps_attr_build.c	/^int wps_build_encr_type_flags(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_encr_type_flags	src/wps/wps_i.h	/^int wps_build_encr_type_flags(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_enrollee_nonce	src/wps/wps_attr_build.c	/^int wps_build_enrollee_nonce(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_enrollee_nonce	src/wps/wps_i.h	/^int wps_build_enrollee_nonce(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_key_wrap_auth	src/wps/wps_attr_build.c	/^int wps_build_key_wrap_auth(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_key_wrap_auth	src/wps/wps_i.h	/^int wps_build_key_wrap_auth(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_m1	src/wps/wps_enrollee.c	/^static struct wpabuf * wps_build_m1(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m2	src/wps/wps_registrar.c	/^static struct wpabuf * wps_build_m2(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m2d	src/wps/wps_registrar.c	/^static struct wpabuf * wps_build_m2d(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m3	src/wps/wps_enrollee.c	/^static struct wpabuf * wps_build_m3(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m4	src/wps/wps_registrar.c	/^static struct wpabuf * wps_build_m4(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m5	src/wps/wps_enrollee.c	/^static struct wpabuf * wps_build_m5(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m6	src/wps/wps_registrar.c	/^static struct wpabuf * wps_build_m6(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m7	src/wps/wps_enrollee.c	/^static struct wpabuf * wps_build_m7(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_m8	src/wps/wps_registrar.c	/^static struct wpabuf * wps_build_m8(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_mac_addr	src/wps/wps_enrollee.c	/^static int wps_build_mac_addr(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_manufacturer	src/wps/wps_dev_attr.c	/^int wps_build_manufacturer(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_manufacturer	src/wps/wps_dev_attr.h	/^int wps_build_manufacturer(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_model_name	src/wps/wps_dev_attr.c	/^int wps_build_model_name(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_model_name	src/wps/wps_dev_attr.h	/^int wps_build_model_name(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_model_number	src/wps/wps_dev_attr.c	/^int wps_build_model_number(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_model_number	src/wps/wps_dev_attr.h	/^int wps_build_model_number(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_msg_type	src/wps/wps_attr_build.c	/^int wps_build_msg_type(struct wpabuf *msg, enum wps_msg_type msg_type)$/;"	f	signature:(struct wpabuf *msg, enum wps_msg_type msg_type)
wps_build_msg_type	src/wps/wps_i.h	/^int wps_build_msg_type(struct wpabuf *msg, enum wps_msg_type msg_type);$/;"	p	signature:(struct wpabuf *msg, enum wps_msg_type msg_type)
wps_build_oob_dev_password	src/wps/wps_attr_build.c	/^int wps_build_oob_dev_password(struct wpabuf *msg, struct wps_context *wps)$/;"	f	signature:(struct wpabuf *msg, struct wps_context *wps)
wps_build_oob_dev_password	src/wps/wps_i.h	/^int wps_build_oob_dev_password(struct wpabuf *msg, struct wps_context *wps);$/;"	p	signature:(struct wpabuf *msg, struct wps_context *wps)
wps_build_os_version	src/wps/wps_dev_attr.c	/^int wps_build_os_version(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_os_version	src/wps/wps_dev_attr.h	/^int wps_build_os_version(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_primary_dev_type	src/wps/wps_dev_attr.c	/^int wps_build_primary_dev_type(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_primary_dev_type	src/wps/wps_dev_attr.h	/^int wps_build_primary_dev_type(struct wps_device_data *dev,$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_probe_config_methods	src/wps/wps_registrar.c	/^static int wps_build_probe_config_methods(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *msg)
wps_build_probe_req_ie	src/wps/wps.c	/^struct wpabuf * wps_build_probe_req_ie(int pbc, struct wps_device_data *dev,$/;"	f	signature:(int pbc, struct wps_device_data *dev, const u8 *uuid, enum wps_request_type req_type, unsigned int num_req_dev_types, const u8 *req_dev_types)
wps_build_probe_req_ie	src/wps/wps.h	/^struct wpabuf * wps_build_probe_req_ie(int pbc, struct wps_device_data *dev,$/;"	p	signature:(int pbc, struct wps_device_data *dev, const u8 *uuid, enum wps_request_type req_type, unsigned int num_req_dev_types, const u8 *req_dev_types)
wps_build_public_key	src/wps/wps_attr_build.c	/^int wps_build_public_key(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_public_key	src/wps/wps_i.h	/^int wps_build_public_key(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_r_hash	src/wps/wps_registrar.c	/^static int wps_build_r_hash(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_r_snonce1	src/wps/wps_registrar.c	/^static int wps_build_r_snonce1(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_r_snonce2	src/wps/wps_registrar.c	/^static int wps_build_r_snonce2(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_registrar_nonce	src/wps/wps_attr_build.c	/^int wps_build_registrar_nonce(struct wps_data *wps, struct wpabuf *msg)$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_registrar_nonce	src/wps/wps_i.h	/^int wps_build_registrar_nonce(struct wps_data *wps, struct wpabuf *msg);$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_req_dev_type	src/wps/wps_dev_attr.c	/^int wps_build_req_dev_type(struct wps_device_data *dev, struct wpabuf *msg,$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg, unsigned int num_req_dev_types, const u8 *req_dev_types)
wps_build_req_dev_type	src/wps/wps_dev_attr.h	/^int wps_build_req_dev_type(struct wps_device_data *dev, struct wpabuf *msg,$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg, unsigned int num_req_dev_types, const u8 *req_dev_types)
wps_build_req_type	src/wps/wps_attr_build.c	/^int wps_build_req_type(struct wpabuf *msg, enum wps_request_type type)$/;"	f	signature:(struct wpabuf *msg, enum wps_request_type type)
wps_build_req_type	src/wps/wps_i.h	/^int wps_build_req_type(struct wpabuf *msg, enum wps_request_type type);$/;"	p	signature:(struct wpabuf *msg, enum wps_request_type type)
wps_build_resp_type	src/wps/wps_attr_build.c	/^int wps_build_resp_type(struct wpabuf *msg, enum wps_response_type type)$/;"	f	signature:(struct wpabuf *msg, enum wps_response_type type)
wps_build_resp_type	src/wps/wps_i.h	/^int wps_build_resp_type(struct wpabuf *msg, enum wps_response_type type);$/;"	p	signature:(struct wpabuf *msg, enum wps_response_type type)
wps_build_rf_bands	src/wps/wps_dev_attr.c	/^int wps_build_rf_bands(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_rf_bands	src/wps/wps_dev_attr.h	/^int wps_build_rf_bands(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_secondary_dev_type	src/wps/wps_dev_attr.c	/^int wps_build_secondary_dev_type(struct wps_device_data *dev,$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_secondary_dev_type	src/wps/wps_dev_attr.h	/^int wps_build_secondary_dev_type(struct wps_device_data *dev,$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_sel_pbc_reg_uuid_e	src/wps/wps_registrar.c	/^static int wps_build_sel_pbc_reg_uuid_e(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *msg)
wps_build_sel_reg_config_methods	src/wps/wps_registrar.c	/^static int wps_build_sel_reg_config_methods(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *msg)
wps_build_sel_reg_dev_password_id	src/wps/wps_registrar.c	/^static int wps_build_sel_reg_dev_password_id(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *msg)
wps_build_selected_registrar	src/wps/wps_registrar.c	/^static int wps_build_selected_registrar(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *msg)
wps_build_serial_number	src/wps/wps_dev_attr.c	/^static int wps_build_serial_number(struct wps_device_data *dev,$/;"	f	file:	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_uuid_e	src/wps/wps_attr_build.c	/^int wps_build_uuid_e(struct wpabuf *msg, const u8 *uuid)$/;"	f	signature:(struct wpabuf *msg, const u8 *uuid)
wps_build_uuid_e	src/wps/wps_i.h	/^int wps_build_uuid_e(struct wpabuf *msg, const u8 *uuid);$/;"	p	signature:(struct wpabuf *msg, const u8 *uuid)
wps_build_uuid_r	src/wps/wps_registrar.c	/^static int wps_build_uuid_r(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_vendor_ext	src/wps/wps_dev_attr.c	/^int wps_build_vendor_ext(struct wps_device_data *dev, struct wpabuf *msg)$/;"	f	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_vendor_ext	src/wps/wps_dev_attr.h	/^int wps_build_vendor_ext(struct wps_device_data *dev, struct wpabuf *msg);$/;"	p	signature:(struct wps_device_data *dev, struct wpabuf *msg)
wps_build_version	src/wps/wps_attr_build.c	/^int wps_build_version(struct wpabuf *msg)$/;"	f	signature:(struct wpabuf *msg)
wps_build_version	src/wps/wps_i.h	/^int wps_build_version(struct wpabuf *msg);$/;"	p	signature:(struct wpabuf *msg)
wps_build_wfa_ext	src/wps/wps_attr_build.c	/^int wps_build_wfa_ext(struct wpabuf *msg, int req_to_enroll,$/;"	f	signature:(struct wpabuf *msg, int req_to_enroll, const u8 *auth_macs, size_t auth_macs_count)
wps_build_wfa_ext	src/wps/wps_i.h	/^int wps_build_wfa_ext(struct wpabuf *msg, int req_to_enroll,$/;"	p	signature:(struct wpabuf *msg, int req_to_enroll, const u8 *auth_macs, size_t auth_macs_count)
wps_build_wps_state	src/wps/wps_enrollee.c	/^static int wps_build_wps_state(struct wps_data *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_data *wps, struct wpabuf *msg)
wps_build_wps_state	src/wps/wps_registrar.c	/^static int wps_build_wps_state(struct wps_context *wps, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_context *wps, struct wpabuf *msg)
wps_build_wsc_ack	src/wps/wps_common.c	/^struct wpabuf * wps_build_wsc_ack(struct wps_data *wps)$/;"	f	signature:(struct wps_data *wps)
wps_build_wsc_ack	src/wps/wps_i.h	/^struct wpabuf * wps_build_wsc_ack(struct wps_data *wps);$/;"	p	signature:(struct wps_data *wps)
wps_build_wsc_done	src/wps/wps_enrollee.c	/^static struct wpabuf * wps_build_wsc_done(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_build_wsc_nack	src/wps/wps_common.c	/^struct wpabuf * wps_build_wsc_nack(struct wps_data *wps)$/;"	f	signature:(struct wps_data *wps)
wps_build_wsc_nack	src/wps/wps_i.h	/^struct wpabuf * wps_build_wsc_nack(struct wps_data *wps);$/;"	p	signature:(struct wps_data *wps)
wps_button_pushed	src/ap/wps_hostapd.c	/^static int wps_button_pushed(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_cb_new_psk	src/wps/wps_registrar.c	/^static int wps_cb_new_psk(struct wps_registrar *reg, const u8 *mac_addr,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *mac_addr, const u8 *psk, size_t psk_len)
wps_cb_pin_needed	src/wps/wps_registrar.c	/^static void wps_cb_pin_needed(struct wps_registrar *reg, const u8 *uuid_e,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *uuid_e, const struct wps_device_data *dev)
wps_cb_reg_success	src/wps/wps_registrar.c	/^static void wps_cb_reg_success(struct wps_registrar *reg, const u8 *mac_addr,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *mac_addr, const u8 *uuid_e)
wps_cb_set_ie	src/wps/wps_registrar.c	/^static int wps_cb_set_ie(struct wps_registrar *reg, struct wpabuf *beacon_ie,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wpabuf *beacon_ie, struct wpabuf *probe_resp_ie)
wps_cb_set_sel_reg	src/wps/wps_registrar.c	/^static void wps_cb_set_sel_reg(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_config	src/wps/wps.h	/^struct wps_config {$/;"	s
wps_config::assoc_wps_ie	src/wps/wps.h	/^	const struct wpabuf *assoc_wps_ie;$/;"	m	struct:wps_config	typeref:struct:wps_config::wpabuf	access:public
wps_config::dev_pw_id	src/wps/wps.h	/^	u16 dev_pw_id;$/;"	m	struct:wps_config	access:public
wps_config::new_ap_settings	src/wps/wps.h	/^	const struct wps_credential *new_ap_settings;$/;"	m	struct:wps_config	typeref:struct:wps_config::wps_credential	access:public
wps_config::p2p_dev_addr	src/wps/wps.h	/^	const u8 *p2p_dev_addr;$/;"	m	struct:wps_config	access:public
wps_config::pbc	src/wps/wps.h	/^	int pbc;$/;"	m	struct:wps_config	access:public
wps_config::pbc_in_m1	src/wps/wps.h	/^	int pbc_in_m1;$/;"	m	struct:wps_config	access:public
wps_config::peer_addr	src/wps/wps.h	/^	const u8 *peer_addr;$/;"	m	struct:wps_config	access:public
wps_config::pin	src/wps/wps.h	/^	const u8 *pin;$/;"	m	struct:wps_config	access:public
wps_config::pin_len	src/wps/wps.h	/^	size_t pin_len;$/;"	m	struct:wps_config	access:public
wps_config::registrar	src/wps/wps.h	/^	int registrar;$/;"	m	struct:wps_config	access:public
wps_config::use_psk_key	src/wps/wps.h	/^	int use_psk_key;$/;"	m	struct:wps_config	access:public
wps_config::wps	src/wps/wps.h	/^	struct wps_context *wps;$/;"	m	struct:wps_config	typeref:struct:wps_config::wps_context	access:public
wps_config_error	src/wps/wps_defs.h	/^enum wps_config_error {$/;"	g
wps_config_methods	src/p2p/p2p_i.h	/^	u16 wps_config_methods;$/;"	m	struct:p2p_message	access:public
wps_config_methods_str2bin	src/wps/wps.h	/^u16 wps_config_methods_str2bin(const char *str);$/;"	p	signature:(const char *str)
wps_config_methods_str2bin	src/wps/wps_common.c	/^u16 wps_config_methods_str2bin(const char *str)$/;"	f	signature:(const char *str)
wps_context	src/wps/wps.h	/^struct wps_context {$/;"	s
wps_context::ap	src/wps/wps.h	/^	int ap;$/;"	m	struct:wps_context	access:public
wps_context::ap_settings	src/wps/wps.h	/^	u8 *ap_settings;$/;"	m	struct:wps_context	access:public
wps_context::ap_settings_len	src/wps/wps.h	/^	size_t ap_settings_len;$/;"	m	struct:wps_context	access:public
wps_context::ap_setup_locked	src/wps/wps.h	/^	int ap_setup_locked;$/;"	m	struct:wps_context	access:public
wps_context::auth_types	src/wps/wps.h	/^	u16 auth_types;$/;"	m	struct:wps_context	access:public
wps_context::cb_ctx	src/wps/wps.h	/^	void *cb_ctx;$/;"	m	struct:wps_context	access:public
wps_context::config_methods	src/wps/wps.h	/^	u16 config_methods;$/;"	m	struct:wps_context	access:public
wps_context::cred_cb	src/wps/wps.h	/^	int (*cred_cb)(void *ctx, const struct wps_credential *cred);$/;"	m	struct:wps_context	access:public
wps_context::dev	src/wps/wps.h	/^	struct wps_device_data dev;$/;"	m	struct:wps_context	typeref:struct:wps_context::wps_device_data	access:public
wps_context::dh_ctx	src/wps/wps.h	/^	void *dh_ctx;$/;"	m	struct:wps_context	access:public
wps_context::dh_privkey	src/wps/wps.h	/^	struct wpabuf *dh_privkey;$/;"	m	struct:wps_context	typeref:struct:wps_context::wpabuf	access:public
wps_context::dh_pubkey	src/wps/wps.h	/^	struct wpabuf *dh_pubkey;$/;"	m	struct:wps_context	typeref:struct:wps_context::wpabuf	access:public
wps_context::encr_types	src/wps/wps.h	/^	u16 encr_types;$/;"	m	struct:wps_context	access:public
wps_context::event_cb	src/wps/wps.h	/^	void (*event_cb)(void *ctx, enum wps_event event,$/;"	m	struct:wps_context	access:public
wps_context::friendly_name	src/wps/wps.h	/^	char *friendly_name;$/;"	m	struct:wps_context	access:public
wps_context::manufacturer_url	src/wps/wps.h	/^	char *manufacturer_url;$/;"	m	struct:wps_context	access:public
wps_context::model_description	src/wps/wps.h	/^	char *model_description;$/;"	m	struct:wps_context	access:public
wps_context::model_url	src/wps/wps.h	/^	char *model_url;$/;"	m	struct:wps_context	access:public
wps_context::network_key	src/wps/wps.h	/^	u8 *network_key;$/;"	m	struct:wps_context	access:public
wps_context::network_key_len	src/wps/wps.h	/^	size_t network_key_len;$/;"	m	struct:wps_context	access:public
wps_context::oob_conf	src/wps/wps.h	/^	struct oob_conf_data oob_conf;$/;"	m	struct:wps_context	typeref:struct:wps_context::oob_conf_data	access:public
wps_context::oob_dev_pw_id	src/wps/wps.h	/^	u16 oob_dev_pw_id;$/;"	m	struct:wps_context	access:public
wps_context::psk	src/wps/wps.h	/^	u8 psk[32];$/;"	m	struct:wps_context	access:public
wps_context::psk_set	src/wps/wps.h	/^	int psk_set;$/;"	m	struct:wps_context	access:public
wps_context::registrar	src/wps/wps.h	/^	struct wps_registrar *registrar;$/;"	m	struct:wps_context	typeref:struct:wps_context::wps_registrar	access:public
wps_context::ssid	src/wps/wps.h	/^	u8 ssid[32];$/;"	m	struct:wps_context	access:public
wps_context::ssid_len	src/wps/wps.h	/^	size_t ssid_len;$/;"	m	struct:wps_context	access:public
wps_context::upc	src/wps/wps.h	/^	char *upc;$/;"	m	struct:wps_context	access:public
wps_context::upnp_msgs	src/wps/wps.h	/^	struct upnp_pending_message *upnp_msgs;$/;"	m	struct:wps_context	typeref:struct:wps_context::upnp_pending_message	access:public
wps_context::uuid	src/wps/wps.h	/^	u8 uuid[16];$/;"	m	struct:wps_context	access:public
wps_context::wps_state	src/wps/wps.h	/^	enum wps_state wps_state;$/;"	m	struct:wps_context	typeref:enum:wps_context::wps_state	access:public
wps_context::wps_upnp	src/wps/wps.h	/^	struct upnp_wps_device_sm *wps_upnp;$/;"	m	struct:wps_context	typeref:struct:wps_context::upnp_wps_device_sm	access:public
wps_cred_processing	src/ap/ap_config.h	/^	int wps_cred_processing;$/;"	m	struct:hostapd_bss_config	access:public
wps_cred_update	src/wps/wps_registrar.c	/^static void wps_cred_update(struct wps_credential *dst,$/;"	f	file:	signature:(struct wps_credential *dst, struct wps_credential *src)
wps_credential	src/wps/wps.h	/^struct wps_credential {$/;"	s
wps_credential::auth_type	src/wps/wps.h	/^	u16 auth_type;$/;"	m	struct:wps_credential	access:public
wps_credential::cred_attr	src/wps/wps.h	/^	const u8 *cred_attr;$/;"	m	struct:wps_credential	access:public
wps_credential::cred_attr_len	src/wps/wps.h	/^	size_t cred_attr_len;$/;"	m	struct:wps_credential	access:public
wps_credential::encr_type	src/wps/wps.h	/^	u16 encr_type;$/;"	m	struct:wps_credential	access:public
wps_credential::key	src/wps/wps.h	/^	u8 key[64];$/;"	m	struct:wps_credential	access:public
wps_credential::key_idx	src/wps/wps.h	/^	u8 key_idx;$/;"	m	struct:wps_credential	access:public
wps_credential::key_len	src/wps/wps.h	/^	size_t key_len;$/;"	m	struct:wps_credential	access:public
wps_credential::mac_addr	src/wps/wps.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:wps_credential	access:public
wps_credential::ssid	src/wps/wps.h	/^	u8 ssid[32];$/;"	m	struct:wps_credential	access:public
wps_credential::ssid_len	src/wps/wps.h	/^	size_t ssid_len;$/;"	m	struct:wps_credential	access:public
wps_ctx	src/eap_peer/eap_wsc.c	/^	struct wps_context *wps_ctx;$/;"	m	struct:eap_wsc_data	typeref:struct:eap_wsc_data::wps_context	file:	access:public
wps_data	src/wps/wps_i.h	/^struct wps_data {$/;"	s
wps_data::RECEIVED_M2D	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_ACK	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_DONE	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M1	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M2	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M2D_ACK	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M3	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M4	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M5	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M6	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M7	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
wps_data::RECV_M8	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M1	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M2	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M2D	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M3	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M4	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M5	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M6	src/wps/wps_i.h	/^		RECV_M1, SEND_M2, RECV_M3, SEND_M4, RECV_M5, SEND_M6,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M7	src/wps/wps_i.h	/^		SEND_M1, RECV_M2, SEND_M3, RECV_M4, SEND_M5, RECV_M6, SEND_M7,$/;"	e	enum:wps_data::__anon29
wps_data::SEND_M8	src/wps/wps_i.h	/^		RECV_M7, SEND_M8, RECV_DONE, SEND_M2D, RECV_M2D_ACK$/;"	e	enum:wps_data::__anon29
wps_data::SEND_WSC_NACK	src/wps/wps_i.h	/^		SEND_WSC_NACK,$/;"	e	enum:wps_data::__anon29
wps_data::WPS_FINISHED	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
wps_data::WPS_MSG_DONE	src/wps/wps_i.h	/^		RECV_M8, RECEIVED_M2D, WPS_MSG_DONE, RECV_ACK, WPS_FINISHED,$/;"	e	enum:wps_data::__anon29
wps_data::ap_settings_cb	src/wps/wps_i.h	/^	void (*ap_settings_cb)(void *ctx, const struct wps_credential *cred);$/;"	m	struct:wps_data	access:public
wps_data::ap_settings_cb_ctx	src/wps/wps_i.h	/^	void *ap_settings_cb_ctx;$/;"	m	struct:wps_data	access:public
wps_data::auth_type	src/wps/wps_i.h	/^	u16 auth_type;$/;"	m	struct:wps_data	access:public
wps_data::authkey	src/wps/wps_i.h	/^	u8 authkey[WPS_AUTHKEY_LEN];$/;"	m	struct:wps_data	access:public
wps_data::config_error	src/wps/wps_i.h	/^	u16 config_error;$/;"	m	struct:wps_data	access:public
wps_data::cred	src/wps/wps_i.h	/^	struct wps_credential cred;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_credential	access:public
wps_data::dev_password	src/wps/wps_i.h	/^	u8 *dev_password;$/;"	m	struct:wps_data	access:public
wps_data::dev_password_len	src/wps/wps_i.h	/^	size_t dev_password_len;$/;"	m	struct:wps_data	access:public
wps_data::dev_pw_id	src/wps/wps_i.h	/^	u16 dev_pw_id;$/;"	m	struct:wps_data	access:public
wps_data::dh_ctx	src/wps/wps_i.h	/^	void *dh_ctx;$/;"	m	struct:wps_data	access:public
wps_data::dh_privkey	src/wps/wps_i.h	/^	struct wpabuf *dh_privkey;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
wps_data::dh_pubkey_e	src/wps/wps_i.h	/^	struct wpabuf *dh_pubkey_e;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
wps_data::dh_pubkey_r	src/wps/wps_i.h	/^	struct wpabuf *dh_pubkey_r;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
wps_data::emsk	src/wps/wps_i.h	/^	u8 emsk[WPS_EMSK_LEN];$/;"	m	struct:wps_data	access:public
wps_data::encr_type	src/wps/wps_i.h	/^	u16 encr_type;$/;"	m	struct:wps_data	access:public
wps_data::er	src/wps/wps_i.h	/^	int er;$/;"	m	struct:wps_data	access:public
wps_data::error_indication	src/wps/wps_i.h	/^	u16 error_indication;$/;"	m	struct:wps_data	access:public
wps_data::ext_reg	src/wps/wps_i.h	/^	int ext_reg;$/;"	m	struct:wps_data	access:public
wps_data::int_reg	src/wps/wps_i.h	/^	int int_reg;$/;"	m	struct:wps_data	access:public
wps_data::keywrapkey	src/wps/wps_i.h	/^	u8 keywrapkey[WPS_KEYWRAPKEY_LEN];$/;"	m	struct:wps_data	access:public
wps_data::last_msg	src/wps/wps_i.h	/^	struct wpabuf *last_msg;$/;"	m	struct:wps_data	typeref:struct:wps_data::wpabuf	access:public
wps_data::mac_addr_e	src/wps/wps_i.h	/^	u8 mac_addr_e[ETH_ALEN];$/;"	m	struct:wps_data	access:public
wps_data::new_ap_settings	src/wps/wps_i.h	/^	struct wps_credential *new_ap_settings;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_credential	access:public
wps_data::new_psk	src/wps/wps_i.h	/^	u8 *new_psk;$/;"	m	struct:wps_data	access:public
wps_data::new_psk_len	src/wps/wps_i.h	/^	size_t new_psk_len;$/;"	m	struct:wps_data	access:public
wps_data::nonce_e	src/wps/wps_i.h	/^	u8 nonce_e[WPS_NONCE_LEN];$/;"	m	struct:wps_data	access:public
wps_data::nonce_r	src/wps/wps_i.h	/^	u8 nonce_r[WPS_NONCE_LEN];$/;"	m	struct:wps_data	access:public
wps_data::p2p_dev_addr	src/wps/wps_i.h	/^	u8 p2p_dev_addr[ETH_ALEN]; \/* P2P Device Address of the client or$/;"	m	struct:wps_data	access:public
wps_data::pbc	src/wps/wps_i.h	/^	int pbc;$/;"	m	struct:wps_data	access:public
wps_data::pbc_in_m1	src/wps/wps_i.h	/^	int pbc_in_m1;$/;"	m	struct:wps_data	access:public
wps_data::peer_dev	src/wps/wps_i.h	/^	struct wps_device_data peer_dev;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_device_data	access:public
wps_data::peer_hash1	src/wps/wps_i.h	/^	u8 peer_hash1[WPS_HASH_LEN];$/;"	m	struct:wps_data	access:public
wps_data::peer_hash2	src/wps/wps_i.h	/^	u8 peer_hash2[WPS_HASH_LEN];$/;"	m	struct:wps_data	access:public
wps_data::psk1	src/wps/wps_i.h	/^	u8 psk1[WPS_PSK_LEN];$/;"	m	struct:wps_data	access:public
wps_data::psk2	src/wps/wps_i.h	/^	u8 psk2[WPS_PSK_LEN];$/;"	m	struct:wps_data	access:public
wps_data::registrar	src/wps/wps_i.h	/^	int registrar;$/;"	m	struct:wps_data	access:public
wps_data::request_type	src/wps/wps_i.h	/^	u8 request_type;$/;"	m	struct:wps_data	access:public
wps_data::snonce	src/wps/wps_i.h	/^	u8 snonce[2 * WPS_SECRET_NONCE_LEN];$/;"	m	struct:wps_data	access:public
wps_data::state	src/wps/wps_i.h	/^	} state;$/;"	m	struct:wps_data	typeref:enum:wps_data::__anon29	access:public
wps_data::use_cred	src/wps/wps_i.h	/^	struct wps_credential *use_cred;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_credential	access:public
wps_data::use_psk_key	src/wps/wps_i.h	/^	int use_psk_key;$/;"	m	struct:wps_data	access:public
wps_data::uuid_e	src/wps/wps_i.h	/^	u8 uuid_e[WPS_UUID_LEN];$/;"	m	struct:wps_data	access:public
wps_data::uuid_r	src/wps/wps_i.h	/^	u8 uuid_r[WPS_UUID_LEN];$/;"	m	struct:wps_data	access:public
wps_data::wps	src/wps/wps_i.h	/^	struct wps_context *wps;$/;"	m	struct:wps_data	typeref:struct:wps_data::wps_context	access:public
wps_data::wps_pin_revealed	src/wps/wps_i.h	/^	int wps_pin_revealed;$/;"	m	struct:wps_data	access:public
wps_decrypt_encr_settings	src/wps/wps_common.c	/^struct wpabuf * wps_decrypt_encr_settings(struct wps_data *wps, const u8 *encr,$/;"	f	signature:(struct wps_data *wps, const u8 *encr, size_t encr_len)
wps_decrypt_encr_settings	src/wps/wps_i.h	/^struct wpabuf * wps_decrypt_encr_settings(struct wps_data *wps, const u8 *encr,$/;"	p	signature:(struct wps_data *wps, const u8 *encr, size_t encr_len)
wps_deinit	src/wps/wps.c	/^void wps_deinit(struct wps_data *data)$/;"	f	signature:(struct wps_data *data)
wps_deinit	src/wps/wps.h	/^void wps_deinit(struct wps_data *data);$/;"	p	signature:(struct wps_data *data)
wps_derive_keys	src/wps/wps_common.c	/^int wps_derive_keys(struct wps_data *wps)$/;"	f	signature:(struct wps_data *wps)
wps_derive_keys	src/wps/wps_i.h	/^int wps_derive_keys(struct wps_data *wps);$/;"	p	signature:(struct wps_data *wps)
wps_derive_psk	src/wps/wps_common.c	/^void wps_derive_psk(struct wps_data *wps, const u8 *dev_passwd,$/;"	f	signature:(struct wps_data *wps, const u8 *dev_passwd, size_t dev_passwd_len)
wps_derive_psk	src/wps/wps_i.h	/^void wps_derive_psk(struct wps_data *wps, const u8 *dev_passwd,$/;"	p	signature:(struct wps_data *wps, const u8 *dev_passwd, size_t dev_passwd_len)
wps_dev_categ	src/wps/wps_defs.h	/^enum wps_dev_categ {$/;"	g
wps_dev_password_id	src/wps/wps_defs.h	/^enum wps_dev_password_id {$/;"	g
wps_dev_subcateg	src/wps/wps_defs.h	/^enum wps_dev_subcateg {$/;"	g
wps_dev_type_bin2str	src/wps/wps.h	/^char * wps_dev_type_bin2str(const u8 dev_type[WPS_DEV_TYPE_LEN], char *buf,$/;"	p	signature:(const u8 dev_type[WPS_DEV_TYPE_LEN], char *buf, size_t buf_len)
wps_dev_type_bin2str	src/wps/wps_common.c	/^char * wps_dev_type_bin2str(const u8 dev_type[WPS_DEV_TYPE_LEN], char *buf,$/;"	f	signature:(const u8 dev_type[WPS_DEV_TYPE_LEN], char *buf, size_t buf_len)
wps_dev_type_str2bin	src/wps/wps.h	/^int wps_dev_type_str2bin(const char *str, u8 dev_type[WPS_DEV_TYPE_LEN]);$/;"	p	signature:(const char *str, u8 dev_type[WPS_DEV_TYPE_LEN])
wps_dev_type_str2bin	src/wps/wps_common.c	/^int wps_dev_type_str2bin(const char *str, u8 dev_type[WPS_DEV_TYPE_LEN])$/;"	f	signature:(const char *str, u8 dev_type[WPS_DEV_TYPE_LEN])
wps_device_clone_data	src/wps/wps_registrar.c	/^static void wps_device_clone_data(struct wps_device_data *dst,$/;"	f	file:	signature:(struct wps_device_data *dst, struct wps_device_data *src)
wps_device_data	src/wps/wps.h	/^struct wps_device_data {$/;"	s
wps_device_data::config_methods	src/wps/wps.h	/^	u16 config_methods;$/;"	m	struct:wps_device_data	access:public
wps_device_data::device_name	src/wps/wps.h	/^	char *device_name;$/;"	m	struct:wps_device_data	access:public
wps_device_data::mac_addr	src/wps/wps.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:wps_device_data	access:public
wps_device_data::manufacturer	src/wps/wps.h	/^	char *manufacturer;$/;"	m	struct:wps_device_data	access:public
wps_device_data::model_name	src/wps/wps.h	/^	char *model_name;$/;"	m	struct:wps_device_data	access:public
wps_device_data::model_number	src/wps/wps.h	/^	char *model_number;$/;"	m	struct:wps_device_data	access:public
wps_device_data::num_sec_dev_types	src/wps/wps.h	/^	u8 num_sec_dev_types;$/;"	m	struct:wps_device_data	access:public
wps_device_data::os_version	src/wps/wps.h	/^	u32 os_version;$/;"	m	struct:wps_device_data	access:public
wps_device_data::p2p	src/wps/wps.h	/^	int p2p;$/;"	m	struct:wps_device_data	access:public
wps_device_data::pri_dev_type	src/wps/wps.h	/^	u8 pri_dev_type[WPS_DEV_TYPE_LEN];$/;"	m	struct:wps_device_data	access:public
wps_device_data::rf_bands	src/wps/wps.h	/^	u8 rf_bands;$/;"	m	struct:wps_device_data	access:public
wps_device_data::sec_dev_type	src/wps/wps.h	/^	u8 sec_dev_type[WPS_SEC_DEVICE_TYPES][WPS_DEV_TYPE_LEN];$/;"	m	struct:wps_device_data	access:public
wps_device_data::serial_number	src/wps/wps.h	/^	char *serial_number;$/;"	m	struct:wps_device_data	access:public
wps_device_data::vendor_ext	src/wps/wps.h	/^	struct wpabuf *vendor_ext[MAX_WPS_VENDOR_EXTENSIONS];$/;"	m	struct:wps_device_data	typeref:struct:wps_device_data::wpabuf	access:public
wps_device_data_dup	src/wps/wps_dev_attr.c	/^void wps_device_data_dup(struct wps_device_data *dst,$/;"	f	signature:(struct wps_device_data *dst, const struct wps_device_data *src)
wps_device_data_dup	src/wps/wps_dev_attr.h	/^void wps_device_data_dup(struct wps_device_data *dst,$/;"	p	signature:(struct wps_device_data *dst, const struct wps_device_data *src)
wps_device_data_free	src/wps/wps_dev_attr.c	/^void wps_device_data_free(struct wps_device_data *dev)$/;"	f	signature:(struct wps_device_data *dev)
wps_device_data_free	src/wps/wps_dev_attr.h	/^void wps_device_data_free(struct wps_device_data *dev);$/;"	p	signature:(struct wps_device_data *dev)
wps_device_get	src/wps/wps_registrar.c	/^static struct wps_registrar_device * wps_device_get(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *addr)
wps_device_store	src/wps/wps_i.h	/^int wps_device_store(struct wps_registrar *reg,$/;"	p	signature:(struct wps_registrar *reg, struct wps_device_data *dev, const u8 *uuid)
wps_device_store	src/wps/wps_registrar.c	/^int wps_device_store(struct wps_registrar *reg,$/;"	f	signature:(struct wps_registrar *reg, struct wps_device_data *dev, const u8 *uuid)
wps_device_xml_postfix	src/wps/wps_upnp_web.c	/^static const char *wps_device_xml_postfix =$/;"	v	file:
wps_device_xml_prefix	src/wps/wps_upnp_web.c	/^static const char *wps_device_xml_prefix =$/;"	v	file:
wps_enrollee_get_msg	src/wps/wps_enrollee.c	/^struct wpabuf * wps_enrollee_get_msg(struct wps_data *wps,$/;"	f	signature:(struct wps_data *wps, enum wsc_op_code *op_code)
wps_enrollee_get_msg	src/wps/wps_i.h	/^struct wpabuf * wps_enrollee_get_msg(struct wps_data *wps,$/;"	p	signature:(struct wps_data *wps, enum wsc_op_code *op_code)
wps_enrollee_process_msg	src/wps/wps_enrollee.c	/^enum wps_process_res wps_enrollee_process_msg(struct wps_data *wps,$/;"	f	signature:(struct wps_data *wps, enum wsc_op_code op_code, const struct wpabuf *msg)
wps_enrollee_process_msg	src/wps/wps_i.h	/^enum wps_process_res wps_enrollee_process_msg(struct wps_data *wps,$/;"	p	signature:(struct wps_data *wps, enum wsc_op_code op_code, const struct wpabuf *msg)
wps_er	src/wps/wps_er.h	/^struct wps_er {$/;"	s
wps_er::ap	src/wps/wps_er.h	/^	struct dl_list ap;$/;"	m	struct:wps_er	typeref:struct:wps_er::dl_list	access:public
wps_er::ap_settings	src/wps/wps_er.h	/^	struct dl_list ap_settings;$/;"	m	struct:wps_er	typeref:struct:wps_er::dl_list	access:public
wps_er::ap_unsubscribing	src/wps/wps_er.h	/^	struct dl_list ap_unsubscribing;$/;"	m	struct:wps_er	typeref:struct:wps_er::dl_list	access:public
wps_er::deinit_done_cb	src/wps/wps_er.h	/^	void (*deinit_done_cb)(void *ctx);$/;"	m	struct:wps_er	access:public
wps_er::deinit_done_ctx	src/wps/wps_er.h	/^	void *deinit_done_ctx;$/;"	m	struct:wps_er	access:public
wps_er::deinitializing	src/wps/wps_er.h	/^	int deinitializing;$/;"	m	struct:wps_er	access:public
wps_er::event_id	src/wps/wps_er.h	/^	unsigned int event_id;$/;"	m	struct:wps_er	access:public
wps_er::filter_addr	src/wps/wps_er.h	/^	struct in_addr filter_addr;$/;"	m	struct:wps_er	typeref:struct:wps_er::in_addr	access:public
wps_er::http_port	src/wps/wps_er.h	/^	int http_port;$/;"	m	struct:wps_er	access:public
wps_er::http_srv	src/wps/wps_er.h	/^	struct http_server *http_srv;$/;"	m	struct:wps_er	typeref:struct:wps_er::http_server	access:public
wps_er::ifname	src/wps/wps_er.h	/^	char ifname[17];$/;"	m	struct:wps_er	access:public
wps_er::ip_addr	src/wps/wps_er.h	/^	unsigned ip_addr; \/* IP address of network i.f. we use (host order) *\/$/;"	m	struct:wps_er	access:public
wps_er::ip_addr_text	src/wps/wps_er.h	/^	char *ip_addr_text; \/* IP address of network i.f. we use *\/$/;"	m	struct:wps_er	access:public
wps_er::mac_addr	src/wps/wps_er.h	/^	u8 mac_addr[ETH_ALEN]; \/* mac addr of network i.f. we use *\/$/;"	m	struct:wps_er	access:public
wps_er::multicast_sd	src/wps/wps_er.h	/^	int multicast_sd;$/;"	m	struct:wps_er	access:public
wps_er::next_ap_id	src/wps/wps_er.h	/^	unsigned int next_ap_id;$/;"	m	struct:wps_er	access:public
wps_er::set_sel_reg_uuid_filter	src/wps/wps_er.h	/^	const u8 *set_sel_reg_uuid_filter;$/;"	m	struct:wps_er	access:public
wps_er::skip_set_sel_reg	src/wps/wps_er.h	/^	int skip_set_sel_reg;$/;"	m	struct:wps_er	access:public
wps_er::ssdp_sd	src/wps/wps_er.h	/^	int ssdp_sd;$/;"	m	struct:wps_er	access:public
wps_er::wps	src/wps/wps_er.h	/^	struct wps_context *wps;$/;"	m	struct:wps_er	typeref:struct:wps_er::wps_context	access:public
wps_er_add_sta_data	src/wps/wps_er.c	/^static struct wps_er_sta * wps_er_add_sta_data(struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_er_ap *ap, const u8 *addr, struct wps_parse_attr *attr, int probe_req)
wps_er_ap	src/wps/wps_er.h	/^struct wps_er_ap {$/;"	s
wps_er_ap::addr	src/wps/wps_er.h	/^	struct in_addr addr;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::in_addr	access:public
wps_er_ap::ap_settings	src/wps/wps_er.h	/^	struct wps_credential *ap_settings;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::wps_credential	access:public
wps_er_ap::control_url	src/wps/wps_er.h	/^	char *control_url;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::er	src/wps/wps_er.h	/^	struct wps_er *er;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::wps_er	access:public
wps_er_ap::event_sub_url	src/wps/wps_er.h	/^	char *event_sub_url;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::friendly_name	src/wps/wps_er.h	/^	char *friendly_name;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::http	src/wps/wps_er.h	/^	struct http_client *http;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::http_client	access:public
wps_er_ap::id	src/wps/wps_er.h	/^	unsigned int id;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::list	src/wps/wps_er.h	/^	struct dl_list list;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::dl_list	access:public
wps_er_ap::location	src/wps/wps_er.h	/^	char *location;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::m1_handler	src/wps/wps_er.h	/^	void (*m1_handler)(struct wps_er_ap *ap, struct wpabuf *m1);$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::mac_addr	src/wps/wps_er.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::manufacturer	src/wps/wps_er.h	/^	char *manufacturer;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::manufacturer_url	src/wps/wps_er.h	/^	char *manufacturer_url;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::model_description	src/wps/wps_er.h	/^	char *model_description;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::model_name	src/wps/wps_er.h	/^	char *model_name;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::model_number	src/wps/wps_er.h	/^	char *model_number;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::model_url	src/wps/wps_er.h	/^	char *model_url;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::pri_dev_type	src/wps/wps_er.h	/^	u8 pri_dev_type[8];$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::scpd_url	src/wps/wps_er.h	/^	char *scpd_url;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::serial_number	src/wps/wps_er.h	/^	char *serial_number;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::sid	src/wps/wps_er.h	/^	u8 sid[WPS_UUID_LEN];$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::sta	src/wps/wps_er.h	/^	struct dl_list sta; \/* list of STAs\/Enrollees using this AP *\/$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::dl_list	access:public
wps_er_ap::subscribed	src/wps/wps_er.h	/^	int subscribed;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::udn	src/wps/wps_er.h	/^	char *udn;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::upc	src/wps/wps_er.h	/^	char *upc;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::uuid	src/wps/wps_er.h	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_er_ap	access:public
wps_er_ap::wps	src/wps/wps_er.h	/^	struct wps_data *wps;$/;"	m	struct:wps_er_ap	typeref:struct:wps_er_ap::wps_data	access:public
wps_er_ap::wps_state	src/wps/wps_er.h	/^	u8 wps_state;$/;"	m	struct:wps_er_ap	access:public
wps_er_ap_add	src/wps/wps_er.c	/^void wps_er_ap_add(struct wps_er *er, const u8 *uuid, struct in_addr *addr,$/;"	f	signature:(struct wps_er *er, const u8 *uuid, struct in_addr *addr, const char *location, int max_age)
wps_er_ap_add	src/wps/wps_er.h	/^void wps_er_ap_add(struct wps_er *er, const u8 *uuid, struct in_addr *addr,$/;"	p	signature:(struct wps_er *er, const u8 *uuid, struct in_addr *addr, const char *location, int max_age)
wps_er_ap_cache_settings	src/wps/wps_er.c	/^int wps_er_ap_cache_settings(struct wps_er *er, struct in_addr *addr)$/;"	f	signature:(struct wps_er *er, struct in_addr *addr)
wps_er_ap_cache_settings	src/wps/wps_er.h	/^int wps_er_ap_cache_settings(struct wps_er *er, struct in_addr *addr);$/;"	p	signature:(struct wps_er *er, struct in_addr *addr)
wps_er_ap_config_m1	src/wps/wps_er.c	/^static void wps_er_ap_config_m1(struct wps_er_ap *ap, struct wpabuf *m1)$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *m1)
wps_er_ap_event	src/wps/wps_er.c	/^static void wps_er_ap_event(struct wps_context *wps, struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_context *wps, struct wps_er_ap *ap, enum wps_event event)
wps_er_ap_free	src/wps/wps_er.c	/^static void wps_er_ap_free(struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er_ap *ap)
wps_er_ap_get	src/wps/wps_er.c	/^static struct wps_er_ap * wps_er_ap_get(struct wps_er *er,$/;"	f	file:	signature:(struct wps_er *er, struct in_addr *addr, const u8 *uuid)
wps_er_ap_get_id	src/wps/wps_er.c	/^static struct wps_er_ap * wps_er_ap_get_id(struct wps_er *er, unsigned int id)$/;"	f	file:	signature:(struct wps_er *er, unsigned int id)
wps_er_ap_get_m1	src/wps/wps_er.c	/^static void wps_er_ap_get_m1(struct wps_er_ap *ap, struct wpabuf *m1)$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *m1)
wps_er_ap_get_settings	src/wps/wps_er.c	/^static struct wps_er_ap_settings * wps_er_ap_get_settings(struct wps_er *er,$/;"	f	file:	signature:(struct wps_er *er, const u8 *uuid)
wps_er_ap_learn	src/wps/wps_er.c	/^static void wps_er_ap_learn(struct wps_er_ap *ap, const char *dev_info)$/;"	f	file:	signature:(struct wps_er_ap *ap, const char *dev_info)
wps_er_ap_learn_m1	src/wps/wps_er.c	/^static void wps_er_ap_learn_m1(struct wps_er_ap *ap, struct wpabuf *m1)$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *m1)
wps_er_ap_process	src/wps/wps_er.c	/^static void wps_er_ap_process(struct wps_er_ap *ap, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *msg)
wps_er_ap_process	src/wps/wps_er.c	/^static void wps_er_ap_process(struct wps_er_ap *ap, struct wpabuf *msg);$/;"	p	file:	signature:(struct wps_er_ap *ap, struct wpabuf *msg)
wps_er_ap_put_message	src/wps/wps_er.c	/^static void wps_er_ap_put_message(struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_er_ap *ap, const struct wpabuf *msg)
wps_er_ap_remove	src/wps/wps_er.c	/^void wps_er_ap_remove(struct wps_er *er, struct in_addr *addr)$/;"	f	signature:(struct wps_er *er, struct in_addr *addr)
wps_er_ap_remove	src/wps/wps_er.h	/^void wps_er_ap_remove(struct wps_er *er, struct in_addr *addr);$/;"	p	signature:(struct wps_er *er, struct in_addr *addr)
wps_er_ap_remove_all	src/wps/wps_er.c	/^static void wps_er_ap_remove_all(struct wps_er *er)$/;"	f	file:	signature:(struct wps_er *er)
wps_er_ap_remove_entry	src/wps/wps_er.c	/^static void wps_er_ap_remove_entry(struct wps_er *er, struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er *er, struct wps_er_ap *ap)
wps_er_ap_settings	src/wps/wps_er.h	/^struct wps_er_ap_settings {$/;"	s
wps_er_ap_settings::ap_settings	src/wps/wps_er.h	/^	struct wps_credential ap_settings;$/;"	m	struct:wps_er_ap_settings	typeref:struct:wps_er_ap_settings::wps_credential	access:public
wps_er_ap_settings::list	src/wps/wps_er.h	/^	struct dl_list list;$/;"	m	struct:wps_er_ap_settings	typeref:struct:wps_er_ap_settings::dl_list	access:public
wps_er_ap_settings::uuid	src/wps/wps_er.h	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_er_ap_settings	access:public
wps_er_ap_settings_cb	src/wps/wps_er.c	/^static void wps_er_ap_settings_cb(void *ctx, const struct wps_credential *cred)$/;"	f	file:	signature:(void *ctx, const struct wps_credential *cred)
wps_er_ap_timeout	src/wps/wps_er.c	/^static void wps_er_ap_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
wps_er_ap_timeout	src/wps/wps_er.c	/^static void wps_er_ap_timeout(void *eloop_data, void *user_ctx);$/;"	p	file:	signature:(void *eloop_data, void *user_ctx)
wps_er_ap_unsubscribe	src/wps/wps_er.c	/^static void wps_er_ap_unsubscribe(struct wps_er *er, struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er *er, struct wps_er_ap *ap)
wps_er_ap_unsubscribed	src/wps/wps_er.c	/^static void wps_er_ap_unsubscribed(struct wps_er *er, struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er *er, struct wps_er_ap *ap)
wps_er_ap_use_cached_settings	src/wps/wps_er.c	/^static int wps_er_ap_use_cached_settings(struct wps_er *er,$/;"	f	file:	signature:(struct wps_er *er, struct wps_er_ap *ap)
wps_er_build_dev_password_id	src/wps/wps_er.c	/^static int wps_er_build_dev_password_id(struct wpabuf *msg, u16 dev_passwd_id)$/;"	f	file:	signature:(struct wpabuf *msg, u16 dev_passwd_id)
wps_er_build_sel_reg_config_methods	src/wps/wps_er.c	/^static int wps_er_build_sel_reg_config_methods(struct wpabuf *msg,$/;"	f	file:	signature:(struct wpabuf *msg, u16 sel_reg_config_methods)
wps_er_build_selected_registrar	src/wps/wps_er.c	/^static int wps_er_build_selected_registrar(struct wpabuf *msg, int sel_reg)$/;"	f	file:	signature:(struct wpabuf *msg, int sel_reg)
wps_er_build_uuid_r	src/wps/wps_er.c	/^static int wps_er_build_uuid_r(struct wpabuf *msg, const u8 *uuid_r)$/;"	f	file:	signature:(struct wpabuf *msg, const u8 *uuid_r)
wps_er_config	src/wps/wps.h	/^int wps_er_config(struct wps_er *er, const u8 *uuid, const u8 *pin,$/;"	p	signature:(struct wps_er *er, const u8 *uuid, const u8 *pin, size_t pin_len, const struct wps_credential *cred)
wps_er_config	src/wps/wps_er.c	/^int wps_er_config(struct wps_er *er, const u8 *uuid, const u8 *pin,$/;"	f	signature:(struct wps_er *er, const u8 *uuid, const u8 *pin, size_t pin_len, const struct wps_credential *cred)
wps_er_deinit	src/wps/wps.h	/^void wps_er_deinit(struct wps_er *er, void (*cb)(void *ctx), void *ctx);$/;"	p	signature:(struct wps_er *er, void (*cb)(void *ctx), void *ctx)
wps_er_deinit	src/wps/wps_er.c	/^void wps_er_deinit(struct wps_er *er, void (*cb)(void *ctx), void *ctx)$/;"	f	signature:(struct wps_er *er, void (*cb)(void *ctx), void *ctx)
wps_er_deinit_finish	src/wps/wps_er.c	/^static void wps_er_deinit_finish(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
wps_er_deinit_finish	src/wps/wps_er.c	/^static void wps_er_deinit_finish(void *eloop_data, void *user_ctx);$/;"	p	file:	signature:(void *eloop_data, void *user_ctx)
wps_er_find_wfadevice	src/wps/wps_er.c	/^static const char * wps_er_find_wfadevice(const char *data)$/;"	f	file:	signature:(const char *data)
wps_er_get_device_info	src/wps/wps_er.c	/^static void wps_er_get_device_info(struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er_ap *ap)
wps_er_get_sid	src/wps/wps_er.c	/^static int wps_er_get_sid(struct wps_er_ap *ap, char *sid)$/;"	f	file:	signature:(struct wps_er_ap *ap, char *sid)
wps_er_http_dev_desc_cb	src/wps/wps_er.c	/^static void wps_er_http_dev_desc_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_http_event	src/wps/wps_er.c	/^static void wps_er_http_event(struct wps_er *er, struct http_request *req,$/;"	f	file:	signature:(struct wps_er *er, struct http_request *req, unsigned int ap_id)
wps_er_http_get_dev_info_cb	src/wps/wps_er.c	/^static void wps_er_http_get_dev_info_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_http_notify	src/wps/wps_er.c	/^static void wps_er_http_notify(struct wps_er *er, struct http_request *req)$/;"	f	file:	signature:(struct wps_er *er, struct http_request *req)
wps_er_http_put_message_cb	src/wps/wps_er.c	/^static void wps_er_http_put_message_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_http_put_wlan_response_cb	src/wps/wps_er.c	/^static void wps_er_http_put_wlan_response_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_http_req	src/wps/wps_er.c	/^static void wps_er_http_req(void *ctx, struct http_request *req)$/;"	f	file:	signature:(void *ctx, struct http_request *req)
wps_er_http_resp_not_found	src/wps/wps_er.c	/^static void wps_er_http_resp_not_found(struct http_request *req)$/;"	f	file:	signature:(struct http_request *req)
wps_er_http_resp_ok	src/wps/wps_er.c	/^static void wps_er_http_resp_ok(struct http_request *req)$/;"	f	file:	signature:(struct http_request *req)
wps_er_http_set_sel_reg_cb	src/wps/wps_er.c	/^static void wps_er_http_set_sel_reg_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_http_subscribe_cb	src/wps/wps_er.c	/^static void wps_er_http_subscribe_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_http_unsubscribe_cb	src/wps/wps_er.c	/^static void wps_er_http_unsubscribe_cb(void *ctx, struct http_client *c,$/;"	f	file:	signature:(void *ctx, struct http_client *c, enum http_client_event event)
wps_er_init	src/wps/wps.h	/^struct wps_er * wps_er_init(struct wps_context *wps, const char *ifname,$/;"	p	signature:(struct wps_context *wps, const char *ifname, const char *filter)
wps_er_init	src/wps/wps_er.c	/^wps_er_init(struct wps_context *wps, const char *ifname, const char *filter)$/;"	f	signature:(struct wps_context *wps, const char *ifname, const char *filter)
wps_er_learn	src/wps/wps.h	/^int wps_er_learn(struct wps_er *er, const u8 *uuid, const u8 *pin,$/;"	p	signature:(struct wps_er *er, const u8 *uuid, const u8 *pin, size_t pin_len)
wps_er_learn	src/wps/wps_er.c	/^int wps_er_learn(struct wps_er *er, const u8 *uuid, const u8 *pin,$/;"	f	signature:(struct wps_er *er, const u8 *uuid, const u8 *pin, size_t pin_len)
wps_er_parse_device_description	src/wps/wps_er.c	/^static void wps_er_parse_device_description(struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *reply)
wps_er_pbc	src/wps/wps.h	/^int wps_er_pbc(struct wps_er *er, const u8 *uuid);$/;"	p	signature:(struct wps_er *er, const u8 *uuid)
wps_er_pbc	src/wps/wps_er.c	/^int wps_er_pbc(struct wps_er *er, const u8 *uuid)$/;"	f	signature:(struct wps_er *er, const u8 *uuid)
wps_er_process_wlanevent	src/wps/wps_er.c	/^static void wps_er_process_wlanevent(struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *event)
wps_er_process_wlanevent_eap	src/wps/wps_er.c	/^static void wps_er_process_wlanevent_eap(struct wps_er_ap *ap, const u8 *addr,$/;"	f	file:	signature:(struct wps_er_ap *ap, const u8 *addr, struct wpabuf *msg)
wps_er_process_wlanevent_probe_req	src/wps/wps_er.c	/^static void wps_er_process_wlanevent_probe_req(struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_er_ap *ap, const u8 *addr, struct wpabuf *msg)
wps_er_refresh	src/wps/wps.h	/^void wps_er_refresh(struct wps_er *er);$/;"	p	signature:(struct wps_er *er)
wps_er_refresh	src/wps/wps_er.c	/^void wps_er_refresh(struct wps_er *er)$/;"	f	signature:(struct wps_er *er)
wps_er_send_get_device_info	src/wps/wps_er.c	/^static int wps_er_send_get_device_info(struct wps_er_ap *ap,$/;"	f	file:	signature:(struct wps_er_ap *ap, void (*m1_handler)(struct wps_er_ap *ap, struct wpabuf *m1))
wps_er_send_get_device_info	src/wps/wps_er.c	/^static int wps_er_send_get_device_info(struct wps_er_ap *ap,$/;"	p	file:	signature:(struct wps_er_ap *ap, void (*m1_handler)(struct wps_er_ap *ap, struct wpabuf *m1))
wps_er_send_set_sel_reg	src/wps/wps_er.c	/^static void wps_er_send_set_sel_reg(struct wps_er_ap *ap, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_er_ap *ap, struct wpabuf *msg)
wps_er_send_ssdp_msearch	src/wps/wps_er.h	/^void wps_er_send_ssdp_msearch(struct wps_er *er);$/;"	p	signature:(struct wps_er *er)
wps_er_send_ssdp_msearch	src/wps/wps_er_ssdp.c	/^void wps_er_send_ssdp_msearch(struct wps_er *er)$/;"	f	signature:(struct wps_er *er)
wps_er_set_config	src/wps/wps.h	/^int wps_er_set_config(struct wps_er *er, const u8 *uuid,$/;"	p	signature:(struct wps_er *er, const u8 *uuid, const struct wps_credential *cred)
wps_er_set_config	src/wps/wps_er.c	/^int wps_er_set_config(struct wps_er *er, const u8 *uuid,$/;"	f	signature:(struct wps_er *er, const u8 *uuid, const struct wps_credential *cred)
wps_er_set_sel_reg	src/wps/wps.h	/^void wps_er_set_sel_reg(struct wps_er *er, int sel_reg, u16 dev_passwd_id,$/;"	p	signature:(struct wps_er *er, int sel_reg, u16 dev_passwd_id, u16 sel_reg_config_methods)
wps_er_set_sel_reg	src/wps/wps_er.c	/^void wps_er_set_sel_reg(struct wps_er *er, int sel_reg, u16 dev_passwd_id,$/;"	f	signature:(struct wps_er *er, int sel_reg, u16 dev_passwd_id, u16 sel_reg_config_methods)
wps_er_soap_end	src/wps/wps_er.c	/^static void wps_er_soap_end(struct wpabuf *buf, const char *name,$/;"	f	file:	signature:(struct wpabuf *buf, const char *name, char *len_ptr, char *body_ptr)
wps_er_soap_hdr	src/wps/wps_er.c	/^static struct wpabuf * wps_er_soap_hdr(const struct wpabuf *msg,$/;"	f	file:	signature:(const struct wpabuf *msg, const char *name, const char *arg_name, const char *path, const struct sockaddr_in *dst, char **len_ptr, char **body_ptr)
wps_er_ssdp_deinit	src/wps/wps_er.h	/^void wps_er_ssdp_deinit(struct wps_er *er);$/;"	p	signature:(struct wps_er *er)
wps_er_ssdp_deinit	src/wps/wps_er_ssdp.c	/^void wps_er_ssdp_deinit(struct wps_er *er)$/;"	f	signature:(struct wps_er *er)
wps_er_ssdp_init	src/wps/wps_er.h	/^int wps_er_ssdp_init(struct wps_er *er);$/;"	p	signature:(struct wps_er *er)
wps_er_ssdp_init	src/wps/wps_er_ssdp.c	/^int wps_er_ssdp_init(struct wps_er *er)$/;"	f	signature:(struct wps_er *er)
wps_er_ssdp_rx	src/wps/wps_er_ssdp.c	/^static void wps_er_ssdp_rx(int sd, void *eloop_ctx, void *sock_ctx)$/;"	f	file:	signature:(int sd, void *eloop_ctx, void *sock_ctx)
wps_er_sta	src/wps/wps_er.h	/^struct wps_er_sta {$/;"	s
wps_er_sta::addr	src/wps/wps_er.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::ap	src/wps/wps_er.h	/^	struct wps_er_ap *ap;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::wps_er_ap	access:public
wps_er_sta::config_methods	src/wps/wps_er.h	/^	u16 config_methods;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::cred	src/wps/wps_er.h	/^	struct wps_credential *cred;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::wps_credential	access:public
wps_er_sta::dev_name	src/wps/wps_er.h	/^	char *dev_name;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::dev_passwd_id	src/wps/wps_er.h	/^	u16 dev_passwd_id;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::http	src/wps/wps_er.h	/^	struct http_client *http;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::http_client	access:public
wps_er_sta::list	src/wps/wps_er.h	/^	struct dl_list list;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::dl_list	access:public
wps_er_sta::m1_received	src/wps/wps_er.h	/^	int m1_received;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::manufacturer	src/wps/wps_er.h	/^	char *manufacturer;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::model_name	src/wps/wps_er.h	/^	char *model_name;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::model_number	src/wps/wps_er.h	/^	char *model_number;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::pri_dev_type	src/wps/wps_er.h	/^	u8 pri_dev_type[8];$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::serial_number	src/wps/wps_er.h	/^	char *serial_number;$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::uuid	src/wps/wps_er.h	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_er_sta	access:public
wps_er_sta::wps	src/wps/wps_er.h	/^	struct wps_data *wps;$/;"	m	struct:wps_er_sta	typeref:struct:wps_er_sta::wps_data	access:public
wps_er_sta_event	src/wps/wps_er.c	/^static void wps_er_sta_event(struct wps_context *wps, struct wps_er_sta *sta,$/;"	f	file:	signature:(struct wps_context *wps, struct wps_er_sta *sta, enum wps_event event)
wps_er_sta_free	src/wps/wps_er.c	/^static void wps_er_sta_free(struct wps_er_sta *sta)$/;"	f	file:	signature:(struct wps_er_sta *sta)
wps_er_sta_get	src/wps/wps_er.c	/^static struct wps_er_sta * wps_er_sta_get(struct wps_er_ap *ap, const u8 *addr,$/;"	f	file:	signature:(struct wps_er_ap *ap, const u8 *addr, const u8 *uuid)
wps_er_sta_process	src/wps/wps_er.c	/^static void wps_er_sta_process(struct wps_er_sta *sta, struct wpabuf *msg,$/;"	f	file:	signature:(struct wps_er_sta *sta, struct wpabuf *msg, enum wsc_op_code op_code)
wps_er_sta_remove_all	src/wps/wps_er.c	/^static void wps_er_sta_remove_all(struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er_ap *ap)
wps_er_sta_send_msg	src/wps/wps_er.c	/^static void wps_er_sta_send_msg(struct wps_er_sta *sta, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_er_sta *sta, struct wpabuf *msg)
wps_er_sta_start	src/wps/wps_er.c	/^static void wps_er_sta_start(struct wps_er_sta *sta, struct wpabuf *msg)$/;"	f	file:	signature:(struct wps_er_sta *sta, struct wpabuf *msg)
wps_er_sta_timeout	src/wps/wps_er.c	/^static void wps_er_sta_timeout(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
wps_er_sta_timeout	src/wps/wps_er.c	/^static void wps_er_sta_timeout(void *eloop_data, void *user_ctx);$/;"	p	file:	signature:(void *eloop_data, void *user_ctx)
wps_er_subscribe	src/wps/wps_er.c	/^static void wps_er_subscribe(struct wps_er_ap *ap)$/;"	f	file:	signature:(struct wps_er_ap *ap)
wps_error_indication	src/wps/wps_defs.h	/^enum wps_error_indication {$/;"	g
wps_event	src/wps/wps.h	/^enum wps_event {$/;"	g
wps_event_	src/wps/wps_upnp_event.c	/^struct wps_event_ {$/;"	s	file:
wps_event_::addr	src/wps/wps_upnp_event.c	/^	struct subscr_addr *addr;       \/* address to connect to *\/$/;"	m	struct:wps_event_	typeref:struct:wps_event_::subscr_addr	file:	access:public
wps_event_::data	src/wps/wps_upnp_event.c	/^	struct wpabuf *data;            \/* event data to send *\/$/;"	m	struct:wps_event_	typeref:struct:wps_event_::wpabuf	file:	access:public
wps_event_::http_event	src/wps/wps_upnp_event.c	/^	struct http_client *http_event;$/;"	m	struct:wps_event_	typeref:struct:wps_event_::http_client	file:	access:public
wps_event_::list	src/wps/wps_upnp_event.c	/^	struct dl_list list;$/;"	m	struct:wps_event_	typeref:struct:wps_event_::dl_list	file:	access:public
wps_event_::retry	src/wps/wps_upnp_event.c	/^	unsigned int retry;             \/* which retry *\/$/;"	m	struct:wps_event_	file:	access:public
wps_event_::s	src/wps/wps_upnp_event.c	/^	struct subscription *s;         \/* parent *\/$/;"	m	struct:wps_event_	typeref:struct:wps_event_::subscription	file:	access:public
wps_event_::subscriber_sequence	src/wps/wps_upnp_event.c	/^	unsigned subscriber_sequence;   \/* which event for this subscription*\/$/;"	m	struct:wps_event_	file:	access:public
wps_event_cb	src/ap/hostapd.h	/^	void (*wps_event_cb)(void *ctx, enum wps_event event,$/;"	m	struct:hostapd_data	access:public
wps_event_cb_ctx	src/ap/hostapd.h	/^	void *wps_event_cb_ctx;$/;"	m	struct:hostapd_data	access:public
wps_event_data	src/wps/wps.h	/^union wps_event_data {$/;"	u
wps_event_data::ap	src/wps/wps.h	/^	} ap;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::ap_settings	src/wps/wps.h	/^	} ap_settings;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_ap_settings	access:public
wps_event_data::enrollee	src/wps/wps.h	/^	} enrollee;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::fail	src/wps/wps.h	/^	} fail;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_fail	access:public
wps_event_data::m2d	src/wps/wps.h	/^	} m2d;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::pwd_auth_fail	src/wps/wps.h	/^	} pwd_auth_fail;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_pwd_auth_fail	access:public
wps_event_data::set_sel_reg	src/wps/wps.h	/^	} set_sel_reg;$/;"	m	union:wps_event_data	typeref:struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
wps_event_data::wps_event_er_ap	src/wps/wps.h	/^	struct wps_event_er_ap {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_er_ap::friendly_name	src/wps/wps.h	/^		const char *friendly_name;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::mac_addr	src/wps/wps.h	/^		const u8 *mac_addr;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::manufacturer	src/wps/wps.h	/^		const char *manufacturer;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::manufacturer_url	src/wps/wps.h	/^		const char *manufacturer_url;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::model_description	src/wps/wps.h	/^		const char *model_description;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::model_name	src/wps/wps.h	/^		const char *model_name;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::model_number	src/wps/wps.h	/^		const char *model_number;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::model_url	src/wps/wps.h	/^		const char *model_url;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::pri_dev_type	src/wps/wps.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::serial_number	src/wps/wps.h	/^		const char *serial_number;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::upc	src/wps/wps.h	/^		const char *upc;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap::wps_state	src/wps/wps.h	/^		u8 wps_state;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_event_data::wps_event_er_ap_settings	src/wps/wps.h	/^	struct wps_event_er_ap_settings {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_er_ap_settings::cred	src/wps/wps.h	/^		const struct wps_credential *cred;$/;"	m	struct:wps_event_data::wps_event_er_ap_settings	typeref:struct:wps_event_data::wps_event_er_ap_settings::wps_credential	access:public
wps_event_data::wps_event_er_ap_settings::uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_ap_settings	access:public
wps_event_data::wps_event_er_enrollee	src/wps/wps.h	/^	struct wps_event_er_enrollee {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_er_enrollee::config_methods	src/wps/wps.h	/^		u16 config_methods;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::dev_name	src/wps/wps.h	/^		const char *dev_name;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::dev_passwd_id	src/wps/wps.h	/^		u16 dev_passwd_id;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::m1_received	src/wps/wps.h	/^		int m1_received;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::mac_addr	src/wps/wps.h	/^		const u8 *mac_addr;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::manufacturer	src/wps/wps.h	/^		const char *manufacturer;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::model_name	src/wps/wps.h	/^		const char *model_name;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::model_number	src/wps/wps.h	/^		const char *model_number;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::pri_dev_type	src/wps/wps.h	/^		const u8 *pri_dev_type;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::serial_number	src/wps/wps.h	/^		const char *serial_number;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_enrollee::uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_enrollee	access:public
wps_event_data::wps_event_er_set_selected_registrar	src/wps/wps.h	/^	struct wps_event_er_set_selected_registrar {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_er_set_selected_registrar::WPS_ER_SET_SEL_REG_DONE	src/wps/wps.h	/^			WPS_ER_SET_SEL_REG_DONE,$/;"	e	enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31
wps_event_data::wps_event_er_set_selected_registrar::WPS_ER_SET_SEL_REG_FAILED	src/wps/wps.h	/^			WPS_ER_SET_SEL_REG_FAILED$/;"	e	enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31
wps_event_data::wps_event_er_set_selected_registrar::WPS_ER_SET_SEL_REG_START	src/wps/wps.h	/^			WPS_ER_SET_SEL_REG_START,$/;"	e	enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31
wps_event_data::wps_event_er_set_selected_registrar::dev_passwd_id	src/wps/wps.h	/^		u16 dev_passwd_id;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
wps_event_data::wps_event_er_set_selected_registrar::sel_reg	src/wps/wps.h	/^		int sel_reg;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
wps_event_data::wps_event_er_set_selected_registrar::sel_reg_config_methods	src/wps/wps.h	/^		u16 sel_reg_config_methods;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
wps_event_data::wps_event_er_set_selected_registrar::state	src/wps/wps.h	/^		} state;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	typeref:enum:wps_event_data::wps_event_er_set_selected_registrar::__anon31	access:public
wps_event_data::wps_event_er_set_selected_registrar::uuid	src/wps/wps.h	/^		const u8 *uuid;$/;"	m	struct:wps_event_data::wps_event_er_set_selected_registrar	access:public
wps_event_data::wps_event_fail	src/wps/wps.h	/^	struct wps_event_fail {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_fail::config_error	src/wps/wps.h	/^		u16 config_error;$/;"	m	struct:wps_event_data::wps_event_fail	access:public
wps_event_data::wps_event_fail::error_indication	src/wps/wps.h	/^		u16 error_indication;$/;"	m	struct:wps_event_data::wps_event_fail	access:public
wps_event_data::wps_event_fail::msg	src/wps/wps.h	/^		int msg;$/;"	m	struct:wps_event_data::wps_event_fail	access:public
wps_event_data::wps_event_m2d	src/wps/wps.h	/^	struct wps_event_m2d {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_m2d::config_error	src/wps/wps.h	/^		u16 config_error;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::config_methods	src/wps/wps.h	/^		u16 config_methods;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::dev_name	src/wps/wps.h	/^		const u8 *dev_name;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::dev_name_len	src/wps/wps.h	/^		size_t dev_name_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::dev_password_id	src/wps/wps.h	/^		u16 dev_password_id;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::manufacturer	src/wps/wps.h	/^		const u8 *manufacturer;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::manufacturer_len	src/wps/wps.h	/^		size_t manufacturer_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::model_name	src/wps/wps.h	/^		const u8 *model_name;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::model_name_len	src/wps/wps.h	/^		size_t model_name_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::model_number	src/wps/wps.h	/^		const u8 *model_number;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::model_number_len	src/wps/wps.h	/^		size_t model_number_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::primary_dev_type	src/wps/wps.h	/^		const u8 *primary_dev_type; \/* 8 octets *\/$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::serial_number	src/wps/wps.h	/^		const u8 *serial_number;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_m2d::serial_number_len	src/wps/wps.h	/^		size_t serial_number_len;$/;"	m	struct:wps_event_data::wps_event_m2d	access:public
wps_event_data::wps_event_pwd_auth_fail	src/wps/wps.h	/^	struct wps_event_pwd_auth_fail {$/;"	s	union:wps_event_data	access:public
wps_event_data::wps_event_pwd_auth_fail::enrollee	src/wps/wps.h	/^		int enrollee;$/;"	m	struct:wps_event_data::wps_event_pwd_auth_fail	access:public
wps_event_data::wps_event_pwd_auth_fail::part	src/wps/wps.h	/^		int part;$/;"	m	struct:wps_event_data::wps_event_pwd_auth_fail	access:public
wps_event_er_ap	src/wps/wps.h	/^	struct wps_event_er_ap {$/;"	s	union:wps_event_data	access:public
wps_event_er_ap_settings	src/wps/wps.h	/^	struct wps_event_er_ap_settings {$/;"	s	union:wps_event_data	access:public
wps_event_er_enrollee	src/wps/wps.h	/^	struct wps_event_er_enrollee {$/;"	s	union:wps_event_data	access:public
wps_event_er_set_selected_registrar	src/wps/wps.h	/^	struct wps_event_er_set_selected_registrar {$/;"	s	union:wps_event_data	access:public
wps_event_fail	src/wps/wps.h	/^	struct wps_event_fail {$/;"	s	union:wps_event_data	access:public
wps_event_fail_reason	src/ap/wps_hostapd.c	/^static const char * wps_event_fail_reason[NUM_WPS_EI_VALUES] = {$/;"	v	file:
wps_event_m2d	src/wps/wps.h	/^	struct wps_event_m2d {$/;"	s	union:wps_event_data	access:public
wps_event_pwd_auth_fail	src/wps/wps.h	/^	struct wps_event_pwd_auth_fail {$/;"	s	union:wps_event_data	access:public
wps_fail_event	src/wps/wps_common.c	/^void wps_fail_event(struct wps_context *wps, enum wps_msg_type msg,$/;"	f	signature:(struct wps_context *wps, enum wps_msg_type msg, u16 config_error, u16 error_indication)
wps_fail_event	src/wps/wps_i.h	/^void wps_fail_event(struct wps_context *wps, enum wps_msg_type msg,$/;"	p	signature:(struct wps_context *wps, enum wps_msg_type msg, u16 config_error, u16 error_indication)
wps_for_each	src/ap/wps_hostapd.c	/^static int wps_for_each(struct hostapd_iface *iface, void *ctx)$/;"	f	file:	signature:(struct hostapd_iface *iface, void *ctx)
wps_for_each_data	src/ap/wps_hostapd.c	/^struct wps_for_each_data {$/;"	s	file:
wps_for_each_data::ctx	src/ap/wps_hostapd.c	/^	void *ctx;$/;"	m	struct:wps_for_each_data	file:	access:public
wps_for_each_data::func	src/ap/wps_hostapd.c	/^	int (*func)(struct hostapd_data *h, void *ctx);$/;"	m	struct:wps_for_each_data	file:	access:public
wps_free_devices	src/wps/wps_registrar.c	/^static void wps_free_devices(struct wps_registrar_device *dev)$/;"	f	file:	signature:(struct wps_registrar_device *dev)
wps_free_pbc_sessions	src/wps/wps_registrar.c	/^static void wps_free_pbc_sessions(struct wps_pbc_session *pbc)$/;"	f	file:	signature:(struct wps_pbc_session *pbc)
wps_free_pending_msgs	src/wps/wps.c	/^void wps_free_pending_msgs(struct upnp_pending_message *msgs)$/;"	f	signature:(struct upnp_pending_message *msgs)
wps_free_pending_msgs	src/wps/wps.h	/^void wps_free_pending_msgs(struct upnp_pending_message *msgs);$/;"	p	signature:(struct upnp_pending_message *msgs)
wps_free_pin	src/wps/wps_registrar.c	/^static void wps_free_pin(struct wps_uuid_pin *pin)$/;"	f	file:	signature:(struct wps_uuid_pin *pin)
wps_free_pins	src/wps/wps_registrar.c	/^static void wps_free_pins(struct dl_list *pins)$/;"	f	file:	signature:(struct dl_list *pins)
wps_generate_pin	src/wps/wps.h	/^unsigned int wps_generate_pin(void);$/;"	p	signature:(void)
wps_generate_pin	src/wps/wps_common.c	/^unsigned int wps_generate_pin(void)$/;"	f	signature:(void)
wps_get_dev_password	src/wps/wps_registrar.c	/^static int wps_get_dev_password(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_get_dev_pwd_e_file_name	src/wps/wps_ufd.c	/^static int wps_get_dev_pwd_e_file_name(char *path, char *file_name)$/;"	f	file:	signature:(char *path, char *file_name)
wps_get_msg	src/wps/wps.c	/^struct wpabuf * wps_get_msg(struct wps_data *wps, enum wsc_op_code *op_code)$/;"	f	signature:(struct wps_data *wps, enum wsc_op_code *op_code)
wps_get_msg	src/wps/wps.h	/^struct wpabuf * wps_get_msg(struct wps_data *wps, enum wsc_op_code *op_code);$/;"	p	signature:(struct wps_data *wps, enum wsc_op_code *op_code)
wps_get_oob_cred	src/wps/wps_common.c	/^static struct wpabuf * wps_get_oob_cred(struct wps_context *wps)$/;"	f	file:	signature:(struct wps_context *wps)
wps_get_oob_dev_pwd	src/wps/wps_common.c	/^static struct wpabuf * wps_get_oob_dev_pwd(struct wps_context *wps)$/;"	f	file:	signature:(struct wps_context *wps)
wps_get_oob_device	src/wps/wps.h	/^struct oob_device_data * wps_get_oob_device(char *device_type);$/;"	p	signature:(char *device_type)
wps_get_oob_device	src/wps/wps_common.c	/^struct oob_device_data * wps_get_oob_device(char *device_type)$/;"	f	signature:(char *device_type)
wps_get_oob_method	src/wps/wps.h	/^int wps_get_oob_method(char *method);$/;"	p	signature:(char *method)
wps_get_oob_method	src/wps/wps_common.c	/^int wps_get_oob_method(char *method)$/;"	f	signature:(char *method)
wps_get_oob_nfc_device	src/wps/wps.h	/^struct oob_nfc_device_data * wps_get_oob_nfc_device(char *device_name);$/;"	p	signature:(char *device_name)
wps_get_oob_nfc_device	src/wps/wps_common.c	/^struct oob_nfc_device_data * wps_get_oob_nfc_device(char *device_name)$/;"	f	signature:(char *device_name)
wps_get_uuid_e	src/wps/wps.c	/^const u8 * wps_get_uuid_e(const struct wpabuf *msg)$/;"	f	signature:(const struct wpabuf *msg)
wps_get_uuid_e	src/wps/wps.h	/^const u8 * wps_get_uuid_e(const struct wpabuf *msg);$/;"	p	signature:(const struct wpabuf *msg)
wps_ie	src/ap/sta_info.h	/^	struct wpabuf *wps_ie; \/* WPS IE from (Re)Association Request *\/$/;"	m	struct:sta_info	typeref:struct:sta_info::wpabuf	access:public
wps_ie	src/common/ieee802_11_common.h	/^	const u8 *wps_ie;$/;"	m	struct:ieee802_11_elems	access:public
wps_ie	src/drivers/driver_hostap.c	/^	u8 *wps_ie;$/;"	m	struct:hostap_driver_data	file:	access:public
wps_ie_encapsulate	src/wps/wps_attr_build.c	/^struct wpabuf * wps_ie_encapsulate(struct wpabuf *data)$/;"	f	signature:(struct wpabuf *data)
wps_ie_encapsulate	src/wps/wps_i.h	/^struct wpabuf * wps_ie_encapsulate(struct wpabuf *data);$/;"	p	signature:(struct wpabuf *data)
wps_ie_len	src/common/ieee802_11_common.h	/^	u8 wps_ie_len;$/;"	m	struct:ieee802_11_elems	access:public
wps_ie_len	src/drivers/driver_hostap.c	/^	size_t wps_ie_len;$/;"	m	struct:hostap_driver_data	file:	access:public
wps_init	src/wps/wps.c	/^struct wps_data * wps_init(const struct wps_config *cfg)$/;"	f	signature:(const struct wps_config *cfg)
wps_init	src/wps/wps.h	/^struct wps_data * wps_init(const struct wps_config *cfg);$/;"	p	signature:(const struct wps_config *cfg)
wps_is_20	src/wps/wps.c	/^int wps_is_20(const struct wpabuf *msg)$/;"	f	signature:(const struct wpabuf *msg)
wps_is_20	src/wps/wps.h	/^int wps_is_20(const struct wpabuf *msg);$/;"	p	signature:(const struct wpabuf *msg)
wps_is_addr_authorized	src/wps/wps.c	/^int wps_is_addr_authorized(const struct wpabuf *msg, const u8 *addr,$/;"	f	signature:(const struct wpabuf *msg, const u8 *addr, int ver1_compat)
wps_is_addr_authorized	src/wps/wps.h	/^int wps_is_addr_authorized(const struct wpabuf *msg, const u8 *addr,$/;"	p	signature:(const struct wpabuf *msg, const u8 *addr, int ver1_compat)
wps_is_selected_pbc_registrar	src/wps/wps.c	/^int wps_is_selected_pbc_registrar(const struct wpabuf *msg)$/;"	f	signature:(const struct wpabuf *msg)
wps_is_selected_pbc_registrar	src/wps/wps.h	/^int wps_is_selected_pbc_registrar(const struct wpabuf *msg);$/;"	p	signature:(const struct wpabuf *msg)
wps_is_selected_pin_registrar	src/wps/wps.c	/^int wps_is_selected_pin_registrar(const struct wpabuf *msg)$/;"	f	signature:(const struct wpabuf *msg)
wps_is_selected_pin_registrar	src/wps/wps.h	/^int wps_is_selected_pin_registrar(const struct wpabuf *msg);$/;"	p	signature:(const struct wpabuf *msg)
wps_kdf	src/wps/wps_common.c	/^void wps_kdf(const u8 *key, const u8 *label_prefix, size_t label_prefix_len,$/;"	f	signature:(const u8 *key, const u8 *label_prefix, size_t label_prefix_len, const char *label, u8 *res, size_t res_len)
wps_kdf	src/wps/wps_i.h	/^void wps_kdf(const u8 *key, const u8 *label_prefix, size_t label_prefix_len,$/;"	p	signature:(const u8 *key, const u8 *label_prefix, size_t label_prefix_len, const char *label, u8 *res, size_t res_len)
wps_method	src/p2p/p2p.h	/^	enum p2p_wps_method wps_method;$/;"	m	struct:p2p_go_neg_results	typeref:enum:p2p_go_neg_results::p2p_wps_method	access:public
wps_method	src/p2p/p2p_i.h	/^	enum p2p_wps_method wps_method;$/;"	m	struct:p2p_device	typeref:enum:p2p_device::p2p_wps_method	access:public
wps_mode	src/drivers/driver.h	/^enum wps_mode {$/;"	g
wps_msg_type	src/wps/wps_defs.h	/^enum wps_msg_type {$/;"	g
wps_nfc_data	src/wps/wps_nfc.c	/^struct wps_nfc_data {$/;"	s	file:
wps_nfc_data::oob_nfc_dev	src/wps/wps_nfc.c	/^	struct oob_nfc_device_data *oob_nfc_dev;$/;"	m	struct:wps_nfc_data	typeref:struct:wps_nfc_data::oob_nfc_device_data	file:	access:public
wps_parse_attr	src/wps/wps_i.h	/^struct wps_parse_attr {$/;"	s
wps_parse_attr::ap_setup_locked	src/wps/wps_i.h	/^	const u8 *ap_setup_locked; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::assoc_state	src/wps/wps_i.h	/^	const u8 *assoc_state; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::auth_type	src/wps/wps_i.h	/^	const u8 *auth_type; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::auth_type_flags	src/wps/wps_i.h	/^	const u8 *auth_type_flags; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::authenticator	src/wps/wps_i.h	/^	const u8 *authenticator; \/* WPS_AUTHENTICATOR_LEN (8) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::authorized_macs	src/wps/wps_i.h	/^	const u8 *authorized_macs; \/* <= 30 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::authorized_macs_len	src/wps/wps_i.h	/^	size_t authorized_macs_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::config_error	src/wps/wps_i.h	/^	const u8 *config_error; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::config_methods	src/wps/wps_i.h	/^	const u8 *config_methods; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::conn_type_flags	src/wps/wps_i.h	/^	const u8 *conn_type_flags; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::cred	src/wps/wps_i.h	/^	const u8 *cred[MAX_CRED_COUNT];$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::cred_len	src/wps/wps_i.h	/^	size_t cred_len[MAX_CRED_COUNT];$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::dev_name	src/wps/wps_i.h	/^	const u8 *dev_name;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::dev_name_len	src/wps/wps_i.h	/^	size_t dev_name_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::dev_password_id	src/wps/wps_i.h	/^	const u8 *dev_password_id; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::dot1x_enabled	src/wps/wps_i.h	/^	const u8 *dot1x_enabled; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::e_hash1	src/wps/wps_i.h	/^	const u8 *e_hash1; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::e_hash2	src/wps/wps_i.h	/^	const u8 *e_hash2; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::e_snonce1	src/wps/wps_i.h	/^	const u8 *e_snonce1; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::e_snonce2	src/wps/wps_i.h	/^	const u8 *e_snonce2; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::eap_identity	src/wps/wps_i.h	/^	const u8 *eap_identity; \/* <= 64 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::eap_identity_len	src/wps/wps_i.h	/^	size_t eap_identity_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::eap_type	src/wps/wps_i.h	/^	const u8 *eap_type; \/* <= 8 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::eap_type_len	src/wps/wps_i.h	/^	size_t eap_type_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::encr_settings	src/wps/wps_i.h	/^	const u8 *encr_settings;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::encr_settings_len	src/wps/wps_i.h	/^	size_t encr_settings_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::encr_type	src/wps/wps_i.h	/^	const u8 *encr_type; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::encr_type_flags	src/wps/wps_i.h	/^	const u8 *encr_type_flags; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::enrollee_nonce	src/wps/wps_i.h	/^	const u8 *enrollee_nonce; \/* WPS_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::key_prov_auto	src/wps/wps_i.h	/^	const u8 *key_prov_auto; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::key_wrap_auth	src/wps/wps_i.h	/^	const u8 *key_wrap_auth; \/* WPS_KWA_LEN (8) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::mac_addr	src/wps/wps_i.h	/^	const u8 *mac_addr; \/* ETH_ALEN (6) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::manufacturer	src/wps/wps_i.h	/^	const u8 *manufacturer;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::manufacturer_len	src/wps/wps_i.h	/^	size_t manufacturer_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::model_name	src/wps/wps_i.h	/^	const u8 *model_name;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::model_name_len	src/wps/wps_i.h	/^	size_t model_name_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::model_number	src/wps/wps_i.h	/^	const u8 *model_number;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::model_number_len	src/wps/wps_i.h	/^	size_t model_number_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::msg_type	src/wps/wps_i.h	/^	const u8 *msg_type; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::network_idx	src/wps/wps_i.h	/^	const u8 *network_idx; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::network_key	src/wps/wps_i.h	/^	const u8 *network_key; \/* <= 64 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::network_key_idx	src/wps/wps_i.h	/^	const u8 *network_key_idx; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::network_key_len	src/wps/wps_i.h	/^	size_t network_key_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::network_key_shareable	src/wps/wps_i.h	/^	const u8 *network_key_shareable; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::num_cred	src/wps/wps_i.h	/^	size_t num_cred;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::num_req_dev_type	src/wps/wps_i.h	/^	size_t num_req_dev_type;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::num_vendor_ext	src/wps/wps_i.h	/^	size_t num_vendor_ext;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::oob_dev_password	src/wps/wps_i.h	/^	const u8 *oob_dev_password; \/* WPS_OOB_DEVICE_PASSWORD_ATTR_LEN (54)$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::os_version	src/wps/wps_i.h	/^	const u8 *os_version; \/* 4 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::primary_dev_type	src/wps/wps_i.h	/^	const u8 *primary_dev_type; \/* 8 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::public_key	src/wps/wps_i.h	/^	const u8 *public_key;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::public_key_len	src/wps/wps_i.h	/^	size_t public_key_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::r_hash1	src/wps/wps_i.h	/^	const u8 *r_hash1; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::r_hash2	src/wps/wps_i.h	/^	const u8 *r_hash2; \/* WPS_HASH_LEN (32) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::r_snonce1	src/wps/wps_i.h	/^	const u8 *r_snonce1; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::r_snonce2	src/wps/wps_i.h	/^	const u8 *r_snonce2; \/* WPS_SECRET_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::registrar_nonce	src/wps/wps_i.h	/^	const u8 *registrar_nonce; \/* WPS_NONCE_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::req_dev_type	src/wps/wps_i.h	/^	const u8 *req_dev_type[MAX_REQ_DEV_TYPE_COUNT];$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::request_to_enroll	src/wps/wps_i.h	/^	const u8 *request_to_enroll; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::request_type	src/wps/wps_i.h	/^	const u8 *request_type; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::response_type	src/wps/wps_i.h	/^	const u8 *response_type; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::rf_bands	src/wps/wps_i.h	/^	const u8 *rf_bands; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::sec_dev_type_list	src/wps/wps_i.h	/^	const u8 *sec_dev_type_list; \/* <= 128 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::sec_dev_type_list_len	src/wps/wps_i.h	/^	size_t sec_dev_type_list_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::sel_reg_config_methods	src/wps/wps_i.h	/^	const u8 *sel_reg_config_methods; \/* 2 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::selected_registrar	src/wps/wps_i.h	/^	const u8 *selected_registrar; \/* 1 octet (Bool) *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::serial_number	src/wps/wps_i.h	/^	const u8 *serial_number;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::serial_number_len	src/wps/wps_i.h	/^	size_t serial_number_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::settings_delay_time	src/wps/wps_i.h	/^	const u8 *settings_delay_time; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::ssid	src/wps/wps_i.h	/^	const u8 *ssid; \/* <= 32 octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::ssid_len	src/wps/wps_i.h	/^	size_t ssid_len;$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::uuid_e	src/wps/wps_i.h	/^	const u8 *uuid_e; \/* WPS_UUID_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::uuid_r	src/wps/wps_i.h	/^	const u8 *uuid_r; \/* WPS_UUID_LEN (16) octets *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::vendor_ext	src/wps/wps_i.h	/^	const u8 *vendor_ext[MAX_WPS_PARSE_VENDOR_EXT];$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::vendor_ext_len	src/wps/wps_i.h	/^	size_t vendor_ext_len[MAX_WPS_PARSE_VENDOR_EXT];$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::version	src/wps/wps_i.h	/^	const u8 *version; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::version2	src/wps/wps_i.h	/^	const u8 *version2; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_attr::wps_state	src/wps/wps_i.h	/^	const u8 *wps_state; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_parse_msg	src/wps/wps_attr_parse.c	/^int wps_parse_msg(const struct wpabuf *msg, struct wps_parse_attr *attr)$/;"	f	signature:(const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_parse_msg	src/wps/wps_i.h	/^int wps_parse_msg(const struct wpabuf *msg, struct wps_parse_attr *attr);$/;"	p	signature:(const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_parse_oob_cred	src/wps/wps_common.c	/^static int wps_parse_oob_cred(struct wps_context *wps, struct wpabuf *data)$/;"	f	file:	signature:(struct wps_context *wps, struct wpabuf *data)
wps_parse_oob_dev_pwd	src/wps/wps_common.c	/^static int wps_parse_oob_dev_pwd(struct wps_context *wps,$/;"	f	file:	signature:(struct wps_context *wps, struct wpabuf *data)
wps_parse_vendor_ext	src/wps/wps_attr_parse.c	/^static int wps_parse_vendor_ext(struct wps_parse_attr *attr, const u8 *pos,$/;"	f	file:	signature:(struct wps_parse_attr *attr, const u8 *pos, u16 len)
wps_parse_vendor_ext_wfa	src/wps/wps_attr_parse.c	/^static int wps_parse_vendor_ext_wfa(struct wps_parse_attr *attr, const u8 *pos,$/;"	f	file:	signature:(struct wps_parse_attr *attr, const u8 *pos, u16 len)
wps_pbc_overlap_event	src/wps/wps_common.c	/^void wps_pbc_overlap_event(struct wps_context *wps)$/;"	f	signature:(struct wps_context *wps)
wps_pbc_overlap_event	src/wps/wps_i.h	/^void wps_pbc_overlap_event(struct wps_context *wps);$/;"	p	signature:(struct wps_context *wps)
wps_pbc_session	src/wps/wps_registrar.c	/^struct wps_pbc_session {$/;"	s	file:
wps_pbc_session::addr	src/wps/wps_registrar.c	/^	u8 addr[ETH_ALEN];$/;"	m	struct:wps_pbc_session	file:	access:public
wps_pbc_session::next	src/wps/wps_registrar.c	/^	struct wps_pbc_session *next;$/;"	m	struct:wps_pbc_session	typeref:struct:wps_pbc_session::wps_pbc_session	file:	access:public
wps_pbc_session::timestamp	src/wps/wps_registrar.c	/^	struct os_time timestamp;$/;"	m	struct:wps_pbc_session	typeref:struct:wps_pbc_session::os_time	file:	access:public
wps_pbc_session::uuid_e	src/wps/wps_registrar.c	/^	u8 uuid_e[WPS_UUID_LEN];$/;"	m	struct:wps_pbc_session	file:	access:public
wps_pbc_timeout_event	src/wps/wps_common.c	/^void wps_pbc_timeout_event(struct wps_context *wps)$/;"	f	signature:(struct wps_context *wps)
wps_pbc_timeout_event	src/wps/wps_i.h	/^void wps_pbc_timeout_event(struct wps_context *wps);$/;"	p	signature:(struct wps_context *wps)
wps_pin_checksum	src/wps/wps.h	/^unsigned int wps_pin_checksum(unsigned int pin);$/;"	p	signature:(unsigned int pin)
wps_pin_checksum	src/wps/wps_common.c	/^unsigned int wps_pin_checksum(unsigned int pin)$/;"	f	signature:(unsigned int pin)
wps_pin_requests	src/ap/ap_config.h	/^	char *wps_pin_requests;$/;"	m	struct:hostapd_bss_config	access:public
wps_pin_revealed	src/wps/wps_i.h	/^	int wps_pin_revealed;$/;"	m	struct:wps_data	access:public
wps_pin_valid	src/wps/wps.h	/^unsigned int wps_pin_valid(unsigned int pin);$/;"	p	signature:(unsigned int pin)
wps_pin_valid	src/wps/wps_common.c	/^unsigned int wps_pin_valid(unsigned int pin)$/;"	f	signature:(unsigned int pin)
wps_pri_dev_type	src/p2p/p2p_i.h	/^	const u8 *wps_pri_dev_type;$/;"	m	struct:p2p_message	access:public
wps_probe_resp_ie	src/ap/hostapd.h	/^	struct wpabuf *wps_probe_resp_ie;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::wpabuf	access:public
wps_probe_resp_ie	src/drivers/driver_atheros.c	/^	struct wpabuf *wps_probe_resp_ie;$/;"	m	struct:atheros_driver_data	typeref:struct:atheros_driver_data::wpabuf	file:	access:public
wps_probe_resp_ie	src/drivers/driver_test.c	/^	u8 *wps_probe_resp_ie;$/;"	m	struct:test_driver_bss	file:	access:public
wps_probe_resp_ie_len	src/drivers/driver_test.c	/^	size_t wps_probe_resp_ie_len;$/;"	m	struct:test_driver_bss	file:	access:public
wps_process_ap_settings	src/wps/wps_attr_process.c	/^int wps_process_ap_settings(struct wps_parse_attr *attr,$/;"	f	signature:(struct wps_parse_attr *attr, struct wps_credential *cred)
wps_process_ap_settings	src/wps/wps_i.h	/^int wps_process_ap_settings(struct wps_parse_attr *attr,$/;"	p	signature:(struct wps_parse_attr *attr, struct wps_credential *cred)
wps_process_ap_settings_e	src/wps/wps_enrollee.c	/^static int wps_process_ap_settings_e(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, struct wps_parse_attr *attr, struct wpabuf *attrs, int wps2)
wps_process_ap_settings_r	src/wps/wps_registrar.c	/^static int wps_process_ap_settings_r(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, struct wps_parse_attr *attr)
wps_process_assoc_state	src/wps/wps_registrar.c	/^static int wps_process_assoc_state(struct wps_data *wps, const u8 *assoc)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *assoc)
wps_process_auth_type_flags	src/wps/wps_registrar.c	/^static int wps_process_auth_type_flags(struct wps_data *wps, const u8 *auth)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *auth)
wps_process_authenticator	src/wps/wps_attr_process.c	/^int wps_process_authenticator(struct wps_data *wps, const u8 *authenticator,$/;"	f	signature:(struct wps_data *wps, const u8 *authenticator, const struct wpabuf *msg)
wps_process_authenticator	src/wps/wps_i.h	/^int wps_process_authenticator(struct wps_data *wps, const u8 *authenticator,$/;"	p	signature:(struct wps_data *wps, const u8 *authenticator, const struct wpabuf *msg)
wps_process_config_error	src/wps/wps_registrar.c	/^static int wps_process_config_error(struct wps_data *wps, const u8 *err)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *err)
wps_process_config_methods	src/wps/wps_registrar.c	/^static int wps_process_config_methods(struct wps_data *wps, const u8 *methods)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *methods)
wps_process_conn_type_flags	src/wps/wps_registrar.c	/^static int wps_process_conn_type_flags(struct wps_data *wps, const u8 *conn)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *conn)
wps_process_cred	src/wps/wps_attr_process.c	/^int wps_process_cred(struct wps_parse_attr *attr,$/;"	f	signature:(struct wps_parse_attr *attr, struct wps_credential *cred)
wps_process_cred	src/wps/wps_i.h	/^int wps_process_cred(struct wps_parse_attr *attr,$/;"	p	signature:(struct wps_parse_attr *attr, struct wps_credential *cred)
wps_process_cred_802_1x_enabled	src/wps/wps_attr_process.c	/^static int wps_process_cred_802_1x_enabled(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *dot1x_enabled)
wps_process_cred_auth_type	src/wps/wps_attr_process.c	/^static int wps_process_cred_auth_type(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *auth_type)
wps_process_cred_e	src/wps/wps_enrollee.c	/^static int wps_process_cred_e(struct wps_data *wps, const u8 *cred,$/;"	f	file:	signature:(struct wps_data *wps, const u8 *cred, size_t cred_len, int wps2)
wps_process_cred_eap_identity	src/wps/wps_attr_process.c	/^static int wps_process_cred_eap_identity(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *identity, size_t identity_len)
wps_process_cred_eap_type	src/wps/wps_attr_process.c	/^static int wps_process_cred_eap_type(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *eap_type, size_t eap_type_len)
wps_process_cred_encr_type	src/wps/wps_attr_process.c	/^static int wps_process_cred_encr_type(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *encr_type)
wps_process_cred_key_prov_auto	src/wps/wps_attr_process.c	/^static int wps_process_cred_key_prov_auto(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *key_prov_auto)
wps_process_cred_mac_addr	src/wps/wps_attr_process.c	/^static int wps_process_cred_mac_addr(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *mac_addr)
wps_process_cred_network_idx	src/wps/wps_attr_process.c	/^static int wps_process_cred_network_idx(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *idx)
wps_process_cred_network_key	src/wps/wps_attr_process.c	/^static int wps_process_cred_network_key(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *key, size_t key_len)
wps_process_cred_network_key_idx	src/wps/wps_attr_process.c	/^static int wps_process_cred_network_key_idx(struct wps_credential *cred,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *key_idx)
wps_process_cred_ssid	src/wps/wps_attr_process.c	/^static int wps_process_cred_ssid(struct wps_credential *cred, const u8 *ssid,$/;"	f	file:	signature:(struct wps_credential *cred, const u8 *ssid, size_t ssid_len)
wps_process_creds	src/wps/wps_enrollee.c	/^static int wps_process_creds(struct wps_data *wps, const u8 *cred[],$/;"	f	file:	signature:(struct wps_data *wps, const u8 *cred[], size_t cred_len[], size_t num_cred, int wps2)
wps_process_dev_name	src/wps/wps_dev_attr.c	/^static int wps_process_dev_name(struct wps_device_data *dev, const u8 *str,$/;"	f	file:	signature:(struct wps_device_data *dev, const u8 *str, size_t str_len)
wps_process_dev_password_id	src/wps/wps_registrar.c	/^static int wps_process_dev_password_id(struct wps_data *wps, const u8 *pw_id)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *pw_id)
wps_process_device_attrs	src/wps/wps_dev_attr.c	/^int wps_process_device_attrs(struct wps_device_data *dev,$/;"	f	signature:(struct wps_device_data *dev, struct wps_parse_attr *attr)
wps_process_device_attrs	src/wps/wps_dev_attr.h	/^int wps_process_device_attrs(struct wps_device_data *dev,$/;"	p	signature:(struct wps_device_data *dev, struct wps_parse_attr *attr)
wps_process_e_hash1	src/wps/wps_registrar.c	/^static int wps_process_e_hash1(struct wps_data *wps, const u8 *e_hash1)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *e_hash1)
wps_process_e_hash2	src/wps/wps_registrar.c	/^static int wps_process_e_hash2(struct wps_data *wps, const u8 *e_hash2)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *e_hash2)
wps_process_e_snonce1	src/wps/wps_registrar.c	/^static int wps_process_e_snonce1(struct wps_data *wps, const u8 *e_snonce1)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *e_snonce1)
wps_process_e_snonce2	src/wps/wps_registrar.c	/^static int wps_process_e_snonce2(struct wps_data *wps, const u8 *e_snonce2)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *e_snonce2)
wps_process_encr_type_flags	src/wps/wps_registrar.c	/^static int wps_process_encr_type_flags(struct wps_data *wps, const u8 *encr)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *encr)
wps_process_enrollee_nonce	src/wps/wps_enrollee.c	/^static int wps_process_enrollee_nonce(struct wps_data *wps, const u8 *e_nonce)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *e_nonce)
wps_process_enrollee_nonce	src/wps/wps_registrar.c	/^static int wps_process_enrollee_nonce(struct wps_data *wps, const u8 *e_nonce)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *e_nonce)
wps_process_key_wrap_auth	src/wps/wps_attr_process.c	/^int wps_process_key_wrap_auth(struct wps_data *wps, struct wpabuf *msg,$/;"	f	signature:(struct wps_data *wps, struct wpabuf *msg, const u8 *key_wrap_auth)
wps_process_key_wrap_auth	src/wps/wps_i.h	/^int wps_process_key_wrap_auth(struct wps_data *wps, struct wpabuf *msg,$/;"	p	signature:(struct wps_data *wps, struct wpabuf *msg, const u8 *key_wrap_auth)
wps_process_m1	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_m1(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, struct wps_parse_attr *attr)
wps_process_m2	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_m2(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_m2d	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_m2d(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, struct wps_parse_attr *attr)
wps_process_m3	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_m3(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_m4	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_m4(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_m5	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_m5(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_m6	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_m6(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_m7	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_m7(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_m8	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_m8(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg, struct wps_parse_attr *attr)
wps_process_mac_addr	src/wps/wps_registrar.c	/^static int wps_process_mac_addr(struct wps_data *wps, const u8 *mac_addr)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *mac_addr)
wps_process_manufacturer	src/wps/wps_dev_attr.c	/^static int wps_process_manufacturer(struct wps_device_data *dev, const u8 *str,$/;"	f	file:	signature:(struct wps_device_data *dev, const u8 *str, size_t str_len)
wps_process_model_name	src/wps/wps_dev_attr.c	/^static int wps_process_model_name(struct wps_device_data *dev, const u8 *str,$/;"	f	file:	signature:(struct wps_device_data *dev, const u8 *str, size_t str_len)
wps_process_model_number	src/wps/wps_dev_attr.c	/^static int wps_process_model_number(struct wps_device_data *dev, const u8 *str,$/;"	f	file:	signature:(struct wps_device_data *dev, const u8 *str, size_t str_len)
wps_process_msg	src/wps/wps.c	/^enum wps_process_res wps_process_msg(struct wps_data *wps,$/;"	f	signature:(struct wps_data *wps, enum wsc_op_code op_code, const struct wpabuf *msg)
wps_process_msg	src/wps/wps.h	/^enum wps_process_res wps_process_msg(struct wps_data *wps,$/;"	p	signature:(struct wps_data *wps, enum wsc_op_code op_code, const struct wpabuf *msg)
wps_process_oob	src/wps/wps.h	/^int wps_process_oob(struct wps_context *wps, struct oob_device_data *oob_dev,$/;"	p	signature:(struct wps_context *wps, struct oob_device_data *oob_dev, int registrar)
wps_process_oob	src/wps/wps_common.c	/^int wps_process_oob(struct wps_context *wps, struct oob_device_data *oob_dev,$/;"	f	signature:(struct wps_context *wps, struct oob_device_data *oob_dev, int registrar)
wps_process_os_version	src/wps/wps_dev_attr.c	/^int wps_process_os_version(struct wps_device_data *dev, const u8 *ver)$/;"	f	signature:(struct wps_device_data *dev, const u8 *ver)
wps_process_os_version	src/wps/wps_dev_attr.h	/^int wps_process_os_version(struct wps_device_data *dev, const u8 *ver);$/;"	p	signature:(struct wps_device_data *dev, const u8 *ver)
wps_process_primary_dev_type	src/wps/wps_dev_attr.c	/^static int wps_process_primary_dev_type(struct wps_device_data *dev,$/;"	f	file:	signature:(struct wps_device_data *dev, const u8 *dev_type)
wps_process_pubkey	src/wps/wps_enrollee.c	/^static int wps_process_pubkey(struct wps_data *wps, const u8 *pk,$/;"	f	file:	signature:(struct wps_data *wps, const u8 *pk, size_t pk_len)
wps_process_pubkey	src/wps/wps_registrar.c	/^static int wps_process_pubkey(struct wps_data *wps, const u8 *pk,$/;"	f	file:	signature:(struct wps_data *wps, const u8 *pk, size_t pk_len)
wps_process_r_hash1	src/wps/wps_enrollee.c	/^static int wps_process_r_hash1(struct wps_data *wps, const u8 *r_hash1)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *r_hash1)
wps_process_r_hash2	src/wps/wps_enrollee.c	/^static int wps_process_r_hash2(struct wps_data *wps, const u8 *r_hash2)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *r_hash2)
wps_process_r_snonce1	src/wps/wps_enrollee.c	/^static int wps_process_r_snonce1(struct wps_data *wps, const u8 *r_snonce1)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *r_snonce1)
wps_process_r_snonce2	src/wps/wps_enrollee.c	/^static int wps_process_r_snonce2(struct wps_data *wps, const u8 *r_snonce2)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *r_snonce2)
wps_process_registrar_nonce	src/wps/wps_enrollee.c	/^static int wps_process_registrar_nonce(struct wps_data *wps, const u8 *r_nonce)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *r_nonce)
wps_process_registrar_nonce	src/wps/wps_registrar.c	/^static int wps_process_registrar_nonce(struct wps_data *wps, const u8 *r_nonce)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *r_nonce)
wps_process_res	src/wps/wps.h	/^enum wps_process_res {$/;"	g
wps_process_rf_bands	src/wps/wps_dev_attr.c	/^int wps_process_rf_bands(struct wps_device_data *dev, const u8 *bands)$/;"	f	signature:(struct wps_device_data *dev, const u8 *bands)
wps_process_rf_bands	src/wps/wps_dev_attr.h	/^int wps_process_rf_bands(struct wps_device_data *dev, const u8 *bands);$/;"	p	signature:(struct wps_device_data *dev, const u8 *bands)
wps_process_serial_number	src/wps/wps_dev_attr.c	/^static int wps_process_serial_number(struct wps_device_data *dev,$/;"	f	file:	signature:(struct wps_device_data *dev, const u8 *str, size_t str_len)
wps_process_uuid_e	src/wps/wps_registrar.c	/^static int wps_process_uuid_e(struct wps_data *wps, const u8 *uuid_e)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *uuid_e)
wps_process_uuid_r	src/wps/wps_enrollee.c	/^static int wps_process_uuid_r(struct wps_data *wps, const u8 *uuid_r)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *uuid_r)
wps_process_wps_state	src/wps/wps_registrar.c	/^static int wps_process_wps_state(struct wps_data *wps, const u8 *state)$/;"	f	file:	signature:(struct wps_data *wps, const u8 *state)
wps_process_wsc_ack	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_wsc_ack(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_process_wsc_ack	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_wsc_ack(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_process_wsc_done	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_wsc_done(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_process_wsc_msg	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_wsc_msg(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_process_wsc_msg	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_wsc_msg(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_process_wsc_nack	src/wps/wps_enrollee.c	/^static enum wps_process_res wps_process_wsc_nack(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_process_wsc_nack	src/wps/wps_registrar.c	/^static enum wps_process_res wps_process_wsc_nack(struct wps_data *wps,$/;"	f	file:	signature:(struct wps_data *wps, const struct wpabuf *msg)
wps_prov_info	src/p2p/p2p_i.h	/^	u16 wps_prov_info;$/;"	m	struct:p2p_device	access:public
wps_pwd_auth_fail	src/ap/wps_hostapd.c	/^static int wps_pwd_auth_fail(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_pwd_auth_fail_event	src/wps/wps_common.c	/^void wps_pwd_auth_fail_event(struct wps_context *wps, int enrollee, int part)$/;"	f	signature:(struct wps_context *wps, int enrollee, int part)
wps_pwd_auth_fail_event	src/wps/wps_i.h	/^void wps_pwd_auth_fail_event(struct wps_context *wps, int enrollee, int part);$/;"	p	signature:(struct wps_context *wps, int enrollee, int part)
wps_reg_success_cb	src/ap/hostapd.h	/^	void (*wps_reg_success_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:hostapd_data	access:public
wps_reg_success_cb_ctx	src/ap/hostapd.h	/^	void *wps_reg_success_cb_ctx;$/;"	m	struct:hostapd_data	access:public
wps_registrar	src/wps/wps_registrar.c	/^struct wps_registrar {$/;"	s	file:
wps_registrar::authorized_macs	src/wps/wps_registrar.c	/^	u8 authorized_macs[WPS_MAX_AUTHORIZED_MACS][ETH_ALEN];$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::authorized_macs_union	src/wps/wps_registrar.c	/^	u8 authorized_macs_union[WPS_MAX_AUTHORIZED_MACS][ETH_ALEN];$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::cb_ctx	src/wps/wps_registrar.c	/^	void *cb_ctx;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::devices	src/wps/wps_registrar.c	/^	struct wps_registrar_device *devices;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wps_registrar_device	file:	access:public
wps_registrar::disable_auto_conf	src/wps/wps_registrar.c	/^	int disable_auto_conf;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::dualband	src/wps/wps_registrar.c	/^	int dualband;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::enrollee_seen_cb	src/wps/wps_registrar.c	/^	void (*enrollee_seen_cb)(void *ctx, const u8 *addr, const u8 *uuid_e,$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::extra_cred	src/wps/wps_registrar.c	/^	struct wpabuf *extra_cred;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wpabuf	file:	access:public
wps_registrar::force_pbc_overlap	src/wps/wps_registrar.c	/^	int force_pbc_overlap;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::new_psk_cb	src/wps/wps_registrar.c	/^	int (*new_psk_cb)(void *ctx, const u8 *mac_addr, const u8 *psk,$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::p2p_dev_addr	src/wps/wps_registrar.c	/^	u8 p2p_dev_addr[ETH_ALEN];$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::pbc	src/wps/wps_registrar.c	/^	int pbc;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::pbc_sessions	src/wps/wps_registrar.c	/^	struct wps_pbc_session *pbc_sessions;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wps_pbc_session	file:	access:public
wps_registrar::pin_needed_cb	src/wps/wps_registrar.c	/^	void (*pin_needed_cb)(void *ctx, const u8 *uuid_e,$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::pins	src/wps/wps_registrar.c	/^	struct dl_list pins;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::dl_list	file:	access:public
wps_registrar::reg_success_cb	src/wps/wps_registrar.c	/^	void (*reg_success_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::sel_reg_config_methods_override	src/wps/wps_registrar.c	/^	int sel_reg_config_methods_override;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::sel_reg_dev_password_id_override	src/wps/wps_registrar.c	/^	int sel_reg_dev_password_id_override;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::sel_reg_union	src/wps/wps_registrar.c	/^	int sel_reg_union;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::selected_registrar	src/wps/wps_registrar.c	/^	int selected_registrar;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::set_ie_cb	src/wps/wps_registrar.c	/^	int (*set_ie_cb)(void *ctx, struct wpabuf *beacon_ie,$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::set_sel_reg_cb	src/wps/wps_registrar.c	/^	void (*set_sel_reg_cb)(void *ctx, int sel_reg, u16 dev_passwd_id,$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::skip_cred_build	src/wps/wps_registrar.c	/^	int skip_cred_build;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::static_wep_only	src/wps/wps_registrar.c	/^	int static_wep_only;$/;"	m	struct:wps_registrar	file:	access:public
wps_registrar::wps	src/wps/wps_registrar.c	/^	struct wps_context *wps;$/;"	m	struct:wps_registrar	typeref:struct:wps_registrar::wps_context	file:	access:public
wps_registrar_add_authorized_mac	src/wps/wps_registrar.c	/^static void wps_registrar_add_authorized_mac(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *addr)
wps_registrar_add_pbc_session	src/wps/wps_registrar.c	/^static void wps_registrar_add_pbc_session(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *addr, const u8 *uuid_e)
wps_registrar_add_pin	src/wps/wps.h	/^int wps_registrar_add_pin(struct wps_registrar *reg, const u8 *addr,$/;"	p	signature:(struct wps_registrar *reg, const u8 *addr, const u8 *uuid, const u8 *pin, size_t pin_len, int timeout)
wps_registrar_add_pin	src/wps/wps_registrar.c	/^int wps_registrar_add_pin(struct wps_registrar *reg, const u8 *addr,$/;"	f	signature:(struct wps_registrar *reg, const u8 *addr, const u8 *uuid, const u8 *pin, size_t pin_len, int timeout)
wps_registrar_button_pushed	src/wps/wps.h	/^int wps_registrar_button_pushed(struct wps_registrar *reg,$/;"	p	signature:(struct wps_registrar *reg, const u8 *p2p_dev_addr)
wps_registrar_button_pushed	src/wps/wps_registrar.c	/^int wps_registrar_button_pushed(struct wps_registrar *reg,$/;"	f	signature:(struct wps_registrar *reg, const u8 *p2p_dev_addr)
wps_registrar_complete	src/wps/wps.h	/^void wps_registrar_complete(struct wps_registrar *registrar, const u8 *uuid_e);$/;"	p	signature:(struct wps_registrar *registrar, const u8 *uuid_e)
wps_registrar_complete	src/wps/wps_registrar.c	/^void wps_registrar_complete(struct wps_registrar *registrar, const u8 *uuid_e)$/;"	f	signature:(struct wps_registrar *registrar, const u8 *uuid_e)
wps_registrar_config	src/wps/wps.h	/^struct wps_registrar_config {$/;"	s
wps_registrar_config::cb_ctx	src/wps/wps.h	/^	void *cb_ctx;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::disable_auto_conf	src/wps/wps.h	/^	int disable_auto_conf;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::dualband	src/wps/wps.h	/^	int dualband;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::enrollee_seen_cb	src/wps/wps.h	/^	void (*enrollee_seen_cb)(void *ctx, const u8 *addr, const u8 *uuid_e,$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::extra_cred	src/wps/wps.h	/^	const u8 *extra_cred;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::extra_cred_len	src/wps/wps.h	/^	size_t extra_cred_len;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::new_psk_cb	src/wps/wps.h	/^	int (*new_psk_cb)(void *ctx, const u8 *mac_addr, const u8 *psk,$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::pin_needed_cb	src/wps/wps.h	/^	void (*pin_needed_cb)(void *ctx, const u8 *uuid_e,$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::reg_success_cb	src/wps/wps.h	/^	void (*reg_success_cb)(void *ctx, const u8 *mac_addr,$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::set_ie_cb	src/wps/wps.h	/^	int (*set_ie_cb)(void *ctx, struct wpabuf *beacon_ie,$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::set_sel_reg_cb	src/wps/wps.h	/^	void (*set_sel_reg_cb)(void *ctx, int sel_reg, u16 dev_passwd_id,$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::skip_cred_build	src/wps/wps.h	/^	int skip_cred_build;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config::static_wep_only	src/wps/wps.h	/^	int static_wep_only;$/;"	m	struct:wps_registrar_config	access:public
wps_registrar_config_ap	src/wps/wps.h	/^int wps_registrar_config_ap(struct wps_registrar *reg,$/;"	p	signature:(struct wps_registrar *reg, struct wps_credential *cred)
wps_registrar_config_ap	src/wps/wps_registrar.c	/^int wps_registrar_config_ap(struct wps_registrar *reg,$/;"	f	signature:(struct wps_registrar *reg, struct wps_credential *cred)
wps_registrar_deinit	src/wps/wps.h	/^void wps_registrar_deinit(struct wps_registrar *reg);$/;"	p	signature:(struct wps_registrar *reg)
wps_registrar_deinit	src/wps/wps_registrar.c	/^void wps_registrar_deinit(struct wps_registrar *reg)$/;"	f	signature:(struct wps_registrar *reg)
wps_registrar_device	src/wps/wps_registrar.c	/^struct wps_registrar_device {$/;"	s	file:
wps_registrar_device::dev	src/wps/wps_registrar.c	/^	struct wps_device_data dev;$/;"	m	struct:wps_registrar_device	typeref:struct:wps_registrar_device::wps_device_data	file:	access:public
wps_registrar_device::next	src/wps/wps_registrar.c	/^	struct wps_registrar_device *next;$/;"	m	struct:wps_registrar_device	typeref:struct:wps_registrar_device::wps_registrar_device	file:	access:public
wps_registrar_device::uuid	src/wps/wps_registrar.c	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_registrar_device	file:	access:public
wps_registrar_expire_pins	src/wps/wps_registrar.c	/^static void wps_registrar_expire_pins(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_registrar_free_pending_m2	src/wps/wps_registrar.c	/^static void wps_registrar_free_pending_m2(struct wps_context *wps)$/;"	f	file:	signature:(struct wps_context *wps)
wps_registrar_get_info	src/wps/wps.h	/^int wps_registrar_get_info(struct wps_registrar *reg, const u8 *addr,$/;"	p	signature:(struct wps_registrar *reg, const u8 *addr, char *buf, size_t buflen)
wps_registrar_get_info	src/wps/wps_registrar.c	/^int wps_registrar_get_info(struct wps_registrar *reg, const u8 *addr,$/;"	f	signature:(struct wps_registrar *reg, const u8 *addr, char *buf, size_t buflen)
wps_registrar_get_msg	src/wps/wps_i.h	/^struct wpabuf * wps_registrar_get_msg(struct wps_data *wps,$/;"	p	signature:(struct wps_data *wps, enum wsc_op_code *op_code)
wps_registrar_get_msg	src/wps/wps_registrar.c	/^struct wpabuf * wps_registrar_get_msg(struct wps_data *wps,$/;"	f	signature:(struct wps_data *wps, enum wsc_op_code *op_code)
wps_registrar_get_pin	src/wps/wps_registrar.c	/^static const u8 * wps_registrar_get_pin(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *uuid, size_t *pin_len)
wps_registrar_init	src/wps/wps.h	/^wps_registrar_init(struct wps_context *wps,$/;"	p	signature:(struct wps_context *wps, const struct wps_registrar_config *cfg)
wps_registrar_init	src/wps/wps_registrar.c	/^wps_registrar_init(struct wps_context *wps,$/;"	f	signature:(struct wps_context *wps, const struct wps_registrar_config *cfg)
wps_registrar_invalidate_pin	src/wps/wps.h	/^int wps_registrar_invalidate_pin(struct wps_registrar *reg, const u8 *uuid);$/;"	p	signature:(struct wps_registrar *reg, const u8 *uuid)
wps_registrar_invalidate_pin	src/wps/wps_registrar.c	/^int wps_registrar_invalidate_pin(struct wps_registrar *reg, const u8 *uuid)$/;"	f	signature:(struct wps_registrar *reg, const u8 *uuid)
wps_registrar_invalidate_wildcard_pin	src/wps/wps_registrar.c	/^static int wps_registrar_invalidate_wildcard_pin(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_registrar_p2p_dev_addr_match	src/wps/wps_registrar.c	/^static int wps_registrar_p2p_dev_addr_match(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_registrar_pbc_completed	src/wps/wps_registrar.c	/^static void wps_registrar_pbc_completed(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_registrar_pbc_overlap	src/wps/wps_i.h	/^int wps_registrar_pbc_overlap(struct wps_registrar *reg,$/;"	p	signature:(struct wps_registrar *reg, const u8 *addr, const u8 *uuid_e)
wps_registrar_pbc_overlap	src/wps/wps_registrar.c	/^int wps_registrar_pbc_overlap(struct wps_registrar *reg,$/;"	f	signature:(struct wps_registrar *reg, const u8 *addr, const u8 *uuid_e)
wps_registrar_pbc_timeout	src/wps/wps_registrar.c	/^static void wps_registrar_pbc_timeout(void *eloop_ctx, void *timeout_ctx)$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wps_registrar_pbc_timeout	src/wps/wps_registrar.c	/^static void wps_registrar_pbc_timeout(void *eloop_ctx, void *timeout_ctx);$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wps_registrar_pin_completed	src/wps/wps_registrar.c	/^static void wps_registrar_pin_completed(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_registrar_probe_req_rx	src/wps/wps.h	/^void wps_registrar_probe_req_rx(struct wps_registrar *reg, const u8 *addr,$/;"	p	signature:(struct wps_registrar *reg, const u8 *addr, const struct wpabuf *wps_data, int p2p_wildcard)
wps_registrar_probe_req_rx	src/wps/wps_registrar.c	/^void wps_registrar_probe_req_rx(struct wps_registrar *reg, const u8 *addr,$/;"	f	signature:(struct wps_registrar *reg, const u8 *addr, const struct wpabuf *wps_data, int p2p_wildcard)
wps_registrar_process_msg	src/wps/wps_i.h	/^enum wps_process_res wps_registrar_process_msg(struct wps_data *wps,$/;"	p	signature:(struct wps_data *wps, enum wsc_op_code op_code, const struct wpabuf *msg)
wps_registrar_process_msg	src/wps/wps_registrar.c	/^enum wps_process_res wps_registrar_process_msg(struct wps_data *wps,$/;"	f	signature:(struct wps_data *wps, enum wsc_op_code op_code, const struct wpabuf *msg)
wps_registrar_remove_authorized_mac	src/wps/wps_registrar.c	/^static void wps_registrar_remove_authorized_mac(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *addr)
wps_registrar_remove_pbc_session	src/wps/wps_registrar.c	/^static void wps_registrar_remove_pbc_session(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, const u8 *uuid_e, const u8 *p2p_dev_addr)
wps_registrar_remove_pin	src/wps/wps_registrar.c	/^static void wps_registrar_remove_pin(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct wps_uuid_pin *pin)
wps_registrar_sel_reg_add	src/wps/wps_registrar.c	/^static void wps_registrar_sel_reg_add(struct wps_registrar *reg,$/;"	f	file:	signature:(struct wps_registrar *reg, struct subscription *s)
wps_registrar_sel_reg_union	src/wps/wps_registrar.c	/^static void wps_registrar_sel_reg_union(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_registrar_selected_registrar_changed	src/wps/wps_i.h	/^void wps_registrar_selected_registrar_changed(struct wps_registrar *reg);$/;"	p	signature:(struct wps_registrar *reg)
wps_registrar_selected_registrar_changed	src/wps/wps_registrar.c	/^void wps_registrar_selected_registrar_changed(struct wps_registrar *reg)$/;"	f	signature:(struct wps_registrar *reg)
wps_registrar_set_selected_timeout	src/wps/wps_registrar.c	/^static void wps_registrar_set_selected_timeout(void *eloop_ctx,$/;"	f	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wps_registrar_set_selected_timeout	src/wps/wps_registrar.c	/^static void wps_registrar_set_selected_timeout(void *eloop_ctx,$/;"	p	file:	signature:(void *eloop_ctx, void *timeout_ctx)
wps_registrar_skip_overlap	src/wps/wps_registrar.c	/^static int wps_registrar_skip_overlap(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_registrar_stop_pbc	src/wps/wps_registrar.c	/^static void wps_registrar_stop_pbc(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_registrar_unlock_pin	src/wps/wps.h	/^int wps_registrar_unlock_pin(struct wps_registrar *reg, const u8 *uuid);$/;"	p	signature:(struct wps_registrar *reg, const u8 *uuid)
wps_registrar_unlock_pin	src/wps/wps_registrar.c	/^int wps_registrar_unlock_pin(struct wps_registrar *reg, const u8 *uuid)$/;"	f	signature:(struct wps_registrar *reg, const u8 *uuid)
wps_registrar_update_ie	src/wps/wps.h	/^int wps_registrar_update_ie(struct wps_registrar *reg);$/;"	p	signature:(struct wps_registrar *reg)
wps_registrar_update_ie	src/wps/wps_registrar.c	/^int wps_registrar_update_ie(struct wps_registrar *reg)$/;"	f	signature:(struct wps_registrar *reg)
wps_registrar_wps_cancel	src/wps/wps.h	/^int wps_registrar_wps_cancel(struct wps_registrar *reg);$/;"	p	signature:(struct wps_registrar *reg)
wps_registrar_wps_cancel	src/wps/wps_registrar.c	/^int wps_registrar_wps_cancel(struct wps_registrar *reg)$/;"	f	signature:(struct wps_registrar *reg)
wps_reload_config	src/ap/wps_hostapd.c	/^static void wps_reload_config(void *eloop_data, void *user_ctx)$/;"	f	file:	signature:(void *eloop_data, void *user_ctx)
wps_remove_pin	src/wps/wps_registrar.c	/^static void wps_remove_pin(struct wps_uuid_pin *pin)$/;"	f	file:	signature:(struct wps_uuid_pin *pin)
wps_request_type	src/wps/wps_defs.h	/^enum wps_request_type {$/;"	g
wps_response_type	src/wps/wps_defs.h	/^enum wps_response_type {$/;"	g
wps_scpd_xml	src/wps/wps_upnp_web.c	/^static const char wps_scpd_xml[] =$/;"	v	file:
wps_sec_dev_type_list	src/p2p/p2p.h	/^	u8 wps_sec_dev_type_list[128];$/;"	m	struct:p2p_peer_info	access:public
wps_sec_dev_type_list	src/p2p/p2p_i.h	/^	const u8 *wps_sec_dev_type_list;$/;"	m	struct:p2p_message	access:public
wps_sec_dev_type_list_len	src/p2p/p2p.h	/^	size_t wps_sec_dev_type_list_len;$/;"	m	struct:p2p_peer_info	access:public
wps_sec_dev_type_list_len	src/p2p/p2p_i.h	/^	size_t wps_sec_dev_type_list_len;$/;"	m	struct:p2p_message	access:public
wps_set_attr	src/wps/wps_attr_parse.c	/^static int wps_set_attr(struct wps_parse_attr *attr, u16 type,$/;"	f	file:	signature:(struct wps_parse_attr *attr, u16 type, const u8 *pos, u16 len)
wps_set_ie	src/wps/wps_registrar.c	/^static int wps_set_ie(struct wps_registrar *reg)$/;"	f	file:	signature:(struct wps_registrar *reg)
wps_set_ie	src/wps/wps_registrar.c	/^static int wps_set_ie(struct wps_registrar *reg);$/;"	p	file:	signature:(struct wps_registrar *reg)
wps_set_pushbutton	src/wps/wps_registrar.c	/^static void wps_set_pushbutton(u16 *methods, u16 conf_methods)$/;"	f	file:	signature:(u16 *methods, u16 conf_methods)
wps_set_vendor_ext_wfa_subelem	src/wps/wps_attr_parse.c	/^static int wps_set_vendor_ext_wfa_subelem(struct wps_parse_attr *attr,$/;"	f	file:	signature:(struct wps_parse_attr *attr, u8 id, u8 len, const u8 *pos)
wps_sta_cred_cb	src/wps/wps_registrar.c	/^static void wps_sta_cred_cb(struct wps_data *wps)$/;"	f	file:	signature:(struct wps_data *wps)
wps_state	src/ap/ap_config.h	/^	int wps_state;$/;"	m	struct:hostapd_bss_config	access:public
wps_state	src/wps/wps.h	/^		u8 wps_state;$/;"	m	struct:wps_event_data::wps_event_er_ap	access:public
wps_state	src/wps/wps.h	/^	enum wps_state wps_state;$/;"	m	struct:wps_context	typeref:enum:wps_context::wps_state	access:public
wps_state	src/wps/wps_defs.h	/^enum wps_state {$/;"	g
wps_state	src/wps/wps_er.h	/^	u8 wps_state;$/;"	m	struct:wps_er_ap	access:public
wps_state	src/wps/wps_i.h	/^	const u8 *wps_state; \/* 1 octet *\/$/;"	m	struct:wps_parse_attr	access:public
wps_stop_reg_data	src/ap/wps_hostapd.c	/^struct wps_stop_reg_data {$/;"	s	file:
wps_stop_reg_data::current_hapd	src/ap/wps_hostapd.c	/^	struct hostapd_data *current_hapd;$/;"	m	struct:wps_stop_reg_data	typeref:struct:wps_stop_reg_data::hostapd_data	file:	access:public
wps_stop_reg_data::uuid_e	src/ap/wps_hostapd.c	/^	const u8 *uuid_e;$/;"	m	struct:wps_stop_reg_data	file:	access:public
wps_stop_registrar	src/ap/wps_hostapd.c	/^static int wps_stop_registrar(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_success_cb	src/drivers/driver.h	/^	int (*wps_success_cb)(void *priv, const u8 *peer_addr);$/;"	m	struct:wpa_driver_ops	access:public
wps_success_event	src/wps/wps_common.c	/^void wps_success_event(struct wps_context *wps)$/;"	f	signature:(struct wps_context *wps)
wps_success_event	src/wps/wps_i.h	/^void wps_success_event(struct wps_context *wps);$/;"	p	signature:(struct wps_context *wps)
wps_testing_dummy_cred	src/wps/wps.c	/^int wps_testing_dummy_cred = 0;$/;"	v
wps_ufd_data	src/wps/wps_ufd.c	/^struct wps_ufd_data {$/;"	s	file:
wps_ufd_data::ufd_fd	src/wps/wps_ufd.c	/^	int ufd_fd;$/;"	m	struct:wps_ufd_data	file:	access:public
wps_update_ie	src/ap/wps_hostapd.c	/^static int wps_update_ie(struct hostapd_data *hapd, void *ctx)$/;"	f	file:	signature:(struct hostapd_data *hapd, void *ctx)
wps_upnp	src/ap/hostapd.h	/^	struct upnp_wps_device_sm *wps_upnp;$/;"	m	struct:hostapd_data	typeref:struct:hostapd_data::upnp_wps_device_sm	access:public
wps_upnp	src/wps/wps.h	/^	struct upnp_wps_device_sm *wps_upnp;$/;"	m	struct:wps_context	typeref:struct:wps_context::upnp_wps_device_sm	access:public
wps_uuid_pin	src/wps/wps_registrar.c	/^struct wps_uuid_pin {$/;"	s	file:
wps_uuid_pin::enrollee_addr	src/wps/wps_registrar.c	/^	u8 enrollee_addr[ETH_ALEN];$/;"	m	struct:wps_uuid_pin	file:	access:public
wps_uuid_pin::expiration	src/wps/wps_registrar.c	/^	struct os_time expiration;$/;"	m	struct:wps_uuid_pin	typeref:struct:wps_uuid_pin::os_time	file:	access:public
wps_uuid_pin::flags	src/wps/wps_registrar.c	/^	int flags;$/;"	m	struct:wps_uuid_pin	file:	access:public
wps_uuid_pin::list	src/wps/wps_registrar.c	/^	struct dl_list list;$/;"	m	struct:wps_uuid_pin	typeref:struct:wps_uuid_pin::dl_list	file:	access:public
wps_uuid_pin::pin	src/wps/wps_registrar.c	/^	u8 *pin;$/;"	m	struct:wps_uuid_pin	file:	access:public
wps_uuid_pin::pin_len	src/wps/wps_registrar.c	/^	size_t pin_len;$/;"	m	struct:wps_uuid_pin	file:	access:public
wps_uuid_pin::uuid	src/wps/wps_registrar.c	/^	u8 uuid[WPS_UUID_LEN];$/;"	m	struct:wps_uuid_pin	file:	access:public
wps_uuid_pin::wildcard_uuid	src/wps/wps_registrar.c	/^	int wildcard_uuid;$/;"	m	struct:wps_uuid_pin	file:	access:public
wps_validate_ap_config_methods	src/wps/wps_validate.c	/^static int wps_validate_ap_config_methods(const u8 *config_methods, int wps2,$/;"	f	file:	signature:(const u8 *config_methods, int wps2, int mandatory)
wps_validate_ap_setup_locked	src/wps/wps_validate.c	/^static int wps_validate_ap_setup_locked(const u8 *ap_setup_locked,$/;"	f	file:	signature:(const u8 *ap_setup_locked, int mandatory)
wps_validate_assoc_req	src/wps/wps.h	/^int wps_validate_assoc_req(const struct wpabuf *wps_ie);$/;"	p	signature:(const struct wpabuf *wps_ie)
wps_validate_assoc_req	src/wps/wps.h	/^static inline int wps_validate_assoc_req(const struct wpabuf *wps_ie)$/;"	f	signature:(const struct wpabuf *wps_ie)
wps_validate_assoc_req	src/wps/wps_validate.c	/^int wps_validate_assoc_req(const struct wpabuf *wps_ie)$/;"	f	signature:(const struct wpabuf *wps_ie)
wps_validate_assoc_resp	src/wps/wps.h	/^int wps_validate_assoc_resp(const struct wpabuf *wps_ie);$/;"	p	signature:(const struct wpabuf *wps_ie)
wps_validate_assoc_resp	src/wps/wps.h	/^static inline int wps_validate_assoc_resp(const struct wpabuf *wps_ie)$/;"	f	signature:(const struct wpabuf *wps_ie)
wps_validate_assoc_resp	src/wps/wps_validate.c	/^int wps_validate_assoc_resp(const struct wpabuf *wps_ie)$/;"	f	signature:(const struct wpabuf *wps_ie)
wps_validate_assoc_state	src/wps/wps_validate.c	/^static int wps_validate_assoc_state(const u8 *assoc_state, int mandatory)$/;"	f	file:	signature:(const u8 *assoc_state, int mandatory)
wps_validate_auth_type	src/wps/wps_validate.c	/^static int wps_validate_auth_type(const u8 *type, int mandatory)$/;"	f	file:	signature:(const u8 *type, int mandatory)
wps_validate_auth_type_flags	src/wps/wps_validate.c	/^static int wps_validate_auth_type_flags(const u8 *flags, int mandatory)$/;"	f	file:	signature:(const u8 *flags, int mandatory)
wps_validate_authenticator	src/wps/wps_validate.c	/^static int wps_validate_authenticator(const u8 *authenticator, int mandatory)$/;"	f	file:	signature:(const u8 *authenticator, int mandatory)
wps_validate_authorized_macs	src/wps/wps_validate.c	/^static int wps_validate_authorized_macs(const u8 *authorized_macs, size_t len,$/;"	f	file:	signature:(const u8 *authorized_macs, size_t len, int mandatory)
wps_validate_beacon	src/wps/wps.h	/^int wps_validate_beacon(const struct wpabuf *wps_ie);$/;"	p	signature:(const struct wpabuf *wps_ie)
wps_validate_beacon	src/wps/wps.h	/^static inline int wps_validate_beacon(const struct wpabuf *wps_ie){$/;"	f	signature:(const struct wpabuf *wps_ie)
wps_validate_beacon	src/wps/wps_validate.c	/^int wps_validate_beacon(const struct wpabuf *wps_ie)$/;"	f	signature:(const struct wpabuf *wps_ie)
wps_validate_beacon_probe_resp	src/wps/wps.h	/^int wps_validate_beacon_probe_resp(const struct wpabuf *wps_ie, int probe,$/;"	p	signature:(const struct wpabuf *wps_ie, int probe, const u8 *addr)
wps_validate_beacon_probe_resp	src/wps/wps.h	/^static inline int wps_validate_beacon_probe_resp(const struct wpabuf *wps_ie,$/;"	f	signature:(const struct wpabuf *wps_ie, int probe, const u8 *addr)
wps_validate_beacon_probe_resp	src/wps/wps_validate.c	/^int wps_validate_beacon_probe_resp(const struct wpabuf *wps_ie, int probe,$/;"	f	signature:(const struct wpabuf *wps_ie, int probe, const u8 *addr)
wps_validate_config_error	src/wps/wps_validate.c	/^static int wps_validate_config_error(const u8 *config_error, int mandatory)$/;"	f	file:	signature:(const u8 *config_error, int mandatory)
wps_validate_config_methods	src/wps/wps_validate.c	/^static int wps_validate_config_methods(const u8 *config_methods, int wps2,$/;"	f	file:	signature:(const u8 *config_methods, int wps2, int mandatory)
wps_validate_conn_type_flags	src/wps/wps_validate.c	/^static int wps_validate_conn_type_flags(const u8 *flags, int mandatory)$/;"	f	file:	signature:(const u8 *flags, int mandatory)
wps_validate_cred	src/wps/wps_validate.c	/^static int wps_validate_cred(const u8 *cred, size_t len)$/;"	f	file:	signature:(const u8 *cred, size_t len)
wps_validate_credential	src/wps/wps_validate.c	/^static int wps_validate_credential(const u8 *cred[], size_t len[], size_t num,$/;"	f	file:	signature:(const u8 *cred[], size_t len[], size_t num, int mandatory)
wps_validate_dev_name	src/wps/wps_validate.c	/^static int wps_validate_dev_name(const u8 *dev_name, size_t len,$/;"	f	file:	signature:(const u8 *dev_name, size_t len, int mandatory)
wps_validate_dev_password_id	src/wps/wps_validate.c	/^static int wps_validate_dev_password_id(const u8 *dev_password_id,$/;"	f	file:	signature:(const u8 *dev_password_id, int mandatory)
wps_validate_e_hash1	src/wps/wps_validate.c	/^static int wps_validate_e_hash1(const u8 *hash, int mandatory)$/;"	f	file:	signature:(const u8 *hash, int mandatory)
wps_validate_e_hash2	src/wps/wps_validate.c	/^static int wps_validate_e_hash2(const u8 *hash, int mandatory)$/;"	f	file:	signature:(const u8 *hash, int mandatory)
wps_validate_e_snonce1	src/wps/wps_validate.c	/^static int wps_validate_e_snonce1(const u8 *nonce, int mandatory)$/;"	f	file:	signature:(const u8 *nonce, int mandatory)
wps_validate_e_snonce2	src/wps/wps_validate.c	/^static int wps_validate_e_snonce2(const u8 *nonce, int mandatory)$/;"	f	file:	signature:(const u8 *nonce, int mandatory)
wps_validate_encr_settings	src/wps/wps_validate.c	/^static int wps_validate_encr_settings(const u8 *encr_settings, size_t len,$/;"	f	file:	signature:(const u8 *encr_settings, size_t len, int mandatory)
wps_validate_encr_type	src/wps/wps_validate.c	/^static int wps_validate_encr_type(const u8 *type, int mandatory)$/;"	f	file:	signature:(const u8 *type, int mandatory)
wps_validate_encr_type_flags	src/wps/wps_validate.c	/^static int wps_validate_encr_type_flags(const u8 *flags, int mandatory)$/;"	f	file:	signature:(const u8 *flags, int mandatory)
wps_validate_enrollee_nonce	src/wps/wps_validate.c	/^static int wps_validate_enrollee_nonce(const u8 *enrollee_nonce, int mandatory)$/;"	f	file:	signature:(const u8 *enrollee_nonce, int mandatory)
wps_validate_key_wrap_auth	src/wps/wps_validate.c	/^static int wps_validate_key_wrap_auth(const u8 *auth, int mandatory)$/;"	f	file:	signature:(const u8 *auth, int mandatory)
wps_validate_m1	src/wps/wps.h	/^int wps_validate_m1(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m1	src/wps/wps.h	/^static inline int wps_validate_m1(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m1	src/wps/wps_validate.c	/^int wps_validate_m1(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m2	src/wps/wps.h	/^int wps_validate_m2(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m2	src/wps/wps.h	/^static inline int wps_validate_m2(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m2	src/wps/wps_validate.c	/^int wps_validate_m2(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m2d	src/wps/wps.h	/^int wps_validate_m2d(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m2d	src/wps/wps.h	/^static inline int wps_validate_m2d(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m2d	src/wps/wps_validate.c	/^int wps_validate_m2d(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m3	src/wps/wps.h	/^int wps_validate_m3(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m3	src/wps/wps.h	/^static inline int wps_validate_m3(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m3	src/wps/wps_validate.c	/^int wps_validate_m3(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m4	src/wps/wps.h	/^int wps_validate_m4(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m4	src/wps/wps.h	/^static inline int wps_validate_m4(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m4	src/wps/wps_validate.c	/^int wps_validate_m4(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m4_encr	src/wps/wps.h	/^int wps_validate_m4_encr(const struct wpabuf *tlvs, int wps2);$/;"	p	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m4_encr	src/wps/wps.h	/^static inline int wps_validate_m4_encr(const struct wpabuf *tlvs, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m4_encr	src/wps/wps_validate.c	/^int wps_validate_m4_encr(const struct wpabuf *tlvs, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m5	src/wps/wps.h	/^int wps_validate_m5(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m5	src/wps/wps.h	/^static inline int wps_validate_m5(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m5	src/wps/wps_validate.c	/^int wps_validate_m5(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m5_encr	src/wps/wps.h	/^int wps_validate_m5_encr(const struct wpabuf *tlvs, int wps2);$/;"	p	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m5_encr	src/wps/wps.h	/^static inline int wps_validate_m5_encr(const struct wpabuf *tlvs, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m5_encr	src/wps/wps_validate.c	/^int wps_validate_m5_encr(const struct wpabuf *tlvs, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m6	src/wps/wps.h	/^int wps_validate_m6(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m6	src/wps/wps.h	/^static inline int wps_validate_m6(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m6	src/wps/wps_validate.c	/^int wps_validate_m6(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m6_encr	src/wps/wps.h	/^int wps_validate_m6_encr(const struct wpabuf *tlvs, int wps2);$/;"	p	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m6_encr	src/wps/wps.h	/^static inline int wps_validate_m6_encr(const struct wpabuf *tlvs, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m6_encr	src/wps/wps_validate.c	/^int wps_validate_m6_encr(const struct wpabuf *tlvs, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int wps2)
wps_validate_m7	src/wps/wps.h	/^int wps_validate_m7(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m7	src/wps/wps.h	/^static inline int wps_validate_m7(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m7	src/wps/wps_validate.c	/^int wps_validate_m7(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m7_encr	src/wps/wps.h	/^int wps_validate_m7_encr(const struct wpabuf *tlvs, int ap, int wps2);$/;"	p	signature:(const struct wpabuf *tlvs, int ap, int wps2)
wps_validate_m7_encr	src/wps/wps.h	/^static inline int wps_validate_m7_encr(const struct wpabuf *tlvs, int ap,$/;"	f	signature:(const struct wpabuf *tlvs, int ap, int wps2)
wps_validate_m7_encr	src/wps/wps_validate.c	/^int wps_validate_m7_encr(const struct wpabuf *tlvs, int ap, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int ap, int wps2)
wps_validate_m8	src/wps/wps.h	/^int wps_validate_m8(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_m8	src/wps/wps.h	/^static inline int wps_validate_m8(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m8	src/wps/wps_validate.c	/^int wps_validate_m8(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_m8_encr	src/wps/wps.h	/^int wps_validate_m8_encr(const struct wpabuf *tlvs, int ap, int wps2);$/;"	p	signature:(const struct wpabuf *tlvs, int ap, int wps2)
wps_validate_m8_encr	src/wps/wps.h	/^static inline int wps_validate_m8_encr(const struct wpabuf *tlvs, int ap,$/;"	f	signature:(const struct wpabuf *tlvs, int ap, int wps2)
wps_validate_m8_encr	src/wps/wps_validate.c	/^int wps_validate_m8_encr(const struct wpabuf *tlvs, int ap, int wps2)$/;"	f	signature:(const struct wpabuf *tlvs, int ap, int wps2)
wps_validate_mac_addr	src/wps/wps_validate.c	/^static int wps_validate_mac_addr(const u8 *mac_addr, int mandatory)$/;"	f	file:	signature:(const u8 *mac_addr, int mandatory)
wps_validate_manufacturer	src/wps/wps_validate.c	/^static int wps_validate_manufacturer(const u8 *manufacturer, size_t len,$/;"	f	file:	signature:(const u8 *manufacturer, size_t len, int mandatory)
wps_validate_model_name	src/wps/wps_validate.c	/^static int wps_validate_model_name(const u8 *model_name, size_t len,$/;"	f	file:	signature:(const u8 *model_name, size_t len, int mandatory)
wps_validate_model_number	src/wps/wps_validate.c	/^static int wps_validate_model_number(const u8 *model_number, size_t len,$/;"	f	file:	signature:(const u8 *model_number, size_t len, int mandatory)
wps_validate_msg_type	src/wps/wps_validate.c	/^static int wps_validate_msg_type(const u8 *msg_type, int mandatory)$/;"	f	file:	signature:(const u8 *msg_type, int mandatory)
wps_validate_network_idx	src/wps/wps_validate.c	/^static int wps_validate_network_idx(const u8 *idx, int mandatory)$/;"	f	file:	signature:(const u8 *idx, int mandatory)
wps_validate_network_key	src/wps/wps_validate.c	/^static int wps_validate_network_key(const u8 *key, size_t key_len,$/;"	f	file:	signature:(const u8 *key, size_t key_len, const u8 *encr_type, int mandatory)
wps_validate_network_key_index	src/wps/wps_validate.c	/^static int wps_validate_network_key_index(const u8 *idx, int mandatory)$/;"	f	file:	signature:(const u8 *idx, int mandatory)
wps_validate_network_key_shareable	src/wps/wps_validate.c	/^static int wps_validate_network_key_shareable(const u8 *val, int mandatory)$/;"	f	file:	signature:(const u8 *val, int mandatory)
wps_validate_os_version	src/wps/wps_validate.c	/^static int wps_validate_os_version(const u8 *os_version, int mandatory)$/;"	f	file:	signature:(const u8 *os_version, int mandatory)
wps_validate_primary_dev_type	src/wps/wps_validate.c	/^static int wps_validate_primary_dev_type(const u8 *primary_dev_type,$/;"	f	file:	signature:(const u8 *primary_dev_type, int mandatory)
wps_validate_probe_req	src/wps/wps.h	/^int wps_validate_probe_req(const struct wpabuf *wps_ie, const u8 *addr);$/;"	p	signature:(const struct wpabuf *wps_ie, const u8 *addr)
wps_validate_probe_req	src/wps/wps.h	/^static inline int wps_validate_probe_req(const struct wpabuf *wps_ie,$/;"	f	signature:(const struct wpabuf *wps_ie, const u8 *addr)
wps_validate_probe_req	src/wps/wps_validate.c	/^int wps_validate_probe_req(const struct wpabuf *wps_ie, const u8 *addr)$/;"	f	signature:(const struct wpabuf *wps_ie, const u8 *addr)
wps_validate_public_key	src/wps/wps_validate.c	/^static int wps_validate_public_key(const u8 *public_key, size_t len,$/;"	f	file:	signature:(const u8 *public_key, size_t len, int mandatory)
wps_validate_r_hash1	src/wps/wps_validate.c	/^static int wps_validate_r_hash1(const u8 *hash, int mandatory)$/;"	f	file:	signature:(const u8 *hash, int mandatory)
wps_validate_r_hash2	src/wps/wps_validate.c	/^static int wps_validate_r_hash2(const u8 *hash, int mandatory)$/;"	f	file:	signature:(const u8 *hash, int mandatory)
wps_validate_r_snonce1	src/wps/wps_validate.c	/^static int wps_validate_r_snonce1(const u8 *nonce, int mandatory)$/;"	f	file:	signature:(const u8 *nonce, int mandatory)
wps_validate_r_snonce2	src/wps/wps_validate.c	/^static int wps_validate_r_snonce2(const u8 *nonce, int mandatory)$/;"	f	file:	signature:(const u8 *nonce, int mandatory)
wps_validate_registrar_nonce	src/wps/wps_validate.c	/^static int wps_validate_registrar_nonce(const u8 *registrar_nonce,$/;"	f	file:	signature:(const u8 *registrar_nonce, int mandatory)
wps_validate_req_dev_type	src/wps/wps_validate.c	/^static int wps_validate_req_dev_type(const u8 *req_dev_type[], size_t num,$/;"	f	file:	signature:(const u8 *req_dev_type[], size_t num, int mandatory)
wps_validate_request_to_enroll	src/wps/wps_validate.c	/^static int wps_validate_request_to_enroll(const u8 *request_to_enroll,$/;"	f	file:	signature:(const u8 *request_to_enroll, int mandatory)
wps_validate_request_type	src/wps/wps_validate.c	/^static int wps_validate_request_type(const u8 *request_type, int mandatory)$/;"	f	file:	signature:(const u8 *request_type, int mandatory)
wps_validate_response_type	src/wps/wps_validate.c	/^static int wps_validate_response_type(const u8 *response_type, int mandatory)$/;"	f	file:	signature:(const u8 *response_type, int mandatory)
wps_validate_rf_bands	src/wps/wps_validate.c	/^static int wps_validate_rf_bands(const u8 *rf_bands, int mandatory)$/;"	f	file:	signature:(const u8 *rf_bands, int mandatory)
wps_validate_sel_reg_config_methods	src/wps/wps_validate.c	/^static int wps_validate_sel_reg_config_methods(const u8 *config_methods,$/;"	f	file:	signature:(const u8 *config_methods, int wps2, int mandatory)
wps_validate_selected_registrar	src/wps/wps_validate.c	/^static int wps_validate_selected_registrar(const u8 *selected_registrar,$/;"	f	file:	signature:(const u8 *selected_registrar, int mandatory)
wps_validate_serial_number	src/wps/wps_validate.c	/^static int wps_validate_serial_number(const u8 *serial_number, size_t len,$/;"	f	file:	signature:(const u8 *serial_number, size_t len, int mandatory)
wps_validate_settings_delay_time	src/wps/wps_validate.c	/^static int wps_validate_settings_delay_time(const u8 *delay, int mandatory)$/;"	f	file:	signature:(const u8 *delay, int mandatory)
wps_validate_ssid	src/wps/wps_validate.c	/^static int wps_validate_ssid(const u8 *ssid, size_t ssid_len, int mandatory)$/;"	f	file:	signature:(const u8 *ssid, size_t ssid_len, int mandatory)
wps_validate_upnp_set_selected_registrar	src/wps/wps.h	/^int wps_validate_upnp_set_selected_registrar(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_upnp_set_selected_registrar	src/wps/wps.h	/^static inline int wps_validate_upnp_set_selected_registrar($/;"	f	signature:( const struct wpabuf *tlvs)
wps_validate_upnp_set_selected_registrar	src/wps/wps_validate.c	/^int wps_validate_upnp_set_selected_registrar(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_uuid_e	src/wps/wps_validate.c	/^static int wps_validate_uuid_e(const u8 *uuid_e, int mandatory)$/;"	f	file:	signature:(const u8 *uuid_e, int mandatory)
wps_validate_uuid_r	src/wps/wps_validate.c	/^static int wps_validate_uuid_r(const u8 *uuid_r, int mandatory)$/;"	f	file:	signature:(const u8 *uuid_r, int mandatory)
wps_validate_version	src/wps/wps_validate.c	/^static int wps_validate_version(const u8 *version, int mandatory)$/;"	f	file:	signature:(const u8 *version, int mandatory)
wps_validate_version2	src/wps/wps_validate.c	/^static int wps_validate_version2(const u8 *version2, int mandatory)$/;"	f	file:	signature:(const u8 *version2, int mandatory)
wps_validate_wps_state	src/wps/wps_validate.c	/^static int wps_validate_wps_state(const u8 *wps_state, int mandatory)$/;"	f	file:	signature:(const u8 *wps_state, int mandatory)
wps_validate_wsc_ack	src/wps/wps.h	/^int wps_validate_wsc_ack(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_ack	src/wps/wps.h	/^static inline int wps_validate_wsc_ack(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_ack	src/wps/wps_validate.c	/^int wps_validate_wsc_ack(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_done	src/wps/wps.h	/^int wps_validate_wsc_done(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_done	src/wps/wps.h	/^static inline int wps_validate_wsc_done(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_done	src/wps/wps_validate.c	/^int wps_validate_wsc_done(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_nack	src/wps/wps.h	/^int wps_validate_wsc_nack(const struct wpabuf *tlvs);$/;"	p	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_nack	src/wps/wps.h	/^static inline int wps_validate_wsc_nack(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_validate_wsc_nack	src/wps/wps_validate.c	/^int wps_validate_wsc_nack(const struct wpabuf *tlvs)$/;"	f	signature:(const struct wpabuf *tlvs)
wps_vendor_ext	src/ap/ap_config.h	/^	struct wpabuf *wps_vendor_ext[MAX_WPS_VENDOR_EXTENSIONS];$/;"	m	struct:hostapd_bss_config	typeref:struct:hostapd_bss_config::wpabuf	access:public
wps_vendor_ext	src/p2p/p2p.h	/^	struct wpabuf *wps_vendor_ext[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_peer_info	typeref:struct:p2p_peer_info::wpabuf	access:public
wps_vendor_ext	src/p2p/p2p_i.h	/^	const u8 *wps_vendor_ext[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_message	access:public
wps_vendor_ext	src/p2p/p2p_i.h	/^	struct wpabuf *wps_vendor_ext[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_data	typeref:struct:p2p_data::wpabuf	access:public
wps_vendor_ext_len	src/p2p/p2p_i.h	/^	size_t wps_vendor_ext_len[P2P_MAX_WPS_VENDOR_EXT];$/;"	m	struct:p2p_message	access:public
wps_version_number	src/wps/wps.c	/^int wps_version_number = 0x20;$/;"	v
wps_workaround_cred_key	src/wps/wps_attr_process.c	/^static int wps_workaround_cred_key(struct wps_credential *cred)$/;"	f	file:	signature:(struct wps_credential *cred)
write_alerts	src/crypto/tls_gnutls.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
write_alerts	src/crypto/tls_openssl.c	/^	int read_alerts, write_alerts, failed;$/;"	m	struct:tls_connection	file:	access:public
write_alerts	src/crypto/tls_schannel.c	/^	int failed, read_alerts, write_alerts;$/;"	m	struct:tls_connection	file:	access:public
write_bulk_cipher_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_cipher_algorithm_t write_bulk_cipher_algorithm;$/;"	m	struct:__anon192	file:	access:public
write_cbc	src/tls/tlsv1_record.h	/^	struct crypto_cipher *write_cbc;$/;"	m	struct:tlsv1_record_layer	typeref:struct:tlsv1_record_layer::crypto_cipher	access:public
write_cipher_suite	src/tls/tlsv1_record.h	/^	u16 write_cipher_suite;$/;"	m	struct:tlsv1_record_layer	access:public
write_compression_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_compression_method_t write_compression_algorithm;$/;"	m	struct:__anon192	file:	access:public
write_func	src/wps/wps.h	/^	int (*write_func)(void *, size_t);$/;"	m	struct:oob_nfc_device_data	access:public
write_func	src/wps/wps.h	/^	int (*write_func)(void *, struct wpabuf *);$/;"	m	struct:oob_device_data	access:public
write_iv	src/tls/tlsv1_record.h	/^	u8 write_iv[TLS_MAX_IV_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
write_key	src/tls/tlsv1_record.h	/^	u8 write_key[TLS_MAX_WRITE_KEY_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
write_mac_algorithm	src/crypto/tls_gnutls.c	/^	gnutls_mac_algorithm_t write_mac_algorithm;$/;"	m	struct:__anon192	file:	access:public
write_mac_secret	src/tls/tlsv1_record.h	/^	u8 write_mac_secret[TLS_MAX_WRITE_MAC_SECRET_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
write_nfc	src/wps/wps_nfc.c	/^static int write_nfc(void *priv, struct wpabuf *buf)$/;"	f	file:	signature:(void *priv, struct wpabuf *buf)
write_nfc_pn531	src/wps/wps_nfc_pn531.c	/^static int write_nfc_pn531(void *data, size_t len)$/;"	f	file:	signature:(void *data, size_t len)
write_pipe	src/drivers/ndis_events.c	/^	HANDLE read_pipe, write_pipe, event_avail;$/;"	m	struct:ndis_events_data	file:	access:public
write_seq_num	src/tls/tlsv1_record.h	/^	u8 write_seq_num[TLS_SEQ_NUM_LEN];$/;"	m	struct:tlsv1_record_layer	access:public
write_ufd	src/wps/wps_ufd.c	/^static int write_ufd(void *priv, struct wpabuf *buf)$/;"	f	file:	signature:(void *priv, struct wpabuf *buf)
writers	src/utils/eloop.c	/^	struct eloop_sock_table writers;$/;"	m	struct:eloop_data	typeref:struct:eloop_data::eloop_sock_table	file:	access:public
wsc_op_code	src/wps/wps.h	/^enum wsc_op_code {$/;"	g
wsec_key_t	src/drivers/driver_broadcom.c	/^typedef wl_wsec_key_t wsec_key_t;$/;"	t	file:
wszDescr	src/drivers/driver_ndis.c	/^	LPWSTR wszDescr;$/;"	m	struct:__anon97	file:	access:public
wszGuid	src/drivers/driver_ndis.c	/^	LPWSTR wszGuid;$/;"	m	struct:__anon94	file:	access:public
wszGuid	src/drivers/driver_ndis.c	/^	LPWSTR wszGuid;$/;"	m	struct:__anon97	file:	access:public
wzc_disabled	src/drivers/driver_ndis.h	/^	int wzc_disabled;$/;"	m	struct:wpa_driver_ndis_data	access:public
x	src/eap_peer/eap_pax.c	/^			u8 x[EAP_PAX_RAND_LEN]; \/* server rand *\/$/;"	m	struct:eap_pax_data::__anon170::__anon171	file:	access:public
x	src/eap_server/eap_server_pax.c	/^			u8 x[EAP_PAX_RAND_LEN]; \/* server rand *\/$/;"	m	struct:eap_pax_data::__anon144::__anon145	file:	access:public
x509_algorithm_identifier	src/tls/x509v3.h	/^struct x509_algorithm_identifier {$/;"	s
x509_algorithm_identifier::oid	src/tls/x509v3.h	/^	struct asn1_oid oid;$/;"	m	struct:x509_algorithm_identifier	typeref:struct:x509_algorithm_identifier::asn1_oid	access:public
x509_certificate	src/tls/x509v3.h	/^struct x509_certificate {$/;"	s
x509_certificate::X509_CERT_V1	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	e	enum:x509_certificate::__anon106
x509_certificate::X509_CERT_V2	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	e	enum:x509_certificate::__anon106
x509_certificate::X509_CERT_V3	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	e	enum:x509_certificate::__anon106
x509_certificate::ca	src/tls/x509v3.h	/^	int ca; \/* cA *\/$/;"	m	struct:x509_certificate	access:public
x509_certificate::cert_len	src/tls/x509v3.h	/^	size_t cert_len;$/;"	m	struct:x509_certificate	access:public
x509_certificate::cert_start	src/tls/x509v3.h	/^	const u8 *cert_start;$/;"	m	struct:x509_certificate	access:public
x509_certificate::extensions_present	src/tls/x509v3.h	/^	unsigned int extensions_present;$/;"	m	struct:x509_certificate	access:public
x509_certificate::issuer	src/tls/x509v3.h	/^	struct x509_name issuer;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_name	access:public
x509_certificate::key_usage	src/tls/x509v3.h	/^	unsigned long key_usage;$/;"	m	struct:x509_certificate	access:public
x509_certificate::next	src/tls/x509v3.h	/^	struct x509_certificate *next;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_certificate	access:public
x509_certificate::not_after	src/tls/x509v3.h	/^	os_time_t not_after;$/;"	m	struct:x509_certificate	access:public
x509_certificate::not_before	src/tls/x509v3.h	/^	os_time_t not_before;$/;"	m	struct:x509_certificate	access:public
x509_certificate::path_len_constraint	src/tls/x509v3.h	/^	unsigned long path_len_constraint; \/* pathLenConstraint *\/$/;"	m	struct:x509_certificate	access:public
x509_certificate::public_key	src/tls/x509v3.h	/^	u8 *public_key;$/;"	m	struct:x509_certificate	access:public
x509_certificate::public_key_alg	src/tls/x509v3.h	/^	struct x509_algorithm_identifier public_key_alg;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_algorithm_identifier	access:public
x509_certificate::public_key_len	src/tls/x509v3.h	/^	size_t public_key_len;$/;"	m	struct:x509_certificate	access:public
x509_certificate::serial_number	src/tls/x509v3.h	/^	unsigned long serial_number;$/;"	m	struct:x509_certificate	access:public
x509_certificate::sign_value	src/tls/x509v3.h	/^	u8 *sign_value;$/;"	m	struct:x509_certificate	access:public
x509_certificate::sign_value_len	src/tls/x509v3.h	/^	size_t sign_value_len;$/;"	m	struct:x509_certificate	access:public
x509_certificate::signature	src/tls/x509v3.h	/^	struct x509_algorithm_identifier signature;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_algorithm_identifier	access:public
x509_certificate::signature_alg	src/tls/x509v3.h	/^	struct x509_algorithm_identifier signature_alg;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_algorithm_identifier	access:public
x509_certificate::subject	src/tls/x509v3.h	/^	struct x509_name subject;$/;"	m	struct:x509_certificate	typeref:struct:x509_certificate::x509_name	access:public
x509_certificate::tbs_cert_len	src/tls/x509v3.h	/^	size_t tbs_cert_len;$/;"	m	struct:x509_certificate	access:public
x509_certificate::tbs_cert_start	src/tls/x509v3.h	/^	const u8 *tbs_cert_start;$/;"	m	struct:x509_certificate	access:public
x509_certificate::version	src/tls/x509v3.h	/^	enum { X509_CERT_V1 = 0, X509_CERT_V2 = 1, X509_CERT_V3 = 2 } version;$/;"	m	struct:x509_certificate	typeref:enum:x509_certificate::__anon106	access:public
x509_certificate_chain_free	src/tls/x509v3.c	/^void x509_certificate_chain_free(struct x509_certificate *cert)$/;"	f	signature:(struct x509_certificate *cert)
x509_certificate_chain_free	src/tls/x509v3.h	/^void x509_certificate_chain_free(struct x509_certificate *cert);$/;"	p	signature:(struct x509_certificate *cert)
x509_certificate_chain_validate	src/tls/x509v3.c	/^int x509_certificate_chain_validate(struct x509_certificate *trusted,$/;"	f	signature:(struct x509_certificate *trusted, struct x509_certificate *chain, int *reason, int disable_time_checks)
x509_certificate_chain_validate	src/tls/x509v3.h	/^int x509_certificate_chain_validate(struct x509_certificate *trusted,$/;"	p	signature:(struct x509_certificate *trusted, struct x509_certificate *chain, int *reason, int disable_time_checks)
x509_certificate_check_signature	src/tls/x509v3.c	/^int x509_certificate_check_signature(struct x509_certificate *issuer,$/;"	f	signature:(struct x509_certificate *issuer, struct x509_certificate *cert)
x509_certificate_check_signature	src/tls/x509v3.h	/^int x509_certificate_check_signature(struct x509_certificate *issuer,$/;"	p	signature:(struct x509_certificate *issuer, struct x509_certificate *cert)
x509_certificate_free	src/tls/x509v3.c	/^void x509_certificate_free(struct x509_certificate *cert)$/;"	f	signature:(struct x509_certificate *cert)
x509_certificate_free	src/tls/x509v3.h	/^void x509_certificate_free(struct x509_certificate *cert);$/;"	p	signature:(struct x509_certificate *cert)
x509_certificate_get_subject	src/tls/x509v3.c	/^x509_certificate_get_subject(struct x509_certificate *chain,$/;"	f	signature:(struct x509_certificate *chain, struct x509_name *name)
x509_certificate_get_subject	src/tls/x509v3.h	/^x509_certificate_get_subject(struct x509_certificate *chain,$/;"	p	signature:(struct x509_certificate *chain, struct x509_name *name)
x509_certificate_parse	src/tls/x509v3.c	/^struct x509_certificate * x509_certificate_parse(const u8 *buf, size_t len)$/;"	f	signature:(const u8 *buf, size_t len)
x509_certificate_parse	src/tls/x509v3.h	/^struct x509_certificate * x509_certificate_parse(const u8 *buf, size_t len);$/;"	p	signature:(const u8 *buf, size_t len)
x509_certificate_self_signed	src/tls/x509v3.c	/^int x509_certificate_self_signed(struct x509_certificate *cert)$/;"	f	signature:(struct x509_certificate *cert)
x509_certificate_self_signed	src/tls/x509v3.h	/^int x509_certificate_self_signed(struct x509_certificate *cert);$/;"	p	signature:(struct x509_certificate *cert)
x509_digest_oid	src/tls/x509v3.c	/^static int x509_digest_oid(struct asn1_oid *oid)$/;"	f	file:	signature:(struct asn1_oid *oid)
x509_free_name	src/tls/x509v3.c	/^static void x509_free_name(struct x509_name *name)$/;"	f	file:	signature:(struct x509_name *name)
x509_id_ce_oid	src/tls/x509v3.c	/^static int x509_id_ce_oid(struct asn1_oid *oid)$/;"	f	file:	signature:(struct asn1_oid *oid)
x509_name	src/tls/x509v3.h	/^struct x509_name {$/;"	s
x509_name::alt_email	src/tls/x509v3.h	/^	char *alt_email; \/* rfc822Name *\/$/;"	m	struct:x509_name	access:public
x509_name::attr	src/tls/x509v3.h	/^	struct x509_name_attr attr[X509_MAX_NAME_ATTRIBUTES];$/;"	m	struct:x509_name	typeref:struct:x509_name::x509_name_attr	access:public
x509_name::dns	src/tls/x509v3.h	/^	char *dns; \/* dNSName *\/$/;"	m	struct:x509_name	access:public
x509_name::email	src/tls/x509v3.h	/^	char *email; \/* emailAddress *\/$/;"	m	struct:x509_name	access:public
x509_name::ip	src/tls/x509v3.h	/^	u8 *ip; \/* iPAddress *\/$/;"	m	struct:x509_name	access:public
x509_name::ip_len	src/tls/x509v3.h	/^	size_t ip_len; \/* IPv4: 4, IPv6: 16 *\/$/;"	m	struct:x509_name	access:public
x509_name::num_attr	src/tls/x509v3.h	/^	size_t num_attr;$/;"	m	struct:x509_name	access:public
x509_name::rid	src/tls/x509v3.h	/^	struct asn1_oid rid; \/* registeredID *\/$/;"	m	struct:x509_name	typeref:struct:x509_name::asn1_oid	access:public
x509_name::uri	src/tls/x509v3.h	/^	char *uri; \/* uniformResourceIdentifier *\/$/;"	m	struct:x509_name	access:public
x509_name_attr	src/tls/x509v3.h	/^struct x509_name_attr {$/;"	s
x509_name_attr::X509_NAME_ATTR_C	src/tls/x509v3.h	/^		X509_NAME_ATTR_C,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_CN	src/tls/x509v3.h	/^		X509_NAME_ATTR_CN,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_DC	src/tls/x509v3.h	/^		X509_NAME_ATTR_DC,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_L	src/tls/x509v3.h	/^		X509_NAME_ATTR_L,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_NOT_USED	src/tls/x509v3.h	/^		X509_NAME_ATTR_NOT_USED,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_O	src/tls/x509v3.h	/^		X509_NAME_ATTR_O,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_OU	src/tls/x509v3.h	/^		X509_NAME_ATTR_OU$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::X509_NAME_ATTR_ST	src/tls/x509v3.h	/^		X509_NAME_ATTR_ST,$/;"	e	enum:x509_name_attr::x509_name_attr_type
x509_name_attr::type	src/tls/x509v3.h	/^	} type;$/;"	m	struct:x509_name_attr	typeref:enum:x509_name_attr::x509_name_attr_type	access:public
x509_name_attr::value	src/tls/x509v3.h	/^	char *value;$/;"	m	struct:x509_name_attr	access:public
x509_name_attr::x509_name_attr_type	src/tls/x509v3.h	/^	enum x509_name_attr_type {$/;"	g	struct:x509_name_attr	access:public
x509_name_attr_str	src/tls/x509v3.c	/^static char * x509_name_attr_str(enum x509_name_attr_type type)$/;"	f	file:	signature:(enum x509_name_attr_type type)
x509_name_attr_type	src/tls/x509v3.h	/^	enum x509_name_attr_type {$/;"	g	struct:x509_name_attr	access:public
x509_name_compare	src/tls/x509v3.c	/^int x509_name_compare(struct x509_name *a, struct x509_name *b)$/;"	f	signature:(struct x509_name *a, struct x509_name *b)
x509_name_compare	src/tls/x509v3.h	/^int x509_name_compare(struct x509_name *a, struct x509_name *b);$/;"	p	signature:(struct x509_name *a, struct x509_name *b)
x509_name_string	src/tls/x509v3.c	/^void x509_name_string(struct x509_name *name, char *buf, size_t len)$/;"	f	signature:(struct x509_name *name, char *buf, size_t len)
x509_name_string	src/tls/x509v3.h	/^void x509_name_string(struct x509_name *name, char *buf, size_t len);$/;"	p	signature:(struct x509_name *name, char *buf, size_t len)
x509_parse_algorithm_identifier	src/tls/x509v3.c	/^static int x509_parse_algorithm_identifier($/;"	f	file:	signature:( const u8 *buf, size_t len, struct x509_algorithm_identifier *id, const u8 **next)
x509_parse_alt_name_dns	src/tls/x509v3.c	/^static int x509_parse_alt_name_dns(struct x509_name *name,$/;"	f	file:	signature:(struct x509_name *name, const u8 *pos, size_t len)
x509_parse_alt_name_ip	src/tls/x509v3.c	/^static int x509_parse_alt_name_ip(struct x509_name *name,$/;"	f	file:	signature:(struct x509_name *name, const u8 *pos, size_t len)
x509_parse_alt_name_rfc8222	src/tls/x509v3.c	/^static int x509_parse_alt_name_rfc8222(struct x509_name *name,$/;"	f	file:	signature:(struct x509_name *name, const u8 *pos, size_t len)
x509_parse_alt_name_rid	src/tls/x509v3.c	/^static int x509_parse_alt_name_rid(struct x509_name *name,$/;"	f	file:	signature:(struct x509_name *name, const u8 *pos, size_t len)
x509_parse_alt_name_uri	src/tls/x509v3.c	/^static int x509_parse_alt_name_uri(struct x509_name *name,$/;"	f	file:	signature:(struct x509_name *name, const u8 *pos, size_t len)
x509_parse_ext_alt_name	src/tls/x509v3.c	/^static int x509_parse_ext_alt_name(struct x509_name *name,$/;"	f	file:	signature:(struct x509_name *name, const u8 *pos, size_t len)
x509_parse_ext_basic_constraints	src/tls/x509v3.c	/^static int x509_parse_ext_basic_constraints(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, const u8 *pos, size_t len)
x509_parse_ext_issuer_alt_name	src/tls/x509v3.c	/^static int x509_parse_ext_issuer_alt_name(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, const u8 *pos, size_t len)
x509_parse_ext_key_usage	src/tls/x509v3.c	/^static int x509_parse_ext_key_usage(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, const u8 *pos, size_t len)
x509_parse_ext_subject_alt_name	src/tls/x509v3.c	/^static int x509_parse_ext_subject_alt_name(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, const u8 *pos, size_t len)
x509_parse_extension	src/tls/x509v3.c	/^static int x509_parse_extension(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, const u8 *pos, size_t len, const u8 **next)
x509_parse_extension_data	src/tls/x509v3.c	/^static int x509_parse_extension_data(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, struct asn1_oid *oid, const u8 *pos, size_t len)
x509_parse_extensions	src/tls/x509v3.c	/^static int x509_parse_extensions(struct x509_certificate *cert,$/;"	f	file:	signature:(struct x509_certificate *cert, const u8 *pos, size_t len)
x509_parse_name	src/tls/x509v3.c	/^static int x509_parse_name(const u8 *buf, size_t len, struct x509_name *name,$/;"	f	file:	signature:(const u8 *buf, size_t len, struct x509_name *name, const u8 **next)
x509_parse_public_key	src/tls/x509v3.c	/^static int x509_parse_public_key(const u8 *buf, size_t len,$/;"	f	file:	signature:(const u8 *buf, size_t len, struct x509_certificate *cert, const u8 **next)
x509_parse_tbs_certificate	src/tls/x509v3.c	/^static int x509_parse_tbs_certificate(const u8 *buf, size_t len,$/;"	f	file:	signature:(const u8 *buf, size_t len, struct x509_certificate *cert, const u8 **next)
x509_parse_time	src/tls/x509v3.c	/^static int x509_parse_time(const u8 *buf, size_t len, u8 asn1_tag,$/;"	f	file:	signature:(const u8 *buf, size_t len, u8 asn1_tag, os_time_t *val)
x509_parse_validity	src/tls/x509v3.c	/^static int x509_parse_validity(const u8 *buf, size_t len,$/;"	f	file:	signature:(const u8 *buf, size_t len, struct x509_certificate *cert, const u8 **next)
x509_pkcs_oid	src/tls/x509v3.c	/^static int x509_pkcs_oid(struct asn1_oid *oid)$/;"	f	file:	signature:(struct asn1_oid *oid)
x509_rsadsi_oid	src/tls/x509v3.c	/^static int x509_rsadsi_oid(struct asn1_oid *oid)$/;"	f	file:	signature:(struct asn1_oid *oid)
x509_sha1_oid	src/tls/x509v3.c	/^static int x509_sha1_oid(struct asn1_oid *oid)$/;"	f	file:	signature:(struct asn1_oid *oid)
x509_sha256_oid	src/tls/x509v3.c	/^static int x509_sha256_oid(struct asn1_oid *oid)$/;"	f	file:	signature:(struct asn1_oid *oid)
x509_str_compare	src/tls/x509v3.c	/^static int x509_str_compare(const char *a, const char *b)$/;"	f	file:	signature:(const char *a, const char *b)
x509_str_strip_whitespace	src/tls/x509v3.c	/^static void x509_str_strip_whitespace(char *a)$/;"	f	file:	signature:(char *a)
x509_valid_issuer	src/tls/x509v3.c	/^static int x509_valid_issuer(const struct x509_certificate *cert)$/;"	f	file:	signature:(const struct x509_certificate *cert)
x509_whitespace	src/tls/x509v3.c	/^static int x509_whitespace(char c)$/;"	f	file:	signature:(char c)
xcred	src/crypto/tls_gnutls.c	/^	gnutls_certificate_credentials_t xcred;$/;"	m	struct:tls_connection	file:	access:public
xcred	src/crypto/tls_gnutls.c	/^	gnutls_certificate_credentials_t xcred;$/;"	m	struct:tls_global	file:	access:public
xid	src/drivers/driver_wired.c	/^	u_int32_t xid;$/;"	m	struct:dhcp_message	file:	access:public
xid_info	src/ap/iapp.c	/^	u8 xid_info[3];$/;"	m	struct:iapp_layer2_update	file:	access:public
xml_add_tagged_data	src/wps/upnp_xml.c	/^void xml_add_tagged_data(struct wpabuf *buf, const char *tag, const char *data)$/;"	f	signature:(struct wpabuf *buf, const char *tag, const char *data)
xml_add_tagged_data	src/wps/upnp_xml.h	/^void xml_add_tagged_data(struct wpabuf *buf, const char *tag,$/;"	p	signature:(struct wpabuf *buf, const char *tag, const char *data)
xml_data_encode	src/wps/upnp_xml.c	/^void xml_data_encode(struct wpabuf *buf, const char *data, int len)$/;"	f	signature:(struct wpabuf *buf, const char *data, int len)
xml_data_encode	src/wps/upnp_xml.h	/^void xml_data_encode(struct wpabuf *buf, const char *data, int len);$/;"	p	signature:(struct wpabuf *buf, const char *data, int len)
xml_get_base64_item	src/wps/upnp_xml.c	/^struct wpabuf * xml_get_base64_item(const char *data, const char *name,$/;"	f	signature:(const char *data, const char *name, enum http_reply_code *ret)
xml_get_base64_item	src/wps/upnp_xml.h	/^struct wpabuf * xml_get_base64_item(const char *data, const char *name,$/;"	p	signature:(const char *data, const char *name, enum http_reply_code *ret)
xml_get_first_item	src/wps/upnp_xml.c	/^char * xml_get_first_item(const char *doc, const char *item)$/;"	f	signature:(const char *doc, const char *item)
xml_get_first_item	src/wps/upnp_xml.h	/^char * xml_get_first_item(const char *doc, const char *item);$/;"	p	signature:(const char *doc, const char *item)
xml_next_tag	src/wps/upnp_xml.c	/^int xml_next_tag(const char *in, const char **out,$/;"	f	signature:(const char *in, const char **out, const char **out_tagname, const char **end)
xml_next_tag	src/wps/upnp_xml.h	/^int xml_next_tag(const char *in, const char **out,$/;"	p	signature:(const char *in, const char **out, const char **out_tagname, const char **end)
xxkey	src/ap/wpa_auth_i.h	/^	u8 xxkey[PMK_LEN]; \/* PSK or the second 256 bits of MSK *\/$/;"	m	struct:wpa_state_machine	access:public
xxkey	src/rsn_supp/wpa_i.h	/^	u8 xxkey[PMK_LEN]; \/* PSK or the second 256 bits of MSK *\/$/;"	m	struct:wpa_sm	access:public
xxkey_len	src/ap/wpa_auth_i.h	/^	size_t xxkey_len;$/;"	m	struct:wpa_state_machine	access:public
xxkey_len	src/rsn_supp/wpa_i.h	/^	size_t xxkey_len;$/;"	m	struct:wpa_sm	access:public
y	src/eap_peer/eap_pax.c	/^			u8 y[EAP_PAX_RAND_LEN]; \/* client rand *\/$/;"	m	struct:eap_pax_data::__anon170::__anon171	file:	access:public
y	src/eap_server/eap_server_pax.c	/^			u8 y[EAP_PAX_RAND_LEN]; \/* client rand *\/$/;"	m	struct:eap_pax_data::__anon144::__anon145	file:	access:public
year	src/utils/os.h	/^	int year; \/* Four digit year *\/$/;"	m	struct:os_tm	access:public
yiaddr	src/drivers/driver_wired.c	/^	u_int32_t yiaddr;$/;"	m	struct:dhcp_message	file:	access:public
