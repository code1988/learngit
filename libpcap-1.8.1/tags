!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-Hoff	msdos/makefile	/^              -Hoff=Behaved           # turn off some optimiser warnings$/;"	m
-Hon	msdos/makefile	/^              -Hon=Recognize_library  # make memcpy\/strlen etc. inline$/;"	m
-Hpragma	msdos/makefile	/^              -Hpragma=Offwarn(491,553,572)$/;"	m
-Hsuffix	msdos/makefile	/^              -Hsuffix=.o32$/;"	m
-file	Makefile	/^	.\/config.status --file=$@.tmp:$(srcdir)\/pcap-config.in$/;"	m
-name-prefix	msdos/makefile	/^            bison --name-prefix=pcap_ --yacc --defines grammar.y$/;"	m
AAL_PARA	atmuni31.h	63;"	d
ADAPTERSNAME_LEN	inet.c	227;"	d	file:
ADDLARCHIVEOBJS	Makefile	/^ADDLARCHIVEOBJS = $/;"	m
ADDLOBJS	Makefile	/^ADDLOBJS = $/;"	m
ADD_PARTY	atmuni31.h	54;"	d
ADD_PARTY_ACK	atmuni31.h	55;"	d
ADD_PARTY_REJ	atmuni31.h	56;"	d
AIRPCAP_HANDLE__EAE405F5_0171_9592_B3C2_C19EC426AD34__DEFINED_	pcap/pcap.h	472;"	d
ANCILLARY	bpf/net/bpf_filter.c	307;"	d	file:
ANCILLARY	net/bpf_filter.c	307;"	d	file:
AR	Makefile	/^AR = ar$/;"	m
ARCTYPE_ARP	arcnet.h	42;"	d
ARCTYPE_ARP_OLD	arcnet.h	38;"	d
ARCTYPE_ATALK	arcnet.h	45;"	d
ARCTYPE_BANIAN	arcnet.h	46;"	d
ARCTYPE_DIAGNOSE	arcnet.h	50;"	d
ARCTYPE_INET6	arcnet.h	49;"	d
ARCTYPE_IP	arcnet.h	41;"	d
ARCTYPE_IPX	arcnet.h	47;"	d
ARCTYPE_IP_OLD	arcnet.h	37;"	d
ARCTYPE_REVARP	arcnet.h	43;"	d
AREAMASK	nametoaddr.c	422;"	d	file:
AREASHIFT	nametoaddr.c	421;"	d	file:
ARGSUSED	pcap-dos.h	66;"	d
ARPHRD_ATM	pcap-linux.c	2994;"	d	file:
ARPHRD_CAN	pcap-linux.c	2959;"	d	file:
ARPHRD_CISCO	pcap-linux.c	3104;"	d	file:
ARPHRD_DLCI	pcap-linux.c	3127;"	d	file:
ARPHRD_FCAL	pcap-linux.c	3172;"	d	file:
ARPHRD_FCFABRIC	pcap-linux.c	3180;"	d	file:
ARPHRD_FCPL	pcap-linux.c	3176;"	d	file:
ARPHRD_FCPP	pcap-linux.c	3168;"	d	file:
ARPHRD_FDDI	pcap-linux.c	2986;"	d	file:
ARPHRD_FRAD	pcap-linux.c	3138;"	d	file:
ARPHRD_IEEE80211	pcap-linux.c	3040;"	d	file:
ARPHRD_IEEE80211_PRISM	pcap-linux.c	3047;"	d	file:
ARPHRD_IEEE80211_RADIOTAP	pcap-linux.c	3054;"	d	file:
ARPHRD_IEEE802154	pcap-linux.c	3277;"	d	file:
ARPHRD_IEEE802_TR	pcap-linux.c	2973;"	d	file:
ARPHRD_IRDA	pcap-linux.c	3243;"	d	file:
ARPHRD_LAPD	pcap-linux.c	3258;"	d	file:
ARPHRD_NETLINK	pcap-linux.c	3284;"	d	file:
ARPHRD_NONE	pcap-linux.c	3266;"	d	file:
ARPHRD_RAWHDLC	pcap-linux.c	3123;"	d	file:
ARPHRD_SIT	pcap-linux.c	3114;"	d	file:
ASM	msdos/makefile	/^ASM    = tasm.exe -t -l -mx -m2 -DDEBUG$/;"	m
ATM_CELL_SIZE	pcap-dag.c	149;"	d	file:
ATM_HDR_SIZE	pcap-dag.c	150;"	d	file:
ATOMELEM	gencode.h	225;"	d
ATOMMASK	gencode.h	224;"	d
AX_ATOM	optimize.c	107;"	d	file:
A_ATOM	optimize.c	99;"	d	file:
A_BCC	gencode.h	147;"	d
A_CALLPROCEED	gencode.h	159;"	d
A_CALLREFTYPE	gencode.h	170;"	d
A_CONNECT	gencode.h	160;"	d
A_CONNECTACK	gencode.h	161;"	d
A_CONNECTMSG	gencode.h	172;"	d
A_GET_UNITS	pcap-dlpi.c	315;"	d	file:
A_ILMIC	gencode.h	151;"	d
A_LANE	gencode.h	154;"	d
A_LLC	gencode.h	155;"	d
A_METAC	gencode.h	146;"	d
A_METACONNECT	gencode.h	175;"	d
A_MSGTYPE	gencode.h	169;"	d
A_OAM	gencode.h	152;"	d
A_OAMF4	gencode.h	153;"	d
A_OAMF4EC	gencode.h	149;"	d
A_OAMF4SC	gencode.h	148;"	d
A_PROMISCON_REQ	pcap-dlpi.c	318;"	d	file:
A_PROTOTYPE	gencode.h	168;"	d
A_RELEASE	gencode.h	162;"	d
A_RELEASE_DONE	gencode.h	163;"	d
A_SC	gencode.h	150;"	d
A_SETUP	gencode.h	158;"	d
A_VCI	gencode.h	167;"	d
A_VPI	gencode.h	166;"	d
Abort	msdos/bin2c.c	/^static void Abort (const char *fmt,...)$/;"	f	file:
AggregationField	pcap-tc.c	/^	PPI_FIELD_AGGREGATION_EXTENSION AggregationField;$/;"	m	struct:_PPI_HEADER	file:
AggregationFieldHeader	pcap-tc.c	/^	PPI_FIELD_HEADER  AggregationFieldHeader;$/;"	m	struct:_PPI_HEADER	file:
BADARG	missing/getopt.c	51;"	d	file:
BADCH	missing/getopt.c	50;"	d	file:
BIGGER_THAN_ALL_MTUS	pcap-linux.c	295;"	d	file:
BITS_PER_WORD	optimize.c	152;"	d	file:
BOND_INFO_QUERY_IOCTL	pcap-linux.c	229;"	d	file:
BOND_INFO_QUERY_IOCTL	pcap-linux.c	231;"	d	file:
BOOL	pcap-dos.h	/^typedef int            BOOL;$/;"	t
BORLAND_OBJ	msdos/makefile	/^BORLAND_OBJ = $(SOURCE:.c=.obj) msdos\\pkt_rx0.obj msdos\\ndis_0.obj$/;"	m
BPF_A	pcap/bpf.h	196;"	d
BPF_ABS	pcap/bpf.h	147;"	d
BPF_ADD	pcap/bpf.h	157;"	d
BPF_ALIGNMENT	pcap/bpf.h	101;"	d
BPF_ALIGNMENT	pcap/bpf.h	99;"	d
BPF_ALU	pcap/bpf.h	134;"	d
BPF_AND	pcap/bpf.h	162;"	d
BPF_B	pcap/bpf.h	143;"	d
BPF_CLASS	pcap/bpf.h	129;"	d
BPF_DIV	pcap/bpf.h	160;"	d
BPF_H	pcap/bpf.h	142;"	d
BPF_IMM	pcap/bpf.h	146;"	d
BPF_IND	pcap/bpf.h	148;"	d
BPF_JA	pcap/bpf.h	174;"	d
BPF_JEQ	pcap/bpf.h	175;"	d
BPF_JGE	pcap/bpf.h	177;"	d
BPF_JGT	pcap/bpf.h	176;"	d
BPF_JMP	pcap/bpf.h	135;"	d
BPF_JSET	pcap/bpf.h	178;"	d
BPF_JUMP	pcap/bpf.h	259;"	d
BPF_K	pcap/bpf.h	191;"	d
BPF_LD	pcap/bpf.h	130;"	d
BPF_LDX	pcap/bpf.h	131;"	d
BPF_LEN	pcap/bpf.h	150;"	d
BPF_LSH	pcap/bpf.h	163;"	d
BPF_MAJOR_VERSION	pcap-int.h	48;"	d
BPF_MEM	pcap/bpf.h	149;"	d
BPF_MEMWORDS	pcap/bpf.h	274;"	d
BPF_MINORS	pcap-bpf.c	101;"	d	file:
BPF_MISC	pcap/bpf.h	137;"	d
BPF_MISCOP	pcap/bpf.h	200;"	d
BPF_MOD	pcap/bpf.h	166;"	d
BPF_MODE	pcap/bpf.h	145;"	d
BPF_MSH	pcap/bpf.h	151;"	d
BPF_MUL	pcap/bpf.h	159;"	d
BPF_NAME	pcap-bpf.c	100;"	d	file:
BPF_NEG	pcap/bpf.h	165;"	d
BPF_NODE	pcap-bpf.c	103;"	d	file:
BPF_OP	pcap/bpf.h	156;"	d
BPF_OR	pcap/bpf.h	161;"	d
BPF_RELEASE	pcap/bpf.h	82;"	d
BPF_RET	pcap/bpf.h	136;"	d
BPF_RSH	pcap/bpf.h	164;"	d
BPF_RVAL	pcap/bpf.h	195;"	d
BPF_SIZE	pcap/bpf.h	140;"	d
BPF_SPECIAL_VLAN_HANDLING	pcap-int.h	279;"	d
BPF_SRC	pcap/bpf.h	190;"	d
BPF_ST	pcap/bpf.h	132;"	d
BPF_STMT	pcap/bpf.h	258;"	d
BPF_STX	pcap/bpf.h	133;"	d
BPF_SUB	pcap/bpf.h	158;"	d
BPF_S_ANC_NONE	bpf/net/bpf_filter.c	/^        BPF_S_ANC_NONE,$/;"	e	enum:__anon2	file:
BPF_S_ANC_NONE	net/bpf_filter.c	/^        BPF_S_ANC_NONE,$/;"	e	enum:__anon9	file:
BPF_S_ANC_VLAN_TAG	bpf/net/bpf_filter.c	/^        BPF_S_ANC_VLAN_TAG,$/;"	e	enum:__anon2	file:
BPF_S_ANC_VLAN_TAG	net/bpf_filter.c	/^        BPF_S_ANC_VLAN_TAG,$/;"	e	enum:__anon9	file:
BPF_S_ANC_VLAN_TAG_PRESENT	bpf/net/bpf_filter.c	/^        BPF_S_ANC_VLAN_TAG_PRESENT,$/;"	e	enum:__anon2	file:
BPF_S_ANC_VLAN_TAG_PRESENT	net/bpf_filter.c	/^        BPF_S_ANC_VLAN_TAG_PRESENT,$/;"	e	enum:__anon9	file:
BPF_TAX	pcap/bpf.h	201;"	d
BPF_TXA	pcap/bpf.h	218;"	d
BPF_W	pcap/bpf.h	141;"	d
BPF_WORDALIGN	pcap/bpf.h	103;"	d
BPF_X	pcap/bpf.h	192;"	d
BPF_XOR	pcap/bpf.h	167;"	d
BSD_AFNUM_INET6_BSD	gencode.c	2972;"	d	file:
BSD_AFNUM_INET6_DARWIN	gencode.c	2974;"	d	file:
BSD_AFNUM_INET6_FREEBSD	gencode.c	2973;"	d	file:
BT_CONTROL_SIZE	pcap-bt-monitor-linux.c	49;"	d	file:
BT_CTRL_SIZE	pcap-bt-linux.c	60;"	d	file:
BT_EPB	sf-pcap-ng.c	158;"	d	file:
BT_IDB	sf-pcap-ng.c	129;"	d	file:
BT_IFACE	pcap-bt-linux.c	59;"	d	file:
BT_PB	sf-pcap-ng.c	182;"	d	file:
BT_SHB	sf-pcap-ng.c	104;"	d	file:
BT_SPB	sf-pcap-ng.c	172;"	d	file:
BUFSPACE	pcap-enet.c	42;"	d	file:
BUFSPACE	pcap-nit.c	65;"	d	file:
BUFSPACE	pcap-pf.c	98;"	d	file:
BUFSPACE	pcap-snit.c	77;"	d	file:
BYTE	pcap-dos.h	/^typedef unsigned char  BYTE;$/;"	t
BYTE_ORDER_MAGIC	sf-pcap-ng.c	117;"	d	file:
B_BEARER	atmuni31.h	68;"	d
B_HIGHER	atmuni31.h	67;"	d
B_LOWER	atmuni31.h	69;"	d
BindingsList	msdos/ndis2.h	/^      } BindingsList;$/;"	t	typeref:struct:_BindingsList
CALLBACK	msdos/ndis2.h	45;"	d
CALLBACK	msdos/ndis2.h	52;"	d
CALLBACK	msdos/ndis2.h	59;"	d
CALLBACK	msdos/ndis2.h	66;"	d
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisIndicationComplete,4$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisReceiveChain,16$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisReceiveLookahead,16$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisRequestConfirm,12$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisStatusProc,12$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisSystemRequest,14$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK _NdisTransmitConfirm,10$/;"	l
CALLBACK	msdos/ndis_0.asm	/^CALLBACK macro callbackProc, argsSize$/;"	m
CALLED_PARTY	atmuni31.h	71;"	d
CALLING_PARTY	atmuni31.h	70;"	d
CALL_PROCEED	atmuni31.h	44;"	d
CALL_REF_POS	atmuni31.h	77;"	d
CAUSE	atmuni31.h	61;"	d
CB_DSEG	msdos/ndis_0.asm	/^  CB_DSEG EQU <CS>                          ; DOSX is tiny-model$/;"	d
CB_DSEG	msdos/ndis_0.asm	/^  CB_DSEG EQU <SEG _DATA>                   ; 16bit is small\/large model$/;"	d
CC	Makefile	/^CC = gcc$/;"	m
CCOPT	Makefile	/^CCOPT =  -fvisibility=hidden -fpic$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2   ${CROSSFLAGS}$/;"	m
CHUNK0SIZE	gencode.c	250;"	d	file:
CHUNKSIZE	dlpisubs.c	29;"	d	file:
CHUNKSIZE	pcap-nit.c	60;"	d	file:
CHUNKSIZE	pcap-snit.c	72;"	d	file:
CLEANFILES	Makefile	/^CLEANFILES = $(OBJ) libpcap.* $(TESTS) \\$/;"	m
CONNECT	atmuni31.h	45;"	d
CONNECT_ACK	atmuni31.h	46;"	d
CONNECT_ID	atmuni31.h	65;"	d
CROSSFLAGS	Makefile	/^CROSSFLAGS=$/;"	m
CSRC	Makefile	/^CSRC =	pcap.c inet.c fad-helpers.c gencode.c optimize.c nametoaddr.c \\$/;"	m
CTRL_TIMEOUT	pcap-usb-linux.c	266;"	d	file:
C_ASSERT	pcap-tc.h	39;"	d
CardHandle	msdos/ndis2.h	/^      } CardHandle;$/;"	t	typeref:struct:_CardHandle
CheckElement	msdos/pktdrvr.c	/^LOCAL __inline BOOL CheckElement (RX_ELEMENT *rx)$/;"	f
CheckMacFeatures	msdos/ndis2.c	/^static int CheckMacFeatures (CardHandle *card)$/;"	f	file:
CommonChars	msdos/ndis2.h	/^      } CommonChars;$/;"	t	typeref:struct:_CommonChars
DAG_MAX_BOARDS	pcap-dag.c	53;"	d	file:
DEBUG0	msdos/ndis2.c	214;"	d	file:
DEBUG0	msdos/ndis2.c	220;"	d	file:
DEBUG1	msdos/ndis2.c	215;"	d	file:
DEBUG1	msdos/ndis2.c	221;"	d	file:
DEBUG2	msdos/ndis2.c	216;"	d	file:
DEBUG2	msdos/ndis2.c	222;"	d	file:
DEBUG_RING	msdos/ndis2.c	203;"	d	file:
DEBUG_STRING_LENGTH	msdos/ndis2.c	65;"	d	file:
DEFAULT_BUFSIZE	pcap-bpf.c	1605;"	d	file:
DEFAULT_BUFSIZE	pcap-bpf.c	1607;"	d	file:
DEFS	Makefile	/^DEFS = -DBUILDING_PCAP -DHAVE_CONFIG_H  -D_U_="__attribute__((unused))"$/;"	m
DEFS	msdos/makefile	/^DEFS   = -DMSDOS -DDEBUG -DNDIS_DEBUG -D_U_= -Dinline= \\$/;"	m
DEPENDENCY_CFLAG	Makefile	/^DEPENDENCY_CFLAG = $/;"	m
DIAG_IN_PROGRESS	msdos/ndis2.h	/^        DIAG_IN_PROGRESS        = 0x0020$/;"	e	enum:__anon24
DIM	msdos/pktdrvr.c	34;"	d	file:
DJGPP	pcap-dos.h	33;"	d
DLT_A429	pcap/dlt.h	660;"	d
DLT_A653_ICM	pcap/dlt.h	667;"	d
DLT_AIRONET_HEADER	pcap-bpf.c	234;"	d	file:
DLT_AIRONET_HEADER	pcap/dlt.h	293;"	d
DLT_AOS	pcap/dlt.h	915;"	d
DLT_APPLE_IP_OVER_IEEE1394	pcap/dlt.h	455;"	d
DLT_ARCNET	pcap/dlt.h	73;"	d
DLT_ARCNET_LINUX	pcap/dlt.h	423;"	d
DLT_ATM_CLIP	pcap/dlt.h	143;"	d
DLT_ATM_RFC1483	pcap/dlt.h	87;"	d
DLT_AURORA	pcap/dlt.h	393;"	d
DLT_AX25	pcap/dlt.h	69;"	d
DLT_AX25_KISS	pcap/dlt.h	797;"	d
DLT_BACNET_MS_TP	pcap/dlt.h	559;"	d
DLT_BLUETOOTH_BREDR_BB	pcap/dlt.h	1211;"	d
DLT_BLUETOOTH_HCI_H4	pcap/dlt.h	693;"	d
DLT_BLUETOOTH_HCI_H4_WITH_PHDR	pcap/dlt.h	788;"	d
DLT_BLUETOOTH_LE_LL	pcap/dlt.h	1182;"	d
DLT_BLUETOOTH_LE_LL_WITH_PHDR	pcap/dlt.h	1216;"	d
DLT_BLUETOOTH_LINUX_MONITOR	pcap/dlt.h	1205;"	d
DLT_CAN20B	pcap/dlt.h	714;"	d
DLT_CAN_SOCKETCAN	pcap/dlt.h	1003;"	d
DLT_CHAOS	pcap/dlt.h	71;"	d
DLT_CHDLC	pcap/dlt.h	202;"	d
DLT_CHOICE	pcap.c	1141;"	d	file:
DLT_CHOICE_SENTINEL	pcap.c	1142;"	d	file:
DLT_CISCO_IOS	pcap/dlt.h	280;"	d
DLT_CLASS	pcap/dlt.h	1326;"	d
DLT_CLASS_NETBSD_RAWAF	pcap/dlt.h	1335;"	d
DLT_C_HDLC	pcap/dlt.h	201;"	d
DLT_C_HDLC_WITH_DIR	pcap/dlt.h	813;"	d
DLT_DBUS	pcap/dlt.h	1035;"	d
DLT_DECT	pcap/dlt.h	904;"	d
DLT_DOCSIS	pcap-bpf.c	223;"	d	file:
DLT_DOCSIS	pcap-pf.c	294;"	d	file:
DLT_DOCSIS	pcap/dlt.h	469;"	d
DLT_DVB_CI	pcap/dlt.h	1055;"	d
DLT_ECONET	pcap/dlt.h	265;"	d
DLT_EN10MB	pcap/dlt.h	67;"	d
DLT_EN3MB	pcap/dlt.h	68;"	d
DLT_ENC	pcap/dlt.h	240;"	d
DLT_ENC	pcap/dlt.h	242;"	d
DLT_EPON	pcap/dlt.h	1278;"	d
DLT_ERF	pcap/dlt.h	761;"	d
DLT_ERF_ETH	pcap/dlt.h	617;"	d
DLT_ERF_POS	pcap/dlt.h	618;"	d
DLT_FC_2	pcap/dlt.h	930;"	d
DLT_FC_2_WITH_FRAME_DELIMS	pcap/dlt.h	944;"	d
DLT_FDDI	pcap/dlt.h	76;"	d
DLT_FLEXRAY	pcap/dlt.h	832;"	d
DLT_FRELAY	pcap/dlt.h	219;"	d
DLT_FRELAY_WITH_DIR	pcap/dlt.h	814;"	d
DLT_GCOM_SERIAL	pcap/dlt.h	602;"	d
DLT_GCOM_T1E1	pcap/dlt.h	601;"	d
DLT_GPF_F	pcap/dlt.h	595;"	d
DLT_GPF_T	pcap/dlt.h	594;"	d
DLT_GPRS_LLC	pcap/dlt.h	593;"	d
DLT_GSMTAP_ABIS	pcap/dlt.h	885;"	d
DLT_GSMTAP_UM	pcap/dlt.h	884;"	d
DLT_HHDLC	pcap/dlt.h	358;"	d
DLT_IBM_SN	pcap/dlt.h	492;"	d
DLT_IBM_SP	pcap/dlt.h	491;"	d
DLT_IEEE802	pcap/dlt.h	72;"	d
DLT_IEEE802_11	pcap/dlt.h	204;"	d
DLT_IEEE802_11_RADIO	pcap-bpf.c	237;"	d	file:
DLT_IEEE802_11_RADIO	pcap/dlt.h	400;"	d
DLT_IEEE802_11_RADIO_AVS	pcap-bpf.c	240;"	d	file:
DLT_IEEE802_11_RADIO_AVS	pcap/dlt.h	546;"	d
DLT_IEEE802_15_4	pcap/dlt.h	748;"	d
DLT_IEEE802_15_4_LINUX	pcap/dlt.h	720;"	d
DLT_IEEE802_15_4_NOFCS	pcap/dlt.h	1017;"	d
DLT_IEEE802_15_4_NONASK_PHY	pcap/dlt.h	869;"	d
DLT_IEEE802_16_MAC_CPS	pcap/dlt.h	699;"	d
DLT_IEEE802_16_MAC_CPS_RADIO	pcap/dlt.h	732;"	d
DLT_INFINIBAND	pcap/dlt.h	1153;"	d
DLT_IPFILTER	pcap/dlt.h	270;"	d
DLT_IPMB	pcap/dlt.h	775;"	d
DLT_IPMB_LINUX	pcap/dlt.h	826;"	d
DLT_IPMI_HPM_2	pcap/dlt.h	1284;"	d
DLT_IPNET	pcap/dlt.h	992;"	d
DLT_IPOIB	pcap/dlt.h	1110;"	d
DLT_IPV4	pcap/dlt.h	1009;"	d
DLT_IPV6	pcap/dlt.h	1010;"	d
DLT_IP_OVER_FC	pcap/dlt.h	369;"	d
DLT_ISO_14443	pcap/dlt.h	1301;"	d
DLT_IS_NETBSD_RAWAF	pcap/dlt.h	1338;"	d
DLT_JUNIPER_ATM1	pcap/dlt.h	438;"	d
DLT_JUNIPER_ATM2	pcap/dlt.h	436;"	d
DLT_JUNIPER_ATM_CEMIC	pcap/dlt.h	1074;"	d
DLT_JUNIPER_CHDLC	pcap/dlt.h	638;"	d
DLT_JUNIPER_ES	pcap/dlt.h	433;"	d
DLT_JUNIPER_ETHER	pcap/dlt.h	635;"	d
DLT_JUNIPER_FIBRECHANNEL	pcap/dlt.h	1043;"	d
DLT_JUNIPER_FRELAY	pcap/dlt.h	637;"	d
DLT_JUNIPER_GGSN	pcap/dlt.h	434;"	d
DLT_JUNIPER_ISM	pcap/dlt.h	740;"	d
DLT_JUNIPER_MFR	pcap/dlt.h	435;"	d
DLT_JUNIPER_MLFR	pcap/dlt.h	432;"	d
DLT_JUNIPER_MLPPP	pcap/dlt.h	431;"	d
DLT_JUNIPER_MONITOR	pcap/dlt.h	554;"	d
DLT_JUNIPER_PIC_PEER	pcap/dlt.h	609;"	d
DLT_JUNIPER_PPP	pcap/dlt.h	636;"	d
DLT_JUNIPER_PPPOE	pcap/dlt.h	590;"	d
DLT_JUNIPER_PPPOE_ATM	pcap/dlt.h	591;"	d
DLT_JUNIPER_SERVICES	pcap/dlt.h	437;"	d
DLT_JUNIPER_SRX_E2E	pcap/dlt.h	1042;"	d
DLT_JUNIPER_ST	pcap/dlt.h	782;"	d
DLT_JUNIPER_VP	pcap/dlt.h	651;"	d
DLT_JUNIPER_VS	pcap/dlt.h	1041;"	d
DLT_LAPB_WITH_DIR	pcap/dlt.h	815;"	d
DLT_LAPD	pcap/dlt.h	804;"	d
DLT_LIN	pcap/dlt.h	846;"	d
DLT_LINUX_EVDEV	pcap/dlt.h	877;"	d
DLT_LINUX_IRDA	pcap/dlt.h	486;"	d
DLT_LINUX_LAPD	pcap/dlt.h	626;"	d
DLT_LINUX_PPP_WITHDIRECTION	pcap/dlt.h	582;"	d
DLT_LINUX_SLL	pcap/dlt.h	255;"	d
DLT_LOOP	pcap/dlt.h	229;"	d
DLT_LOOP	pcap/dlt.h	231;"	d
DLT_LTALK	pcap/dlt.h	260;"	d
DLT_MATCHING_MAX	pcap/dlt.h	1317;"	d
DLT_MATCHING_MAX	pcap/dlt.h	1319;"	d
DLT_MATCHING_MIN	pcap/dlt.h	185;"	d
DLT_MFR	pcap/dlt.h	643;"	d
DLT_MOST	pcap/dlt.h	839;"	d
DLT_MPEG_2_TS	pcap/dlt.h	1117;"	d
DLT_MPLS	pcap/dlt.h	892;"	d
DLT_MTP2	pcap/dlt.h	462;"	d
DLT_MTP2_WITH_PHDR	pcap/dlt.h	461;"	d
DLT_MTP3	pcap/dlt.h	463;"	d
DLT_MUX27010	pcap/dlt.h	1062;"	d
DLT_NETANALYZER	pcap/dlt.h	1092;"	d
DLT_NETANALYZER_TRANSPARENT	pcap/dlt.h	1103;"	d
DLT_NETBSD_RAWAF	pcap/dlt.h	1336;"	d
DLT_NETBSD_RAWAF_AF	pcap/dlt.h	1337;"	d
DLT_NETLINK	pcap/dlt.h	1200;"	d
DLT_NFC_LLCP	pcap/dlt.h	1135;"	d
DLT_NFLOG	pcap/dlt.h	1082;"	d
DLT_NG40	pcap/dlt.h	1125;"	d
DLT_NULL	pcap/dlt.h	66;"	d
DLT_PCI_EXP	pcap/dlt.h	392;"	d
DLT_PFLOG	pcap/dlt.h	275;"	d
DLT_PFSYNC	pcap/dlt.h	1145;"	d
DLT_PFSYNC	pcap/dlt.h	140;"	d
DLT_PFSYNC	pcap/dlt.h	356;"	d
DLT_PKTAP	pcap/dlt.h	1268;"	d
DLT_PKTAP	pcap/dlt.h	1270;"	d
DLT_PPI	pcap/dlt.h	726;"	d
DLT_PPP	pcap/dlt.h	75;"	d
DLT_PPP_BSDOS	pcap/dlt.h	104;"	d
DLT_PPP_BSDOS	pcap/dlt.h	108;"	d
DLT_PPP_ETHER	pcap/dlt.h	157;"	d
DLT_PPP_PPPD	pcap/dlt.h	575;"	d
DLT_PPP_SERIAL	pcap/dlt.h	156;"	d
DLT_PPP_WITH_DIR	pcap/dlt.h	812;"	d
DLT_PPP_WITH_DIRECTION	pcap/dlt.h	581;"	d
DLT_PRISM_HEADER	pcap-bpf.c	231;"	d	file:
DLT_PRISM_HEADER	pcap/dlt.h	287;"	d
DLT_PROFIBUS_DL	pcap/dlt.h	1221;"	d
DLT_PRONET	pcap/dlt.h	70;"	d
DLT_RAIF1	pcap/dlt.h	768;"	d
DLT_RAW	pcap/dlt.h	90;"	d
DLT_RAW	pcap/dlt.h	92;"	d
DLT_RDS	pcap/dlt.h	1307;"	d
DLT_REDBACK_SMARTEDGE	pcap/dlt.h	149;"	d
DLT_RIO	pcap/dlt.h	391;"	d
DLT_RTAC_SERIAL	pcap-common.c	926;"	d	file:
DLT_RTAC_SERIAL	pcap/dlt.h	1175;"	d
DLT_SCCP	pcap/dlt.h	464;"	d
DLT_SCTP	pcap/dlt.h	1160;"	d
DLT_SITA	pcap/dlt.h	754;"	d
DLT_SLIP	pcap/dlt.h	74;"	d
DLT_SLIP_BSDOS	pcap/dlt.h	103;"	d
DLT_SLIP_BSDOS	pcap/dlt.h	107;"	d
DLT_STANAG_5066_D_PDU	pcap/dlt.h	1068;"	d
DLT_SUNATM	pcap/dlt.h	385;"	d
DLT_SYMANTEC_FIREWALL	pcap/dlt.h	166;"	d
DLT_TZSP	pcap/dlt.h	410;"	d
DLT_USB	pcap/dlt.h	687;"	d
DLT_USBPCAP	pcap/dlt.h	1167;"	d
DLT_USB_FREEBSD	pcap/dlt.h	686;"	d
DLT_USB_LINUX	pcap/dlt.h	705;"	d
DLT_USB_LINUX_MMAPPED	pcap/dlt.h	898;"	d
DLT_USER0	pcap/dlt.h	519;"	d
DLT_USER1	pcap/dlt.h	520;"	d
DLT_USER10	pcap/dlt.h	529;"	d
DLT_USER11	pcap/dlt.h	530;"	d
DLT_USER12	pcap/dlt.h	531;"	d
DLT_USER13	pcap/dlt.h	532;"	d
DLT_USER14	pcap/dlt.h	533;"	d
DLT_USER15	pcap/dlt.h	534;"	d
DLT_USER2	pcap/dlt.h	521;"	d
DLT_USER3	pcap/dlt.h	522;"	d
DLT_USER4	pcap/dlt.h	523;"	d
DLT_USER5	pcap/dlt.h	524;"	d
DLT_USER6	pcap/dlt.h	525;"	d
DLT_USER7	pcap/dlt.h	526;"	d
DLT_USER8	pcap/dlt.h	527;"	d
DLT_USER9	pcap/dlt.h	528;"	d
DLT_WATTSTOPPER_DLM	pcap/dlt.h	1296;"	d
DLT_WIHART	pcap/dlt.h	924;"	d
DLT_WIRESHARK_UPPER_PDU	pcap/dlt.h	1195;"	d
DLT_X2E_SERIAL	pcap/dlt.h	852;"	d
DLT_X2E_XORAYA	pcap/dlt.h	858;"	d
DLT_ZWAVE_R1_R2	pcap/dlt.h	1289;"	d
DLT_ZWAVE_R3	pcap/dlt.h	1290;"	d
DL_IPATM	dlpisubs.c	19;"	d	file:
DL_IPATM	pcap-dlpi.c	307;"	d	file:
DOS4GW	pcap-dos.h	34;"	d
DOSX	pcap-dos.h	37;"	d
DOSX	pcap-dos.h	38;"	d
DOSX	pcap-dos.h	42;"	d
DOSX	pcap-dos.h	43;"	d
DOSX	pcap-dos.h	48;"	d
DOSX	pcap-dos.h	49;"	d
DOSX	pcap-dos.h	69;"	d
DOS_ADDR	msdos/pktdrvr.c	138;"	d	file:
DOS_ADDR	msdos/pktdrvr.c	160;"	d	file:
DOS_ADDR	msdos/pktdrvr.c	179;"	d	file:
DPMI_regs	msdos/pktdrvr.c	/^  struct DPMI_regs {$/;"	s	file:
DRIVER_PATH	pcap-bpf.c	102;"	d	file:
DROP_PARTY	atmuni31.h	57;"	d
DROP_PARTY_ACK	atmuni31.h	58;"	d
DWORD	pcap-dos.h	/^typedef unsigned long  DWORD;$/;"	t
DYEXT	Makefile	/^DYEXT = so$/;"	m
D_END	msdos/ndis_0.asm	/^  D_END   EQU <_DATA ENDS>$/;"	d
D_END	msdos/ndis_0.asm	/^  D_END   EQU <_TEXT ENDS>$/;"	d
D_END	msdos/ndis_0.asm	/^D_END$/;"	l
D_END	msdos/pkt_rx0.asm	/^  D_END   EQU <_DATA ENDS>$/;"	d
D_END	msdos/pkt_rx0.asm	/^  D_END   EQU <_TEXT ENDS>$/;"	d
D_END	msdos/pkt_rx0.asm	/^D_END$/;"	l
D_SEG	msdos/ndis_0.asm	/^  D_SEG   EQU <_DATA SEGMENT>$/;"	d
D_SEG	msdos/ndis_0.asm	/^  D_SEG   EQU <_TEXT SEGMENT>$/;"	d
D_SEG	msdos/ndis_0.asm	/^D_SEG$/;"	l
D_SEG	msdos/pkt_rx0.asm	/^  D_SEG   EQU <_DATA SEGMENT>$/;"	d
D_SEG	msdos/pkt_rx0.asm	/^  D_SEG   EQU <_TEXT SEGMENT>$/;"	d
D_SEG	msdos/pkt_rx0.asm	/^D_SEG$/;"	l
DllMain	pcap-win32.c	/^BOOL WINAPI DllMain($/;"	f
Dot3Field	pcap-tc.c	/^	PPI_FIELD_802_3_EXTENSION Dot3Field;$/;"	m	struct:_PPI_HEADER	file:
Dot3FieldHeader	pcap-tc.c	/^	PPI_FIELD_HEADER  Dot3FieldHeader;$/;"	m	struct:_PPI_HEADER	file:
EAVESDROPPING_RULE	pcap-dbus.c	151;"	d	file:
EISA_bus	pcap-dos.c	/^int EISA_bus = 0;  \/* Where is natural place for this? *\/$/;"	v
EMSG	missing/getopt.c	52;"	d	file:
ENDING_CHAR	pcap-new.c	212;"	d	file:
ENDPT_REF	atmuni31.h	62;"	d
ENDT_FDDI	pcap-pf.c	367;"	d	file:
ENQUEUE	msdos/pkt_rx0.asm	/^ENQUEUE  MACRO$/;"	m
ERR_ALREADY_REGISTERED	msdos/ndis2.h	/^        ERR_ALREADY_REGISTERED           = 0x2C,$/;"	e	enum:__anon31
ERR_ALREADY_STARTED	msdos/ndis2.h	/^        ERR_ALREADY_STARTED              = 0x20,$/;"	e	enum:__anon31
ERR_BUFFER_TOO_SMALL	msdos/ndis2.h	/^        ERR_BUFFER_TOO_SMALL             = 0x0D,$/;"	e	enum:__anon31
ERR_CONFIGURATION_FAILURE	msdos/ndis2.h	/^        ERR_CONFIGURATION_FAILURE        = 0x25,$/;"	e	enum:__anon31
ERR_DRIVER_NOT_INITIALIZED	msdos/ndis2.h	/^        ERR_DRIVER_NOT_INITIALIZED       = 0x22,$/;"	e	enum:__anon31
ERR_FORWARD_FRAME	msdos/ndis2.h	/^        ERR_FORWARD_FRAME                = 0x05,$/;"	e	enum:__anon31
ERR_FRAME_NOT_RECOGNIZED	msdos/ndis2.h	/^        ERR_FRAME_NOT_RECOGNIZED         = 0x03,$/;"	e	enum:__anon31
ERR_FRAME_REJECTED	msdos/ndis2.h	/^        ERR_FRAME_REJECTED               = 0x04,$/;"	e	enum:__anon31
ERR_GENERAL_FAILURE	msdos/ndis2.h	/^        ERR_GENERAL_FAILURE              = 0xFF$/;"	e	enum:__anon31
ERR_HARDWARE_ERROR	msdos/ndis2.h	/^        ERR_HARDWARE_ERROR               = 0x0A,$/;"	e	enum:__anon31
ERR_HARDWARE_FAILURE	msdos/ndis2.h	/^        ERR_HARDWARE_FAILURE             = 0x24,$/;"	e	enum:__anon31
ERR_HARDWARE_NOT_FOUND	msdos/ndis2.h	/^        ERR_HARDWARE_NOT_FOUND           = 0x23,$/;"	e	enum:__anon31
ERR_INCOMPATIBLE_MAC	msdos/ndis2.h	/^        ERR_INCOMPATIBLE_MAC             = 0x27,$/;"	e	enum:__anon31
ERR_INCOMPATIBLE_OS_VERSION	msdos/ndis2.h	/^        ERR_INCOMPATIBLE_OS_VERSION      = 0x2B,$/;"	e	enum:__anon31
ERR_INCOMPLETE_BINDING	msdos/ndis2.h	/^        ERR_INCOMPLETE_BINDING           = 0x21,$/;"	e	enum:__anon31
ERR_INFO_NOT_FOUND	msdos/ndis2.h	/^        ERR_INFO_NOT_FOUND               = 0x2F,$/;"	e	enum:__anon31
ERR_INITIALIZATION_FAILED	msdos/ndis2.h	/^        ERR_INITIALIZATION_FAILED        = 0x28,$/;"	e	enum:__anon31
ERR_INSUFFICIENT_MEMORY	msdos/ndis2.h	/^        ERR_INSUFFICIENT_MEMORY          = 0x2E,$/;"	e	enum:__anon31
ERR_INTERRUPT_CONFLICT	msdos/ndis2.h	/^        ERR_INTERRUPT_CONFLICT           = 0x26,$/;"	e	enum:__anon31
ERR_INVALID_FUNCTION	msdos/ndis2.h	/^        ERR_INVALID_FUNCTION             = 0x08,$/;"	e	enum:__anon31
ERR_INVALID_PARAMETER	msdos/ndis2.h	/^        ERR_INVALID_PARAMETER            = 0x07,$/;"	e	enum:__anon31
ERR_NETWORK_MAY_NOT_BE_CONNECTED	msdos/ndis2.h	/^        ERR_NETWORK_MAY_NOT_BE_CONNECTED = 0x2A,$/;"	e	enum:__anon31
ERR_NOT_SUPPORTED	msdos/ndis2.h	/^        ERR_NOT_SUPPORTED                = 0x09,$/;"	e	enum:__anon31
ERR_NO_BINDING	msdos/ndis2.h	/^        ERR_NO_BINDING                   = 0x29,$/;"	e	enum:__anon31
ERR_NO_SUCH_DESTINATION	msdos/ndis2.h	/^        ERR_NO_SUCH_DESTINATION          = 0x0C,$/;"	e	enum:__anon31
ERR_OUT_OF_RESOURCE	msdos/ndis2.h	/^        ERR_OUT_OF_RESOURCE              = 0x06,$/;"	e	enum:__anon31
ERR_PATH_NOT_FOUND	msdos/ndis2.h	/^        ERR_PATH_NOT_FOUND               = 0x2D,$/;"	e	enum:__anon31
ERR_REQUEST_QUEUED	msdos/ndis2.h	/^        ERR_REQUEST_QUEUED               = 0x02,$/;"	e	enum:__anon31
ERR_SUCCESS	msdos/ndis2.h	/^        ERR_SUCCESS                      = 0x00,$/;"	e	enum:__anon31
ERR_TRANSMIT_ERROR	msdos/ndis2.h	/^        ERR_TRANSMIT_ERROR               = 0x0B,$/;"	e	enum:__anon31
ERR_WAIT_FOR_RELEASE	msdos/ndis2.h	/^        ERR_WAIT_FOR_RELEASE             = 0x01,$/;"	e	enum:__anon31
ETHER	pcap-dos.h	/^typedef BYTE           ETHER[6];$/;"	t
ETHERMTU	gencode.c	150;"	d	file:
ETHERTYPE_8021AD	ethertype.h	116;"	d
ETHERTYPE_8021Q	ethertype.h	95;"	d
ETHERTYPE_8021QINQ	ethertype.h	122;"	d
ETHERTYPE_AARP	ethertype.h	92;"	d
ETHERTYPE_ARP	ethertype.h	41;"	d
ETHERTYPE_ATALK	ethertype.h	89;"	d
ETHERTYPE_DECDNS	ethertype.h	77;"	d
ETHERTYPE_DECDTS	ethertype.h	80;"	d
ETHERTYPE_DN	ethertype.h	62;"	d
ETHERTYPE_IP	ethertype.h	38;"	d
ETHERTYPE_IPV6	ethertype.h	101;"	d
ETHERTYPE_IPX	ethertype.h	98;"	d
ETHERTYPE_LANBRIDGE	ethertype.h	74;"	d
ETHERTYPE_LAT	ethertype.h	65;"	d
ETHERTYPE_LOOPBACK	ethertype.h	119;"	d
ETHERTYPE_MOPDL	ethertype.h	56;"	d
ETHERTYPE_MOPRC	ethertype.h	59;"	d
ETHERTYPE_MPLS	ethertype.h	104;"	d
ETHERTYPE_MPLS_MULTI	ethertype.h	107;"	d
ETHERTYPE_NS	ethertype.h	47;"	d
ETHERTYPE_PPPOED	ethertype.h	110;"	d
ETHERTYPE_PPPOES	ethertype.h	113;"	d
ETHERTYPE_PUP	ethertype.h	35;"	d
ETHERTYPE_REVARP	ethertype.h	44;"	d
ETHERTYPE_REVARP	ethertype.h	71;"	d
ETHERTYPE_SCA	ethertype.h	68;"	d
ETHERTYPE_SPRITE	ethertype.h	50;"	d
ETHERTYPE_TEB	gencode.c	153;"	d	file:
ETHERTYPE_TRAIL	ethertype.h	53;"	d
ETHERTYPE_VEXP	ethertype.h	83;"	d
ETHERTYPE_VPROD	ethertype.h	86;"	d
ETH_ALEN	pcap-dos.h	21;"	d
ETH_HLEN	pcap-dos.h	22;"	d
ETH_MAX	pcap-dos.h	25;"	d
ETH_MIN	pcap-dos.h	24;"	d
ETH_MTU	pcap-dos.h	23;"	d
EXTRACT_	pcap-common.c	1178;"	d	file:
EXTRACT_16BITS	extract.h	/^EXTRACT_16BITS(const void *p)$/;"	f
EXTRACT_16BITS	extract.h	122;"	d
EXTRACT_24BITS	extract.h	167;"	d
EXTRACT_32BITS	extract.h	/^EXTRACT_32BITS(const void *p)$/;"	f
EXTRACT_32BITS	extract.h	125;"	d
EXTRACT_40BITS	extract.h	172;"	d
EXTRACT_48BITS	extract.h	179;"	d
EXTRACT_56BITS	extract.h	187;"	d
EXTRACT_64BITS	extract.h	/^EXTRACT_64BITS(const void *p)$/;"	f
EXTRACT_64BITS	extract.h	130;"	d
EXTRACT_LE_16BITS	extract.h	201;"	d
EXTRACT_LE_24BITS	extract.h	209;"	d
EXTRACT_LE_32BITS	extract.h	204;"	d
EXTRACT_LE_64BITS	extract.h	213;"	d
EXTRACT_LE_8BITS	extract.h	200;"	d
EXTRACT_LONG	bpf/net/bpf_filter.c	107;"	d	file:
EXTRACT_LONG	bpf/net/bpf_filter.c	113;"	d	file:
EXTRACT_LONG	net/bpf_filter.c	107;"	d	file:
EXTRACT_LONG	net/bpf_filter.c	113;"	d	file:
EXTRACT_SHORT	bpf/net/bpf_filter.c	106;"	d	file:
EXTRACT_SHORT	bpf/net/bpf_filter.c	109;"	d	file:
EXTRACT_SHORT	net/bpf_filter.c	106;"	d	file:
EXTRACT_SHORT	net/bpf_filter.c	109;"	d	file:
EXTRA_DIST	Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisAllocStack         : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisFreeStack          : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisIndicationComplete : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisReceiveChain       : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisReceiveLookahead   : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisRequestConfirm     : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisStatusProc         : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisSystemRequest      : near$/;"	l
EXTRN	msdos/ndis_0.asm	/^EXTRN _NdisTransmitConfirm    : near$/;"	l
Errors	pcap-tc.c	/^	ULONG		Errors;$/;"	m	struct:_PPI_FIELD_802_3_EXTENSION	file:
EthernetIIHeader	msdos/ndis2.h	/^      } EthernetIIHeader;$/;"	t	typeref:struct:_EthernetIIHeader
F	optimize.c	/^F(opt_state_t *opt_state, int code, int v0, int v1)$/;"	f	file:
FALSE	pcap-dos.h	29;"	d
FAR	msdos/ndis2.h	49;"	d
FAR	msdos/ndis2.h	56;"	d
FAR	msdos/ndis2.h	63;"	d
FAR	msdos/ndis2.h	70;"	d
FIELD_BEGIN_POS	atmuni31.h	85;"	d
FILTER_BROADCAST	msdos/ndis2.h	/^        FILTER_BROADCAST        = 2,$/;"	e	enum:__anon26
FILTER_DIRECTED	msdos/ndis2.h	/^        FILTER_DIRECTED         = 1,$/;"	e	enum:__anon26
FILTER_PROMISCUOUS	msdos/ndis2.h	/^        FILTER_PROMISCUOUS      = 4,$/;"	e	enum:__anon26
FILTER_SOURCE_ROUTE	msdos/ndis2.h	/^        FILTER_SOURCE_ROUTE     = 8$/;"	e	enum:__anon26
FIND	pcap-sita.c	52;"	d	file:
FIRST_RX_BUF	msdos/pktdrvr.c	105;"	d	file:
FIRST_RX_BUF	msdos/pktdrvr.c	118;"	d	file:
FLUSHK	pcap-dos.c	54;"	d	file:
FLUSHK	pcap-dos.c	70;"	d	file:
FMESQUITA_TCPDUMP_MAGIC	sf-pcap.c	97;"	d	file:
FORMAT_STRING	portability.h	72;"	d
FORMAT_STRING	portability.h	74;"	d
FORMAT_STRING	portability.h	77;"	d
FP_OFF	msdos/pktdrvr.c	135;"	d	file:
FP_OFF	msdos/pktdrvr.c	136;"	d	file:
FP_SEG	msdos/pktdrvr.c	134;"	d	file:
FP_SEG	msdos/pktdrvr.c	137;"	d	file:
FSRC	Makefile	/^FSRC =  fad-getad.c$/;"	m
FULL_CFLAGS	Makefile	/^FULL_CFLAGS = $(CCOPT) $(INCLS) $(DEFS) $(CFLAGS)$/;"	m
FailingModules	msdos/ndis2.h	/^      } FailingModules;$/;"	t	typeref:struct:_FailingModules
FddiHeader	msdos/ndis2.h	/^      } FddiHeader;$/;"	t	typeref:struct:_FddiHeader
Flags	pcap-tc.c	/^	ULONG		Flags;$/;"	m	struct:_PPI_FIELD_802_3_EXTENSION	file:
FreePortList	pcap-tc.c	/^	TcFcnFreePortList			FreePortList;$/;"	m	struct:_TC_FUNCTIONS	file:
GENEVE_PORT	gencode.c	172;"	d	file:
GENHDR	Makefile	/^GENHDR = \\$/;"	m
GENSRC	Makefile	/^GENSRC = scanner.c grammar.c bpf_filter.c version.c$/;"	m
GET_RELEASE_BUFSIZE	pcap-dlpi.c	159;"	d	file:
GUARD	msdos/ndis2.h	47;"	d
GUARD	msdos/ndis2.h	54;"	d
GUARD	msdos/ndis2.h	61;"	d
GUARD	msdos/ndis2.h	68;"	d
H	msdos/makefile	/^              -I$(WATT_INC) -I. -I.\\msdos\\pm_drvr -H=$(TEMP)\\bcc.sym$/;"	m
HARDWARE_FAILED_CONFIG	msdos/ndis2.h	/^        HARDWARE_FAILED_CONFIG  = 2,$/;"	e	enum:__anon24
HARDWARE_FAILED_DIAG	msdos/ndis2.h	/^        HARDWARE_FAILED_DIAG    = 1,$/;"	e	enum:__anon24
HARDWARE_HARD_FAULT	msdos/ndis2.h	/^        HARDWARE_HARD_FAULT     = 3,$/;"	e	enum:__anon24
HARDWARE_MASK	msdos/ndis2.h	/^        HARDWARE_MASK           = 0x0007,$/;"	e	enum:__anon24
HARDWARE_NOT_INSTALLED	msdos/ndis2.h	/^        HARDWARE_NOT_INSTALLED  = 0,$/;"	e	enum:__anon24
HARDWARE_OK	msdos/ndis2.h	/^        HARDWARE_OK             = 7,$/;"	e	enum:__anon24
HARDWARE_SOFT_FAULT	msdos/ndis2.h	/^        HARDWARE_SOFT_FAULT     = 4,$/;"	e	enum:__anon24
HAVE_BSD_IEEE80211	pcap-bpf.c	183;"	d	file:
HAVE_DECL_ETHER_HOSTTON	config.h	27;"	d
HAVE_ETHER_HOSTTON	config.h	36;"	d
HAVE_FSEEKO	config.h	39;"	d
HAVE_INTTYPES_H	config.h	51;"	d
HAVE_LIMITS_H	config.h	72;"	d
HAVE_LINUX_ETHTOOL_H	config.h	78;"	d
HAVE_LINUX_IF_BONDING_H	config.h	81;"	d
HAVE_LINUX_IF_PACKET_H	config.h	84;"	d
HAVE_LINUX_NET_TSTAMP_H	config.h	87;"	d
HAVE_LINUX_SOCKIOS_H	config.h	90;"	d
HAVE_LINUX_TPACKET_AUXDATA_TP_VLAN_TCI	config.h	93;"	d
HAVE_LINUX_TYPES_H	config.h	96;"	d
HAVE_LINUX_USBDEVICE_FS_H	config.h	99;"	d
HAVE_LINUX_WIRELESS_H	config.h	102;"	d
HAVE_MEMORY_H	config.h	105;"	d
HAVE_NETINET_ETHER_H	config.h	108;"	d
HAVE_NETINET_IF_ETHER_H	config.h	111;"	d
HAVE_NETPACKET_PACKET_H	config.h	117;"	d
HAVE_PACKET_AUXDATA	pcap-linux.c	186;"	d	file:
HAVE_PACKET_RING	pcap-linux.c	196;"	d	file:
HAVE_PF_PACKET_SOCKETS	pcap-linux.c	184;"	d	file:
HAVE_SNPRINTF	config.h	138;"	d
HAVE_SNPRINTF	portability.h	103;"	d
HAVE_SOCKADDR_STORAGE	config.h	144;"	d
HAVE_SOCKLEN_T	config.h	147;"	d
HAVE_STDINT_H	config.h	153;"	d
HAVE_STDLIB_H	config.h	156;"	d
HAVE_STRERROR	config.h	159;"	d
HAVE_STRINGS_H	config.h	162;"	d
HAVE_STRING_H	config.h	165;"	d
HAVE_STRTOK_R	config.h	171;"	d
HAVE_SYS_BITYPES_H	config.h	180;"	d
HAVE_SYS_SELECT_H	config.h	192;"	d
HAVE_SYS_STAT_H	config.h	198;"	d
HAVE_SYS_TYPES_H	config.h	201;"	d
HAVE_TPACKET2	pcap-linux.c	201;"	d	file:
HAVE_TPACKET3	pcap-linux.c	198;"	d	file:
HAVE_TPACKET_STATS	config.h	207;"	d
HAVE_UNISTD_H	config.h	210;"	d
HAVE_USBDEVFS_CTRLTRANSFER_BREQUESTTYPE	config.h	213;"	d
HAVE_VSNPRINTF	config.h	216;"	d
HAVE___ATTRIBUTE__	config.h	222;"	d
HDR	Makefile	/^HDR = $(PUBHDR) \\$/;"	m
HDR_LENGTH	pcap-netfilter-linux.c	70;"	d	file:
HEADER_SIZE	pcap-sita.c	945;"	d	file:
HIGHC_OBJ	msdos/makefile	/^HIGHC_OBJ   = $(SOURCE:.c=.o32) msdos\\pkt_rx0.o32$/;"	m
HardwareAddress	msdos/ndis2.h	/^      } HardwareAddress;$/;"	t	typeref:union:_HardwareAddress
IEEE80211_CTL_SUBTYPE_NAMES	ieee80211.h	122;"	d
IEEE80211_DATA_SUBTYPE_NAMES	ieee80211.h	133;"	d
IEEE80211_FC0_SUBTYPE_ACK	ieee80211.h	68;"	d
IEEE80211_FC0_SUBTYPE_ASSOC_REQ	ieee80211.h	53;"	d
IEEE80211_FC0_SUBTYPE_ASSOC_RESP	ieee80211.h	54;"	d
IEEE80211_FC0_SUBTYPE_ATIM	ieee80211.h	60;"	d
IEEE80211_FC0_SUBTYPE_AUTH	ieee80211.h	62;"	d
IEEE80211_FC0_SUBTYPE_BEACON	ieee80211.h	59;"	d
IEEE80211_FC0_SUBTYPE_CF_ACK	ieee80211.h	73;"	d
IEEE80211_FC0_SUBTYPE_CF_ACPL	ieee80211.h	75;"	d
IEEE80211_FC0_SUBTYPE_CF_END	ieee80211.h	69;"	d
IEEE80211_FC0_SUBTYPE_CF_END_ACK	ieee80211.h	70;"	d
IEEE80211_FC0_SUBTYPE_CF_POLL	ieee80211.h	74;"	d
IEEE80211_FC0_SUBTYPE_CTS	ieee80211.h	67;"	d
IEEE80211_FC0_SUBTYPE_DATA	ieee80211.h	72;"	d
IEEE80211_FC0_SUBTYPE_DEAUTH	ieee80211.h	63;"	d
IEEE80211_FC0_SUBTYPE_DISASSOC	ieee80211.h	61;"	d
IEEE80211_FC0_SUBTYPE_MASK	ieee80211.h	50;"	d
IEEE80211_FC0_SUBTYPE_NODATA	ieee80211.h	76;"	d
IEEE80211_FC0_SUBTYPE_NODATA_CF_ACK	ieee80211.h	77;"	d
IEEE80211_FC0_SUBTYPE_NODATA_CF_ACPL	ieee80211.h	79;"	d
IEEE80211_FC0_SUBTYPE_NODATA_CF_POLL	ieee80211.h	78;"	d
IEEE80211_FC0_SUBTYPE_PROBE_REQ	ieee80211.h	57;"	d
IEEE80211_FC0_SUBTYPE_PROBE_RESP	ieee80211.h	58;"	d
IEEE80211_FC0_SUBTYPE_PS_POLL	ieee80211.h	65;"	d
IEEE80211_FC0_SUBTYPE_QOS	ieee80211.h	80;"	d
IEEE80211_FC0_SUBTYPE_QOS_NULL	ieee80211.h	81;"	d
IEEE80211_FC0_SUBTYPE_REASSOC_REQ	ieee80211.h	55;"	d
IEEE80211_FC0_SUBTYPE_REASSOC_RESP	ieee80211.h	56;"	d
IEEE80211_FC0_SUBTYPE_RTS	ieee80211.h	66;"	d
IEEE80211_FC0_SUBTYPE_SHIFT	ieee80211.h	51;"	d
IEEE80211_FC0_TYPE_CTL	ieee80211.h	47;"	d
IEEE80211_FC0_TYPE_DATA	ieee80211.h	48;"	d
IEEE80211_FC0_TYPE_MASK	ieee80211.h	44;"	d
IEEE80211_FC0_TYPE_MGT	ieee80211.h	46;"	d
IEEE80211_FC0_TYPE_SHIFT	ieee80211.h	45;"	d
IEEE80211_FC0_VERSION_0	ieee80211.h	43;"	d
IEEE80211_FC0_VERSION_MASK	ieee80211.h	41;"	d
IEEE80211_FC0_VERSION_SHIFT	ieee80211.h	42;"	d
IEEE80211_FC1_DIR_DSTODS	ieee80211.h	87;"	d
IEEE80211_FC1_DIR_FROMDS	ieee80211.h	86;"	d
IEEE80211_FC1_DIR_MASK	ieee80211.h	83;"	d
IEEE80211_FC1_DIR_NODS	ieee80211.h	84;"	d
IEEE80211_FC1_DIR_TODS	ieee80211.h	85;"	d
IEEE80211_FC1_MORE_DATA	ieee80211.h	92;"	d
IEEE80211_FC1_MORE_FRAG	ieee80211.h	89;"	d
IEEE80211_FC1_ORDER	ieee80211.h	94;"	d
IEEE80211_FC1_PWR_MGT	ieee80211.h	91;"	d
IEEE80211_FC1_RETRY	ieee80211.h	90;"	d
IEEE80211_FC1_WEP	ieee80211.h	93;"	d
IEEE80211_MGT_SUBTYPE_NAMES	ieee80211.h	111;"	d
IEEE80211_NWID_LEN	ieee80211.h	101;"	d
IEEE80211_QOS_ACKPOLICY	ieee80211.h	105;"	d
IEEE80211_QOS_ACKPOLICY_S	ieee80211.h	106;"	d
IEEE80211_QOS_ESOP	ieee80211.h	107;"	d
IEEE80211_QOS_ESOP_S	ieee80211.h	108;"	d
IEEE80211_QOS_TID	ieee80211.h	109;"	d
IEEE80211_QOS_TXOP	ieee80211.h	103;"	d
IEEE80211_SEQ_FRAG_MASK	ieee80211.h	96;"	d
IEEE80211_SEQ_FRAG_SHIFT	ieee80211.h	97;"	d
IEEE80211_SEQ_SEQ_MASK	ieee80211.h	98;"	d
IEEE80211_SEQ_SEQ_SHIFT	ieee80211.h	99;"	d
IEEE80211_TYPE_NAMES	ieee80211.h	144;"	d
IE_BEGIN_POS	atmuni31.h	80;"	d
IFF_CANTCHANGE	Win32/Include/net/if.h	102;"	d
IFM_ULIST_TYPE	pcap-bpf.c	192;"	d	file:
IFM_ULIST_TYPE	pcap-bpf.c	194;"	d	file:
IFNAMSIZ	Win32/Include/net/if.h	157;"	d
IFNET_SLOWHZ	Win32/Include/net/if.h	107;"	d
IFQ_MAXLEN	Win32/Include/net/if.h	106;"	d
IF_DESCRIPTION	sf-pcap-ng.c	142;"	d	file:
IF_EUIADDR	sf-pcap-ng.c	146;"	d	file:
IF_FCSLEN	sf-pcap-ng.c	152;"	d	file:
IF_FILTER	sf-pcap-ng.c	150;"	d	file:
IF_IPV4ADDR	sf-pcap-ng.c	143;"	d	file:
IF_IPV6ADDR	sf-pcap-ng.c	144;"	d	file:
IF_MACADDR	sf-pcap-ng.c	145;"	d	file:
IF_NAME	sf-pcap-ng.c	141;"	d	file:
IF_NAMESIZE	inet.c	88;"	d	file:
IF_OS	sf-pcap-ng.c	151;"	d	file:
IF_SPEED	sf-pcap-ng.c	147;"	d	file:
IF_TSOFFSET	sf-pcap-ng.c	153;"	d	file:
IF_TSRESOL	sf-pcap-ng.c	148;"	d	file:
IF_TZONE	sf-pcap-ng.c	149;"	d	file:
INCLS	Makefile	/^INCLS = -I. $/;"	m
INET6	config.h	225;"	d
INSN_COUNT	tests/valgrindtest.c	271;"	d	file:
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INTERFACE_NAME	pcap-bt-monitor-linux.c	50;"	d	file:
INT_MAX	fad-helpers.c	71;"	d	file:
INT_MAX	pcap-dlpi.c	115;"	d	file:
INT_MAX	sockutils.c	60;"	d	file:
INVALID_SOCKET	remote-ext.h	450;"	d
INVALID_SOCKET	sockutils.h	85;"	d
IOP_SNIFFER_PORT	pcap-sita.c	47;"	d	file:
IOPname	pcap-sita.c	/^	char		*IOPname;	\/* this interface's name on an IOP *\/$/;"	m	struct:iface	file:
IPH_AF_INET	pcap/ipnet.h	39;"	d
IPH_AF_INET6	pcap/ipnet.h	40;"	d
IPNET_INBOUND	pcap/ipnet.h	43;"	d
IPNET_OUTBOUND	pcap/ipnet.h	42;"	d
IPPROTO_AH	gencode.c	5101;"	d	file:
IPPROTO_CARP	gencode.c	5039;"	d	file:
IPPROTO_DSTOPTS	gencode.c	166;"	d	file:
IPPROTO_ESP	gencode.c	5110;"	d	file:
IPPROTO_FRAGMENT	gencode.c	163;"	d	file:
IPPROTO_HOPOPTS	gencode.c	157;"	d	file:
IPPROTO_ICMPV6	gencode.c	5094;"	d	file:
IPPROTO_IGMP	gencode.c	5006;"	d	file:
IPPROTO_IGRP	gencode.c	5014;"	d	file:
IPPROTO_PIM	gencode.c	5021;"	d	file:
IPPROTO_ROUTING	gencode.c	160;"	d	file:
IPPROTO_SCTP	gencode.c	169;"	d	file:
IPPROTO_VRRP	gencode.c	5031;"	d	file:
IPTOSBUFFERS	tests/findalldevstest.c	150;"	d	file:
ISA_64_BIT	pcap-linux.c	3875;"	d	file:
ISA_64_BIT	pcap-linux.c	3877;"	d	file:
ISA_64_BIT	pcap-linux.c	3879;"	d	file:
ISA_64_BIT	pcap-linux.c	3881;"	d	file:
ISA_64_BIT	pcap-linux.c	3883;"	d	file:
ISA_64_BIT	pcap-linux.c	3885;"	d	file:
ISIS_L1_CSNP	nlpid.h	46;"	d
ISIS_L1_LAN_IIH	nlpid.h	41;"	d
ISIS_L1_LSP	nlpid.h	44;"	d
ISIS_L1_PSNP	nlpid.h	48;"	d
ISIS_L2_CSNP	nlpid.h	47;"	d
ISIS_L2_LAN_IIH	nlpid.h	42;"	d
ISIS_L2_LSP	nlpid.h	45;"	d
ISIS_L2_PSNP	nlpid.h	49;"	d
ISIS_PTP_IIH	nlpid.h	43;"	d
ISLOOPBACK	fad-helpers.c	83;"	d	file:
ISLOOPBACK	fad-helpers.c	85;"	d	file:
ISO10589_ISIS	nlpid.h	34;"	d
ISO10747_IDRP	nlpid.h	55;"	d
ISO8473_CLNP	nlpid.h	25;"	d
ISO8878A_CONS	nlpid.h	52;"	d
ISO9542X25_ESIS	nlpid.h	31;"	d
ISO9542_ESIS	nlpid.h	28;"	d
ISRUNNING	fad-helpers.c	96;"	d	file:
ISRUNNING	fad-helpers.c	98;"	d	file:
ISUP	fad-helpers.c	90;"	d	file:
ISUP	fad-helpers.c	92;"	d	file:
IS_AT_LEAST_GNUC_VERSION	pcap/export-defs.h	53;"	d
IS_BIGENDIAN	pcap-dag.c	202;"	d	file:
Ieee802Dot2SnapHeader	msdos/ndis2.h	/^      } Ieee802Dot2SnapHeader;$/;"	t	typeref:struct:_Ieee802Dot2SnapHeader
Ieee802Dot5Header	msdos/ndis2.h	/^      } Ieee802Dot5Header;$/;"	t	typeref:struct:_Ieee802Dot5Header
InstanceClose	pcap-tc.c	/^	TcFcnInstanceClose			InstanceClose;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceGetReceiveWaitHandle	pcap-tc.c	/^	TcFcnInstanceGetReceiveWaitHandle InstanceGetReceiveWaitHandle;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceOpenByName	pcap-tc.c	/^	TcFcnInstanceOpenByName		InstanceOpenByName;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceQueryFeature	pcap-tc.c	/^	TcFcnInstanceQueryFeature	InstanceQueryFeature;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceQueryStatistics	pcap-tc.c	/^	TcFcnInstanceQueryStatistics InstanceQueryStatistics;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceReceivePackets	pcap-tc.c	/^	TcFcnInstanceReceivePackets	InstanceReceivePackets;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceSetFeature	pcap-tc.c	/^	TcFcnInstanceSetFeature		InstanceSetFeature;$/;"	m	struct:_TC_FUNCTIONS	file:
InstanceTransmitPackets	pcap-tc.c	/^	TcFcnInstanceTransmitPackets InstanceTransmitPackets;$/;"	m	struct:_TC_FUNCTIONS	file:
InterfaceId	pcap-tc.c	/^	ULONG		InterfaceId;$/;"	m	struct:_PPI_FIELD_AGGREGATION_EXTENSION	file:
JF	gencode.h	395;"	d
JMP	gencode.c	178;"	d	file:
JT	gencode.h	394;"	d
K	optimize.c	123;"	d	file:
KUZNETZOV_TCPDUMP_MAGIC	sf-pcap.c	91;"	d	file:
LAST_OFS	msdos/pkt_rx0.asm	/^ LAST_OFS      = offset \$$/;"	d
LAST_OFS	msdos/pkt_rx1.s	/^ LAST_OFS   equ  \$$/;"	d
LAST_RX_BUF	msdos/pktdrvr.c	106;"	d	file:
LAST_RX_BUF	msdos/pktdrvr.c	119;"	d	file:
LBL_ALIGN	bpf/net/bpf_filter.c	97;"	d	file:
LBL_ALIGN	net/bpf_filter.c	97;"	d	file:
LD	Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS =  ${CROSSFLAGS}$/;"	m
LEN_POS	atmuni31.h	84;"	d
LEX	Makefile	/^LEX = flex$/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LINKTYPE_A429	pcap-common.c	422;"	d	file:
LINKTYPE_A653_ICM	pcap-common.c	429;"	d	file:
LINKTYPE_AOS	pcap-common.c	668;"	d	file:
LINKTYPE_APPLE_IP_OVER_IEEE1394	pcap-common.c	248;"	d	file:
LINKTYPE_ARCNET_BSD	pcap-common.c	126;"	d	file:
LINKTYPE_ARCNET_LINUX	pcap-common.c	231;"	d	file:
LINKTYPE_ATM_CLIP	pcap-common.c	177;"	d	file:
LINKTYPE_ATM_RFC1483	pcap-common.c	158;"	d	file:
LINKTYPE_AURORA	pcap-common.c	217;"	d	file:
LINKTYPE_AX25	pcap-common.c	122;"	d	file:
LINKTYPE_AX25_KISS	pcap-common.c	550;"	d	file:
LINKTYPE_BACNET_MS_TP	pcap-common.c	328;"	d	file:
LINKTYPE_BLUETOOTH_BREDR_BB	pcap-common.c	962;"	d	file:
LINKTYPE_BLUETOOTH_HCI_H4	pcap-common.c	448;"	d	file:
LINKTYPE_BLUETOOTH_HCI_H4_WITH_PHDR	pcap-common.c	541;"	d	file:
LINKTYPE_BLUETOOTH_LE_LL	pcap-common.c	933;"	d	file:
LINKTYPE_BLUETOOTH_LE_LL_WITH_PHDR	pcap-common.c	967;"	d	file:
LINKTYPE_BLUETOOTH_LINUX_MONITOR	pcap-common.c	956;"	d	file:
LINKTYPE_CAN20B	pcap-common.c	469;"	d	file:
LINKTYPE_CAN_SOCKETCAN	pcap-common.c	756;"	d	file:
LINKTYPE_CHAOS	pcap-common.c	124;"	d	file:
LINKTYPE_CISCO_IOS	pcap-common.c	199;"	d	file:
LINKTYPE_C_HDLC	pcap-common.c	175;"	d	file:
LINKTYPE_C_HDLC_WITH_DIR	pcap-common.c	566;"	d	file:
LINKTYPE_DBUS	pcap-common.c	788;"	d	file:
LINKTYPE_DECT	pcap-common.c	657;"	d	file:
LINKTYPE_DOCSIS	pcap-common.c	255;"	d	file:
LINKTYPE_DVB_CI	pcap-common.c	808;"	d	file:
LINKTYPE_ECONET	pcap-common.c	191;"	d	file:
LINKTYPE_ENC	pcap-common.c	180;"	d	file:
LINKTYPE_EPON	pcap-common.c	1000;"	d	file:
LINKTYPE_ERF	pcap-common.c	514;"	d	file:
LINKTYPE_ERF_ETH	pcap-common.c	379;"	d	file:
LINKTYPE_ERF_POS	pcap-common.c	380;"	d	file:
LINKTYPE_ETHERNET	pcap-common.c	120;"	d	file:
LINKTYPE_EXP_ETHERNET	pcap-common.c	121;"	d	file:
LINKTYPE_FC_2	pcap-common.c	683;"	d	file:
LINKTYPE_FC_2_WITH_FRAME_DELIMS	pcap-common.c	697;"	d	file:
LINKTYPE_FDDI	pcap-common.c	129;"	d	file:
LINKTYPE_FLEXRAY	pcap-common.c	585;"	d	file:
LINKTYPE_FRELAY	pcap-common.c	178;"	d	file:
LINKTYPE_FRELAY_WITH_DIR	pcap-common.c	567;"	d	file:
LINKTYPE_GCOM_SERIAL	pcap-common.c	364;"	d	file:
LINKTYPE_GCOM_T1E1	pcap-common.c	363;"	d	file:
LINKTYPE_GPF_F	pcap-common.c	357;"	d	file:
LINKTYPE_GPF_T	pcap-common.c	356;"	d	file:
LINKTYPE_GPRS_LLC	pcap-common.c	355;"	d	file:
LINKTYPE_GSMTAP_ABIS	pcap-common.c	638;"	d	file:
LINKTYPE_GSMTAP_UM	pcap-common.c	637;"	d	file:
LINKTYPE_HDLC	pcap-common.c	187;"	d	file:
LINKTYPE_HHDLC	pcap-common.c	206;"	d	file:
LINKTYPE_HIPPI	pcap-common.c	186;"	d	file:
LINKTYPE_IBM_SN	pcap-common.c	263;"	d	file:
LINKTYPE_IBM_SP	pcap-common.c	262;"	d	file:
LINKTYPE_IEEE802_11	pcap-common.c	176;"	d	file:
LINKTYPE_IEEE802_11_AIRONET	pcap-common.c	201;"	d	file:
LINKTYPE_IEEE802_11_AVS	pcap-common.c	315;"	d	file:
LINKTYPE_IEEE802_11_PRISM	pcap-common.c	200;"	d	file:
LINKTYPE_IEEE802_11_RADIOTAP	pcap-common.c	219;"	d	file:
LINKTYPE_IEEE802_15_4	pcap-common.c	501;"	d	file:
LINKTYPE_IEEE802_15_4_LINUX	pcap-common.c	475;"	d	file:
LINKTYPE_IEEE802_15_4_NOFCS	pcap-common.c	770;"	d	file:
LINKTYPE_IEEE802_15_4_NONASK_PHY	pcap-common.c	622;"	d	file:
LINKTYPE_IEEE802_16_MAC_CPS	pcap-common.c	454;"	d	file:
LINKTYPE_IEEE802_16_MAC_CPS_RADIO	pcap-common.c	487;"	d	file:
LINKTYPE_IEEE802_5	pcap-common.c	125;"	d	file:
LINKTYPE_INFINIBAND	pcap-common.c	904;"	d	file:
LINKTYPE_IPFILTER	pcap-common.c	196;"	d	file:
LINKTYPE_IPMB	pcap-common.c	528;"	d	file:
LINKTYPE_IPMB_LINUX	pcap-common.c	579;"	d	file:
LINKTYPE_IPMI_HPM_2	pcap-common.c	1006;"	d	file:
LINKTYPE_IPNET	pcap-common.c	745;"	d	file:
LINKTYPE_IPOIB	pcap-common.c	861;"	d	file:
LINKTYPE_IPV4	pcap-common.c	762;"	d	file:
LINKTYPE_IPV6	pcap-common.c	763;"	d	file:
LINKTYPE_IP_OVER_FC	pcap-common.c	208;"	d	file:
LINKTYPE_ISO_14443	pcap-common.c	1023;"	d	file:
LINKTYPE_JUNIPER_ATM1	pcap-common.c	246;"	d	file:
LINKTYPE_JUNIPER_ATM2	pcap-common.c	244;"	d	file:
LINKTYPE_JUNIPER_ATM_CEMIC	pcap-common.c	826;"	d	file:
LINKTYPE_JUNIPER_CHDLC	pcap-common.c	400;"	d	file:
LINKTYPE_JUNIPER_ES	pcap-common.c	241;"	d	file:
LINKTYPE_JUNIPER_ETHER	pcap-common.c	397;"	d	file:
LINKTYPE_JUNIPER_FIBRECHANNEL	pcap-common.c	796;"	d	file:
LINKTYPE_JUNIPER_FRELAY	pcap-common.c	399;"	d	file:
LINKTYPE_JUNIPER_GGSN	pcap-common.c	242;"	d	file:
LINKTYPE_JUNIPER_ISM	pcap-common.c	495;"	d	file:
LINKTYPE_JUNIPER_MFR	pcap-common.c	243;"	d	file:
LINKTYPE_JUNIPER_MLFR	pcap-common.c	240;"	d	file:
LINKTYPE_JUNIPER_MLPPP	pcap-common.c	239;"	d	file:
LINKTYPE_JUNIPER_MONITOR	pcap-common.c	323;"	d	file:
LINKTYPE_JUNIPER_PIC_PEER	pcap-common.c	371;"	d	file:
LINKTYPE_JUNIPER_PPP	pcap-common.c	398;"	d	file:
LINKTYPE_JUNIPER_PPPOE	pcap-common.c	352;"	d	file:
LINKTYPE_JUNIPER_PPPOE_ATM	pcap-common.c	353;"	d	file:
LINKTYPE_JUNIPER_SERVICES	pcap-common.c	245;"	d	file:
LINKTYPE_JUNIPER_SRX_E2E	pcap-common.c	795;"	d	file:
LINKTYPE_JUNIPER_ST	pcap-common.c	535;"	d	file:
LINKTYPE_JUNIPER_VP	pcap-common.c	413;"	d	file:
LINKTYPE_JUNIPER_VS	pcap-common.c	794;"	d	file:
LINKTYPE_LANE8023	pcap-common.c	185;"	d	file:
LINKTYPE_LAPB_WITH_DIR	pcap-common.c	568;"	d	file:
LINKTYPE_LAPD	pcap-common.c	557;"	d	file:
LINKTYPE_LIN	pcap-common.c	599;"	d	file:
LINKTYPE_LINUX_EVDEV	pcap-common.c	630;"	d	file:
LINKTYPE_LINUX_IRDA	pcap-common.c	257;"	d	file:
LINKTYPE_LINUX_LAPD	pcap-common.c	388;"	d	file:
LINKTYPE_LINUX_SLL	pcap-common.c	189;"	d	file:
LINKTYPE_LOOP	pcap-common.c	179;"	d	file:
LINKTYPE_LTALK	pcap-common.c	190;"	d	file:
LINKTYPE_MATCHING_MAX	pcap-common.c	1031;"	d	file:
LINKTYPE_MATCHING_MIN	pcap-common.c	173;"	d	file:
LINKTYPE_MFR	pcap-common.c	405;"	d	file:
LINKTYPE_MOST	pcap-common.c	592;"	d	file:
LINKTYPE_MPEG_2_TS	pcap-common.c	868;"	d	file:
LINKTYPE_MPLS	pcap-common.c	645;"	d	file:
LINKTYPE_MTP2	pcap-common.c	251;"	d	file:
LINKTYPE_MTP2_WITH_PHDR	pcap-common.c	250;"	d	file:
LINKTYPE_MTP3	pcap-common.c	252;"	d	file:
LINKTYPE_MUX27010	pcap-common.c	814;"	d	file:
LINKTYPE_NETANALYZER	pcap-common.c	844;"	d	file:
LINKTYPE_NETANALYZER_TRANSPARENT	pcap-common.c	854;"	d	file:
LINKTYPE_NETLINK	pcap-common.c	951;"	d	file:
LINKTYPE_NFC_LLCP	pcap-common.c	886;"	d	file:
LINKTYPE_NFLOG	pcap-common.c	834;"	d	file:
LINKTYPE_NG40	pcap-common.c	876;"	d	file:
LINKTYPE_NULL	pcap-common.c	119;"	d	file:
LINKTYPE_PCI_EXP	pcap-common.c	216;"	d	file:
LINKTYPE_PFLOG	pcap-common.c	198;"	d	file:
LINKTYPE_PFSYNC	pcap-common.c	897;"	d	file:
LINKTYPE_PKTAP	pcap-common.c	993;"	d	file:
LINKTYPE_PPI	pcap-common.c	481;"	d	file:
LINKTYPE_PPP	pcap-common.c	128;"	d	file:
LINKTYPE_PPP_BSDOS	pcap-common.c	161;"	d	file:
LINKTYPE_PPP_ETHER	pcap-common.c	148;"	d	file:
LINKTYPE_PPP_HDLC	pcap-common.c	146;"	d	file:
LINKTYPE_PPP_PPPD	pcap-common.c	344;"	d	file:
LINKTYPE_PPP_WITH_DIR	pcap-common.c	565;"	d	file:
LINKTYPE_PROFIBUS_DL	pcap-common.c	972;"	d	file:
LINKTYPE_PRONET	pcap-common.c	123;"	d	file:
LINKTYPE_RAIF1	pcap-common.c	521;"	d	file:
LINKTYPE_RAW	pcap-common.c	159;"	d	file:
LINKTYPE_RDS	pcap-common.c	1029;"	d	file:
LINKTYPE_RIO	pcap-common.c	215;"	d	file:
LINKTYPE_SCCP	pcap-common.c	253;"	d	file:
LINKTYPE_SCTP	pcap-common.c	911;"	d	file:
LINKTYPE_SITA	pcap-common.c	507;"	d	file:
LINKTYPE_SLIP	pcap-common.c	127;"	d	file:
LINKTYPE_SLIP_BSDOS	pcap-common.c	160;"	d	file:
LINKTYPE_STANAG_5066_D_PDU	pcap-common.c	820;"	d	file:
LINKTYPE_SUNATM	pcap-common.c	209;"	d	file:
LINKTYPE_SYMANTEC_FIREWALL	pcap-common.c	150;"	d	file:
LINKTYPE_TZSP	pcap-common.c	229;"	d	file:
LINKTYPE_USBPCAP	pcap-common.c	918;"	d	file:
LINKTYPE_USB_FREEBSD	pcap-common.c	442;"	d	file:
LINKTYPE_USB_LINUX	pcap-common.c	460;"	d	file:
LINKTYPE_USB_LINUX_MMAPPED	pcap-common.c	651;"	d	file:
LINKTYPE_USER0	pcap-common.c	291;"	d	file:
LINKTYPE_USER1	pcap-common.c	292;"	d	file:
LINKTYPE_USER10	pcap-common.c	301;"	d	file:
LINKTYPE_USER11	pcap-common.c	302;"	d	file:
LINKTYPE_USER12	pcap-common.c	303;"	d	file:
LINKTYPE_USER13	pcap-common.c	304;"	d	file:
LINKTYPE_USER14	pcap-common.c	305;"	d	file:
LINKTYPE_USER15	pcap-common.c	306;"	d	file:
LINKTYPE_USER2	pcap-common.c	293;"	d	file:
LINKTYPE_USER3	pcap-common.c	294;"	d	file:
LINKTYPE_USER4	pcap-common.c	295;"	d	file:
LINKTYPE_USER5	pcap-common.c	296;"	d	file:
LINKTYPE_USER6	pcap-common.c	297;"	d	file:
LINKTYPE_USER7	pcap-common.c	298;"	d	file:
LINKTYPE_USER8	pcap-common.c	299;"	d	file:
LINKTYPE_USER9	pcap-common.c	300;"	d	file:
LINKTYPE_WATTSTOPPER_DLM	pcap-common.c	1018;"	d	file:
LINKTYPE_WIHART	pcap-common.c	677;"	d	file:
LINKTYPE_WIRESHARK_UPPER_PDU	pcap-common.c	946;"	d	file:
LINKTYPE_X2E_SERIAL	pcap-common.c	605;"	d	file:
LINKTYPE_X2E_XORAYA	pcap-common.c	611;"	d	file:
LINKTYPE_ZWAVE_R1_R2	pcap-common.c	1011;"	d	file:
LINKTYPE_ZWAVE_R3	pcap-common.c	1012;"	d	file:
LINUX_SLL_BROADCAST	pcap/sll.h	98;"	d
LINUX_SLL_HOST	pcap/sll.h	97;"	d
LINUX_SLL_MULTICAST	pcap/sll.h	99;"	d
LINUX_SLL_OTHERHOST	pcap/sll.h	100;"	d
LINUX_SLL_OUTGOING	pcap/sll.h	101;"	d
LINUX_SLL_P_802_2	pcap/sll.h	125;"	d
LINUX_SLL_P_802_3	pcap/sll.h	124;"	d
LINUX_SLL_P_CAN	pcap/sll.h	126;"	d
LINUX_SLL_P_CANFD	pcap/sll.h	127;"	d
LINUX_USB_MON_DEV	config.h	231;"	d
LIVE	pcap-sita.c	53;"	d	file:
LLCSAP_8021B_G	llc.h	67;"	d
LLCSAP_8021B_I	llc.h	64;"	d
LLCSAP_8021D	llc.h	76;"	d
LLCSAP_GLOBAL	llc.h	61;"	d
LLCSAP_IP	llc.h	70;"	d
LLCSAP_IPX	llc.h	91;"	d
LLCSAP_ISO8208	llc.h	82;"	d
LLCSAP_ISONS	llc.h	97;"	d
LLCSAP_NETBEUI	llc.h	94;"	d
LLCSAP_NULL	llc.h	58;"	d
LLCSAP_PROWAY	llc.h	85;"	d
LLCSAP_PROWAYNM	llc.h	73;"	d
LLCSAP_RS511	llc.h	79;"	d
LLCSAP_SNAP	llc.h	88;"	d
LLC_DISC	llc.h	38;"	d
LLC_DM	llc.h	39;"	d
LLC_FRMR	llc.h	43;"	d
LLC_GSAP	llc.h	27;"	d
LLC_IG	llc.h	28;"	d
LLC_IS_NR	llc.h	50;"	d
LLC_IS_POLL	llc.h	32;"	d
LLC_I_NS	llc.h	51;"	d
LLC_REJ	llc.h	48;"	d
LLC_RNR	llc.h	47;"	d
LLC_RR	llc.h	46;"	d
LLC_SABME	llc.h	40;"	d
LLC_S_CMD_MASK	llc.h	45;"	d
LLC_S_FMT	llc.h	29;"	d
LLC_TEST	llc.h	41;"	d
LLC_UA	llc.h	37;"	d
LLC_UI	llc.h	36;"	d
LLC_U_CMD_MASK	llc.h	35;"	d
LLC_U_FMT	llc.h	26;"	d
LLC_U_POLL	llc.h	31;"	d
LLC_XID	llc.h	42;"	d
LLC_XID_FI	llc.h	33;"	d
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LOCAL	msdos/pktdrvr.h	5;"	d
LOCKED_FUNC	pcap-dos.h	138;"	d
LOCKED_VAR	pcap-dos.c	/^struct device acct_dev LOCKED_VAR = {$/;"	v	typeref:struct:acct_dev
LOCKED_VAR	pcap-dos.c	/^struct device cs89_dev LOCKED_VAR = {$/;"	v	typeref:struct:cs89_dev
LOCKED_VAR	pcap-dos.c	/^struct device el2_dev LOCKED_VAR = {$/;"	v	typeref:struct:el2_dev
LOCKED_VAR	pcap-dos.c	/^struct device el3_dev LOCKED_VAR = {$/;"	v	typeref:struct:el3_dev
LOCKED_VAR	pcap-dos.c	/^struct device ne_dev LOCKED_VAR = {$/;"	v	typeref:struct:ne_dev
LOCKED_VAR	pcap-dos.c	/^struct device rtl8139_dev LOCKED_VAR = {$/;"	v	typeref:struct:rtl8139_dev
LOCKED_VAR	pcap-dos.c	/^struct device tc515_dev LOCKED_VAR = {$/;"	v	typeref:struct:tc515_dev
LOCKED_VAR	pcap-dos.c	/^struct device tc59_dev LOCKED_VAR = {$/;"	v	typeref:struct:tc59_dev
LOCKED_VAR	pcap-dos.c	/^struct device tc90xbc_dev LOCKED_VAR = {$/;"	v	typeref:struct:tc90xbc_dev
LOCKED_VAR	pcap-dos.c	/^struct device wd_dev LOCKED_VAR = {$/;"	v	typeref:struct:wd_dev
LOCKED_VAR	pcap-dos.h	137;"	d
LONG	pcap-tc.c	/^typedef enum LONG$/;"	g	file:
LT_FCS_DATALINK_EXT	pcap/pcap.h	142;"	d
LT_FCS_LENGTH	pcap/pcap.h	141;"	d
LT_FCS_LENGTH_PRESENT	pcap/pcap.h	140;"	d
LT_LINKTYPE	sf-pcap.c	120;"	d	file:
LT_LINKTYPE_EXT	sf-pcap.c	121;"	d	file:
LoadLibrarySafe	pcap-tc.c	/^HMODULE LoadLibrarySafe(LPCTSTR lpFileName)$/;"	f
LoadStatus	pcap-tc.c	/^	TC_API_LOAD_STATUS			LoadStatus;$/;"	m	struct:_TC_FUNCTIONS	file:
LoadTcFunctions	pcap-tc.c	/^TC_API_LOAD_STATUS LoadTcFunctions(void)$/;"	f
MAC_BOUND	msdos/ndis2.h	/^        MAC_BOUND               = 0x0008,$/;"	e	enum:__anon24
MAC_CHAR	msdos/ndis2.c	211;"	d	file:
MAC_DISPATCH	msdos/ndis2.c	209;"	d	file:
MAC_OPEN	msdos/ndis2.h	/^        MAC_OPEN                = 0x0010,$/;"	e	enum:__anon24
MAC_STATUS	msdos/ndis2.c	210;"	d	file:
MAClength	msdos/pktdrvr.h	/^        WORD  MAClength;    \/* HiPerformance data, N\/A           *\/$/;"	m	struct:__anon17
MAJOR_VER	Makefile	/^	MAJOR_VER=`sed 's\/\\([0-9][0-9]*\\)\\..*\/\\1\/' $(srcdir)\/VERSION`; \\$/;"	m
MAKE_DL_PRIMITIVES	pcap-dlpi.c	175;"	d	file:
MAN1	Makefile	/^MAN1 = pcap-config.1$/;"	m
MAN3PCAP	Makefile	/^MAN3PCAP = $(MAN3PCAP_NOEXPAND) $(MAN3PCAP_EXPAND:.in=)$/;"	m
MAN3PCAP_EXPAND	Makefile	/^MAN3PCAP_EXPAND = \\$/;"	m
MAN3PCAP_NOEXPAND	Makefile	/^MAN3PCAP_NOEXPAND = \\$/;"	m
MANFILE	Makefile	/^MANFILE = \\$/;"	m
MANMISC	Makefile	/^MANMISC = \\$/;"	m
MAX	optimize.c	237;"	d	file:
MAXDLBUF	dlpisubs.c	44;"	d	file:
MAXDLBUF	pcap-dlpi.c	133;"	d	file:
MAXIMUM_SNAPLEN	pcap-int.h	108;"	d
MAXIMUM_SNAPLEN	tests/opentest.c	40;"	d	file:
MAX_CHASSIS	pcap-sita.c	49;"	d	file:
MAX_DAG_PACKET	pcap-dag.c	204;"	d	file:
MAX_DESC_LENGTH	pcap-snf.c	320;"	d	file:
MAX_GEOSLOT	pcap-sita.c	50;"	d	file:
MAX_LINE_SIZE	pcap-sita.c	48;"	d	file:
MAX_LINKHEADER_SIZE	pcap-linux.c	288;"	d	file:
MAX_NUM_DEBUG_STRINGS	msdos/ndis2.c	64;"	d	file:
MAX_SA_LEN	fad-gifc.c	118;"	d	file:
MAX_TC_PACKET_SIZE	pcap-tc.c	200;"	d	file:
MAYBE_SWAPPED	sf-pcap.c	/^	MAYBE_SWAPPED$/;"	e	enum:__anon3	file:
MEDIA_ETHERNET	msdos/ndis2.c	70;"	d	file:
MEDIA_FDDI	msdos/ndis2.c	69;"	d	file:
MEDIA_TOKEN	msdos/ndis2.c	71;"	d	file:
MH_DPC	gencode.h	201;"	d
MH_FISU	gencode.h	188;"	d
MH_LSSU	gencode.h	189;"	d
MH_MSU	gencode.h	190;"	d
MH_OPC	gencode.h	200;"	d
MH_SIO	gencode.h	199;"	d
MH_SLS	gencode.h	202;"	d
MINDEX	bpf/net/bpf_filter.c	124;"	d	file:
MINDEX	net/bpf_filter.c	124;"	d	file:
MKDEP	Makefile	/^MKDEP = $/;"	m
MLEN	bpf/net/bpf_filter.c	70;"	d	file:
MLEN	bpf/net/bpf_filter.c	73;"	d	file:
MLEN	net/bpf_filter.c	70;"	d	file:
MLEN	net/bpf_filter.c	73;"	d	file:
MODE_CAPT	pcap/pcap.h	505;"	d
MODE_MON	pcap/pcap.h	507;"	d
MODE_STAT	pcap/pcap.h	506;"	d
MODULUS	optimize.c	205;"	d	file:
MONITOR_ACX100	pcap-linux.c	/^	MONITOR_ACX100,$/;"	e	enum:__anon7	file:
MONITOR_HOSTAP	pcap-linux.c	/^	MONITOR_HOSTAP,$/;"	e	enum:__anon7	file:
MONITOR_PRISM	pcap-linux.c	/^	MONITOR_PRISM,$/;"	e	enum:__anon7	file:
MONITOR_PRISM54	pcap-linux.c	/^	MONITOR_PRISM54,$/;"	e	enum:__anon7	file:
MONITOR_RT2500	pcap-linux.c	/^	MONITOR_RT2500,$/;"	e	enum:__anon7	file:
MONITOR_RT2570	pcap-linux.c	/^	MONITOR_RT2570,$/;"	e	enum:__anon7	file:
MONITOR_RT73	pcap-linux.c	/^	MONITOR_RT73,$/;"	e	enum:__anon7	file:
MONITOR_RTL8XXX	pcap-linux.c	/^	MONITOR_RTL8XXX$/;"	e	enum:__anon7	file:
MONITOR_WEXT	pcap-linux.c	/^	MONITOR_WEXT,$/;"	e	enum:__anon7	file:
MON_BIN_DATA_ZERO	pcap-usb-linux.c	117;"	d	file:
MON_BIN_ERROR	pcap-usb-linux.c	118;"	d	file:
MON_BIN_SETUP	pcap-usb-linux.c	115;"	d	file:
MON_BIN_SETUP_ZERO	pcap-usb-linux.c	116;"	d	file:
MON_IOCG_STATS	pcap-usb-linux.c	108;"	d	file:
MON_IOCH_MFLUSH	pcap-usb-linux.c	113;"	d	file:
MON_IOCQ_RING_SIZE	pcap-usb-linux.c	110;"	d	file:
MON_IOCQ_URB_LEN	pcap-usb-linux.c	106;"	d	file:
MON_IOCT_RING_SIZE	pcap-usb-linux.c	109;"	d	file:
MON_IOCX_GET	pcap-usb-linux.c	111;"	d	file:
MON_IOCX_MFETCH	pcap-usb-linux.c	112;"	d	file:
MON_IOCX_URB	pcap-usb-linux.c	107;"	d	file:
MON_IOC_MAGIC	pcap-usb-linux.c	104;"	d	file:
MSG_LEN_POS	atmuni31.h	79;"	d
MSG_TRUNC	pcap-linux.c	275;"	d	file:
MSG_TYPE_POS	atmuni31.h	78;"	d
MTP2_ANNEX_A_NOT_USED	pcap-dag.c	160;"	d	file:
MTP2_ANNEX_A_USED	pcap-dag.c	161;"	d	file:
MTP2_ANNEX_A_USED_OFFSET	pcap-dag.c	156;"	d	file:
MTP2_ANNEX_A_USED_UNKNOWN	pcap-dag.c	162;"	d	file:
MTP2_HDR_LEN	pcap-dag.c	158;"	d	file:
MTP2_LINK_NUMBER_OFFSET	pcap-dag.c	157;"	d	file:
MTP2_SENT_OFFSET	pcap-dag.c	155;"	d	file:
MTU	msdos/pktdrvr.h	/^        WORD  MTU;          \/* HiPerformance data, N\/A           *\/$/;"	m	struct:__anon17
MUST_CLEAR_PROMISC	pcap-linux.c	332;"	d	file:
MUST_CLEAR_RFMON	pcap-bpf.c	178;"	d	file:
MUST_CLEAR_RFMON	pcap-linux.c	333;"	d	file:
MUST_DELETE_MONIF	pcap-linux.c	334;"	d	file:
MUST_DESTROY_USBUS	pcap-bpf.c	179;"	d	file:
M_DPC	gencode.h	195;"	d
M_FISU	gencode.h	183;"	d
M_IFADDR	Win32/Include/net/if.h	/^MALLOC_DECLARE(M_IFADDR);$/;"	v
M_IFMADDR	Win32/Include/net/if.h	/^MALLOC_DECLARE(M_IFMADDR);$/;"	v
M_LSSU	gencode.h	184;"	d
M_MSU	gencode.h	185;"	d
M_OPC	gencode.h	194;"	d
M_SIO	gencode.h	193;"	d
M_SLS	gencode.h	196;"	d
MacChars	msdos/ndis2.h	/^      } MacChars;$/;"	t	typeref:struct:_MacChars
MacStatusTable	msdos/ndis2.h	/^      } MacStatusTable;$/;"	t	typeref:struct:_MacStatusTable
MacUpperDispatch	msdos/ndis2.h	/^      } MacUpperDispatch;$/;"	t	typeref:struct:_MacUpperDispatch
Mark	gencode.h	361;"	d
MulticastList	msdos/ndis2.h	/^      } MulticastList;$/;"	t	typeref:struct:_MulticastList
NAME	msdos/ndis_0.asm	/^NAME NDIS_0$/;"	l
NAME	msdos/pkt_rx0.asm	/^NAME PKT_RX$/;"	l
NAVTEL_TCPDUMP_MAGIC	sf-pcap.c	103;"	d	file:
NCHUNKS	gencode.c	249;"	d	file:
NDIS_NEXT_DEV	pcap-dos.c	55;"	d	file:
NDIS_NEXT_DEV	pcap-dos.c	71;"	d	file:
NDIS_PARAM_INTEGER	msdos/ndis2.h	224;"	d
NDIS_PARAM_STRING	msdos/ndis2.h	225;"	d
NDIS_PATH	msdos/ndis2.h	234;"	d
NDIS_PTR_PHYSICAL	msdos/ndis2.h	231;"	d
NDIS_PTR_VIRTUAL	msdos/ndis2.h	232;"	d
NDIS_RX_BUF_LENGTH	msdos/ndis2.h	229;"	d
NDIS_TD_BUF_LENGTH	msdos/ndis2.h	228;"	d
NDIS_TX_BUF_LENGTH	msdos/ndis2.h	227;"	d
NEED_STRTOK_R	portability.h	157;"	d
NETINET_ETHER_H_DECLARES_ETHER_HOSTTON	config.h	234;"	d
NET_STATS	pcap-dos.h	/^        } NET_STATS;$/;"	t	typeref:struct:net_device_stats
NFLOG	pcap-netfilter-linux.c	/^typedef enum { OTHER = -1, NFLOG, NFQUEUE } nftype_t;$/;"	e	enum:__anon1	file:
NFLOG_IFACE	pcap-netfilter-linux.c	72;"	d	file:
NFQUEUE	pcap-netfilter-linux.c	/^typedef enum { OTHER = -1, NFLOG, NFQUEUE } nftype_t;$/;"	e	enum:__anon1	file:
NFQUEUE_IFACE	pcap-netfilter-linux.c	73;"	d	file:
NFULA_GID	pcap/nflog.h	87;"	d
NFULA_HWADDR	pcap/nflog.h	81;"	d
NFULA_HWHEADER	pcap/nflog.h	89;"	d
NFULA_HWLEN	pcap/nflog.h	90;"	d
NFULA_HWTYPE	pcap/nflog.h	88;"	d
NFULA_IFINDEX_INDEV	pcap/nflog.h	77;"	d
NFULA_IFINDEX_OUTDEV	pcap/nflog.h	78;"	d
NFULA_IFINDEX_PHYSINDEV	pcap/nflog.h	79;"	d
NFULA_IFINDEX_PHYSOUTDEV	pcap/nflog.h	80;"	d
NFULA_MARK	pcap/nflog.h	75;"	d
NFULA_PACKET_HDR	pcap/nflog.h	74;"	d
NFULA_PAYLOAD	pcap/nflog.h	82;"	d
NFULA_PREFIX	pcap/nflog.h	83;"	d
NFULA_SEQ	pcap/nflog.h	85;"	d
NFULA_SEQ_GLOBAL	pcap/nflog.h	86;"	d
NFULA_TIMESTAMP	pcap/nflog.h	76;"	d
NFULA_UID	pcap/nflog.h	84;"	d
NL_IFNET	pcap-dlpi.c	1733;"	d	file:
NODEMASK	nametoaddr.c	423;"	d	file:
NOP	optimize.c	91;"	d	file:
NOT_SWAPPED	sf-pcap.c	/^	NOT_SWAPPED,$/;"	e	enum:__anon3	file:
NSEC_TCPDUMP_MAGIC	sf-pcap.c	109;"	d	file:
NTOHL	nametoaddr.c	110;"	d	file:
NTOHS	nametoaddr.c	111;"	d	file:
NUM_RX_BUF	msdos/pkt_rx0.asm	/^  NUM_RX_BUF = 10$/;"	d
NUM_RX_BUF	msdos/pkt_rx0.asm	/^  NUM_RX_BUF = 32       ; # of RX element buffers$/;"	d
NUM_RX_BUF	msdos/pktdrvr.c	29;"	d	file:
NUM_RX_BUF	msdos/pktdrvr.c	31;"	d	file:
NUM_SOF_TIMESTAMPING_TYPES	pcap-linux.c	6041;"	d	file:
N_ATOMS	gencode.h	236;"	d
N_FILE_TYPES	savefile.c	359;"	d	file:
N_RULES	pcap-dbus.c	160;"	d	file:
NdisAllocStack	msdos/ndis2.c	/^BYTE *NdisAllocStack (void)$/;"	f
NdisAllocStack	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisAllocStack);$/;"	v
NdisError	msdos/ndis2.h	/^      } NdisError;$/;"	t	typeref:enum:__anon31
NdisFreeStack	msdos/ndis2.c	/^void NdisFreeStack (BYTE *aStack)$/;"	f
NdisFreeStack	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisFreeStack);$/;"	v
NdisGeneralRequest	msdos/ndis2.h	/^      } NdisGeneralRequest;$/;"	t	typeref:enum:__anon27
NdisGetLinkage	msdos/ndis2.h	/^  RENAME_ASM_SYM (NdisGetLinkage);$/;"	v
NdisIndicationComplete	msdos/ndis2.c	/^CALLBACK (NdisIndicationComplete (WORD macId, WORD protDS))$/;"	f
NdisIndicationComplete	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisIndicationComplete);$/;"	v
NdisInit	msdos/ndis2.c	/^int NdisInit (int promis)$/;"	f
NdisLastError	msdos/ndis2.c	/^char *NdisLastError (void)$/;"	f
NdisMacServiceFlags	msdos/ndis2.h	/^      } NdisMacServiceFlags;$/;"	t	typeref:enum:__anon28
NdisMacStatus	msdos/ndis2.h	/^      } NdisMacStatus;$/;"	t	typeref:enum:__anon24
NdisOpen	msdos/ndis2.c	/^int NdisOpen (void)$/;"	f
NdisPacketFilter	msdos/ndis2.h	/^      } NdisPacketFilter;$/;"	t	typeref:enum:__anon26
NdisProtManager	msdos/ndis2.h	/^      } NdisProtManager;$/;"	t	typeref:enum:__anon30
NdisReceiveChain	msdos/ndis2.c	/^CALLBACK (NdisReceiveChain (WORD macId, WORD frameSize, WORD reqHandle,$/;"	f
NdisReceiveChain	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisReceiveChain);$/;"	v
NdisReceiveLookahead	msdos/ndis2.c	/^CALLBACK (NdisReceiveLookahead (WORD  macId,      WORD  frameSize,$/;"	f
NdisReceiveLookahead	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisReceiveLookahead);$/;"	v
NdisRegisterAndBind	msdos/ndis2.c	/^int NdisRegisterAndBind (int promis)$/;"	f
NdisRequestConfirm	msdos/ndis2.c	/^CALLBACK (NdisRequestConfirm (WORD protId, WORD macId,   WORD reqHandle,$/;"	f
NdisRequestConfirm	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisRequestConfirm);$/;"	v
NdisSendPacket	msdos/ndis2.c	/^int NdisSendPacket (struct _PktBuf *pktBuf, int macId)$/;"	f
NdisShutdown	msdos/ndis2.c	/^void NdisShutdown (void)$/;"	f
NdisStartMac	msdos/ndis2.c	/^static int NdisStartMac (CardHandle *card)$/;"	f	file:
NdisStatus	msdos/ndis2.h	/^      } NdisStatus;$/;"	t	typeref:enum:__anon25
NdisStatusProc	msdos/ndis2.c	/^CALLBACK (NdisStatusProc (WORD macId,  WORD param1, BYTE *indicate,$/;"	f
NdisStatusProc	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisStatusProc);$/;"	v
NdisSysRequest	msdos/ndis2.h	/^      } NdisSysRequest;$/;"	t	typeref:enum:__anon29
NdisSystemRequest	msdos/ndis2.c	/^CALLBACK (NdisSystemRequest (DWORD param1, DWORD param2, WORD param3,$/;"	f
NdisSystemRequest	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisSystemRequest);$/;"	v
NdisTransmitConfirm	msdos/ndis2.c	/^CALLBACK (NdisTransmitConfirm (WORD protId, WORD macId, WORD reqHandle,$/;"	f
NdisTransmitConfirm	msdos/ndis2.h	/^  RENAME_C_SYM   (NdisTransmitConfirm);$/;"	v
Ndis_strerror	msdos/ndis2.c	/^static char *Ndis_strerror (WORD errorCode)$/;"	f	file:
OBJ	Makefile	/^OBJ =	$(PSRC:.c=.o) $(FSRC:.c=.o) $(CSRC:.c=.o) $(SSRC:.c=.o) $(GENSRC:.c=.o) $(LIBOBJS)$/;"	m
OFFSET_NOT_SET	gencode.c	199;"	d	file:
OPT_COMMENT	sf-pcap-ng.c	86;"	d	file:
OPT_ENDOFOPT	sf-pcap-ng.c	85;"	d	file:
OR_LINKHDR	gencode.c	/^	OR_LINKHDR,		\/* link-layer header *\/$/;"	e	enum:e_offrel	file:
OR_LINKPL	gencode.c	/^	OR_LINKPL,		\/* link-layer payload *\/$/;"	e	enum:e_offrel	file:
OR_LINKPL_NOSNAP	gencode.c	/^	OR_LINKPL_NOSNAP,	\/* link-layer payload, with no SNAP header at the link layer *\/$/;"	e	enum:e_offrel	file:
OR_LINKTYPE	gencode.c	/^	OR_LINKTYPE,		\/* link-layer type *\/$/;"	e	enum:e_offrel	file:
OR_LLC	gencode.c	/^	OR_LLC,			\/* 802.2 LLC header *\/$/;"	e	enum:e_offrel	file:
OR_PACKET	gencode.c	/^	OR_PACKET,		\/* full packet data *\/$/;"	e	enum:e_offrel	file:
OR_PREVLINKHDR	gencode.c	/^	OR_PREVLINKHDR,		\/* previous link-layer header *\/$/;"	e	enum:e_offrel	file:
OR_PREVMPLSHDR	gencode.c	/^	OR_PREVMPLSHDR,		\/* previous MPLS header *\/$/;"	e	enum:e_offrel	file:
OR_TRAN_IPV4	gencode.c	/^	OR_TRAN_IPV4,		\/* transport-layer header, with IPv4 network layer *\/$/;"	e	enum:e_offrel	file:
OR_TRAN_IPV6	gencode.c	/^	OR_TRAN_IPV6		\/* transport-layer header, with IPv6 network layer *\/$/;"	e	enum:e_offrel	file:
OTHER	pcap-netfilter-linux.c	/^typedef enum { OTHER = -1, NFLOG, NFQUEUE } nftype_t;$/;"	e	enum:__anon1	file:
O_BINARY	tests/filtertest.c	120;"	d	file:
O_BINARY	tests/valgrindtest.c	163;"	d	file:
OrigMissed	pcap-pf.c	/^	long	OrigMissed;	\/* missed by i\/f before this run *\/$/;"	m	struct:pcap_pf	file:
OrigMissed	pcap-rpcap.h	/^	long	OrigMissed;		\/* missed by i\/f before this run *\/$/;"	m	struct:pcap_md
PACKAGE_BUGREPORT	config.h	243;"	d
PACKAGE_NAME	config.h	246;"	d
PACKAGE_STRING	config.h	249;"	d
PACKAGE_TARNAME	config.h	252;"	d
PACKAGE_URL	config.h	255;"	d
PACKAGE_VERSION	config.h	258;"	d
PACKET_COUNT_IS_UNLIMITED	pcap-int.h	375;"	d
PAGE	msdos/ndis_0.asm	/^PAGE 60,132$/;"	l
PAGE	msdos/pkt_rx0.asm	/^PAGE 60,132$/;"	l
PARSE_INT_FORMAT	missing/snprintf.c	268;"	d	file:
PASS_THROUGH	sf-pcap-ng.c	/^	PASS_THROUGH,$/;"	e	enum:__anon12	file:
PASS_THROUGH	sf-pcap.c	/^	PASS_THROUGH,$/;"	e	enum:__anon4	file:
PAS_PTR	msdos/ndis2.h	46;"	d
PAS_PTR	msdos/ndis2.h	53;"	d
PAS_PTR	msdos/ndis2.h	60;"	d
PAS_PTR	msdos/ndis2.h	67;"	d
PAirpcapHandle	pcap/pcap.h	/^    typedef struct _AirpcapHandle *PAirpcapHandle;$/;"	t	typeref:struct:_AirpcapHandle
PCAP_API	pcap/export-defs.h	106;"	d
PCAP_API_DEF	pcap/export-defs.h	102;"	d
PCAP_API_DEF	pcap/export-defs.h	64;"	d
PCAP_API_DEF	pcap/export-defs.h	66;"	d
PCAP_API_DEF	pcap/export-defs.h	70;"	d
PCAP_API_DEF	pcap/export-defs.h	84;"	d
PCAP_API_DEF	pcap/export-defs.h	91;"	d
PCAP_API_DEF	pcap/export-defs.h	96;"	d
PCAP_ASSERT	pcap-dos.h	214;"	d
PCAP_ASSERT	pcap-dos.h	219;"	d
PCAP_BUF_SIZE	remote-ext.h	80;"	d
PCAP_DEV_PREFIX	pcap-dlpi.c	127;"	d	file:
PCAP_DEV_PREFIX	pcap-dlpi.c	129;"	d	file:
PCAP_DONT_INCLUDE_PCAP_BPF_H	pcap-bpf.c	72;"	d	file:
PCAP_DONT_INCLUDE_PCAP_BPF_H	pcap-pf.c	63;"	d	file:
PCAP_DONT_INCLUDE_PCAP_BPF_H	pcap-win32.c	34;"	d	file:
PCAP_DONT_INCLUDE_PCAP_BPF_H	tests/valgrindtest.c	88;"	d	file:
PCAP_D_IN	pcap/pcap.h	/^       PCAP_D_IN,$/;"	e	enum:__anon34
PCAP_D_INOUT	pcap/pcap.h	/^       PCAP_D_INOUT = 0,$/;"	e	enum:__anon34
PCAP_D_OUT	pcap/pcap.h	/^       PCAP_D_OUT$/;"	e	enum:__anon34
PCAP_ERRBUF_SIZE	pcap/pcap.h	70;"	d
PCAP_ERROR	pcap/pcap.h	250;"	d
PCAP_ERROR_ACTIVATED	pcap/pcap.h	253;"	d
PCAP_ERROR_BREAK	pcap/pcap.h	251;"	d
PCAP_ERROR_CANTSET_TSTAMP_TYPE	pcap/pcap.h	259;"	d
PCAP_ERROR_IFACE_NOT_UP	pcap/pcap.h	258;"	d
PCAP_ERROR_NOT_ACTIVATED	pcap/pcap.h	252;"	d
PCAP_ERROR_NOT_RFMON	pcap/pcap.h	256;"	d
PCAP_ERROR_NO_SUCH_DEVICE	pcap/pcap.h	254;"	d
PCAP_ERROR_PERM_DENIED	pcap/pcap.h	257;"	d
PCAP_ERROR_PROMISC_PERM_DENIED	pcap/pcap.h	260;"	d
PCAP_ERROR_RFMON_NOTSUP	pcap/pcap.h	255;"	d
PCAP_ERROR_TSTAMP_PRECISION_NOTSUP	pcap/pcap.h	261;"	d
PCAP_ERR_AUTH	pcap-rpcap.h	427;"	d
PCAP_ERR_ENDCAPTURE	pcap-rpcap.h	437;"	d
PCAP_ERR_FINDALLIF	pcap-rpcap.h	428;"	d
PCAP_ERR_GETSTATS	pcap-rpcap.h	432;"	d
PCAP_ERR_HOSTNOAUTH	pcap-rpcap.h	434;"	d
PCAP_ERR_INITTIMEOUT	pcap-rpcap.h	426;"	d
PCAP_ERR_NETW	pcap-rpcap.h	425;"	d
PCAP_ERR_NOREMOTEIF	pcap-rpcap.h	429;"	d
PCAP_ERR_OPEN	pcap-rpcap.h	430;"	d
PCAP_ERR_READEX	pcap-rpcap.h	433;"	d
PCAP_ERR_REMOTEACCEPT	pcap-rpcap.h	435;"	d
PCAP_ERR_RUNTIMETIMEOUT	pcap-rpcap.h	438;"	d
PCAP_ERR_SETSAMPLING	pcap-rpcap.h	439;"	d
PCAP_ERR_STARTCAPTURE	pcap-rpcap.h	436;"	d
PCAP_ERR_UPDATEFILTER	pcap-rpcap.h	431;"	d
PCAP_ERR_WRONGMSG	pcap-rpcap.h	440;"	d
PCAP_ERR_WRONGVER	pcap-rpcap.h	441;"	d
PCAP_ETHERS_FILE	pcap/namedb.h	56;"	d
PCAP_FDDIPAD	pcap-bpf.c	139;"	d	file:
PCAP_FDDIPAD	pcap-pf.c	75;"	d	file:
PCAP_IF_LOOPBACK	pcap/pcap.h	226;"	d
PCAP_IF_RUNNING	pcap/pcap.h	228;"	d
PCAP_IF_UP	pcap/pcap.h	227;"	d
PCAP_NETMASK_UNKNOWN	pcap/pcap.h	276;"	d
PCAP_NG_VERSION_MAJOR	sf-pcap-ng.c	123;"	d	file:
PCAP_NG_VERSION_MINOR	sf-pcap-ng.c	124;"	d	file:
PCAP_NORETURN	tests/capturetest.c	73;"	d	file:
PCAP_NORETURN	tests/capturetest.c	75;"	d	file:
PCAP_NORETURN	tests/capturetest.c	77;"	d	file:
PCAP_NORETURN	tests/filtertest.c	81;"	d	file:
PCAP_NORETURN	tests/filtertest.c	83;"	d	file:
PCAP_NORETURN	tests/filtertest.c	85;"	d	file:
PCAP_NORETURN	tests/opentest.c	72;"	d	file:
PCAP_NORETURN	tests/opentest.c	74;"	d	file:
PCAP_NORETURN	tests/opentest.c	76;"	d	file:
PCAP_NORETURN	tests/selpolltest.c	81;"	d	file:
PCAP_NORETURN	tests/selpolltest.c	83;"	d	file:
PCAP_NORETURN	tests/selpolltest.c	85;"	d	file:
PCAP_NORETURN	tests/valgrindtest.c	130;"	d	file:
PCAP_NORETURN	tests/valgrindtest.c	132;"	d	file:
PCAP_NORETURN	tests/valgrindtest.c	134;"	d	file:
PCAP_OPENFLAG_DATATX_UDP	remote-ext.h	219;"	d
PCAP_OPENFLAG_MAX_RESPONSIVENESS	remote-ext.h	251;"	d
PCAP_OPENFLAG_NOCAPTURE_LOCAL	remote-ext.h	239;"	d
PCAP_OPENFLAG_NOCAPTURE_RPCAP	remote-ext.h	230;"	d
PCAP_OPENFLAG_PROMISCUOUS	remote-ext.h	205;"	d
PCAP_PRINTFLIKE	tests/capturetest.c	89;"	d	file:
PCAP_PRINTFLIKE	tests/capturetest.c	91;"	d	file:
PCAP_PRINTFLIKE	tests/filtertest.c	97;"	d	file:
PCAP_PRINTFLIKE	tests/filtertest.c	99;"	d	file:
PCAP_PRINTFLIKE	tests/opentest.c	88;"	d	file:
PCAP_PRINTFLIKE	tests/opentest.c	90;"	d	file:
PCAP_PRINTFLIKE	tests/selpolltest.c	97;"	d	file:
PCAP_PRINTFLIKE	tests/selpolltest.c	99;"	d	file:
PCAP_PRINTFLIKE	tests/valgrindtest.c	146;"	d	file:
PCAP_PRINTFLIKE	tests/valgrindtest.c	148;"	d	file:
PCAP_SAMP_1_EVERY_N	remote-ext.h	278;"	d
PCAP_SAMP_FIRST_AFTER_N_MS	remote-ext.h	288;"	d
PCAP_SAMP_NOSAMP	remote-ext.h	268;"	d
PCAP_SRC_FILE	remote-ext.h	95;"	d
PCAP_SRC_FILE_STRING	remote-ext.h	166;"	d
PCAP_SRC_IFLOCAL	remote-ext.h	103;"	d
PCAP_SRC_IFREMOTE	remote-ext.h	111;"	d
PCAP_SRC_IF_STRING	remote-ext.h	179;"	d
PCAP_STATS_EX	pcap-rpcap.c	66;"	d	file:
PCAP_STATS_STANDARD	pcap-rpcap.c	65;"	d	file:
PCAP_SUPPORT_NETFILTER	config.h	273;"	d
PCAP_SUPPORT_PACKET_RING	config.h	276;"	d
PCAP_SUPPORT_USB	config.h	279;"	d
PCAP_TEXT_SOURCE_ADAPTER	pcap-new.c	61;"	d	file:
PCAP_TEXT_SOURCE_FILE	pcap-new.c	59;"	d	file:
PCAP_TEXT_SOURCE_ON_LOCAL_HOST	pcap-new.c	64;"	d	file:
PCAP_TEXT_SOURCE_ON_REMOTE_HOST	pcap-new.c	66;"	d	file:
PCAP_TSTAMP_ADAPTER	pcap/pcap.h	341;"	d
PCAP_TSTAMP_ADAPTER_UNSYNCED	pcap/pcap.h	342;"	d
PCAP_TSTAMP_HOST	pcap/pcap.h	338;"	d
PCAP_TSTAMP_HOST_HIPREC	pcap/pcap.h	340;"	d
PCAP_TSTAMP_HOST_LOWPREC	pcap/pcap.h	339;"	d
PCAP_TSTAMP_PRECISION_MICRO	pcap/pcap.h	350;"	d
PCAP_TSTAMP_PRECISION_NANO	pcap/pcap.h	351;"	d
PCAP_VERSION_MAJOR	pcap/pcap.h	67;"	d
PCAP_VERSION_MINOR	pcap/pcap.h	68;"	d
PCAP_WARNING	pcap/pcap.h	268;"	d
PCAP_WARNING_PROMISC_NOTSUP	pcap/pcap.h	269;"	d
PCAP_WARNING_TSTAMP_TYPE_NOTSUP	pcap/pcap.h	270;"	d
PDRX_ALL_PACKETS	msdos/pktdrvr.h	/^        PDRX_ALL_PACKETS,   \/* receive all packets on network *\/$/;"	e	enum:__anon15
PDRX_BROADCAST	msdos/pktdrvr.h	/^        PDRX_BROADCAST,     \/* DIRECT + broadcast packets     *\/$/;"	e	enum:__anon15
PDRX_DIRECT	msdos/pktdrvr.h	/^        PDRX_DIRECT,        \/* receive only to this interface *\/$/;"	e	enum:__anon15
PDRX_MULTICAST1	msdos/pktdrvr.h	/^        PDRX_MULTICAST1,    \/* BROADCAST + limited multicast  *\/$/;"	e	enum:__anon15
PDRX_MULTICAST2	msdos/pktdrvr.h	/^        PDRX_MULTICAST2,    \/* BROADCAST + all multicast      *\/$/;"	e	enum:__anon15
PDRX_OFF	msdos/pktdrvr.h	/^        PDRX_OFF    = 1,    \/* turn off receiver              *\/$/;"	e	enum:__anon15
PD_APPLETALK	msdos/pktdrvr.h	/^        PD_APPLETALK  = 5,$/;"	e	enum:__anon14
PD_ARCNET	msdos/pktdrvr.h	/^        PD_ARCNET     = 8,$/;"	e	enum:__anon14
PD_AX25	msdos/pktdrvr.h	/^        PD_AX25       = 9,$/;"	e	enum:__anon14
PD_ETHER	msdos/pktdrvr.h	/^        PD_ETHER      = 1,$/;"	e	enum:__anon14
PD_FDDI8022	msdos/pktdrvr.h	/^        PD_FDDI8022   = 12,$/;"	e	enum:__anon14
PD_IEEE8023_2	msdos/pktdrvr.h	/^        PD_IEEE8023_2 = 11,$/;"	e	enum:__anon14
PD_IEEE8025	msdos/pktdrvr.h	/^        PD_IEEE8025   = 3,$/;"	e	enum:__anon14
PD_KISS	msdos/pktdrvr.h	/^        PD_KISS       = 10,$/;"	e	enum:__anon14
PD_LANstar	msdos/pktdrvr.h	/^        PD_LANstar    = 14,$/;"	e	enum:__anon14
PD_OMNINET	msdos/pktdrvr.h	/^        PD_OMNINET    = 4,$/;"	e	enum:__anon14
PD_PPP	msdos/pktdrvr.h	/^        PD_PPP        = 18$/;"	e	enum:__anon14
PD_PRONET10	msdos/pktdrvr.h	/^        PD_PRONET10   = 2,$/;"	e	enum:__anon14
PD_SLIP	msdos/pktdrvr.h	/^        PD_SLIP       = 6,$/;"	e	enum:__anon14
PD_STARTLAN	msdos/pktdrvr.h	/^        PD_STARTLAN   = 7,$/;"	e	enum:__anon14
PD_X25	msdos/pktdrvr.h	/^        PD_X25        = 13,$/;"	e	enum:__anon14
PERROR	msdos/ndis2.c	202;"	d	file:
PHARLAP	pcap-dos.h	32;"	d
PKTBUFSIZE	dlpisubs.c	35;"	d	file:
PKTBUFSIZE	dlpisubs.c	45;"	d	file:
PKTQ_MARKER	pcap-dos.c	1396;"	d	file:
PKT_CLASS	msdos/pktdrvr.h	/^      } PKT_CLASS;$/;"	t	typeref:enum:__anon14
PKT_FRAME	msdos/pktdrvr.h	/^      } PKT_FRAME;$/;"	t	typeref:struct:__anon16
PKT_INFO	msdos/pktdrvr.h	/^      } PKT_INFO;$/;"	t	typeref:struct:__anon17
PKT_PARAM_SIZE	msdos/pktdrvr.h	70;"	d
PKT_RX_MODE	msdos/pktdrvr.h	/^      } PKT_RX_MODE;$/;"	t	typeref:enum:__anon15
PKT_STAT	msdos/pktdrvr.h	/^      } PKT_STAT;$/;"	t	typeref:struct:__anon18
PM_BIND_AND_START	msdos/ndis2.h	/^        PM_BIND_AND_START                 = 3,$/;"	e	enum:__anon30
PM_BIND_STATUS	msdos/ndis2.h	/^        PM_BIND_STATUS                    = 9,$/;"	e	enum:__anon30
PM_GET_PROTOCOL_INI_PATH	msdos/ndis2.h	/^        PM_GET_PROTOCOL_INI_PATH          = 5,$/;"	e	enum:__anon30
PM_GET_PROTOCOL_MANAGER_INFO	msdos/ndis2.h	/^        PM_GET_PROTOCOL_MANAGER_INFO      = 1,$/;"	e	enum:__anon30
PM_GET_PROTOCOL_MANAGER_LINKAGE	msdos/ndis2.h	/^        PM_GET_PROTOCOL_MANAGER_LINKAGE   = 4,$/;"	e	enum:__anon30
PM_INIT_AND_REGISTER	msdos/ndis2.h	/^        PM_INIT_AND_REGISTER              = 7,$/;"	e	enum:__anon30
PM_REGISTER_MODULE	msdos/ndis2.h	/^        PM_REGISTER_MODULE                = 2,$/;"	e	enum:__anon30
PM_REGISTER_PROTOCOL_MANAGER_INFO	msdos/ndis2.h	/^        PM_REGISTER_PROTOCOL_MANAGER_INFO = 6,$/;"	e	enum:__anon30
PM_REGISTER_STATUS	msdos/ndis2.h	/^        PM_REGISTER_STATUS                = 10$/;"	e	enum:__anon30
PM_UNBIND_AND_STOP	msdos/ndis2.h	/^        PM_UNBIND_AND_STOP                = 8,$/;"	e	enum:__anon30
POLLRDHUP	pcap-linux.c	4532;"	d	file:
POPREGS	msdos/ndis_0.asm	/^  POPREGS  equ <popa>$/;"	d
POPREGS	msdos/ndis_0.asm	/^  POPREGS  equ <popad>$/;"	d
PPH_PH_FLAG_PADDING	pcap-tc.c	204;"	d	file:
PPH_PH_VERSION	pcap-tc.c	205;"	d	file:
PPI_FIELD_802_3_EXTENSION	pcap-tc.c	/^	PPI_FIELD_802_3_EXTENSION, *PPPI_FIELD_802_3_EXTENSION;$/;"	t	typeref:struct:_PPI_FIELD_802_3_EXTENSION	file:
PPI_FIELD_AGGREGATION_EXTENSION	pcap-tc.c	/^	PPI_FIELD_AGGREGATION_EXTENSION, *PPPI_FIELD_AGGREGATION_EXTENSION;$/;"	t	typeref:struct:_PPI_FIELD_AGGREGATION_EXTENSION	file:
PPI_FIELD_HEADER	pcap-tc.c	/^	PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPI_FIELD_TYPE_802_3_EXTENSION	pcap-tc.c	233;"	d	file:
PPI_FIELD_TYPE_AGGREGATION_EXTENSION	pcap-tc.c	224;"	d	file:
PPI_FLD_802_3_EXT_FLAG_FCS_PRESENT	pcap-tc.c	235;"	d	file:
PPI_HEADER	pcap-tc.c	/^	PPI_HEADER, *PPPI_HEADER;$/;"	t	typeref:struct:_PPI_HEADER	file:
PPI_PACKET_HEADER	pcap-tc.c	/^	PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PPPI_FIELD_802_3_EXTENSION	pcap-tc.c	/^	PPI_FIELD_802_3_EXTENSION, *PPPI_FIELD_802_3_EXTENSION;$/;"	t	typeref:struct:_PPI_FIELD_802_3_EXTENSION	file:
PPPI_FIELD_AGGREGATION_EXTENSION	pcap-tc.c	/^	PPI_FIELD_AGGREGATION_EXTENSION, *PPPI_FIELD_AGGREGATION_EXTENSION;$/;"	t	typeref:struct:_PPI_FIELD_AGGREGATION_EXTENSION	file:
PPPI_FIELD_HEADER	pcap-tc.c	/^	PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPPI_HEADER	pcap-tc.c	/^	PPI_HEADER, *PPPI_HEADER;$/;"	t	typeref:struct:_PPI_HEADER	file:
PPPI_PACKET_HEADER	pcap-tc.c	/^	PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PPP_ADDRESS	ppp.h	17;"	d
PPP_APPLE	ppp.h	28;"	d
PPP_APPLECP	ppp.h	47;"	d
PPP_BRPDU	ppp.h	32;"	d
PPP_CHAP	ppp.h	57;"	d
PPP_CONTROL	ppp.h	18;"	d
PPP_DECNET	ppp.h	27;"	d
PPP_DECNETCP	ppp.h	46;"	d
PPP_HELLO	ppp.h	37;"	d
PPP_IP	ppp.h	24;"	d
PPP_IPCP	ppp.h	43;"	d
PPP_IPV6	ppp.h	35;"	d
PPP_IPV6CP	ppp.h	51;"	d
PPP_IPX	ppp.h	29;"	d
PPP_IPXCP	ppp.h	48;"	d
PPP_LCP	ppp.h	54;"	d
PPP_LQM	ppp.h	56;"	d
PPP_LUXCOM	ppp.h	38;"	d
PPP_MPLSCP	ppp.h	52;"	d
PPP_MPLS_MCAST	ppp.h	41;"	d
PPP_MPLS_UCAST	ppp.h	40;"	d
PPP_NS	ppp.h	26;"	d
PPP_NSCP	ppp.h	45;"	d
PPP_OSI	ppp.h	25;"	d
PPP_OSICP	ppp.h	44;"	d
PPP_PAP	ppp.h	55;"	d
PPP_PPPD_IN	ppp.h	20;"	d
PPP_PPPD_OUT	ppp.h	21;"	d
PPP_SNS	ppp.h	39;"	d
PPP_STII	ppp.h	33;"	d
PPP_STIICP	ppp.h	49;"	d
PPP_VINES	ppp.h	34;"	d
PPP_VINESCP	ppp.h	50;"	d
PPP_VJC	ppp.h	30;"	d
PPP_VJNC	ppp.h	31;"	d
PRId64	portability.h	177;"	d
PRId64	portability.h	179;"	d
PRIo64	portability.h	185;"	d
PRIo64	portability.h	187;"	d
PRIu64	portability.h	201;"	d
PRIu64	portability.h	203;"	d
PRIx64	portability.h	193;"	d
PRIx64	portability.h	195;"	d
PROC_USB_BUS_DIR	pcap-usb-linux.c	74;"	d	file:
PROG	Makefile	/^PROG=libpcap$/;"	m
PROTO_POS	atmuni31.h	76;"	d
PROTO_UNDEF	pcap/namedb.h	79;"	d
PSRC	Makefile	/^PSRC =	pcap-linux.c pcap-usb-linux.c   pcap-netfilter-linux.c $/;"	m
PT_ILMI	sunatmpos.h	42;"	d
PT_LANE	sunatmpos.h	40;"	d
PT_LLC	sunatmpos.h	41;"	d
PT_QSAAL	sunatmpos.h	43;"	d
PUBHDR	Makefile	/^PUBHDR = \\$/;"	m
PUBLIC	msdos/pkt_rx0.asm	/^PUBLIC _pktDrop, _pktRxBuf, _pktTxBuf,    _pktTemp$/;"	l
PUBLIC	msdos/pkt_rx0.asm	/^PUBLIC _rxOutOfs, _rxInOfs, _PktReceiver, _pktRxEnd$/;"	l
PUBLIC	msdos/pktdrvr.h	4;"	d
PUBPROC	msdos/ndis_0.asm	/^  PUBPROC  macro name$/;"	m
PUBPROC	msdos/ndis_0.asm	/^  PUBPROC macro name$/;"	m
PUBPROC	msdos/ndis_0.asm	/^PUBPROC indicationCompleteGlue$/;"	l
PUBPROC	msdos/ndis_0.asm	/^PUBPROC receiveChainGlue$/;"	l
PUBPROC	msdos/ndis_0.asm	/^PUBPROC receiveLookaheadGlue$/;"	l
PUBPROC	msdos/ndis_0.asm	/^PUBPROC requestConfirmGlue$/;"	l
PUBPROC	msdos/ndis_0.asm	/^PUBPROC statusGlue$/;"	l
PUBPROC	msdos/ndis_0.asm	/^PUBPROC systemRequestGlue$/;"	l
PUBPROC	msdos/ndis_0.asm	/^PUBPROC transmitConfirmGlue$/;"	l
PUSHREGS	msdos/ndis_0.asm	/^  PUSHREGS equ <pusha>$/;"	d
PUSHREGS	msdos/ndis_0.asm	/^  PUSHREGS equ <pushad>$/;"	d
PUSH_LINKHDR	gencode.c	185;"	d	file:
PUTS	msdos/pktdrvr.c	35;"	d	file:
PacketGetMonitorMode	pcap-win32.c	/^PacketGetMonitorMode(PCHAR AdapterName _U_)$/;"	f	file:
PacketHeader	pcap-tc.c	/^	PPI_PACKET_HEADER PacketHeader;$/;"	m	struct:_PPI_HEADER	file:
PacketIsMonitorModeSupported	pcap-win32.c	/^PacketIsMonitorModeSupported(PCHAR AdapterName _U_)$/;"	f	file:
PacketSetMonitorMode	pcap-win32.c	/^PacketSetMonitorMode(PCHAR AdapterName _U_, int mode _U_)$/;"	f	file:
PacketsBufferCommitNextPacket	pcap-tc.c	/^	TcFcnPacketsBufferCommitNextPacket  PacketsBufferCommitNextPacket;$/;"	m	struct:_TC_FUNCTIONS	file:
PacketsBufferCreate	pcap-tc.c	/^	TcFcnPacketsBufferCreate	PacketsBufferCreate;$/;"	m	struct:_TC_FUNCTIONS	file:
PacketsBufferDestroy	pcap-tc.c	/^	TcFcnPacketsBufferDestroy	PacketsBufferDestroy;$/;"	m	struct:_TC_FUNCTIONS	file:
PacketsBufferQueryNextPacket	pcap-tc.c	/^	TcFcnPacketsBufferQueryNextPacket	PacketsBufferQueryNextPacket;$/;"	m	struct:_TC_FUNCTIONS	file:
PfhLength	pcap-tc.c	/^	USHORT PfhLength;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PfhType	pcap-tc.c	/^	USHORT PfhType;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PktBuf	msdos/ndis2.h	/^      } PktBuf;$/;"	t	typeref:struct:_PktBuf
PktBuffersUsed	msdos/pktdrvr.c	/^  PUBLIC WORD PktBuffersUsed (void)$/;"	f
PktExitDriver	msdos/pktdrvr.c	/^PUBLIC BOOL PktExitDriver (void)$/;"	f
PktFreeMem	msdos/pktdrvr.c	/^LOCAL __inline void PktFreeMem (void)$/;"	f
PktGetAddress	msdos/pktdrvr.c	/^PUBLIC BOOL PktGetAddress (ETHER *addr)$/;"	f
PktGetClassName	msdos/pktdrvr.c	/^PUBLIC const char *PktGetClassName (WORD class)$/;"	f
PktGetDriverInfo	msdos/pktdrvr.c	/^PUBLIC BOOL PktGetDriverInfo (void)$/;"	f
PktGetDriverParam	msdos/pktdrvr.c	/^PUBLIC BOOL PktGetDriverParam (void)$/;"	f
PktGetErrorStr	msdos/pktdrvr.c	/^PUBLIC const char *PktGetErrorStr (int errNum)$/;"	f
PktGetReceiverMode	msdos/pktdrvr.c	/^PUBLIC BOOL PktGetReceiverMode (PKT_RX_MODE *mode)$/;"	f
PktGetStatistics	msdos/pktdrvr.c	/^PUBLIC BOOL PktGetStatistics (WORD handle)$/;"	f
PktInitDriver	msdos/pktdrvr.c	/^PUBLIC BOOL PktInitDriver (PKT_RX_MODE mode)$/;"	f
PktInterrupt	msdos/pktdrvr.c	/^LOCAL __inline BOOL PktInterrupt (void)$/;"	f
PktQueueBusy	msdos/pktdrvr.c	/^  PUBLIC void PktQueueBusy (BOOL busy)$/;"	f
PktRXmodeStr	msdos/pktdrvr.c	/^PUBLIC char const *PktRXmodeStr (PKT_RX_MODE mode)$/;"	f
PktRealStub	msdos/pktdrvr.c	/^        } PktRealStub;$/;"	t	typeref:struct:__anon21	file:
PktReceive	msdos/pktdrvr.c	/^  PUBLIC int PktReceive (BYTE *buf, int max)$/;"	f
PktReceiver	msdos/pktdrvr.c	101;"	d	file:
PktReleaseHandle	msdos/pktdrvr.c	/^PUBLIC BOOL PktReleaseHandle (WORD handle)$/;"	f
PktResetInterface	msdos/pktdrvr.c	/^PUBLIC BOOL PktResetInterface (WORD handle)$/;"	f
PktResetStatistics	msdos/pktdrvr.c	/^PUBLIC BOOL PktResetStatistics (WORD handle)$/;"	f
PktRxDropped	msdos/pktdrvr.c	/^  PUBLIC DWORD PktRxDropped (void)$/;"	f
PktSearchDriver	msdos/pktdrvr.c	/^PUBLIC BOOL PktSearchDriver (void)$/;"	f
PktSessStatistics	msdos/pktdrvr.c	/^PUBLIC BOOL PktSessStatistics (WORD handle)$/;"	f
PktSetAccess	msdos/pktdrvr.c	/^static BOOL PktSetAccess (void)$/;"	f	file:
PktSetAddress	msdos/pktdrvr.c	/^PUBLIC BOOL PktSetAddress (const ETHER *addr)$/;"	f
PktSetReceiverMode	msdos/pktdrvr.c	/^PUBLIC BOOL PktSetReceiverMode (PKT_RX_MODE mode)$/;"	f
PktTerminHandle	msdos/pktdrvr.c	/^PUBLIC BOOL PktTerminHandle (WORD handle)$/;"	f
PktTransmit	msdos/pktdrvr.c	/^PUBLIC BOOL PktTransmit (const void *eth, int len)$/;"	f
PortGetDescription	pcap-tc.c	/^	TcFcnPortGetDescription		PortGetDescription;$/;"	m	struct:_TC_FUNCTIONS	file:
PortGetName	pcap-tc.c	/^	TcFcnPortGetName			PortGetName;$/;"	m	struct:_TC_FUNCTIONS	file:
PphDlt	pcap-tc.c	/^	ULONG	PphDlt;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphFlags	pcap-tc.c	/^	UCHAR	PphFlags;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphLength	pcap-tc.c	/^	USHORT	PphLength;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphVersion	pcap-tc.c	/^	UCHAR	PphVersion;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PpiPacket	pcap-tc.c	/^	u_char *PpiPacket;$/;"	m	struct:pcap_tc	file:
ProtDispatch	msdos/ndis2.h	/^      } ProtDispatch;$/;"	t	typeref:struct:_ProtDispatch
ProtocolChars	msdos/ndis2.h	/^      } ProtocolChars;$/;"	t	typeref:struct:_ProtocolChars
Q2931	atmuni31.h	73;"	d
QOS_PARA	atmuni31.h	66;"	d
QWORD	pcap-dos.h	/^  typedef unsigned __int64  QWORD;$/;"	t
QWORD	pcap-dos.h	/^  typedef unsigned long long  QWORD;$/;"	t
Q_AARP	gencode.h	100;"	d
Q_ADDR1	gencode.h	135;"	d
Q_ADDR2	gencode.h	136;"	d
Q_ADDR3	gencode.h	137;"	d
Q_ADDR4	gencode.h	138;"	d
Q_AH	gencode.h	94;"	d
Q_AND	gencode.h	134;"	d
Q_ARP	gencode.h	74;"	d
Q_ATALK	gencode.h	84;"	d
Q_CARP	gencode.h	127;"	d
Q_CLNP	gencode.h	105;"	d
Q_DECNET	gencode.h	85;"	d
Q_DEFAULT	gencode.h	142;"	d
Q_DST	gencode.h	132;"	d
Q_ESIS	gencode.h	103;"	d
Q_ESP	gencode.h	95;"	d
Q_GATEWAY	gencode.h	65;"	d
Q_HOST	gencode.h	62;"	d
Q_ICMP	gencode.h	79;"	d
Q_ICMPV6	gencode.h	93;"	d
Q_IGMP	gencode.h	80;"	d
Q_IGRP	gencode.h	81;"	d
Q_IP	gencode.h	73;"	d
Q_IPV6	gencode.h	92;"	d
Q_IPX	gencode.h	109;"	d
Q_ISIS	gencode.h	104;"	d
Q_ISIS_CSNP	gencode.h	121;"	d
Q_ISIS_IIH	gencode.h	117;"	d
Q_ISIS_L1	gencode.h	114;"	d
Q_ISIS_L2	gencode.h	115;"	d
Q_ISIS_LAN_IIH	gencode.h	118;"	d
Q_ISIS_LSP	gencode.h	123;"	d
Q_ISIS_PSNP	gencode.h	122;"	d
Q_ISIS_PTP_IIH	gencode.h	119;"	d
Q_ISIS_SNP	gencode.h	120;"	d
Q_ISO	gencode.h	102;"	d
Q_LAT	gencode.h	86;"	d
Q_LINK	gencode.h	72;"	d
Q_MOPDL	gencode.h	89;"	d
Q_MOPRC	gencode.h	88;"	d
Q_NET	gencode.h	63;"	d
Q_NETBEUI	gencode.h	111;"	d
Q_OR	gencode.h	133;"	d
Q_PIM	gencode.h	97;"	d
Q_PORT	gencode.h	64;"	d
Q_PORTRANGE	gencode.h	68;"	d
Q_PROTO	gencode.h	66;"	d
Q_PROTOCHAIN	gencode.h	67;"	d
Q_RA	gencode.h	139;"	d
Q_RADIO	gencode.h	125;"	d
Q_RARP	gencode.h	75;"	d
Q_SCA	gencode.h	87;"	d
Q_SCTP	gencode.h	76;"	d
Q_SRC	gencode.h	131;"	d
Q_STP	gencode.h	107;"	d
Q_TA	gencode.h	140;"	d
Q_TCP	gencode.h	77;"	d
Q_UDP	gencode.h	78;"	d
Q_UNDEF	gencode.h	143;"	d
Q_VRRP	gencode.h	98;"	d
QueryPortList	pcap-tc.c	/^	TcFcnQueryPortList			QueryPortList;$/;"	m	struct:_TC_FUNCTIONS	file:
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RECEIVE_BUF_SIZE	pcap-dos.h	104;"	d
RECEIVE_QUEUE_SIZE	pcap-dos.h	100;"	d
RELEASE	atmuni31.h	48;"	d
RELEASE_DONE	atmuni31.h	49;"	d
RENAME_ASM_SYM	msdos/ndis2.h	537;"	d
RENAME_C_SYM	msdos/ndis2.h	538;"	d
REQ_ADD_MULTICAST_ADDRESS	msdos/ndis2.h	/^        REQ_ADD_MULTICAST_ADDRESS    = 8,$/;"	e	enum:__anon27
REQ_BIND	msdos/ndis2.h	/^        REQ_BIND                 = 2,$/;"	e	enum:__anon29
REQ_CLEAR_STATISTICS	msdos/ndis2.h	/^        REQ_CLEAR_STATISTICS         = 11,$/;"	e	enum:__anon27
REQ_CLOSE_ADAPTER	msdos/ndis2.h	/^        REQ_CLOSE_ADAPTER            = 5,$/;"	e	enum:__anon27
REQ_DELETE_MULTICAST_ADDRESS	msdos/ndis2.h	/^        REQ_DELETE_MULTICAST_ADDRESS = 9,$/;"	e	enum:__anon27
REQ_INITIATE_BIND	msdos/ndis2.h	/^        REQ_INITIATE_BIND        = 1,$/;"	e	enum:__anon29
REQ_INITIATE_DIAGNOSTICS	msdos/ndis2.h	/^        REQ_INITIATE_DIAGNOSTICS     = 1,$/;"	e	enum:__anon27
REQ_INITIATE_PREBIND	msdos/ndis2.h	/^        REQ_INITIATE_PREBIND     = 3,$/;"	e	enum:__anon29
REQ_INITIATE_UNBIND	msdos/ndis2.h	/^        REQ_INITIATE_UNBIND      = 4,$/;"	e	enum:__anon29
REQ_INTERRUPT_REQUEST	msdos/ndis2.h	/^        REQ_INTERRUPT_REQUEST        = 12,$/;"	e	enum:__anon27
REQ_OPEN_ADAPTER	msdos/ndis2.h	/^        REQ_OPEN_ADAPTER             = 4,$/;"	e	enum:__anon27
REQ_READ_ERROR_LOG	msdos/ndis2.h	/^        REQ_READ_ERROR_LOG           = 2,$/;"	e	enum:__anon27
REQ_RESET_MAC	msdos/ndis2.h	/^        REQ_RESET_MAC                = 6,$/;"	e	enum:__anon27
REQ_SET_FUNCTIONAL_ADDRESS	msdos/ndis2.h	/^        REQ_SET_FUNCTIONAL_ADDRESS   = 13,$/;"	e	enum:__anon27
REQ_SET_LOOKAHEAD	msdos/ndis2.h	/^        REQ_SET_LOOKAHEAD            = 14$/;"	e	enum:__anon27
REQ_SET_PACKET_FILTER	msdos/ndis2.h	/^        REQ_SET_PACKET_FILTER        = 7,$/;"	e	enum:__anon27
REQ_SET_STATION_ADDRESS	msdos/ndis2.h	/^        REQ_SET_STATION_ADDRESS      = 3,$/;"	e	enum:__anon27
REQ_UNBIND	msdos/ndis2.h	/^        REQ_UNBIND               = 5$/;"	e	enum:__anon29
REQ_UPDATE_STATISTICS	msdos/ndis2.h	/^        REQ_UPDATE_STATISTICS        = 10,$/;"	e	enum:__anon27
RESTART	atmuni31.h	50;"	d
RESTART_ACK	atmuni31.h	51;"	d
RETF	msdos/ndis_0.asm	/^RETF$/;"	l
RING_GET_CURRENT_FRAME	pcap-linux.c	392;"	d	file:
RING_GET_FRAME_AT	pcap-linux.c	391;"	d	file:
RPCAP_ACTIVE_WAIT	pcap-rpcap.h	93;"	d
RPCAP_DEFAULT_NETADDR	pcap-rpcap.h	89;"	d
RPCAP_DEFAULT_NETPORT	pcap-rpcap.h	86;"	d
RPCAP_DEFAULT_NETPORT_ACTIVE	pcap-rpcap.h	88;"	d
RPCAP_HOSTLIST_SEP	pcap-rpcap.h	110;"	d
RPCAP_HOSTLIST_SIZE	remote-ext.h	400;"	d
RPCAP_MSG_AUTH_REPLY	pcap-rpcap.h	410;"	d
RPCAP_MSG_AUTH_REQ	pcap-rpcap.h	401;"	d
RPCAP_MSG_CLOSE	pcap-rpcap.h	399;"	d
RPCAP_MSG_ENDCAP_REPLY	pcap-rpcap.h	412;"	d
RPCAP_MSG_ENDCAP_REQ	pcap-rpcap.h	403;"	d
RPCAP_MSG_ERROR	pcap-rpcap.h	394;"	d
RPCAP_MSG_FINDALLIF_REPLY	pcap-rpcap.h	406;"	d
RPCAP_MSG_FINDALLIF_REQ	pcap-rpcap.h	395;"	d
RPCAP_MSG_OPEN_REPLY	pcap-rpcap.h	407;"	d
RPCAP_MSG_OPEN_REQ	pcap-rpcap.h	396;"	d
RPCAP_MSG_PACKET	pcap-rpcap.h	400;"	d
RPCAP_MSG_SETSAMPLING_REPLY	pcap-rpcap.h	413;"	d
RPCAP_MSG_SETSAMPLING_REQ	pcap-rpcap.h	404;"	d
RPCAP_MSG_STARTCAP_REPLY	pcap-rpcap.h	408;"	d
RPCAP_MSG_STARTCAP_REQ	pcap-rpcap.h	397;"	d
RPCAP_MSG_STATS_REPLY	pcap-rpcap.h	411;"	d
RPCAP_MSG_STATS_REQ	pcap-rpcap.h	402;"	d
RPCAP_MSG_UPDATEFILTER_REPLY	pcap-rpcap.h	409;"	d
RPCAP_MSG_UPDATEFILTER_REQ	pcap-rpcap.h	398;"	d
RPCAP_NETBUF_SIZE	pcap-rpcap.h	100;"	d
RPCAP_RMTAUTH_NULL	remote-ext.h	307;"	d
RPCAP_RMTAUTH_PWD	remote-ext.h	318;"	d
RPCAP_STARTCAPREQ_FLAG_DGRAM	pcap-rpcap.h	416;"	d
RPCAP_STARTCAPREQ_FLAG_INBOUND	pcap-rpcap.h	418;"	d
RPCAP_STARTCAPREQ_FLAG_OUTBOUND	pcap-rpcap.h	419;"	d
RPCAP_STARTCAPREQ_FLAG_PROMISC	pcap-rpcap.h	415;"	d
RPCAP_STARTCAPREQ_FLAG_SERVEROPEN	pcap-rpcap.h	417;"	d
RPCAP_SUSPEND_WRONGAUTH	pcap-rpcap.h	94;"	d
RPCAP_TIMEOUT_INIT	pcap-rpcap.h	91;"	d
RPCAP_TIMEOUT_RUNTIME	pcap-rpcap.h	92;"	d
RPCAP_UPDATEFILTER_BPF	pcap-rpcap.h	421;"	d
RPCAP_VERSION	pcap-rpcap.h	90;"	d
RX_BUF_SIZE	msdos/pkt_rx0.asm	/^RX_BUF_SIZE = 1500      ; max message size on Ethernet$/;"	d
RX_BUF_SIZE	msdos/pktdrvr.h	7;"	d
RX_ELEMENT	msdos/pkt_rx0.asm	/^RX_ELEMENT     STRUC$/;"	l
RX_ELEMENT	msdos/pktdrvr.h	/^      } RX_ELEMENT;$/;"	t	typeref:struct:__anon20
RealCopy	msdos/pktdrvr.c	/^int RealCopy (ULONG    start_offs,$/;"	f
ReqBlock	msdos/ndis2.h	/^      } ReqBlock;$/;"	t	typeref:struct:_ReqBlock
RestartService	ChmodBPF/ChmodBPF	/^RestartService () { StartService; }$/;"	f
RxBufDescr	msdos/ndis2.h	/^      } RxBufDescr;$/;"	t	typeref:struct:_RxBufDescr
RxBufDescrRec	msdos/ndis2.h	/^      } RxBufDescrRec;$/;"	t	typeref:struct:_RxBufDescrRec
SA_LEN	fad-getad.c	106;"	d	file:
SA_LEN	fad-getad.c	133;"	d	file:
SA_LEN	fad-getad.c	135;"	d	file:
SA_LEN	fad-gifc.c	93;"	d	file:
SA_LEN	fad-gifc.c	95;"	d	file:
SCALE_DOWN	sf-pcap.c	/^	SCALE_DOWN$/;"	e	enum:__anon4	file:
SCALE_DOWN_BIN	sf-pcap-ng.c	/^	SCALE_DOWN_BIN$/;"	e	enum:__anon12	file:
SCALE_DOWN_DEC	sf-pcap-ng.c	/^	SCALE_DOWN_DEC,$/;"	e	enum:__anon12	file:
SCALE_UP	sf-pcap.c	/^	SCALE_UP,$/;"	e	enum:__anon4	file:
SCALE_UP_BIN	sf-pcap-ng.c	/^	SCALE_UP_BIN,$/;"	e	enum:__anon12	file:
SCALE_UP_DEC	sf-pcap-ng.c	/^	SCALE_UP_DEC,$/;"	e	enum:__anon12	file:
SETUP	atmuni31.h	47;"	d
SET_BINMODE	savefile.c	85;"	d	file:
SET_BINMODE	savefile.c	88;"	d	file:
SET_BINMODE	savefile.c	90;"	d	file:
SET_BINMODE	sf-pcap.c	74;"	d	file:
SET_BINMODE	sf-pcap.c	77;"	d	file:
SET_BINMODE	sf-pcap.c	79;"	d	file:
SET_DELETE	optimize.c	168;"	d	file:
SET_INSERT	optimize.c	162;"	d	file:
SET_INTERSECT	optimize.c	174;"	d	file:
SET_MEMBER	optimize.c	156;"	d	file:
SET_SUBTRACT	optimize.c	184;"	d	file:
SET_UNION	optimize.c	194;"	d	file:
SF_BROADCAST	msdos/ndis2.h	/^        SF_BROADCAST             = 0x00000001L,$/;"	e	enum:__anon28
SF_FUNCTIONAL	msdos/ndis2.h	/^        SF_FUNCTIONAL            = 0x00000004L,$/;"	e	enum:__anon28
SF_INITIATE_DIAGS	msdos/ndis2.h	/^        SF_INITIATE_DIAGS        = 0x00000040L,$/;"	e	enum:__anon28
SF_INTERRUPT_REQUEST	msdos/ndis2.h	/^        SF_INTERRUPT_REQUEST     = 0x00001000L,$/;"	e	enum:__anon28
SF_LOOPBACK	msdos/ndis2.h	/^        SF_LOOPBACK              = 0x00000080L,$/;"	e	enum:__anon28
SF_MULTICAST	msdos/ndis2.h	/^        SF_MULTICAST             = 0x00000002L,$/;"	e	enum:__anon28
SF_OPEN_CLOSE	msdos/ndis2.h	/^        SF_OPEN_CLOSE            = 0x00000800L,$/;"	e	enum:__anon28
SF_PROMISCUOUS	msdos/ndis2.h	/^        SF_PROMISCUOUS           = 0x00000008L,$/;"	e	enum:__anon28
SF_RECEIVE_CHAIN	msdos/ndis2.h	/^        SF_RECEIVE_CHAIN         = 0x00000100L,$/;"	e	enum:__anon28
SF_RESET_MAC	msdos/ndis2.h	/^        SF_RESET_MAC             = 0x00000400L,$/;"	e	enum:__anon28
SF_SOFT_ADDRESS	msdos/ndis2.h	/^        SF_SOFT_ADDRESS          = 0x00000010L,$/;"	e	enum:__anon28
SF_SOURCE_ROUTING	msdos/ndis2.h	/^        SF_SOURCE_ROUTING        = 0x00000200L,$/;"	e	enum:__anon28
SF_SOURCE_ROUTING_BRIDGE	msdos/ndis2.h	/^        SF_SOURCE_ROUTING_BRIDGE = 0x00002000L,$/;"	e	enum:__anon28
SF_STATS_CURRENT	msdos/ndis2.h	/^        SF_STATS_CURRENT         = 0x00000020L,$/;"	e	enum:__anon28
SF_VIRTUAL_ADDRESSES	msdos/ndis2.h	/^        SF_VIRTUAL_ADDRESSES     = 0x00004000L$/;"	e	enum:__anon28
SHOW_RX	msdos/pkt_rx0.asm	/^SHOW_RX  MACRO$/;"	m
SHUT_WR	sockutils.c	80;"	d	file:
SIG_CATCH	lbl/os-sunos4.h	206;"	d
SIG_CATCH	lbl/os-sunos4.h	207;"	d
SIG_DFL	lbl/os-sunos4.h	200;"	d
SIG_DFL	lbl/os-sunos4.h	201;"	d
SIG_ERR	lbl/os-sunos4.h	198;"	d
SIG_ERR	lbl/os-sunos4.h	199;"	d
SIG_HOLD	lbl/os-sunos4.h	209;"	d
SIG_HOLD	lbl/os-sunos4.h	210;"	d
SIG_IGN	lbl/os-sunos4.h	202;"	d
SIG_IGN	lbl/os-sunos4.h	203;"	d
SLL_ADDRLEN	pcap/sll.h	81;"	d
SLL_HDR_LEN	pcap/sll.h	80;"	d
SNF_HAVE_INJECT_API	pcap-snf.c	20;"	d	file:
SOCKBUF_BUFFERIZE	sockutils.h	177;"	d
SOCKBUF_CHECKONLY	sockutils.h	175;"	d
SOCKET	remote-ext.h	442;"	d
SOCKET	sockutils.h	75;"	d
SOCKET_NAME_NULL_DAD	sockutils.c	89;"	d	file:
SOCKET_NO_NAME_AVAILABLE	sockutils.c	87;"	d	file:
SOCKET_NO_PORT_AVAILABLE	sockutils.c	88;"	d	file:
SOCKOPEN_CLIENT	sockutils.h	180;"	d
SOCKOPEN_SERVER	sockutils.h	182;"	d
SOCK_ASSERT	sockutils.h	155;"	d
SOCK_ASSERT	sockutils.h	162;"	d
SOCK_ASSERT	sockutils.h	164;"	d
SOCK_ERRBUF_SIZE	sockutils.c	84;"	d	file:
SOCK_RECEIVEALL_NO	sockutils.h	185;"	d
SOCK_RECEIVEALL_YES	sockutils.h	187;"	d
SOLARIS	bpf/net/bpf_filter.c	64;"	d	file:
SOLARIS	net/bpf_filter.c	64;"	d	file:
SOL_PACKET	pcap-linux.c	285;"	d	file:
SOURCE	msdos/makefile	/^SOURCE = grammar.c  scanner.c bpf_filt.c bpf_imag.c bpf_dump.c \\$/;"	m
SRC	Makefile	/^SRC =	$(PSRC) $(FSRC) $(CSRC) $(SSRC) $(GENSRC)$/;"	m
SSRC	Makefile	/^SSRC =  $/;"	m
STACK_POOL_SIZE	msdos/ndis2.c	66;"	d	file:
STACK_SIZE	msdos/ndis2.c	67;"	d	file:
STATUS	atmuni31.h	52;"	d
STATUS_ADAPTER_CHECK	msdos/ndis2.h	/^        STATUS_ADAPTER_CHECK    = 2,$/;"	e	enum:__anon25
STATUS_END_RESET	msdos/ndis2.h	/^        STATUS_END_RESET        = 5$/;"	e	enum:__anon25
STATUS_ENQ	atmuni31.h	53;"	d
STATUS_INTERRUPT	msdos/ndis2.h	/^        STATUS_INTERRUPT        = 4,$/;"	e	enum:__anon25
STATUS_RING_STATUS	msdos/ndis2.h	/^        STATUS_RING_STATUS      = 1,$/;"	e	enum:__anon25
STATUS_START_RESET	msdos/ndis2.h	/^        STATUS_START_RESET      = 3,$/;"	e	enum:__anon25
STDC_HEADERS	config.h	288;"	d
STRINGIFY	pcap-dlpi.c	957;"	d	file:
STRINGIFY	pcap-libdlpi.c	245;"	d	file:
SUNATM_DIR_POS	sunatmpos.h	34;"	d
SUNATM_PKT_BEGIN_POS	sunatmpos.h	37;"	d
SUNATM_VCI_POS	sunatmpos.h	36;"	d
SUNATM_VPI_POS	sunatmpos.h	35;"	d
SWAPLL	pcap-int.h	61;"	d
SWAPLL	pcap-int.h	76;"	d
SWAPLONG	gencode.c	1815;"	d	file:
SWAPLONG	pcap-common.h	15;"	d
SWAPPED	sf-pcap.c	/^	SWAPPED,$/;"	e	enum:__anon3	file:
SWAPS	pcap-win32.c	72;"	d	file:
SWAPSHORT	pcap-common.h	17;"	d
SYS_USB_BUS_DIR	pcap-usb-linux.c	73;"	d	file:
StartService	ChmodBPF/ChmodBPF	/^StartService ()$/;"	f
StatisticsDestroy	pcap-tc.c	/^	TcFcnStatisticsDestroy		StatisticsDestroy;$/;"	m	struct:_TC_FUNCTIONS	file:
StatisticsQueryValue	pcap-tc.c	/^	TcFcnStatisticsQueryValue	StatisticsQueryValue;$/;"	m	struct:_TC_FUNCTIONS	file:
StatisticsUpdate	pcap-tc.c	/^	TcFcnStatisticsUpdate		StatisticsUpdate;$/;"	m	struct:_TC_FUNCTIONS	file:
StatusGetString	pcap-tc.c	/^	TcFcnStatusGetString		StatusGetString;$/;"	m	struct:_TC_FUNCTIONS	file:
StopService	ChmodBPF/ChmodBPF	/^StopService ()$/;"	f
TAGFILES	Makefile	/^TAGFILES = \\$/;"	m
TCPDUMP_MAGIC	sf-pcap.c	86;"	d	file:
TC_API_CANNOT_LOAD	pcap-tc.c	/^	TC_API_CANNOT_LOAD,$/;"	e	enum:LONG	file:
TC_API_LOADED	pcap-tc.c	/^	TC_API_LOADED,$/;"	e	enum:LONG	file:
TC_API_LOADING	pcap-tc.c	/^	TC_API_LOADING$/;"	e	enum:LONG	file:
TC_API_LOAD_STATUS	pcap-tc.c	/^	TC_API_LOAD_STATUS;$/;"	t	typeref:enum:LONG	file:
TC_API_UNLOADED	pcap-tc.c	/^	TC_API_UNLOADED = 0,$/;"	e	enum:LONG	file:
TC_FUNCTIONS	pcap-tc.c	/^	TC_FUNCTIONS;$/;"	t	typeref:struct:_TC_FUNCTIONS	file:
TDBufDescr	msdos/ndis2.h	/^      } TDBufDescr;$/;"	t	typeref:struct:_TDBufDescr
TDBufDescrRec	msdos/ndis2.h	/^      } TDBufDescrRec;$/;"	t	typeref:struct:_TDBufDescrRec
TEMP_BUF_SIZE	sockutils.c	806;"	d	file:
TESTS	Makefile	/^TESTS = \\$/;"	m
TESTS_SRC	Makefile	/^TESTS_SRC = \\$/;"	m
TPACKET_V1	pcap-linux.c	203;"	d	file:
TPACKET_V1_64	pcap-linux.c	376;"	d	file:
TRACE0	msdos/ndis2.c	217;"	d	file:
TRACE0	msdos/ndis2.c	223;"	d	file:
TRACE1	msdos/ndis2.c	218;"	d	file:
TRACE1	msdos/ndis2.c	224;"	d	file:
TRAFF_DESCRIP	atmuni31.h	64;"	d
TRUE	pcap-dos.h	28;"	d
TSTOMILLI	pcap-bpf.c	339;"	d	file:
TSTOMILLI	pcap-bpf.c	361;"	d	file:
TX_BUF_SIZE	msdos/pkt_rx0.asm	/^TX_BUF_SIZE = 1500$/;"	d
TX_BUF_SIZE	msdos/pktdrvr.h	8;"	d
TX_ELEMENT	msdos/pktdrvr.h	/^      } TX_ELEMENT;$/;"	t	typeref:struct:__anon19
TYPE_AAL2	pcap-dag.c	114;"	d	file:
TYPE_AAL5	pcap-dag.c	58;"	d	file:
TYPE_COLOR_ETH	pcap-dag.c	86;"	d	file:
TYPE_COLOR_HASH_ETH	pcap-dag.c	122;"	d	file:
TYPE_COLOR_HASH_POS	pcap-dag.c	118;"	d	file:
TYPE_COLOR_HDLC_POS	pcap-dag.c	82;"	d	file:
TYPE_COLOR_MC_HDLC_POS	pcap-dag.c	110;"	d	file:
TYPE_DSM_COLOR_ETH	pcap-dag.c	106;"	d	file:
TYPE_DSM_COLOR_HDLC_POS	pcap-dag.c	102;"	d	file:
TYPE_INFINIBAND	pcap-dag.c	126;"	d	file:
TYPE_INFINIBAND_LINK	pcap-dag.c	142;"	d	file:
TYPE_IPV4	pcap-dag.c	130;"	d	file:
TYPE_IPV6	pcap-dag.c	134;"	d	file:
TYPE_IP_COUNTER	pcap-dag.c	94;"	d	file:
TYPE_MC_AAL2	pcap-dag.c	90;"	d	file:
TYPE_MC_AAL5	pcap-dag.c	78;"	d	file:
TYPE_MC_ATM	pcap-dag.c	70;"	d	file:
TYPE_MC_HDLC	pcap-dag.c	62;"	d	file:
TYPE_MC_RAW	pcap-dag.c	66;"	d	file:
TYPE_MC_RAW_CHANNEL	pcap-dag.c	74;"	d	file:
TYPE_PAD	pcap-dag.c	146;"	d	file:
TYPE_POS	atmuni31.h	83;"	d
TYPE_RAW_LINK	pcap-dag.c	138;"	d	file:
TYPE_TCP_FLOW_COUNTER	pcap-dag.c	98;"	d	file:
TcAcceptedCount	pcap-tc.c	/^	ULONG TcAcceptedCount;$/;"	m	struct:pcap_tc	file:
TcActivate	pcap-tc.c	/^TcActivate(pcap_t *p)$/;"	f	file:
TcCleanup	pcap-tc.c	/^static void TcCleanup(pcap_t *p)$/;"	f	file:
TcCreate	pcap-tc.c	/^TcCreate(const char *device, char *ebuf, int *is_ours)$/;"	f
TcCreatePcapIfFromPort	pcap-tc.c	/^static pcap_if_t* TcCreatePcapIfFromPort(TC_PORT port)$/;"	f	file:
TcFcnFreePortList	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnFreePortList)			(TC_PORT *pPorts);$/;"	t	file:
TcFcnInstanceClose	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceClose)			(TC_INSTANCE instance);$/;"	t	file:
TcFcnInstanceGetReceiveWaitHandle	pcap-tc.c	/^typedef HANDLE		(TC_CALLCONV *TcFcnInstanceGetReceiveWaitHandle) (TC_INSTANCE instance);$/;"	t	file:
TcFcnInstanceOpenByName	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceOpenByName)		(PCHAR name, PTC_INSTANCE pInstance);$/;"	t	file:
TcFcnInstanceQueryFeature	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceQueryFeature)	(TC_INSTANCE instance, ULONG feature, PULONG pValue);$/;"	t	file:
TcFcnInstanceQueryStatistics	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceQueryStatistics)	(TC_INSTANCE instance, PTC_STATISTICS pStatistics);$/;"	t	file:
TcFcnInstanceReceivePackets	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceReceivePackets)	(TC_INSTANCE instance, PTC_PACKETS_BUFFER pBuffer);$/;"	t	file:
TcFcnInstanceSetFeature	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceSetFeature)		(TC_INSTANCE instance, ULONG feature, ULONG value);$/;"	t	file:
TcFcnInstanceTransmitPackets	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnInstanceTransmitPackets)	(TC_INSTANCE instance, TC_PACKETS_BUFFER pBuffer);$/;"	t	file:
TcFcnPacketsBufferCommitNextPacket	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnPacketsBufferCommitNextPacket)(TC_PACKETS_BUFFER buffer, PTC_PACKET_HEADER pHeader, PVOID pData);$/;"	t	file:
TcFcnPacketsBufferCreate	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnPacketsBufferCreate)		(ULONG size, PTC_PACKETS_BUFFER pBuffer);$/;"	t	file:
TcFcnPacketsBufferDestroy	pcap-tc.c	/^typedef VOID		(TC_CALLCONV *TcFcnPacketsBufferDestroy)	(TC_PACKETS_BUFFER buffer);$/;"	t	file:
TcFcnPacketsBufferQueryNextPacket	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnPacketsBufferQueryNextPacket)(TC_PACKETS_BUFFER buffer, PTC_PACKET_HEADER pHeader, PVOID *ppData);$/;"	t	file:
TcFcnPortGetDescription	pcap-tc.c	/^typedef PCHAR		(TC_CALLCONV *TcFcnPortGetDescription)		(TC_PORT port);$/;"	t	file:
TcFcnPortGetName	pcap-tc.c	/^typedef PCHAR		(TC_CALLCONV *TcFcnPortGetName)				(TC_PORT port);$/;"	t	file:
TcFcnQueryPortList	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnQueryPortList)			(PTC_PORT *ppPorts, PULONG pLength);$/;"	t	file:
TcFcnStatisticsDestroy	pcap-tc.c	/^typedef VOID		(TC_CALLCONV *TcFcnStatisticsDestroy)		(TC_STATISTICS statistics);$/;"	t	file:
TcFcnStatisticsQueryValue	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnStatisticsQueryValue)	(TC_STATISTICS statistics, ULONG counterId, PULONGLONG pValue);$/;"	t	file:
TcFcnStatisticsUpdate	pcap-tc.c	/^typedef TC_STATUS	(TC_CALLCONV *TcFcnStatisticsUpdate)		(TC_STATISTICS statistics);$/;"	t	file:
TcFcnStatusGetString	pcap-tc.c	/^typedef PCHAR		(TC_CALLCONV *TcFcnStatusGetString)			(TC_STATUS status);$/;"	t	file:
TcFindAllDevs	pcap-tc.c	/^TcFindAllDevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
TcGetAirPcapHandle	pcap-tc.c	/^TcGetAirPcapHandle(pcap_t *p _U_)$/;"	f	file:
TcGetNonBlock	pcap-tc.c	/^static int TcGetNonBlock(pcap_t *p, char *errbuf)$/;"	f	file:
TcGetReceiveWaitHandle	pcap-tc.c	/^TcGetReceiveWaitHandle(pcap_t *p)$/;"	f	file:
TcInject	pcap-tc.c	/^static int TcInject(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
TcInstance	pcap-tc.c	/^	TC_INSTANCE TcInstance;$/;"	m	struct:pcap_tc	file:
TcLiveDump	pcap-tc.c	/^TcLiveDump(pcap_t *p, char *filename _U_, int maxsize _U_, int maxpacks _U_)$/;"	f	file:
TcLiveDumpEnded	pcap-tc.c	/^TcLiveDumpEnded(pcap_t *p, int sync _U_)$/;"	f	file:
TcOidGetRequest	pcap-tc.c	/^TcOidGetRequest(pcap_t *p, bpf_u_int32 oid _U_, void *data _U_, size_t *lenp _U_)$/;"	f	file:
TcOidSetRequest	pcap-tc.c	/^TcOidSetRequest(pcap_t *p, bpf_u_int32 oid _U_, const void *data _U_,$/;"	f	file:
TcPacketsBuffer	pcap-tc.c	/^	TC_PACKETS_BUFFER TcPacketsBuffer;$/;"	m	struct:pcap_tc	file:
TcRead	pcap-tc.c	/^static int TcRead(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
TcSendqueueTransmit	pcap-tc.c	/^TcSendqueueTransmit(pcap_t *p, pcap_send_queue *queue _U_, int sync _U_)$/;"	f	file:
TcSetBuff	pcap-tc.c	/^TcSetBuff(pcap_t *p, int dim)$/;"	f	file:
TcSetDatalink	pcap-tc.c	/^static int TcSetDatalink(pcap_t *p, int dlt)$/;"	f	file:
TcSetFilter	pcap-tc.c	/^TcSetFilter(pcap_t *p, struct bpf_program *fp)$/;"	f	file:
TcSetMinToCopy	pcap-tc.c	/^TcSetMinToCopy(pcap_t *p, int size)$/;"	f	file:
TcSetMode	pcap-tc.c	/^TcSetMode(pcap_t *p, int mode)$/;"	f	file:
TcSetNonBlock	pcap-tc.c	/^static int TcSetNonBlock(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
TcSetUserBuffer	pcap-tc.c	/^TcSetUserBuffer(pcap_t *p, int size _U_)$/;"	f	file:
TcStats	pcap-tc.c	/^TcStats(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
TcStatsEx	pcap-tc.c	/^TcStatsEx(pcap_t *p, int *pcap_stat_size)$/;"	f	file:
TempPkt	pcap-dag.c	/^static unsigned char TempPkt[MAX_DAG_PACKET];$/;"	v	file:
TotAccepted	pcap-pf.c	/^	u_long	TotAccepted;	\/* count accepted by filter *\/$/;"	m	struct:pcap_pf	file:
TotAccepted	pcap-rpcap.h	/^	u_long	TotAccepted;	\/* count accepted by filter *\/$/;"	m	struct:pcap_md
TotCapt	pcap-rpcap.h	/^	unsigned int TotCapt;$/;"	m	struct:pcap_md
TotDrops	pcap-pf.c	/^	u_long	TotDrops;	\/* count of dropped packets *\/$/;"	m	struct:pcap_pf	file:
TotDrops	pcap-rpcap.h	/^	u_long	TotDrops;		\/* count of dropped packets *\/$/;"	m	struct:pcap_md
TotMissed	pcap-pf.c	/^	long	TotMissed;	\/* missed by i\/f during this run *\/$/;"	m	struct:pcap_pf	file:
TotMissed	pcap-rpcap.h	/^	long	TotMissed;		\/* missed by i\/f during this run *\/$/;"	m	struct:pcap_md
TotNetDrops	pcap-rpcap.h	/^	unsigned int TotNetDrops;		\/* keeps the number of packets that have been dropped by the network *\/$/;"	m	struct:pcap_md
TotPkts	pcap-pf.c	/^	u_long	TotPkts;	\/* can't oflow for 79 hrs on ether *\/$/;"	m	struct:pcap_pf	file:
TotPkts	pcap-rpcap.h	/^	u_long	TotPkts;		\/* can't overflow for 79 hrs on ether *\/$/;"	m	struct:pcap_md
TxBufDescr	msdos/ndis2.h	/^      } TxBufDescr;$/;"	t	typeref:struct:_TxBufDescr
TxBufDescrRec	msdos/ndis2.h	/^      } TxBufDescrRec;$/;"	t	typeref:struct:_TxBufDescrRec
UINT	pcap-dos.h	/^  typedef unsigned int UINT;$/;"	t
UMTbufs	msdos/pktdrvr.h	/^        WORD  UMTbufs;      \/*   High Performance drivers only   *\/$/;"	m	struct:__anon17
UNGUARD	msdos/ndis2.h	48;"	d
UNGUARD	msdos/ndis2.h	55;"	d
UNGUARD	msdos/ndis2.h	62;"	d
UNGUARD	msdos/ndis2.h	69;"	d
URB_BULK	pcap/usb.h	44;"	d
URB_COMPLETE	pcap/usb.h	50;"	d
URB_CONTROL	pcap/usb.h	43;"	d
URB_ERROR	pcap/usb.h	51;"	d
URB_INTERRUPT	pcap/usb.h	42;"	d
URB_ISOCHRONOUS	pcap/usb.h	41;"	d
URB_SUBMIT	pcap/usb.h	49;"	d
URB_TRANSFER_IN	pcap/usb.h	40;"	d
USBUS_PREFIX_LEN	pcap-bpf.c	56;"	d	file:
USB_DIR_IN	pcap-usb-linux.c	268;"	d	file:
USB_DT_DEVICE	pcap-usb-linux.c	274;"	d	file:
USB_IFACE	pcap-usb-linux.c	70;"	d	file:
USB_LINE_LEN	pcap-usb-linux.c	75;"	d	file:
USB_RECIP_DEVICE	pcap-usb-linux.c	270;"	d	file:
USB_REQ_GET_DESCRIPTOR	pcap-usb-linux.c	272;"	d	file:
USB_TEXT_DIR	pcap-usb-linux.c	72;"	d	file:
USB_TEXT_DIR_OLD	pcap-usb-linux.c	71;"	d	file:
USB_TYPE_STANDARD	pcap-usb-linux.c	269;"	d	file:
USE_BPF	tests/valgrindtest.c	69;"	d	file:
USE_SOCKET_FILTERS	tests/valgrindtest.c	72;"	d	file:
VCI_BCC	atmuni31.h	37;"	d
VCI_ILMIC	atmuni31.h	41;"	d
VCI_METAC	atmuni31.h	40;"	d
VCI_OAMF4EC	atmuni31.h	39;"	d
VCI_OAMF4SC	atmuni31.h	38;"	d
VCI_PPC	atmuni31.h	36;"	d
VEC_SIZE	pcap-usb-linux.c	879;"	d	file:
VER	Makefile	/^	VER=`cat $(srcdir)\/VERSION`; \\$/;"	m
VLAN_TAG_LEN	pcap/vlan.h	42;"	d
VLAN_TPID	pcap-linux.c	414;"	d	file:
VLAN_TPID	pcap-linux.c	416;"	d	file:
V_RPATH_OPT	Makefile	/^V_RPATH_OPT = -Wl,-rpath,$/;"	m
WATT_INC	msdos/makefile	/^WATT_INC = $(WATT_ROOT)\\inc$/;"	m
WIN32_DEFAULT_KERNEL_BUFFER_SIZE	pcap-win32.c	69;"	d	file:
WIN32_DEFAULT_USER_BUFFER_SIZE	pcap-win32.c	66;"	d	file:
WINSOCK_MAJOR_VERSION	sockutils.c	72;"	d	file:
WINSOCK_MINOR_VERSION	sockutils.c	73;"	d	file:
WORD	pcap-dos.h	/^typedef unsigned short WORD;$/;"	t
X_ATOM	optimize.c	100;"	d	file:
YACC	Makefile	/^YACC = bison -y$/;"	m
YYTEXT_POINTER	config.h	295;"	d
_AIX	pcap-bpf.c	81;"	d	file:
_AIX	pcap-bpf.c	83;"	d	file:
_BindingsList	msdos/ndis2.h	/^typedef struct _BindingsList {$/;"	s
_CardHandle	msdos/ndis2.h	/^typedef struct _CardHandle {$/;"	s
_CommonChars	msdos/ndis2.h	/^typedef struct _CommonChars {$/;"	s
_DARWIN_USE_64_BIT_INODE	config.h	299;"	d
_EthernetIIHeader	msdos/ndis2.h	/^typedef struct _EthernetIIHeader {$/;"	s
_FILE_OFFSET_BITS	config.h	303;"	d
_FailingModules	msdos/ndis2.h	/^typedef struct _FailingModules {$/;"	s
_FddiHeader	msdos/ndis2.h	/^typedef struct _FddiHeader {$/;"	s
_GNU_SOURCE	pcap-linux.c	113;"	d	file:
_HardwareAddress	msdos/ndis2.h	/^typedef union _HardwareAddress {$/;"	u
_Ieee802Dot2SnapHeader	msdos/ndis2.h	/^typedef struct _Ieee802Dot2SnapHeader {$/;"	s
_Ieee802Dot5Header	msdos/ndis2.h	/^typedef struct _Ieee802Dot5Header {$/;"	s
_MacChars	msdos/ndis2.h	/^typedef struct _MacChars {$/;"	s
_MacStatusTable	msdos/ndis2.h	/^typedef struct _MacStatusTable {$/;"	s
_MacUpperDispatch	msdos/ndis2.h	/^typedef struct _MacUpperDispatch {$/;"	s
_MulticastList	msdos/ndis2.h	/^typedef struct _MulticastList {$/;"	s
_NET80211_IEEE80211_H_	ieee80211.h	35;"	d
_NET_IF_H_	Win32/Include/net/if.h	38;"	d
_NSEC_PER_SEC	pcap-snf.c	102;"	d	file:
_PPI_FIELD_802_3_EXTENSION	pcap-tc.c	/^typedef struct _PPI_FIELD_802_3_EXTENSION$/;"	s	file:
_PPI_FIELD_AGGREGATION_EXTENSION	pcap-tc.c	/^typedef struct _PPI_FIELD_AGGREGATION_EXTENSION$/;"	s	file:
_PPI_FIELD_HEADER	pcap-tc.c	/^typedef struct _PPI_FIELD_HEADER$/;"	s	file:
_PPI_HEADER	pcap-tc.c	/^typedef struct _PPI_HEADER$/;"	s	file:
_PPI_PACKET_HEADER	pcap-tc.c	/^typedef struct _PPI_PACKET_HEADER$/;"	s	file:
_PktBuf	msdos/ndis2.h	/^typedef struct _PktBuf {$/;"	s
_PktReceiver	msdos/pkt_rx0.asm	/^_PktReceiver:$/;"	l
_PktReceiver	msdos/pkt_rx1.s	/^_PktReceiver:$/;"	l
_PktReceiver	msdos/pktdrvr.c	/^          BYTE       _PktReceiver[15]; \/* starts on a paragraph (16byte) *\/$/;"	m	struct:__anon21	file:
_ProtDispatch	msdos/ndis2.h	/^typedef struct _ProtDispatch {$/;"	s
_ProtocolChars	msdos/ndis2.h	/^typedef struct _ProtocolChars {$/;"	s
_ReqBlock	msdos/ndis2.h	/^typedef struct _ReqBlock {$/;"	s
_RxBufDescr	msdos/ndis2.h	/^typedef struct _RxBufDescr {$/;"	s
_RxBufDescrRec	msdos/ndis2.h	/^typedef struct _RxBufDescrRec {$/;"	s
_SIZEOF_ADDR_IFREQ	Win32/Include/net/if.h	181;"	d
_TC_FUNCTIONS	pcap-tc.c	/^typedef struct _TC_FUNCTIONS$/;"	s	file:
_TDBufDescr	msdos/ndis2.h	/^typedef struct _TDBufDescr {$/;"	s
_TDBufDescrRec	msdos/ndis2.h	/^typedef struct _TDBufDescrRec {$/;"	s
_TEXT	msdos/ndis_0.asm	/^_TEXT SEGMENT$/;"	l
_TEXT	msdos/pkt_rx0.asm	/^_TEXT SEGMENT$/;"	l
_TxBufDescr	msdos/ndis2.h	/^typedef struct _TxBufDescr {$/;"	s
_TxBufDescrRec	msdos/ndis2.h	/^typedef struct _TxBufDescrRec {$/;"	s
_U_	pcap-dos.h	89;"	d
_U_	pcap-dos.h	93;"	d
_U_	sf-pcap-ng.c	/^static const char rcsid[] _U_ =$/;"	v	file:
_U_	sf-pcap.c	/^static const char rcsid[] _U_ =$/;"	v	file:
_U_	tests/can_set_rfmon_test.c	/^static const char copyright[] _U_ =$/;"	v	file:
_U_	tests/capturetest.c	/^static const char copyright[] _U_ =$/;"	v	file:
_U_	tests/filtertest.c	/^static const char copyright[] _U_ =$/;"	v	file:
_U_	tests/opentest.c	/^static const char copyright[] _U_ =$/;"	v	file:
_U_	tests/reactivatetest.c	/^static const char copyright[] _U_ =$/;"	v	file:
_U_	tests/selpolltest.c	/^static const char copyright[] _U_ =$/;"	v	file:
_U_	tests/valgrindtest.c	/^static const char copyright[] _U_ =$/;"	v	file:
_WINSOCKAPI_	pcap-stdinc.h	69;"	d
_WINSOCKAPI_	sockutils.h	47;"	d
__ATTRIBUTE___FORMAT_OK	config.h	315;"	d
__DMA_H	pcap-dos.c	1503;"	d	file:
__IOPORT_H	pcap-dos.c	1502;"	d	file:
__PCAP_DOS_H	pcap-dos.h	7;"	d
__PCAP_NDIS_H	msdos/ndis2.h	41;"	d
__PCAP_RPCAP_H__	pcap-rpcap.h	35;"	d
__PCAP_TC_H__	pcap-tc.h	33;"	d
__PKTDRVR_H	msdos/pktdrvr.h	2;"	d
__REMOTE_EXT_H__	remote-ext.h	35;"	d
__SOCKADDR_COMMON	gencode.c	117;"	d	file:
__SOCKUTILS_H__	sockutils.h	34;"	d
__attribute__	gencode.h	57;"	d
__genl_ctrl_alloc_cache	pcap-linux.c	/^__genl_ctrl_alloc_cache(struct nl_handle *h, struct nl_cache **cache)$/;"	f	file:
__has_attribute	tests/capturetest.c	60;"	d	file:
__has_attribute	tests/filtertest.c	68;"	d	file:
__has_attribute	tests/opentest.c	59;"	d	file:
__has_attribute	tests/selpolltest.c	68;"	d	file:
__has_attribute	tests/valgrindtest.c	117;"	d	file:
__inline__	pcap-dos.c	1506;"	d	file:
__pcap_atodn	nametoaddr.c	/^__pcap_atodn(const char *s, bpf_u_int32 *addr)$/;"	f
__pcap_atoin	nametoaddr.c	/^__pcap_atoin(const char *s, bpf_u_int32 *addr)$/;"	f
__pcap_nametodnaddr	nametoaddr.c	/^__pcap_nametodnaddr(const char *name, u_short *res)$/;"	f
_compiler_state	gencode.c	/^struct _compiler_state {$/;"	s	file:
_dummy	msdos/pktdrvr.c	/^          WORD       _dummy[2];        \/* screenSeg,newInOffset *\/$/;"	m	struct:__anon21	file:
_fanChars	msdos/pktdrvr.c	/^          BYTE       _fanChars[4];$/;"	m	struct:__anon21	file:
_fanIndex	msdos/pktdrvr.c	/^          WORD       _fanIndex;$/;"	m	struct:__anon21	file:
_iso_rec	pcap/usb.h	/^typedef struct _iso_rec {$/;"	s
_opt_state	optimize.c	/^struct _opt_state {$/;"	s	file:
_pcap_bluetooth_h4_header	pcap/bluetooth.h	/^typedef struct _pcap_bluetooth_h4_header {$/;"	s
_pcap_bluetooth_linux_monitor_header	pcap/bluetooth.h	/^typedef struct _pcap_bluetooth_linux_monitor_header {$/;"	s
_pktDrop	msdos/pkt_rx0.asm	/^_pktDrop       dw  0,0                        ; packet drop counter$/;"	d
_pktDrop	msdos/pkt_rx1.s	/^_pktDrop    dw   0,0                       ; packet drop counter$/;"	d
_pktDrop	msdos/pktdrvr.c	/^          DWORD      _pktDrop;$/;"	m	struct:__anon21	file:
_pktRxBuf	msdos/pkt_rx0.asm	/^_pktRxBuf      RX_ELEMENT NUM_RX_BUF dup (<>) ; RX structures$/;"	l
_pktRxBuf	msdos/pkt_rx1.s	/^_pktRxBuf   resb (RX_SIZE*NUM_RX_BUF)      ; RX structures$/;"	l
_pktRxBuf	msdos/pktdrvr.c	/^          RX_ELEMENT _pktRxBuf[NUM_RX_BUF];$/;"	m	struct:__anon21	file:
_pktRxEnd	msdos/pkt_rx0.asm	/^_pktRxEnd  db 0                      ; marker for end of r-mode code\/data$/;"	d
_pktRxEnd	msdos/pkt_rx1.s	/^_pktRxEnd  db 0                      ; marker for end of r-mode code\/data$/;"	d
_pktTemp	msdos/pkt_rx0.asm	/^_pktTemp       db  20                dup (0)  ; temp work area$/;"	d
_pktTemp	msdos/pkt_rx1.s	/^_pktTemp    resb 20                        ; temp work area$/;"	l
_pktTemp	msdos/pktdrvr.c	/^          BYTE       _pktTemp [20];$/;"	m	struct:__anon21	file:
_pktTxBuf	msdos/pkt_rx0.asm	/^_pktTxBuf      db  (TX_BUF_SIZE+14)  dup (0)  ; TX buffer$/;"	d
_pktTxBuf	msdos/pkt_rx1.s	/^_pktTxBuf   resb (ETH_MAX)                 ; TX buffer$/;"	l
_pktTxBuf	msdos/pktdrvr.c	/^          TX_ELEMENT _pktTxBuf[1];$/;"	m	struct:__anon21	file:
_rxInOfs	msdos/pkt_rx0.asm	/^_rxInOfs       dw  offset _pktRxBuf           ; into _pktRxBuf$/;"	d
_rxInOfs	msdos/pkt_rx1.s	/^_rxInOfs    dw   offset _pktRxBuf          ; into _pktRxBuf$/;"	d
_rxInOfs	msdos/pktdrvr.c	/^          WORD       _rxInOfs;$/;"	m	struct:__anon21	file:
_rxOutOfs	msdos/pkt_rx0.asm	/^_rxOutOfs      dw  offset _pktRxBuf           ; ring buffer offsets$/;"	d
_rxOutOfs	msdos/pkt_rx1.s	/^_rxOutOfs   dw   offset _pktRxBuf          ; ring buffer offsets$/;"	d
_rxOutOfs	msdos/pktdrvr.c	/^          WORD       _rxOutOfs;$/;"	m	struct:__anon21	file:
_usb_header	pcap/usb.h	/^typedef struct _usb_header {$/;"	s
_usb_header_mmapped	pcap/usb.h	/^typedef struct _usb_header_mmapped {$/;"	s
_usb_isodesc	pcap/usb.h	/^typedef struct _usb_isodesc {$/;"	s
_usb_setup	pcap/usb.h	/^typedef struct _usb_setup {$/;"	s
abroadcast	gencode.c	/^static const u_char abroadcast[] = { 0x0 };$/;"	v	file:
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
acn_findalldevs	pcap-sita.c	/^int acn_findalldevs(char *errbuf) {								\/* returns: -1 = error, 0 = OK *\/$/;"	f
acn_freealldevs	pcap-sita.c	/^static void acn_freealldevs(void) {$/;"	f	file:
acn_if_list	pcap-sita.c	/^pcap_if_t		*acn_if_list;		\/* pcap's list of available interfaces *\/$/;"	v
acn_open_live	pcap-sita.c	/^static int acn_open_live(const char *name, char *errbuf, int *linktype) {		\/* returns 0 on error, else returns the file descriptor *\/$/;"	f	file:
acn_parse_hosts_file	pcap-sita.c	/^int acn_parse_hosts_file(char *errbuf) {				\/* returns: -1 = error, 0 = OK *\/$/;"	f
acn_read_n_bytes_with_timeout	pcap-sita.c	/^static int acn_read_n_bytes_with_timeout(pcap_t *handle, int count) {$/;"	f	file:
acn_start_monitor	pcap-sita.c	/^static void acn_start_monitor(int fd, int snaplen, int timeout, int promiscuous, int direction) {$/;"	f	file:
action	grammar.y	/^action:	  ID			{ $$ = pfaction_to_num(cstate, $1); }$/;"	l
activate_mmap	pcap-linux.c	/^activate_mmap(pcap_t *handle _U_, int *status _U_)$/;"	f	file:
activate_mmap	pcap-linux.c	/^activate_mmap(pcap_t *handle, int *status)$/;"	f	file:
activate_new	pcap-linux.c	/^activate_new(pcap_t *handle)$/;"	f	file:
activate_old	pcap-linux.c	/^activate_old(pcap_t *handle)$/;"	f	file:
activate_op	pcap-int.h	/^	activate_op_t activate_op;$/;"	m	struct:pcap
activate_op_t	pcap-int.h	/^typedef int	(*activate_op_t)(pcap_t *);$/;"	t
activated	pcap-int.h	/^	int activated;		\/* true if the capture is really started *\/$/;"	m	struct:pcap
activeHosts	pcap-rpcap.c	/^struct activehosts *activeHosts;$/;"	v	typeref:struct:activehosts
active_dev	pcap-dos.c	/^struct device       *active_dev = NULL;      \/* the device we have opened *\/$/;"	v	typeref:struct:device
activehosts	pcap-rpcap.h	/^struct activehosts$/;"	s
adapter	pcap-int.h	/^	ADAPTER *adapter;$/;"	m	struct:pcap
adapter_id	pcap/bluetooth.h	/^	u_int16_t adapter_id;$/;"	m	struct:_pcap_bluetooth_linux_monitor_header
add_addr_to_dev	fad-helpers.c	/^add_addr_to_dev(pcap_if_t *curdev,$/;"	f
add_addr_to_iflist	fad-helpers.c	/^add_addr_to_iflist(pcap_if_t **alldevs, const char *name, bpf_u_int32 flags,$/;"	f
add_interface	sf-pcap-ng.c	/^add_interface(pcap_t *p, struct block_cursor *cursor, char *errbuf)$/;"	f	file:
add_linux_if	pcap-linux.c	/^add_linux_if(pcap_if_t **devlistp, const char *ifname, int fd, char *errbuf)$/;"	f	file:
add_mon_if	pcap-linux.c	/^add_mon_if(pcap_t *handle, int sock_fd, struct nl80211_state *state,$/;"	f	file:
add_or_find_if	fad-helpers.c	/^add_or_find_if(pcap_if_t **curdev_ret, pcap_if_t **alldevs, const char *name,$/;"	f
addr	gencode.h	/^	unsigned char addr;$/;"	m	struct:qual
addr	msdos/ndis2.h	/^        } addr;$/;"	m	union:_HardwareAddress	typeref:struct:_HardwareAddress::__anon32
addr	pcap-rpcap.h	/^	struct sockaddr_storage addr;		\/* Network address *\/$/;"	m	struct:rpcap_findalldevs_ifaddr	typeref:struct:rpcap_findalldevs_ifaddr::sockaddr_storage
addr	pcap/namedb.h	/^	u_char addr[6];$/;"	m	struct:pcap_etherent
addr	pcap/pcap.h	/^	struct sockaddr *addr;		\/* address *\/$/;"	m	struct:pcap_addr	typeref:struct:pcap_addr::sockaddr
addressLength	msdos/ndis2.h	/^        WORD   addressLength;$/;"	m	struct:_MacChars
addresses	pcap/pcap.h	/^	struct pcap_addr *addresses;$/;"	m	struct:pcap_if	typeref:struct:pcap_if::pcap_addr
addrinfo	gencode.c	/^struct addrinfo {$/;"	s	file:
ai	gencode.c	/^	struct addrinfo *ai;$/;"	m	struct:_compiler_state	typeref:struct:_compiler_state::addrinfo	file:
ai_addr	gencode.c	/^	struct sockaddr *ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	file:
ai_addrlen	gencode.c	/^	size_t	ai_addrlen;	\/* length of ai_addr *\/$/;"	m	struct:addrinfo	file:
ai_canonname	gencode.c	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	struct:addrinfo	file:
ai_family	gencode.c	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	struct:addrinfo	file:
ai_flags	gencode.c	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	file:
ai_next	gencode.c	/^	struct addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	file:
ai_protocol	gencode.c	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	file:
ai_socktype	gencode.c	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	file:
all_closure_sets	optimize.c	/^	uset all_closure_sets;$/;"	m	struct:_opt_state	file:
all_dom_sets	optimize.c	/^	uset all_dom_sets;$/;"	m	struct:_opt_state	file:
all_edge_sets	optimize.c	/^	uset all_edge_sets;$/;"	m	struct:_opt_state	file:
alloc_reg	gencode.c	/^alloc_reg(compiler_state_t *cstate)$/;"	f	file:
alternate_flag	missing/snprintf.c	/^    alternate_flag =  8,$/;"	e	enum:format_flags	file:
and	grammar.y	/^and:	  AND			{ $$ = $<blk>0; }$/;"	l
and_pullup	optimize.c	/^and_pullup(opt_state_t *opt_state, struct block *b)$/;"	f	file:
any_descr	pcap-linux.c	/^static const char any_descr[] = "Pseudo-device that captures on all interfaces";$/;"	v	file:
append_char	missing/snprintf.c	/^  int (*append_char)(struct state *, unsigned char);$/;"	m	struct:state	file:
append_char	missing/snprintf.c	/^append_char(struct state *state,$/;"	f	file:
append_number	missing/snprintf.c	/^append_number(struct state *state,$/;"	f	file:
append_string	missing/snprintf.c	/^append_string (struct state *state,$/;"	f	file:
aqual	grammar.y	/^aqual:	  HOST			{ $$ = Q_HOST; }$/;"	l
arth	gencode.h	/^struct arth {$/;"	s
arth	grammar.y	/^arth:	  pnum			{ $$ = gen_loadi(cstate, $1); }$/;"	l
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
ascii_to_int	pcap-usb-linux.c	/^ascii_to_int(char c)$/;"	f	file:
atexit_handler	pcap-dag.c	/^atexit_handler(void)$/;"	f	file:
atexit_handler_installed	pcap-dag.c	/^static int atexit_handler_installed = 0;$/;"	v	file:
atmfield	grammar.y	/^atmfield: VPI			{ $$.atmfieldtype = A_VPI; }$/;"	l
atmfieldvalue	grammar.y	/^atmfieldvalue: NUM {$/;"	l
atmlistvalue	grammar.y	/^atmlistvalue: atmfieldvalue$/;"	l
atmmultitype	grammar.y	/^atmmultitype: OAM		{ $$ = A_OAM; }$/;"	l
atmtype	grammar.y	/^atmtype: LANE			{ $$ = A_LANE; }$/;"	l
atmvalue	grammar.y	/^atmvalue: atmfieldvalue$/;"	l
atomdef	optimize.c	/^atomdef(struct stmt *s)$/;"	f	file:
atomset	gencode.h	/^typedef bpf_u_int32 atomset;$/;"	t
atomuse	optimize.c	/^atomuse(struct stmt *s)$/;"	f	file:
b	gencode.h	/^	struct block *b;	\/* protocol checks *\/$/;"	m	struct:arth	typeref:struct:arth::block
bRequest	pcap/usb.h	/^	u_int8_t bRequest;$/;"	m	struct:_usb_setup
backPointer	msdos/ndis2.h	/^        CommonChars      *backPointer;$/;"	m	struct:_MacUpperDispatch
backPointer	msdos/ndis2.h	/^        CommonChars *backPointer;$/;"	m	struct:_ProtDispatch
backpatch	gencode.c	/^backpatch(list, target)$/;"	f	file:
badSync	msdos/pktdrvr.c	/^       DWORD  badSync;      \/* count_1 != count_2 *\/$/;"	m	struct:__anon23	file:
base_addr	pcap-dos.h	/^         DWORD  base_addr;      \/* device I\/O address       *\/$/;"	m	struct:device
bf_insns	pcap/bpf.h	/^	struct bpf_insn *bf_insns;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::bpf_insn
bf_len	pcap/bpf.h	/^	u_int bf_len;$/;"	m	struct:bpf_program
bhp	pcap-bpf.c	1043;"	d	file:
bhp	pcap-bpf.c	1171;"	d	file:
bhp	pcap-win32.c	538;"	d	file:
bhp	pcap-win32.c	599;"	d	file:
bids	optimize.c	/^int bids[1000];$/;"	v
bindings	msdos/ndis2.c	/^static struct _BindingsList   bindings;$/;"	v	typeref:struct:_BindingsList	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
block	gencode.h	/^struct block {$/;"	s
block_cursor	sf-pcap-ng.c	/^struct block_cursor {$/;"	s	file:
block_header	sf-pcap-ng.c	/^struct block_header {$/;"	s	file:
block_trailer	sf-pcap-ng.c	/^struct block_trailer {$/;"	s	file:
block_type	sf-pcap-ng.c	/^	bpf_u_int32	block_type;$/;"	m	struct:block_cursor	file:
block_type	sf-pcap-ng.c	/^	bpf_u_int32	block_type;$/;"	m	struct:block_header	file:
blocks	optimize.c	/^	struct block **blocks;$/;"	m	struct:_opt_state	typeref:struct:_opt_state::block	file:
blocks_to_filter_in_userland	pcap-linux.c	/^	int	blocks_to_filter_in_userland;$/;"	m	struct:pcap_linux	file:
bmRequestType	pcap/usb.h	/^	u_int8_t bmRequestType;$/;"	m	struct:_usb_setup
bp	pcap-int.h	/^	u_char *bp;$/;"	m	struct:pcap
bpf_abs_offset	gencode.c	/^} bpf_abs_offset;$/;"	t	typeref:struct:__anon6	file:
bpf_aux_data	pcap/bpf.h	/^struct bpf_aux_data {$/;"	s
bpf_codegen_flags	pcap-int.h	/^	int bpf_codegen_flags;$/;"	m	struct:pcap
bpf_dump	bpf_dump.c	/^bpf_dump(const struct bpf_program *p, int option)$/;"	f
bpf_error	gencode.c	/^bpf_error(compiler_state_t *cstate, const char *fmt, ...)$/;"	f
bpf_filter	bpf/net/bpf_filter.c	/^bpf_filter(pc, p, wirelen, buflen)$/;"	f
bpf_filter	net/bpf_filter.c	/^bpf_filter(pc, p, wirelen, buflen)$/;"	f
bpf_filter_with_aux_data	bpf/net/bpf_filter.c	/^bpf_filter_with_aux_data(pc, p, wirelen, buflen, aux_data)$/;"	f
bpf_filter_with_aux_data	net/bpf_filter.c	/^bpf_filter_with_aux_data(pc, p, wirelen, buflen, aux_data)$/;"	f
bpf_hdr	pcap-bpf.c	94;"	d	file:
bpf_image	bpf_image.c	/^bpf_image(p, n)$/;"	f
bpf_insn	pcap/bpf.h	/^struct bpf_insn {$/;"	s
bpf_int32	pcap/bpf.h	/^typedef	int bpf_int32;$/;"	t
bpf_int32	pcap/bpf.h	/^typedef long          bpf_int32;$/;"	t
bpf_int32	pcap/pcap.h	/^typedef	int bpf_int32;$/;"	t
bpf_load	pcap-bpf.c	/^bpf_load(char *errbuf)$/;"	f	file:
bpf_odmcleanup	pcap-bpf.c	/^bpf_odmcleanup(char *errbuf)$/;"	f	file:
bpf_odminit	pcap-bpf.c	/^bpf_odminit(char *errbuf)$/;"	f	file:
bpf_open	pcap-bpf.c	/^bpf_open(char *errbuf)$/;"	f	file:
bpf_open_and_bind	pcap-bpf.c	/^bpf_open_and_bind(const char *name, char *errbuf)$/;"	f	file:
bpf_optimize	optimize.c	/^bpf_optimize(compiler_state_t *cstate, struct icode *ic)$/;"	f
bpf_pcap	gencode.c	/^	pcap_t *bpf_pcap;$/;"	m	struct:_compiler_state	file:
bpf_program	pcap/bpf.h	/^struct bpf_program {$/;"	s
bpf_syntax_error	gencode.c	/^bpf_syntax_error(compiler_state_t *cstate, const char *msg)$/;"	f
bpf_u_int32	pcap/bpf.h	/^typedef	u_int bpf_u_int32;$/;"	t
bpf_u_int32	pcap/bpf.h	/^typedef unsigned long bpf_u_int32;$/;"	t
bpf_u_int32	pcap/pcap.h	/^typedef	u_int bpf_u_int32;$/;"	t
bpf_validate	bpf/net/bpf_filter.c	/^bpf_validate(f, len)$/;"	f
bpf_validate	net/bpf_filter.c	/^bpf_validate(f, len)$/;"	f
bpfloadedflag	pcap-bpf.c	/^static int bpfloadedflag = 0;$/;"	v	file:
break_loop	pcap-int.h	/^	int break_loop;		\/* flag set to force break from packet-reading loop *\/$/;"	m	struct:pcap
broadaddr	pcap-rpcap.h	/^	struct sockaddr_storage broadaddr;	\/* Broadcast address for that address *\/$/;"	m	struct:rpcap_findalldevs_ifaddr	typeref:struct:rpcap_findalldevs_ifaddr::sockaddr_storage
broadaddr	pcap/pcap.h	/^	struct sockaddr *broadaddr;	\/* broadcast address for that address *\/$/;"	m	struct:pcap_addr	typeref:struct:pcap_addr::sockaddr
bt_activate	pcap-bt-linux.c	/^bt_activate(pcap_t* handle)$/;"	f	file:
bt_create	pcap-bt-linux.c	/^bt_create(const char *device, char *ebuf, int *is_ours)$/;"	f
bt_findalldevs	pcap-bt-linux.c	/^bt_findalldevs(pcap_if_t **alldevsp, char *err_str)$/;"	f
bt_inject_linux	pcap-bt-linux.c	/^bt_inject_linux(pcap_t *handle, const void *buf, size_t size)$/;"	f	file:
bt_monitor_activate	pcap-bt-monitor-linux.c	/^bt_monitor_activate(pcap_t* handle)$/;"	f	file:
bt_monitor_create	pcap-bt-monitor-linux.c	/^bt_monitor_create(const char *device, char *ebuf, int *is_ours)$/;"	f
bt_monitor_findalldevs	pcap-bt-monitor-linux.c	/^bt_monitor_findalldevs(pcap_if_t **alldevsp, char *err_str)$/;"	f
bt_monitor_inject	pcap-bt-monitor-linux.c	/^bt_monitor_inject(pcap_t *handle, const void *buf _U_, size_t size _U_)$/;"	f	file:
bt_monitor_read	pcap-bt-monitor-linux.c	/^bt_monitor_read(pcap_t *handle, int max_packets _U_, pcap_handler callback, u_char *user)$/;"	f	file:
bt_monitor_setdirection	pcap-bt-monitor-linux.c	/^bt_monitor_setdirection(pcap_t *p, pcap_direction_t d)$/;"	f	file:
bt_monitor_stats	pcap-bt-monitor-linux.c	/^bt_monitor_stats(pcap_t *handle _U_, struct pcap_stat *stats)$/;"	f	file:
bt_read_linux	pcap-bt-linux.c	/^bt_read_linux(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
bt_setdirection_linux	pcap-bt-linux.c	/^bt_setdirection_linux(pcap_t *p, pcap_direction_t d)$/;"	f	file:
bt_stats_linux	pcap-bt-linux.c	/^bt_stats_linux(pcap_t *handle, struct pcap_stat *stats)$/;"	f	file:
buf_start	pcap-dos.h	/^         char        *buf_start;  \/* start of buffer pool *\/$/;"	m	struct:rx_ringbuf
buffer	msdos/ndis2.h	/^        BYTE  *buffer;$/;"	m	struct:_PktBuf
buffer	pcap-int.h	/^	void *buffer;$/;"	m	struct:pcap
buffer	pcap/pcap.h	/^	char *buffer;	\/* Buffer containing the packets to be sent. *\/$/;"	m	struct:pcap_send_queue
buffer_size	pcap-int.h	/^	u_int	buffer_size;$/;"	m	struct:pcap_opt
bufsize	pcap-int.h	/^	u_int bufsize;$/;"	m	struct:pcap
bufsize	pcap-rpcap.h	/^	int32 bufsize;						\/* Size of the user buffer allocated by WinPcap; it can be different from the one we chose *\/$/;"	m	struct:rpcap_startcapreply
bus_id	pcap/usb.h	/^	u_int16_t bus_id;$/;"	m	struct:_usb_header
bus_id	pcap/usb.h	/^	u_int16_t bus_id;$/;"	m	struct:_usb_header_mmapped
bus_index	pcap-usb-linux.c	/^	int bus_index;$/;"	m	struct:pcap_usb_linux	file:
byte_order_magic	sf-pcap-ng.c	/^	bpf_u_int32	byte_order_magic;$/;"	m	struct:section_header_block	file:
byteop	grammar.y	/^byteop:	  '&'			{ $$ = '&'; }$/;"	l
bytes	msdos/ndis2.h	/^          BYTE bytes[6];$/;"	m	struct:_HardwareAddress::__anon32
bytes	msdos/ndis2.h	/^        BYTE  bytes[6];$/;"	m	union:_HardwareAddress
bzh	pcap-bpf.c	/^	struct bpf_zbuf_header *bzh;$/;"	m	struct:pcap_bpf	typeref:struct:pcap_bpf::bpf_zbuf_header	file:
bzh	pcap-rpcap.h	/^	struct bpf_zbuf_header *bzh;$/;"	m	struct:pcap_md	typeref:struct:pcap_md::bpf_zbuf_header
can_be_bound	pcap-linux.c	/^can_be_bound(const char *name _U_)$/;"	f	file:
can_be_bound	pcap-nit.c	/^can_be_bound(const char *name _U_)$/;"	f	file:
can_be_bound	pcap-pf.c	/^can_be_bound(const char *name _U_)$/;"	f	file:
can_be_bound	pcap-snit.c	/^can_be_bound(const char *name _U_)$/;"	f	file:
can_be_bound	pcap-snoop.c	/^can_be_bound(const char *name _U_)$/;"	f	file:
can_id	pcap/can_socketcan.h	/^	u_int32_t can_id;$/;"	m	struct:__anon33
can_set_rfmon_op	pcap-int.h	/^	can_set_rfmon_op_t can_set_rfmon_op;$/;"	m	struct:pcap
can_set_rfmon_op_t	pcap-int.h	/^typedef int	(*can_set_rfmon_op_t)(pcap_t *);$/;"	t
caplen	pcap-int.h	/^    bpf_u_int32 caplen;		\/* length of portion present *\/$/;"	m	struct:pcap_sf_patched_pkthdr
caplen	pcap-int.h	/^    bpf_u_int32 caplen;		\/* length of portion present *\/$/;"	m	struct:pcap_sf_pkthdr
caplen	pcap-rpcap.h	/^	uint32 caplen;			\/* Length of portion present in the capture *\/$/;"	m	struct:rpcap_pkthdr
caplen	pcap/pcap.h	/^	bpf_u_int32 caplen;	\/* length of portion present *\/$/;"	m	struct:pcap_pkthdr
caplen	sf-pcap-ng.c	/^	bpf_u_int32	caplen;$/;"	m	struct:enhanced_packet_block	file:
caplen	sf-pcap-ng.c	/^	bpf_u_int32	caplen;$/;"	m	struct:packet_block	file:
capture_source_type	pcap.c	/^static struct capture_source_type {$/;"	s	file:
capture_source_types	pcap.c	/^} capture_source_types[] = {$/;"	v	typeref:struct:capture_source_type	file:
cc	pcap-int.h	/^	int cc;$/;"	m	struct:pcap
charmap	pcap.c	/^static const u_char charmap[] = {$/;"	v	file:
chassis	pcap-sita.c	/^	int			chassis;$/;"	m	struct:unit	file:
check_bpf_bindable	pcap-bpf.c	/^check_bpf_bindable(const char *name)$/;"	f	file:
check_headers	savefile.c	/^static pcap_t *(*check_headers[])(bpf_u_int32, FILE *, u_int, char *, int *) = {$/;"	v	file:
check_setif_failure	pcap-bpf.c	/^check_setif_failure(pcap_t *p, int error)$/;"	f	file:
chunk	gencode.c	/^struct chunk {$/;"	s	file:
chunks	gencode.c	/^	struct chunk chunks[NCHUNKS];$/;"	m	struct:_compiler_state	typeref:struct:_compiler_state::chunk	file:
cleanup_op	pcap-int.h	/^	cleanup_op_t cleanup_op;$/;"	m	struct:pcap
cleanup_op_t	pcap-int.h	/^typedef void	(*cleanup_op_t)(pcap_t *);$/;"	t
close	pcap-dos.h	/^         void  (*close)(struct device *dev);$/;"	m	struct:device
close_driver	pcap-dos.c	/^static void close_driver (void)$/;"	f	file:
close_with_IOP	pcap-sita.c	/^static void close_with_IOP(int chassis, int geoslot, int flag) {$/;"	f	file:
closesocket	sockutils.h	135;"	d
closure	gencode.h	/^	uset closure;$/;"	m	struct:block
code	gencode.h	/^	int code;$/;"	m	struct:edge
code	gencode.h	/^	int code;$/;"	m	struct:stmt
code	optimize.c	/^	int code;$/;"	m	struct:valnode	file:
code	pcap-rpcap.h	/^	uint16 code;			\/* opcode of the instruction *\/$/;"	m	struct:rpcap_filterbpf_insn
code	pcap/bpf.h	/^	u_short	code;$/;"	m	struct:bpf_insn
collisions	pcap/pcap.h	/^       u_long  collisions;$/;"	m	struct:pcap_stat_ex
common	msdos/ndis2.c	/^static struct _CommonChars    common;$/;"	v	typeref:struct:_CommonChars	file:
common	msdos/ndis2.h	/^        CommonChars *common;$/;"	m	struct:_CardHandle
compiler_state_t	gencode.h	/^typedef struct _compiler_state compiler_state_t;$/;"	t	typeref:struct:_compiler_state
compute_local_ud	optimize.c	/^compute_local_ud(struct block *b)$/;"	f	file:
conn	pcap-dbus.c	/^	DBusConnection *conn;$/;"	m	struct:pcap_dbus	file:
const_val	optimize.c	/^	bpf_int32 const_val;$/;"	m	struct:vmapinfo	file:
constant_part	gencode.c	/^	u_int	constant_part;$/;"	m	struct:__anon6	file:
control	msdos/ndis2.h	/^        BYTE  control;                   \/* 3    *\/$/;"	m	struct:_Ieee802Dot2SnapHeader
conv_state_t	optimize.c	/^} conv_state_t;$/;"	t	typeref:struct:__anon38	file:
convert_code_r	optimize.c	/^convert_code_r(compiler_state_t *cstate, conv_state_t *conv_state,$/;"	f	file:
cooked	pcap-linux.c	/^	int	cooked;		\/* using SOCK_DGRAM rather than SOCK_RAW *\/$/;"	m	struct:pcap_linux	file:
cooked	pcap-rpcap.h	/^	int		cooked;			\/* using SOCK_DGRAM rather than SOCK_RAW *\/$/;"	m	struct:pcap_md
copy_argv	tests/capturetest.c	/^copy_argv(register char **argv)$/;"	f	file:
copy_argv	tests/filtertest.c	/^copy_argv(register char **argv)$/;"	f	file:
copy_argv	tests/selpolltest.c	/^copy_argv(register char **argv)$/;"	f	file:
copy_argv	tests/valgrindtest.c	/^copy_argv(register char **argv)$/;"	f	file:
copy_rx_buf	pcap-dos.h	/^         int   (*copy_rx_buf) (BYTE *buf, int max); \/* rx-copy (pktdrvr only) *\/$/;"	m	struct:device
count_blocks	optimize.c	/^count_blocks(struct icode *ic, struct block *p)$/;"	f	file:
count_stmts	optimize.c	/^count_stmts(struct icode *ic, struct block *p)$/;"	f	file:
countme	tests/capturetest.c	/^countme(u_char *user, const struct pcap_pkthdr *h, const u_char *sp)$/;"	f	file:
countme	tests/selpolltest.c	/^countme(u_char *user, const struct pcap_pkthdr *h, const u_char *sp)$/;"	f	file:
create_op	pcap.c	/^	pcap_t *(*create_op)(const char *, char *, int *);$/;"	m	struct:capture_source_type	file:
create_ring	pcap-linux.c	/^create_ring(pcap_t *handle, int *status)$/;"	f	file:
cur_chunk	gencode.c	/^	int cur_chunk;$/;"	m	struct:_compiler_state	file:
cur_mark	gencode.h	/^	int cur_mark;$/;"	m	struct:icode
curreg	gencode.c	/^	int curreg;$/;"	m	struct:_compiler_state	file:
currentAddress	msdos/ndis2.h	/^        BYTE   currentAddress[16];$/;"	m	struct:_MacChars
currentFunctionalAddress	msdos/ndis2.h	/^        DWORD  currentFunctionalAddress;$/;"	m	struct:_MacChars
current_packet	pcap-linux.c	/^	unsigned char *current_packet; \/* Current packet within the TPACKET_V3 block. Move to next block if NULL. *\/$/;"	m	struct:pcap_linux	file:
currentfilter	pcap-rpcap.h	/^	char *currentfilter;		\/\/!< Pointer to a buffer (allocated at run-time) that stores the current filter. Needed when flag PCAP_OPENFLAG_NOCAPTURE_RPCAP is turned on.$/;"	m	struct:pcap_md
curval	optimize.c	/^	int curval;$/;"	m	struct:_opt_state	file:
dag_activate	pcap-dag.c	/^static int dag_activate(pcap_t* handle)$/;"	f	file:
dag_create	pcap-dag.c	/^pcap_t *dag_create(const char *device, char *ebuf, int *is_ours)$/;"	f
dag_erf_ext_header_count	pcap-dag.c	/^dag_erf_ext_header_count(uint8_t * erf, size_t len)$/;"	f	file:
dag_fcs_bits	pcap-dag.c	/^	int	dag_fcs_bits;	\/* Number of checksum bits from link layer *\/$/;"	m	struct:pcap_dag	file:
dag_fcs_bits	pcap-new.c	/^	int	dag_fcs_bits;		\/* Number of checksum bits from link layer *\/$/;"	m	struct:pcap_win	file:
dag_fcs_bits	pcap-rpcap.c	/^	int	dag_fcs_bits;		\/* Number of checksum bits from link layer *\/$/;"	m	struct:pcap_win	file:
dag_fcs_bits	pcap-rpcap.h	/^	int	dag_fcs_bits;		\/* Number of checksum bits from link layer *\/$/;"	m	struct:pcap_md
dag_fcs_bits	pcap-win32.c	/^	int	dag_fcs_bits;		\/* Number of checksum bits from link layer *\/$/;"	m	struct:pcap_win	file:
dag_findalldevs	pcap-dag.c	/^dag_findalldevs(pcap_if_t **devlistp, char *errbuf)$/;"	f
dag_get_datalink	pcap-dag.c	/^dag_get_datalink(pcap_t *p)$/;"	f	file:
dag_inject	pcap-dag.c	/^dag_inject(pcap_t *p, const void *buf _U_, size_t size _U_)$/;"	f	file:
dag_mem_base	pcap-dag.c	/^	void	*dag_mem_base;	\/* DAG card memory base address *\/$/;"	m	struct:pcap_dag	file:
dag_mem_base	pcap-rpcap.h	/^	void	*dag_mem_base;	\/* DAG card memory base address *\/$/;"	m	struct:pcap_md
dag_mem_bottom	pcap-dag.c	/^	u_char	*dag_mem_bottom;	\/* DAG card current memory bottom pointer *\/$/;"	m	struct:pcap_dag	file:
dag_mem_bottom	pcap-dag.c	/^	u_int	dag_mem_bottom;	\/* DAG card current memory bottom offset *\/$/;"	m	struct:pcap_dag	file:
dag_mem_bottom	pcap-rpcap.h	/^	u_char	*dag_mem_bottom;\/* DAG card current memory bottom pointer *\/$/;"	m	struct:pcap_md
dag_mem_bottom	pcap-rpcap.h	/^	u_int	dag_mem_bottom;	\/* DAG card current memory bottom offset *\/$/;"	m	struct:pcap_md
dag_mem_top	pcap-dag.c	/^	u_char	*dag_mem_top;	\/* DAG card current memory top pointer *\/$/;"	m	struct:pcap_dag	file:
dag_mem_top	pcap-dag.c	/^	u_int	dag_mem_top;	\/* DAG card current memory top offset *\/$/;"	m	struct:pcap_dag	file:
dag_mem_top	pcap-rpcap.h	/^	u_char	*dag_mem_top;	\/* DAG card current memory top pointer *\/$/;"	m	struct:pcap_md
dag_mem_top	pcap-rpcap.h	/^	u_int	dag_mem_top;	\/* DAG card current memory top offset *\/$/;"	m	struct:pcap_md
dag_offset_flags	pcap-dag.c	/^	int	dag_offset_flags; \/* Flags to pass to dag_offset(). *\/$/;"	m	struct:pcap_dag	file:
dag_offset_flags	pcap-rpcap.h	/^	int	dag_offset_flags;	\/* Flags to pass to dag_offset(). *\/$/;"	m	struct:pcap_md
dag_platform_cleanup	pcap-dag.c	/^dag_platform_cleanup(pcap_t *p)$/;"	f	file:
dag_read	pcap-dag.c	/^dag_read(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
dag_set_datalink	pcap-dag.c	/^dag_set_datalink(pcap_t *p, int dlt)$/;"	f	file:
dag_setfilter	pcap-dag.c	/^dag_setfilter(pcap_t *p, struct bpf_program *fp)$/;"	f	file:
dag_setnonblock	pcap-dag.c	/^dag_setnonblock(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
dag_stats	pcap-dag.c	/^dag_stats(pcap_t *p, struct pcap_stat *ps) {$/;"	f	file:
dag_stream	pcap-dag.c	/^	int	dag_stream;	\/* DAG stream number *\/$/;"	m	struct:pcap_dag	file:
dag_stream	pcap-rpcap.h	/^	int	dag_stream;			\/* DAG stream number *\/$/;"	m	struct:pcap_md
dag_timeout	pcap-dag.c	/^	int	dag_timeout;	\/* timeout specified to pcap_open_live.$/;"	m	struct:pcap_dag	file:
dag_timeout	pcap-rpcap.h	/^	int	dag_timeout;		\/* timeout specified to pcap_open_live.$/;"	m	struct:pcap_md
data	msdos/pktdrvr.h	/^        BYTE  data [RX_BUF_SIZE];$/;"	m	struct:__anon20
data	msdos/pktdrvr.h	/^        BYTE  data [TX_BUF_SIZE];$/;"	m	struct:__anon19
data	pcap-dos.h	/^         BYTE  data[ETH_MAX+10];  \/* add some margin. data[0] should be *\/$/;"	m	struct:rx_elem
data	pcap-netfilter-linux.c	/^	void *data;$/;"	m	struct:my_nfattr	file:
data	pcap-usb-linux.c	/^	void *data;$/;"	m	struct:mon_bin_get	file:
data	sf-pcap-ng.c	/^	u_char		*data;$/;"	m	struct:block_cursor	file:
data_flag	pcap/usb.h	/^	char data_flag; \/*if !=0 no urb data is present*\/$/;"	m	struct:_usb_header
data_flag	pcap/usb.h	/^	char data_flag; \/*if !=0 no urb data is present*\/$/;"	m	struct:_usb_header_mmapped
data_len	pcap-usb-linux.c	/^	size_t data_len;   \/* Length of data (can be zero) *\/$/;"	m	struct:mon_bin_get	file:
data_len	pcap/usb.h	/^	u_int32_t data_len; \/* amount of urb data really present in this event*\/$/;"	m	struct:_usb_header
data_len	pcap/usb.h	/^	u_int32_t data_len; \/* amount of urb data really present in this event*\/$/;"	m	struct:_usb_header_mmapped
data_remaining	sf-pcap-ng.c	/^	size_t		data_remaining;$/;"	m	struct:block_cursor	file:
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dbus_activate	pcap-dbus.c	/^dbus_activate(pcap_t *handle)$/;"	f	file:
dbus_cleanup	pcap-dbus.c	/^dbus_cleanup(pcap_t *handle)$/;"	f	file:
dbus_create	pcap-dbus.c	/^dbus_create(const char *device, char *ebuf, int *is_ours)$/;"	f
dbus_findalldevs	pcap-dbus.c	/^dbus_findalldevs(pcap_if_t **alldevsp, char *err_str)$/;"	f
dbus_read	pcap-dbus.c	/^dbus_read(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
dbus_stats	pcap-dbus.c	/^dbus_stats(pcap_t *handle, struct pcap_stat *stats)$/;"	f	file:
dbus_write	pcap-dbus.c	/^dbus_write(pcap_t *handle, const void *buf, size_t size)$/;"	f	file:
deadstmt	optimize.c	/^deadstmt(opt_state_t *opt_state, register struct stmt *s, register struct stmt *last[])$/;"	f	file:
debugStrings	msdos/ndis2.c	/^static BYTE    debugStrings [MAX_NUM_DEBUG_STRINGS][DEBUG_STRING_LENGTH];$/;"	v	file:
debug_tab	pcap-dos.c	/^static const struct config_table debug_tab[] = {$/;"	v	typeref:struct:config_table	file:
def	gencode.h	/^	atomset def, kill;$/;"	m	struct:block
del_mon_if	pcap-linux.c	/^del_mon_if(pcap_t *handle, int sock_fd, struct nl80211_state *state,$/;"	f	file:
delete_pcap_dag	pcap-dag.c	/^delete_pcap_dag(pcap_t *p)$/;"	f	file:
desclen	pcap-rpcap.h	/^	uint16 desclen;						\/* Length of the interface description *\/$/;"	m	struct:rpcap_findalldevs_if
description	pcap.c	/^	const char *description;$/;"	m	struct:dlt_choice	file:
description	pcap.c	/^	const char *description;$/;"	m	struct:tstamp_type_choice	file:
description	pcap/pcap.h	/^	char *description;	\/* textual description of interface, or NULL *\/$/;"	m	struct:pcap_if
destin	msdos/pktdrvr.h	/^        ETHER destin;             \/* E-net destination address *\/$/;"	m	struct:__anon20
destin	msdos/pktdrvr.h	/^        ETHER destin;$/;"	m	struct:__anon19
destinAdr	msdos/pkt_rx0.asm	/^   destinAdr   db  6           dup (0)        ; packet destination address$/;"	d
destroy_ring	pcap-linux.c	/^destroy_ring(pcap_t *handle)$/;"	f	file:
dev_base	pcap-dos.c	/^const struct device *dev_base   = &pkt_dev;  \/* list of network devices *\/$/;"	v	typeref:struct:device
dev_id	pcap-bt-linux.c	/^	int dev_id;		\/* device ID of device we're bound to *\/$/;"	m	struct:pcap_bt	file:
device	pcap-bpf.c	/^	char *device;		\/* device name *\/$/;"	m	struct:pcap_bpf	file:
device	pcap-dos.h	/^  struct device {$/;"	s
device	pcap-int.h	/^	char	*device;$/;"	m	struct:pcap_opt
device	pcap-linux.c	/^	char	*device;	\/* device name *\/$/;"	m	struct:pcap_linux	file:
device	pcap-rpcap.h	/^	char	*device;		\/* device name *\/$/;"	m	struct:pcap_md
device_address	pcap/usb.h	/^	u_int8_t device_address;$/;"	m	struct:_usb_header
device_address	pcap/usb.h	/^	u_int8_t device_address;$/;"	m	struct:_usb_header_mmapped
dflag	tests/filtertest.c	/^int dflag;$/;"	v
did_atexit	pcap.c	/^static int did_atexit;$/;"	v	file:
dir	gencode.h	/^	unsigned char dir;$/;"	m	struct:qual
dir	grammar.y	/^dir:	  NUM$/;"	l
direction	pcap-int.h	/^	pcap_direction_t direction;$/;"	m	struct:pcap
direction	pcap/bluetooth.h	/^	u_int32_t direction; \/* if first bit is set direction is incoming *\/$/;"	m	struct:_pcap_bluetooth_h4_header
dl_doattach	pcap-dlpi.c	/^dl_doattach(int fd, int ppa, char *ebuf)$/;"	f	file:
dl_dohpuxbind	pcap-dlpi.c	/^dl_dohpuxbind(int fd, char *ebuf)$/;"	f	file:
dlbindack	pcap-dlpi.c	/^dlbindack(int fd, char *bufp, char *ebuf, int *uerror)$/;"	f	file:
dlbindreq	pcap-dlpi.c	/^dlbindreq(int fd, bpf_u_int32 sap, char *ebuf)$/;"	f	file:
dlinfoack	pcap-dlpi.c	/^dlinfoack(int fd, char *bufp, char *ebuf)$/;"	f	file:
dlinforeq	pcap-dlpi.c	/^dlinforeq(int fd, char *ebuf)$/;"	f	file:
dlokack	pcap-dlpi.c	/^dlokack(int fd, const char *what, char *bufp, char *ebuf)$/;"	f	file:
dlpassive	pcap-dlpi.c	/^dlpassive(int fd, char *ebuf)$/;"	f	file:
dlpi_hd	dlpisubs.h	/^	dlpi_handle_t dlpi_hd;$/;"	m	struct:pcap_dlpi
dlpi_kread	pcap-dlpi.c	/^dlpi_kread(register int fd, register off_t addr,$/;"	f	file:
dlpisubs_h	dlpisubs.h	2;"	d
dlprim	pcap-dlpi.c	/^dlprim(char *primbuf, size_t primbufsize, bpf_u_int32 prim)$/;"	f	file:
dlpromiscon	pcap-dlpi.c	/^dlpromiscon(pcap_t *p, bpf_u_int32 level)$/;"	f	file:
dlpromiscon	pcap-libdlpi.c	/^dlpromiscon(pcap_t *p, bpf_u_int32 level)$/;"	f	file:
dlrawdatareq	pcap-dlpi.c	/^dlrawdatareq(int fd, const u_char *datap, int datalen)$/;"	f	file:
dlstrerror	pcap-dlpi.c	/^dlstrerror(char *errbuf, size_t errbufsize, bpf_u_int32 dl_errno)$/;"	f	file:
dlt	pcap-common.c	/^	int	dlt;$/;"	m	struct:linktype_map	file:
dlt	pcap.c	/^	int	dlt;$/;"	m	struct:dlt_choice	file:
dlt_choice	pcap.c	/^struct dlt_choice {$/;"	s	file:
dlt_choices	pcap.c	/^static struct dlt_choice dlt_choices[] = {$/;"	v	typeref:struct:dlt_choice	file:
dlt_count	pcap-int.h	/^	int dlt_count;$/;"	m	struct:pcap
dlt_list	pcap-int.h	/^	u_int *dlt_list;$/;"	m	struct:pcap
dlt_to_linktype	pcap-common.c	/^dlt_to_linktype(int dlt)$/;"	f
dma	pcap-dos.h	/^         int    dma;            \/* DMA channel              *\/$/;"	m	struct:device
dom	gencode.h	/^	uset dom;$/;"	m	struct:block
domakedev	pcap-bpf.c	92;"	d	file:
domakedev	pcap-bpf.c	96;"	d	file:
done	optimize.c	/^	int done;$/;"	m	struct:_opt_state	file:
dot_dump	optimize.c	/^dot_dump(compiler_state_t *cstate, struct icode *ic)$/;"	f	file:
dot_dump_edge	optimize.c	/^dot_dump_edge(struct icode *ic, struct block *block, FILE *out)$/;"	f	file:
dot_dump_node	optimize.c	/^dot_dump_node(struct icode *ic, struct block *block, struct bpf_program *prog,$/;"	f	file:
dpmi_get_real_vector	msdos/pktdrvr.c	/^LOCAL DWORD dpmi_get_real_vector (int intr)$/;"	f
dpmi_real_free	msdos/pktdrvr.c	/^LOCAL void dpmi_real_free (WORD selector)$/;"	f
dpmi_real_malloc	msdos/pktdrvr.c	/^LOCAL WORD dpmi_real_malloc (int size, WORD *selector)$/;"	f
dqual	grammar.y	/^dqual:	  SRC			{ $$ = Q_SRC; }$/;"	l
dropped	pcap-usb-linux.c	/^	u_int32_t dropped;$/;"	m	struct:mon_bin_stats	file:
droppedPackets	msdos/ndis2.c	/^static DWORD   droppedPackets = 0L;$/;"	v	file:
drops_count	sf-pcap-ng.c	/^	u_short		drops_count;$/;"	m	struct:packet_block	file:
dsap	msdos/ndis2.h	/^        BYTE  dsap;                      \/* 0xAA *\/$/;"	m	struct:_Ieee802Dot2SnapHeader
dstaddr	pcap-rpcap.h	/^	struct sockaddr_storage dstaddr;	\/* P2P destination address for that address *\/$/;"	m	struct:rpcap_findalldevs_ifaddr	typeref:struct:rpcap_findalldevs_ifaddr::sockaddr_storage
dstaddr	pcap/pcap.h	/^	struct sockaddr *dstaddr;	\/* P2P destination address for that address *\/$/;"	m	struct:pcap_addr	typeref:struct:pcap_addr::sockaddr
dummy	msdos/ndis2.h	/^        BYTE   dummy;$/;"	m	struct:_TDBufDescrRec
dummy	msdos/ndis2.h	/^        BYTE   dummy;$/;"	m	struct:_TxBufDescrRec
dummy	pcap-rpcap.h	/^	uint16 dummy;						\/* Must be zero *\/$/;"	m	struct:rpcap_findalldevs_if
dummy	pcap-rpcap.h	/^	uint16 dummy;						\/* Must be zero *\/$/;"	m	struct:rpcap_startcapreply
dummy	pcap-rpcap.h	/^	uint16 dummy;			\/* Must be zero *\/$/;"	m	struct:rpcap_auth
dummy	pcap-rpcap.h	/^	uint16 dummy;			\/* Must be zero *\/$/;"	m	struct:rpcap_filter
dummy1	pcap-rpcap.h	/^	uint8 dummy1;		\/* Must be zero *\/$/;"	m	struct:rpcap_sampling
dummy2	pcap-rpcap.h	/^	uint16 dummy2;		\/* Must be zero *\/$/;"	m	struct:rpcap_sampling
dummyLen	msdos/pktdrvr.h	/^        BYTE  dummyLen;     \/* length of following data          *\/$/;"	m	struct:__anon17
dump	pcap-sita.c	/^static void dump(unsigned char *ptr, int i, int indent) {$/;"	f	file:
dump_interface_list	pcap-sita.c	/^static void dump_interface_list(void) {$/;"	f	file:
dump_interface_list_p	pcap-sita.c	/^static void dump_interface_list_p(void) {$/;"	f	file:
dump_pkt_stub	msdos/pktdrvr.c	/^static void dump_pkt_stub (void)$/;"	f	file:
dump_unit_table	pcap-sita.c	/^static void dump_unit_table(void) {$/;"	f	file:
dup_sockaddr	fad-helpers.c	/^dup_sockaddr(struct sockaddr *sa, size_t sa_length)$/;"	f	file:
e_offrel	gencode.c	/^enum e_offrel {$/;"	g	file:
edge	gencode.h	/^struct edge {$/;"	s
edges	optimize.c	/^	struct edge **edges;$/;"	m	struct:_opt_state	typeref:struct:_opt_state::edge	file:
edgewords	optimize.c	/^	int edgewords;$/;"	m	struct:_opt_state	file:
edom	gencode.h	/^	uset edom;$/;"	m	struct:edge
ef	gencode.h	/^	struct edge ef;$/;"	m	struct:block	typeref:struct:block::edge
efReadError	pcap-enet.c	/^efReadError(int fid, char *msg)$/;"	f	file:
elem_size	pcap-dos.h	/^         int          elem_size;  \/* size of each element *\/$/;"	m	struct:rx_ringbuf
else	msdos/ndis_0.asm	/^else$/;"	l
else	msdos/pkt_rx0.asm	/^else$/;"	l
empty_unit	pcap-sita.c	/^static void empty_unit(int chassis, int geoslot) {$/;"	f	file:
empty_unit_iface	pcap-sita.c	/^static void empty_unit_iface(unit_t *u) {$/;"	f	file:
empty_unit_table	pcap-sita.c	/^static void empty_unit_table(void) {$/;"	f	file:
endian_test_word	pcap-dag.c	/^static const unsigned short endian_test_word = 0x0100;$/;"	v	file:
endif	msdos/ndis_0.asm	/^endif$/;"	l
endif	msdos/pkt_rx0.asm	/^endif$/;"	l
endpoint_number	pcap/usb.h	/^	u_int8_t endpoint_number;$/;"	m	struct:_usb_header
endpoint_number	pcap/usb.h	/^	u_int8_t endpoint_number;$/;"	m	struct:_usb_header_mmapped
endstruc	msdos/pkt_rx1.s	/^endstruc$/;"	l
enhanced_packet_block	sf-pcap-ng.c	/^struct enhanced_packet_block {$/;"	s	file:
enter_rfmon_mode	pcap-linux.c	/^enter_rfmon_mode(pcap_t *handle, int sock_fd, const char *device)$/;"	f	file:
enter_rfmon_mode_mac80211	pcap-linux.c	/^enter_rfmon_mode_mac80211(pcap_t *handle, int sock_fd, const char *device)$/;"	f	file:
enter_rfmon_mode_wext	pcap-linux.c	/^enter_rfmon_mode_wext(pcap_t *handle, int sock_fd, const char *device)$/;"	f	file:
eproto	nametoaddr.c	/^struct eproto {$/;"	s	file:
eproto_db	nametoaddr.c	/^PCAP_API_DEF struct eproto eproto_db[] = {$/;"	v	typeref:struct:eproto
eq_blk	optimize.c	/^eq_blk(struct block *b0, struct block *b1)$/;"	f	file:
eq_slist	optimize.c	/^eq_slist(struct slist *x, struct slist *y)$/;"	f	file:
err_num	msdos/ndis2.c	/^         WORD  err_num;$/;"	m	struct:__anon13	file:
err_text	msdos/ndis2.c	/^         char *err_text;$/;"	m	struct:__anon13	file:
errbuf	pcap-int.h	/^	char errbuf[PCAP_ERRBUF_SIZE + 1];$/;"	m	struct:pcap
errno	pcap-win32.c	54;"	d	file:
error	msdos/pktdrvr.h	/^        const char *error;  \/* address of error string           *\/$/;"	m	struct:__anon17
error	tests/can_set_rfmon_test.c	/^error(const char *fmt, ...)$/;"	f	file:
error	tests/capturetest.c	/^error(const char *fmt, ...)$/;"	f	file:
error	tests/filtertest.c	/^error(const char *fmt, ...)$/;"	f	file:
error	tests/opentest.c	/^error(const char *fmt, ...)$/;"	f	file:
error	tests/reactivatetest.c	/^error(const char *fmt, ...)$/;"	f	file:
error	tests/selpolltest.c	/^error(const char *fmt, ...)$/;"	f	file:
error	tests/valgrindtest.c	/^error(const char *fmt, ...)$/;"	f	file:
error_count	pcap/usb.h	/^	int32_t	error_count;$/;"	m	struct:_iso_rec
et	gencode.h	/^	struct edge et;$/;"	m	struct:block	typeref:struct:block::edge
ethBroadcast	msdos/pktdrvr.c	/^PUBLIC ETHER       ethBroadcast = { 255,255,255,255,255,255 };$/;"	v
etherDestHost	msdos/ndis2.h	/^        HardwareAddress  etherDestHost;$/;"	m	struct:_EthernetIIHeader
etherDestHost	msdos/ndis2.h	/^        HardwareAddress  etherDestHost;$/;"	m	struct:_FddiHeader
etherDestHost	msdos/ndis2.h	/^        HardwareAddress  etherDestHost;$/;"	m	struct:_Ieee802Dot5Header
etherSrcHost	msdos/ndis2.h	/^        HardwareAddress  etherSrcHost;$/;"	m	struct:_EthernetIIHeader
etherSrcHost	msdos/ndis2.h	/^        HardwareAddress  etherSrcHost;$/;"	m	struct:_FddiHeader
etherSrcHost	msdos/ndis2.h	/^        HardwareAddress  etherSrcHost;$/;"	m	struct:_Ieee802Dot5Header
etherType	msdos/ndis2.h	/^        WORD             etherType;$/;"	m	struct:_EthernetIIHeader
ether_addr	nametoaddr.c	/^struct ether_addr {$/;"	s	file:
ether_addr_octet	nametoaddr.c	/^	unsigned char ether_addr_octet[6];$/;"	m	struct:ether_addr	file:
ethertype_to_ppptype	gencode.c	/^ethertype_to_ppptype(proto)$/;"	f	file:
etype	pcap-dos.c	/^static WORD etype;$/;"	v	file:
event_type	pcap/usb.h	/^	u_int8_t event_type;$/;"	m	struct:_usb_header
event_type	pcap/usb.h	/^	u_int8_t event_type;$/;"	m	struct:_usb_header_mmapped
exc_handler	pcap-dos.c	/^static void exc_handler (int sig)$/;"	f	file:
exc_occured	pcap-dos.c	/^static volatile BOOL exc_occured = 0;$/;"	v	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
expr	grammar.y	/^expr:	  term$/;"	l
extern	pcap-dos.c	1505;"	d	file:
failingModules	msdos/ndis2.c	/^static struct _FailingModules failingModules;$/;"	v	typeref:struct:_FailingModules	file:
fanChars	msdos/pkt_rx0.asm	/^ fanChars      db  '-\\|\/'$/;"	d
fanChars	msdos/pkt_rx1.s	/^fanChars    db  '-\\|\/'$/;"	d
fanIndex	msdos/pkt_rx0.asm	/^ fanIndex      dw  0$/;"	d
fanIndex	msdos/pkt_rx1.s	/^fanIndex    dw  0$/;"	d
fcode	pcap-int.h	/^	struct bpf_program fcode;$/;"	m	struct:pcap	typeref:struct:pcap::bpf_program
fd	pcap-int.h	/^	int fd;$/;"	m	struct:pcap
fd	pcap-sita.c	/^	int			fd;		\/* the connection to this unit (if it exists) *\/$/;"	m	struct:unit	file:
fddipad	pcap-int.h	/^	u_int fddipad;$/;"	m	struct:pcap
ffs	optimize.c	/^ffs(int mask)$/;"	f	file:
ffs	optimize.c	63;"	d	file:
filter_count	pcap-dos.c	/^static u_long filter_count = 0;$/;"	v	file:
filter_in_userland	pcap-linux.c	/^	int	filter_in_userland; \/* must filter in userland *\/$/;"	m	struct:pcap_linux	file:
filtering_in_kernel	pcap-bpf.c	/^	int filtering_in_kernel; \/* using kernel filter *\/$/;"	m	struct:pcap_bpf	file:
filtering_in_kernel	pcap-new.c	/^	int filtering_in_kernel;	\/* using kernel filter *\/$/;"	m	struct:pcap_win	file:
filtering_in_kernel	pcap-pf.c	/^	int	filtering_in_kernel; \/* using kernel filter *\/$/;"	m	struct:pcap_pf	file:
filtering_in_kernel	pcap-rpcap.c	/^	int filtering_in_kernel;	\/* using kernel filter *\/$/;"	m	struct:pcap_win	file:
filtering_in_kernel	pcap-win32.c	/^	int filtering_in_kernel;	\/* using kernel filter *\/$/;"	m	struct:pcap_win	file:
filtertype	pcap-rpcap.h	/^	uint16 filtertype;		\/* type of the filter transferred (BPF instructions, ...) *\/$/;"	m	struct:rpcap_filter
find_802_11	pcap-bpf.c	/^find_802_11(struct bpf_dltlist *bdlp)$/;"	f	file:
find_closure	optimize.c	/^find_closure(opt_state_t *opt_state, struct block *root)$/;"	f	file:
find_dom	optimize.c	/^find_dom(opt_state_t *opt_state, struct block *root)$/;"	f	file:
find_edom	optimize.c	/^find_edom(opt_state_t *opt_state, struct block *root)$/;"	f	file:
find_fd	pcap-sita.c	/^	int			find_fd;	\/* a big kludge to avoid my programming limitations since I could have this unit open for findalldevs purposes *\/$/;"	m	struct:unit	file:
find_inedges	optimize.c	/^find_inedges(opt_state_t *opt_state, struct block *root)$/;"	f	file:
find_levels	optimize.c	/^find_levels(opt_state_t *opt_state, struct icode *ic)$/;"	f	file:
find_levels_r	optimize.c	/^find_levels_r(opt_state_t *opt_state, struct icode *ic, struct block *b)$/;"	f	file:
find_nth_interface_name	pcap-sita.c	/^static char *find_nth_interface_name(int n) {$/;"	f	file:
find_ud	optimize.c	/^find_ud(opt_state_t *opt_state, struct block *root)$/;"	f	file:
find_unit_by_fd	pcap-sita.c	/^static int find_unit_by_fd(int fd, int *chassis, int *geoslot, unit_t **unit_ptr) {$/;"	f	file:
findalldevs_op	pcap.c	/^	int (*findalldevs_op)(pcap_if_t **, char *);$/;"	m	struct:capture_source_type	file:
finddevs_usb	pcap-bpf.c	/^finddevs_usb(pcap_if_t **alldevsp, char *errbuf)$/;"	f	file:
finish_parse	gencode.c	/^finish_parse(compiler_state_t *cstate, struct block *p)$/;"	f
firstCount	msdos/pkt_rx0.asm	/^   firstCount  dw  0                          ; # of bytes on 1st call$/;"	d
firstCount	msdos/pktdrvr.h	/^        WORD  firstCount;         \/* # of bytes on 1st         *\/$/;"	m	struct:__anon20
first_init	pcap-dos.c	/^static int first_init (const char *name, char *ebuf, int promisc)$/;"	f	file:
first_time	pcap-sita.c	/^	int			first_time;	\/* 0 = just opened via acn_open_live(),  ie. the first time, NZ = nth time *\/$/;"	m	struct:unit	file:
firstsel	pcap-bpf.c	/^	struct timespec firstsel;$/;"	m	struct:pcap_bpf	typeref:struct:pcap_bpf::timespec	file:
firstsel	pcap-rpcap.h	/^	struct timespec firstsel;$/;"	m	struct:pcap_md	typeref:struct:pcap_md::timespec
fix_offset	pcap-linux.c	/^fix_offset(struct bpf_insn *p)$/;"	f	file:
fix_program	pcap-linux.c	/^fix_program(pcap_t *handle, struct sock_fprog *fcode, int is_mmapped)$/;"	f	file:
flags	msdos/ndis2.h	/^        DWORD        flags;$/;"	m	struct:_ProtDispatch
flags	pcap-dag.c	/^	unsigned char	flags;		\/* destination and traffic type *\/$/;"	m	struct:sunatm_hdr	file:
flags	pcap-dos.h	/^         WORD   flags;          \/* Low-level status flags. *\/$/;"	m	struct:device
flags	pcap-rpcap.h	/^	uint16 flags;						\/* Flags (see RPCAP_STARTCAPREQ_FLAG_xxx) *\/$/;"	m	struct:rpcap_startcapreq
flags	pcap-rpcap.h	/^	uint32 flags;						\/* Interface flags *\/$/;"	m	struct:rpcap_findalldevs_if
flags	pcap/pcap.h	/^	bpf_u_int32 flags;	\/* PCAP_IF_ interface flags *\/$/;"	m	struct:pcap_if
fold_edge	optimize.c	/^fold_edge(struct block *child, struct edge *ep)$/;"	f	file:
fold_op	optimize.c	/^fold_op(compiler_state_t *cstate, struct icode *ic, opt_state_t *opt_state,$/;"	f	file:
foo	configure	/^		foo()$/;"	f
foo	configure	/^  foo();$/;"	f
fopen	portability.h	85;"	d
fopen_safe	savefile.c	/^FILE *fopen_safe(const char *filename, const char* mode)$/;"	f
format_flags	missing/snprintf.c	/^enum format_flags {$/;"	g	file:
frameControl	msdos/ndis2.h	/^        BYTE             frameControl;$/;"	m	struct:_FddiHeader
frameSize	msdos/ndis2.c	/^static WORD    frameSize      = 0;$/;"	v	file:
freeStackPtr	msdos/ndis2.c	/^static int     freeStackPtr = STACK_POOL_SIZE - 1;$/;"	v	file:
freeStacks	msdos/ndis2.c	/^static BYTE   *freeStacks   [STACK_POOL_SIZE];$/;"	v	file:
free_reg	gencode.c	/^free_reg(compiler_state_t *cstate, int n)$/;"	f	file:
freechunks	gencode.c	/^freechunks(compiler_state_t *cstate)$/;"	f	file:
fstart	optimize.c	/^	struct bpf_insn *fstart;$/;"	m	struct:__anon38	typeref:struct:__anon38::bpf_insn	file:
ftail	optimize.c	/^	struct bpf_insn *ftail;$/;"	m	struct:__anon38	typeref:struct:__anon38::bpf_insn	file:
full_pcap_version_string	pcap.c	/^static char *full_pcap_version_string;$/;"	v	file:
funcs	msdos/pktdrvr.h	/^        BYTE  funcs;        \/* Basic\/Extended\/HiPerf functions   *\/$/;"	m	struct:__anon17
g_TcFunctions	pcap-tc.c	/^TC_FUNCTIONS g_TcFunctions =$/;"	v
gen_abs_offset_varpart	gencode.c	/^gen_abs_offset_varpart(compiler_state_t *cstate, bpf_abs_offset *off)$/;"	f	file:
gen_acode	gencode.c	/^gen_acode(compiler_state_t *cstate, const u_char *eaddr, struct qual q)$/;"	f
gen_ahostop	gencode.c	/^gen_ahostop(compiler_state_t *cstate, const u_char *eaddr, int dir)$/;"	f	file:
gen_and	gencode.c	/^gen_and(b0, b1)$/;"	f
gen_arth	gencode.c	/^gen_arth(compiler_state_t *cstate, int code, struct arth *a0,$/;"	f
gen_atmfield_code	gencode.c	/^gen_atmfield_code(compiler_state_t *cstate, int atmfield, bpf_int32 jvalue,$/;"	f
gen_atmmulti_abbrev	gencode.c	/^gen_atmmulti_abbrev(compiler_state_t *cstate, int type)$/;"	f
gen_atmtype_abbrev	gencode.c	/^gen_atmtype_abbrev(compiler_state_t *cstate, int type)$/;"	f
gen_bcmp	gencode.c	/^gen_bcmp(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_broadcast	gencode.c	/^gen_broadcast(compiler_state_t *cstate, int proto)$/;"	f
gen_byteop	gencode.c	/^gen_byteop(compiler_state_t *cstate, int op, int idx, int val)$/;"	f
gen_check_802_11_data_frame	gencode.c	/^gen_check_802_11_data_frame(compiler_state_t *cstate)$/;"	f	file:
gen_cmp	gencode.c	/^gen_cmp(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_cmp_ge	gencode.c	/^gen_cmp_ge(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_cmp_gt	gencode.c	/^gen_cmp_gt(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_cmp_le	gencode.c	/^gen_cmp_le(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_cmp_lt	gencode.c	/^gen_cmp_lt(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_dnhostop	gencode.c	/^gen_dnhostop(compiler_state_t *cstate, bpf_u_int32 addr, int dir)$/;"	f	file:
gen_ecode	gencode.c	/^gen_ecode(compiler_state_t *cstate, const u_char *eaddr, struct qual q)$/;"	f
gen_ehostop	gencode.c	/^gen_ehostop(compiler_state_t *cstate, const u_char *eaddr, int dir)$/;"	f	file:
gen_ether_linktype	gencode.c	/^gen_ether_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_false	gencode.c	/^gen_false(compiler_state_t *cstate)$/;"	f	file:
gen_fhostop	gencode.c	/^gen_fhostop(compiler_state_t *cstate, const u_char *eaddr, int dir)$/;"	f	file:
gen_gateway	gencode.c	/^gen_gateway(eaddr, alist, proto, dir)$/;"	f	file:
gen_geneve	gencode.c	/^gen_geneve(compiler_state_t *cstate, int vni)$/;"	f
gen_geneve4	gencode.c	/^gen_geneve4(compiler_state_t *cstate, int vni)$/;"	f	file:
gen_geneve6	gencode.c	/^gen_geneve6(compiler_state_t *cstate, int vni)$/;"	f	file:
gen_geneve_check	gencode.c	/^gen_geneve_check(compiler_state_t *cstate,$/;"	f	file:
gen_geneve_ll_check	gencode.c	/^gen_geneve_ll_check(compiler_state_t *cstate)$/;"	f	file:
gen_geneve_offsets	gencode.c	/^gen_geneve_offsets(compiler_state_t *cstate)$/;"	f	file:
gen_greater	gencode.c	/^gen_greater(compiler_state_t *cstate, int n)$/;"	f
gen_host	gencode.c	/^gen_host(compiler_state_t *cstate, bpf_u_int32 addr, bpf_u_int32 mask,$/;"	f	file:
gen_host6	gencode.c	/^gen_host6(compiler_state_t *cstate, struct in6_addr *addr,$/;"	f	file:
gen_hostop	gencode.c	/^gen_hostop(compiler_state_t *cstate, bpf_u_int32 addr, bpf_u_int32 mask,$/;"	f	file:
gen_hostop6	gencode.c	/^gen_hostop6(compiler_state_t *cstate, struct in6_addr *addr,$/;"	f	file:
gen_inbound	gencode.c	/^gen_inbound(compiler_state_t *cstate, int dir)$/;"	f
gen_ipfchostop	gencode.c	/^gen_ipfchostop(compiler_state_t *cstate, const u_char *eaddr, int dir)$/;"	f	file:
gen_ipfrag	gencode.c	/^gen_ipfrag(compiler_state_t *cstate)$/;"	f	file:
gen_ipnet_linktype	gencode.c	/^gen_ipnet_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_len	gencode.c	/^gen_len(compiler_state_t *cstate, int jmp, int n)$/;"	f	file:
gen_less	gencode.c	/^gen_less(compiler_state_t *cstate, int n)$/;"	f
gen_linktype	gencode.c	/^gen_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_linux_sll_linktype	gencode.c	/^gen_linux_sll_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_llc	gencode.c	/^gen_llc(compiler_state_t *cstate)$/;"	f
gen_llc_i	gencode.c	/^gen_llc_i(compiler_state_t *cstate)$/;"	f
gen_llc_linktype	gencode.c	/^gen_llc_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_llc_s	gencode.c	/^gen_llc_s(compiler_state_t *cstate)$/;"	f
gen_llc_s_subtype	gencode.c	/^gen_llc_s_subtype(compiler_state_t *cstate, bpf_u_int32 subtype)$/;"	f
gen_llc_u	gencode.c	/^gen_llc_u(compiler_state_t *cstate)$/;"	f
gen_llc_u_subtype	gencode.c	/^gen_llc_u_subtype(compiler_state_t *cstate, bpf_u_int32 subtype)$/;"	f
gen_load	gencode.c	/^gen_load(compiler_state_t *cstate, int proto, struct arth *inst, int size)$/;"	f
gen_load_802_11_header_len	gencode.c	/^gen_load_802_11_header_len(compiler_state_t *cstate, struct slist *s, struct slist *snext)$/;"	f	file:
gen_load_a	gencode.c	/^gen_load_a(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_load_absoffsetrel	gencode.c	/^gen_load_absoffsetrel(compiler_state_t *cstate, bpf_abs_offset *abs_offset,$/;"	f	file:
gen_load_avs_llprefixlen	gencode.c	/^gen_load_avs_llprefixlen(compiler_state_t *cstate)$/;"	f	file:
gen_load_ppi_llprefixlen	gencode.c	/^gen_load_ppi_llprefixlen(compiler_state_t *cstate)$/;"	f	file:
gen_load_prism_llprefixlen	gencode.c	/^gen_load_prism_llprefixlen(compiler_state_t *cstate)$/;"	f	file:
gen_load_radiotap_llprefixlen	gencode.c	/^gen_load_radiotap_llprefixlen(compiler_state_t *cstate)$/;"	f	file:
gen_loadi	gencode.c	/^gen_loadi(compiler_state_t *cstate, int val)$/;"	f
gen_loadlen	gencode.c	/^gen_loadlen(compiler_state_t *cstate)$/;"	f
gen_loadx_iphdrlen	gencode.c	/^gen_loadx_iphdrlen(compiler_state_t *cstate)$/;"	f	file:
gen_loopback_linktype	gencode.c	/^gen_loopback_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_mac_multicast	gencode.c	/^gen_mac_multicast(compiler_state_t *cstate, int offset)$/;"	f	file:
gen_mcmp	gencode.c	/^gen_mcmp(compiler_state_t *cstate, enum e_offrel offrel, u_int offset,$/;"	f	file:
gen_mcode	gencode.c	/^gen_mcode(compiler_state_t *cstate, const char *s1, const char *s2,$/;"	f
gen_mcode6	gencode.c	/^gen_mcode6(compiler_state_t *cstate, const char *s1, const char *s2,$/;"	f
gen_mpls	gencode.c	/^gen_mpls(compiler_state_t *cstate, int label_num)$/;"	f
gen_mpls_linktype	gencode.c	/^gen_mpls_linktype(compiler_state_t *cstate, int proto)$/;"	f	file:
gen_msg_abbrev	gencode.c	/^gen_msg_abbrev(compiler_state_t *cstate, int type)$/;"	f	file:
gen_mtp2type_abbrev	gencode.c	/^gen_mtp2type_abbrev(compiler_state_t *cstate, int type)$/;"	f
gen_mtp3field_code	gencode.c	/^gen_mtp3field_code(compiler_state_t *cstate, int mtp3field, bpf_u_int32 jvalue,$/;"	f
gen_multicast	gencode.c	/^gen_multicast(compiler_state_t *cstate, int proto)$/;"	f
gen_ncmp	gencode.c	/^gen_ncmp(compiler_state_t *cstate, enum e_offrel offrel, bpf_u_int32 offset,$/;"	f	file:
gen_ncode	gencode.c	/^gen_ncode(compiler_state_t *cstate, const char *s, bpf_u_int32 v, struct qual q)$/;"	f
gen_neg	gencode.c	/^gen_neg(compiler_state_t *cstate, struct arth *a)$/;"	f
gen_not	gencode.c	/^gen_not(b)$/;"	f
gen_or	gencode.c	/^gen_or(b0, b1)$/;"	f
gen_p80211_fcdir	gencode.c	/^gen_p80211_fcdir(compiler_state_t *cstate, int fcdir)$/;"	f
gen_p80211_type	gencode.c	/^gen_p80211_type(compiler_state_t *cstate, int type, int mask)$/;"	f
gen_pf_action	gencode.c	/^gen_pf_action(compiler_state_t *cstate, int action)$/;"	f
gen_pf_ifname	gencode.c	/^gen_pf_ifname(compiler_state_t *cstate, const char *ifname)$/;"	f
gen_pf_reason	gencode.c	/^gen_pf_reason(compiler_state_t *cstate, int reason)$/;"	f
gen_pf_rnr	gencode.c	/^gen_pf_rnr(compiler_state_t *cstate, int rnr)$/;"	f
gen_pf_ruleset	gencode.c	/^gen_pf_ruleset(compiler_state_t *cstate, char *ruleset)$/;"	f
gen_pf_srnr	gencode.c	/^gen_pf_srnr(compiler_state_t *cstate, int srnr)$/;"	f
gen_port	gencode.c	/^gen_port(compiler_state_t *cstate, int port, int ip_proto, int dir)$/;"	f	file:
gen_port6	gencode.c	/^gen_port6(compiler_state_t *cstate, int port, int ip_proto, int dir)$/;"	f	file:
gen_portatom	gencode.c	/^gen_portatom(compiler_state_t *cstate, int off, bpf_int32 v)$/;"	f	file:
gen_portatom6	gencode.c	/^gen_portatom6(compiler_state_t *cstate, int off, bpf_int32 v)$/;"	f	file:
gen_portop	gencode.c	/^gen_portop(compiler_state_t *cstate, int port, int proto, int dir)$/;"	f
gen_portop6	gencode.c	/^gen_portop6(compiler_state_t *cstate, int port, int proto, int dir)$/;"	f
gen_portrange	gencode.c	/^gen_portrange(compiler_state_t *cstate, int port1, int port2, int ip_proto,$/;"	f	file:
gen_portrange6	gencode.c	/^gen_portrange6(compiler_state_t *cstate, int port1, int port2, int ip_proto,$/;"	f	file:
gen_portrangeatom	gencode.c	/^gen_portrangeatom(compiler_state_t *cstate, int off, bpf_int32 v1,$/;"	f	file:
gen_portrangeatom6	gencode.c	/^gen_portrangeatom6(compiler_state_t *cstate, int off, bpf_int32 v1,$/;"	f	file:
gen_portrangeop	gencode.c	/^gen_portrangeop(compiler_state_t *cstate, int port1, int port2, int proto,$/;"	f
gen_portrangeop6	gencode.c	/^gen_portrangeop6(compiler_state_t *cstate, int port1, int port2, int proto,$/;"	f
gen_ppi_dlt_check	gencode.c	/^gen_ppi_dlt_check(compiler_state_t *cstate)$/;"	f	file:
gen_pppoed	gencode.c	/^gen_pppoed(compiler_state_t *cstate)$/;"	f
gen_pppoes	gencode.c	/^gen_pppoes(compiler_state_t *cstate, int sess_num)$/;"	f
gen_prevlinkhdr_check	gencode.c	/^gen_prevlinkhdr_check(compiler_state_t *cstate)$/;"	f	file:
gen_proto	gencode.c	/^gen_proto(compiler_state_t *cstate, int v, int proto, int dir)$/;"	f	file:
gen_proto_abbrev	gencode.c	/^gen_proto_abbrev(compiler_state_t *cstate, int proto)$/;"	f
gen_protochain	gencode.c	/^gen_protochain(compiler_state_t *cstate, int v, int proto, int dir)$/;"	f	file:
gen_relation	gencode.c	/^gen_relation(compiler_state_t *cstate, int code, struct arth *a0,$/;"	f
gen_retblk	gencode.c	/^gen_retblk(compiler_state_t *cstate, int v)$/;"	f	file:
gen_scode	gencode.c	/^gen_scode(compiler_state_t *cstate, const char *name, struct qual q)$/;"	f
gen_snap	gencode.c	/^gen_snap(compiler_state_t *cstate, bpf_u_int32 orgcode, bpf_u_int32 ptype)$/;"	f	file:
gen_thostop	gencode.c	/^gen_thostop(compiler_state_t *cstate, const u_char *eaddr, int dir)$/;"	f	file:
gen_true	gencode.c	/^gen_true(compiler_state_t *cstate)$/;"	f	file:
gen_uncond	gencode.c	/^gen_uncond(compiler_state_t *cstate, int rsense)$/;"	f	file:
gen_vlan	gencode.c	/^gen_vlan(compiler_state_t *cstate, int vlan_num)$/;"	f
gen_vlan_bpf_extensions	gencode.c	/^gen_vlan_bpf_extensions(compiler_state_t *cstate, int vlan_num)$/;"	f	file:
gen_vlan_no_bpf_extensions	gencode.c	/^gen_vlan_no_bpf_extensions(compiler_state_t *cstate, int vlan_num)$/;"	f	file:
gen_wlanhostop	gencode.c	/^gen_wlanhostop(compiler_state_t *cstate, const u_char *eaddr, int dir)$/;"	f	file:
genl_ctrl_alloc_cache	pcap-linux.c	619;"	d	file:
geoslot	pcap-sita.c	/^	int			geoslot;$/;"	m	struct:unit	file:
get_airpcap_handle_op	pcap-int.h	/^	get_airpcap_handle_op_t get_airpcap_handle_op;$/;"	m	struct:pcap
get_airpcap_handle_op_t	pcap-int.h	/^typedef PAirpcapHandle	(*get_airpcap_handle_op_t)(pcap_t *);$/;"	t
get_device	pcap-dos.c	/^static struct device *get_device (int fd)$/;"	f	file:
get_dlpi_ppa	pcap-dlpi.c	/^get_dlpi_ppa(register int fd, register const char *device, register int unit,$/;"	f	file:
get_dlpi_ppa	pcap-dlpi.c	/^get_dlpi_ppa(register int fd, register const char *ifname, register int unit,$/;"	f	file:
get_dlt_list	pcap-bpf.c	/^get_dlt_list(int fd, int v, struct bpf_dltlist *bdlp, char *ebuf)$/;"	f	file:
get_error_response	pcap-sita.c	/^static char *get_error_response(int fd, char *errbuf) {		\/* return a pointer on error, NULL on no error *\/$/;"	f	file:
get_figure_of_merit	fad-helpers.c	/^get_figure_of_merit(pcap_if_t *dev)$/;"	f	file:
get_from_block_data	sf-pcap-ng.c	/^get_from_block_data(struct block_cursor *cursor, size_t chunk_size,$/;"	f	file:
get_if_description	fad-helpers.c	/^get_if_description(const char *name)$/;"	f	file:
get_mac80211_phydev	pcap-linux.c	/^get_mac80211_phydev(pcap_t *handle, const char *device, char *phydev_path,$/;"	f	file:
get_nl_errmsg	pcap-linux.c	590;"	d	file:
get_nl_errmsg	pcap-linux.c	608;"	d	file:
get_opthdr_from_block_data	sf-pcap-ng.c	/^get_opthdr_from_block_data(pcap_t *p, struct block_cursor *cursor, char *errbuf)$/;"	f	file:
get_optvalue_from_block_data	sf-pcap-ng.c	/^get_optvalue_from_block_data(struct block_cursor *cursor,$/;"	f	file:
get_release	pcap-dlpi.c	/^get_release(char *buf, size_t bufsize, bpf_u_int32 *majorp,$/;"	f	file:
get_rx_buf	pcap-dos.h	/^         BYTE *(*get_rx_buf) (int len);             \/* rx-buf fetch\/enqueue *\/$/;"	m	struct:device
get_rxbuf	pcap-dos.c	/^BYTE *get_rxbuf (int len)$/;"	f
get_sa_len	fad-getad.c	/^get_sa_len(struct sockaddr *addr)$/;"	f	file:
get_stats	pcap-dos.h	/^         void *(*get_stats)(struct device *dev);$/;"	m	struct:device
getevent_op	pcap-int.h	/^	getevent_op_t getevent_op;$/;"	m	struct:pcap
getevent_op_t	pcap-int.h	/^typedef HANDLE	(*getevent_op_t)(pcap_t *);$/;"	t
getmajor	pcap-bpf.c	93;"	d	file:
getmajor	pcap-bpf.c	97;"	d	file:
getnonblock_op	pcap-int.h	/^	getnonblock_op_t getnonblock_op;$/;"	m	struct:pcap
getnonblock_op_t	pcap-int.h	/^typedef int	(*getnonblock_op_t)(pcap_t *, char *);$/;"	t
getopt	missing/getopt.c	/^getopt(nargc, nargv, ostr)$/;"	f
h1	pcap-linux.c	/^	struct tpacket_hdr		*h1;$/;"	m	union:thdr	typeref:struct:thdr::tpacket_hdr	file:
h1_64	pcap-linux.c	/^	struct tpacket_hdr_64		*h1_64;$/;"	m	union:thdr	typeref:struct:thdr::tpacket_hdr_64	file:
h2	pcap-linux.c	/^	struct tpacket2_hdr		*h2;$/;"	m	union:thdr	typeref:struct:thdr::tpacket2_hdr	file:
h3	pcap-linux.c	/^	struct tpacket_block_desc	*h3;$/;"	m	union:thdr	typeref:struct:thdr::tpacket_block_desc	file:
hTcApiDllHandle	pcap-tc.c	/^	HMODULE						hTcApiDllHandle;$/;"	m	struct:_TC_FUNCTIONS	file:
handle	msdos/ndis2.c	/^static struct _CardHandle    *handle;$/;"	v	typeref:struct:_CardHandle	file:
handle	msdos/ndis2.h	/^        int    handle;$/;"	m	struct:_PktBuf
handle	msdos/pkt_rx0.asm	/^   handle      dw  0                          ; handle for upcall$/;"	d
handle	msdos/pktdrvr.h	/^        WORD  handle;             \/* instance that upcalled    *\/$/;"	m	struct:__anon20
handle	msdos/pktdrvr.h	/^        WORD  handle;       \/* Handle associated with session    *\/$/;"	m	struct:__anon17
handle_to_device	pcap-dos.c	/^static struct device *handle_to_device [20];$/;"	v	typeref:struct:device	file:
has_wext	pcap-linux.c	/^has_wext(int sock_fd, const char *device, char *ebuf)$/;"	f	file:
hashtbl	optimize.c	/^	struct valnode *hashtbl[MODULUS];$/;"	m	struct:_opt_state	typeref:struct:_opt_state::valnode	file:
hci_mon_hdr	pcap-bt-monitor-linux.c	/^struct hci_mon_hdr {$/;"	s	file:
hdr	pcap-int.h	/^	struct pcap_pkthdr *hdr;$/;"	m	struct:oneshot_userdata	typeref:struct:oneshot_userdata::pcap_pkthdr
hdr	pcap-usb-linux.c	/^	pcap_usb_header *hdr;$/;"	m	struct:mon_bin_get	file:
hdrsize	sf-pcap.c	/^	size_t hdrsize;$/;"	m	struct:pcap_sf	file:
head	gencode.h	/^	struct block *head;$/;"	m	struct:block	typeref:struct:block::block
head	grammar.y	/^head:	  pqual dqual aqual	{ QSET($$.q, $1, $2, $3); }$/;"	l
headerSize	msdos/ndis2.c	/^static WORD    headerSize     = 0;$/;"	v	file:
hook	pcap/nflog.h	/^	u_int8_t	hook;		\/* netfilter hook *\/$/;"	m	struct:nflog_packet_hdr
host	pcap-rpcap.h	/^	struct sockaddr_storage host;$/;"	m	struct:activehosts	typeref:struct:activehosts::sockaddr_storage
htol64	pcap-usb-linux.c	80;"	d	file:
htol64	pcap-usb-linux.c	84;"	d	file:
htoll	pcap-usb-linux.c	79;"	d	file:
htoll	pcap-usb-linux.c	83;"	d	file:
htols	pcap-usb-linux.c	78;"	d	file:
htols	pcap-usb-linux.c	82;"	d	file:
hw_addr	pcap/nflog.h	/^	u_int8_t	hw_addr[8];	\/* address, up to 8 bytes *\/$/;"	m	struct:nflog_hwaddr
hw_addrlen	pcap/nflog.h	/^	u_int16_t	hw_addrlen;	\/* address length *\/$/;"	m	struct:nflog_hwaddr
hw_protocol	pcap/nflog.h	/^	u_int16_t	hw_protocol;	\/* hw protocol *\/$/;"	m	struct:nflog_packet_hdr
ic	gencode.c	/^	struct icode ic;$/;"	m	struct:_compiler_state	typeref:struct:_compiler_state::icode	file:
icode	gencode.h	/^struct icode {$/;"	s
icode_to_fcode	optimize.c	/^icode_to_fcode(compiler_state_t *cstate, struct icode *ic,$/;"	f
id	gencode.h	/^	int id;$/;"	m	struct:block
id	gencode.h	/^	int id;$/;"	m	struct:edge
id	grammar.y	/^id:	  nid$/;"	l
id	pcap/usb.h	/^	u_int64_t id;$/;"	m	struct:_usb_header
id	pcap/usb.h	/^	u_int64_t id;$/;"	m	struct:_usb_header_mmapped
ieeeVendor	msdos/ndis2.h	/^        BYTE   ieeeVendor[3];$/;"	m	struct:_MacChars
if_data	Win32/Include/net/if.h	/^struct if_data {$/;"	s
if_flags_to_pcap_flags	fad-helpers.c	/^if_flags_to_pcap_flags(const char *name _U_, u_int if_flags)$/;"	f
if_msghdr	Win32/Include/net/if.h	/^struct if_msghdr {$/;"	s
if_sort	pcap-sita.c	/^static int if_sort(char *s1, char *s2) {$/;"	f	file:
ifa_msghdr	Win32/Include/net/if.h	/^struct ifa_msghdr {$/;"	s
iface	pcap-sita.c	/^	iface_t			*iface;		\/* a pointer to a linked list of interface structures *\/$/;"	m	struct:unit	file:
iface	pcap-sita.c	/^typedef struct iface {$/;"	s	file:
iface_bind	pcap-linux.c	/^iface_bind(int fd, int ifindex, char *ebuf)$/;"	f	file:
iface_bind_old	pcap-linux.c	/^iface_bind_old(int fd, const char *device, char *ebuf)$/;"	f	file:
iface_ethtool_flag_ioctl	pcap-linux.c	/^iface_ethtool_flag_ioctl(pcap_t *handle, int cmd, const char *cmdname)$/;"	f	file:
iface_ethtool_get_ts_info	pcap-linux.c	/^iface_ethtool_get_ts_info(const char *device, pcap_t *handle, char *ebuf _U_)$/;"	f	file:
iface_ethtool_get_ts_info	pcap-linux.c	/^iface_ethtool_get_ts_info(const char *device, pcap_t *handle, char *ebuf)$/;"	f	file:
iface_get_arptype	pcap-linux.c	/^iface_get_arptype(int fd, const char *device, char *ebuf)$/;"	f	file:
iface_get_id	pcap-linux.c	/^iface_get_id(int fd, const char *device, char *ebuf)$/;"	f	file:
iface_get_mtu	pcap-linux.c	/^iface_get_mtu(int fd, const char *device, char *ebuf)$/;"	f	file:
iface_get_offload	pcap-linux.c	/^iface_get_offload(pcap_t *handle _U_)$/;"	f	file:
iface_get_offload	pcap-linux.c	/^iface_get_offload(pcap_t *handle)$/;"	f	file:
iface_set_all_ts_types	pcap-linux.c	/^iface_set_all_ts_types(pcap_t *handle)$/;"	f	file:
iface_t	pcap-sita.c	/^} iface_t;$/;"	t	typeref:struct:iface	file:
ifaces	sf-pcap-ng.c	/^	struct pcap_ng_if *ifaces;	\/* array of interface information *\/$/;"	m	struct:pcap_ng_sf	typeref:struct:pcap_ng_sf::pcap_ng_if	file:
ifaces_size	sf-pcap-ng.c	/^	bpf_u_int32 ifaces_size;	\/* size of array below *\/$/;"	m	struct:pcap_ng_sf	file:
ifaliasreq	Win32/Include/net/if.h	/^struct ifaliasreq {$/;"	s
ifam_addrs	Win32/Include/net/if.h	/^	int	ifam_addrs;	\/* like rtm_addrs *\/$/;"	m	struct:ifa_msghdr
ifam_flags	Win32/Include/net/if.h	/^	int	ifam_flags;	\/* value of ifa_flags *\/$/;"	m	struct:ifa_msghdr
ifam_index	Win32/Include/net/if.h	/^	u_short	ifam_index;	\/* index for associated ifp *\/$/;"	m	struct:ifa_msghdr
ifam_metric	Win32/Include/net/if.h	/^	int	ifam_metric;	\/* value of ifa_metric *\/$/;"	m	struct:ifa_msghdr
ifam_msglen	Win32/Include/net/if.h	/^	u_short	ifam_msglen;	\/* to skip over non-understood messages *\/$/;"	m	struct:ifa_msghdr
ifam_type	Win32/Include/net/if.h	/^	u_char	ifam_type;	\/* message type *\/$/;"	m	struct:ifa_msghdr
ifam_version	Win32/Include/net/if.h	/^	u_char	ifam_version;	\/* future binary compatability *\/$/;"	m	struct:ifa_msghdr
ifc_buf	Win32/Include/net/if.h	214;"	d
ifc_ifcu	Win32/Include/net/if.h	/^	} ifc_ifcu;$/;"	m	struct:ifconf	typeref:union:ifconf::__anon37
ifc_len	Win32/Include/net/if.h	/^	int	ifc_len;		\/* size of associated buffer *\/$/;"	m	struct:ifconf
ifc_req	Win32/Include/net/if.h	215;"	d
ifconf	Win32/Include/net/if.h	/^struct	ifconf {$/;"	s
ifcount	sf-pcap-ng.c	/^	bpf_u_int32 ifcount;		\/* number of interfaces seen in this capture *\/$/;"	m	struct:pcap_ng_sf	file:
ifcu_buf	Win32/Include/net/if.h	/^		caddr_t	ifcu_buf;$/;"	m	union:ifconf::__anon37
ifcu_req	Win32/Include/net/if.h	/^		struct	ifreq *ifcu_req;$/;"	m	union:ifconf::__anon37	typeref:struct:ifconf::__anon37::ifreq
ifdef	msdos/ndis_0.asm	/^ifdef DOSX$/;"	l
ifdef	msdos/pkt_rx0.asm	/^ifdef ??version        ; using TASM$/;"	l
ifdef	msdos/pkt_rx0.asm	/^ifdef DEBUG$/;"	l
ifdef	msdos/pkt_rx0.asm	/^ifdef DOSX$/;"	l
ifdrop	pcap-rpcap.h	/^	uint32 ifdrop;		\/* Packets dropped by the network interface (e.g. not enough buffers) (i.e. pcap_stats.ps_ifdrop) *\/$/;"	m	struct:rpcap_stats
ifi_addrlen	Win32/Include/net/if.h	/^	u_char	ifi_addrlen;		\/* media address length *\/$/;"	m	struct:if_data
ifi_baudrate	Win32/Include/net/if.h	/^	u_long	ifi_baudrate;		\/* linespeed *\/$/;"	m	struct:if_data
ifi_collisions	Win32/Include/net/if.h	/^	u_long	ifi_collisions;		\/* collisions on csma interfaces *\/$/;"	m	struct:if_data
ifi_hdrlen	Win32/Include/net/if.h	/^	u_char	ifi_hdrlen;		\/* media header length *\/$/;"	m	struct:if_data
ifi_ibytes	Win32/Include/net/if.h	/^	u_long	ifi_ibytes;		\/* total number of octets received *\/$/;"	m	struct:if_data
ifi_ierrors	Win32/Include/net/if.h	/^	u_long	ifi_ierrors;		\/* input errors on interface *\/$/;"	m	struct:if_data
ifi_imcasts	Win32/Include/net/if.h	/^	u_long	ifi_imcasts;		\/* packets received via multicast *\/$/;"	m	struct:if_data
ifi_ipackets	Win32/Include/net/if.h	/^	u_long	ifi_ipackets;		\/* packets received on interface *\/$/;"	m	struct:if_data
ifi_iqdrops	Win32/Include/net/if.h	/^	u_long	ifi_iqdrops;		\/* dropped on input, this interface *\/$/;"	m	struct:if_data
ifi_lastchange	Win32/Include/net/if.h	/^	struct	timeval ifi_lastchange;	\/* time of last administrative change *\/$/;"	m	struct:if_data	typeref:struct:if_data::timeval
ifi_metric	Win32/Include/net/if.h	/^	u_long	ifi_metric;		\/* routing metric (external only) *\/$/;"	m	struct:if_data
ifi_mtu	Win32/Include/net/if.h	/^	u_long	ifi_mtu;		\/* maximum transmission unit *\/$/;"	m	struct:if_data
ifi_noproto	Win32/Include/net/if.h	/^	u_long	ifi_noproto;		\/* destined for unsupported protocol *\/$/;"	m	struct:if_data
ifi_obytes	Win32/Include/net/if.h	/^	u_long	ifi_obytes;		\/* total number of octets sent *\/$/;"	m	struct:if_data
ifi_oerrors	Win32/Include/net/if.h	/^	u_long	ifi_oerrors;		\/* output errors on interface *\/$/;"	m	struct:if_data
ifi_omcasts	Win32/Include/net/if.h	/^	u_long	ifi_omcasts;		\/* packets sent via multicast *\/$/;"	m	struct:if_data
ifi_opackets	Win32/Include/net/if.h	/^	u_long	ifi_opackets;		\/* packets sent on interface *\/$/;"	m	struct:if_data
ifi_physical	Win32/Include/net/if.h	/^	u_char	ifi_physical;		\/* e.g., AUI, Thinnet, 10base-T, etc *\/$/;"	m	struct:if_data
ifi_recvquota	Win32/Include/net/if.h	/^	u_char	ifi_recvquota;		\/* polling quota for receive intrs *\/$/;"	m	struct:if_data
ifi_recvtiming	Win32/Include/net/if.h	/^	u_long	ifi_recvtiming;		\/* usec spent receiving when timing *\/$/;"	m	struct:if_data
ifi_type	Win32/Include/net/if.h	/^	u_char	ifi_type;		\/* ethernet, tokenring, etc *\/$/;"	m	struct:if_data
ifi_xmitquota	Win32/Include/net/if.h	/^	u_char	ifi_xmitquota;		\/* polling quota for xmit intrs *\/$/;"	m	struct:if_data
ifi_xmittiming	Win32/Include/net/if.h	/^	u_long	ifi_xmittiming;		\/* usec spent xmitting when timing *\/$/;"	m	struct:if_data
ifindex	pcap-linux.c	/^	int	ifindex;	\/* interface index of device we're bound to *\/$/;"	m	struct:pcap_linux	file:
ifindex	pcap-rpcap.h	/^	int		ifindex;		\/* interface index of device we're bound to *\/$/;"	m	struct:pcap_md
ifm_active	Win32/Include/net/if.h	/^	int	ifm_active;		\/* active options *\/$/;"	m	struct:ifmediareq
ifm_addrs	Win32/Include/net/if.h	/^	int	ifm_addrs;	\/* like rtm_addrs *\/$/;"	m	struct:if_msghdr
ifm_count	Win32/Include/net/if.h	/^	int	ifm_count;		\/* # entries in ifm_ulist array *\/$/;"	m	struct:ifmediareq
ifm_current	Win32/Include/net/if.h	/^	int	ifm_current;		\/* current media options *\/$/;"	m	struct:ifmediareq
ifm_data	Win32/Include/net/if.h	/^	struct	if_data ifm_data;\/* statistics and other data about if *\/$/;"	m	struct:if_msghdr	typeref:struct:if_msghdr::if_data
ifm_flags	Win32/Include/net/if.h	/^	int	ifm_flags;	\/* value of if_flags *\/$/;"	m	struct:if_msghdr
ifm_index	Win32/Include/net/if.h	/^	u_short	ifm_index;	\/* index for associated ifp *\/$/;"	m	struct:if_msghdr
ifm_mask	Win32/Include/net/if.h	/^	int	ifm_mask;		\/* don't care mask *\/$/;"	m	struct:ifmediareq
ifm_msglen	Win32/Include/net/if.h	/^	u_short	ifm_msglen;	\/* to skip over non-understood messages *\/$/;"	m	struct:if_msghdr
ifm_name	Win32/Include/net/if.h	/^	char	ifm_name[IFNAMSIZ];	\/* if name, e.g. "en0" *\/$/;"	m	struct:ifmediareq
ifm_status	Win32/Include/net/if.h	/^	int	ifm_status;		\/* media status *\/$/;"	m	struct:ifmediareq
ifm_type	Win32/Include/net/if.h	/^	u_char	ifm_type;	\/* message type *\/$/;"	m	struct:if_msghdr
ifm_ulist	Win32/Include/net/if.h	/^	int	*ifm_ulist;		\/* media words *\/$/;"	m	struct:ifmediareq
ifm_version	Win32/Include/net/if.h	/^	u_char	ifm_version;	\/* future binary compatability *\/$/;"	m	struct:if_msghdr
ifma_msghdr	Win32/Include/net/if.h	/^struct ifma_msghdr {$/;"	s
ifmam_addrs	Win32/Include/net/if.h	/^	int	ifmam_addrs;	\/* like rtm_addrs *\/$/;"	m	struct:ifma_msghdr
ifmam_flags	Win32/Include/net/if.h	/^	int	ifmam_flags;	\/* value of ifa_flags *\/$/;"	m	struct:ifma_msghdr
ifmam_index	Win32/Include/net/if.h	/^	u_short	ifmam_index;	\/* index for associated ifp *\/$/;"	m	struct:ifma_msghdr
ifmam_msglen	Win32/Include/net/if.h	/^	u_short	ifmam_msglen;	\/* to skip over non-understood messages *\/$/;"	m	struct:ifma_msghdr
ifmam_type	Win32/Include/net/if.h	/^	u_char	ifmam_type;	\/* message type *\/$/;"	m	struct:ifma_msghdr
ifmam_version	Win32/Include/net/if.h	/^	u_char	ifmam_version;	\/* future binary compatability *\/$/;"	m	struct:ifma_msghdr
ifmediareq	Win32/Include/net/if.h	/^struct ifmediareq {$/;"	s
ifprint	tests/findalldevstest.c	/^static int ifprint(pcap_if_t *d)$/;"	f	file:
ifr_addr	Win32/Include/net/if.h	170;"	d
ifr_broadaddr	Win32/Include/net/if.h	172;"	d
ifr_data	Win32/Include/net/if.h	178;"	d
ifr_dstaddr	Win32/Include/net/if.h	171;"	d
ifr_flags	Win32/Include/net/if.h	173;"	d
ifr_ifru	Win32/Include/net/if.h	/^	} ifr_ifru;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon36
ifr_media	Win32/Include/net/if.h	177;"	d
ifr_metric	Win32/Include/net/if.h	174;"	d
ifr_mtu	Win32/Include/net/if.h	175;"	d
ifr_mtu	pcap-snoop.c	354;"	d	file:
ifr_name	Win32/Include/net/if.h	/^	char	ifr_name[IFNAMSIZ];		\/* if name, e.g. "en0" *\/$/;"	m	struct:ifreq
ifr_phys	Win32/Include/net/if.h	176;"	d
ifra_addr	Win32/Include/net/if.h	/^	struct	sockaddr ifra_addr;$/;"	m	struct:ifaliasreq	typeref:struct:ifaliasreq::sockaddr
ifra_broadaddr	Win32/Include/net/if.h	/^	struct	sockaddr ifra_broadaddr;$/;"	m	struct:ifaliasreq	typeref:struct:ifaliasreq::sockaddr
ifra_mask	Win32/Include/net/if.h	/^	struct	sockaddr ifra_mask;$/;"	m	struct:ifaliasreq	typeref:struct:ifaliasreq::sockaddr
ifra_name	Win32/Include/net/if.h	/^	char	ifra_name[IFNAMSIZ];		\/* if name, e.g. "en0" *\/$/;"	m	struct:ifaliasreq
ifrecv	pcap-rpcap.h	/^	uint32 ifrecv;		\/* Packets received by the kernel filter (i.e. pcap_stats.ps_recv) *\/$/;"	m	struct:rpcap_stats
ifreq	Win32/Include/net/if.h	/^struct	ifreq {$/;"	s
ifru_addr	Win32/Include/net/if.h	/^		struct	sockaddr ifru_addr;$/;"	m	union:ifreq::__anon36	typeref:struct:ifreq::__anon36::sockaddr
ifru_broadaddr	Win32/Include/net/if.h	/^		struct	sockaddr ifru_broadaddr;$/;"	m	union:ifreq::__anon36	typeref:struct:ifreq::__anon36::sockaddr
ifru_data	Win32/Include/net/if.h	/^		caddr_t	ifru_data;$/;"	m	union:ifreq::__anon36
ifru_dstaddr	Win32/Include/net/if.h	/^		struct	sockaddr ifru_dstaddr;$/;"	m	union:ifreq::__anon36	typeref:struct:ifreq::__anon36::sockaddr
ifru_flags	Win32/Include/net/if.h	/^		short	ifru_flags;$/;"	m	union:ifreq::__anon36
ifru_media	Win32/Include/net/if.h	/^		int	ifru_media;$/;"	m	union:ifreq::__anon36
ifru_metric	Win32/Include/net/if.h	/^		int	ifru_metric;$/;"	m	union:ifreq::__anon36
ifru_mtu	Win32/Include/net/if.h	/^		int	ifru_mtu;$/;"	m	union:ifreq::__anon36
ifru_phys	Win32/Include/net/if.h	/^		int	ifru_phys;$/;"	m	union:ifreq::__anon36
iftype	pcap-sita.c	/^	uint32_t	iftype;		\/* the type of interface (DLT values) *\/$/;"	m	struct:iface	file:
immediate	pcap-int.h	/^	int	immediate;	\/* immediate mode - deliver packets as soon as they arrive *\/$/;"	m	struct:pcap_opt
imsg	pcap-sita.c	/^	char			*imsg;		\/* a pointer to an inbound message *\/$/;"	m	struct:unit	file:
in6_addr	gencode.c	/^struct in6_addr$/;"	s	file:
in6_u	gencode.c	/^      } in6_u;$/;"	m	struct:in6_addr	typeref:union:in6_addr::__anon5	file:
inBytes	msdos/pktdrvr.h	/^        DWORD inBytes;            \/* # of bytes received      *\/$/;"	m	struct:__anon18
inErrors	msdos/pktdrvr.h	/^        DWORD inErrors;           \/* # of reception errors    *\/$/;"	m	struct:__anon18
inPackets	msdos/pktdrvr.h	/^        DWORD inPackets;          \/* # of packets received    *\/$/;"	m	struct:__anon18
in_addr_t	tests/filtertest.c	/^  typedef unsigned __int32 in_addr_t;$/;"	t	file:
in_edges	gencode.h	/^	struct edge *in_edges;$/;"	m	struct:block	typeref:struct:block::edge
in_index	pcap-dos.h	/^         volatile int in_index;   \/* queue index head *\/$/;"	m	struct:rx_ringbuf
in_use	gencode.h	/^	atomset in_use;$/;"	m	struct:block
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
index	pcap-bt-monitor-linux.c	/^    uint16_t index;$/;"	m	struct:hci_mon_hdr	file:
index	pcap-int.h	/^    int		index;$/;"	m	struct:pcap_sf_patched_pkthdr
indicationComplete	msdos/ndis2.h	/^        void  (*indicationComplete) (void);$/;"	m	struct:_ProtDispatch
indicationCompleteGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (indicationCompleteGlue);$/;"	v
indicationOff	msdos/ndis2.h	/^        IndicationOff     indicationOff;$/;"	m	struct:_MacUpperDispatch
indicationOn	msdos/ndis2.h	/^        IndicationOn      indicationOn;$/;"	m	struct:_MacUpperDispatch
init_32bit	pcap-dos.c	/^static void init_32bit (void)$/;"	f	file:
init_linktype	gencode.c	/^init_linktype(compiler_state_t *cstate, pcap_t *p)$/;"	f	file:
init_regs	gencode.c	/^init_regs(compiler_state_t *cstate)$/;"	f	file:
init_tpacket	pcap-linux.c	/^init_tpacket(pcap_t *handle, int version, const char *version_str)$/;"	f	file:
init_val	optimize.c	/^init_val(opt_state_t *opt_state)$/;"	f	file:
init_watt32	pcap-dos.c	/^static int init_watt32 (struct pcap *pcap, const char *dev_name, char *err_buf)$/;"	f	file:
initchunks	gencode.c	/^initchunks(compiler_state_t *cstate)$/;"	f	file:
initdevice	pcap-enet.c	/^initdevice(char *device, int pflag, int *linktype)$/;"	f
initialStat	msdos/pktdrvr.c	/^static PKT_STAT initialStat;         \/* statistics at startup *\/$/;"	v	file:
initialize_ops	pcap.c	/^initialize_ops(pcap_t *p)$/;"	f	file:
inject_op	pcap-int.h	/^	inject_op_t inject_op;$/;"	m	struct:pcap
inject_op_t	pcap-int.h	/^typedef int	(*inject_op_t)(pcap_t *, const void *, size_t);$/;"	t
inline	Win32/Include/Gnuc.h	4;"	d
inline	Win32/Include/Gnuc.h	6;"	d
inline	config.h	321;"	d
inline	pcap-dos.h	50;"	d
inline	portability.h	208;"	d
insert_compute_vloffsets	gencode.c	/^insert_compute_vloffsets(compiler_state_t *cstate, struct block *b)$/;"	f	file:
install_bpf_program	optimize.c	/^install_bpf_program(pcap_t *p, struct bpf_program *fp)$/;"	f
int16_t	pcap-stdinc.h	/^      typedef signed short int16_t;$/;"	t
int32	bpf/net/bpf_filter.c	84;"	d	file:
int32	net/bpf_filter.c	84;"	d	file:
int32	pcap-rpcap.h	/^typedef int int32;					\/* Provides a 32-bits integer *\/$/;"	t
int32_t	pcap-stdinc.h	/^      typedef signed int int32_t;$/;"	t
int64_t	pcap-stdinc.h	/^        typedef _int64 int64_t;$/;"	t
int64_t	pcap-stdinc.h	/^        typedef long long int64_t;$/;"	t
int8_t	pcap-stdinc.h	/^      typedef signed char int8_t;$/;"	t
intStat	msdos/pktdrvr.c	/^     } intStat;$/;"	v	typeref:struct:__anon23
interfaceLower	msdos/ndis2.h	/^        BYTE  interfaceLower;$/;"	m	struct:_CommonChars
interfaceUpper	msdos/ndis2.h	/^        BYTE  interfaceUpper;$/;"	m	struct:_CommonChars
interface_description_block	sf-pcap-ng.c	/^struct interface_description_block {$/;"	s	file:
interface_id	sf-pcap-ng.c	/^	bpf_u_int32	interface_id;$/;"	m	struct:enhanced_packet_block	file:
interface_id	sf-pcap-ng.c	/^	u_short		interface_id;$/;"	m	struct:packet_block	file:
intern_blocks	optimize.c	/^intern_blocks(opt_state_t *opt_state, struct icode *ic)$/;"	f	file:
interruptLevel	msdos/ndis2.h	/^        WORD   interruptLevel;$/;"	m	struct:_MacChars
interrupted	pcap-bpf.c	/^	u_int interrupted;$/;"	m	struct:pcap_bpf	file:
interrupted	pcap-rpcap.h	/^	u_int interrupted;$/;"	m	struct:pcap_md
interval	pcap/usb.h	/^	int32_t	interval;	\/* for Interrupt and Isochronous events *\/$/;"	m	struct:_usb_header_mmapped
intr	msdos/pktdrvr.h	/^        WORD  intr;         \/* user interrupt vector number      *\/$/;"	m	struct:__anon17
ip	pcap-sita.c	/^	char			*ip;		\/* this unit's IP address (as extracted from \/etc\/hosts) *\/$/;"	m	struct:unit	file:
iptos	tests/findalldevstest.c	/^static char *iptos(bpf_u_int32 in)$/;"	f	file:
irelop	grammar.y	/^irelop:	  LEQ			{ $$ = BPF_JGT; }$/;"	l
irq	pcap-dos.h	/^         int    irq;            \/* device IRQ number        *\/$/;"	m	struct:device
isMarked	gencode.h	359;"	d
is_atm	gencode.c	/^	int is_atm;$/;"	m	struct:_compiler_state	file:
is_bonding_device	pcap-linux.c	/^is_bonding_device(int fd, const char *device)$/;"	f	file:
is_const	optimize.c	/^	int is_const;$/;"	m	struct:vmapinfo	file:
is_dlpi_interface	pcap-dlpi.c	/^is_dlpi_interface(const char *name)$/;"	f	file:
is_dlpi_interface	pcap-libdlpi.c	/^is_dlpi_interface(const char *name _U_)$/;"	f	file:
is_geneve	gencode.c	/^	int is_geneve;$/;"	m	struct:_compiler_state	file:
is_variable	gencode.c	/^	int	is_variable;$/;"	m	struct:__anon6	file:
is_wifi	pcap-linux.c	/^is_wifi(int sock_fd$/;"	f	file:
iso	pcap/usb.h	/^		iso_rec iso;$/;"	m	union:_usb_header_mmapped::__anon35
iso_rec	pcap/usb.h	/^} iso_rec;$/;"	t	typeref:struct:_iso_rec
jf	gencode.h	/^	struct slist *jf;	\/*only for relative jump in block*\/$/;"	m	struct:stmt	typeref:struct:stmt::slist
jf	pcap-rpcap.h	/^	uint8 jf;				\/* relative offset to jump to in case of 'false' *\/$/;"	m	struct:rpcap_filterbpf_insn
jf	pcap/bpf.h	/^	u_char 	jf;$/;"	m	struct:bpf_insn
jt	gencode.h	/^	struct slist *jt;	\/*only for relative jump in block*\/$/;"	m	struct:stmt	typeref:struct:stmt::slist
jt	pcap-rpcap.h	/^	uint8 jt;				\/* relative offset to jump to in case of 'true' *\/$/;"	m	struct:rpcap_filterbpf_insn
jt	pcap/bpf.h	/^	u_char 	jt;$/;"	m	struct:bpf_insn
k	gencode.h	/^	bpf_int32 k;$/;"	m	struct:stmt
k	pcap-rpcap.h	/^	int32 k;				\/* instruction-dependent value *\/$/;"	m	struct:rpcap_filterbpf_insn
k	pcap/bpf.h	/^	bpf_u_int32 k;$/;"	m	struct:bpf_insn
kill	gencode.h	/^	atomset def, kill;$/;"	m	struct:block
krnldrop	pcap-rpcap.h	/^	uint32 krnldrop;	\/* Packets dropped by the kernel filter (i.e. pcap_stats.ps_drop) *\/$/;"	m	struct:rpcap_stats
label_stack_depth	gencode.c	/^	u_int label_stack_depth;$/;"	m	struct:_compiler_state	file:
lastClear	msdos/ndis2.h	/^        DWORD  lastClear;$/;"	m	struct:_MacStatusTable
lastDiag	msdos/ndis2.h	/^        DWORD  lastDiag;$/;"	m	struct:_MacStatusTable
lastErr	msdos/ndis2.c	/^static char   *lastErr        = NULL;$/;"	v	file:
len	msdos/pktdrvr.h	/^        char len;$/;"	m	struct:__anon16
len	pcap-bt-monitor-linux.c	/^    uint16_t len;$/;"	m	struct:hci_mon_hdr	file:
len	pcap-int.h	/^    bpf_u_int32 len;		\/* length this packet (off wire) *\/$/;"	m	struct:pcap_sf_patched_pkthdr
len	pcap-int.h	/^    bpf_u_int32 len;		\/* length this packet (off wire) *\/$/;"	m	struct:pcap_sf_pkthdr
len	pcap-rpcap.h	/^	uint32 len;				\/* Real length this packet (off wire) *\/$/;"	m	struct:rpcap_pkthdr
len	pcap-sita.c	/^	int			len;		\/* the current size of the inbound message *\/$/;"	m	struct:unit	file:
len	pcap/pcap.h	/^	bpf_u_int32 len;	\/* length this packet (off wire) *\/$/;"	m	struct:pcap_pkthdr
len	pcap/pcap.h	/^	u_int len;	\/* Current size of the queue, in bytes. *\/$/;"	m	struct:pcap_send_queue
len	pcap/usb.h	/^	u_int32_t	len;$/;"	m	struct:_usb_isodesc
len	sf-pcap-ng.c	/^	bpf_u_int32	len;$/;"	m	struct:enhanced_packet_block	file:
len	sf-pcap-ng.c	/^	bpf_u_int32	len;$/;"	m	struct:packet_block	file:
len	sf-pcap-ng.c	/^	bpf_u_int32	len;$/;"	m	struct:simple_packet_block	file:
length	msdos/ndis2.h	/^        WORD   length;$/;"	m	struct:_ProtocolChars
length	msdos/ndis2.h	/^        int    length;$/;"	m	struct:_PktBuf
length	pcap-enet.c	/^	struct LengthWords	length;$/;"	m	struct:packet_header	typeref:struct:packet_header::LengthWords	file:
lengths_swapped	sf-pcap.c	/^	swapped_type_t lengths_swapped;$/;"	m	struct:pcap_sf	file:
level	gencode.h	/^	int level;$/;"	m	struct:block
levels	optimize.c	/^	struct block **levels;$/;"	m	struct:_opt_state	typeref:struct:_opt_state::block	file:
lib_pcap_bluetooth_h	pcap/bluetooth.h	35;"	d
lib_pcap_bpf_h	pcap/bpf.h	73;"	d
lib_pcap_can_socketcan_h	pcap/can_socketcan.h	40;"	d
lib_pcap_dlt_h	pcap/dlt.h	42;"	d
lib_pcap_export_defs_h	pcap/export-defs.h	36;"	d
lib_pcap_namedb_h	pcap/namedb.h	35;"	d
lib_pcap_nflog_h	pcap/nflog.h	29;"	d
lib_pcap_pcap_h	pcap/pcap.h	36;"	d
lib_pcap_sll_h	pcap/sll.h	75;"	d
lib_pcap_usb_h	pcap/usb.h	35;"	d
lib_pcap_vlan_h	pcap/vlan.h	35;"	d
libdir	Makefile	/^libdir =  ${exec_prefix}\/lib$/;"	m
link	gencode.h	/^	struct block *link;	\/* link field used by optimizer *\/$/;"	m	struct:block	typeref:struct:block::block
linkSpeed	msdos/ndis2.h	/^        DWORD  linkSpeed;$/;"	m	struct:_MacChars
link_inedge	optimize.c	/^link_inedge(struct edge *parent, struct block *child)$/;"	f	file:
linkname	pcap-libdlpi.c	/^	char	linkname[DLPI_LINKNAME_MAX];$/;"	m	struct:linknamelist	file:
linknamelist	pcap-libdlpi.c	/^typedef struct linknamelist {$/;"	s	file:
linknamelist_t	pcap-libdlpi.c	/^} linknamelist_t;$/;"	t	typeref:struct:linknamelist	file:
linktype	gencode.c	/^	int linktype;$/;"	m	struct:_compiler_state	file:
linktype	pcap-common.c	/^	int	linktype;$/;"	m	struct:linktype_map	file:
linktype	pcap-int.h	/^	int linktype;		\/* Network linktype *\/$/;"	m	struct:pcap
linktype	pcap-rpcap.h	/^	int32 linktype;						\/* Link type *\/$/;"	m	struct:rpcap_openreply
linktype	pcap/pcap.h	/^	bpf_u_int32 linktype;	\/* data link type (LINKTYPE_*) *\/$/;"	m	struct:pcap_file_header
linktype	sf-pcap-ng.c	/^	u_short		linktype;$/;"	m	struct:interface_description_block	file:
linktype_ext	pcap-int.h	/^	int linktype_ext;       \/* Extended information stored in the linktype field of a file *\/$/;"	m	struct:pcap
linktype_map	pcap-common.c	/^static struct linktype_map {$/;"	s	file:
linktype_to_dlt	pcap-common.c	/^linktype_to_dlt(int linktype)$/;"	f
linkwalk	pcap-libdlpi.c	/^typedef struct linkwalk {$/;"	s	file:
linkwalk_t	pcap-libdlpi.c	/^} linkwalk_t;$/;"	t	typeref:struct:linkwalk	file:
linux_check_direction	pcap-linux.c	/^linux_check_direction(const pcap_t *handle, const struct sockaddr_ll *sll)$/;"	f	file:
linux_if_drops	pcap-linux.c	/^linux_if_drops(const char * if_name)$/;"	f	file:
list_interfaces	pcap-libdlpi.c	/^list_interfaces(const char *linkname, void *arg)$/;"	f	file:
live_dump_ended_op	pcap-int.h	/^	live_dump_ended_op_t live_dump_ended_op;$/;"	m	struct:pcap
live_dump_ended_op_t	pcap-int.h	/^typedef int	(*live_dump_ended_op_t)(pcap_t *, int);$/;"	t
live_dump_op	pcap-int.h	/^	live_dump_op_t live_dump_op;$/;"	m	struct:pcap
live_dump_op_t	pcap-int.h	/^typedef int	(*live_dump_op_t)(pcap_t *, char *, int, int);$/;"	t
llc_db	nametoaddr.c	/^static struct eproto llc_db[] = {$/;"	v	typeref:struct:eproto	file:
lnl_next	pcap-libdlpi.c	/^	struct linknamelist *lnl_next;$/;"	m	struct:linknamelist	typeref:struct:linknamelist::linknamelist	file:
lo_ifindex	pcap-linux.c	/^	int	lo_ifindex;	\/* interface index of the loopback device *\/$/;"	m	struct:pcap_linux	file:
lo_ifindex	pcap-rpcap.h	/^	int		lo_ifindex;		\/* interface index of the loopback device *\/$/;"	m	struct:pcap_md
long_name	pcap-dos.h	/^         const char *long_name;$/;"	m	struct:device
longjf	gencode.h	/^	u_int longjf;		\/* jf branch requires long jump *\/$/;"	m	struct:block
longjt	gencode.h	/^	u_int longjt;		\/* jt branch requires long jump *\/$/;"	m	struct:block
lookup_proto	gencode.c	/^lookup_proto(compiler_state_t *cstate, const char *name, int proto)$/;"	f	file:
lost	msdos/pktdrvr.h	/^        DWORD lost;               \/* # of packets lost (RX)   *\/$/;"	m	struct:__anon18
lowerDispatchTable	msdos/ndis2.h	/^        BYTE *lowerDispatchTable;$/;"	m	struct:_CommonChars
lowerModuleName	msdos/ndis2.h	/^        BYTE  lowerModuleName[16];$/;"	m	struct:_FailingModules
lowerTable	msdos/ndis2.c	/^static struct _ProtDispatch   lowerTable;$/;"	v	typeref:struct:_ProtDispatch	file:
lw_err	pcap-libdlpi.c	/^	int		lw_err;$/;"	m	struct:linkwalk	file:
lw_list	pcap-libdlpi.c	/^	linknamelist_t	*lw_list;$/;"	m	struct:linkwalk	file:
m	gencode.c	/^	void *m;$/;"	m	struct:chunk	file:
m_next	bpf/net/bpf_filter.c	69;"	d	file:
m_next	net/bpf_filter.c	69;"	d	file:
m_xhalf	bpf/net/bpf_filter.c	/^m_xhalf(m, k, err)$/;"	f	file:
m_xhalf	net/bpf_filter.c	/^m_xhalf(m, k, err)$/;"	f	file:
m_xword	bpf/net/bpf_filter.c	/^m_xword(m, k, err)$/;"	f	file:
m_xword	net/bpf_filter.c	/^m_xword(m, k, err)$/;"	f	file:
macName	msdos/ndis2.h	/^        BYTE   macName[16];$/;"	m	struct:_MacChars
macStatus	msdos/ndis2.h	/^        DWORD  macStatus;$/;"	m	struct:_MacStatusTable
mac_count	pcap-dos.c	/^static u_long mac_count    = 0;$/;"	v	file:
magic	pcap/pcap.h	/^	bpf_u_int32 magic;$/;"	m	struct:pcap_file_header
main	config/have_siocglifconf.c	/^int main() {$/;"	f
main	msdos/bin2c.c	/^int main (int argc, char **argv)$/;"	f
main	tests/can_set_rfmon_test.c	/^main(int argc, char **argv)$/;"	f
main	tests/capturetest.c	/^main(int argc, char **argv)$/;"	f
main	tests/filtertest.c	/^main(int argc, char **argv)$/;"	f
main	tests/findalldevstest.c	/^int main(int argc, char **argv)$/;"	f
main	tests/opentest.c	/^main(int argc, char **argv)$/;"	f
main	tests/reactivatetest.c	/^main(void)$/;"	f
main	tests/selpolltest.c	/^main(int argc, char **argv)$/;"	f
main	tests/valgrindtest.c	/^main(int argc, char **argv)$/;"	f
majVer	msdos/pktdrvr.h	/^        BYTE  majVer;       \/* Major driver implementation ver.  *\/$/;"	m	struct:__anon17
majorModuleVersion	msdos/ndis2.h	/^        BYTE  majorModuleVersion;$/;"	m	struct:_CommonChars
majorNdisVersion	msdos/ndis2.h	/^        BYTE  majorNdisVersion;        \/* 2 - Latest version *\/$/;"	m	struct:_CommonChars
major_version	sf-pcap-ng.c	/^	u_short		major_version;$/;"	m	struct:section_header_block	file:
make_marks	optimize.c	/^make_marks(struct icode *ic, struct block *p)$/;"	f	file:
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map	pcap-common.c	/^} map[] = {$/;"	v	typeref:struct:linktype_map	file:
map_arphrd_to_dlt	pcap-linux.c	/^static void map_arphrd_to_dlt(pcap_t *handle, int sock_fd, int arptype,$/;"	f	file:
map_packet_type_to_sll_type	pcap-linux.c	/^map_packet_type_to_sll_type(short int sll_pkttype)$/;"	f	file:
mark	gencode.h	/^	int mark;$/;"	m	struct:block
mark_code	optimize.c	/^mark_code(struct icode *ic)$/;"	f	file:
max	pcap-dos.h	77;"	d
max	pcap-dos.h	85;"	d
maxDataBlocks	msdos/ndis2.h	/^        WORD   maxDataBlocks;$/;"	m	struct:_MacChars
maxFrameSize	msdos/ndis2.h	/^        WORD   maxFrameSize;$/;"	m	struct:_MacChars
maxMulticastAddresses	msdos/ndis2.h	/^        WORD   maxMulticastAddresses;$/;"	m	struct:_MulticastList
max_fs	pcap-sita.c	/^static int		max_fs;$/;"	v	file:
max_sz	missing/snprintf.c	/^  size_t max_sz;$/;"	m	struct:state	file:
maxlen	pcap/pcap.h	/^	u_int maxlen;	\/* Maximum size of the the queue, in bytes. This$/;"	m	struct:pcap_send_queue
maxval	optimize.c	/^	int maxval;$/;"	m	struct:_opt_state	file:
mbuf	bpf/net/bpf_filter.c	68;"	d	file:
mbuf	net/bpf_filter.c	68;"	d	file:
mediaSpecificStats	msdos/ndis2.h	/^        BYTE  *mediaSpecificStats;$/;"	m	struct:_MacStatusTable
mediaType	msdos/ndis2.c	/^static int     mediaType      = 0;$/;"	v	file:
mem_end	pcap-dos.h	/^         DWORD  mem_end;        \/* shared mem end           *\/$/;"	m	struct:device
mem_start	pcap-dos.h	/^         DWORD  mem_start;      \/* shared mem start         *\/$/;"	m	struct:device
memcmp	msdos/pktdrvr.c	125;"	d	file:
memcpy	msdos/pktdrvr.c	124;"	d	file:
memset	msdos/pktdrvr.c	126;"	d	file:
merge	gencode.c	/^merge(b0, b1)$/;"	f	file:
method	pcap-rpcap.h	/^	uint8 method;		\/* Sampling method *\/$/;"	m	struct:rpcap_sampling
method	remote-ext.h	/^	int method;$/;"	m	struct:pcap_samp
min	pcap-dos.h	76;"	d
min	pcap-dos.h	81;"	d
min	pcap-int.h	362;"	d
minVer	msdos/pktdrvr.h	/^        BYTE  minVer;       \/* Minor driver implementation ver.  *\/$/;"	m	struct:__anon17
minorModuleVersion	msdos/ndis2.h	/^        BYTE  minorModuleVersion;$/;"	m	struct:_CommonChars
minorNdisVersion	msdos/ndis2.h	/^        BYTE  minorNdisVersion;        \/* 0                  *\/$/;"	m	struct:_CommonChars
minor_version	sf-pcap-ng.c	/^	u_short		minor_version;$/;"	m	struct:section_header_block	file:
minus_flag	missing/snprintf.c	/^    minus_flag     =  1,$/;"	e	enum:format_flags	file:
mmapbuf	pcap-linux.c	/^	u_char	*mmapbuf;	\/* memory-mapped region pointer *\/$/;"	m	struct:pcap_linux	file:
mmapbuf	pcap-usb-linux.c	/^	u_char *mmapbuf;	\/* memory-mapped region pointer *\/$/;"	m	struct:pcap_usb_linux	file:
mmapbuflen	pcap-linux.c	/^	size_t	mmapbuflen;	\/* size of region *\/$/;"	m	struct:pcap_linux	file:
mmapbuflen	pcap-usb-linux.c	/^	size_t mmapbuflen;	\/* size of region *\/$/;"	m	struct:pcap_usb_linux	file:
moduleDS	msdos/ndis2.h	/^        WORD  moduleDS;$/;"	m	struct:_CommonChars
moduleFlags	msdos/ndis2.h	/^        DWORD moduleFlags;$/;"	m	struct:_CommonChars
moduleId	msdos/ndis2.h	/^        WORD  moduleId;$/;"	m	struct:_CommonChars
moduleName	msdos/ndis2.h	/^        BYTE         moduleName[16];$/;"	m	struct:_CardHandle
moduleName	msdos/ndis2.h	/^        BYTE  moduleName[16];$/;"	m	struct:_CommonChars
moduleName	msdos/ndis2.h	/^        BYTE  moduleName[2][16];$/;"	m	struct:_BindingsList
mon_bin_get	pcap-usb-linux.c	/^struct mon_bin_get {$/;"	s	file:
mon_bin_mfetch	pcap-usb-linux.c	/^struct mon_bin_mfetch {$/;"	s	file:
mon_bin_stats	pcap-usb-linux.c	/^struct mon_bin_stats {$/;"	s	file:
mondevice	pcap-linux.c	/^	char	*mondevice;	\/* mac80211 monitor device we created *\/$/;"	m	struct:pcap_linux	file:
monitor_mode	pcap-bpf.c	/^monitor_mode(pcap_t *p, int set)$/;"	f	file:
monitor_type	pcap-linux.c	/^} monitor_type;$/;"	t	typeref:enum:__anon7	file:
mtod	bpf/net/bpf_filter.c	71;"	d	file:
mtod	net/bpf_filter.c	71;"	d	file:
mtp2type	grammar.y	/^mtp2type: FISU			{ $$ = M_FISU; }$/;"	l
mtp3field	grammar.y	/^mtp3field: SIO			{ $$.mtp3fieldtype = M_SIO; }$/;"	l
mtp3fieldvalue	grammar.y	/^mtp3fieldvalue: NUM {$/;"	l
mtp3listvalue	grammar.y	/^mtp3listvalue: mtp3fieldvalue$/;"	l
mtp3value	grammar.y	/^mtp3value: mtp3fieldvalue$/;"	l
multicast	msdos/pktdrvr.h	/^        WORD  multicast;    \/* HiPerformance data, N\/A           *\/$/;"	m	struct:__anon17
multicast	pcap-dos.h	/^          DWORD  multicast;             \/* multicast packets received   *\/$/;"	m	struct:net_device_stats
multicast	pcap/pcap.h	/^       u_long  multicast;         \/* multicast packets received   *\/$/;"	m	struct:pcap_stat_ex
multicastAddress	msdos/ndis2.h	/^        BYTE   multicastAddress[16][16];$/;"	m	struct:_MulticastList
multicastList	msdos/ndis2.h	/^        MulticastList *multicastList;$/;"	m	struct:_MacChars
must_clear	pcap-rpcap.h	/^	int		must_clear;		\/* stuff we must clear when we close *\/$/;"	m	struct:pcap_md
must_do_on_close	pcap-bpf.c	/^	int must_do_on_close;	\/* stuff we must do when we close *\/$/;"	m	struct:pcap_bpf	file:
must_do_on_close	pcap-linux.c	/^	int	must_do_on_close; \/* stuff we must do when we close *\/$/;"	m	struct:pcap_linux	file:
myAddress	msdos/pktdrvr.c	/^PUBLIC ETHER       myAddress    = {   0,  0,  0,  0,  0,  0 };$/;"	v
my_nfattr	pcap-netfilter-linux.c	/^struct my_nfattr {$/;"	s	file:
n_blocks	optimize.c	/^	int n_blocks;$/;"	m	struct:_opt_state	file:
n_edges	optimize.c	/^	int n_edges;$/;"	m	struct:_opt_state	file:
n_left	gencode.c	/^	size_t n_left;$/;"	m	struct:chunk	file:
naddr	pcap-rpcap.h	/^	uint16 naddr;						\/* Number of addresses *\/$/;"	m	struct:rpcap_findalldevs_if
name	msdos/ndis2.h	/^        BYTE   name[16];$/;"	m	struct:_ProtocolChars
name	msdos/pktdrvr.h	/^        BYTE  name [15];    \/* Name of adapter interface,ie.3C523*\/$/;"	m	struct:__anon17
name	pcap-dos.h	/^         const char *name;$/;"	m	struct:device
name	pcap-sita.c	/^	char		*name;		\/* this interface's name *\/$/;"	m	struct:iface	file:
name	pcap.c	/^	const char *name;$/;"	m	struct:dlt_choice	file:
name	pcap.c	/^	const char *name;$/;"	m	struct:tstamp_type_choice	file:
name	pcap/namedb.h	/^	char name[122];$/;"	m	struct:pcap_etherent
name	pcap/pcap.h	/^	char *name;		\/* name to hand to "pcap_open_live()" *\/$/;"	m	struct:pcap_if
namelen	pcap-rpcap.h	/^	uint16 namelen;						\/* Length of the interface name *\/$/;"	m	struct:rpcap_findalldevs_if
narth	grammar.y	/^narth:	  pname '[' arth ']'		{ $$ = gen_load(cstate, $1, $3, 1); }$/;"	l
ndaqual	grammar.y	/^ndaqual:  GATEWAY		{ $$ = Q_GATEWAY; }$/;"	l
ndesc	pcap/usb.h	/^	u_int32_t ndesc;	\/* number of isochronous descriptors *\/$/;"	m	struct:_usb_header_mmapped
ndis_close	pcap-dos.c	/^static void ndis_close (struct device *dev)$/;"	f	file:
ndis_dev	pcap-dos.c	/^static struct device ndis_dev = {$/;"	v	typeref:struct:device	file:
ndis_errlist	msdos/ndis2.c	/^       } ndis_errlist[] = {$/;"	v	typeref:struct:__anon13	file:
ndis_nerr	msdos/ndis2.c	/^static int ndis_nerr = sizeof(ndis_errlist) \/ sizeof(ndis_errlist[0]);$/;"	v	file:
ndis_open	pcap-dos.c	/^static int ndis_open (struct device *dev)$/;"	f	file:
ndis_probe	pcap-dos.c	/^static int ndis_probe (struct device *dev)$/;"	f	file:
ndis_stats	pcap-dos.c	/^static void *ndis_stats (struct device *dev)$/;"	f	file:
net_device_stats	pcap-dos.h	/^  typedef struct net_device_stats {$/;"	s
netfilter_activate	pcap-netfilter-linux.c	/^netfilter_activate(pcap_t* handle)$/;"	f	file:
netfilter_create	pcap-netfilter-linux.c	/^netfilter_create(const char *device, char *ebuf, int *is_ours)$/;"	f
netfilter_findalldevs	pcap-netfilter-linux.c	/^netfilter_findalldevs(pcap_if_t **alldevsp, char *err_str)$/;"	f
netfilter_inject_linux	pcap-netfilter-linux.c	/^netfilter_inject_linux(pcap_t *handle, const void *buf, size_t size)$/;"	f	file:
netfilter_read_linux	pcap-netfilter-linux.c	/^netfilter_read_linux(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
netfilter_send_config_msg	pcap-netfilter-linux.c	/^netfilter_send_config_msg(const pcap_t *handle, u_int16_t msg_type, int ack, u_int8_t family, u_int16_t res_id, const struct my_nfattr *mynfa)$/;"	f	file:
netfilter_set_datalink	pcap-netfilter-linux.c	/^netfilter_set_datalink(pcap_t *handle, int dlt)$/;"	f	file:
netfilter_stats_linux	pcap-netfilter-linux.c	/^netfilter_stats_linux(pcap_t *handle, struct pcap_stat *stats)$/;"	f	file:
netmask	gencode.c	/^	bpf_u_int32 netmask;$/;"	m	struct:_compiler_state	file:
netmask	pcap-rpcap.h	/^	struct sockaddr_storage netmask;	\/* Netmask for that address *\/$/;"	m	struct:rpcap_findalldevs_ifaddr	typeref:struct:rpcap_findalldevs_ifaddr::sockaddr_storage
netmask	pcap/pcap.h	/^	struct sockaddr *netmask;	\/* netmask for that address *\/$/;"	m	struct:pcap_addr	typeref:struct:pcap_addr::sockaddr
newInOffset	msdos/pkt_rx0.asm	/^ newInOffset   dw  0$/;"	d
newInOffset	msdos/pkt_rx1.s	/^newInOffset dw  0$/;"	d
new_block	gencode.c	/^new_block(compiler_state_t *cstate, int code)$/;"	f	file:
new_pcap_dag	pcap-dag.c	/^new_pcap_dag(pcap_t *p)$/;"	f	file:
new_stmt	gencode.c	/^new_stmt(compiler_state_t *cstate, int code)$/;"	f	file:
newchunk	gencode.c	/^newchunk(compiler_state_t *cstate, size_t n)$/;"	f	file:
next	gencode.h	/^	struct edge *next;	\/* link list of incoming edges for a node *\/$/;"	m	struct:edge	typeref:struct:edge::edge
next	gencode.h	/^	struct slist *next;$/;"	m	struct:slist	typeref:struct:slist::slist
next	optimize.c	/^	struct valnode *next;$/;"	m	struct:valnode	typeref:struct:valnode::valnode	file:
next	pcap-dag.c	/^	struct pcap_dag_node *next;$/;"	m	struct:pcap_dag_node	typeref:struct:pcap_dag_node::pcap_dag_node	file:
next	pcap-dos.h	/^         struct device *next;   \/* next device in list      *\/$/;"	m	struct:device	typeref:struct:device::device
next	pcap-int.h	/^	struct pcap *next;	\/* list of open pcaps that need stuff cleared on close *\/$/;"	m	struct:pcap	typeref:struct:pcap::pcap
next	pcap-rpcap.h	/^	struct activehosts *next;$/;"	m	struct:activehosts	typeref:struct:activehosts::activehosts
next	pcap-rpcap.h	/^	struct pcap *next;		\/* list of open pcaps that need stuff cleared on close *\/$/;"	m	struct:pcap_md	typeref:struct:pcap_md::pcap
next	pcap-sita.c	/^	struct iface	*next;		\/* a pointer to the next interface *\/$/;"	m	struct:iface	typeref:struct:iface::iface	file:
next	pcap/pcap.h	/^	struct pcap_addr *next;$/;"	m	struct:pcap_addr	typeref:struct:pcap_addr::pcap_addr
next	pcap/pcap.h	/^	struct pcap_if *next;$/;"	m	struct:pcap_if	typeref:struct:pcap_if::pcap_if
nextLink	msdos/ndis2.h	/^	struct _PktBuf *nextLink;$/;"	m	struct:_PktBuf	typeref:struct:_PktBuf::_PktBuf
next_packet_op	pcap-int.h	/^	int (*next_packet_op)(pcap_t *, struct pcap_pkthdr *, u_char **);$/;"	m	struct:pcap
next_vnode	optimize.c	/^	struct valnode *next_vnode;$/;"	m	struct:_opt_state	typeref:struct:_opt_state::valnode	file:
nfa_len	pcap-netfilter-linux.c	/^	u_int16_t nfa_len;$/;"	m	struct:my_nfattr	file:
nfa_type	pcap-netfilter-linux.c	/^	u_int16_t nfa_type;$/;"	m	struct:my_nfattr	file:
nfetch	pcap-usb-linux.c	/^	int32_t nfetch;    \/* Number of events to fetch (out: fetched) *\/$/;"	m	struct:mon_bin_mfetch	file:
nflog_family	pcap/nflog.h	/^	u_int8_t	nflog_family;		\/* address family *\/$/;"	m	struct:nflog_hdr
nflog_hdr	pcap/nflog.h	/^typedef struct nflog_hdr {$/;"	s
nflog_hdr_t	pcap/nflog.h	/^} nflog_hdr_t;$/;"	t	typeref:struct:nflog_hdr
nflog_hwaddr	pcap/nflog.h	/^typedef struct nflog_hwaddr {$/;"	s
nflog_hwaddr_t	pcap/nflog.h	/^} nflog_hwaddr_t;$/;"	t	typeref:struct:nflog_hwaddr
nflog_packet_hdr	pcap/nflog.h	/^typedef struct nflog_packet_hdr {$/;"	s
nflog_packet_hdr_t	pcap/nflog.h	/^} nflog_packet_hdr_t;$/;"	t	typeref:struct:nflog_packet_hdr
nflog_rid	pcap/nflog.h	/^	u_int16_t	nflog_rid;		\/* resource ID *\/$/;"	m	struct:nflog_hdr
nflog_send_config_cmd	pcap-netfilter-linux.c	/^nflog_send_config_cmd(const pcap_t *handle, u_int16_t group_id, u_int8_t cmd, u_int8_t family)$/;"	f	file:
nflog_send_config_mode	pcap-netfilter-linux.c	/^nflog_send_config_mode(const pcap_t *handle, u_int16_t group_id, u_int8_t copy_mode, u_int32_t copy_range)$/;"	f	file:
nflog_send_config_msg	pcap-netfilter-linux.c	/^nflog_send_config_msg(const pcap_t *handle, u_int8_t family, u_int16_t group_id, const struct my_nfattr *mynfa)$/;"	f	file:
nflog_timestamp	pcap/nflog.h	/^typedef struct nflog_timestamp {$/;"	s
nflog_timestamp_t	pcap/nflog.h	/^} nflog_timestamp_t;$/;"	t	typeref:struct:nflog_timestamp
nflog_tlv	pcap/nflog.h	/^typedef struct nflog_tlv {$/;"	s
nflog_tlv_t	pcap/nflog.h	/^} nflog_tlv_t;$/;"	t	typeref:struct:nflog_tlv
nflog_version	pcap/nflog.h	/^	u_int8_t	nflog_version;		\/* version *\/$/;"	m	struct:nflog_hdr
nflush	pcap-usb-linux.c	/^	int32_t nflush;    \/* Number of events to flush *\/$/;"	m	struct:mon_bin_mfetch	file:
nfqueue_send_config_cmd	pcap-netfilter-linux.c	/^nfqueue_send_config_cmd(const pcap_t *handle, u_int16_t group_id, u_int8_t cmd, u_int16_t pf)$/;"	f	file:
nfqueue_send_config_mode	pcap-netfilter-linux.c	/^nfqueue_send_config_mode(const pcap_t *handle, u_int16_t group_id, u_int8_t copy_mode, u_int32_t copy_range)$/;"	f	file:
nfqueue_send_config_msg	pcap-netfilter-linux.c	/^nfqueue_send_config_msg(const pcap_t *handle, u_int8_t family, u_int16_t group_id, const struct my_nfattr *mynfa)$/;"	f	file:
nfqueue_send_verdict	pcap-netfilter-linux.c	/^nfqueue_send_verdict(const pcap_t *handle, u_int16_t group_id, u_int32_t id, u_int32_t verdict)$/;"	f	file:
nftype_t	pcap-netfilter-linux.c	/^typedef enum { OTHER = -1, NFLOG, NFQUEUE } nftype_t;$/;"	t	typeref:enum:__anon1	file:
nid	grammar.y	/^nid:	  ID			{ $$.b = gen_scode(cstate, $1, $$.q = $<blk>0.q); }$/;"	l
nit_setflags	pcap-nit.c	/^nit_setflags(pcap_t *p)$/;"	f	file:
nit_setflags	pcap-snit.c	/^nit_setflags(pcap_t *p)$/;"	f	file:
nitems	pcap-rpcap.h	/^	uint32 nitems;			\/* Number of items contained into the filter (e.g. BPF instructions for BPF filters) *\/$/;"	m	struct:rpcap_filter
nl	pcap-dlpi.c	/^static struct nlist nl[] = {$/;"	v	typeref:struct:nlist	file:
nl80211	pcap-linux.c	/^	struct genl_family *nl80211;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::genl_family	file:
nl80211_cleanup	pcap-linux.c	/^nl80211_cleanup(struct nl80211_state *state)$/;"	f	file:
nl80211_init	pcap-linux.c	/^nl80211_init(pcap_t *handle, struct nl80211_state *state, const char *device)$/;"	f	file:
nl80211_state	pcap-linux.c	/^struct nl80211_state {$/;"	s	file:
nl_cache	pcap-linux.c	/^	struct nl_cache *nl_cache;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_cache	file:
nl_sock	pcap-linux.c	/^	struct nl_sock *nl_sock;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_sock	file:
nl_sock	pcap-linux.c	594;"	d	file:
nl_socket_alloc	pcap-linux.c	/^nl_socket_alloc(void)$/;"	f	file:
nl_socket_free	pcap-linux.c	/^nl_socket_free(struct nl_handle *h)$/;"	f	file:
no_optimize	gencode.c	/^	int no_optimize;$/;"	m	struct:_compiler_state	file:
nodewords	optimize.c	/^	int nodewords;$/;"	m	struct:_opt_state	file:
nonUnified_IOP_port_name	pcap-sita.c	/^static void nonUnified_IOP_port_name(char *buf, size_t bufsize, const char *proto, unit_t *u) {$/;"	f	file:
nonblock	pcap-bpf.c	/^	int nonblock;		\/* true if in nonblocking mode *\/$/;"	m	struct:pcap_bpf	file:
nonblock	pcap-new.c	/^	int nonblock;$/;"	m	struct:pcap_win	file:
nonblock	pcap-rpcap.c	/^	int nonblock;$/;"	m	struct:pcap_win	file:
nonblock	pcap-win32.c	/^	int nonblock;$/;"	m	struct:pcap_win	file:
nosup	pcap-null.c	/^static char nosup[] = "live packet capture not supported on this system";$/;"	v	file:
not	grammar.y	/^not:	  '!'			{ $$ = $<blk>0; }$/;"	l
npkt	pcap-rpcap.h	/^	uint32 npkt;			\/* Ordinal number of the packet (i.e. the first one captured has '1', the second one '2', etc) *\/$/;"	m	struct:rpcap_pkthdr
null	grammar.y	/^null:	  \/* null *\/		{ $$.q = qerr; }$/;"	l
null_print	pcap-dos.c	/^static void null_print (void) {}$/;"	f	file:
numBindings	msdos/ndis2.h	/^        WORD  numBindings;$/;"	m	struct:_BindingsList
num_elem	pcap-dos.h	/^         int          num_elem;   \/* number of elements *\/$/;"	m	struct:rx_ringbuf
number	msdos/pktdrvr.h	/^        BYTE  number;       \/* = 0 for single LAN adapter        *\/$/;"	m	struct:__anon17
numberMulticastAddresses	msdos/ndis2.h	/^        WORD   numberMulticastAddresses;$/;"	m	struct:_MulticastList
number_blks_r	optimize.c	/^number_blks_r(opt_state_t *opt_state, struct icode *ic, struct block *p)$/;"	f	file:
numdesc	pcap/usb.h	/^	int32_t	numdesc;$/;"	m	struct:_iso_rec
obsolete1	msdos/ndis2.h	/^        DWORD  obsolete1[5];$/;"	m	struct:_MacStatusTable
obsolete2	msdos/ndis2.h	/^        DWORD  obsolete2[2];$/;"	m	struct:_MacStatusTable
odmlockid	pcap-bpf.c	/^static int odmlockid = 0;$/;"	v	file:
off_dpc	gencode.c	/^	u_int off_dpc;$/;"	m	struct:_compiler_state	file:
off_li	gencode.c	/^	u_int off_li;$/;"	m	struct:_compiler_state	file:
off_li_hsl	gencode.c	/^	u_int off_li_hsl;$/;"	m	struct:_compiler_state	file:
off_linkhdr	gencode.c	/^	bpf_abs_offset off_linkhdr;$/;"	m	struct:_compiler_state	file:
off_linkpl	gencode.c	/^	bpf_abs_offset off_linkpl;$/;"	m	struct:_compiler_state	file:
off_linktype	gencode.c	/^	bpf_abs_offset off_linktype;$/;"	m	struct:_compiler_state	file:
off_nl	gencode.c	/^	u_int off_nl;$/;"	m	struct:_compiler_state	file:
off_nl_nosnap	gencode.c	/^	u_int off_nl_nosnap;$/;"	m	struct:_compiler_state	file:
off_opc	gencode.c	/^	u_int off_opc;$/;"	m	struct:_compiler_state	file:
off_outermostlinkhdr	gencode.c	/^	bpf_abs_offset off_outermostlinkhdr;$/;"	m	struct:_compiler_state	file:
off_payload	gencode.c	/^	u_int off_payload;$/;"	m	struct:_compiler_state	file:
off_prevlinkhdr	gencode.c	/^	bpf_abs_offset off_prevlinkhdr;$/;"	m	struct:_compiler_state	file:
off_proto	gencode.c	/^	u_int off_proto;$/;"	m	struct:_compiler_state	file:
off_sio	gencode.c	/^	u_int off_sio;$/;"	m	struct:_compiler_state	file:
off_sls	gencode.c	/^	u_int off_sls;$/;"	m	struct:_compiler_state	file:
off_vci	gencode.c	/^	u_int off_vci;$/;"	m	struct:_compiler_state	file:
off_vpi	gencode.c	/^	u_int off_vpi;$/;"	m	struct:_compiler_state	file:
offset	gencode.h	/^	int offset;$/;"	m	struct:block
offset	pcap-int.h	/^	int offset;		\/* offset for proper alignment *\/$/;"	m	struct:pcap
offset	pcap/usb.h	/^	u_int32_t	offset;$/;"	m	struct:_usb_isodesc
offsetof	gencode.c	94;"	d	file:
offvec	pcap-usb-linux.c	/^	int32_t *offvec;   \/* Vector of events fetched *\/$/;"	m	struct:mon_bin_mfetch	file:
oid_get_request_op	pcap-int.h	/^	oid_get_request_op_t oid_get_request_op;$/;"	m	struct:pcap
oid_get_request_op_t	pcap-int.h	/^typedef int	(*oid_get_request_op_t)(pcap_t *, bpf_u_int32, void *, size_t *);$/;"	t
oid_set_request_op	pcap-int.h	/^	oid_set_request_op_t oid_set_request_op;$/;"	m	struct:pcap
oid_set_request_op_t	pcap-int.h	/^typedef int	(*oid_set_request_op_t)(pcap_t *, bpf_u_int32, const void *, size_t *);$/;"	t
oldmode	pcap-linux.c	/^	bpf_u_int32 oldmode;	\/* mode to restore when turning monitor mode off *\/$/;"	m	struct:pcap_linux	file:
oldmode	pcap-rpcap.h	/^	bpf_u_int32 oldmode;	\/* mode to restore when turning monitor mode off *\/$/;"	m	struct:pcap_md
oldstyle	pcap-int.h	/^	int oldstyle;		\/* if we're opening with pcap_open_live() *\/$/;"	m	struct:pcap
oneshot_buffer	pcap-linux.c	/^	u_char	*oneshot_buffer; \/* buffer for copy of packet *\/$/;"	m	struct:pcap_linux	file:
oneshot_callback	pcap-int.h	/^	pcap_handler oneshot_callback;$/;"	m	struct:pcap
oneshot_userdata	pcap-int.h	/^struct oneshot_userdata {$/;"	s
opcode	msdos/ndis2.h	/^        WORD      opcode;$/;"	m	struct:_ReqBlock
opcode	pcap-bt-monitor-linux.c	/^    uint16_t opcode;$/;"	m	struct:hci_mon_hdr	file:
opcode	pcap/bluetooth.h	/^	u_int16_t opcode;$/;"	m	struct:_pcap_bluetooth_linux_monitor_header
open	pcap-dos.h	/^         int   (*open) (struct device *dev);$/;"	m	struct:device
open_dlpi_device	pcap-dlpi.c	/^open_dlpi_device(const char *name, int *ppa, char *errbuf)$/;"	f	file:
open_driver	pcap-dos.c	/^open_driver (const char *dev_name, char *ebuf, int promisc)$/;"	f	file:
open_with_IOP	pcap-sita.c	/^static int open_with_IOP(unit_t  *u, int flag) {$/;"	f	file:
opt	pcap-int.h	/^	struct pcap_opt opt;$/;"	m	struct:pcap	typeref:struct:pcap::pcap_opt
opt_blk	optimize.c	/^opt_blk(compiler_state_t *cstate, struct icode *ic, opt_state_t *opt_state,$/;"	f	file:
opt_blks	optimize.c	/^opt_blks(compiler_state_t *cstate, opt_state_t *opt_state, struct icode *ic,$/;"	f	file:
opt_cleanup	optimize.c	/^opt_cleanup(opt_state_t *opt_state)$/;"	f	file:
opt_deadstores	optimize.c	/^opt_deadstores(opt_state_t *opt_state, register struct block *b)$/;"	f	file:
opt_dump	optimize.c	/^opt_dump(compiler_state_t *cstate, struct icode *ic)$/;"	f	file:
opt_init	optimize.c	/^opt_init(compiler_state_t *cstate, opt_state_t *opt_state, struct icode *ic)$/;"	f	file:
opt_j	optimize.c	/^opt_j(opt_state_t *opt_state, struct edge *ep)$/;"	f	file:
opt_loop	optimize.c	/^opt_loop(compiler_state_t *cstate, opt_state_t *opt_state, struct icode *ic,$/;"	f	file:
opt_not	optimize.c	/^opt_not(struct block *b)$/;"	f	file:
opt_peep	optimize.c	/^opt_peep(opt_state_t *opt_state, struct block *b)$/;"	f	file:
opt_root	optimize.c	/^opt_root(struct block **b)$/;"	f	file:
opt_state_t	gencode.h	/^typedef struct _opt_state opt_state_t;$/;"	t	typeref:struct:_opt_state
opt_stmt	optimize.c	/^opt_stmt(compiler_state_t *cstate, struct icode *ic, opt_state_t *opt_state,$/;"	f	file:
optarg	missing/getopt.c	/^char	*optarg;		\/* argument associated with option *\/$/;"	v
opterr	missing/getopt.c	/^int	opterr = 1,		\/* if error message should be printed *\/$/;"	v
optind	missing/getopt.c	/^	optind = 1,		\/* index into parent argv vector *\/$/;"	v
option_code	sf-pcap-ng.c	/^	u_short		option_code;$/;"	m	struct:option_header	file:
option_header	sf-pcap-ng.c	/^struct option_header {$/;"	s	file:
option_length	sf-pcap-ng.c	/^	u_short		option_length;$/;"	m	struct:option_header	file:
optopt	missing/getopt.c	/^	optopt,			\/* character checked for validity *\/$/;"	v
optreset	missing/getopt.c	/^	optreset;		\/* reset getopt *\/$/;"	v
or	grammar.y	/^or:	  OR			{ $$ = $<blk>0; }$/;"	l
or_pullup	optimize.c	/^or_pullup(opt_state_t *opt_state, struct block *b)$/;"	f	file:
other	grammar.y	/^other:	  pqual TK_BROADCAST	{ $$ = gen_broadcast(cstate, $1); }$/;"	l
outBytes	msdos/pktdrvr.h	/^        DWORD outBytes;           \/* # of bytes transmitted   *\/$/;"	m	struct:__anon18
outErrors	msdos/pktdrvr.h	/^        DWORD outErrors;          \/* # of transmission errors *\/$/;"	m	struct:__anon18
outPackets	msdos/pktdrvr.h	/^        DWORD outPackets;         \/* # of packets transmitted *\/$/;"	m	struct:__anon18
out_index	pcap-dos.h	/^         int          out_index;  \/* queue index tail *\/$/;"	m	struct:rx_ringbuf
out_use	gencode.h	/^	atomset out_use;$/;"	m	struct:block
outermostlinktype	gencode.c	/^	int outermostlinktype;$/;"	m	struct:_compiler_state	file:
oval	gencode.h	/^	int oval;$/;"	m	struct:block
p	nametoaddr.c	/^	u_short p;$/;"	m	struct:eproto	file:
p	pcap-dag.c	/^	pcap_t *p;$/;"	m	struct:pcap_dag_node	file:
p80211	grammar.y	/^p80211:   TYPE type SUBTYPE subtype$/;"	l
packetFilter	msdos/ndis2.h	/^        WORD   packetFilter;$/;"	m	struct:_MacStatusTable
packetLength	msdos/ndis2.h	/^        int    packetLength;$/;"	m	struct:_PktBuf
packet_block	sf-pcap-ng.c	/^struct packet_block {$/;"	s	file:
packet_header	pcap-enet.c	/^struct packet_header {$/;"	s	file:
packets_left	pcap-linux.c	/^	int packets_left; \/* Unhandled packets left within the block from previous call to pcap_read_linux_mmap_v3 in case of TPACKET_V3. *\/$/;"	m	struct:pcap_linux	file:
packets_nobufs	pcap-netfilter-linux.c	/^	u_int   packets_nobufs; \/* ENOBUFS counter *\/$/;"	m	struct:pcap_netfilter	file:
packets_read	pcap-dbus.c	/^	u_int	packets_read;	\/* count of packets read *\/$/;"	m	struct:pcap_dbus	file:
packets_read	pcap-linux.c	/^	u_int	packets_read;	\/* count of packets read with recvfrom() *\/$/;"	m	struct:pcap_linux	file:
packets_read	pcap-netfilter-linux.c	/^	u_int	packets_read;	\/* count of packets read with recvfrom() *\/$/;"	m	struct:pcap_netfilter	file:
packets_read	pcap-rpcap.h	/^	u_int	packets_read;	\/* count of packets read with recvfrom() *\/$/;"	m	struct:pcap_md
packets_read	pcap-usb-linux.c	/^	u_int packets_read;$/;"	m	struct:pcap_usb_linux	file:
pad	gencode.h	/^	unsigned char pad;$/;"	m	struct:qual
pad	pcap/can_socketcan.h	/^	u_int8_t pad;$/;"	m	struct:__anon33
pad	pcap/nflog.h	/^	u_int16_t	pad;		\/* padding to 32-bit boundary *\/$/;"	m	struct:nflog_hwaddr
pad	pcap/nflog.h	/^	u_int8_t	pad;		\/* padding to 32 bits *\/$/;"	m	struct:nflog_packet_hdr
pad	pcap/usb.h	/^	u_int8_t	pad[4];$/;"	m	struct:_usb_isodesc
para_skip	msdos/pktdrvr.c	/^  LOCAL int                 para_skip = 0;$/;"	v
para_skip	msdos/pktdrvr.c	/^  static int                para_skip = 0;$/;"	v	file:
paren	grammar.y	/^paren:	  '('			{ $$ = $<blk>0; }$/;"	l
pascal	msdos/ndis2.h	44;"	d
password	remote-ext.h	/^	char *password;$/;"	m	struct:pcap_rmtauth
path_vmunix	pcap-dlpi.c	/^static char path_vmunix[] = "\/hp-ux";$/;"	v	file:
payload_length	pcap/can_socketcan.h	/^	u_int8_t payload_length;$/;"	m	struct:__anon33
pcap	pcap-int.h	/^struct pcap {$/;"	s
pcap_ack_zbuf	pcap-bpf.c	/^pcap_ack_zbuf(pcap_t *p)$/;"	f	file:
pcap_activate	pcap.c	/^pcap_activate(pcap_t *p)$/;"	f
pcap_activate_bpf	pcap-bpf.c	/^pcap_activate_bpf(pcap_t *p)$/;"	f	file:
pcap_activate_dlpi	pcap-dlpi.c	/^pcap_activate_dlpi(pcap_t *p)$/;"	f	file:
pcap_activate_dos	pcap-dos.c	/^static int pcap_activate_dos (pcap_t *pcap)$/;"	f	file:
pcap_activate_libdlpi	pcap-libdlpi.c	/^pcap_activate_libdlpi(pcap_t *p)$/;"	f	file:
pcap_activate_linux	pcap-linux.c	/^pcap_activate_linux(pcap_t *handle)$/;"	f	file:
pcap_activate_nit	pcap-nit.c	/^pcap_activate_nit(pcap_t *p)$/;"	f	file:
pcap_activate_pf	pcap-pf.c	/^pcap_activate_pf(pcap_t *p)$/;"	f	file:
pcap_activate_sita	pcap-sita.c	/^static int pcap_activate_sita(pcap_t *handle) {$/;"	f	file:
pcap_activate_snit	pcap-snit.c	/^pcap_activate_snit(pcap_t *p)$/;"	f	file:
pcap_activate_snoop	pcap-snoop.c	/^pcap_activate_snoop(pcap_t *p)$/;"	f	file:
pcap_activate_win32	pcap-win32.c	/^pcap_activate_win32(pcap_t *p)$/;"	f	file:
pcap_add_if	fad-helpers.c	/^pcap_add_if(pcap_if_t **devlist, const char *name, u_int flags,$/;"	f
pcap_add_if_win32	pcap-win32.c	/^pcap_add_if_win32(pcap_if_t **devlist, char *name, bpf_u_int32 flags,$/;"	f	file:
pcap_add_to_pcaps_to_close	pcap.c	/^pcap_add_to_pcaps_to_close(pcap_t *p)$/;"	f
pcap_addr	pcap/pcap.h	/^struct pcap_addr {$/;"	s
pcap_addr_t	pcap/pcap.h	/^typedef struct pcap_addr pcap_addr_t;$/;"	t	typeref:struct:pcap_addr
pcap_alloc_databuf	dlpisubs.c	/^pcap_alloc_databuf(pcap_t *p)$/;"	f
pcap_alloc_pcap_t	pcap.c	/^pcap_alloc_pcap_t(char *ebuf, size_t size)$/;"	f	file:
pcap_assert	pcap-dos.c	/^void pcap_assert (const char *what, const char *file, unsigned line)$/;"	f
pcap_bluetooth_h4_header	pcap/bluetooth.h	/^} pcap_bluetooth_h4_header;$/;"	t	typeref:struct:_pcap_bluetooth_h4_header
pcap_bluetooth_linux_monitor_header	pcap/bluetooth.h	/^} pcap_bluetooth_linux_monitor_header;$/;"	t	typeref:struct:_pcap_bluetooth_linux_monitor_header
pcap_bpf	pcap-bpf.c	/^struct pcap_bpf {$/;"	s	file:
pcap_breakloop	pcap.c	/^pcap_breakloop(pcap_t *p)$/;"	f
pcap_bt	pcap-bt-linux.c	/^struct pcap_bt {$/;"	s	file:
pcap_can_set_rfmon	pcap.c	/^pcap_can_set_rfmon(pcap_t *p)$/;"	f
pcap_can_set_rfmon_bpf	pcap-bpf.c	/^pcap_can_set_rfmon_bpf(pcap_t *p)$/;"	f	file:
pcap_can_set_rfmon_linux	pcap-linux.c	/^pcap_can_set_rfmon_linux(pcap_t *handle)$/;"	f	file:
pcap_can_set_rfmon_win32	pcap-win32.c	/^pcap_can_set_rfmon_win32(pcap_t *p)$/;"	f	file:
pcap_can_socketcan_hdr	pcap/can_socketcan.h	/^} pcap_can_socketcan_hdr;$/;"	t	typeref:struct:__anon33
pcap_cant_set_rfmon	pcap.c	/^pcap_cant_set_rfmon(pcap_t *p _U_)$/;"	f	file:
pcap_check_activated	pcap.c	/^pcap_check_activated(pcap_t *p)$/;"	f
pcap_check_header	sf-pcap.c	/^pcap_check_header(bpf_u_int32 magic, FILE *fp, u_int precision, char *errbuf,$/;"	f
pcap_cleanup_acn	pcap-sita.c	/^static void pcap_cleanup_acn(pcap_t *handle) {$/;"	f	file:
pcap_cleanup_bpf	pcap-bpf.c	/^pcap_cleanup_bpf(pcap_t *p)$/;"	f	file:
pcap_cleanup_dead	pcap.c	/^pcap_cleanup_dead(pcap_t *p _U_)$/;"	f	file:
pcap_cleanup_dlpi	pcap-dlpi.c	/^pcap_cleanup_dlpi(pcap_t *p)$/;"	f	file:
pcap_cleanup_dos	pcap-dos.c	/^static void pcap_cleanup_dos (pcap_t *p)$/;"	f	file:
pcap_cleanup_libdlpi	pcap-libdlpi.c	/^pcap_cleanup_libdlpi(pcap_t *p)$/;"	f	file:
pcap_cleanup_linux	pcap-linux.c	/^static void	pcap_cleanup_linux( pcap_t *handle )$/;"	f	file:
pcap_cleanup_linux_mmap	pcap-linux.c	/^pcap_cleanup_linux_mmap( pcap_t *handle )$/;"	f	file:
pcap_cleanup_live_common	pcap.c	/^pcap_cleanup_live_common(pcap_t *p)$/;"	f
pcap_cleanup_remote	pcap-rpcap.c	/^static void pcap_cleanup_remote(pcap_t *fp)$/;"	f	file:
pcap_cleanup_win32	pcap-win32.c	/^pcap_cleanup_win32(pcap_t *p)$/;"	f	file:
pcap_close	pcap.c	/^pcap_close(pcap_t *p)$/;"	f
pcap_close_all	pcap.c	/^pcap_close_all(void)$/;"	f	file:
pcap_compile	gencode.c	/^pcap_compile(pcap_t *p, struct bpf_program *program,$/;"	f
pcap_compile_nopcap	gencode.c	/^pcap_compile_nopcap(int snaplen_arg, int linktype_arg,$/;"	f
pcap_conf_bufmod	dlpisubs.c	/^pcap_conf_bufmod(pcap_t *p, int snaplen)$/;"	f
pcap_config_hook	pcap-dos.c	/^int pcap_config_hook (const char *keyword, const char *value)$/;"	f
pcap_create	pcap.c	/^pcap_create(const char *device, char *errbuf)$/;"	f
pcap_create_common	pcap.c	/^pcap_create_common(char *ebuf, size_t size)$/;"	f
pcap_create_interface	pcap-bpf.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-dag.c	/^pcap_create_interface(const char *device, char *errbuf)$/;"	f
pcap_create_interface	pcap-dlpi.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-dos.c	/^pcap_t *pcap_create_interface (const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-libdlpi.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-linux.c	/^pcap_create_interface(const char *device, char *ebuf)$/;"	f
pcap_create_interface	pcap-nit.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-null.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-pf.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-septel.c	/^pcap_create_interface(const char *device, char *errbuf)$/;"	f
pcap_create_interface	pcap-sita.c	/^pcap_t *pcap_create_interface(const char *device _U_, char *ebuf) {$/;"	f
pcap_create_interface	pcap-snf.c	/^pcap_create_interface(const char *device, char *errbuf)$/;"	f
pcap_create_interface	pcap-snit.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-snoop.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_create_interface	pcap-win32.c	/^pcap_create_interface(const char *device _U_, char *ebuf)$/;"	f
pcap_createfilter_norpcappkt	pcap-rpcap.c	/^static int pcap_createfilter_norpcappkt(pcap_t *fp, struct bpf_program *prog)$/;"	f	file:
pcap_createsrcstr	pcap-new.c	/^int pcap_createsrcstr(char *source, int type, const char *host, const char *port, const char *name, char *errbuf)$/;"	f
pcap_dag	pcap-dag.c	/^struct pcap_dag {$/;"	s	file:
pcap_dag_node	pcap-dag.c	/^typedef struct pcap_dag_node {$/;"	s	file:
pcap_dag_node_t	pcap-dag.c	/^} pcap_dag_node_t;$/;"	t	typeref:struct:pcap_dag_node	file:
pcap_dags	pcap-dag.c	/^static pcap_dag_node_t *pcap_dags = NULL;$/;"	v	file:
pcap_datalink	pcap.c	/^pcap_datalink(pcap_t *p)$/;"	f
pcap_datalink_ext	pcap.c	/^pcap_datalink_ext(pcap_t *p)$/;"	f
pcap_datalink_name_to_val	pcap.c	/^pcap_datalink_name_to_val(const char *name)$/;"	f
pcap_datalink_val_to_description	pcap.c	/^pcap_datalink_val_to_description(int dlt)$/;"	f
pcap_datalink_val_to_name	pcap.c	/^pcap_datalink_val_to_name(int dlt)$/;"	f
pcap_dbus	pcap-dbus.c	/^struct pcap_dbus {$/;"	s	file:
pcap_direction_t	pcap/pcap.h	/^} pcap_direction_t;$/;"	t	typeref:enum:__anon34
pcap_dispatch	pcap.c	/^pcap_dispatch(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f
pcap_dlpi	dlpisubs.h	/^struct pcap_dlpi {$/;"	s
pcap_do_addexit	pcap.c	/^pcap_do_addexit(pcap_t *p)$/;"	f
pcap_dos	pcap-dos.c	/^struct pcap_dos {$/;"	s	file:
pcap_dump	sf-pcap.c	/^pcap_dump(u_char *user, const struct pcap_pkthdr *h, const u_char *sp)$/;"	f
pcap_dump_close	sf-pcap.c	/^pcap_dump_close(pcap_dumper_t *p)$/;"	f
pcap_dump_file	sf-pcap.c	/^pcap_dump_file(pcap_dumper_t *p)$/;"	f
pcap_dump_flush	sf-pcap.c	/^pcap_dump_flush(pcap_dumper_t *p)$/;"	f
pcap_dump_fopen	sf-pcap.c	/^pcap_dump_fopen(pcap_t *p, FILE *f)$/;"	f
pcap_dump_ftell	sf-pcap.c	/^pcap_dump_ftell(pcap_dumper_t *p)$/;"	f
pcap_dump_open	sf-pcap.c	/^pcap_dump_open(pcap_t *p, const char *fname)$/;"	f
pcap_dump_open_append	sf-pcap.c	/^pcap_dump_open_append(pcap_t *p, const char *fname)$/;"	f
pcap_dumper_t	pcap/pcap.h	/^typedef struct pcap_dumper pcap_dumper_t;$/;"	t	typeref:struct:pcap_dumper
pcap_ether_aton	nametoaddr.c	/^pcap_ether_aton(const char *s)$/;"	f
pcap_ether_hostton	nametoaddr.c	/^pcap_ether_hostton(const char *name)$/;"	f
pcap_etherent	pcap/namedb.h	/^struct pcap_etherent {$/;"	s
pcap_fddipad	gencode.c	/^	u_int pcap_fddipad;$/;"	m	struct:_compiler_state	file:
pcap_file	pcap.c	/^pcap_file(pcap_t *p)$/;"	f
pcap_file_header	pcap/pcap.h	/^struct pcap_file_header {$/;"	s
pcap_fileno	pcap.c	/^pcap_fileno(pcap_t *p)$/;"	f
pcap_filter_packets	pcap-dos.c	/^u_long pcap_filter_packets (void)$/;"	f
pcap_findalldevs	pcap.c	/^pcap_findalldevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_findalldevs_ex	pcap-new.c	/^int pcap_findalldevs_ex(char *source, struct pcap_rmtauth *auth, pcap_if_t **alldevs, char *errbuf)$/;"	f
pcap_findalldevs_interfaces	fad-getad.c	/^pcap_findalldevs_interfaces(pcap_if_t **alldevsp, char *errbuf,$/;"	f
pcap_findalldevs_interfaces	fad-gifc.c	/^pcap_findalldevs_interfaces(pcap_if_t **alldevsp, char *errbuf,$/;"	f
pcap_findalldevs_interfaces	fad-glifc.c	/^pcap_findalldevs_interfaces(pcap_if_t **alldevsp, char *errbuf,$/;"	f
pcap_fopen_offline	pcap/pcap.h	368;"	d
pcap_fopen_offline	savefile.c	/^pcap_fopen_offline(FILE *fp, char *errbuf)$/;"	f	file:
pcap_fopen_offline_with_tstamp_precision	pcap/pcap.h	366;"	d
pcap_fopen_offline_with_tstamp_precision	savefile.c	/^pcap_fopen_offline_with_tstamp_precision(FILE *fp, u_int precision,$/;"	f	file:
pcap_free_datalinks	pcap.c	/^pcap_free_datalinks(int *dlt_list)$/;"	f
pcap_free_tstamp_types	pcap.c	/^pcap_free_tstamp_types(int *tstamp_type_list)$/;"	f
pcap_freealldevs	fad-helpers.c	/^pcap_freealldevs(pcap_if_t *alldevs)$/;"	f
pcap_freecode	gencode.c	/^pcap_freecode(struct bpf_program *program)$/;"	f
pcap_get_airpcap_handle	pcap.c	/^pcap_get_airpcap_handle(pcap_t *p)$/;"	f
pcap_get_airpcap_handle_dead	pcap.c	/^pcap_get_airpcap_handle_dead(pcap_t *p)$/;"	f	file:
pcap_get_airpcap_handle_not_initialized	pcap.c	/^pcap_get_airpcap_handle_not_initialized(pcap_t *pcap)$/;"	f	file:
pcap_get_airpcap_handle_win32	pcap-win32.c	/^pcap_get_airpcap_handle_win32(pcap_t *p)$/;"	f	file:
pcap_get_ring_frame_status	pcap-linux.c	/^pcap_get_ring_frame_status(pcap_t *handle, int offset)$/;"	f	file:
pcap_get_selectable_fd	pcap.c	/^pcap_get_selectable_fd(pcap_t *p)$/;"	f
pcap_get_tstamp_precision	pcap.c	/^pcap_get_tstamp_precision(pcap_t *p)$/;"	f
pcap_geterr	pcap.c	/^pcap_geterr(pcap_t *p)$/;"	f
pcap_getevent	pcap.c	/^pcap_getevent(pcap_t *p)$/;"	f
pcap_getevent_dead	pcap.c	/^pcap_getevent_dead(pcap_t *p)$/;"	f	file:
pcap_getevent_not_initialized	pcap.c	/^pcap_getevent_not_initialized(pcap_t *pcap)$/;"	f	file:
pcap_getevent_win32	pcap-win32.c	/^pcap_getevent_win32(pcap_t *p)$/;"	f	file:
pcap_getnonblock	pcap.c	/^pcap_getnonblock(pcap_t *p, char *errbuf)$/;"	f
pcap_getnonblock_bpf	pcap-bpf.c	/^pcap_getnonblock_bpf(pcap_t *p, char *errbuf)$/;"	f	file:
pcap_getnonblock_fd	pcap.c	/^pcap_getnonblock_fd(pcap_t *p, char *errbuf)$/;"	f
pcap_getnonblock_mmap	pcap-linux.c	/^pcap_getnonblock_mmap(pcap_t *p, char *errbuf)$/;"	f	file:
pcap_getnonblock_win32	pcap-win32.c	/^pcap_getnonblock_win32(pcap_t *p, char *errbuf)$/;"	f	file:
pcap_handle_packet_mmap	pcap-linux.c	/^static int pcap_handle_packet_mmap($/;"	f	file:
pcap_handler	pcap/pcap.h	/^typedef void (*pcap_handler)(u_char *, const struct pcap_pkthdr *,$/;"	t
pcap_header	pcap-int.h	/^	struct pcap_pkthdr pcap_header;	\/* This is needed for the pcap_next_ex() to work *\/$/;"	m	struct:pcap	typeref:struct:pcap::pcap_pkthdr
pcap_hopen_offline	savefile.c	/^pcap_t* pcap_hopen_offline(intptr_t osfd, char *errbuf)$/;"	f
pcap_hopen_offline_with_tstamp_precision	savefile.c	/^pcap_t* pcap_hopen_offline_with_tstamp_precision(intptr_t osfd, u_int precision,$/;"	f
pcap_if	pcap/pcap.h	/^struct pcap_if {$/;"	s
pcap_if_t	pcap/pcap.h	/^typedef struct pcap_if pcap_if_t;$/;"	t	typeref:struct:pcap_if
pcap_init_hook	pcap-dos.c	/^static void pcap_init_hook (void)$/;"	f	file:
pcap_inject	pcap.c	/^pcap_inject(pcap_t *p, const void *buf, size_t size)$/;"	f
pcap_inject_acn	pcap-sita.c	/^static int pcap_inject_acn(pcap_t *p, const void *buf _U_, size_t size _U_) {$/;"	f	file:
pcap_inject_bpf	pcap-bpf.c	/^pcap_inject_bpf(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_dlpi	pcap-dlpi.c	/^pcap_inject_dlpi(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_libdlpi	pcap-libdlpi.c	/^pcap_inject_libdlpi(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_linux	pcap-linux.c	/^pcap_inject_linux(pcap_t *handle, const void *buf, size_t size)$/;"	f	file:
pcap_inject_nit	pcap-nit.c	/^pcap_inject_nit(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_pf	pcap-pf.c	/^pcap_inject_pf(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_snit	pcap-snit.c	/^pcap_inject_snit(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_snoop	pcap-snoop.c	/^pcap_inject_snoop(pcap_t *p, const void *buf, size_t size)$/;"	f	file:
pcap_inject_win32	pcap-win32.c	/^pcap_inject_win32(pcap_t *p, const void *buf, size_t size){$/;"	f	file:
pcap_int_h	pcap-int.h	35;"	d
pcap_is_swapped	pcap.c	/^pcap_is_swapped(pcap_t *p)$/;"	f
pcap_lib_version	pcap.c	/^pcap_lib_version (void)$/;"	f
pcap_lib_version	pcap.c	/^pcap_lib_version(void)$/;"	f
pcap_libdlpi_err	pcap-libdlpi.c	/^pcap_libdlpi_err(const char *linkname, const char *func, int err, char *errbuf)$/;"	f	file:
pcap_linux	pcap-linux.c	/^struct pcap_linux {$/;"	s	file:
pcap_list_datalinks	pcap.c	/^pcap_list_datalinks(pcap_t *p, int **dlt_buffer)$/;"	f
pcap_list_tstamp_types	pcap.c	/^pcap_list_tstamp_types(pcap_t *p, int **tstamp_typesp)$/;"	f
pcap_live_dump	pcap.c	/^pcap_live_dump(pcap_t *p, char *filename, int maxsize, int maxpacks)$/;"	f
pcap_live_dump_dead	pcap.c	/^pcap_live_dump_dead(pcap_t *p, char *filename, int maxsize, int maxpacks)$/;"	f	file:
pcap_live_dump_ended	pcap.c	/^pcap_live_dump_ended(pcap_t *p, int sync)$/;"	f
pcap_live_dump_ended_dead	pcap.c	/^pcap_live_dump_ended_dead(pcap_t *p, int sync)$/;"	f	file:
pcap_live_dump_ended_win32	pcap-win32.c	/^pcap_live_dump_ended_win32(pcap_t *p, int sync)$/;"	f	file:
pcap_live_dump_win32	pcap-win32.c	/^pcap_live_dump_win32(pcap_t *p, char *filename, int maxsize, int maxpacks)$/;"	f	file:
pcap_lookupdev	inet.c	/^pcap_lookupdev(errbuf)$/;"	f
pcap_lookupdev	pcap-dos.c	/^char *pcap_lookupdev (char *ebuf)$/;"	f
pcap_lookupnet	inet.c	/^pcap_lookupnet(device, netp, maskp, errbuf)$/;"	f
pcap_lookupnet	pcap-dos.c	/^int pcap_lookupnet (const char *device, bpf_u_int32 *localnet,$/;"	f
pcap_loop	pcap.c	/^pcap_loop(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f
pcap_mac_packets	pcap-dos.c	/^u_long pcap_mac_packets (void)$/;"	f
pcap_major_version	pcap.c	/^pcap_major_version(pcap_t *p)$/;"	f
pcap_md	pcap-rpcap.h	/^struct pcap_md {$/;"	s
pcap_minor_version	pcap.c	/^pcap_minor_version(pcap_t *p)$/;"	f
pcap_nametoaddr	nametoaddr.c	/^pcap_nametoaddr(const char *name)$/;"	f
pcap_nametoaddrinfo	nametoaddr.c	/^pcap_nametoaddrinfo(const char *name)$/;"	f
pcap_nametoeproto	nametoaddr.c	/^pcap_nametoeproto(const char *s)$/;"	f
pcap_nametollc	nametoaddr.c	/^pcap_nametollc(const char *s)$/;"	f
pcap_nametonetaddr	nametoaddr.c	/^pcap_nametonetaddr(const char *name)$/;"	f
pcap_nametoport	nametoaddr.c	/^pcap_nametoport(const char *name, int *port, int *proto)$/;"	f
pcap_nametoportrange	nametoaddr.c	/^pcap_nametoportrange(const char *name, int *port1, int *port2, int *proto)$/;"	f
pcap_nametoproto	nametoaddr.c	/^pcap_nametoproto(const char *str)$/;"	f
pcap_netfilter	pcap-netfilter-linux.c	/^struct pcap_netfilter {$/;"	s	file:
pcap_next	pcap.c	/^pcap_next(pcap_t *p, struct pcap_pkthdr *h)$/;"	f
pcap_next_etherent	etherent.c	/^pcap_next_etherent(FILE *fp)$/;"	f
pcap_next_ex	pcap.c	/^pcap_next_ex(pcap_t *p, struct pcap_pkthdr **pkt_header,$/;"	f
pcap_next_packet	sf-pcap.c	/^pcap_next_packet(pcap_t *p, struct pcap_pkthdr *hdr, u_char **data)$/;"	f	file:
pcap_next_zbuf	pcap-bpf.c	/^pcap_next_zbuf(pcap_t *p, int *cc)$/;"	f	file:
pcap_next_zbuf_shm	pcap-bpf.c	/^pcap_next_zbuf_shm(pcap_t *p, int *cc)$/;"	f	file:
pcap_ng_check_header	sf-pcap-ng.c	/^pcap_ng_check_header(bpf_u_int32 magic, FILE *fp, u_int precision, char *errbuf,$/;"	f
pcap_ng_cleanup	sf-pcap-ng.c	/^pcap_ng_cleanup(pcap_t *p)$/;"	f	file:
pcap_ng_if	sf-pcap-ng.c	/^struct pcap_ng_if {$/;"	s	file:
pcap_ng_next_packet	sf-pcap-ng.c	/^pcap_ng_next_packet(pcap_t *p, struct pcap_pkthdr *hdr, u_char **data)$/;"	f	file:
pcap_ng_sf	sf-pcap-ng.c	/^struct pcap_ng_sf {$/;"	s	file:
pcap_nit	pcap-nit.c	/^struct pcap_nit {$/;"	s	file:
pcap_not_initialized	pcap.c	/^pcap_not_initialized(pcap_t *pcap)$/;"	f	file:
pcap_not_initialized_ptr	pcap.c	/^pcap_not_initialized_ptr(pcap_t *pcap)$/;"	f	file:
pcap_offline_filter	pcap.c	/^pcap_offline_filter(const struct bpf_program *fp, const struct pcap_pkthdr *h,$/;"	f
pcap_offline_read	savefile.c	/^pcap_offline_read(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f
pcap_oid_get_request	pcap.c	/^pcap_oid_get_request(pcap_t *p, bpf_u_int32 oid, void *data, size_t *lenp)$/;"	f
pcap_oid_get_request_dead	pcap.c	/^pcap_oid_get_request_dead(pcap_t *p, bpf_u_int32 oid _U_, void *data _U_,$/;"	f	file:
pcap_oid_get_request_win32	pcap-win32.c	/^pcap_oid_get_request_win32(pcap_t *p, bpf_u_int32 oid, void *data, size_t *lenp)$/;"	f	file:
pcap_oid_set_request	pcap.c	/^pcap_oid_set_request(pcap_t *p, bpf_u_int32 oid, const void *data, size_t *lenp)$/;"	f
pcap_oid_set_request_dead	pcap.c	/^pcap_oid_set_request_dead(pcap_t *p, bpf_u_int32 oid _U_, const void *data _U_,$/;"	f	file:
pcap_oid_set_request_win32	pcap-win32.c	/^pcap_oid_set_request_win32(pcap_t *p, bpf_u_int32 oid, const void *data,$/;"	f	file:
pcap_oneshot	pcap.c	/^pcap_oneshot(u_char *user, const struct pcap_pkthdr *h, const u_char *pkt)$/;"	f
pcap_oneshot_mmap	pcap-linux.c	/^pcap_oneshot_mmap(u_char *user, const struct pcap_pkthdr *h,$/;"	f	file:
pcap_open	pcap-new.c	/^pcap_t *pcap_open(const char *source, int snaplen, int flags, int read_timeout, struct pcap_rmtauth *auth, char *errbuf)$/;"	f
pcap_open_dead	pcap.c	/^pcap_open_dead(int linktype, int snaplen)$/;"	f
pcap_open_dead_with_tstamp_precision	pcap.c	/^pcap_open_dead_with_tstamp_precision(int linktype, int snaplen, u_int precision)$/;"	f
pcap_open_live	pcap.c	/^pcap_open_live(const char *device, int snaplen, int promisc, int to_ms, char *errbuf)$/;"	f
pcap_open_offline	savefile.c	/^pcap_open_offline(const char *fname, char *errbuf)$/;"	f
pcap_open_offline_common	pcap.c	/^pcap_open_offline_common(char *ebuf, size_t size)$/;"	f
pcap_open_offline_with_tstamp_precision	savefile.c	/^pcap_open_offline_with_tstamp_precision(const char *fname, u_int precision,$/;"	f
pcap_opensource_remote	pcap-rpcap.c	/^int pcap_opensource_remote(pcap_t *fp, struct pcap_rmtauth *auth)$/;"	f
pcap_opt	pcap-int.h	/^struct pcap_opt {$/;"	s
pcap_optimizer_debug	optimize.c	/^int pcap_optimizer_debug;$/;"	v
pcap_pack_bpffilter	pcap-rpcap.c	/^static int pcap_pack_bpffilter(pcap_t *fp, char *sendbuf, int *sendbufidx, struct bpf_program *prog)$/;"	f	file:
pcap_parsesrcstr	pcap-new.c	/^int pcap_parsesrcstr(const char *source, int *type, char *host, char *port, char *name, char *errbuf)$/;"	f
pcap_perror	pcap.c	/^pcap_perror(pcap_t *p, const char *prefix)$/;"	f
pcap_pf	pcap-pf.c	/^struct pcap_pf {$/;"	s	file:
pcap_pkt_debug	pcap-dos.c	/^int pcap_pkt_debug = -1;$/;"	v
pcap_pkthdr	pcap/pcap.h	/^struct pcap_pkthdr {$/;"	s
pcap_platform_finddevs	pcap-bpf.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-dag.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-dlpi.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-dos.c	/^int pcap_platform_finddevs  (pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-libdlpi.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-linux.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-nit.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-null.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-pf.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-septel.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-sita.c	/^int pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf) {$/;"	f
pcap_platform_finddevs	pcap-snf.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-snit.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-snoop.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_platform_finddevs	pcap-win32.c	/^pcap_platform_finddevs(pcap_if_t **alldevsp, char *errbuf)$/;"	f
pcap_process_mactype	dlpisubs.c	/^pcap_process_mactype(pcap_t *p, u_int mactype)$/;"	f
pcap_process_pkts	dlpisubs.c	/^pcap_process_pkts(pcap_t *p, pcap_handler callback, u_char *user,$/;"	f
pcap_read_acn	pcap-sita.c	/^static int pcap_read_acn(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user) {$/;"	f	file:
pcap_read_bpf	pcap-bpf.c	/^pcap_read_bpf(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_dlpi	pcap-dlpi.c	/^pcap_read_dlpi(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_dos	pcap-dos.c	/^pcap_read_dos (pcap_t *p, int cnt, pcap_handler callback, u_char *data)$/;"	f	file:
pcap_read_libdlpi	pcap-libdlpi.c	/^pcap_read_libdlpi(pcap_t *p, int count, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_linux	pcap-linux.c	/^pcap_read_linux(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_linux_mmap_v1	pcap-linux.c	/^pcap_read_linux_mmap_v1(pcap_t *handle, int max_packets, pcap_handler callback,$/;"	f	file:
pcap_read_linux_mmap_v1_64	pcap-linux.c	/^pcap_read_linux_mmap_v1_64(pcap_t *handle, int max_packets, pcap_handler callback,$/;"	f	file:
pcap_read_linux_mmap_v2	pcap-linux.c	/^pcap_read_linux_mmap_v2(pcap_t *handle, int max_packets, pcap_handler callback,$/;"	f	file:
pcap_read_linux_mmap_v3	pcap-linux.c	/^pcap_read_linux_mmap_v3(pcap_t *handle, int max_packets, pcap_handler callback,$/;"	f	file:
pcap_read_nit	pcap-nit.c	/^pcap_read_nit(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_nocb_remote	pcap-rpcap.c	/^static int pcap_read_nocb_remote(pcap_t *p, struct pcap_pkthdr **pkt_header, u_char **pkt_data)$/;"	f	file:
pcap_read_one	pcap-dos.c	/^pcap_read_one (pcap_t *p, pcap_handler callback, u_char *data)$/;"	f	file:
pcap_read_packet	pcap-linux.c	/^pcap_read_packet(pcap_t *handle, pcap_handler callback, u_char *userdata)$/;"	f	file:
pcap_read_pf	pcap-pf.c	/^pcap_read_pf(pcap_t *pc, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_remote	pcap-rpcap.c	/^static int pcap_read_remote(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_snit	pcap-snit.c	/^pcap_read_snit(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_snoop	pcap-snoop.c	/^pcap_read_snoop(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_win32_dag	pcap-win32.c	/^pcap_read_win32_dag(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_read_win32_npf	pcap-win32.c	/^pcap_read_win32_npf(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
pcap_recv_hook	pcap-dos.c	/^static void *pcap_recv_hook (WORD *type)$/;"	f	file:
pcap_remoteact_accept	pcap-new.c	/^SOCKET pcap_remoteact_accept(const char *address, const char *port, const char *hostlist, char *connectinghost, struct pcap_rmtauth *auth, char *errbuf)$/;"	f
pcap_remoteact_cleanup	pcap-new.c	/^void pcap_remoteact_cleanup(void)$/;"	f
pcap_remoteact_close	pcap-new.c	/^int pcap_remoteact_close(const char *host, char *errbuf)$/;"	f
pcap_remoteact_list	pcap-new.c	/^int pcap_remoteact_list(char *hostlist, char sep, int size, char *errbuf)$/;"	f
pcap_remove_from_pcaps_to_close	pcap.c	/^pcap_remove_from_pcaps_to_close(pcap_t *p)$/;"	f
pcap_rmtauth	remote-ext.h	/^struct pcap_rmtauth$/;"	s
pcap_samp	remote-ext.h	/^struct pcap_samp$/;"	s
pcap_save	pcap-dos.c	/^static pcap_t pcap_save;$/;"	v	file:
pcap_send_queue	pcap/pcap.h	/^  struct pcap_send_queue$/;"	s
pcap_send_queue	pcap/pcap.h	/^  typedef struct pcap_send_queue pcap_send_queue;$/;"	t	typeref:struct:pcap_send_queue
pcap_sendpacket	pcap.c	/^pcap_sendpacket(pcap_t *p, const u_char *buf, int size)$/;"	f
pcap_sendpacket_dos	pcap-dos.c	/^static int pcap_sendpacket_dos (pcap_t *p, const void *buf, size_t len)$/;"	f	file:
pcap_sendqueue_alloc	pcap.c	/^pcap_sendqueue_alloc(u_int memsize)$/;"	f
pcap_sendqueue_destroy	pcap.c	/^pcap_sendqueue_destroy(pcap_send_queue *queue)$/;"	f
pcap_sendqueue_queue	pcap.c	/^pcap_sendqueue_queue(pcap_send_queue *queue, const struct pcap_pkthdr *pkt_header, const u_char *pkt_data)$/;"	f
pcap_sendqueue_transmit	pcap.c	/^pcap_sendqueue_transmit(pcap_t *p, pcap_send_queue *queue, int sync)$/;"	f
pcap_sendqueue_transmit_dead	pcap.c	/^pcap_sendqueue_transmit_dead(pcap_t *p, pcap_send_queue *queue, int sync)$/;"	f	file:
pcap_sendqueue_transmit_not_initialized	pcap.c	/^pcap_sendqueue_transmit_not_initialized(pcap_t *pcap, pcap_send_queue* queue, int sync)$/;"	f	file:
pcap_sendqueue_transmit_win32	pcap-win32.c	/^pcap_sendqueue_transmit_win32(pcap_t *p, pcap_send_queue *queue, int sync)$/;"	f	file:
pcap_septel	pcap-septel.c	/^struct pcap_septel {$/;"	s	file:
pcap_set_buffer_size	pcap.c	/^pcap_set_buffer_size(pcap_t *p, int buffer_size)$/;"	f
pcap_set_datalink	pcap.c	/^pcap_set_datalink(pcap_t *p, int dlt)$/;"	f
pcap_set_datalink_bpf	pcap-bpf.c	/^pcap_set_datalink_bpf(pcap_t *p, int dlt)$/;"	f	file:
pcap_set_datalink_linux	pcap-linux.c	/^pcap_set_datalink_linux(pcap_t *handle, int dlt)$/;"	f	file:
pcap_set_immediate_mode	pcap.c	/^pcap_set_immediate_mode(pcap_t *p, int immediate)$/;"	f
pcap_set_optimizer_debug	pcap.c	/^pcap_set_optimizer_debug(int value)$/;"	f
pcap_set_parser_debug	pcap.c	/^pcap_set_parser_debug(int value)$/;"	f
pcap_set_promisc	pcap.c	/^pcap_set_promisc(pcap_t *p, int promisc)$/;"	f
pcap_set_rfmon	pcap.c	/^pcap_set_rfmon(pcap_t *p, int rfmon)$/;"	f
pcap_set_snaplen	pcap.c	/^pcap_set_snaplen(pcap_t *p, int snaplen)$/;"	f
pcap_set_timeout	pcap.c	/^pcap_set_timeout(pcap_t *p, int timeout_ms)$/;"	f
pcap_set_tstamp_precision	pcap.c	/^pcap_set_tstamp_precision(pcap_t *p, int tstamp_precision)$/;"	f
pcap_set_tstamp_type	pcap.c	/^pcap_set_tstamp_type(pcap_t *p, int tstamp_type)$/;"	f
pcap_set_wait	pcap-dos.c	/^void pcap_set_wait (pcap_t *p, void (*yield)(void), int wait)$/;"	f
pcap_setbuff	pcap.c	/^pcap_setbuff(pcap_t *p, int dim)$/;"	f
pcap_setbuff_dead	pcap.c	/^pcap_setbuff_dead(pcap_t *p, int dim)$/;"	f	file:
pcap_setbuff_win32	pcap-win32.c	/^pcap_setbuff_win32(pcap_t *p, int dim)$/;"	f	file:
pcap_setdirection	pcap.c	/^pcap_setdirection(pcap_t *p, pcap_direction_t d)$/;"	f
pcap_setdirection_acn	pcap-sita.c	/^static int pcap_setdirection_acn(pcap_t *handle, pcap_direction_t d) {$/;"	f	file:
pcap_setdirection_bpf	pcap-bpf.c	/^pcap_setdirection_bpf(pcap_t *p, pcap_direction_t d)$/;"	f	file:
pcap_setdirection_linux	pcap-linux.c	/^pcap_setdirection_linux(pcap_t *handle, pcap_direction_t d)$/;"	f	file:
pcap_setfilter	pcap.c	/^pcap_setfilter(pcap_t *p, struct bpf_program *fp)$/;"	f
pcap_setfilter_acn	pcap-sita.c	/^static int pcap_setfilter_acn(pcap_t *handle, struct bpf_program *bpf) {$/;"	f	file:
pcap_setfilter_bpf	pcap-bpf.c	/^pcap_setfilter_bpf(pcap_t *p, struct bpf_program *fp)$/;"	f	file:
pcap_setfilter_dos	pcap-dos.c	/^static int pcap_setfilter_dos (pcap_t *p, struct bpf_program *fp)$/;"	f	file:
pcap_setfilter_linux	pcap-linux.c	/^pcap_setfilter_linux(pcap_t *handle, struct bpf_program *filter)$/;"	f	file:
pcap_setfilter_linux_common	pcap-linux.c	/^pcap_setfilter_linux_common(pcap_t *handle, struct bpf_program *filter,$/;"	f	file:
pcap_setfilter_linux_mmap	pcap-linux.c	/^pcap_setfilter_linux_mmap(pcap_t *handle, struct bpf_program *filter)$/;"	f	file:
pcap_setfilter_pf	pcap-pf.c	/^pcap_setfilter_pf(pcap_t *p, struct bpf_program *fp)$/;"	f	file:
pcap_setfilter_remote	pcap-rpcap.c	/^static int pcap_setfilter_remote(pcap_t *fp, struct bpf_program *prog)$/;"	f	file:
pcap_setfilter_win32_dag	pcap-win32.c	/^pcap_setfilter_win32_dag(pcap_t *p, struct bpf_program *fp) {$/;"	f	file:
pcap_setfilter_win32_npf	pcap-win32.c	/^pcap_setfilter_win32_npf(pcap_t *p, struct bpf_program *fp)$/;"	f	file:
pcap_setmintocopy	pcap.c	/^pcap_setmintocopy(pcap_t *p, int size)$/;"	f
pcap_setmintocopy_dead	pcap.c	/^pcap_setmintocopy_dead(pcap_t *p, int size)$/;"	f	file:
pcap_setmintocopy_win32	pcap-win32.c	/^pcap_setmintocopy_win32(pcap_t *p, int size)$/;"	f	file:
pcap_setmode	pcap.c	/^pcap_setmode(pcap_t *p, int mode)$/;"	f
pcap_setmode_dead	pcap.c	/^pcap_setmode_dead(pcap_t *p, int mode)$/;"	f	file:
pcap_setmode_win32	pcap-win32.c	/^pcap_setmode_win32(pcap_t *p, int mode)$/;"	f	file:
pcap_setnonblock	pcap.c	/^pcap_setnonblock(pcap_t *p, int nonblock, char *errbuf)$/;"	f
pcap_setnonblock_bpf	pcap-bpf.c	/^pcap_setnonblock_bpf(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
pcap_setnonblock_fd	pcap.c	/^pcap_setnonblock_fd(pcap_t *p, int nonblock, char *errbuf)$/;"	f
pcap_setnonblock_mmap	pcap-linux.c	/^pcap_setnonblock_mmap(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
pcap_setnonblock_win32	pcap-win32.c	/^pcap_setnonblock_win32(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
pcap_setsampling	pcap-new.c	/^struct pcap_samp *pcap_setsampling(pcap_t *p)$/;"	f
pcap_setsampling_remote	pcap-rpcap.c	/^static int pcap_setsampling_remote(pcap_t *p)$/;"	f	file:
pcap_setup_dump	sf-pcap.c	/^pcap_setup_dump(pcap_t *p, int linktype, FILE *f, const char *fname)$/;"	f	file:
pcap_setuserbuffer	pcap.c	/^pcap_setuserbuffer(pcap_t *p, int size)$/;"	f
pcap_setuserbuffer_dead	pcap.c	/^pcap_setuserbuffer_dead(pcap_t *p, int size)$/;"	f	file:
pcap_setuserbuffer_win32	pcap-win32.c	/^pcap_setuserbuffer_win32(pcap_t *p, int size)$/;"	f	file:
pcap_sf	sf-pcap.c	/^struct pcap_sf {$/;"	s	file:
pcap_sf_patched_pkthdr	pcap-int.h	/^struct pcap_sf_patched_pkthdr {$/;"	s
pcap_sf_pkthdr	pcap-int.h	/^struct pcap_sf_pkthdr {$/;"	s
pcap_snapshot	pcap.c	/^pcap_snapshot(pcap_t *p)$/;"	f
pcap_snf	pcap-snf.c	/^struct pcap_snf {$/;"	s	file:
pcap_snit	pcap-snit.c	/^struct pcap_snit {$/;"	s	file:
pcap_snoop	pcap-snoop.c	/^struct pcap_snoop {$/;"	s	file:
pcap_snprintf	missing/snprintf.c	/^pcap_snprintf (char *str, size_t sz, const char *format, ...)$/;"	f
pcap_snprintf	missing/win_snprintf.c	/^pcap_snprintf(char *str, size_t str_size, const char *format, ...)$/;"	f
pcap_snprintf	portability.h	130;"	d
pcap_startcapture_remote	pcap-rpcap.c	/^int pcap_startcapture_remote(pcap_t *fp)$/;"	f
pcap_stat	pcap/pcap.h	/^struct pcap_stat {$/;"	s
pcap_stat_ex	pcap/pcap.h	/^struct pcap_stat_ex {$/;"	s
pcap_stats	pcap.c	/^pcap_stats(pcap_t *p, struct pcap_stat *ps)$/;"	f
pcap_stats_acn	pcap-sita.c	/^static int pcap_stats_acn(pcap_t *handle, struct pcap_stat *ps) {$/;"	f	file:
pcap_stats_bpf	pcap-bpf.c	/^pcap_stats_bpf(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_dead	pcap.c	/^pcap_stats_dead(pcap_t *p, struct pcap_stat *ps _U_)$/;"	f	file:
pcap_stats_dlpi	dlpisubs.c	/^pcap_stats_dlpi(pcap_t *p, struct pcap_stat *ps)$/;"	f
pcap_stats_dos	pcap-dos.c	/^static int pcap_stats_dos (pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_ex	pcap-dos.c	/^int pcap_stats_ex (pcap_t *p, struct pcap_stat_ex *se)$/;"	f
pcap_stats_ex	pcap.c	/^pcap_stats_ex(pcap_t *p, int *pcap_stat_size)$/;"	f
pcap_stats_ex_remote	pcap-rpcap.c	/^static struct pcap_stat *pcap_stats_ex_remote(pcap_t *p, int *pcap_stat_size)$/;"	f	file:
pcap_stats_ex_win32	pcap-win32.c	/^pcap_stats_ex_win32(pcap_t *p, int *pcap_stat_size)$/;"	f
pcap_stats_linux	pcap-linux.c	/^pcap_stats_linux(pcap_t *handle, struct pcap_stat *stats)$/;"	f	file:
pcap_stats_nit	pcap-nit.c	/^pcap_stats_nit(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_pf	pcap-pf.c	/^pcap_stats_pf(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_remote	pcap-rpcap.c	/^static int pcap_stats_remote(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_snit	pcap-snit.c	/^pcap_stats_snit(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_snoop	pcap-snoop.c	/^pcap_stats_snoop(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_stats_win32	pcap-win32.c	/^pcap_stats_win32(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
pcap_statustostr	pcap.c	/^pcap_statustostr(int errnum)$/;"	f
pcap_stdinc_h	pcap-stdinc.h	61;"	d
pcap_strcasecmp	pcap.c	/^pcap_strcasecmp(const char *s1, const char *s2)$/;"	f
pcap_stream_err	dlpisubs.c	/^pcap_stream_err(const char *func, int err, char *errbuf)$/;"	f	file:
pcap_strerror	pcap.c	/^pcap_strerror(int errnum)$/;"	f
pcap_strtok_r	missing/strtok_r.c	/^pcap_strtok_r(char *s, const char *delim, char **last)$/;"	f
pcap_strtok_r	portability.h	146;"	d
pcap_strtok_r	portability.h	152;"	d
pcap_t	pcap/pcap.h	/^typedef struct pcap pcap_t;$/;"	t	typeref:struct:pcap
pcap_tc	pcap-tc.c	/^struct pcap_tc {$/;"	s	file:
pcap_timeval	pcap-int.h	/^struct pcap_timeval {$/;"	s
pcap_tstamp_type_name_to_val	pcap.c	/^pcap_tstamp_type_name_to_val(const char *name)$/;"	f
pcap_tstamp_type_val_to_description	pcap.c	/^pcap_tstamp_type_val_to_description(int tstamp_type)$/;"	f
pcap_tstamp_type_val_to_name	pcap.c	/^pcap_tstamp_type_val_to_name(int tstamp_type)$/;"	f
pcap_tstamp_val	pcap-linux.c	/^	int pcap_tstamp_val;$/;"	m	struct:__anon8	file:
pcap_updatefilter_remote	pcap-rpcap.c	/^static int pcap_updatefilter_remote(pcap_t *fp, struct bpf_program *prog)$/;"	f	file:
pcap_usb_header	pcap/usb.h	/^} pcap_usb_header;$/;"	t	typeref:struct:_usb_header
pcap_usb_header_mmapped	pcap/usb.h	/^} pcap_usb_header_mmapped;$/;"	t	typeref:struct:_usb_header_mmapped
pcap_usb_linux	pcap-usb-linux.c	/^struct pcap_usb_linux {$/;"	s	file:
pcap_usb_setup	pcap/usb.h	/^} pcap_usb_setup;$/;"	t	typeref:struct:_usb_setup
pcap_version_string_fmt	pcap.c	/^static const char pcap_version_string_fmt[] =$/;"	v	file:
pcap_version_string_packet_dll_fmt	pcap.c	/^static const char pcap_version_string_packet_dll_fmt[] =$/;"	v	file:
pcap_vsnprintf	missing/snprintf.c	/^pcap_vsnprintf (char *str, size_t sz, const char *format, va_list args)$/;"	f
pcap_vsnprintf	missing/win_snprintf.c	/^pcap_vsnprintf(char *str, size_t str_size, const char *format, va_list args)$/;"	f
pcap_vsnprintf	portability.h	140;"	d
pcap_wait_for_frames_mmap	pcap-linux.c	/^static int pcap_wait_for_frames_mmap(pcap_t *handle)$/;"	f	file:
pcap_win	pcap-new.c	/^struct pcap_win {$/;"	s	file:
pcap_win	pcap-rpcap.c	/^struct pcap_win {$/;"	s	file:
pcap_win	pcap-win32.c	/^struct pcap_win {$/;"	s	file:
pcap_win32_err_to_str	pcap.c	/^pcap_win32_err_to_str(DWORD error, char *errbuf)$/;"	f
pcap_wsockinit	pcap-win32.c	/^pcap_wsockinit(void)$/;"	f
pcap_xmit_hook	pcap-dos.c	/^static int pcap_xmit_hook (const void *buf, unsigned len)$/;"	f	file:
pcaps_to_close	pcap.c	/^static struct pcap *pcaps_to_close;$/;"	v	typeref:struct:pcap	file:
pd	pcap-int.h	/^	pcap_t *pd;$/;"	m	struct:oneshot_userdata
pd	tests/capturetest.c	/^static pcap_t *pd;$/;"	v	file:
pd	tests/selpolltest.c	/^static pcap_t *pd;$/;"	v	file:
peek_rx_buf	pcap-dos.h	/^         int   (*peek_rx_buf) (BYTE **buf);         \/* rx-non-copy at queue *\/$/;"	m	struct:device
peek_rxbuf	pcap-dos.c	/^int peek_rxbuf (BYTE **buf)$/;"	f
permanentAddress	msdos/ndis2.h	/^        BYTE   permanentAddress[16];$/;"	m	struct:_MacChars
pfvar	grammar.y	/^pfvar:	  PF_IFNAME ID		{ $$ = gen_pf_ifname(cstate, $2); }$/;"	l
pid	grammar.y	/^pid:	  nid$/;"	l
pid	pcap-dag.c	/^	pid_t pid;$/;"	m	struct:pcap_dag_node	file:
pkt	pcap-int.h	/^	const u_char **pkt;$/;"	m	struct:oneshot_userdata
pkt	pcap-int.h	/^	u_char *pkt;$/;"	m	struct:pcap
pktDrop	msdos/pktdrvr.c	102;"	d	file:
pktInfo	msdos/pktdrvr.c	/^PUBLIC PKT_INFO    pktInfo;    \/* packet-driver information *\/$/;"	v
pktStat	msdos/pktdrvr.c	/^PUBLIC PKT_STAT    pktStat;    \/* statistics for packets    *\/$/;"	v
pktTemp	msdos/pktdrvr.c	103;"	d	file:
pktTxBuf	msdos/pktdrvr.c	104;"	d	file:
pkt_close	pcap-dos.c	/^static void pkt_close (struct device *dev)$/;"	f	file:
pkt_dev	pcap-dos.c	/^static struct device pkt_dev = {$/;"	v	typeref:struct:device	file:
pkt_open	pcap-dos.c	/^static int pkt_open (struct device *dev)$/;"	f	file:
pkt_probe	pcap-dos.c	/^static int pkt_probe (struct device *dev)$/;"	f	file:
pkt_stats	pcap-dos.c	/^static void *pkt_stats (struct device *dev)$/;"	f	file:
pkt_type	pcap-int.h	/^    unsigned char pkt_type;$/;"	m	struct:pcap_sf_patched_pkthdr
pkt_xmit	pcap-dos.c	/^static int pkt_xmit (struct device *dev, const void *buf, int len)$/;"	f	file:
pktq_check	pcap-dos.c	/^static int pktq_check (struct rx_ringbuf *q)$/;"	f	file:
pktq_clear	pcap-dos.c	/^static void pktq_clear (struct rx_ringbuf *q)$/;"	f	file:
pktq_in_elem	pcap-dos.c	/^static struct rx_elem *pktq_in_elem (struct rx_ringbuf *q)$/;"	f	file:
pktq_in_index	pcap-dos.c	/^static int pktq_in_index (struct rx_ringbuf *q)$/;"	f	file:
pktq_inc_out	pcap-dos.c	/^static int pktq_inc_out (struct rx_ringbuf *q)$/;"	f	file:
pktq_init	pcap-dos.c	/^static int pktq_init (struct rx_ringbuf *q, int size, int num, char *pool)$/;"	f	file:
pktq_out_elem	pcap-dos.c	/^static struct rx_elem *pktq_out_elem (struct rx_ringbuf *q)$/;"	f	file:
plain_dump	optimize.c	/^plain_dump(compiler_state_t *cstate, struct icode *ic)$/;"	f	file:
plen	pcap-rpcap.h	/^	uint32 plen;						\/* Length of the payload of this RPCAP message *\/$/;"	m	struct:rpcap_header
pllc	grammar.y	/^pllc:	LLC			{ $$ = gen_llc(cstate); }$/;"	l
plus_flag	missing/snprintf.c	/^    plus_flag      =  2,$/;"	e	enum:format_flags	file:
pname	grammar.y	/^pname:	  LINK			{ $$ = Q_LINK; }$/;"	l
pnum	grammar.y	/^pnum:	  NUM$/;"	l
pointer1	msdos/ndis2.h	/^        BYTE FAR *pointer1;$/;"	m	struct:_ReqBlock
pointer2	msdos/ndis2.h	/^        BYTE FAR *pointer2;$/;"	m	struct:_ReqBlock
poll_timeout	pcap-linux.c	/^	int	poll_timeout;	\/* timeout to use in poll() *\/$/;"	m	struct:pcap_linux	file:
pop	msdos/ndis_0.asm	/^     pop  di                 ;; Pop off the old stack$/;"	d
pop	msdos/ndis_0.asm	/^     pop  ds$/;"	d
pop	msdos/pkt_rx0.asm	/^         pop ds$/;"	d
pop	msdos/pkt_rx1.s	/^         pop ds$/;"	d
portability_h	portability.h	35;"	d
portdata	pcap-rpcap.h	/^	uint16 portdata;					\/* Network port on which the client is waiting at (if 'serveropen') *\/$/;"	m	struct:rpcap_startcapreq
portdata	pcap-rpcap.h	/^	uint16 portdata;					\/* Network port on which the server is waiting at (passive mode only) *\/$/;"	m	struct:rpcap_startcapreply
postEOIintr	msdos/pktdrvr.h	/^        WORD  postEOIintr;  \/*                  Usage ??         *\/$/;"	m	struct:__anon17
pqual	grammar.y	/^pqual:	  pname$/;"	l
pred	gencode.h	/^	struct block *pred;$/;"	m	struct:edge	typeref:struct:edge::block
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prepare_tpacket_socket	pcap-linux.c	/^prepare_tpacket_socket(pcap_t *handle)$/;"	f	file:
prevLink	msdos/ndis2.h	/^	struct _PktBuf *prevLink;$/;"	m	struct:_PktBuf	typeref:struct:_PktBuf::_PktBuf
prev_post_hook	pcap-dos.c	/^static void (*prev_post_hook) (void);$/;"	v	file:
prevlinktype	gencode.c	/^	int prevlinktype;$/;"	m	struct:_compiler_state	file:
print_version_string	gen_version_header.sh	/^print_version_string()$/;"	f
priv	pcap-dos.h	/^         void  *priv;           \/* private data *\/$/;"	m	struct:device
priv	pcap-int.h	/^	void *priv;		\/* private data for methods *\/$/;"	m	struct:pcap
probe	pcap-dos.h	/^         int   (*probe)(struct device *dev);$/;"	m	struct:device
probe_devices	pcap-usb-linux.c	/^probe_devices(int bus)$/;"	f	file:
probed_dev	pcap-dos.c	/^struct device       *probed_dev = NULL;      \/* the device we have probed *\/$/;"	v	typeref:struct:device
proc_dropped	pcap-linux.c	/^	long	proc_dropped;	\/* packets reported dropped by \/proc\/net\/dev *\/$/;"	m	struct:pcap_linux	file:
process_client_data	pcap-sita.c	/^static int process_client_data (char *errbuf) {								\/* returns: -1 = error, 0 = OK *\/$/;"	f	file:
process_idb_options	sf-pcap-ng.c	/^process_idb_options(pcap_t *p, struct block_cursor *cursor, u_int *tsresol,$/;"	f	file:
prog	grammar.y	/^prog:	  null expr$/;"	l
program_name	tests/can_set_rfmon_test.c	/^static const char *program_name;$/;"	v	file:
program_name	tests/capturetest.c	/^static char *program_name;$/;"	v	file:
program_name	tests/filtertest.c	/^static char *program_name;$/;"	v	file:
program_name	tests/opentest.c	/^static char *program_name;$/;"	v	file:
program_name	tests/selpolltest.c	/^char *program_name;$/;"	v
program_name	tests/valgrindtest.c	/^static char *program_name;$/;"	v	file:
promisc	pcap-int.h	/^	int	promisc;$/;"	m	struct:pcap_opt
propedom	optimize.c	/^propedom(opt_state_t *opt_state, struct edge *ep)$/;"	f	file:
protBase	msdos/pktdrvr.c	/^  LOCAL FARPTR          protBase;$/;"	v
protChars	msdos/ndis2.c	/^static struct _ProtocolChars  protChars;$/;"	v	typeref:struct:_ProtocolChars	file:
protManDS	msdos/ndis2.c	/^static WORD    protManDS    = 0;$/;"	v	file:
protManEntry	msdos/ndis2.c	/^static ProtMan protManEntry = NULL;$/;"	v	file:
proto	gencode.h	/^	unsigned char proto;$/;"	m	struct:qual
proto	msdos/pktdrvr.h	/^        WORD  proto;              \/* protocol number           *\/$/;"	m	struct:__anon20
proto	msdos/pktdrvr.h	/^        WORD  proto;$/;"	m	struct:__anon19
protocol	msdos/pkt_rx0.asm	/^   protocol    dw  0                          ; packet protocol number$/;"	d
protocol	pcap-int.h	/^    unsigned short protocol;$/;"	m	struct:pcap_sf_patched_pkthdr
protocolId	msdos/ndis2.h	/^        BYTE protocolId[5];$/;"	m	struct:_Ieee802Dot2SnapHeader
protocolLevelLower	msdos/ndis2.h	/^        BYTE  protocolLevelLower;$/;"	m	struct:_CommonChars
protocolLevelUpper	msdos/ndis2.h	/^        BYTE  protocolLevelUpper;$/;"	m	struct:_CommonChars
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
ps_capt	pcap/pcap.h	/^	u_int ps_capt;		\/* number of packets that reach the application *\/$/;"	m	struct:pcap_stat
ps_drop	pcap/pcap.h	/^	u_int ps_drop;		\/* number of packets dropped *\/$/;"	m	struct:pcap_stat
ps_ifdrop	pcap/pcap.h	/^	u_int ps_ifdrop;	\/* drops by interface -- only supported on some platforms *\/$/;"	m	struct:pcap_stat
ps_netdrop	pcap/pcap.h	/^	u_int ps_netdrop;	\/* number of packets lost on the network *\/$/;"	m	struct:pcap_stat
ps_recv	pcap/pcap.h	/^	u_int ps_recv;		\/* number of packets received *\/$/;"	m	struct:pcap_stat
ps_sent	pcap/pcap.h	/^	u_int ps_sent;		\/* number of packets sent by the server on the network *\/$/;"	m	struct:pcap_stat
push	msdos/ndis_0.asm	/^     push ds$/;"	d
push	msdos/pkt_rx0.asm	/^         push ds$/;"	d
push	msdos/pkt_rx1.s	/^         push ds$/;"	d
qid	grammar.y	/^qid:	  pnum			{ $$.b = gen_ncode(cstate, NULL, (bpf_u_int32)$1,$/;"	l
qual	gencode.h	/^struct qual {$/;"	s
queued	pcap-usb-linux.c	/^	u_int32_t queued;$/;"	m	struct:mon_bin_stats	file:
quiet	msdos/pktdrvr.h	/^        BOOL  quiet;        \/* (don't) print errors to stdout    *\/$/;"	m	struct:__anon17
r_ax	msdos/pktdrvr.c	/^         DWORD  r_ax;$/;"	m	struct:DPMI_regs	file:
r_ax	msdos/pktdrvr.c	/^         WORD r_ax, r_bx, r_cx, r_dx, r_bp;$/;"	m	struct:__anon22	file:
r_ax	msdos/pktdrvr.c	139;"	d	file:
r_ax	msdos/pktdrvr.c	161;"	d	file:
r_bp	msdos/pktdrvr.c	/^         DWORD  r_bp;$/;"	m	struct:DPMI_regs	file:
r_bp	msdos/pktdrvr.c	/^         WORD r_ax, r_bx, r_cx, r_dx, r_bp;$/;"	m	struct:__anon22	file:
r_bx	msdos/pktdrvr.c	/^         DWORD  r_bx;$/;"	m	struct:DPMI_regs	file:
r_bx	msdos/pktdrvr.c	/^         WORD r_ax, r_bx, r_cx, r_dx, r_bp;$/;"	m	struct:__anon22	file:
r_bx	msdos/pktdrvr.c	140;"	d	file:
r_bx	msdos/pktdrvr.c	162;"	d	file:
r_cs	msdos/pktdrvr.c	/^         WORD   r_ip, r_cs, r_sp, r_ss;$/;"	m	struct:DPMI_regs	file:
r_cx	msdos/pktdrvr.c	/^         DWORD  r_cx;$/;"	m	struct:DPMI_regs	file:
r_cx	msdos/pktdrvr.c	/^         WORD r_ax, r_bx, r_cx, r_dx, r_bp;$/;"	m	struct:__anon22	file:
r_cx	msdos/pktdrvr.c	142;"	d	file:
r_cx	msdos/pktdrvr.c	164;"	d	file:
r_di	msdos/pktdrvr.c	/^         DWORD  r_di;$/;"	m	struct:DPMI_regs	file:
r_di	msdos/pktdrvr.c	/^         WORD r_si, r_di, r_ds, r_es, r_flags;$/;"	m	struct:__anon22	file:
r_di	msdos/pktdrvr.c	144;"	d	file:
r_di	msdos/pktdrvr.c	166;"	d	file:
r_ds	msdos/pktdrvr.c	/^         WORD   r_es, r_ds, r_fs, r_gs;$/;"	m	struct:DPMI_regs	file:
r_ds	msdos/pktdrvr.c	/^         WORD r_si, r_di, r_ds, r_es, r_flags;$/;"	m	struct:__anon22	file:
r_ds	msdos/pktdrvr.c	145;"	d	file:
r_ds	msdos/pktdrvr.c	167;"	d	file:
r_dx	msdos/pktdrvr.c	/^         DWORD  r_dx;$/;"	m	struct:DPMI_regs	file:
r_dx	msdos/pktdrvr.c	/^         WORD r_ax, r_bx, r_cx, r_dx, r_bp;$/;"	m	struct:__anon22	file:
r_dx	msdos/pktdrvr.c	141;"	d	file:
r_dx	msdos/pktdrvr.c	163;"	d	file:
r_es	msdos/pktdrvr.c	/^         WORD   r_es, r_ds, r_fs, r_gs;$/;"	m	struct:DPMI_regs	file:
r_es	msdos/pktdrvr.c	/^         WORD r_si, r_di, r_ds, r_es, r_flags;$/;"	m	struct:__anon22	file:
r_es	msdos/pktdrvr.c	146;"	d	file:
r_es	msdos/pktdrvr.c	168;"	d	file:
r_flags	msdos/pktdrvr.c	/^         WORD   r_flags;$/;"	m	struct:DPMI_regs	file:
r_flags	msdos/pktdrvr.c	/^         WORD r_si, r_di, r_ds, r_es, r_flags;$/;"	m	struct:__anon22	file:
r_fs	msdos/pktdrvr.c	/^         WORD   r_es, r_ds, r_fs, r_gs;$/;"	m	struct:DPMI_regs	file:
r_gs	msdos/pktdrvr.c	/^         WORD   r_es, r_ds, r_fs, r_gs;$/;"	m	struct:DPMI_regs	file:
r_ip	msdos/pktdrvr.c	/^         WORD   r_ip, r_cs, r_sp, r_ss;$/;"	m	struct:DPMI_regs	file:
r_si	msdos/pktdrvr.c	/^         DWORD  r_si;$/;"	m	struct:DPMI_regs	file:
r_si	msdos/pktdrvr.c	/^         WORD r_si, r_di, r_ds, r_es, r_flags;$/;"	m	struct:__anon22	file:
r_si	msdos/pktdrvr.c	143;"	d	file:
r_si	msdos/pktdrvr.c	165;"	d	file:
r_sp	msdos/pktdrvr.c	/^         WORD   r_ip, r_cs, r_sp, r_ss;$/;"	m	struct:DPMI_regs	file:
r_ss	msdos/pktdrvr.c	/^         WORD   r_ip, r_cs, r_sp, r_ss;$/;"	m	struct:DPMI_regs	file:
raw	pcap-linux.c	/^	void				*raw;$/;"	m	union:thdr	file:
rcvrBuffers	msdos/pktdrvr.h	/^        WORD  rcvrBuffers;  \/* valid for                         *\/$/;"	m	struct:__anon17
read_block	sf-pcap-ng.c	/^read_block(FILE *fp, pcap_t *p, struct block_cursor *cursor, char *errbuf)$/;"	f	file:
read_bytes	sf-pcap-ng.c	/^read_bytes(FILE *fp, void *buf, size_t bytes_to_read, int fail_on_eof,$/;"	f	file:
read_client_data	pcap-sita.c	/^static int read_client_data (int fd) {$/;"	f	file:
read_client_nbytes	pcap-sita.c	/^static int read_client_nbytes(int fd, int count, unsigned char *buf) {$/;"	f	file:
read_infile	tests/filtertest.c	/^read_infile(char *fname)$/;"	f	file:
read_infile	tests/valgrindtest.c	/^read_infile(char *fname)$/;"	f	file:
read_op	pcap-int.h	/^	read_op_t read_op;$/;"	m	struct:pcap
read_op_t	pcap-int.h	/^typedef int	(*read_op_t)(pcap_t *, int cnt, pcap_handler, u_char *);$/;"	t
read_timeout	pcap-rpcap.h	/^	uint32 read_timeout;				\/* Read timeout in milliseconds *\/$/;"	m	struct:rpcap_startcapreq
readfds	pcap-sita.c	/^static fd_set		readfds;				\/* a place to store the file descriptors for the connections to the IOPs *\/$/;"	v	file:
readloop	pcap-enet.c	/^readloop(int cnt, int if_fd, struct bpf_program *fp, printfunc printit)$/;"	f
realBase	msdos/pktdrvr.c	/^  LOCAL DWORD               realBase;$/;"	v
realBase	msdos/pktdrvr.c	/^  LOCAL REALPTR         realBase;$/;"	v
realBase	msdos/pktdrvr.c	/^  static DWORD              realBase;$/;"	v	file:
realSeg	msdos/pktdrvr.c	/^  LOCAL WORD            realSeg;   \/* DOS para-address of allocated area *\/$/;"	v
real_stub_array	msdos/pktdrvr.c	/^  static BYTE real_stub_array [] = {$/;"	v	file:
reason	grammar.y	/^reason:	  NUM			{ $$ = $1; }$/;"	l
receiveChain	msdos/ndis2.h	/^        void  (*receiveChain) (void);$/;"	m	struct:_ProtDispatch
receiveChainGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (receiveChainGlue);$/;"	v
receiveLookahead	msdos/ndis2.h	/^        void  (*receiveLookahead) (void);$/;"	m	struct:_ProtDispatch
receiveLookaheadGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (receiveLookaheadGlue);$/;"	v
receiveMode	msdos/pktdrvr.c	/^PUBLIC PKT_RX_MODE receiveMode  = PDRX_DIRECT;$/;"	v
receiveRelease	msdos/ndis2.h	/^        ReceiveRelease    receiveRelease;$/;"	m	struct:_MacUpperDispatch
recv_ack	pcap-dlpi.c	/^recv_ack(int fd, int size, const char *what, char *bufp, char *ebuf, int *uerror)$/;"	f	file:
ref_count	pcap-dos.c	/^static int ref_count = 0;$/;"	v	file:
reg	gencode.c	/^	int	reg;$/;"	m	struct:__anon6	file:
reg	msdos/pktdrvr.c	/^       } reg;$/;"	v	typeref:struct:__anon22	file:
reg	msdos/pktdrvr.c	/^  LOCAL SWI_REGS        reg;$/;"	v
reg	msdos/pktdrvr.c	/^  LOCAL struct DPMI_regs    reg;$/;"	v	typeref:struct:DPMI_regs
reg	msdos/pktdrvr.c	/^  static __dpmi_regs        reg;$/;"	v	file:
regno	gencode.h	/^	int regno;		\/* virtual register number of result *\/$/;"	m	struct:arth
regused	gencode.c	/^	int regused[BPF_MEMWORDS];$/;"	m	struct:_compiler_state	file:
release_rx_buf	pcap-dos.h	/^         int   (*release_rx_buf) (BYTE *buf);       \/* release after peek *\/$/;"	m	struct:device
release_rxbuf	pcap-dos.c	/^int release_rxbuf (BYTE *buf)$/;"	f
relop	grammar.y	/^relop:	  '>'			{ $$ = BPF_JGT; }$/;"	l
remove_802_11	pcap-bpf.c	/^remove_802_11(pcap_t *p)$/;"	f	file:
remove_en	pcap-bpf.c	/^remove_en(pcap_t *p)$/;"	f	file:
request	msdos/ndis2.h	/^        Request           request;$/;"	m	struct:_MacUpperDispatch
requestConfirm	msdos/ndis2.h	/^        void  (*requestConfirm) (void);$/;"	m	struct:_ProtDispatch
requestConfirmGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (requestConfirmGlue);$/;"	v
reserve	missing/snprintf.c	/^  int (*reserve)(struct state *, size_t);$/;"	m	struct:state	file:
reserved	msdos/pktdrvr.c	/^         DWORD  reserved;$/;"	m	struct:DPMI_regs	file:
reserved	sf-pcap-ng.c	/^	u_short		reserved;$/;"	m	struct:interface_description_block	file:
reserved1	msdos/ndis2.h	/^        WORD  reserved1;$/;"	m	struct:_CommonChars
reserved1	pcap/can_socketcan.h	/^	u_int8_t reserved1;$/;"	m	struct:__anon33
reserved2	msdos/ndis2.h	/^        BYTE *reserved2;            \/* Must be NULL *\/$/;"	m	struct:_CommonChars
reserved2	pcap/can_socketcan.h	/^	u_int8_t reserved2;$/;"	m	struct:__anon33
reserved3	msdos/ndis2.h	/^        BYTE *reserved3;            \/* Must be NULL *\/$/;"	m	struct:_CommonChars
resetStat	msdos/pktdrvr.c	/^static BOOL     resetStat = FALSE;   \/* statistics reset ? *\/$/;"	v	file:
reset_kernel_filter	pcap-linux.c	/^reset_kernel_filter(pcap_t *handle)$/;"	f	file:
rfile	pcap-int.h	/^	FILE *rfile;		\/* null if live capture, non-null if savefile *\/$/;"	m	struct:pcap
rfmon	pcap-int.h	/^	int	rfmon;		\/* monitor mode *\/$/;"	m	struct:pcap_opt
rfmon_selfstart	pcap-new.c	/^	int rfmon_selfstart;		\/* a flag tells whether the monitor mode is set by itself *\/$/;"	m	struct:pcap_win	file:
rfmon_selfstart	pcap-rpcap.c	/^	int rfmon_selfstart;		\/* a flag tells whether the monitor mode is set by itself *\/$/;"	m	struct:pcap_win	file:
rfmon_selfstart	pcap-win32.c	/^	int rfmon_selfstart;		\/* a flag tells whether the monitor mode is set by itself *\/$/;"	m	struct:pcap_win	file:
rm_base_seg	msdos/pktdrvr.c	/^  LOCAL WORD                rm_base_seg, rm_base_sel;$/;"	v
rm_base_sel	msdos/pktdrvr.c	/^  LOCAL WORD                rm_base_seg, rm_base_sel;$/;"	v
rm_mem	msdos/pktdrvr.c	/^  static _go32_dpmi_seginfo rm_mem;$/;"	v	file:
rmem_end	pcap-dos.h	/^         DWORD  rmem_end;       \/* shared "recv" end        *\/$/;"	m	struct:device
rmem_start	pcap-dos.h	/^         DWORD  rmem_start;     \/* shmem "recv" start       *\/$/;"	m	struct:device
rmt_capstarted	pcap-rpcap.h	/^	int rmt_capstarted;			\/\/!< 'true' if the capture is already started (needed to knoe if we have to call the pcap_startcapture()$/;"	m	struct:pcap_md
rmt_clientside	pcap-rpcap.h	/^	int rmt_clientside;$/;"	m	struct:pcap_md
rmt_flags	pcap-rpcap.h	/^	int rmt_flags;				\/\/!< we have to save flags, since they are passed by the pcap_open_live(), but they are used by the pcap_startcapture()$/;"	m	struct:pcap_md
rmt_samp	pcap-rpcap.h	/^	struct pcap_samp rmt_samp;	\/\/!< Keeps the parameters related to the sampling process.$/;"	m	struct:pcap_md	typeref:struct:pcap_md::pcap_samp
rmt_sockctrl	pcap-rpcap.h	/^	SOCKET rmt_sockctrl;		\/\/!< socket ID of the socket used for the control connection$/;"	m	struct:pcap_md
rmt_sockdata	pcap-rpcap.h	/^	SOCKET rmt_sockdata;		\/\/!< socket ID of the socket used for the data connection$/;"	m	struct:pcap_md
root	gencode.h	/^	struct block *root;$/;"	m	struct:icode	typeref:struct:icode::block
roundup	pcap-bpf.c	1942;"	d	file:
routeInfo	msdos/ndis2.h	/^        BYTE             routeInfo[30];$/;"	m	struct:_Ieee802Dot5Header
rpcap_auth	pcap-rpcap.h	/^struct rpcap_auth$/;"	s
rpcap_checkmsg	pcap-rpcap.c	/^int rpcap_checkmsg(char *errbuf, SOCKET sock, struct rpcap_header *header, uint8 first, ...)$/;"	f
rpcap_checkver	pcap-rpcap.c	/^static int rpcap_checkver(SOCKET sock, struct rpcap_header *header, char *errbuf)$/;"	f	file:
rpcap_createhdr	pcap-rpcap.c	/^void rpcap_createhdr(struct rpcap_header *header, uint8 type, uint16 value, uint32 length)$/;"	f
rpcap_deseraddr	pcap-rpcap.c	/^int rpcap_deseraddr(struct sockaddr_storage *sockaddrin, struct sockaddr_storage **sockaddrout, char *errbuf)$/;"	f
rpcap_filter	pcap-rpcap.h	/^struct rpcap_filter$/;"	s
rpcap_filterbpf_insn	pcap-rpcap.h	/^struct rpcap_filterbpf_insn$/;"	s
rpcap_findalldevs_if	pcap-rpcap.h	/^struct rpcap_findalldevs_if$/;"	s
rpcap_findalldevs_ifaddr	pcap-rpcap.h	/^struct rpcap_findalldevs_ifaddr$/;"	s
rpcap_header	pcap-rpcap.h	/^struct rpcap_header$/;"	s
rpcap_openreply	pcap-rpcap.h	/^struct rpcap_openreply$/;"	s
rpcap_pkthdr	pcap-rpcap.h	/^struct rpcap_pkthdr$/;"	s
rpcap_remoteact_getsock	pcap-rpcap.c	/^SOCKET rpcap_remoteact_getsock(const char *host, int *isactive, char *errbuf)$/;"	f
rpcap_sampling	pcap-rpcap.h	/^struct rpcap_sampling$/;"	s
rpcap_sendauth	pcap-rpcap.c	/^int rpcap_sendauth(SOCKET sock, struct pcap_rmtauth *auth, char *errbuf)$/;"	f
rpcap_senderror	pcap-rpcap.c	/^int rpcap_senderror(SOCKET sock, char *error, unsigned short errcode, char *errbuf)$/;"	f
rpcap_startcapreply	pcap-rpcap.h	/^struct rpcap_startcapreply$/;"	s
rpcap_startcapreq	pcap-rpcap.h	/^struct rpcap_startcapreq$/;"	s
rpcap_stats	pcap-rpcap.h	/^struct rpcap_stats$/;"	s
rpcap_stats_remote	pcap-rpcap.c	/^static struct pcap_stat *rpcap_stats_remote(pcap_t *p, struct pcap_stat *ps, int mode)$/;"	f	file:
rterm	grammar.y	/^rterm:	  head id		{ $$ = $2; }$/;"	l
rxBufDescrRec	msdos/ndis2.h	/^        RxBufDescrRec rxBufDescrRec[NDIS_RX_BUF_LENGTH];$/;"	m	struct:_RxBufDescr
rxBuffer	msdos/pkt_rx0.asm	/^   rxBuffer    db  RX_BUF_SIZE dup (0)        ; RX buffer$/;"	d
rxBufferAllocSize	msdos/ndis2.h	/^        WORD   rxBufferAllocSize;$/;"	m	struct:_MacChars
rxBufferSize	msdos/ndis2.h	/^        DWORD  rxBufferSize;$/;"	m	struct:_MacChars
rxDataCount	msdos/ndis2.h	/^        WORD          rxDataCount;$/;"	m	struct:_RxBufDescr
rxDataLen	msdos/ndis2.h	/^        WORD   rxDataLen;$/;"	m	struct:_RxBufDescrRec
rxDataPtr	msdos/ndis2.h	/^        BYTE  *rxDataPtr;$/;"	m	struct:_RxBufDescrRec
rxInOfs	msdos/pktdrvr.c	100;"	d	file:
rxInOfsFp	msdos/pktdrvr.c	/^  static WORD _far *rxOutOfsFp, *rxInOfsFp;$/;"	v	file:
rxOutOfs	msdos/pktdrvr.c	99;"	d	file:
rxOutOfsFp	msdos/pktdrvr.c	/^  static WORD _far *rxOutOfsFp, *rxInOfsFp;$/;"	v	file:
rx_bytes	pcap-dos.h	/^          DWORD  rx_bytes;              \/* total bytes received         *\/$/;"	m	struct:net_device_stats
rx_bytes	pcap/pcap.h	/^       u_long  rx_bytes;          \/* total bytes received         *\/$/;"	m	struct:pcap_stat_ex
rx_crc_errors	pcap-dos.h	/^          DWORD  rx_crc_errors;         \/* recv'd pkt with crc error    *\/$/;"	m	struct:net_device_stats
rx_crc_errors	pcap/pcap.h	/^       u_long  rx_crc_errors;     \/* recv'd pkt with crc error    *\/$/;"	m	struct:pcap_stat_ex
rx_dropped	pcap-dos.h	/^          DWORD  rx_dropped;            \/* no space in Rx buffers       *\/$/;"	m	struct:net_device_stats
rx_dropped	pcap/pcap.h	/^       u_long  rx_dropped;        \/* no space in Rx buffers       *\/$/;"	m	struct:pcap_stat_ex
rx_elem	pcap-dos.h	/^  struct rx_elem {$/;"	s
rx_errors	pcap-dos.h	/^          DWORD  rx_errors;             \/* bad packets received         *\/$/;"	m	struct:net_device_stats
rx_errors	pcap/pcap.h	/^       u_long  rx_errors;         \/* bad packets received         *\/$/;"	m	struct:pcap_stat_ex
rx_fifo_errors	pcap-dos.h	/^          DWORD  rx_fifo_errors;        \/* recv'r fifo overrun          *\/$/;"	m	struct:net_device_stats
rx_fifo_errors	pcap/pcap.h	/^       u_long  rx_fifo_errors;    \/* recv'r fifo overrun          *\/$/;"	m	struct:pcap_stat_ex
rx_frame_errors	pcap-dos.h	/^          DWORD  rx_frame_errors;       \/* recv'd frame alignment error *\/$/;"	m	struct:net_device_stats
rx_frame_errors	pcap/pcap.h	/^       u_long  rx_frame_errors;   \/* recv'd frame alignment error *\/$/;"	m	struct:pcap_stat_ex
rx_length_errors	pcap-dos.h	/^          DWORD  rx_length_errors;$/;"	m	struct:net_device_stats
rx_length_errors	pcap/pcap.h	/^       u_long  rx_length_errors;$/;"	m	struct:pcap_stat_ex
rx_missed_errors	pcap-dos.h	/^          DWORD  rx_missed_errors;      \/* recv'r missed packet         *\/$/;"	m	struct:net_device_stats
rx_missed_errors	pcap/pcap.h	/^       u_long  rx_missed_errors;  \/* recv'r missed packet         *\/$/;"	m	struct:pcap_stat_ex
rx_osize_errors	pcap-dos.h	/^          DWORD  rx_osize_errors;       \/* recv'r over-size error       *\/$/;"	m	struct:net_device_stats
rx_over_errors	pcap-dos.h	/^          DWORD  rx_over_errors;        \/* recv'r overrun error         *\/$/;"	m	struct:net_device_stats
rx_over_errors	pcap/pcap.h	/^       u_long  rx_over_errors;    \/* receiver ring buff overflow  *\/$/;"	m	struct:pcap_stat_ex
rx_packets	pcap-dos.h	/^          DWORD  rx_packets;            \/* total packets received       *\/$/;"	m	struct:net_device_stats
rx_packets	pcap/pcap.h	/^       u_long  rx_packets;        \/* total packets received       *\/$/;"	m	struct:pcap_stat_ex
rx_pool	pcap-dos.c	/^  static char *rx_pool = NULL;$/;"	v	file:
rx_ringbuf	pcap-dos.h	/^  struct rx_ringbuf {$/;"	s
rxbuf	pcap-dos.c	/^static char rxbuf [ETH_MAX+100]; \/* rx-buffer with some margin *\/$/;"	v	file:
s	gencode.h	/^	struct slist *s;	\/* stmt list *\/$/;"	m	struct:arth	typeref:struct:arth::slist
s	gencode.h	/^	struct stmt s;		\/* branch stmt *\/$/;"	m	struct:block	typeref:struct:block::stmt
s	gencode.h	/^	struct stmt s;$/;"	m	struct:slist	typeref:struct:slist::stmt
s	missing/snprintf.c	/^  unsigned char *s;$/;"	m	struct:state	file:
s	nametoaddr.c	/^	const char *s;$/;"	m	struct:eproto	file:
s	pcap/usb.h	/^	} s;$/;"	m	struct:_usb_header_mmapped	typeref:union:_usb_header_mmapped::__anon35
s6_addr	gencode.c	109;"	d	file:
s6_addr16	gencode.c	110;"	d	file:
s6_addr32	gencode.c	111;"	d	file:
s6_addr64	gencode.c	112;"	d	file:
sa_family_t	gencode.c	/^typedef unsigned short	sa_family_t;$/;"	t	file:
sappend	gencode.c	/^sappend(s0, s1)$/;"	f
scale_factor	sf-pcap-ng.c	/^	u_int scale_factor;		\/* time stamp scale factor for power-of-10 tsresol *\/$/;"	m	struct:pcap_ng_if	file:
scale_type	sf-pcap-ng.c	/^	tstamp_scale_type_t scale_type;	\/* how to scale *\/$/;"	m	struct:pcap_ng_if	file:
scale_type	sf-pcap.c	/^	tstamp_scale_type_t scale_type;$/;"	m	struct:pcap_sf	file:
scan_proc_net_dev	pcap-linux.c	/^scan_proc_net_dev(pcap_if_t **devlistp, char *errbuf)$/;"	f	file:
scan_sys_class_net	pcap-linux.c	/^scan_sys_class_net(pcap_if_t **devlistp, char *errbuf)$/;"	f	file:
sccsid	missing/getopt.c	/^static char sccsid[] = "@(#)getopt.c	8.3 (Berkeley) 4\/27\/95";$/;"	v	file:
screenSeg	msdos/pkt_rx0.asm	/^ screenSeg     dw  0B800h$/;"	d
screenSeg	msdos/pkt_rx1.s	/^screenSeg   dw  0B800h$/;"	d
sdup	gencode.c	/^sdup(compiler_state_t *cstate, const char *s)$/;"	f
sec	pcap/nflog.h	/^	u_int64_t	sec;$/;"	m	struct:nflog_timestamp
secondCount	msdos/pkt_rx0.asm	/^   secondCount dw  0                          ; # of bytes on 2nd call$/;"	d
secondCount	msdos/pktdrvr.h	/^        WORD  secondCount;        \/* and 2nd upcall            *\/$/;"	m	struct:__anon20
section_header_block	sf-pcap-ng.c	/^struct section_header_block {$/;"	s	file:
section_length	sf-pcap-ng.c	/^	u_int64_t	section_length;$/;"	m	struct:section_header_block	file:
selectable_fd	pcap-int.h	/^	int selectable_fd;$/;"	m	struct:pcap
send_fd	dlpisubs.h	/^	int send_fd;$/;"	m	struct:pcap_dlpi
send_request	pcap-dlpi.c	/^send_request(int fd, char *ptr, int len, char *what, char *ebuf)$/;"	f	file:
send_to_fd	pcap-sita.c	/^static void send_to_fd(int fd, int len, unsigned char *str) {$/;"	f	file:
sendqueue_transmit_op	pcap-int.h	/^	sendqueue_transmit_op_t sendqueue_transmit_op;$/;"	m	struct:pcap
sendqueue_transmit_op_t	pcap-int.h	/^typedef u_int	(*sendqueue_transmit_op_t)(pcap_t *, pcap_send_queue *, int);$/;"	t
sense	gencode.h	/^	int sense;$/;"	m	struct:block
septel_activate	pcap-septel.c	/^static pcap_t *septel_activate(pcap_t* handle) {$/;"	f	file:
septel_create	pcap-septel.c	/^pcap_t *septel_create(const char *device, char *ebuf, int *is_ours) {$/;"	f
septel_findalldevs	pcap-septel.c	/^septel_findalldevs(pcap_if_t **devlistp, char *errbuf)$/;"	f
septel_inject	pcap-septel.c	/^septel_inject(pcap_t *handle, const void *buf _U_, size_t size _U_)$/;"	f	file:
septel_read	pcap-septel.c	/^static int septel_read(pcap_t *p, int cnt, pcap_handler callback, u_char *user) {$/;"	f	file:
septel_setfilter	pcap-septel.c	/^static int septel_setfilter(pcap_t *p, struct bpf_program *fp) {$/;"	f	file:
septel_setnonblock	pcap-septel.c	/^septel_setnonblock(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
septel_stats	pcap-septel.c	/^static int septel_stats(pcap_t *p, struct pcap_stat *ps) {$/;"	f	file:
sequence	msdos/ndis2.h	/^        DWORD  sequence;$/;"	m	struct:_PktBuf
serv_addr	pcap-sita.c	/^	struct sockaddr_in	*serv_addr;	\/* the address control block for comms to this unit *\/$/;"	m	struct:unit	typeref:struct:unit::sockaddr_in	file:
serviceChars	msdos/ndis2.h	/^        BYTE *serviceChars;$/;"	m	struct:_CommonChars
serviceFlags	msdos/ndis2.h	/^        DWORD  serviceFlags;$/;"	m	struct:_MacChars
serviceStatus	msdos/ndis2.h	/^        BYTE *serviceStatus;$/;"	m	struct:_CommonChars
set_datalink_op	pcap-int.h	/^	set_datalink_op_t set_datalink_op;$/;"	m	struct:pcap
set_datalink_op_t	pcap-int.h	/^typedef int	(*set_datalink_op_t)(pcap_t *, int);$/;"	t
set_kernel_filter	pcap-linux.c	/^set_kernel_filter(pcap_t *handle, struct sock_fprog *fcode)$/;"	f	file:
set_multicast_list	pcap-dos.h	/^         void  (*set_multicast_list)(struct device *dev);$/;"	m	struct:device
set_poll_timeout	pcap-linux.c	/^set_poll_timeout(struct pcap_linux *handlep)$/;"	f	file:
setbuf	portability.h	83;"	d
setbuff_op	pcap-int.h	/^	setbuff_op_t setbuff_op;$/;"	m	struct:pcap
setbuff_op_t	pcap-int.h	/^typedef int	(*setbuff_op_t)(pcap_t *, int);$/;"	t
setdirection_op	pcap-int.h	/^	setdirection_op_t setdirection_op;$/;"	m	struct:pcap
setdirection_op_t	pcap-int.h	/^typedef int	(*setdirection_op_t)(pcap_t *, pcap_direction_t);$/;"	t
setfilter_op	pcap-int.h	/^	setfilter_op_t setfilter_op;$/;"	m	struct:pcap
setfilter_op_t	pcap-int.h	/^typedef int	(*setfilter_op_t)(pcap_t *, struct bpf_program *);$/;"	t
setmintocopy_op	pcap-int.h	/^	setmintocopy_op_t setmintocopy_op;$/;"	m	struct:pcap
setmintocopy_op_t	pcap-int.h	/^typedef int	(*setmintocopy_op_t)(pcap_t *, int);$/;"	t
setmode_op	pcap-int.h	/^	setmode_op_t setmode_op;$/;"	m	struct:pcap
setmode_op_t	pcap-int.h	/^typedef int	(*setmode_op_t)(pcap_t *, int);$/;"	t
setnonblock_op	pcap-int.h	/^	setnonblock_op_t setnonblock_op;$/;"	m	struct:pcap
setnonblock_op_t	pcap-int.h	/^typedef int	(*setnonblock_op_t)(pcap_t *, int, char *);$/;"	t
setup	pcap/usb.h	/^		pcap_usb_setup setup;$/;"	m	union:_usb_header_mmapped::__anon35
setup	pcap/usb.h	/^	pcap_usb_setup setup;$/;"	m	struct:_usb_header
setup_flag	pcap/usb.h	/^	char setup_flag;\/*if !=0 the urb setup header is not present*\/$/;"	m	struct:_usb_header
setup_flag	pcap/usb.h	/^	char setup_flag;\/*if !=0 the urb setup header is not present*\/$/;"	m	struct:_usb_header_mmapped
setup_signals	pcap-dos.c	/^static void setup_signals (void (*handler)(int))$/;"	f	file:
setuserbuffer_op	pcap-int.h	/^	setuserbuffer_op_t setuserbuffer_op;$/;"	m	struct:pcap
setuserbuffer_op_t	pcap-int.h	/^typedef int	(*setuserbuffer_op_t)(pcap_t *, int);$/;"	t
sf_cleanup	savefile.c	/^sf_cleanup(pcap_t *p)$/;"	f
sf_get_airpcap_handle	savefile.c	/^sf_get_airpcap_handle(pcap_t *pcap)$/;"	f	file:
sf_getevent	savefile.c	/^sf_getevent(pcap_t *pcap)$/;"	f	file:
sf_getnonblock	savefile.c	/^sf_getnonblock(pcap_t *p, char *errbuf)$/;"	f	file:
sf_inject	savefile.c	/^sf_inject(pcap_t *p, const void *buf _U_, size_t size _U_)$/;"	f	file:
sf_live_dump	savefile.c	/^sf_live_dump(pcap_t *p, char *filename, int maxsize, int maxpacks)$/;"	f	file:
sf_live_dump_ended	savefile.c	/^sf_live_dump_ended(pcap_t *p, int sync)$/;"	f	file:
sf_oid_get_request	savefile.c	/^sf_oid_get_request(pcap_t *p, bpf_u_int32 oid _U_, void *data _U_,$/;"	f	file:
sf_oid_set_request	savefile.c	/^sf_oid_set_request(pcap_t *p, bpf_u_int32 oid _U_, const void *data _U_,$/;"	f	file:
sf_pcap_h	sf-pcap.h	32;"	d
sf_pcap_ng_h	sf-pcap-ng.h	27;"	d
sf_sendqueue_transmit	savefile.c	/^sf_sendqueue_transmit(pcap_t *p, pcap_send_queue *queue, int sync)$/;"	f	file:
sf_setbuff	savefile.c	/^sf_setbuff(pcap_t *p, int dim)$/;"	f	file:
sf_setdirection	savefile.c	/^sf_setdirection(pcap_t *p, pcap_direction_t d)$/;"	f	file:
sf_setmintocopy	savefile.c	/^sf_setmintocopy(pcap_t *p, int size)$/;"	f	file:
sf_setmode	savefile.c	/^sf_setmode(pcap_t *p, int mode)$/;"	f	file:
sf_setnonblock	savefile.c	/^sf_setnonblock(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
sf_setuserbuffer	savefile.c	/^sf_setuserbuffer(pcap_t *p, int size)$/;"	f	file:
sf_stats	savefile.c	/^sf_stats(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
sf_stats_ex	savefile.c	/^sf_stats_ex(pcap_t *p, int *size)$/;"	f	file:
sf_write_header	sf-pcap.c	/^sf_write_header(pcap_t *p, FILE *fp, int linktype, int thiszone, int snaplen)$/;"	f	file:
sigfigs	pcap/pcap.h	/^	bpf_u_int32 sigfigs;	\/* accuracy of timestamps *\/$/;"	m	struct:pcap_file_header
simple_packet_block	sf-pcap-ng.c	/^struct simple_packet_block {$/;"	s	file:
sin6_addr	gencode.c	/^    struct in6_addr sin6_addr;	\/* IPv6 address *\/$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	file:
sin6_flowinfo	gencode.c	/^    u_int32_t sin6_flowinfo;	\/* IPv6 flow information *\/$/;"	m	struct:sockaddr_in6	file:
sin6_port	gencode.c	/^    u_int16_t sin6_port;		\/* Transport layer port # *\/$/;"	m	struct:sockaddr_in6	file:
size	pcap-dos.h	/^         DWORD size;              \/* size copied to this element *\/$/;"	m	struct:rx_elem
skip_line	etherent.c	/^skip_line(f)$/;"	f	file:
skip_space	etherent.c	/^skip_space(f)$/;"	f	file:
slen1	pcap-rpcap.h	/^	uint16 slen1;			\/* Length of the first authentication item (e.g. username) *\/$/;"	m	struct:rpcap_auth
slen2	pcap-rpcap.h	/^	uint16 slen2;			\/* Length of the second authentication item (e.g. password) *\/$/;"	m	struct:rpcap_auth
slength	optimize.c	/^slength(struct slist *s)$/;"	f	file:
slist	gencode.h	/^struct slist {$/;"	s
sll_addr	pcap/sll.h	/^	u_int8_t sll_addr[SLL_ADDRLEN];	\/* link-layer address *\/$/;"	m	struct:sll_header
sll_halen	pcap/sll.h	/^	u_int16_t sll_halen;		\/* link-layer address length *\/$/;"	m	struct:sll_header
sll_hatype	pcap/sll.h	/^	u_int16_t sll_hatype;		\/* link-layer address type *\/$/;"	m	struct:sll_header
sll_header	pcap/sll.h	/^struct sll_header {$/;"	s
sll_pkttype	pcap/sll.h	/^	u_int16_t sll_pkttype;		\/* packet type *\/$/;"	m	struct:sll_header
sll_protocol	pcap/sll.h	/^	u_int16_t sll_protocol;		\/* protocol *\/$/;"	m	struct:sll_header
sn_append_char	missing/snprintf.c	/^sn_append_char (struct state *state, unsigned char c)$/;"	f	file:
sn_reserve	missing/snprintf.c	/^sn_reserve (struct state *state, size_t n)$/;"	f	file:
snaplen	gencode.c	/^	int snaplen;$/;"	m	struct:_compiler_state	file:
snaplen	pcap-rpcap.h	/^	uint32 snaplen;						\/* Length of the snapshot (number of bytes to capture for each packet) *\/$/;"	m	struct:rpcap_startcapreq
snaplen	pcap/pcap.h	/^	bpf_u_int32 snaplen;	\/* max length saved portion of each pkt *\/$/;"	m	struct:pcap_file_header
snaplen	sf-pcap-ng.c	/^	bpf_u_int32	snaplen;$/;"	m	struct:interface_description_block	file:
snapshot	pcap-int.h	/^	int snapshot;$/;"	m	struct:pcap
snf_activate	pcap-snf.c	/^snf_activate(pcap_t* p)$/;"	f	file:
snf_boardnum	pcap-snf.c	/^        int          snf_boardnum;$/;"	m	struct:pcap_snf	file:
snf_create	pcap-snf.c	/^snf_create(const char *device, char *ebuf, int *is_ours)$/;"	f
snf_findalldevs	pcap-snf.c	/^snf_findalldevs(pcap_if_t **devlistp, char *errbuf)$/;"	f
snf_getnonblock	pcap-snf.c	/^snf_getnonblock(pcap_t *p, char *errbuf)$/;"	f	file:
snf_handle	pcap-snf.c	/^	snf_handle_t snf_handle; \/* opaque device handle *\/$/;"	m	struct:pcap_snf	file:
snf_inj	pcap-snf.c	/^        snf_inject_t snf_inj;    \/* inject handle, if inject is used *\/$/;"	m	struct:pcap_snf	file:
snf_inject	pcap-snf.c	/^snf_inject(pcap_t *p, const void *buf _U_, size_t size _U_)$/;"	f	file:
snf_pcap_stats	pcap-snf.c	/^snf_pcap_stats(pcap_t *p, struct pcap_stat *ps)$/;"	f	file:
snf_platform_cleanup	pcap-snf.c	/^snf_platform_cleanup(pcap_t *p)$/;"	f	file:
snf_read	pcap-snf.c	/^snf_read(pcap_t *p, int cnt, pcap_handler callback, u_char *user)$/;"	f	file:
snf_ring	pcap-snf.c	/^	snf_ring_t   snf_ring;   \/* opaque device ring handle *\/$/;"	m	struct:pcap_snf	file:
snf_set_datalink	pcap-snf.c	/^snf_set_datalink(pcap_t *p, int dlt)$/;"	f	file:
snf_setfilter	pcap-snf.c	/^snf_setfilter(pcap_t *p, struct bpf_program *fp)$/;"	f	file:
snf_setnonblock	pcap-snf.c	/^snf_setnonblock(pcap_t *p, int nonblock, char *errbuf)$/;"	f	file:
snf_timeout	pcap-snf.c	/^        int          snf_timeout;$/;"	m	struct:pcap_snf	file:
snf_timestamp_to_timeval	pcap-snf.c	/^snf_timestamp_to_timeval(const int64_t ts_nanosec, const int tstamp_precision)$/;"	f	file:
sock_bufferize	sockutils.c	/^int sock_bufferize(const char *buffer, int size, char *tempbuf, int *offset, int totsize, int checkonly, char *errbuf, int errbuflen)$/;"	f
sock_check_hostlist	sockutils.c	/^int sock_check_hostlist(char *hostlist, const char *sep, struct sockaddr_storage *from, char *errbuf, int errbuflen)$/;"	f
sock_cleanup	sockutils.c	/^void sock_cleanup(void)$/;"	f
sock_close	sockutils.c	/^int sock_close(SOCKET sock, char *errbuf, int errbuflen)$/;"	f
sock_cmpaddr	sockutils.c	/^int sock_cmpaddr(struct sockaddr_storage *first, struct sockaddr_storage *second)$/;"	f
sock_discard	sockutils.c	/^int sock_discard(SOCKET sock, int size, char *errbuf, int errbuflen)$/;"	f
sock_getascii_addrport	sockutils.c	/^int sock_getascii_addrport(const struct sockaddr_storage *sockaddr, char *address, int addrlen, char *port, int portlen, int flags, char *errbuf, int errbuflen)$/;"	f
sock_geterror	sockutils.c	/^void sock_geterror(const char *caller, char *errbuf, int errbuflen)$/;"	f
sock_getmyinfo	sockutils.c	/^int sock_getmyinfo(SOCKET sock, char *address, int addrlen, char *port, int portlen, int flags, char *errbuf, int errbuflen)$/;"	f
sock_init	sockutils.c	/^int sock_init(char *errbuf, int errbuflen)$/;"	f
sock_initaddress	sockutils.c	/^int sock_initaddress(const char *host, const char *port,$/;"	f
sock_ismcastaddr	sockutils.c	/^static int sock_ismcastaddr(const struct sockaddr *saddr)$/;"	f	file:
sock_open	sockutils.c	/^SOCKET sock_open(struct addrinfo *addrinfo, int server, int nconn, char *errbuf, int errbuflen)$/;"	f
sock_packet	pcap-linux.c	/^	int	sock_packet;	\/* using Linux 2.0 compatible interface *\/$/;"	m	struct:pcap_linux	file:
sock_packet	pcap-rpcap.h	/^	int		sock_packet;	\/* using Linux 2.0 compatible interface *\/$/;"	m	struct:pcap_md
sock_present2network	sockutils.c	/^int sock_present2network(const char *address, struct sockaddr_storage *sockaddr, int addr_family, char *errbuf, int errbuflen)$/;"	f
sock_recv	sockutils.c	/^int sock_recv(SOCKET sock, void *buffer, size_t size, int receiveall,$/;"	f
sock_send	sockutils.c	/^int sock_send(SOCKET socket, const char *buffer, int size, char *errbuf, int errbuflen)$/;"	f
sockaddr_in6	gencode.c	/^struct sockaddr_in6$/;"	s	file:
sockcount	sockutils.c	/^  static int sockcount = 0;	\/*!< Variable that allows calling the WSAStartup() only one time *\/$/;"	v	file:
sockctrl	pcap-rpcap.h	/^	SOCKET sockctrl;$/;"	m	struct:activehosts
socklen_t	pcap-linux.c	/^typedef int		socklen_t;$/;"	t	file:
socklen_t	sockutils.h	/^  typedef int socklen_t;$/;"	t
sockmain	pcap-new.c	/^SOCKET sockmain;$/;"	v
sof_ts_type_map	pcap-linux.c	/^} sof_ts_type_map[3] = {$/;"	v	typeref:struct:__anon8	file:
soft_timestamping_val	pcap-linux.c	/^	int soft_timestamping_val;$/;"	m	struct:__anon8	file:
sort_if_table	pcap-sita.c	/^static void sort_if_table(void) {$/;"	f	file:
source	msdos/pktdrvr.h	/^        ETHER source;             \/* E-net source address      *\/$/;"	m	struct:__anon20
source	msdos/pktdrvr.h	/^        ETHER source;$/;"	m	struct:__anon19
sourceAdr	msdos/pkt_rx0.asm	/^   sourceAdr   db  6           dup (0)        ; packet source address$/;"	d
space	optimize.c	/^	bpf_u_int32 *space;$/;"	m	struct:_opt_state	file:
space_flag	missing/snprintf.c	/^    space_flag     =  4,$/;"	e	enum:format_flags	file:
split_dname	pcap-dlpi.c	/^split_dname(char *device, int *unitp, char *ebuf)$/;"	f	file:
srcdir	Makefile	/^srcdir = .$/;"	m
ssap	msdos/ndis2.h	/^        BYTE  ssap;                      \/* 0xAA *\/$/;"	m	struct:_Ieee802Dot2SnapHeader
sscanf	portability.h	82;"	d
ssize_t	sockutils.c	/^typedef int ssize_t;$/;"	t	file:
startDebug	msdos/ndis2.c	/^static int     startDebug     = 0;$/;"	v	file:
start_frame	pcap/usb.h	/^	int32_t start_frame;	\/* for Isochronous events *\/$/;"	m	struct:_usb_header_mmapped
stat	dlpisubs.h	/^	struct pcap_stat stat;$/;"	m	struct:pcap_dlpi	typeref:struct:pcap_dlpi::pcap_stat
stat	pcap-dag.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_dag	typeref:struct:pcap_dag::pcap_stat	file:
stat	pcap-dos.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_dos	typeref:struct:pcap_dos::pcap_stat	file:
stat	pcap-int.h	/^	struct pcap_stat stat;		\/* used for pcap_stats_ex() *\/$/;"	m	struct:pcap	typeref:struct:pcap::pcap_stat
stat	pcap-linux.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_linux	typeref:struct:pcap_linux::pcap_stat	file:
stat	pcap-nit.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_nit	typeref:struct:pcap_nit::pcap_stat	file:
stat	pcap-rpcap.h	/^	struct pcap_stat stat;$/;"	m	struct:pcap_md	typeref:struct:pcap_md::pcap_stat
stat	pcap-septel.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_septel	typeref:struct:pcap_septel::pcap_stat	file:
stat	pcap-snit.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_snit	typeref:struct:pcap_snit::pcap_stat	file:
stat	pcap-snoop.c	/^	struct pcap_stat stat;$/;"	m	struct:pcap_snoop	typeref:struct:pcap_snoop::pcap_stat	file:
state	missing/snprintf.c	/^struct state {$/;"	s	file:
stats_ex_op	pcap-int.h	/^	stats_ex_op_t stats_ex_op;$/;"	m	struct:pcap
stats_ex_op_t	pcap-int.h	/^typedef struct pcap_stat *(*stats_ex_op_t)(pcap_t *, int *);$/;"	t	typeref:struct:stats_ex_op_t
stats_op	pcap-int.h	/^	stats_op_t stats_op;$/;"	m	struct:pcap
stats_op_t	pcap-int.h	/^typedef int	(*stats_op_t)(pcap_t *, struct pcap_stat *);$/;"	t
status	msdos/ndis2.h	/^        WORD      status;$/;"	m	struct:_ReqBlock
status	msdos/ndis2.h	/^        void  (*status) (void);$/;"	m	struct:_ProtDispatch
status	pcap/usb.h	/^	int32_t		status;$/;"	m	struct:_usb_isodesc
status	pcap/usb.h	/^	int32_t status;$/;"	m	struct:_usb_header
status	pcap/usb.h	/^	int32_t status;$/;"	m	struct:_usb_header_mmapped
statusGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (statusGlue);$/;"	v
stmt	gencode.h	/^struct stmt {$/;"	s
stmts	gencode.h	/^	struct slist *stmts;	\/* side effect stmts *\/$/;"	m	struct:block	typeref:struct:block::slist
stopDebug	msdos/ndis2.c	/^static int     stopDebug      = 0;$/;"	v	file:
str	missing/snprintf.c	/^  unsigned char *str;$/;"	m	struct:state	file:
strdup	portability.h	81;"	d
strioctl	dlpisubs.c	/^strioctl(int fd, int cmd, int len, char *dp)$/;"	f
strlcat	portability.h	91;"	d
strlcpy	portability.h	55;"	d
strlcpy	portability.h	59;"	d
struc	msdos/pkt_rx1.s	/^struc RX_ELEMENT$/;"	l
subtype	grammar.y	/^subtype:  NUM$/;"	l
succ	gencode.h	/^	struct block *succ;$/;"	m	struct:edge	typeref:struct:edge::block
sunatm_hdr	pcap-dag.c	/^struct sunatm_hdr {$/;"	s	file:
svrcapt	pcap-rpcap.h	/^	uint32 svrcapt;		\/* Packets captured by the RPCAP daemon and sent on the network *\/$/;"	m	struct:rpcap_stats
swap_linux_sll_header	pcap-common.c	/^swap_linux_sll_header(const struct pcap_pkthdr *hdr, u_char *buf)$/;"	f	file:
swap_linux_usb_header	pcap-common.c	/^swap_linux_usb_header(const struct pcap_pkthdr *hdr, u_char *buf,$/;"	f	file:
swap_nflog_header	pcap-common.c	/^swap_nflog_header(const struct pcap_pkthdr *hdr, u_char *buf)$/;"	f	file:
swap_pseudo_headers	pcap-common.c	/^swap_pseudo_headers(int linktype, struct pcap_pkthdr *hdr, u_char *data)$/;"	f
swapped	pcap-int.h	/^	int swapped;$/;"	m	struct:pcap
swapped_type_t	sf-pcap.c	/^} swapped_type_t;$/;"	t	typeref:enum:__anon3	file:
syntax	gencode.c	/^syntax(compiler_state_t *cstate)$/;"	f	file:
systemRequest	msdos/ndis2.h	/^        SystemRequest systemRequest;$/;"	m	struct:_CommonChars
systemRequestGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (systemRequestGlue);$/;"	v
sz	missing/snprintf.c	/^  size_t sz;$/;"	m	struct:state	file:
tDBufDescrRec	msdos/ndis2.h	/^        TDBufDescrRec tDBufDescrRec[NDIS_TD_BUF_LENGTH];$/;"	m	struct:_TDBufDescr
tDDataCount	msdos/ndis2.h	/^        WORD          tDDataCount;$/;"	m	struct:_TDBufDescr
tDDataLen	msdos/ndis2.h	/^        WORD   tDDataLen;$/;"	m	struct:_TDBufDescrRec
tDDataPtr	msdos/ndis2.h	/^        BYTE  *tDDataPtr;$/;"	m	struct:_TDBufDescrRec
tDPtrType	msdos/ndis2.h	/^        BYTE   tDPtrType;$/;"	m	struct:_TDBufDescrRec
tableSize	msdos/ndis2.h	/^        WORD   tableSize;$/;"	m	struct:_MacChars
tableSize	msdos/ndis2.h	/^        WORD   tableSize;$/;"	m	struct:_MacStatusTable
tableSize	msdos/ndis2.h	/^        WORD  tableSize;$/;"	m	struct:_CommonChars
tap	pcap-enet.c	/^	struct tap_header	tap;$/;"	m	struct:packet_header	typeref:struct:packet_header::tap_header	file:
term	grammar.y	/^term:	  rterm$/;"	l
thdr	pcap-linux.c	/^union thdr {$/;"	u	file:
theend	missing/snprintf.c	/^  unsigned char *theend;$/;"	m	struct:state	file:
this_op	optimize.c	/^this_op(struct slist *s)$/;"	f	file:
thiszone	pcap/pcap.h	/^	bpf_int32 thiszone;	\/* gmt to local correction *\/$/;"	m	struct:pcap_file_header
timeout	pcap-int.h	/^	int	timeout;	\/* timeout for buffering *\/$/;"	m	struct:pcap_opt
timeout	pcap-linux.c	/^	int	timeout;	\/* timeout for buffering *\/$/;"	m	struct:pcap_linux	file:
timeout	pcap-rpcap.h	/^	int		timeout;		\/* timeout for buffering *\/$/;"	m	struct:pcap_md
timestamp_high	sf-pcap-ng.c	/^	bpf_u_int32	timestamp_high;$/;"	m	struct:enhanced_packet_block	file:
timestamp_high	sf-pcap-ng.c	/^	bpf_u_int32	timestamp_high;$/;"	m	struct:packet_block	file:
timestamp_low	sf-pcap-ng.c	/^	bpf_u_int32	timestamp_low;$/;"	m	struct:enhanced_packet_block	file:
timestamp_low	sf-pcap-ng.c	/^	bpf_u_int32	timestamp_low;$/;"	m	struct:packet_block	file:
timestamp_sec	pcap-rpcap.h	/^	uint32 timestamp_sec;	\/* 'struct timeval' compatible, it represents the 'tv_sec' field *\/$/;"	m	struct:rpcap_pkthdr
timestamp_usec	pcap-rpcap.h	/^	uint32 timestamp_usec;	\/* 'struct timeval' compatible, it represents the 'tv_usec' field *\/$/;"	m	struct:rpcap_pkthdr
tlv_length	pcap/nflog.h	/^	u_int16_t	tlv_length;		\/* tlv length *\/$/;"	m	struct:nflog_tlv
tlv_type	pcap/nflog.h	/^	u_int16_t	tlv_type;		\/* tlv type *\/$/;"	m	struct:nflog_tlv
tooLarge	msdos/pktdrvr.c	/^       DWORD  tooLarge;     \/* size > ETH_MAX *\/$/;"	m	struct:__anon23	file:
tooSmall	msdos/pktdrvr.c	/^       DWORD  tooSmall;     \/* size < ETH_MIN *\/$/;"	m	struct:__anon23	file:
top_ctx	gencode.c	/^	jmp_buf top_ctx;$/;"	m	struct:_compiler_state	file:
totalBroadcastRx	msdos/ndis2.h	/^        DWORD  totalBroadcastRx;$/;"	m	struct:_MacStatusTable
totalBroadcastTx	msdos/ndis2.h	/^        DWORD  totalBroadcastTx;$/;"	m	struct:_MacStatusTable
totalBytesRx	msdos/ndis2.h	/^        DWORD  totalBytesRx;$/;"	m	struct:_MacStatusTable
totalBytesTx	msdos/ndis2.h	/^        DWORD  totalBytesTx;$/;"	m	struct:_MacStatusTable
totalDiscardBufSpaceRx	msdos/ndis2.h	/^        DWORD  totalDiscardBufSpaceRx;$/;"	m	struct:_MacStatusTable
totalDiscardHwErrorRx	msdos/ndis2.h	/^        DWORD  totalDiscardHwErrorRx;$/;"	m	struct:_MacStatusTable
totalDiscardHwErrorTx	msdos/ndis2.h	/^        DWORD  totalDiscardHwErrorTx;$/;"	m	struct:_MacStatusTable
totalDiscardTimeoutTx	msdos/ndis2.h	/^        DWORD  totalDiscardTimeoutTx;$/;"	m	struct:_MacStatusTable
totalFramesCrc	msdos/ndis2.h	/^        DWORD  totalFramesCrc;$/;"	m	struct:_MacStatusTable
totalFramesRx	msdos/ndis2.h	/^        DWORD  totalFramesRx;$/;"	m	struct:_MacStatusTable
totalFramesTx	msdos/ndis2.h	/^        DWORD  totalFramesTx;$/;"	m	struct:_MacStatusTable
totalMulticastRx	msdos/ndis2.h	/^        DWORD  totalMulticastRx;$/;"	m	struct:_MacStatusTable
totalMulticastTx	msdos/ndis2.h	/^        DWORD  totalMulticastTx;$/;"	m	struct:_MacStatusTable
total_fcode	pcap-linux.c	/^static struct sock_fprog	total_fcode$/;"	v	typeref:struct:sock_fprog	file:
total_insn	pcap-linux.c	/^static struct sock_filter	total_insn$/;"	v	typeref:struct:sock_filter	file:
total_length	sf-pcap-ng.c	/^	bpf_u_int32	total_length;$/;"	m	struct:block_header	file:
total_length	sf-pcap-ng.c	/^	bpf_u_int32	total_length;$/;"	m	struct:block_trailer	file:
tp_hdrlen	pcap-linux.c	/^	u_int	tp_hdrlen;	\/* hdrlen of tpacket_hdr for mmaped ring *\/$/;"	m	struct:pcap_linux	file:
tp_hdrlen	pcap-rpcap.h	/^	u_int	tp_hdrlen;		\/* hdrlen of tpacket_hdr for mmaped ring *\/$/;"	m	struct:pcap_md
tp_len	pcap-linux.c	/^	unsigned int	tp_len;$/;"	m	struct:tpacket_hdr_64	file:
tp_mac	pcap-linux.c	/^	unsigned short	tp_mac;$/;"	m	struct:tpacket_hdr_64	file:
tp_net	pcap-linux.c	/^	unsigned short	tp_net;$/;"	m	struct:tpacket_hdr_64	file:
tp_sec	pcap-linux.c	/^	unsigned int	tp_sec;$/;"	m	struct:tpacket_hdr_64	file:
tp_snaplen	pcap-linux.c	/^	unsigned int	tp_snaplen;$/;"	m	struct:tpacket_hdr_64	file:
tp_status	pcap-linux.c	/^	uint64_t	tp_status;$/;"	m	struct:tpacket_hdr_64	file:
tp_usec	pcap-linux.c	/^	unsigned int	tp_usec;$/;"	m	struct:tpacket_hdr_64	file:
tp_version	pcap-linux.c	/^	u_int	tp_version;	\/* version of tpacket_hdr for mmaped ring *\/$/;"	m	struct:pcap_linux	file:
tp_version	pcap-rpcap.h	/^	u_int	tp_version;		\/* version of tpacket_hdr for mmaped ring *\/$/;"	m	struct:pcap_md
tpacket_hdr_64	pcap-linux.c	/^struct tpacket_hdr_64 {$/;"	s	file:
transferData	msdos/ndis2.h	/^        TransferData      transferData;$/;"	m	struct:_MacUpperDispatch
transfer_type	pcap/usb.h	/^	u_int8_t transfer_type;$/;"	m	struct:_usb_header
transfer_type	pcap/usb.h	/^	u_int8_t transfer_type;$/;"	m	struct:_usb_header_mmapped
translate_IOP_to_pcap_name	pcap-sita.c	/^static char *translate_IOP_to_pcap_name(unit_t *u, char *IOPname, bpf_u_int32 iftype) {$/;"	f	file:
transmitChain	msdos/ndis2.h	/^        TransmitChain     transmitChain;$/;"	m	struct:_MacUpperDispatch
transmitConfirm	msdos/ndis2.h	/^        void  (*transmitConfirm) (void);$/;"	m	struct:_ProtDispatch
transmitConfirmGlue	msdos/ndis2.h	/^  RENAME_ASM_SYM (transmitConfirmGlue);$/;"	v
ts	pcap-int.h	/^    struct pcap_timeval ts;	\/* time stamp *\/$/;"	m	struct:pcap_sf_patched_pkthdr	typeref:struct:pcap_sf_patched_pkthdr::pcap_timeval
ts	pcap-int.h	/^    struct pcap_timeval ts;	\/* time stamp *\/$/;"	m	struct:pcap_sf_pkthdr	typeref:struct:pcap_sf_pkthdr::pcap_timeval
ts	pcap/pcap.h	/^	struct timeval ts;	\/* time stamp *\/$/;"	m	struct:pcap_pkthdr	typeref:struct:pcap_pkthdr::timeval
ts_sec	pcap/usb.h	/^	int64_t ts_sec;$/;"	m	struct:_usb_header
ts_sec	pcap/usb.h	/^	int64_t ts_sec;$/;"	m	struct:_usb_header_mmapped
ts_usec	pcap/usb.h	/^	int32_t ts_usec;$/;"	m	struct:_usb_header
ts_usec	pcap/usb.h	/^	int32_t ts_usec;$/;"	m	struct:_usb_header_mmapped
tsoffset	sf-pcap-ng.c	/^	u_int64_t tsoffset;		\/* time stamp offset *\/$/;"	m	struct:pcap_ng_if	file:
tsresol	sf-pcap-ng.c	/^	u_int tsresol;			\/* time stamp resolution *\/$/;"	m	struct:pcap_ng_if	file:
tstamp_precision	pcap-int.h	/^	int	tstamp_precision;$/;"	m	struct:pcap_opt
tstamp_precision_count	pcap-int.h	/^	int tstamp_precision_count;$/;"	m	struct:pcap
tstamp_precision_list	pcap-int.h	/^	u_int *tstamp_precision_list;$/;"	m	struct:pcap
tstamp_scale_type_t	sf-pcap-ng.c	/^} tstamp_scale_type_t;$/;"	t	typeref:enum:__anon12	file:
tstamp_scale_type_t	sf-pcap.c	/^} tstamp_scale_type_t;$/;"	t	typeref:enum:__anon4	file:
tstamp_type	pcap-int.h	/^	int	tstamp_type;$/;"	m	struct:pcap_opt
tstamp_type_choice	pcap.c	/^struct tstamp_type_choice {$/;"	s	file:
tstamp_type_choices	pcap.c	/^static struct tstamp_type_choice tstamp_type_choices[] = {$/;"	v	typeref:struct:tstamp_type_choice	file:
tstamp_type_count	pcap-int.h	/^	int tstamp_type_count;$/;"	m	struct:pcap
tstamp_type_list	pcap-int.h	/^	u_int *tstamp_type_list;$/;"	m	struct:pcap
tv_sec	pcap-int.h	/^    bpf_int32 tv_sec;		\/* seconds *\/$/;"	m	struct:pcap_timeval
tv_usec	pcap-int.h	/^    bpf_int32 tv_usec;		\/* microseconds *\/$/;"	m	struct:pcap_timeval
txBufDescrRec	msdos/ndis2.h	/^        TxBufDescrRec txBufDescrRec[NDIS_TX_BUF_LENGTH];$/;"	m	struct:_TxBufDescr
txBufPending	msdos/ndis2.c	/^static struct _PktBuf        *txBufPending;$/;"	v	typeref:struct:_PktBuf	file:
txBufferAllocSize	msdos/ndis2.h	/^        WORD   txBufferAllocSize;$/;"	m	struct:_MacChars
txBufferSize	msdos/ndis2.h	/^        DWORD  txBufferSize;$/;"	m	struct:_MacChars
txDataCount	msdos/ndis2.h	/^        WORD          txDataCount;$/;"	m	struct:_TxBufDescr
txDataLen	msdos/ndis2.h	/^        WORD   txDataLen;$/;"	m	struct:_TxBufDescrRec
txDataPtr	msdos/ndis2.h	/^        BYTE  *txDataPtr;$/;"	m	struct:_TxBufDescrRec
txImmedLen	msdos/ndis2.h	/^        WORD          txImmedLen;$/;"	m	struct:_TxBufDescr
txImmedPtr	msdos/ndis2.h	/^        BYTE         *txImmedPtr;$/;"	m	struct:_TxBufDescr
txPtrType	msdos/ndis2.h	/^        BYTE   txPtrType;$/;"	m	struct:_TxBufDescrRec
txQueueDepth	msdos/ndis2.h	/^        WORD   txQueueDepth;$/;"	m	struct:_MacChars
tx_aborted_errors	pcap-dos.h	/^          DWORD  tx_aborted_errors;$/;"	m	struct:net_device_stats
tx_aborted_errors	pcap/pcap.h	/^       u_long  tx_aborted_errors;$/;"	m	struct:pcap_stat_ex
tx_bytes	pcap-dos.h	/^          DWORD  tx_bytes;              \/* total bytes transmitted      *\/$/;"	m	struct:net_device_stats
tx_bytes	pcap/pcap.h	/^       u_long  tx_bytes;          \/* total bytes transmitted      *\/$/;"	m	struct:pcap_stat_ex
tx_carrier_errors	pcap-dos.h	/^          DWORD  tx_carrier_errors;$/;"	m	struct:net_device_stats
tx_carrier_errors	pcap/pcap.h	/^       u_long  tx_carrier_errors;$/;"	m	struct:pcap_stat_ex
tx_collisions	pcap-dos.h	/^          DWORD  tx_collisions;$/;"	m	struct:net_device_stats
tx_dropped	pcap-dos.h	/^          DWORD  tx_dropped;            \/* no space available for Tx    *\/$/;"	m	struct:net_device_stats
tx_dropped	pcap/pcap.h	/^       u_long  tx_dropped;        \/* no space available for Tx    *\/$/;"	m	struct:pcap_stat_ex
tx_errors	pcap-dos.h	/^          DWORD  tx_errors;             \/* packet transmit problems     *\/$/;"	m	struct:net_device_stats
tx_errors	pcap/pcap.h	/^       u_long  tx_errors;         \/* packet transmit problems     *\/$/;"	m	struct:pcap_stat_ex
tx_fifo_errors	pcap-dos.h	/^          DWORD  tx_fifo_errors;$/;"	m	struct:net_device_stats
tx_fifo_errors	pcap/pcap.h	/^       u_long  tx_fifo_errors;$/;"	m	struct:pcap_stat_ex
tx_heartbeat_errors	pcap-dos.h	/^          DWORD  tx_heartbeat_errors;$/;"	m	struct:net_device_stats
tx_heartbeat_errors	pcap/pcap.h	/^       u_long  tx_heartbeat_errors;$/;"	m	struct:pcap_stat_ex
tx_jabbers	pcap-dos.h	/^          DWORD  tx_jabbers;$/;"	m	struct:net_device_stats
tx_packets	pcap-dos.h	/^          DWORD  tx_packets;            \/* total packets transmitted    *\/$/;"	m	struct:net_device_stats
tx_packets	pcap/pcap.h	/^       u_long  tx_packets;        \/* total packets transmitted    *\/$/;"	m	struct:pcap_stat_ex
tx_window_errors	pcap-dos.h	/^          DWORD  tx_window_errors;$/;"	m	struct:net_device_stats
tx_window_errors	pcap/pcap.h	/^       u_long  tx_window_errors;$/;"	m	struct:pcap_stat_ex
type	grammar.y	/^type:	  NUM$/;"	l
type	msdos/ndis2.h	/^        WORD   type;$/;"	m	struct:_ProtocolChars
type	msdos/pktdrvr.h	/^        WORD  type;         \/* = 13 for 3C523                    *\/$/;"	m	struct:__anon17
type	msdos/pktdrvr.h	/^        char type[8];$/;"	m	struct:__anon16
type	pcap-rpcap.h	/^	uint16 type;			\/* Authentication type *\/$/;"	m	struct:rpcap_auth
type	pcap-rpcap.h	/^	uint8 type;							\/* RPCAP message type (error, findalldevs, ...) *\/$/;"	m	struct:rpcap_header
type	pcap.c	/^	int	type;$/;"	m	struct:tstamp_type_choice	file:
type	remote-ext.h	/^	int type;$/;"	m	struct:pcap_rmtauth
type_subtype	grammar.y	/^type_subtype:	ID		{ int i;$/;"	l
tzoff	pcap-int.h	/^	int tzoff;		\/* timezone offset *\/$/;"	m	struct:pcap
tzoff	pcap-rpcap.h	/^	int32 tzoff;						\/* Timezone offset *\/$/;"	m	struct:rpcap_openreply
u6_addr16	gencode.c	/^	u_int16_t	u6_addr16[8];$/;"	m	union:in6_addr::__anon5	file:
u6_addr32	gencode.c	/^	u_int32_t	u6_addr32[4];$/;"	m	union:in6_addr::__anon5	file:
u6_addr8	gencode.c	/^	u_int8_t		u6_addr8[16];$/;"	m	union:in6_addr::__anon5	file:
u_int16_t	pcap-stdinc.h	/^      typedef unsigned short u_int16_t;$/;"	t
u_int16_t	pcap-stdinc.h	90;"	d
u_int32	bpf/net/bpf_filter.c	85;"	d	file:
u_int32	net/bpf_filter.c	85;"	d	file:
u_int32_t	pcap-stdinc.h	/^      typedef unsigned int u_int32_t;$/;"	t
u_int32_t	pcap-stdinc.h	91;"	d
u_int64_t	pcap-stdinc.h	/^        typedef unsigned _int64 u_int64_t;$/;"	t
u_int64_t	pcap-stdinc.h	/^        typedef unsigned long long u_int64_t;$/;"	t
u_int64_t	pcap-stdinc.h	92;"	d
u_int8_t	pcap-stdinc.h	/^      typedef unsigned char u_int8_t;$/;"	t
u_int8_t	pcap-stdinc.h	89;"	d
uint16	pcap-rpcap.h	/^typedef unsigned short uint16;		\/* Provides a 16-bits unsigned integer *\/$/;"	t
uint32	pcap-rpcap.h	/^typedef unsigned int uint32;		\/* Provides a 32-bits unsigned integer *\/$/;"	t
uint64	pcap-dos.h	/^  typedef unsigned __int64  uint64;$/;"	t
uint64	pcap-dos.h	/^  typedef unsigned long long  uint64;$/;"	t
uint8	pcap-rpcap.h	/^typedef unsigned char uint8;		\/* Provides an 8-bits unsigned integer *\/$/;"	t
unMarkAll	gencode.h	360;"	d
unaligned_uint16_t	extract.h	/^} __attribute__((packed)) unaligned_uint16_t;$/;"	t	typeref:struct:__anon10
unaligned_uint32_t	extract.h	/^} __attribute__((packed)) unaligned_uint32_t;$/;"	t	typeref:struct:__anon11
unified_IOP_port_name	pcap-sita.c	/^static void unified_IOP_port_name(char *buf, size_t bufsize, const char *proto, unit_t *u, int IOPportnum) {$/;"	f	file:
unit	pcap-sita.c	/^typedef struct unit {$/;"	s	file:
unit_t	pcap-sita.c	/^} unit_t;$/;"	t	typeref:struct:unit	file:
units	pcap-sita.c	/^static unit_t		units[MAX_CHASSIS+1][MAX_GEOSLOT+1];	\/* we use indexes of 1 through 8, but we reserve\/waste index 0 *\/$/;"	v	file:
upperDispatchTable	msdos/ndis2.h	/^        BYTE *upperDispatchTable;$/;"	m	struct:_CommonChars
upperModuleName	msdos/ndis2.h	/^        BYTE  upperModuleName[16];$/;"	m	struct:_FailingModules
urb_len	pcap/usb.h	/^	u_int32_t urb_len;$/;"	m	struct:_usb_header
urb_len	pcap/usb.h	/^	u_int32_t urb_len;$/;"	m	struct:_usb_header_mmapped
usage	tests/capturetest.c	/^usage(void)$/;"	f	file:
usage	tests/filtertest.c	/^usage(void)$/;"	f	file:
usage	tests/opentest.c	/^usage(void)$/;"	f	file:
usage	tests/selpolltest.c	/^usage(void)$/;"	f	file:
usage	tests/valgrindtest.c	/^usage(void)$/;"	f	file:
usb_activate	pcap-usb-linux.c	/^usb_activate(pcap_t* handle)$/;"	f	file:
usb_cleanup_linux_mmap	pcap-usb-linux.c	/^usb_cleanup_linux_mmap(pcap_t* handle)$/;"	f	file:
usb_create	pcap-usb-linux.c	/^usb_create(const char *device, char *ebuf, int *is_ours)$/;"	f
usb_dev_add	pcap-usb-linux.c	/^usb_dev_add(pcap_if_t** alldevsp, int n, char *err_str)$/;"	f	file:
usb_findalldevs	pcap-usb-linux.c	/^usb_findalldevs(pcap_if_t **alldevsp, char *err_str)$/;"	f
usb_inject_linux	pcap-usb-linux.c	/^usb_inject_linux(pcap_t *handle, const void *buf, size_t size)$/;"	f	file:
usb_isodesc	pcap/usb.h	/^} usb_isodesc;$/;"	t	typeref:struct:_usb_isodesc
usb_mmap	pcap-usb-linux.c	/^int usb_mmap(pcap_t* handle)$/;"	f	file:
usb_read_linux	pcap-usb-linux.c	/^usb_read_linux(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
usb_read_linux_bin	pcap-usb-linux.c	/^usb_read_linux_bin(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
usb_read_linux_mmap	pcap-usb-linux.c	/^usb_read_linux_mmap(pcap_t *handle, int max_packets, pcap_handler callback, u_char *user)$/;"	f	file:
usb_setdirection_linux	pcap-usb-linux.c	/^usb_setdirection_linux(pcap_t *p, pcap_direction_t d)$/;"	f	file:
usb_stats_linux	pcap-usb-linux.c	/^usb_stats_linux(pcap_t *handle, struct pcap_stat *stats)$/;"	f	file:
usb_stats_linux_bin	pcap-usb-linux.c	/^usb_stats_linux_bin(pcap_t *handle, struct pcap_stat *stats)$/;"	f	file:
usbus_prefix	pcap-bpf.c	/^static const char usbus_prefix[] = "usbus";$/;"	v	file:
use_bpf	pcap-rpcap.h	/^	int		use_bpf;		\/* using kernel filter *\/$/;"	m	struct:pcap_md
use_conflict	optimize.c	/^use_conflict(struct block *b, struct block *succ)$/;"	f	file:
usec	pcap/nflog.h	/^	u_int64_t	usec;$/;"	m	struct:nflog_timestamp
user_tsresol	sf-pcap-ng.c	/^	u_int user_tsresol;		\/* time stamp resolution requested by the user *\/$/;"	m	struct:pcap_ng_sf	file:
username	remote-ext.h	/^	char *username;$/;"	m	struct:pcap_rmtauth
uset	gencode.h	/^typedef bpf_u_int32 *uset;$/;"	t
v0	optimize.c	/^	int v0, v1;$/;"	m	struct:valnode	file:
v1	optimize.c	/^	int v0, v1;$/;"	m	struct:valnode	file:
val	extract.h	/^	uint16_t	val;$/;"	m	struct:__anon10
val	extract.h	/^	uint32_t	val;$/;"	m	struct:__anon11
val	gencode.h	/^	int val[N_ATOMS];$/;"	m	struct:block
val	optimize.c	/^	int val;$/;"	m	struct:valnode	file:
valnode	optimize.c	/^struct valnode {$/;"	s	file:
value	pcap-rpcap.h	/^	uint16 value;						\/* Message-dependent value (not always used) *\/$/;"	m	struct:rpcap_header
value	pcap-rpcap.h	/^	uint32 value;		\/* Parameter related to the sampling method *\/$/;"	m	struct:rpcap_sampling
value	remote-ext.h	/^	int value;$/;"	m	struct:pcap_samp
vci	pcap-dag.c	/^	unsigned short	vci;		\/* VCI *\/$/;"	m	struct:sunatm_hdr	file:
vendorAdapter	msdos/ndis2.h	/^        BYTE   vendorAdapter;$/;"	m	struct:_MacChars
vendorAdapterDescription	msdos/ndis2.h	/^        BYTE  *vendorAdapterDescription;$/;"	m	struct:_MacChars
ver	pcap-rpcap.h	/^	uint8 ver;							\/* RPCAP version number *\/$/;"	m	struct:rpcap_header
version_major	pcap-int.h	/^	int version_major;$/;"	m	struct:pcap
version_major	pcap/pcap.h	/^	u_short version_major;$/;"	m	struct:pcap_file_header
version_minor	pcap-int.h	/^	int version_minor;$/;"	m	struct:pcap
version_minor	pcap/pcap.h	/^	u_short version_minor;$/;"	m	struct:pcap_file_header
vlan_offset	pcap-linux.c	/^	int	vlan_offset;	\/* offset at which to insert vlan tags; if -1, don't insert *\/$/;"	m	struct:pcap_linux	file:
vlan_stack_depth	gencode.c	/^	u_int vlan_stack_depth;$/;"	m	struct:_compiler_state	file:
vlan_tag	pcap/bpf.h	/^	u_short vlan_tag;$/;"	m	struct:bpf_aux_data
vlan_tag	pcap/vlan.h	/^struct vlan_tag {$/;"	s
vlan_tag_present	pcap/bpf.h	/^	u_short vlan_tag_present;$/;"	m	struct:bpf_aux_data
vlan_tci	pcap/vlan.h	/^	u_int16_t	vlan_tci;		\/* VLAN TCI *\/$/;"	m	struct:vlan_tag
vlan_tpid	pcap/vlan.h	/^	u_int16_t	vlan_tpid;		\/* ETH_P_8021Q *\/$/;"	m	struct:vlan_tag
vmap	optimize.c	/^	struct vmapinfo *vmap;$/;"	m	struct:_opt_state	typeref:struct:_opt_state::vmapinfo	file:
vmapinfo	optimize.c	/^struct vmapinfo {$/;"	s	file:
vnode_base	optimize.c	/^	struct valnode *vnode_base;$/;"	m	struct:_opt_state	typeref:struct:_opt_state::valnode	file:
vpi	pcap-dag.c	/^	unsigned char	vpi;		\/* VPI *\/$/;"	m	struct:sunatm_hdr	file:
vstore	optimize.c	/^vstore(struct stmt *s, int *valp, int newval, int alter)$/;"	f	file:
wIndex	pcap/usb.h	/^	u_int16_t wIndex;$/;"	m	struct:_usb_setup
wLength	pcap/usb.h	/^	u_int16_t wLength;$/;"	m	struct:_usb_setup
wValue	pcap/usb.h	/^	u_int16_t wValue;$/;"	m	struct:_usb_setup
wait_for_all_answers	pcap-sita.c	/^static void wait_for_all_answers(void) {$/;"	f	file:
wait_proc	pcap-dos.c	/^	void (*wait_proc)(void); \/* call proc while waiting *\/$/;"	m	struct:pcap_dos	file:
warn	tests/filtertest.c	/^warn(const char *fmt, ...)$/;"	f	file:
warning	tests/capturetest.c	/^warning(const char *fmt, ...)$/;"	f	file:
warning	tests/opentest.c	/^warning(const char *fmt, ...)$/;"	f	file:
warning	tests/selpolltest.c	/^warning(const char *fmt, ...)$/;"	f	file:
warning	tests/valgrindtest.c	/^warning(const char *fmt, ...)$/;"	f	file:
watt32_recv_hook	pcap-dos.c	/^static void watt32_recv_hook (u_char *dummy, const struct pcap_pkthdr *pcap,$/;"	f	file:
word1	msdos/ndis2.h	/^        WORD      word1;$/;"	m	struct:_ReqBlock
words	msdos/ndis2.h	/^        WORD  words[3];$/;"	m	union:_HardwareAddress
wpcap_version_string	pcap.c	/^static const char wpcap_version_string[] = WINPCAP_VER_STRING;$/;"	v	file:
wrapup	pcap-enet.c	/^wrapup(int fd)$/;"	f
wrongHandle	msdos/pktdrvr.c	/^       DWORD  wrongHandle;  \/* upcall to wrong handle *\/$/;"	m	struct:__anon23	file:
wsockinit	pcap-win32.c	/^wsockinit(void)$/;"	f
xdtoi	etherent.c	/^xdtoi(c)$/;"	f	file:
xdtoi	nametoaddr.c	/^xdtoi(c)$/;"	f	file:
xfer_flags	pcap/usb.h	/^	u_int32_t xfer_flags;	\/* copy of URB's transfer flags *\/$/;"	m	struct:_usb_header_mmapped
xfer_to_a	gencode.c	/^xfer_to_a(compiler_state_t *cstate, struct arth *a)$/;"	f	file:
xfer_to_x	gencode.c	/^xfer_to_x(compiler_state_t *cstate, struct arth *a)$/;"	f	file:
xmit	pcap-dos.h	/^         int   (*xmit) (struct device *dev, const void *buf, int len);$/;"	m	struct:device
xmitPending	msdos/ndis2.c	/^static volatile int xmitPending;$/;"	v	file:
xyzprintf	missing/snprintf.c	/^xyzprintf (struct state *state, const char *char_format, va_list ap)$/;"	f	file:
zbuf1	pcap-bpf.c	/^	u_char *zbuf1, *zbuf2, *zbuffer;$/;"	m	struct:pcap_bpf	file:
zbuf1	pcap-rpcap.h	/^	u_char *zbuf1, *zbuf2, *zbuffer;$/;"	m	struct:pcap_md
zbuf2	pcap-bpf.c	/^	u_char *zbuf1, *zbuf2, *zbuffer;$/;"	m	struct:pcap_bpf	file:
zbuf2	pcap-rpcap.h	/^	u_char *zbuf1, *zbuf2, *zbuffer;$/;"	m	struct:pcap_md
zbuffer	pcap-bpf.c	/^	u_char *zbuf1, *zbuf2, *zbuffer;$/;"	m	struct:pcap_bpf	file:
zbuffer	pcap-rpcap.h	/^	u_char *zbuf1, *zbuf2, *zbuffer;$/;"	m	struct:pcap_md
zbufsize	pcap-bpf.c	/^	u_int zbufsize;$/;"	m	struct:pcap_bpf	file:
zbufsize	pcap-rpcap.h	/^	u_int zbufsize;$/;"	m	struct:pcap_md
zero_flag	missing/snprintf.c	/^    zero_flag      = 16$/;"	e	enum:format_flags	file:
zerocopy	pcap-bpf.c	/^	u_int zerocopy;$/;"	m	struct:pcap_bpf	file:
zerocopy	pcap-rpcap.h	/^	u_int zerocopy;$/;"	m	struct:pcap_md
