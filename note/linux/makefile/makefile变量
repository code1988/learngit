----------------------------------------------------------------------------------------
makefile中的变量大小写敏感，分为用户自定义变量、预定义变量、自动变量、环境变量
----------------------------------------------------------------------------------------

1. 用户自定义变量通常使用小写字母作为变量名

2. 常见的预定义变量
	CC			-	C编译器的名称，默认值cc，而在linux下cc一般又是一个符号链接，指向gcc
	RM			- 	默认值rm -f
	CFLAGS		-	编译相关选项集合(比如 -g、-O、-I指定头文件的路径等)，无默认值
	LDFLAGS		- 	链接相关的选项集合(主要是-L指定库文件所在目录)，无默认值
	LDLIBS		- 	链接的具体库文件路径集合，无默认值
	CURDIR		-	当前路径

	
3. 常见的自动变量
	$@	-	规则中的目标文件
	$<	-	第一个依赖对象的名称
	$%	-	当目标是库文件时，表示规则中的目标成员名；当目标不是库文件时，其值为空
	$*	- 	在模式规则中表示"%"及其之前的部分；而在一般规则中，只有当目标文件的后缀是make所识别的，那么$*就是除了后缀的那一部分，否则其值为空
	$^	-	所有不重复的依赖对象，以空格分开
	$+	-	类似于$^，只是不去除重复的依赖对象
	$?	-	所有比目标文件新的依赖对象，以空格分开

	备注：自动变量只会出现在规则的命令中;
		  以上罗列的自动变量中，$@、$<、$%、$*在展开时每次都只会有一个文件，而$^、$+、$?在展开时是一个文件列表

	老版本的GNU make特性中,以上这些自动变量还可以和"D"、"F"搭配，从而获取文件的目录名和不带路径的文件名，
	而新版本中这些功能都可以由dir和notdir替代.
	
	备注：这些搭配了"D"和"F"的变量不但只能在规则的命令中使用，而且只能应用在显式规则和静态模式规则，也就是说不能应用在通过模式规则定义的隐含规则中

4. makefile在启动时会自动读取当前系统中的环境变量,如$(PWD)就是当前路径

5. makefile标准的变量引用是用$()，但是makefile的执行离不开shell环境，因此使用${}也可以访问
----------------------------------------------------------------------------------------

1. makefile规则的命令中，"@"符号可以加在每行shell命令头部，表示执行make时不打印该命令本身
2. "-"符号可以加在shell命令和一些关键字前(比如-rm、-include)，表示即便某些操作出现了问题，也忽略掉，继续执行后面的命令
