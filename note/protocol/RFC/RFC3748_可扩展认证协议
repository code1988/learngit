摘要
    本文档用于替代RFC2284，改动的地方见附录A。

1. 介绍
    本文档定义了EAP（一种支持多种认证方式的认证架构）。EAP通常直接工作在不需要IP的数据链路层，比如PPP、IEEE 802。
    EAP提供了自己的方式去支持duplicate elimination 和重传机制，但这需要依赖低层排序保证。分片功能不被EAP本身支持，
    但有些具体的EAP方式可能支持该功能。
    IEEE 802有线媒体上的EAP封装在IEEE-802.1X上有描述；IEEE 无线网上的EAP封装在IEEE 802.11i上有描述。
    EAP架构的其中一个优势是灵活性，因为EAP可以用于搭载一种具体的认证机制，而不是去要求认证者为了支持一个新的认证
    方式而进行升级，EAP让后台认证服务器可以执行多种甚至是全部的认证方式。

    1.1 规范说明
        MUST        “必须”意思是该项是本规范的绝对要求。
        MUST NOT    “不得”，意思是该项是本规范所绝对禁止的。
        SHOULD      “应该”意思是在某些场合可能由于某种原因忽略该项，但是协议的完全实现必须能够理解该项，在决定其他方式之前要经过仔细考虑。
        MAY         “可以”意思是该项可以作为可选集使用，不包含该选项的协议实现必须能够和包含了该选项的实现交互协作。

    1.2 术语(在IEEE 802.1X中，以下术语有同样的含义)
        认证者      : 启动EAP认证的链路一端（也就是认证系统）
        对端/请求者 : 响应认证系统的链路一端
        后台认证服务器  : 为认证者提供认证服务的实体，该服务器通常采用EAP方式和认证者交互
        AAA         : 认证、授权、计费的简称
        可显示的消息: 人可读字符串，这种消息必须遵循UTF-8转换格式
        EAP服务器   : 在不使用后台认证服务器的场合，EAP服务器就集成为认证系统的一部分；在使用那个后台认证服务器的场合，EAP服务器位于后台认证服务器上
        静静丢弃    : 直接丢弃数据包，不做进一步处理。实现时SHOULD提供记录该事件的能力（包含所丢弃报文的内容），还SHOULD在统计计数器中记录该事件
        认证成功    : 在本文档的语境中，认证成功也就是一次EAP报文的交互，结果是认证系统"准备"允许对端的访问。
                      认证成功通常只是意味着3A中的"认证"和"授权"两方面，所以可能出现的情况是对端在认证系统上虽然认证成功了，但访问还是被拒绝 

    1.3 适用性
        EAP设计的初衷是用于网络访问的认证，是一种只支持单报文处理的锁步协议，所以将EAP用于另外的目的，比如批量数据传输，是不被推荐的。
        EAP虽然支持重传机制，但它是假定低层已经保证了报文的顺序为前提的，所以顺序错乱的报文接收将不被支持重传机制。
        EAP不支持分片和重组，后续的EAP-TLS虽然提供了支持，但是当一个EAP报文超过了链路上的长度限制后，使用这些方法将以提高复杂度为代价。
        EAP认证是从认证系统启动的，但是很多认证协议是从对端启动的，所以就需要增加1到2个额外的消息运行在EAP之上
        基于证书的认证虽然被EAP支持，但由于证书链通常比较大需要分片传输，导致产生了大量的往返交互。而又因为EAP是运行在低层的以太网链路上，
        丢包问题必然存在，所以大量的往返交互最终会增加认证出现问题的可能性。


2. 可扩展认证协议（EAP）
    EAP认证交互流程如下：
        [1]. 认证系统向对端发送一个请求报文，在请求报文中有一个类型字段用来表明请求的内容，比如ID、MD5挑战字等。MD5挑战字类型对应于CHAP认证协议。
             通常认证系统首先会发送一个ID请求报文，但这并不是必须的
        [2]. 对端对一个有效的请求报文回应一个应答报文。和请求报文一样，应答报文中也包含一个类型字段，对应于所回应的请求报文中的类型字段。
        [3]. 认证系统再发送一个额外的请求报文，然后对端回一个相应的应答报文。只要有需要，这种"请求"/"应答"的交互将继续下去。
             由于EAP是一种锁步协议，所以除了初始的请求报文，在收到一个有效的应答报文之前，不允许发送一个新的请求报文。
             作为认证系统，有重传请求报文的职责，在一定数量的重传动作之后，认证系统SHOULD结束这次EAP会话。
             当还处于重传过程中或者从对端获取应答报文失败时，认证系统MUST NOT 发送一个成功/失败报文。
        [4]. 一种结果是直到认证系统无法认证对端（一个或多个请求报文收到了不被接受的应答报文），在这种情况下认证系统MUST向对端发送一个EAP失败报文；
             另一种结果是认证系统判定认证成功，在这种情况下认证系统MUST向对端发送一个EAP成功报文

    优势：
        EAP可以支持多种认证机制，而无需在预协商过程中指定;
        NAS设备不一定需要理解每种认证方式，而是MAY作为一个代理，将认证报文透传给后台认证服务器，当然，支持透传是个可选项;
        一个认证系统MAY直接认证完结了一些对端，同时对于那些不在认证系统里完成认证的一些对端，这个认证服务器就扮演了一个透传的角色;
        做到了认证系统和后台认证服务器的业务分离，从而简化了证书的管理和认证策略的制定。

    劣势：
        用于PPP时，EAP需要在LCP中增加一个新的认证协议，这样现有的PPP实现要想使用EAP就必须进行修改。同时，使用EAP也和现有的在LCP协商阶段指定认证方法的模型不一致。
        交换机或接入点必须要支持IEEE 802.1X才能使用EAP   

    2.1 支持序列
        暂略

    2.2 EAP复用模型
        从概念上讲，EAP的实现包含了下列这些组件：
        [1]. 低层
            低层主要是负责在认证系统和对端之间发送/接收EAP帧。EAP已经运行在大量的低层上，比如PPP、IEEE有线LANs（IEEE 802.1X）、IEEE无线LANs（IEEE 802.11）、
            UDP（L2TP、IKEV2）、TCP等。
        [2]. EAP层
            EAP层通过低层收发EAP报文，实现duplicate detection和重传，以及在认证系统和对端之间传输EAP消息。
        [3]. EAP对端和认证系统层
            基于"Code"字段，EAP层解复用输入的EAP报文给对端和认证系统。在一个给定的主机上，EAP在实现时通常都会支持对端和认证系统两个功能。
        [4]. EAP方式层
            这层主要执行认证算法。由于EAP本身不支持分片功能，EAP方式层就有了这个职责。
        

