#!/bin/sh
1.  wc [option] [file]   : 统计指定文件中行、单词、字节数量
    以下是常用option:
            -l  :只统计行数
            -w  :只统计单词数
            -m  :只统计字节数
    不指定option时，wc统计以上3项的值.
    不指定file时，wc从标准输入读取，所以几种常见的用法如下：
    wc -l < ./testfile      # 统计当前目录下的testfile文件行数
    cat ./testfile | wc -l  # 统计当前目录下的testfile文件行数

    wc -l ./testfile        # 统计当前目录下的testfile文件行数，跟上面两种的差别是这种方法额外打印出文件名

2. du [option] [file]   : 统计文件或目录占用的空间
    以下是常用的option:
            -h  :使用人类可读的格式打印占用的空间大小(比如1K、1M、1G)
            -a  :递归统计指定的文件或目录占用的空间，并且递归打印出所有的文件和目录
            -s  :递归统计指定的文件或目录占用的空间，但是不递归打印出所有的文件和目录
    不指定option时，只会递归打印出指定目录及其子目录
    不指定file时，缺省统计当前目录

3. cut [option] [file]  : 从指定文件中选取指定部分输出到标准输出
    以下是常用的option:
            -b  :选取指定的字节
            -c  :选取指定的字符(不如1个汉字字符会占用2个字节)
            -f  :选取指定的段
    备注：以上3个option同时只能使用一个，并且都支持以下几种范围表示：
                    N,M     - 选取第N个和第M个字节/字符/段
                    N-      - 选取第N个开始到所在行结束的所有字节/字符/段
                    N-M     - 选取第N个到第M个之间(包含N和M)的所有字节/字符/段
                    -N      - 选取第1个到第N个之间的所有字节/字符/段
    除此之外，还有以下option:
            -d  :使用指定的分隔符(缺省的分隔符是制表符)对内容切割成数段，只能配合 -f 一起使用

    不指定file时，cut从标准输入读取信息
    echo $PATH | cut -d ":" -f 1,4-     # 将环境变量用":"分割，然后选取第1段、第4段以及之后的所有段
    echo hello | cut -b 2,5             # 选取第2个和第5个字节  "eo"
    echo 你好 | cut -c 2                # 选取第2个字符 "好"

4. dd [option]  : 复制文件并对原文件内容进行转换和格式化处理
    以下是常用的option:
            if=file     : 从文件file中读取，如果不指定该选项，默认会从标准输入中读取
            of=file     : 写入到文件file中(默认首先会把file截断为0)，如果不指定该选项，默认会写到标准输输出
            bs=bytes    : 每次读和写的字节数，作为一个单位的块
            count=blocks: 拷贝的块数，如果不指定该选项，默认会一直拷贝到输入文件的最后一块
    以下是块大小支持的计量单位:
            c   - 1字节
            b   - 512字节
            k   - 1024字节
            M   - 1024*1024字节
            G   - 1024*1024*1024字节

    dd if=/dev/zero of=./tmp.file bs=1M count=1     # 创建一个1M大小的文件tmp.file，其内容为全"\0"

5. find [path...] [rule] [action]   : 在指定目录中查找匹配文件，然后执行相应动作
    当不指定路径时，缺省路径就是当前目录
    当不指定匹配规则时，缺省就是指定目录下的所有文件
    当不指定动作时，缺省动作就是"-print"(打印到标准输出)
    以下是常用的rule：
            -name       : 根据指定的文件名规则进行匹配，
            -mtime      : 根据指定的文件内容修改时间规则进行匹配，格式如下：
                                        "+N":匹配出最后一次修改发生在N+1天之前的所有文件；
                                        "-N":匹配出最后一次修改发生在N天以内的所有文件；
                                        "N" :匹配出最后一次修改发生在距现在第N天那一整天的所有文件
            -atime      : 根据指定的文件访问时间规则进行匹配，格式同上
            -ctime      : 根据指定的文件状态修改时间规则进行匹配，格式同上
            -readable   : 匹配出所有可读文件
            -writable   : 匹配出所有可写文件
            -executable : 匹配出所有可执行文件
            -type       : 根据文件类型进行匹配，合法类型如下：
                                        "b" :块设备文件
                                        "f" :普通文件
                                        "l" :符号链接文件
                                        "p" :管道文件
                                        "c" :字符设备文件
                                        "d" :目录
    以下是常用的action：
            -print      : 将匹配得到的文件名打印到标准输出
            -delete     : 删除匹配得到的文件
            -exec       : 对匹配的到的文件执行该参数所给出的shell命令，命令具有统一格式"command {} \;"

    find ./ -name "*.sh"            # 打印当前文件夹下所有以".sh"结尾的文件
    find -mtime -4                  # 打印当前文件夹下最后一次修改发生在4天以内的所有文件
    find -type f -exec ls -l {} \;  # 匹配出当前文件夹下所有普通文件，然后使用"ls -l"命令列出这些文件
